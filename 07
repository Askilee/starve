/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./public/src/main.js":
/*!****************************!*\
  !*** ./public/src/main.js ***!
  \****************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;let gaugesTimer = 5;\r\nlet healtime = 0;\r\nlet xray = false;\r\ndocument.addEventListener('keydown',(event)=>{\r\n    switch(event.code){\r\n        case \"KeyX\":\r\n            xray=!xray;\r\n            break;\r\n    }\r\n});\r\nfunction RNG(seed) {\r\n    this.m = 2147483648;\r\n    this.a = 1103515245;\r\n    this.c = 12345;\r\n    this.state = seed ? seed : Math.floor(Math.random() * (this.m - 1));\r\n}\r\n;\r\nRNG.prototype.random = function () {\r\n    this.state = (this.a * this.state + this.c) % this.m;\r\n    return this.state / this.m;\r\n};\r\nRNG.prototype.set_seed = function (seed) {\r\n    this.state = seed;\r\n};\r\nRAND_SIZE = 1e4;\r\nRANDOM = [];\r\nvar rrr = new RNG;\r\nrrr.set_seed((new Date).getTime());\r\nfor (var k = 0; k < RAND_SIZE; k++) RANDOM.push(rrr.random());\r\nUtils = {open_in_new_tab: function (url) {\r\n        var win = window.open(url, \"_blank\");\r\n        win.focus();\r\n    }, open_in_new_box: function (url) {\r\n        window.open(url, \"_blank\", \"location=yes,height=570,width=520,scrollbars=yes,status=yes\");\r\n    }, compare_object: function (a, b) {\r\n        for (var i in a) {\r\n            if (a[i] != b[i]) return false;\r\n        }\r\n        return true;\r\n    }, compare_array: function (a, b) {\r\n        if (a.length != b.length) return false;\r\n        for (var i = 0; i < a.length; i++) {\r\n            if (typeof a == \"object\") {\r\n                if (!this.compare_object(a[i], b[i])) return false;\r\n            } else if (a[i] != b[i]) return false;\r\n        }\r\n        return true;\r\n    }, copy_vector: function (source, target) {\r\n        target.x = source.x;\r\n        target.y = source.y;\r\n    }, get_vector: function (v1, v2) {\r\n        return {x: v1.x - v2.x, y: v1.y - v2.y};\r\n    }, mul_vector: function (v, mul) {\r\n        v.x *= mul, v.y *= mul;\r\n    }, scalar_product: function (v1, v2) {\r\n        return v1.x * v2.x + v1.y * v2.y;\r\n    }, norm: function (v) {\r\n        return Math.sqrt(v.x * v.x + v.y * v.y);\r\n    }, sign: function (a) {\r\n        if (a < 0) return -1; else return 1;\r\n    }, cross_product: function (v1, v2) {\r\n        return v1.x * v2.y - v1.y * v2.x;\r\n    }, get_angle_2: function (ax, ay, bx, by) {\r\n        var dy = by - ay;\r\n        var dx = bx - ax;\r\n        return Math.atan2(dy, dx);\r\n    }, get_angle: function (v1, v2) {\r\n        return Math.acos(this.scalar_product(v1, v2) / (this.norm(v1) * this.norm(v2))) * this.sign(this.cross_product(v1, v2));\r\n    }, getURLData: function (_name) {\r\n        _url = location.href;\r\n        _name = _name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\r\n        var regexS = \"[\\\\?&]\" + _name + \"=([^&#]*)\";\r\n        var _regex = new RegExp(regexS);\r\n        var results = _regex.exec(_url);\r\n        return results === null ? null : results[1];\r\n    }, reduceAngle: function (a1, a2) {\r\n        var PI2 = Math.PI * 2;\r\n        a2 = (a2 % PI2 + PI2) % PI2;\r\n        if (Math.abs(a1 - a2) > Math.PI) {\r\n            if (a1 > a2) return a2 + PI2; else return a2 - PI2;\r\n        }\r\n        return a2;\r\n    }, get_std_angle: function (o1, o2) {\r\n        return this.get_angle({x: 1, y: 0}, this.get_vector(o1, o2));\r\n    }, dist: function (a, b) {\r\n        return Math.sqrt((b.x - a.x) * (b.x - a.x) + (b.y - a.y) * (b.y - a.y));\r\n    }, build_vector: function (d, a) {\r\n        return {x: Math.cos(a) * d, y: Math.sin(a) * d};\r\n    }, add_vector: function (source, target) {\r\n        source.x += target.x;\r\n        source.y += target.y;\r\n    }, sub_vector: function (source, target) {\r\n        source.x -= target.x;\r\n        source.y -= target.y;\r\n    }, translate_vector: function (v, x, y) {\r\n        v.x += x;\r\n        v.y += y;\r\n    }, translate_new_vector: function (v, x, y) {\r\n        return {x: v.x + x, y: v.y + y};\r\n    }, move: function (o, d, a) {\r\n        o.x += Math.cos(a) * d;\r\n        o.y += Math.sin(a) * d;\r\n    }, middle: function (a, b) {\r\n        return Math.floor((a - b) / 2);\r\n    }, middle_point: function (a, b) {\r\n        return {x: (a.x + b.x) / 2, y: (a.y + b.y) / 2};\r\n    }, rand_sign: function () {\r\n        return Math.random() > 0.5 ? 1 : -1;\r\n    }, get_rand_pos_in_circle: function (x, y, d) {\r\n        var sx = this.rand_sign();\r\n        var sy = this.rand_sign();\r\n        var a = Math.random() * Math.PI / 2;\r\n        return {x: Math.floor(x + Math.cos(a) * sx * d), y: Math.floor(y + Math.sin(a) * sy * d)};\r\n    }, Box: function (x, y, w, h) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.w = w;\r\n        this.h = h;\r\n    }, randomize_list: function (l) {\r\n        a = [];\r\n        a.push.apply(a, l);\r\n        var ra = [];\r\n        while (a.length > 0) {\r\n            var r = Math.floor(Math.random() * a.length);\r\n            ra.push(a[r]);\r\n            a.splice(r, 1);\r\n        }\r\n        return ra;\r\n    }, restore_number: function (n) {\r\n        if (n >= 2e4) n = (n - 2e4) * 1e3; else if (n >= 1e4) n = (n - 1e4) * 100;\r\n        return n;\r\n    }, simplify_number: function (n) {\r\n        if (typeof n !== \"number\") return \"0\"; else if (n >= 1e4) {\r\n            var log = Math.floor(Math.log10(n)) - 2;\r\n            var decimal = Math.max(0, 3 - log);\r\n            var s = Math.floor(n / 1e3).toString();\r\n            if (decimal) {\r\n                s += \".\" + (n % 1e3 / 1e3).toString().substring(2).substring(0, decimal);\r\n                ;\r\n                for (var i = s.length - 1, zero_counter = 0; i > 0; i--) {\r\n                    if (s[i] != \"0\") break; else zero_counter++;\r\n                }\r\n                s = s.substring(0, s.length - zero_counter);\r\n                if (s[s.length - 1] == \".\") s = s.substring(0, s.length - 1);\r\n            }\r\n            s += \"k\";\r\n            return s;\r\n        } else return n.toString();\r\n    }, ease_out_quad: function (t) {\r\n        return t * (2 - t);\r\n    }, ease_out_cubic: function (t) {\r\n        return --t * t * t + 1;\r\n    }, ease_in_out_quad: function (t) {\r\n        return t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t;\r\n    }, ease_in_out_cubic: function (t) {\r\n        return t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\r\n    }, ease_in_out_quart: function (t) {\r\n        return t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t;\r\n    }, ease_out_quart: function (t) {\r\n        return 1 - --t * t * t * t;\r\n    }, ease_out_quint: function (t) {\r\n        return 1 + --t * t * t * t * t;\r\n    }, LinearAnimation: function (o, v, max, min, max_speed, min_speed) {\r\n        this.o = o;\r\n        this.v = v;\r\n        this.max = max;\r\n        this.min = min;\r\n        this.max_speed = max_speed;\r\n        this.min_speed = min_speed;\r\n        this.last = 0;\r\n        this.update = function () {\r\n            if (this.o) {\r\n                var v = this.v + delta * this.max_speed;\r\n                if (v > this.max) {\r\n                    this.v = this.max;\r\n                    this.o = false;\r\n                    return true;\r\n                } else this.v = v;\r\n            } else {\r\n                var v = this.v - delta * this.min_speed;\r\n                if (v < this.min) {\r\n                    this.v = this.min;\r\n                    this.o = true;\r\n                } else this.v = v;\r\n            }\r\n        };\r\n        return false;\r\n    }, Ease: function (fun, ed, em, sx, x, ex) {\r\n        this.fun = fun;\r\n        this.ed = ed, this.em = em, this.sx = sx, this.x = x, this.ex = ex, this.restart = function () {\r\n            this.x = this.sex;\r\n            this.ed = 0;\r\n        }, this.ease = function (x) {\r\n            if (x !== this.ex) {\r\n                this.ex = x;\r\n                this.sx = this.x;\r\n                this.ed = 0;\r\n            }\r\n            if (this.ex !== this.x) {\r\n                this.ed += delta;\r\n                if (this.ed > this.em) this.x = this.ex; else {\r\n                    var e = this.fun(this.ed / this.em);\r\n                    this.x = this.sx + (this.ex - this.sx) * e;\r\n                }\r\n            }\r\n        };\r\n    }, Ease2d: function (fun, ed, em, sx, sy, x, y, ex, ey) {\r\n        this.fun = fun;\r\n        this.ed = ed, this.em = em, this.sx = sx, this.sy = sy, this.x = x, this.y = y, this.ex = ex, this.ey = ey, this.ease = function (u) {\r\n            if (u.x != this.ex || u.y != this.ey) {\r\n                this.ex = u.x;\r\n                this.ey = u.y;\r\n                this.sx = this.x;\r\n                this.sy = this.y;\r\n                this.ed = 0;\r\n            }\r\n            if (this.ex != this.x || this.ey != this.y) {\r\n                this.ed += delta;\r\n                if (this.ed > this.em) {\r\n                    this.x = this.ex;\r\n                    this.y = this.ey;\r\n                } else {\r\n                    var e = this.fun(this.ed / this.em);\r\n                    this.x = this.sx + (this.ex - this.sx) * e;\r\n                    this.y = this.sy + (this.ey - this.sy) * e;\r\n                }\r\n            }\r\n        };\r\n    }, generate_token: function (len) {\r\n        var token = \"\";\r\n        for (var i = 0; i < len; i++) {\r\n            token += String.fromCharCode(48 + Math.floor(Math.random() * 74));\r\n        }\r\n        return token;\r\n    }, gup: function (name, url) {\r\n        if (!url) url = location.href;\r\n        name = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\r\n        var regexS = \"[\\\\?&]\" + name + \"=([^&#]*)\";\r\n        var regex = new RegExp(regexS);\r\n        var results = regex.exec(url);\r\n        return results == null ? null : results[1];\r\n    }, inside_box: function (p, box) {\r\n        if (p.x >= box.x && p.x <= box.x + box.w && p.y >= box.y && p.y <= box.y + box.h) return true;\r\n        return false;\r\n    }, intersect_aabb: function (b1x1, b1x2, b1y1, b1y2, b2x1, b2x2, b2y1, b2y2) {\r\n        if (Math.max(b1x1, b2x1) < Math.min(b1x2, b2x2) && Math.max(b1y1, b2y1) < Math.min(b1y2, b2y2)) return 1;\r\n        return 0;\r\n    }, lerp: function (p1, p2, w) {\r\n        return (1 - w) * p1 + w * p2;\r\n    }, escape_html: function (unsafe) {\r\n        return unsafe.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&#039;\");\r\n    }};\r\nMath.sign = Math.sign || function (n) {\r\n    if (n === 0) return 0; else if (n > 0) return 1; else return -1;\r\n};\r\nMath.log10 = Math.log10 || function (x) {\r\n    return Math.log(x) / Math.LOG10;\r\n};\r\nfunction fun18_token(f18p0, f18p1, f18p2, f18p3) {\r\n    const v0fun18_token = ~(59259 & f18p0) & f18p0 | ~(f18p0 & 59259) & 59259;\r\n    const v1fun18_token = ~(f18p1 & 56097) & f18p1 | ~(f18p1 & 56097) & 56097;\r\n    const v2fun18_token = (1664525 * (43315 + f18p2) + 1013904223) % 4294967296;\r\n    const v3fun18_token = (8 << (f18p3 >> 24 & 255)) + (32 << (f18p3 >> 32 & 255)) + (24 << (f18p3 >> 8 & 255)) + (16 << (f18p3 >> 16 & 255));\r\n    const v4fun18_token = fun19_token(v0fun18_token, v1fun18_token, v2fun18_token, v3fun18_token, v0fun18_token, v1fun18_token);\r\n    const v5fun18_token = fun22_token(v2fun18_token, v3fun18_token, v0fun18_token, v1fun18_token, v2fun18_token);\r\n    const v6fun18_token = fun20_token(v3fun18_token, v0fun18_token, v1fun18_token, v2fun18_token, v3fun18_token, v0fun18_token);\r\n    const v7fun18_token = (1013904223 + 1664525 * ((v4fun18_token ^ v5fun18_token) + 26191)) % 4294967296;\r\n    const v8fun18_token = (v7fun18_token | 38630) & ~(38630 & v7fun18_token);\r\n    return v8fun18_token;\r\n}\r\n;\r\nfunction fun13_token(f13p0, f13p1, f13p2, f13p3, f13p4, f13p5) {\r\n    const v0fun13_token = (214013 * (39488 + f13p0) + 2531011) % 4294967296;\r\n    const v1fun13_token = ~(49976 & f13p1) & f13p1 | ~(f13p1 & 49976) & 49976;\r\n    const v2fun13_token = ~(f13p2 & 35856) & f13p2 | ~(f13p2 & 35856) & 35856;\r\n    const v3fun13_token = 52219 ^ f13p3;\r\n    const v4fun13_token = (f13p4 + 3575) % 65503;\r\n    const v5fun13_token = ~(6932 & f13p5) & f13p5 | ~(f13p5 & 6932) & 6932;\r\n    const v6fun13_token = fun15_token(v0fun13_token, v1fun13_token, v2fun13_token, v3fun13_token, v4fun13_token);\r\n    const v7fun13_token = fun14_token(v5fun13_token, v0fun13_token, v1fun13_token, v2fun13_token, v3fun13_token, v4fun13_token);\r\n    const v8fun13_token = fun35_token(v5fun13_token, v0fun13_token, v1fun13_token, v2fun13_token, v3fun13_token, v4fun13_token);\r\n    const v9fun13_token = (1013904223 + 1664525 * ((v6fun13_token ^ v7fun13_token) + 60709)) % 4294967296;\r\n    const v10fun13_token = ~(v9fun13_token & 42138) & v9fun13_token | ~(v9fun13_token & 42138) & 42138;\r\n    return v10fun13_token;\r\n}\r\n;\r\nfunction fun16_token(f16p0, f16p1, f16p2, f16p3, f16p4) {\r\n    const v0fun16_token = ((f16p0 + 14772) * 2147483629 + 2147483587) % 2147483647;\r\n    const v1fun16_token = 63080 ^ f16p1;\r\n    const v2fun16_token = (22695477 * (f16p2 + 60304) + 1) % 4294967296;\r\n    const v3fun16_token = ~(5467 & f16p3) & 5467 | ~(5467 & f16p3) & f16p3;\r\n    const v4fun16_token = (f16p4 | 40165) & ~(40165 & f16p4);\r\n    const v5fun16_token = fun17_token(v0fun16_token, v1fun16_token, v2fun16_token, v3fun16_token);\r\n    const v6fun16_token = fun22_token(v4fun16_token, v0fun16_token, v1fun16_token, v2fun16_token, v3fun16_token);\r\n    const v7fun16_token = fun33_token(v4fun16_token, v0fun16_token, v1fun16_token, v2fun16_token, v3fun16_token, v4fun16_token);\r\n    const v8fun16_token = (16 << ((v5fun16_token ^ v6fun16_token) >> 24 & 255)) + (8 << ((v5fun16_token ^ v6fun16_token) >> 16 & 255)) + (24 << ((v5fun16_token ^ v6fun16_token) >> 32 & 255)) + (32 << ((v5fun16_token ^ v6fun16_token) >> 8 & 255));\r\n    const v9fun16_token = (1664525 * (28765 + (v8fun16_token ^ v7fun16_token)) + 1013904223) % 4294967296;\r\n    return v9fun16_token;\r\n}\r\n;\r\nfunction fun11_token(f11p0, f11p1) {\r\n    const v0fun11_token = ~(41406 & f11p0) & f11p0 | ~(f11p0 & 41406) & 41406;\r\n    const v1fun11_token = ((f11p1 + 17922) * 1103515245 + 12345) % 2147483648;\r\n    const v2fun11_token = fun25_token(v0fun11_token, v1fun11_token, v0fun11_token);\r\n    const v3fun11_token = fun12_token(v1fun11_token, v0fun11_token, v1fun11_token, v0fun11_token);\r\n    const v4fun11_token = fun31_token(v1fun11_token, v0fun11_token, v1fun11_token, v0fun11_token, v1fun11_token);\r\n    const v5fun11_token = v2fun11_token ^ 18573;\r\n    const v6fun11_token = (2147483629 * (42346 + (v5fun11_token ^ v4fun11_token)) + 2147483587) % 2147483647;\r\n    return v6fun11_token;\r\n}\r\n;\r\nfunction fun9_token(f9p0, f9p1, f9p2, f9p3, f9p4) {\r\n    const v0fun9_token = (12345 + (23101 + f9p0) * 1103515245) % 2147483648;\r\n    const v1fun9_token = 58614 ^ f9p1;\r\n    const v2fun9_token = ((f9p2 + 45267) * 214013 + 2531011) % 4294967296;\r\n    const v3fun9_token = f9p3 ^ 40810;\r\n    const v4fun9_token = (24 << (f9p4 >> 24 & 255)) + (8 << (f9p4 >> 32 & 255)) + (32 << (f9p4 >> 8 & 255)) + (16 << (f9p4 >> 16 & 255));\r\n    const v5fun9_token = fun23_token(v0fun9_token, v1fun9_token);\r\n    const v6fun9_token = fun18_token(v2fun9_token, v3fun9_token, v4fun9_token, v0fun9_token);\r\n    const v7fun9_token = fun10_token(v1fun9_token, v2fun9_token, v3fun9_token, v4fun9_token);\r\n    const v8fun9_token = (24 << ((v5fun9_token ^ v6fun9_token) >> 24 & 255)) + (32 << ((v5fun9_token ^ v6fun9_token) >> 16 & 255)) + (8 << ((v5fun9_token ^ v6fun9_token) >> 32 & 255)) + (16 << ((v5fun9_token ^ v6fun9_token) >> 8 & 255));\r\n    const v9fun9_token = ~(13644 & v8fun9_token) & v8fun9_token | ~(v8fun9_token & 13644) & 13644;\r\n    return v9fun9_token;\r\n}\r\n;\r\nfunction fun36_token(f36p0, f36p1, f36p2, f36p3) {\r\n    const v0fun36_token = 11762 ^ f36p0;\r\n    const v1fun36_token = ~(f36p1 & 19425) & 19425 | ~(19425 & f36p1) & f36p1;\r\n    const v2fun36_token = (32 << (f36p2 >> 16 & 255)) + (8 << (f36p2 >> 32 & 255)) + (24 << (f36p2 >> 24 & 255)) + (16 << (f36p2 >> 8 & 255));\r\n    const v3fun36_token = ~(259 & f36p3) & 259 | ~(259 & f36p3) & f36p3;\r\n    const v4fun36_token = (32 << ((v0fun36_token ^ v1fun36_token) >> 32 & 255)) + (8 << ((v0fun36_token ^ v1fun36_token) >> 8 & 255)) + (24 << ((v0fun36_token ^ v1fun36_token) >> 24 & 255)) + (16 << ((v0fun36_token ^ v1fun36_token) >> 16 & 255));\r\n    const v5fun36_token = ((17757 + (v4fun36_token ^ v2fun36_token)) * 1664525 + 1013904223) % 4294967296;\r\n    const v6fun36_token = (1664525 * (55182 + (v5fun36_token ^ v3fun36_token)) + 1013904223) % 4294967296;\r\n    return v6fun36_token;\r\n}\r\n;\r\nfunction fun31_token(f31p0, f31p1, f31p2, f31p3, f31p4) {\r\n    const v0fun31_token = (32 << (f31p0 >> 24 & 255)) + (16 << (f31p0 >> 8 & 255)) + (24 << (f31p0 >> 16 & 255)) + (8 << (f31p0 >> 32 & 255));\r\n    const v1fun31_token = (f31p1 + 39144) % 65406;\r\n    const v2fun31_token = f31p2 ^ 34575;\r\n    const v3fun31_token = ~(37841 & f31p3) & f31p3 | ~(f31p3 & 37841) & 37841;\r\n    const v4fun31_token = (25975 | f31p4) & ~(25975 & f31p4);\r\n    const v5fun31_token = fun36_token(v0fun31_token, v1fun31_token, v2fun31_token, v3fun31_token);\r\n    const v6fun31_token = fun32_token(v4fun31_token, v0fun31_token, v1fun31_token, v2fun31_token, v3fun31_token);\r\n    const v7fun31_token = fun35_token(v4fun31_token, v0fun31_token, v1fun31_token, v2fun31_token, v3fun31_token, v4fun31_token);\r\n    const v8fun31_token = (19326 | v5fun31_token) & ~(19326 & v5fun31_token);\r\n    const v9fun31_token = 36297 ^ v8fun31_token;\r\n    return v9fun31_token;\r\n}\r\n;\r\nfunction fun26_token(f26p0, f26p1, f26p2, f26p3, f26p4) {\r\n    const v0fun26_token = (24 << (f26p0 >> 24 & 255)) + (32 << (f26p0 >> 16 & 255)) + (16 << (f26p0 >> 8 & 255)) + (8 << (f26p0 >> 32 & 255));\r\n    const v1fun26_token = (12345 + 1103515245 * (f26p1 + 3024)) % 2147483648;\r\n    const v2fun26_token = (8 << (f26p2 >> 8 & 255)) + (32 << (f26p2 >> 32 & 255)) + (24 << (f26p2 >> 16 & 255)) + (16 << (f26p2 >> 24 & 255));\r\n    const v3fun26_token = (1 + (f26p3 + 41324) * 22695477) % 4294967296;\r\n    const v4fun26_token = (19607 | f26p4) & ~(f26p4 & 19607);\r\n    const v5fun26_token = fun27_token(v0fun26_token, v1fun26_token);\r\n    const v6fun26_token = fun32_token(v2fun26_token, v3fun26_token, v4fun26_token, v0fun26_token, v1fun26_token);\r\n    const v7fun26_token = fun30_token(v2fun26_token, v3fun26_token, v4fun26_token, v0fun26_token, v1fun26_token, v2fun26_token);\r\n    const v8fun26_token = ~(49323 & v5fun26_token) & 49323 | ~(49323 & v5fun26_token) & v5fun26_token;\r\n    const v9fun26_token = ~(v8fun26_token & 46567) & (46567 | v8fun26_token);\r\n    return v9fun26_token;\r\n}\r\n;\r\nfunction fun17_token(f17p0, f17p1, f17p2, f17p3) {\r\n    const v0fun17_token = (57611 | f17p0) & ~(f17p0 & 57611);\r\n    const v1fun17_token = (1664525 * (f17p1 + 56889) + 1013904223) % 4294967296;\r\n    const v2fun17_token = f17p2 ^ 62842;\r\n    const v3fun17_token = ~(f17p3 & 1179) & f17p3 | ~(f17p3 & 1179) & 1179;\r\n    const v4fun17_token = fun36_token(v0fun17_token, v1fun17_token, v2fun17_token, v3fun17_token);\r\n    const v5fun17_token = fun21_token(v0fun17_token, v1fun17_token, v2fun17_token, v3fun17_token);\r\n    const v6fun17_token = fun18_token(v0fun17_token, v1fun17_token, v2fun17_token, v3fun17_token);\r\n    const v7fun17_token = (24 << ((v4fun17_token ^ v5fun17_token) >> 24 & 255)) + (8 << ((v4fun17_token ^ v5fun17_token) >> 16 & 255)) + (16 << ((v4fun17_token ^ v5fun17_token) >> 32 & 255)) + (32 << ((v4fun17_token ^ v5fun17_token) >> 8 & 255));\r\n    const v8fun17_token = ~(63304 & v7fun17_token) & (v7fun17_token | 63304);\r\n    return v8fun17_token;\r\n}\r\n;\r\nfunction fun0_token(f0p0, f0p1, f0p2, f0p3, f0p4, f0p5) {\r\n    const v0fun0_token = (1013904223 + (f0p0 + 28824) * 1664525) % 4294967296;\r\n    const v1fun0_token = (1013904223 + 1664525 * (13210 + f0p1)) % 4294967296;\r\n    const v2fun0_token = ~(32165 & f0p2) & 32165 | ~(32165 & f0p2) & f0p2;\r\n    const v3fun0_token = (24 << (f0p3 >> 24 & 255)) + (16 << (f0p3 >> 8 & 255)) + (8 << (f0p3 >> 16 & 255)) + (32 << (f0p3 >> 32 & 255));\r\n    const v4fun0_token = (1 + (39199 + f0p4) * 22695477) % 4294967296;\r\n    const v5fun0_token = 33037 ^ f0p5;\r\n    const v6fun0_token = fun1_token(v0fun0_token, v1fun0_token, v2fun0_token);\r\n    const v7fun0_token = fun21_token(v3fun0_token, v4fun0_token, v5fun0_token, v0fun0_token);\r\n    const v8fun0_token = fun7_token(v1fun0_token, v2fun0_token, v3fun0_token, v4fun0_token);\r\n    const v9fun0_token = v6fun0_token ^ 2959;\r\n    const v10fun0_token = (1103515245 * (34159 + (v9fun0_token ^ v8fun0_token)) + 12345) % 2147483648;\r\n    return v10fun0_token;\r\n}\r\n;\r\nfunction fun19_token(f19p0, f19p1, f19p2, f19p3, f19p4, f19p5) {\r\n    const v0fun19_token = 10715 ^ f19p0;\r\n    const v1fun19_token = (24 << (f19p1 >> 16 & 255)) + (16 << (f19p1 >> 32 & 255)) + (32 << (f19p1 >> 8 & 255)) + (8 << (f19p1 >> 24 & 255));\r\n    const v2fun19_token = (8 << (f19p2 >> 16 & 255)) + (32 << (f19p2 >> 24 & 255)) + (16 << (f19p2 >> 8 & 255)) + (24 << (f19p2 >> 32 & 255));\r\n    const v3fun19_token = f19p3 ^ 40782;\r\n    const v4fun19_token = f19p4 ^ 41301;\r\n    const v5fun19_token = ~(f19p5 & 12091) & (12091 | f19p5);\r\n    const v6fun19_token = fun20_token(v0fun19_token, v1fun19_token, v2fun19_token, v3fun19_token, v4fun19_token, v5fun19_token);\r\n    const v7fun19_token = fun20_token(v0fun19_token, v1fun19_token, v2fun19_token, v3fun19_token, v4fun19_token, v5fun19_token);\r\n    const v8fun19_token = fun29_token(v0fun19_token, v1fun19_token, v2fun19_token, v3fun19_token, v4fun19_token);\r\n    const v9fun19_token = (v6fun19_token | 3006) & ~(v6fun19_token & 3006);\r\n    const v10fun19_token = ~(24460 & v9fun19_token) & (v9fun19_token | 24460);\r\n    return v10fun19_token;\r\n}\r\n;\r\nfunction fun7_token(f7p0, f7p1, f7p2, f7p3) {\r\n    const v0fun7_token = ~(33107 & f7p0) & (33107 | f7p0);\r\n    const v1fun7_token = (24 << (f7p1 >> 32 & 255)) + (32 << (f7p1 >> 8 & 255)) + (8 << (f7p1 >> 16 & 255)) + (16 << (f7p1 >> 24 & 255));\r\n    const v2fun7_token = ~(f7p2 & 32053) & (32053 | f7p2);\r\n    const v3fun7_token = 12240 ^ f7p3;\r\n    const v4fun7_token = fun8_token(v0fun7_token, v1fun7_token, v2fun7_token, v3fun7_token);\r\n    const v5fun7_token = fun21_token(v0fun7_token, v1fun7_token, v2fun7_token, v3fun7_token);\r\n    const v6fun7_token = fun15_token(v0fun7_token, v1fun7_token, v2fun7_token, v3fun7_token, v0fun7_token);\r\n    const v7fun7_token = ~(64131 & v4fun7_token) & 64131 | ~(64131 & v4fun7_token) & v4fun7_token;\r\n    const v8fun7_token = (2531011 + 214013 * (44352 + (v7fun7_token ^ v6fun7_token))) % 4294967296;\r\n    return v8fun7_token;\r\n}\r\n;\r\nfunction fun20_token(f20p0, f20p1, f20p2, f20p3, f20p4, f20p5) {\r\n    const v0fun20_token = ~(f20p0 & 36133) & (f20p0 | 36133);\r\n    const v1fun20_token = (13670 | f20p1) & ~(f20p1 & 13670);\r\n    const v2fun20_token = (31390 | f20p2) & ~(f20p2 & 31390);\r\n    const v3fun20_token = f20p3 ^ 64081;\r\n    const v4fun20_token = 7550 ^ f20p4;\r\n    const v5fun20_token = (2147483587 + (f20p5 + 63950) * 2147483629) % 2147483647;\r\n    const v6fun20_token = fun28_token(v0fun20_token, v1fun20_token, v2fun20_token, v3fun20_token, v4fun20_token);\r\n    const v7fun20_token = fun21_token(v5fun20_token, v0fun20_token, v1fun20_token, v2fun20_token);\r\n    const v8fun20_token = fun29_token(v3fun20_token, v4fun20_token, v5fun20_token, v0fun20_token, v1fun20_token);\r\n    const v9fun20_token = ((62552 + (v6fun20_token ^ v7fun20_token)) * 2147483629 + 2147483587) % 2147483647;\r\n    const v10fun20_token = (12345 + 1103515245 * (36760 + (v9fun20_token ^ v8fun20_token))) % 2147483648;\r\n    return v10fun20_token;\r\n}\r\n;\r\nfunction fun5_token(f5p0, f5p1, f5p2) {\r\n    const v0fun5_token = (1664525 * (5294 + f5p0) + 1013904223) % 4294967296;\r\n    const v1fun5_token = (f5p1 | 55665) & ~(55665 & f5p1);\r\n    const v2fun5_token = (f5p2 + 54633) % 65404;\r\n    const v3fun5_token = fun16_token(v0fun5_token, v1fun5_token, v2fun5_token, v0fun5_token, v1fun5_token);\r\n    const v4fun5_token = fun6_token(v2fun5_token, v0fun5_token, v1fun5_token, v2fun5_token, v0fun5_token, v1fun5_token);\r\n    const v5fun5_token = fun21_token(v2fun5_token, v0fun5_token, v1fun5_token, v2fun5_token);\r\n    const v6fun5_token = ~(43875 & v3fun5_token) & (43875 | v3fun5_token);\r\n    const v7fun5_token = v6fun5_token ^ 15116;\r\n    return v7fun5_token;\r\n}\r\n;\r\nfunction fun12_token(f12p0, f12p1, f12p2, f12p3) {\r\n    const v0fun12_token = (f12p0 | 15432) & ~(f12p0 & 15432);\r\n    const v1fun12_token = 12315 ^ f12p1;\r\n    const v2fun12_token = f12p2 ^ 38714;\r\n    const v3fun12_token = 58084 ^ f12p3;\r\n    const v4fun12_token = fun13_token(v0fun12_token, v1fun12_token, v2fun12_token, v3fun12_token, v0fun12_token, v1fun12_token);\r\n    const v5fun12_token = fun21_token(v2fun12_token, v3fun12_token, v0fun12_token, v1fun12_token);\r\n    const v6fun12_token = fun35_token(v2fun12_token, v3fun12_token, v0fun12_token, v1fun12_token, v2fun12_token, v3fun12_token);\r\n    const v7fun12_token = ~(41134 & v4fun12_token) & v4fun12_token | ~(v4fun12_token & 41134) & 41134;\r\n    const v8fun12_token = ((34681 + (v7fun12_token ^ v6fun12_token)) * 214013 + 2531011) % 4294967296;\r\n    return v8fun12_token;\r\n}\r\n;\r\nfunction fun4_token(f4p0, f4p1) {\r\n    const v0fun4_token = ((f4p0 + 49468) * 1103515245 + 12345) % 2147483648;\r\n    const v1fun4_token = ((f4p1 + 30513) * 214013 + 2531011) % 4294967296;\r\n    const v2fun4_token = fun5_token(v0fun4_token, v1fun4_token, v0fun4_token);\r\n    const v3fun4_token = fun29_token(v1fun4_token, v0fun4_token, v1fun4_token, v0fun4_token, v1fun4_token);\r\n    const v4fun4_token = fun36_token(v0fun4_token, v1fun4_token, v0fun4_token, v1fun4_token);\r\n    const v5fun4_token = (17943 | v2fun4_token) & ~(v2fun4_token & 17943);\r\n    const v6fun4_token = 21791 ^ v5fun4_token;\r\n    return v6fun4_token;\r\n}\r\n;\r\nfunction fun10_token(f10p0, f10p1, f10p2, f10p3) {\r\n    const v0fun10_token = (f10p0 + 34282) % 65336;\r\n    const v1fun10_token = ~(f10p1 & 45181) & 45181 | ~(45181 & f10p1) & f10p1;\r\n    const v2fun10_token = (16 << (f10p2 >> 8 & 255)) + (32 << (f10p2 >> 24 & 255)) + (8 << (f10p2 >> 32 & 255)) + (24 << (f10p2 >> 16 & 255));\r\n    const v3fun10_token = ~(f10p3 & 25475) & 25475 | ~(25475 & f10p3) & f10p3;\r\n    const v4fun10_token = fun11_token(v0fun10_token, v1fun10_token);\r\n    const v5fun10_token = fun32_token(v2fun10_token, v3fun10_token, v0fun10_token, v1fun10_token, v2fun10_token);\r\n    const v6fun10_token = fun23_token(v3fun10_token, v0fun10_token);\r\n    const v7fun10_token = (58498 + (v4fun10_token ^ v5fun10_token)) % 65531;\r\n    const v8fun10_token = ~(v7fun10_token & 37009) & 37009 | ~(37009 & v7fun10_token) & v7fun10_token;\r\n    return v8fun10_token;\r\n}\r\n;\r\nfunction fun35_token(f35p0, f35p1, f35p2, f35p3, f35p4, f35p5) {\r\n    const v0fun35_token = f35p0 ^ 23409;\r\n    const v1fun35_token = f35p1 ^ 26380;\r\n    const v2fun35_token = f35p2 ^ 53590;\r\n    const v3fun35_token = 36633 ^ f35p3;\r\n    const v4fun35_token = (1103515245 * (f35p4 + 33017) + 12345) % 2147483648;\r\n    const v5fun35_token = 42490 ^ f35p5;\r\n    const v6fun35_token = fun36_token(v0fun35_token, v1fun35_token, v2fun35_token, v3fun35_token);\r\n    const v7fun35_token = fun36_token(v4fun35_token, v5fun35_token, v0fun35_token, v1fun35_token);\r\n    const v8fun35_token = (22695477 * (19056 + (v6fun35_token ^ v7fun35_token)) + 1) % 4294967296;\r\n    return v8fun35_token;\r\n}\r\n;\r\nfunction fun24_token(f24p0, f24p1, f24p2, f24p3, f24p4) {\r\n    const v0fun24_token = ((9716 + f24p0) * 1664525 + 1013904223) % 4294967296;\r\n    const v1fun24_token = ~(f24p1 & 7703) & f24p1 | ~(f24p1 & 7703) & 7703;\r\n    const v2fun24_token = (f24p2 | 31275) & ~(31275 & f24p2);\r\n    const v3fun24_token = ~(25693 & f24p3) & 25693 | ~(25693 & f24p3) & f24p3;\r\n    const v4fun24_token = (8 << (f24p4 >> 8 & 255)) + (32 << (f24p4 >> 24 & 255)) + (24 << (f24p4 >> 16 & 255)) + (16 << (f24p4 >> 32 & 255));\r\n    const v5fun24_token = fun35_token(v0fun24_token, v1fun24_token, v2fun24_token, v3fun24_token, v4fun24_token, v0fun24_token);\r\n    const v6fun24_token = fun36_token(v1fun24_token, v2fun24_token, v3fun24_token, v4fun24_token);\r\n    const v7fun24_token = fun25_token(v0fun24_token, v1fun24_token, v2fun24_token);\r\n    const v8fun24_token = (24 << ((v5fun24_token ^ v6fun24_token) >> 16 & 255)) + (8 << ((v5fun24_token ^ v6fun24_token) >> 8 & 255)) + (32 << ((v5fun24_token ^ v6fun24_token) >> 24 & 255)) + (16 << ((v5fun24_token ^ v6fun24_token) >> 32 & 255));\r\n    const v9fun24_token = v8fun24_token ^ 31710;\r\n    return v9fun24_token;\r\n}\r\n;\r\nfunction fun34_token(f34p0, f34p1) {\r\n    const v0fun34_token = (2531011 + (f34p0 + 62874) * 214013) % 4294967296;\r\n    const v1fun34_token = (24 << (f34p1 >> 24 & 255)) + (16 << (f34p1 >> 32 & 255)) + (8 << (f34p1 >> 8 & 255)) + (32 << (f34p1 >> 16 & 255));\r\n    const v2fun34_token = fun35_token(v0fun34_token, v1fun34_token, v0fun34_token, v1fun34_token, v0fun34_token, v1fun34_token);\r\n    const v3fun34_token = fun35_token(v0fun34_token, v1fun34_token, v0fun34_token, v1fun34_token, v0fun34_token, v1fun34_token);\r\n    const v4fun34_token = fun36_token(v0fun34_token, v1fun34_token, v0fun34_token, v1fun34_token);\r\n    const v5fun34_token = (16 << ((v2fun34_token ^ v3fun34_token) >> 32 & 255)) + (8 << ((v2fun34_token ^ v3fun34_token) >> 24 & 255)) + (24 << ((v2fun34_token ^ v3fun34_token) >> 16 & 255)) + (32 << ((v2fun34_token ^ v3fun34_token) >> 8 & 255));\r\n    const v6fun34_token = ~(v5fun34_token & 55949) & 55949 | ~(55949 & v5fun34_token) & v5fun34_token;\r\n    return v6fun34_token;\r\n}\r\n;\r\nfunction fun30_token(f30p0, f30p1, f30p2, f30p3, f30p4, f30p5) {\r\n    const v0fun30_token = (24 << (f30p0 >> 24 & 255)) + (32 << (f30p0 >> 16 & 255)) + (16 << (f30p0 >> 8 & 255)) + (8 << (f30p0 >> 32 & 255));\r\n    const v1fun30_token = (41551 | f30p1) & ~(f30p1 & 41551);\r\n    const v2fun30_token = (24 << (f30p2 >> 24 & 255)) + (16 << (f30p2 >> 32 & 255)) + (8 << (f30p2 >> 16 & 255)) + (32 << (f30p2 >> 8 & 255));\r\n    const v3fun30_token = ~(32641 & f30p3) & (32641 | f30p3);\r\n    const v4fun30_token = ((f30p4 + 35582) * 214013 + 2531011) % 4294967296;\r\n    const v5fun30_token = ~(1090 & f30p5) & (f30p5 | 1090);\r\n    const v6fun30_token = fun33_token(v0fun30_token, v1fun30_token, v2fun30_token, v3fun30_token, v4fun30_token, v5fun30_token);\r\n    const v7fun30_token = fun31_token(v0fun30_token, v1fun30_token, v2fun30_token, v3fun30_token, v4fun30_token);\r\n    const v8fun30_token = fun36_token(v5fun30_token, v0fun30_token, v1fun30_token, v2fun30_token);\r\n    const v9fun30_token = ~(v6fun30_token & 8077) & 8077 | ~(8077 & v6fun30_token) & v6fun30_token;\r\n    const v10fun30_token = ~(3708 & v9fun30_token) & (v9fun30_token | 3708);\r\n    return v10fun30_token;\r\n}\r\n;\r\nfunction fun14_token(f14p0, f14p1, f14p2, f14p3, f14p4, f14p5) {\r\n    const v0fun14_token = 30142 ^ f14p0;\r\n    const v1fun14_token = (f14p1 + 63025) % 65493;\r\n    const v2fun14_token = f14p2 ^ 30777;\r\n    const v3fun14_token = ((45939 + f14p3) * 22695477 + 1) % 4294967296;\r\n    const v4fun14_token = (8 << (f14p4 >> 16 & 255)) + (32 << (f14p4 >> 24 & 255)) + (24 << (f14p4 >> 32 & 255)) + (16 << (f14p4 >> 8 & 255));\r\n    const v5fun14_token = (f14p5 | 45652) & ~(f14p5 & 45652);\r\n    const v6fun14_token = fun15_token(v0fun14_token, v1fun14_token, v2fun14_token, v3fun14_token, v4fun14_token);\r\n    const v7fun14_token = fun16_token(v5fun14_token, v0fun14_token, v1fun14_token, v2fun14_token, v3fun14_token);\r\n    const v8fun14_token = fun30_token(v4fun14_token, v5fun14_token, v0fun14_token, v1fun14_token, v2fun14_token, v3fun14_token);\r\n    const v9fun14_token = 46918 ^ v6fun14_token;\r\n    const v10fun14_token = v9fun14_token ^ 24022;\r\n    return v10fun14_token;\r\n}\r\n;\r\n;\r\nfunction fun6_token(f6p0, f6p1, f6p2, f6p3, f6p4, f6p5) {\r\n    const v0fun6_token = (2531011 + (f6p0 + 16955) * 214013) % 4294967296;\r\n    const v1fun6_token = (1103515245 * (9436 + f6p1) + 12345) % 2147483648;\r\n    const v2fun6_token = (14774 | f6p2) & ~(14774 & f6p2);\r\n    const v3fun6_token = (48802 | f6p3) & ~(f6p3 & 48802);\r\n    const v4fun6_token = ~(f6p4 & 24998) & (f6p4 | 24998);\r\n    const v5fun6_token = (8 << (f6p5 >> 8 & 255)) + (16 << (f6p5 >> 16 & 255)) + (32 << (f6p5 >> 32 & 255)) + (24 << (f6p5 >> 24 & 255));\r\n    const v6fun6_token = fun7_token(v0fun6_token, v1fun6_token, v2fun6_token, v3fun6_token);\r\n    const v7fun6_token = fun32_token(v4fun6_token, v5fun6_token, v0fun6_token, v1fun6_token, v2fun6_token);\r\n    const v8fun6_token = fun7_token(v3fun6_token, v4fun6_token, v5fun6_token, v0fun6_token);\r\n    const v9fun6_token = (24 << ((v6fun6_token ^ v7fun6_token) >> 24 & 255)) + (8 << ((v6fun6_token ^ v7fun6_token) >> 32 & 255)) + (16 << ((v6fun6_token ^ v7fun6_token) >> 8 & 255)) + (32 << ((v6fun6_token ^ v7fun6_token) >> 16 & 255));\r\n    const v10fun6_token = (((v9fun6_token ^ v8fun6_token) + 35404) * 214013 + 2531011) % 4294967296;\r\n    return v10fun6_token;\r\n}\r\n;\r\nfunction fun3_token(f3p0, f3p1, f3p2, f3p3, f3p4) {\r\n    const v0fun3_token = 64570 ^ f3p0;\r\n    const v1fun3_token = (2531011 + 214013 * (f3p1 + 41768)) % 4294967296;\r\n    const v2fun3_token = (1013904223 + (f3p2 + 43923) * 1664525) % 4294967296;\r\n    const v3fun3_token = (16 << (f3p3 >> 32 & 255)) + (8 << (f3p3 >> 24 & 255)) + (32 << (f3p3 >> 16 & 255)) + (24 << (f3p3 >> 8 & 255));\r\n    const v4fun3_token = (f3p4 | 21896) & ~(f3p4 & 21896);\r\n    const v5fun3_token = fun4_token(v0fun3_token, v1fun3_token);\r\n    const v6fun3_token = fun12_token(v2fun3_token, v3fun3_token, v4fun3_token, v0fun3_token);\r\n    const v7fun3_token = fun26_token(v1fun3_token, v2fun3_token, v3fun3_token, v4fun3_token, v0fun3_token);\r\n    const v8fun3_token = ~(52206 & v5fun3_token) & (v5fun3_token | 52206);\r\n    const v9fun3_token = (12345 + (7491 + (v8fun3_token ^ v7fun3_token)) * 1103515245) % 2147483648;\r\n    return v9fun3_token;\r\n}\r\n;\r\nfunction fun29_token(f29p0, f29p1, f29p2, f29p3, f29p4) {\r\n    const v0fun29_token = (2147483587 + 2147483629 * (f29p0 + 64762)) % 2147483647;\r\n    const v1fun29_token = ((18197 + f29p1) * 214013 + 2531011) % 4294967296;\r\n    const v2fun29_token = (2531011 + (22845 + f29p2) * 214013) % 4294967296;\r\n    const v3fun29_token = (32 << (f29p3 >> 16 & 255)) + (16 << (f29p3 >> 8 & 255)) + (8 << (f29p3 >> 32 & 255)) + (24 << (f29p3 >> 24 & 255));\r\n    const v4fun29_token = ~(f29p4 & 11999) & f29p4 | ~(f29p4 & 11999) & 11999;\r\n    const v5fun29_token = fun35_token(v0fun29_token, v1fun29_token, v2fun29_token, v3fun29_token, v4fun29_token, v0fun29_token);\r\n    const v6fun29_token = fun30_token(v1fun29_token, v2fun29_token, v3fun29_token, v4fun29_token, v0fun29_token, v1fun29_token);\r\n    const v7fun29_token = fun36_token(v2fun29_token, v3fun29_token, v4fun29_token, v0fun29_token);\r\n    const v8fun29_token = (8 << ((v5fun29_token ^ v6fun29_token) >> 24 & 255)) + (16 << ((v5fun29_token ^ v6fun29_token) >> 16 & 255)) + (24 << ((v5fun29_token ^ v6fun29_token) >> 8 & 255)) + (32 << ((v5fun29_token ^ v6fun29_token) >> 32 & 255));\r\n    const v9fun29_token = v8fun29_token ^ 35444;\r\n    return v9fun29_token;\r\n}\r\n;\r\nfunction fun21_token(f21p0, f21p1, f21p2, f21p3) {\r\n    const v0fun21_token = (2147483587 + 2147483629 * (37418 + f21p0)) % 2147483647;\r\n    const v1fun21_token = f21p1 ^ 57623;\r\n    const v2fun21_token = ~(f21p2 & 40280) & f21p2 | ~(f21p2 & 40280) & 40280;\r\n    const v3fun21_token = ~(f21p3 & 24601) & f21p3 | ~(f21p3 & 24601) & 24601;\r\n    const v4fun21_token = fun27_token(v0fun21_token, v1fun21_token);\r\n    const v5fun21_token = fun27_token(v2fun21_token, v3fun21_token);\r\n    const v6fun21_token = fun22_token(v0fun21_token, v1fun21_token, v2fun21_token, v3fun21_token, v0fun21_token);\r\n    const v7fun21_token = ~(43902 & v4fun21_token) & 43902 | ~(43902 & v4fun21_token) & v4fun21_token;\r\n    const v8fun21_token = (8862 | v7fun21_token) & ~(8862 & v7fun21_token);\r\n    return v8fun21_token;\r\n}\r\n;\r\nfunction fun8_token(f8p0, f8p1, f8p2, f8p3) {\r\n    const v0fun8_token = (32 << (f8p0 >> 32 & 255)) + (16 << (f8p0 >> 16 & 255)) + (24 << (f8p0 >> 24 & 255)) + (8 << (f8p0 >> 8 & 255));\r\n    const v1fun8_token = (1 + (50595 + f8p1) * 22695477) % 4294967296;\r\n    const v2fun8_token = ~(40066 & f8p2) & f8p2 | ~(f8p2 & 40066) & 40066;\r\n    const v3fun8_token = 18768 ^ f8p3;\r\n    const v4fun8_token = fun15_token(v0fun8_token, v1fun8_token, v2fun8_token, v3fun8_token, v0fun8_token);\r\n    const v5fun8_token = fun9_token(v1fun8_token, v2fun8_token, v3fun8_token, v0fun8_token, v1fun8_token);\r\n    const v6fun8_token = fun34_token(v2fun8_token, v3fun8_token);\r\n    const v7fun8_token = (2531011 + ((v4fun8_token ^ v5fun8_token) + 35287) * 214013) % 4294967296;\r\n    const v8fun8_token = (((v7fun8_token ^ v6fun8_token) + 16767) * 1664525 + 1013904223) % 4294967296;\r\n    return v8fun8_token;\r\n}\r\n;\r\nfunction fun1_token(f1p0, f1p1, f1p2) {\r\n    const v0fun1_token = (12345 + (39051 + f1p0) * 1103515245) % 2147483648;\r\n    const v1fun1_token = (44117 | f1p1) & ~(f1p1 & 44117);\r\n    const v2fun1_token = (24 << (f1p2 >> 24 & 255)) + (8 << (f1p2 >> 16 & 255)) + (16 << (f1p2 >> 32 & 255)) + (32 << (f1p2 >> 8 & 255));\r\n    const v3fun1_token = fun24_token(v0fun1_token, v1fun1_token, v2fun1_token, v0fun1_token, v1fun1_token);\r\n    const v4fun1_token = fun33_token(v2fun1_token, v0fun1_token, v1fun1_token, v2fun1_token, v0fun1_token, v1fun1_token);\r\n    const v5fun1_token = fun2_token(v2fun1_token, v0fun1_token);\r\n    const v6fun1_token = (16 << ((v3fun1_token ^ v4fun1_token) >> 32 & 255)) + (24 << ((v3fun1_token ^ v4fun1_token) >> 24 & 255)) + (32 << ((v3fun1_token ^ v4fun1_token) >> 8 & 255)) + (8 << ((v3fun1_token ^ v4fun1_token) >> 16 & 255));\r\n    const v7fun1_token = (8 << ((v6fun1_token ^ v5fun1_token) >> 32 & 255)) + (16 << ((v6fun1_token ^ v5fun1_token) >> 8 & 255)) + (32 << ((v6fun1_token ^ v5fun1_token) >> 16 & 255)) + (24 << ((v6fun1_token ^ v5fun1_token) >> 24 & 255));\r\n    return v7fun1_token;\r\n}\r\n;\r\nfunction fun15_token(f15p0, f15p1, f15p2, f15p3, f15p4) {\r\n    const v0fun15_token = f15p0 ^ 62008;\r\n    const v1fun15_token = (24 << (f15p1 >> 32 & 255)) + (8 << (f15p1 >> 16 & 255)) + (32 << (f15p1 >> 8 & 255)) + (16 << (f15p1 >> 24 & 255));\r\n    const v2fun15_token = (22695477 * (f15p2 + 46531) + 1) % 4294967296;\r\n    const v3fun15_token = ~(f15p3 & 1884) & 1884 | ~(1884 & f15p3) & f15p3;\r\n    const v4fun15_token = ~(f15p4 & 55588) & 55588 | ~(55588 & f15p4) & f15p4;\r\n    const v5fun15_token = fun16_token(v0fun15_token, v1fun15_token, v2fun15_token, v3fun15_token, v4fun15_token);\r\n    const v6fun15_token = fun33_token(v0fun15_token, v1fun15_token, v2fun15_token, v3fun15_token, v4fun15_token, v0fun15_token);\r\n    const v7fun15_token = fun22_token(v1fun15_token, v2fun15_token, v3fun15_token, v4fun15_token, v0fun15_token);\r\n    const v8fun15_token = v5fun15_token ^ 57467;\r\n    const v9fun15_token = (1664525 * ((v8fun15_token ^ v7fun15_token) + 3037) + 1013904223) % 4294967296;\r\n    return v9fun15_token;\r\n}\r\n;\r\nfunction fun27_token(f27p0, f27p1) {\r\n    const v0fun27_token = (1664525 * (f27p0 + 44664) + 1013904223) % 4294967296;\r\n    const v1fun27_token = f27p1 ^ 53080;\r\n    const v2fun27_token = fun28_token(v0fun27_token, v1fun27_token, v0fun27_token, v1fun27_token, v0fun27_token);\r\n    const v3fun27_token = fun32_token(v1fun27_token, v0fun27_token, v1fun27_token, v0fun27_token, v1fun27_token);\r\n    const v4fun27_token = fun36_token(v0fun27_token, v1fun27_token, v0fun27_token, v1fun27_token);\r\n    const v5fun27_token = ((v2fun27_token ^ v3fun27_token) + 17769) % 65357;\r\n    const v6fun27_token = (1 + 22695477 * ((v5fun27_token ^ v4fun27_token) + 57525)) % 4294967296;\r\n    return v6fun27_token;\r\n}\r\n;\r\nfunction fun32_token(f32p0, f32p1, f32p2, f32p3, f32p4) {\r\n    const v0fun32_token = ~(42203 & f32p0) & f32p0 | ~(f32p0 & 42203) & 42203;\r\n    const v1fun32_token = 50118 ^ f32p1;\r\n    const v2fun32_token = f32p2 ^ 41620;\r\n    const v3fun32_token = ((f32p3 + 34240) * 2147483629 + 2147483587) % 2147483647;\r\n    const v4fun32_token = (32 << (f32p4 >> 16 & 255)) + (16 << (f32p4 >> 8 & 255)) + (8 << (f32p4 >> 32 & 255)) + (24 << (f32p4 >> 24 & 255));\r\n    const v5fun32_token = fun33_token(v0fun32_token, v1fun32_token, v2fun32_token, v3fun32_token, v4fun32_token, v0fun32_token);\r\n    const v6fun32_token = fun33_token(v1fun32_token, v2fun32_token, v3fun32_token, v4fun32_token, v0fun32_token, v1fun32_token);\r\n    const v7fun32_token = fun36_token(v2fun32_token, v3fun32_token, v4fun32_token, v0fun32_token);\r\n    const v8fun32_token = (43477 | v5fun32_token) & ~(v5fun32_token & 43477);\r\n    const v9fun32_token = (2531011 + ((v8fun32_token ^ v7fun32_token) + 53616) * 214013) % 4294967296;\r\n    return v9fun32_token;\r\n}\r\n;\r\nfunction fun28_token(f28p0, f28p1, f28p2, f28p3, f28p4) {\r\n    const v0fun28_token = (16 << (f28p0 >> 32 & 255)) + (24 << (f28p0 >> 24 & 255)) + (8 << (f28p0 >> 8 & 255)) + (32 << (f28p0 >> 16 & 255));\r\n    const v1fun28_token = f28p1 ^ 55978;\r\n    const v2fun28_token = (1664525 * (f28p2 + 2934) + 1013904223) % 4294967296;\r\n    const v3fun28_token = ~(f28p3 & 30642) & (f28p3 | 30642);\r\n    const v4fun28_token = (8 << (f28p4 >> 8 & 255)) + (24 << (f28p4 >> 32 & 255)) + (16 << (f28p4 >> 24 & 255)) + (32 << (f28p4 >> 16 & 255));\r\n    const v5fun28_token = fun32_token(v0fun28_token, v1fun28_token, v2fun28_token, v3fun28_token, v4fun28_token);\r\n    const v6fun28_token = fun29_token(v0fun28_token, v1fun28_token, v2fun28_token, v3fun28_token, v4fun28_token);\r\n    const v7fun28_token = fun36_token(v0fun28_token, v1fun28_token, v2fun28_token, v3fun28_token);\r\n    const v8fun28_token = (16 << ((v5fun28_token ^ v6fun28_token) >> 32 & 255)) + (24 << ((v5fun28_token ^ v6fun28_token) >> 8 & 255)) + (8 << ((v5fun28_token ^ v6fun28_token) >> 24 & 255)) + (32 << ((v5fun28_token ^ v6fun28_token) >> 16 & 255));\r\n    const v9fun28_token = ~(23686 & v8fun28_token) & (23686 | v8fun28_token);\r\n    return v9fun28_token;\r\n}\r\n;\r\nfunction fun22_token(f22p0, f22p1, f22p2, f22p3, f22p4) {\r\n    const v0fun22_token = ((f22p0 + 49173) * 1103515245 + 12345) % 2147483648;\r\n    const v1fun22_token = (f22p1 + 52922) % 65337;\r\n    const v2fun22_token = f22p2 ^ 25250;\r\n    const v3fun22_token = ~(f22p3 & 10903) & 10903 | ~(10903 & f22p3) & f22p3;\r\n    const v4fun22_token = ~(f22p4 & 33814) & 33814 | ~(33814 & f22p4) & f22p4;\r\n    const v5fun22_token = fun31_token(v0fun22_token, v1fun22_token, v2fun22_token, v3fun22_token, v4fun22_token);\r\n    const v6fun22_token = fun23_token(v0fun22_token, v1fun22_token);\r\n    const v7fun22_token = fun31_token(v2fun22_token, v3fun22_token, v4fun22_token, v0fun22_token, v1fun22_token);\r\n    const v8fun22_token = (1 + 22695477 * ((v5fun22_token ^ v6fun22_token) + 19675)) % 4294967296;\r\n    const v9fun22_token = ~(7922 & v8fun22_token) & v8fun22_token | ~(v8fun22_token & 7922) & 7922;\r\n    return v9fun22_token;\r\n}\r\n;\r\nfunction fun23_token(f23p0, f23p1) {\r\n    const v0fun23_token = 24508 ^ f23p0;\r\n    const v1fun23_token = (16 << (f23p1 >> 16 & 255)) + (24 << (f23p1 >> 8 & 255)) + (32 << (f23p1 >> 32 & 255)) + (8 << (f23p1 >> 24 & 255));\r\n    const v2fun23_token = fun26_token(v0fun23_token, v1fun23_token, v0fun23_token, v1fun23_token, v0fun23_token);\r\n    const v3fun23_token = fun28_token(v1fun23_token, v0fun23_token, v1fun23_token, v0fun23_token, v1fun23_token);\r\n    const v4fun23_token = fun24_token(v0fun23_token, v1fun23_token, v0fun23_token, v1fun23_token, v0fun23_token);\r\n    const v5fun23_token = (2147483629 * ((v2fun23_token ^ v3fun23_token) + 11269) + 2147483587) % 2147483647;\r\n    const v6fun23_token = ~(v5fun23_token & 40927) & 40927 | ~(40927 & v5fun23_token) & v5fun23_token;\r\n    return v6fun23_token;\r\n}\r\n;\r\nfunction fun25_token(f25p0, f25p1, f25p2) {\r\n    const v0fun25_token = 23323 ^ f25p0;\r\n    const v1fun25_token = (2531011 + (61713 + f25p1) * 214013) % 4294967296;\r\n    const v2fun25_token = (f25p2 | 24198) & ~(f25p2 & 24198);\r\n    const v3fun25_token = fun26_token(v0fun25_token, v1fun25_token, v2fun25_token, v0fun25_token, v1fun25_token);\r\n    const v4fun25_token = fun26_token(v2fun25_token, v0fun25_token, v1fun25_token, v2fun25_token, v0fun25_token);\r\n    const v5fun25_token = fun26_token(v1fun25_token, v2fun25_token, v0fun25_token, v1fun25_token, v2fun25_token);\r\n    const v6fun25_token = (16 << ((v3fun25_token ^ v4fun25_token) >> 32 & 255)) + (8 << ((v3fun25_token ^ v4fun25_token) >> 8 & 255)) + (24 << ((v3fun25_token ^ v4fun25_token) >> 24 & 255)) + (32 << ((v3fun25_token ^ v4fun25_token) >> 16 & 255));\r\n    const v7fun25_token = v6fun25_token ^ 31181;\r\n    return v7fun25_token;\r\n}\r\n;\r\nfunction fun33_token(f33p0, f33p1, f33p2, f33p3, f33p4, f33p5) {\r\n    const v0fun33_token = (f33p0 + 52483) % 65496;\r\n    const v1fun33_token = (16 << (f33p1 >> 16 & 255)) + (24 << (f33p1 >> 8 & 255)) + (32 << (f33p1 >> 24 & 255)) + (8 << (f33p1 >> 32 & 255));\r\n    const v2fun33_token = f33p2 ^ 8102;\r\n    const v3fun33_token = (24 << (f33p3 >> 16 & 255)) + (32 << (f33p3 >> 32 & 255)) + (8 << (f33p3 >> 24 & 255)) + (16 << (f33p3 >> 8 & 255));\r\n    const v4fun33_token = ~(f33p4 & 29687) & 29687 | ~(29687 & f33p4) & f33p4;\r\n    const v5fun33_token = (1 + (62237 + f33p5) * 22695477) % 4294967296;\r\n    const v6fun33_token = fun34_token(v0fun33_token, v1fun33_token);\r\n    const v7fun33_token = fun34_token(v2fun33_token, v3fun33_token);\r\n    const v8fun33_token = fun34_token(v4fun33_token, v5fun33_token);\r\n    const v9fun33_token = (45290 + (v6fun33_token ^ v7fun33_token)) % 65334;\r\n    const v10fun33_token = 55575 ^ v9fun33_token;\r\n    return v10fun33_token;\r\n}\r\n;\r\nfunction fun2_token(f2p0, f2p1) {\r\n    const v0fun2_token = (16 << (f2p0 >> 8 & 255)) + (32 << (f2p0 >> 16 & 255)) + (8 << (f2p0 >> 32 & 255)) + (24 << (f2p0 >> 24 & 255));\r\n    const v1fun2_token = (32 << (f2p1 >> 32 & 255)) + (24 << (f2p1 >> 24 & 255)) + (8 << (f2p1 >> 8 & 255)) + (16 << (f2p1 >> 16 & 255));\r\n    const v2fun2_token = fun30_token(v0fun2_token, v1fun2_token, v0fun2_token, v1fun2_token, v0fun2_token, v1fun2_token);\r\n    const v3fun2_token = fun3_token(v0fun2_token, v1fun2_token, v0fun2_token, v1fun2_token, v0fun2_token);\r\n    const v4fun2_token = fun27_token(v1fun2_token, v0fun2_token);\r\n    const v5fun2_token = (v2fun2_token | 58283) & ~(58283 & v2fun2_token);\r\n    const v6fun2_token = 8337 ^ v5fun2_token;\r\n    return v6fun2_token;\r\n}\r\n;\r\n;\r\n(function (factory) {\r\n    var registeredInModuleLoader = false;\r\n    if (true) {\r\n        !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n        registeredInModuleLoader = true;\r\n    }\r\n    if (true) {\r\n        module.exports = factory();\r\n        registeredInModuleLoader = true;\r\n    }\r\n    if (!registeredInModuleLoader) {\r\n        var OldCookies = window.Cookies;\r\n        var api = window.Cookies = factory();\r\n        api.noConflict = function () {\r\n            window.Cookies = OldCookies;\r\n            return api;\r\n        };\r\n    }\r\n}(function () {\r\n    function extend() {\r\n        var i = 0;\r\n        var result = {};\r\n        for (; i < arguments.length; i++) {\r\n            var attributes = arguments[i];\r\n            for (var key in attributes) {\r\n                result[key] = attributes[key];\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    ;\r\n    function init(converter) {\r\n        function api(key, value, attributes) {\r\n            var result;\r\n            if (typeof document === \"undefined\") {\r\n                return;\r\n            }\r\n            if (arguments.length > 1) {\r\n                attributes = extend({path: \"/\"}, api.defaults, attributes);\r\n                if (typeof attributes.expires === \"number\") {\r\n                    var expires = new Date;\r\n                    expires.setMilliseconds(expires.getMilliseconds() + attributes.expires * 864e5);\r\n                    attributes.expires = expires;\r\n                }\r\n                try {\r\n                    result = JSON.stringify(value);\r\n                    if (/^[\\{\\[]/.test(result)) {\r\n                        value = result;\r\n                    }\r\n                } catch (e) {}\r\n                if (!converter.write) {\r\n                    value = encodeURIComponent(String(value)).replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent);\r\n                } else {\r\n                    value = converter.write(value, key);\r\n                }\r\n                key = encodeURIComponent(String(key));\r\n                key = key.replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent);\r\n                key = key.replace(/[\\(\\)]/g, escape);\r\n                return document.cookie = [key, \"=\", value, attributes.expires ? \"; expires=\" + attributes.expires.toUTCString() : \"\", attributes.path ? \"; path=\" + attributes.path : \"\", attributes.domain ? \"; domain=\" + attributes.domain : \"\", attributes.secure ? \"; secure\" : \"\"].join(\"\");\r\n            }\r\n            if (!key) {\r\n                result = {};\r\n            }\r\n            var cookies = document.cookie ? document.cookie.split(\"; \") : [];\r\n            var rdecode = /(%[0-9A-Z]{2})+/g;\r\n            var i = 0;\r\n            for (; i < cookies.length; i++) {\r\n                var parts = cookies[i].split(\"=\");\r\n                var cookie = parts.slice(1).join(\"=\");\r\n                if (cookie.charAt(0) === '\"') {\r\n                    cookie = cookie.slice(1, -1);\r\n                }\r\n                try {\r\n                    var name = parts[0].replace(rdecode, decodeURIComponent);\r\n                    cookie = converter.read ? converter.read(cookie, name) : converter(cookie, name) || cookie.replace(rdecode, decodeURIComponent);\r\n                    if (this.json) {\r\n                        try {\r\n                            cookie = JSON.parse(cookie);\r\n                        } catch (e) {}\r\n                    }\r\n                    if (key === name) {\r\n                        result = cookie;\r\n                        break;\r\n                    }\r\n                    if (!key) {\r\n                        result[name] = cookie;\r\n                    }\r\n                } catch (e) {}\r\n            }\r\n            return result;\r\n        }\r\n        ;\r\n        api.set = api;\r\n        api.get = function (key) {\r\n            return api.call(api, key);\r\n        };\r\n        api.getJSON = function () {\r\n            return api.apply({json: true}, [].slice.call(arguments));\r\n        };\r\n        api.defaults = {};\r\n        api.remove = function (key, attributes) {\r\n            api(key, \"\", extend(attributes, {expires: -1}));\r\n        };\r\n        api.withConverter = init;\r\n        return api;\r\n    }\r\n    ;\r\n    return init(function () {});\r\n}));\r\nfunction reloadIframe() {\r\n    try {\r\n        if (window.self !== window.top) {\r\n            loaded = Cookies.get(\"inIframe\");\r\n            if (loaded) Cookies.remove(\"inIframe\"); else {\r\n                Cookies.set(\"inIframe\", \"1\");\r\n                location.href = \"http://starve.io\";\r\n            }\r\n        }\r\n    } catch (e) {}\r\n}\r\n;\r\nreloadIframe();\r\nfunction Mouse() {\r\n    this.DOWN = 0, this.UP = 1, this.IDLE = 2, this.IN = 0, this.OUT = 1, this.pos = {x: 0, y: 0};\r\n    this.x_old = 0;\r\n    this.y_old = 0;\r\n    this.angle = 0;\r\n    this.state = this.IDLE;\r\n    this.dist = this.IN;\r\n    this.down = function () {\r\n        this.state = this.DOWN;\r\n    };\r\n    this.up = function () {\r\n        this.state = this.UP;\r\n    };\r\n    this.update = function () {\r\n        if (this.pos.x != this.x_old || this.pos.y != this.y_old) {\r\n            this.x_old = this.pos.x;\r\n            this.y_old = this.pos.y;\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n}\r\n;\r\nfunction Keyboard() {\r\n    this.set_azerty = function () {\r\n        this.LEFT = 81;\r\n        this.RIGHT = 68;\r\n        this.TOP = 90;\r\n        this.DOWN = 83;\r\n    };\r\n    this.set_qwerty = function () {\r\n        this.LEFT = 65;\r\n        this.RIGHT = 68;\r\n        this.TOP = 87;\r\n        this.BOTTOM = 83;\r\n    };\r\n    this.UP = 0, this.DOWN = 1, this._1 = 49;\r\n    this._2 = 50;\r\n    this._3 = 51;\r\n    this._4 = 52;\r\n    this._5 = 53;\r\n    this.CTRL = 17;\r\n    this.ARROW_LEFT = 37;\r\n    this.ARROW_RIGHT = 39;\r\n    this.ARROW_TOP = 38;\r\n    this.ARROW_BOTTOM = 40;\r\n    this.SPACE = 32;\r\n    this.R = 82;\r\n    this.G = 71;\r\n    this.V = 86;\r\n    this.B = 66;\r\n    this.set_qwerty();\r\n    this.keys = new Array(255);\r\n    for (var i = 0; i < 255; i++) this.keys[i] = this.UP;\r\n    this.up = function (evt) {\r\n        var k = Math.min(evt.charCode || evt.keyCode, 255);\r\n        this.keys[k] = this.UP;\r\n    };\r\n    this.down = function (evt) {\r\n        var k = Math.min(evt.charCode || evt.keyCode, 255);\r\n        if (k == this.LEFT || k == this.ARROW_LEFT) this.press_left(); else if (k == this.TOP || k == this.ARROW_TOP) this.press_top(); else if (k == this.DOWN || k == this.ARROW_DOWN) this.press_bottom(); else if (k == this.RIGHT || k == this.ARROW_RIGHT) this.press_right();\r\n        this.keys[k] = this.DOWN;\r\n        return k;\r\n    };\r\n    this.press_left = function () {\r\n        this.keys[this.RIGHT] = this.UP;\r\n        this.keys[this.ARROW_RIGHT] = this.UP;\r\n    };\r\n    this.press_right = function () {\r\n        this.keys[this.LEFT] = this.UP;\r\n        this.keys[this.ARROW_LEFT] = this.UP;\r\n    };\r\n    this.press_bottom = function () {\r\n        this.keys[this.TOP] = this.UP;\r\n        this.keys[this.ARROW_TOP] = this.UP;\r\n    };\r\n    this.press_top = function () {\r\n        this.keys[this.BOTTOM] = this.UP;\r\n        this.keys[this.ARROW_BOTTOM] = this.UP;\r\n    };\r\n    this.clear_directionnal = function () {\r\n        this.keys[this.RIGHT] = this.UP;\r\n        this.keys[this.ARROW_RIGHT] = this.UP;\r\n        this.keys[this.LEFT] = this.UP;\r\n        this.keys[this.ARROW_LEFT] = this.UP;\r\n        this.keys[this.TOP] = this.UP;\r\n        this.keys[this.ARROW_TOP] = this.UP;\r\n        this.keys[this.BOTTOM] = this.UP;\r\n        this.keys[this.ARROW_BOTTOM] = this.UP;\r\n    };\r\n    this.is_left = function () {\r\n        return this.keys[this.LEFT] || this.keys[this.ARROW_LEFT];\r\n    };\r\n    this.is_right = function () {\r\n        return this.keys[this.RIGHT] || this.keys[this.ARROW_RIGHT];\r\n    };\r\n    this.is_top = function () {\r\n        return this.keys[this.TOP] || this.keys[this.ARROW_TOP];\r\n    };\r\n    this.is_bottom = function () {\r\n        return this.keys[this.BOTTOM] || this.keys[this.ARROW_BOTTOM];\r\n    };\r\n    this.is_ctrl = function () {\r\n        return this.keys[this.CTRL];\r\n    };\r\n    this.is_1 = function () {\r\n        return this.keys[this._1];\r\n    };\r\n    this.is_2 = function () {\r\n        return this.keys[this._2];\r\n    };\r\n    this.is_3 = function () {\r\n        return this.keys[this._3];\r\n    };\r\n    this.is_4 = function () {\r\n        return this.keys[this._4];\r\n    };\r\n    this.is_space = function () {\r\n        return this.keys[this.SPACE];\r\n    };\r\n    this.is_r = function () {\r\n        return this.keys[this.R];\r\n    };\r\n    this.is_g = function () {\r\n        return this.keys[this.G];\r\n    };\r\n    this.is_v = function () {\r\n        return this.keys[this.V];\r\n    };\r\n    this.is_b = function () {\r\n        return this.keys[this.B];\r\n    };\r\n}\r\n;\r\nvar can = document.getElementById(\"game_canvas\");\r\nvar ctx = can.getContext(\"2d\");\r\nvar canw = can.width;\r\nvar canh = can.height;\r\nvar canw2 = can.width / 2;\r\nvar canh2 = can.height / 2;\r\nvar canm = {x: canw2, y: canh2};\r\nvar scale = 1;\r\nvar ratio = 1;\r\nvar ratio_opt = -1;\r\nvar JUNK10;\r\nvar JUNK8 = \"J\" + JUNK3;\r\nvar JUNK6 = \"S\" + JUNK4;\r\nvar WINDOW1 = window;\r\nvar JUNK4;\r\nvar JSONWORD2;\r\nvar JUNK1 = \"O\";\r\nvar JUNK2 = JUNK1 + \"N\";\r\nvar JSONWORD1 = \"O\";\r\nvar JSONWORD12 = 0;\r\nvar JUNK3;\r\nvar WINDOW2 = WINDOW1;\r\nvar JUNK4;\r\nvar JSONWORD3;\r\nvar JUNK6 = \"N\";\r\nvar JUNK7 = \"J\";\r\nvar JUNK1 = \"O\" + JUNK3;\r\nvar JUNK8;\r\nvar WINDOW3 = WINDOW2;\r\nvar JUNK9;\r\nvar JUNK10;\r\nvar JSONWORD4;\r\nvar JUNK5;\r\nvar JUNK4;\r\nvar JUNK3;\r\nvar WINDOW4 = WINDOW3;\r\nvar JUNK2 = \"N\" + JUNK5;\r\nvar JUNK2;\r\nvar WINDOW5 = WINDOW4;\r\nvar JSONWORD5;\r\nvar JUNK1;\r\nvar JUNK10;\r\nvar JUNK9 = \"\";\r\nvar JSONWORD6;\r\nvar WINDOW6 = WINDOW5;\r\nvar JSONWORD7;\r\nvar JUNK4;\r\nvar JUNK3;\r\nvar WINDOW7 = WINDOW6;\r\nvar JUNK1;\r\nvar JSONWORD8;\r\nvar JUNK8;\r\nvar WINDOW8 = WINDOW7;\r\nvar JUNK7 = \"O\";\r\nvar JUNK10 = \"J\";\r\nvar JUNK6;\r\nvar JSONWORD9;\r\nvar JUNK10;\r\nvar WINDOW8 = WINDOW7;\r\nvar JSONWORD9 = \"S\";\r\nvar WINDOW9 = WINDOW8;\r\nvar JUNK5;\r\nvar JSONWORD10;\r\nvar WINDOW10 = WINDOW9;\r\nvar JUNK4 = JUNK10 + JSONWORD9;\r\ncan.oncontextmenu = function () {\r\n    return false;\r\n};\r\nJUNK8 = JUNK10;\r\nJUNK9 = JUNK8;\r\nfunction CTI(c) {\r\n    var img = new Image;\r\n    img.src = c.toDataURL(\"image/png\");\r\n    img.width = c.width;\r\n    img.height = c.height;\r\n    img.isLoaded = 1;\r\n    return img;\r\n}\r\n;\r\nJUNK8 = JUNK6;\r\nJUNK7 = JUNK7 + JUNK8;\r\nJSONWORD1 = JUNK4 + JUNK7;\r\nJSONWORD2 = JSONWORD1;\r\nJUNK1 = JUNK2;\r\nJSONWORD3 = JSONWORD2;\r\nJUNK2 = JUNK3;\r\nJUNK3 = JUNK4;\r\nJSONWORD5 = JUNK4 + JUNK7;\r\nJUNK3 = JUNK4;\r\nJUNK1 = JUNK4;\r\nJSONWORD4 = JSONWORD5;\r\nJUNK6 = JUNK7 + JUNK8;\r\nJSONWORD6 = JSONWORD2;\r\nJUNK1 = JUNK4 + JUNK7;\r\nJSONWORD7 = JSONWORD1;\r\nJUNK2 = JUNK4 + JUNK7;\r\nJSONWORD8 = JSONWORD3;\r\nJUNK7 = JUNK3;\r\nJSONWORD9 = JSONWORD1;\r\nJSONWORD10 = JSONWORD2;\r\nJUNK8 = JUNK1;\r\nvar devicePixelRatio = window.devicePixelRatio || 1;\r\nvar backingStoreRatio = ctx.webkitBackingStorePixelRatio || ctx.mozBackingStorePixelRatio || ctx.msBackingStorePixelRatio || ctx.oBackingStorePixelRatio || ctx.backingStorePixelRatio || 1;\r\nfunction resize_canvas() {\r\n    if (can.width != window.innerWidth) {\r\n        can.width = window.innerWidth;\r\n        canw = can.width;\r\n        canw2 = can.width / 2;\r\n    }\r\n    if (can.height != window.innerHeight) {\r\n        can.height = window.innerHeight;\r\n        canh = can.height;\r\n        canh2 = can.height / 2;\r\n    }\r\n    canm = {x: canw2, y: canh2};\r\n    var ow = can.width;\r\n    var oh = can.height;\r\n    if (ratio_opt === -1) ratio = devicePixelRatio / backingStoreRatio; else ratio = ratio_opt;\r\n    can.width = ow * ratio;\r\n    can.height = oh * ratio;\r\n    can.style.width = ow + \"px\";\r\n    can.style.height = oh + \"px\";\r\n    ctx.scale(ratio, ratio);\r\n    if (user) {\r\n        user.cam.rw = ow;\r\n        user.cam.rh = oh;\r\n    }\r\n    if (loader.is_run) loader.update(); else if (ui.is_run) ui.update(); else if (game.is_run) game.update(); else if (scoreboard.is_run) scoreboard.update();\r\n}\r\n;\r\nvar game_body = document.getElementById(\"game_body\");\r\ngame_body.ondragstart = function () {\r\n    return false;\r\n};\r\ngame_body.ondrop = function () {\r\n    return false;\r\n};\r\ngame_body.onresize = resize_canvas;\r\n(function () {\r\n    var lastTime = 0;\r\n    var vendors = [\"ms\", \"moz\", \"webkit\", \"o\"];\r\n    for (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\r\n        window.requestAnimationFrame = window[vendors[x] + \"RequestAnimationFrame\"];\r\n        window.cancelAnimationFrame = window[vendors[x] + \"CancelAnimationFrame\"] || window[vendors[x] + \"CancelRequestAnimationFrame\"];\r\n    }\r\n    if (!window.requestAnimationFrame) window.requestAnimationFrame = function (callback, element) {\r\n        var currTime = (new Date).getTime();\r\n        var timeToCall = Math.max(0, 16 - (currTime - lastTime));\r\n        var id = window.setTimeout(function () {\r\n            callback(currTime + timeToCall);\r\n        }, timeToCall);\r\n        lastTime = currTime + timeToCall;\r\n        return id;\r\n    };\r\n    if (!window.cancelAnimationFrame) window.cancelAnimationFrame = function (id) {\r\n        clearTimeout(id);\r\n    };\r\n}());\r\nvar lang = navigator.language || navigator.userLanguage;\r\nvar timezone = -((new Date).getTimezoneOffset() / 60);\r\nvar TZ_EU = \"Europe\";\r\nvar TZ_RU = \"Russia\";\r\nvar TZ_NA = \"North America\";\r\nvar TZ_SA = \"South America\";\r\nvar TZ_WA = \"West America\";\r\nvar TZ_AS = \"Asia\";\r\nvar TZ_AU = \"Australia\";\r\nvar TZ = TZ_EU;\r\nif (timezone >= -2 && timezone <= 2) TZ = TZ_EU; else if (timezone > 2 && timezone <= 5) TZ = TZ_RU; else if (timezone > 5 && timezone <= 9) TZ = TZ_AS; else if (timezone > 9) TZ = TZ_AU; else if (timezone >= -5 && timezone < -2) {\r\n    if (lang === \"pt-BR\" || lang === \"pt-br\" || lang === \"pt\" || lang === \"pt-pt\") TZ = TZ_SA; else TZ = TZ_NA;\r\n} else if (timezone < -5) {\r\n    if (lang === \"pt-BR\" || lang === \"pt-br\" || lang === \"pt\" || lang === \"pt-pt\") TZ = TZ_SA; else TZ = TZ_WA;\r\n}\r\nvar RNG = function () {\r\n    function Random(seed) {\r\n        var m = 2147483648;\r\n        var a = 1103515245;\r\n        var c = 12345;\r\n        var state = seed ? seed : Math.floor(Math.random() * (m - 1));\r\n        this.init = function (seed) {\r\n            state = seed ? seed : Math.floor(Math.random() * (m - 1));\r\n        };\r\n        this.get = function () {\r\n            state = (a * state + c) % m;\r\n            return state / m;\r\n        };\r\n    }\r\n    ;\r\n    ;\r\n    return {Random: Random};\r\n}();\r\nfunction fetchPageViewCanidate() {\r\n    return new Promise((resolve, reject) => {\r\n        try {\r\n            fetch(\"https://starve.io/datas/comscore.json\").then(res => res.json()).then(json => {\r\n                if (json) resolve(true);\r\n                reject(false);\r\n            }).catch(err => reject(err));\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    });\r\n}\r\n;\r\nvar ___MAP___ = [[0, \"DRAGON\", 18, 6, 66, 35, 0], [0, \"WINTER\", 91, 18, 5, 40, 8], [0, \"DESERT\", 135, 180, 89, 124, 5], [0, \"LAVA\", 142, 6, 82, 99, 6], [0, \"FOREST\", 6, 150, 90, 154, 8], [0, \"WINTER\", 6, 6, 90, 150, 0], [1, \"b\", 0, 5, 175, 0], [1, \"t\", 2, 5, 174, 0], [1, \"t\", 5, 5, 173, 0], [1, \"b\", 3, 5, 176, 0], [1, \"t\", 0, 5, 177, 0], [1, \"t\", 3, 5, 178, 0], [1, \"t\", 4, 5, 179, 0], [1, \"b\", 0, 5, 180, 0], [1, \"t\", 5, 5, 181, 0], [1, \"b\", 2, 5, 182, 0], [1, \"b\", 1, 5, 183, 0], [1, \"b\", 2, 5, 184, 0], [1, \"t\", 5, 5, 185, 0], [1, \"t\", 2, 5, 186, 0], [1, \"t\", 0, 5, 187, 0], [1, \"t\", 5, 5, 188, 0], [1, \"t\", 1, 5, 189, 0], [1, \"b\", 2, 5, 190, 0], [1, \"t\", 4, 5, 191, 0], [1, \"b\", 3, 5, 192, 0], [1, \"t\", 5, 5, 193, 0], [1, \"t\", 0, 5, 194, 0], [1, \"t\", 3, 5, 195, 0], [1, \"b\", 0, 5, 196, 0], [1, \"t\", 5, 5, 197, 0], [1, \"t\", 2, 5, 198, 0], [1, \"b\", 2, 5, 199, 0], [1, \"t\", 4, 5, 200, 0], [1, \"t\", 1, 5, 201, 0], [1, \"b\", 1, 5, 202, 0], [1, \"t\", 5, 5, 203, 0], [1, \"t\", 2, 5, 204, 0], [1, \"t\", 4, 5, 205, 0], [1, \"b\", 2, 5, 206, 0], [1, \"t\", 1, 5, 207, 0], [1, \"t\", 4, 5, 208, 0], [1, \"t\", 2, 5, 209, 0], [1, \"b\", 0, 5, 210, 0], [1, \"t\", 5, 5, 211, 0], [1, \"t\", 1, 5, 212, 0], [1, \"t\", 2, 5, 213, 0], [1, \"b\", 3, 5, 214, 0], [1, \"t\", 5, 5, 215, 0], [1, \"b\", 0, 5, 216, 0], [1, \"t\", 4, 5, 217, 0], [1, \"t\", 2, 5, 218, 0], [1, \"t\", 1, 5, 219, 0], [1, \"t\", 3, 5, 220, 0], [1, \"t\", 5, 5, 221, 0], [1, \"t\", 2, 5, 222, 0], [1, \"t\", 4, 5, 223, 0], [1, \"b\", 3, 5, 224, 0], [1, \"t\", 1, 5, 225, 0], [1, \"t\", 3, 5, 226, 0], [1, \"b\", 0, 5, 227, 0], [1, \"t\", 3, 5, 228, 0], [1, \"t\", 5, 5, 229, 0], [1, \"t\", 2, 5, 230, 0], [1, \"t\", 0, 5, 231, 0], [1, \"b\", 2, 5, 232, 0], [1, \"t\", 1, 5, 233, 0], [1, \"t\", 4, 5, 234, 0], [1, \"b\", 1, 5, 235, 0], [1, \"t\", 4, 5, 236, 0], [1, \"t\", 2, 5, 237, 0], [1, \"t\", 0, 5, 238, 0], [1, \"t\", 4, 5, 239, 0], [1, \"b\", 2, 5, 240, 0], [1, \"t\", 5, 5, 241, 0], [1, \"b\", 1, 5, 242, 0], [1, \"t\", 4, 5, 243, 0], [1, \"t\", 2, 5, 244, 0], [1, \"t\", 1, 5, 245, 0], [1, \"b\", 1, 5, 246, 0], [1, \"t\", 3, 5, 247, 0], [1, \"b\", 2, 5, 248, 0], [1, \"t\", 5, 5, 249, 0], [1, \"t\", 2, 5, 250, 0], [1, \"t\", 4, 5, 251, 0], [1, \"b\", 1, 5, 252, 0], [1, \"t\", 4, 5, 253, 0], [1, \"t\", 1, 5, 254, 0], [1, \"t\", 3, 5, 255, 0], [1, \"t\", 5, 5, 256, 0], [1, \"b\", 2, 5, 257, 0], [1, \"t\", 4, 5, 258, 0], [1, \"b\", 3, 5, 259, 0], [1, \"t\", 5, 5, 260, 0], [1, \"b\", 0, 5, 261, 0], [1, \"t\", 3, 5, 262, 0], [1, \"t\", 4, 5, 263, 0], [1, \"t\", 2, 5, 264, 0], [1, \"b\", 1, 5, 265, 0], [1, \"b\", 2, 5, 266, 0], [1, \"t\", 3, 5, 267, 0], [1, \"t\", 4, 5, 268, 0], [1, \"t\", 0, 5, 269, 0], [1, \"t\", 5, 5, 270, 0], [1, \"t\", 3, 5, 271, 0], [1, \"t\", 4, 5, 272, 0], [1, \"t\", 1, 5, 273, 0], [1, \"b\", 2, 5, 274, 0], [1, \"t\", 1, 5, 275, 0], [1, \"t\", 4, 5, 276, 0], [1, \"b\", 1, 5, 277, 0], [1, \"b\", 2, 5, 278, 0], [1, \"t\", 1, 5, 279, 0], [1, \"t\", 4, 5, 280, 0], [1, \"t\", 2, 5, 281, 0], [1, \"t\", 5, 5, 282, 0], [1, \"b\", 2, 5, 283, 0], [1, \"t\", 1, 5, 284, 0], [1, \"b\", 3, 5, 285, 0], [1, \"t\", 4, 5, 286, 0], [1, \"t\", 0, 5, 287, 0], [1, \"t\", 5, 5, 288, 0], [1, \"t\", 2, 5, 289, 0], [1, \"b\", 1, 5, 290, 0], [1, \"t\", 4, 5, 292, 0], [1, \"t\", 2, 5, 291, 0], [1, \"b\", 2, 5, 293, 0], [1, \"t\", 1, 5, 294, 0], [1, \"t\", 3, 5, 295, 0], [1, \"t\", 5, 5, 296, 0], [1, \"b\", 0, 5, 297, 0], [1, \"b\", 3, 5, 298, 0], [1, \"t\", 4, 5, 299, 0], [1, \"t\", 2, 5, 300, 0], [1, \"t\", 4, 5, 301, 0], [1, \"b\", 0, 5, 302, 0], [1, \"b\", 2, 5, 303, 0], [1, \"t\", 1, 6, 303, 0], [1, \"t\", 2, 7, 303, 0], [1, \"t\", 1, 5, 304, 0], [1, \"t\", 3, 6, 304, 0], [1, \"t\", 4, 7, 304, 0], [1, \"t\", 5, 8, 303, 0], [1, \"b\", 1, 8, 304, 0], [1, \"b\", 2, 9, 304, 0], [1, \"b\", 3, 12, 303, 0], [1, \"b\", 3, 17, 304, 0], [1, \"t\", 1, 9, 303, 0], [1, \"t\", 1, 15, 304, 0], [1, \"t\", 1, 13, 303, 0], [1, \"t\", 3, 10, 303, 0], [1, \"t\", 3, 14, 304, 0], [1, \"t\", 4, 10, 304, 0], [1, \"t\", 5, 11, 304, 0], [1, \"t\", 5, 14, 303, 0], [1, \"t\", 5, 16, 304, 0], [1, \"t\", 5, 13, 304, 0], [1, \"t\", 2, 12, 304, 0], [1, \"t\", 1, 11, 303, 0], [1, \"b\", 3, 15, 303, 0], [1, \"b\", 0, 16, 303, 0], [1, \"t\", 3, 17, 303, 0], [1, \"t\", 4, 18, 303, 0], [1, \"t\", 2, 19, 303, 0], [1, \"t\", 1, 20, 303, 0], [1, \"b\", 1, 21, 303, 0], [1, \"t\", 2, 22, 303, 0], [1, \"t\", 4, 23, 303, 0], [1, \"b\", 3, 24, 303, 0], [1, \"t\", 5, 25, 303, 0], [1, \"t\", 1, 26, 303, 0], [1, \"t\", 2, 27, 303, 0], [1, \"t\", 4, 28, 303, 0], [1, \"b\", 0, 18, 304, 0], [1, \"t\", 2, 19, 304, 0], [1, \"t\", 5, 20, 304, 0], [1, \"b\", 2, 21, 304, 0], [1, \"t\", 4, 22, 304, 0], [1, \"t\", 2, 23, 304, 0], [1, \"t\", 1, 24, 304, 0], [1, \"t\", 3, 25, 304, 0], [1, \"t\", 0, 27, 304, 0], [1, \"t\", 5, 26, 304, 0], [1, \"b\", 2, 28, 304, 0], [1, \"t\", 1, 29, 304, 0], [1, \"b\", 1, 29, 303, 0], [1, \"b\", 2, 30, 303, 0], [1, \"t\", 4, 31, 303, 0], [1, \"t\", 0, 32, 303, 0], [1, \"t\", 5, 33, 303, 0], [1, \"t\", 2, 34, 303, 0], [1, \"t\", 4, 35, 303, 0], [1, \"t\", 1, 36, 303, 0], [1, \"b\", 3, 37, 303, 0], [1, \"t\", 2, 32, 304, 0], [1, \"t\", 4, 30, 304, 0], [1, \"t\", 1, 31, 304, 0], [1, \"b\", 1, 33, 304, 0], [1, \"t\", 2, 35, 304, 0], [1, \"t\", 5, 34, 304, 0], [1, \"b\", 2, 36, 304, 0], [1, \"t\", 5, 37, 304, 0], [1, \"t\", 1, 38, 304, 0], [1, \"b\", 1, 40, 303, 0], [1, \"t\", 3, 39, 303, 0], [1, \"t\", 3, 42, 304, 0], [1, \"t\", 5, 38, 303, 0], [1, \"t\", 5, 39, 304, 0], [1, \"t\", 5, 41, 303, 0], [1, \"t\", 4, 41, 304, 0], [1, \"t\", 4, 44, 303, 0], [1, \"b\", 2, 40, 304, 0], [1, \"b\", 2, 43, 303, 0], [1, \"t\", 1, 42, 303, 0], [1, \"t\", 1, 43, 304, 0], [1, \"t\", 5, 44, 304, 0], [1, \"b\", 1, 45, 303, 0], [1, \"t\", 2, 45, 304, 0], [1, \"t\", 2, 46, 303, 0], [1, \"t\", 4, 47, 303, 0], [1, \"b\", 0, 48, 303, 0], [1, \"t\", 5, 49, 303, 0], [1, \"t\", 2, 50, 303, 0], [1, \"t\", 1, 51, 303, 0], [1, \"t\", 4, 52, 303, 0], [1, \"t\", 5, 46, 304, 0], [1, \"t\", 2, 47, 304, 0], [1, \"t\", 5, 48, 304, 0], [1, \"t\", 1, 49, 304, 0], [1, \"t\", 2, 50, 304, 0], [1, \"b\", 1, 53, 303, 0], [1, \"b\", 2, 51, 304, 0], [1, \"t\", 5, 52, 304, 0], [1, \"t\", 3, 53, 304, 0], [1, \"b\", 2, 54, 303, 0], [1, \"t\", 5, 54, 304, 0], [1, \"t\", 5, 55, 303, 0], [1, \"t\", 3, 56, 303, 0], [1, \"t\", 4, 57, 303, 0], [1, \"t\", 5, 58, 303, 0], [1, \"b\", 1, 55, 304, 0], [1, \"t\", 2, 56, 304, 0], [1, \"t\", 0, 57, 304, 0], [1, \"t\", 3, 58, 304, 0], [1, \"t\", 3, 63, 304, 0], [1, \"t\", 3, 59, 303, 0], [1, \"t\", 4, 59, 304, 0], [1, \"t\", 5, 60, 303, 0], [1, \"t\", 0, 60, 304, 0], [1, \"t\", 0, 66, 303, 0], [1, \"t\", 0, 70, 304, 0], [1, \"t\", 3, 61, 304, 0], [1, \"t\", 3, 67, 303, 0], [1, \"t\", 3, 73, 304, 0], [1, \"t\", 3, 76, 303, 0], [1, \"t\", 3, 78, 304, 0], [1, \"t\", 1, 61, 303, 0], [1, \"t\", 1, 73, 303, 0], [1, \"t\", 1, 79, 303, 0], [1, \"b\", 2, 62, 304, 0], [1, \"b\", 2, 70, 303, 0], [1, \"t\", 5, 62, 303, 0], [1, \"t\", 5, 68, 303, 0], [1, \"t\", 5, 71, 304, 0], [1, \"t\", 5, 77, 304, 0], [1, \"t\", 5, 75, 303, 0], [1, \"t\", 5, 64, 304, 0], [1, \"t\", 5, 65, 303, 0], [1, \"t\", 5, 80, 303, 0], [1, \"t\", 1, 76, 304, 0], [1, \"t\", 3, 63, 303, 0], [1, \"t\", 5, 82, 304, 0], [1, \"b\", 2, 65, 304, 0], [1, \"t\", 1, 64, 303, 0], [1, \"t\", 1, 68, 304, 0], [1, \"t\", 2, 69, 304, 0], [1, \"t\", 4, 69, 303, 0], [1, \"t\", 5, 66, 304, 0], [1, \"t\", 0, 67, 304, 0], [1, \"b\", 2, 72, 304, 0], [1, \"t\", 0, 71, 303, 0], [1, \"t\", 4, 72, 303, 0], [1, \"t\", 4, 74, 304, 0], [1, \"t\", 2, 74, 303, 0], [1, \"t\", 3, 75, 304, 0], [1, \"t\", 1, 77, 303, 0], [1, \"t\", 4, 78, 303, 0], [1, \"t\", 4, 79, 304, 0], [1, \"t\", 2, 80, 304, 0], [1, \"b\", 1, 81, 304, 0], [1, \"t\", 2, 81, 303, 0], [1, \"t\", 5, 82, 303, 0], [1, \"t\", 1, 83, 303, 0], [1, \"b\", 2, 83, 304, 0], [1, \"t\", 1, 84, 304, 0], [1, \"t\", 4, 84, 303, 0], [1, \"t\", 5, 85, 304, 0], [1, \"t\", 3, 85, 303, 0], [1, \"b\", 2, 86, 304, 0], [1, \"t\", 1, 86, 303, 0], [1, \"b\", 3, 87, 303, 0], [1, \"t\", 4, 87, 304, 0], [1, \"t\", 4, 88, 303, 0], [1, \"t\", 0, 88, 304, 0], [1, \"b\", 1, 89, 303, 0], [1, \"t\", 3, 89, 304, 0], [1, \"t\", 3, 90, 303, 0], [1, \"t\", 4, 90, 304, 0], [1, \"t\", 4, 91, 303, 0], [1, \"t\", 0, 91, 304, 0], [1, \"b\", 2, 92, 303, 0], [1, \"t\", 4, 92, 304, 0], [1, \"t\", 5, 93, 303, 0], [1, \"t\", 0, 93, 304, 0], [1, \"b\", 3, 94, 303, 0], [1, \"b\", 0, 94, 304, 0], [1, \"b\", 0, 95, 303, 0], [1, \"t\", 2, 95, 304, 0], [1, \"f\", 1, 5, 151, 1], [1, \"f\", 2, 5, 153, 1], [1, \"f\", 0, 5, 152, 1], [1, \"f\", 0, 5, 147, 1], [1, \"f\", 0, 5, 144, 1], [1, \"f\", 0, 5, 140, 1], [1, \"f\", 1, 5, 149, 1], [1, \"f\", 1, 5, 146, 1], [1, \"f\", 1, 5, 143, 1], [1, \"f\", 1, 5, 141, 1], [1, \"f\", 2, 5, 150, 1], [1, \"f\", 2, 5, 148, 1], [1, \"f\", 2, 5, 145, 1], [1, \"f\", 2, 5, 142, 1], [1, \"f\", 2, 5, 139, 1], [1, \"f\", 2, 5, 136, 1], [1, \"f\", 2, 5, 133, 1], [1, \"f\", 2, 5, 131, 1], [1, \"f\", 2, 5, 127, 1], [1, \"f\", 2, 5, 125, 1], [1, \"f\", 1, 5, 138, 1], [1, \"f\", 1, 5, 135, 1], [1, \"f\", 1, 5, 132, 1], [1, \"f\", 1, 5, 130, 1], [1, \"f\", 1, 5, 128, 1], [1, \"f\", 1, 5, 126, 1], [1, \"f\", 1, 5, 124, 1], [1, \"f\", 0, 5, 129, 1], [1, \"f\", 0, 5, 134, 1], [1, \"f\", 0, 5, 137, 1], [1, \"f\", 0, 5, 123, 1], [1, \"f\", 1, 5, 122, 1], [1, \"f\", 1, 5, 120, 1], [1, \"f\", 1, 5, 117, 1], [1, \"f\", 1, 5, 115, 1], [1, \"f\", 1, 5, 111, 1], [1, \"f\", 1, 5, 108, 1], [1, \"f\", 2, 5, 121, 1], [1, \"f\", 2, 5, 118, 1], [1, \"f\", 2, 5, 116, 1], [1, \"f\", 2, 5, 113, 1], [1, \"f\", 2, 5, 110, 1], [1, \"f\", 0, 5, 119, 1], [1, \"f\", 0, 5, 114, 1], [1, \"f\", 0, 5, 112, 1], [1, \"f\", 0, 5, 109, 1], [1, \"f\", 1, 5, 106, 1], [1, \"f\", 1, 5, 103, 1], [1, \"f\", 1, 5, 100, 1], [1, \"f\", 1, 5, 97, 1], [1, \"f\", 1, 5, 95, 1], [1, \"f\", 2, 5, 107, 1], [1, \"f\", 2, 5, 105, 1], [1, \"f\", 2, 5, 102, 1], [1, \"f\", 2, 5, 99, 1], [1, \"f\", 2, 5, 96, 1], [1, \"f\", 2, 5, 94, 1], [1, \"f\", 0, 5, 104, 1], [1, \"f\", 0, 5, 101, 1], [1, \"f\", 0, 5, 98, 1], [1, \"f\", 0, 5, 93, 1], [1, \"f\", 1, 5, 92, 1], [1, \"f\", 1, 5, 89, 1], [1, \"f\", 1, 5, 86, 1], [1, \"f\", 1, 5, 83, 1], [1, \"f\", 1, 5, 80, 1], [1, \"f\", 1, 5, 78, 1], [1, \"f\", 2, 5, 90, 1], [1, \"f\", 2, 5, 88, 1], [1, \"f\", 2, 5, 85, 1], [1, \"f\", 2, 5, 82, 1], [1, \"f\", 2, 5, 79, 1], [1, \"f\", 2, 5, 77, 1], [1, \"f\", 2, 5, 75, 1], [1, \"f\", 2, 5, 72, 1], [1, \"f\", 0, 5, 91, 1], [1, \"f\", 0, 5, 87, 1], [1, \"f\", 0, 5, 84, 1], [1, \"f\", 0, 5, 81, 1], [1, \"f\", 0, 5, 76, 1], [1, \"f\", 0, 5, 74, 1], [1, \"f\", 1, 5, 73, 1], [1, \"f\", 1, 5, 71, 1], [1, \"f\", 1, 5, 68, 1], [1, \"f\", 1, 5, 66, 1], [1, \"f\", 1, 5, 62, 1], [1, \"f\", 1, 5, 59, 1], [1, \"f\", 1, 5, 56, 1], [1, \"f\", 1, 5, 53, 1], [1, \"f\", 1, 5, 50, 1], [1, \"f\", 2, 5, 70, 1], [1, \"f\", 2, 5, 67, 1], [1, \"f\", 2, 5, 65, 1], [1, \"f\", 2, 5, 63, 1], [1, \"f\", 2, 5, 60, 1], [1, \"f\", 2, 5, 57, 1], [1, \"f\", 2, 5, 54, 1], [1, \"f\", 2, 5, 51, 1], [1, \"f\", 0, 5, 69, 1], [1, \"f\", 0, 5, 64, 1], [1, \"f\", 0, 5, 61, 1], [1, \"f\", 0, 5, 58, 1], [1, \"f\", 0, 5, 55, 1], [1, \"f\", 0, 5, 52, 1], [1, \"f\", 0, 5, 49, 1], [1, \"f\", 0, 5, 45, 1], [1, \"f\", 0, 5, 42, 1], [1, \"f\", 0, 5, 38, 1], [1, \"f\", 0, 5, 34, 1], [1, \"f\", 0, 5, 31, 1], [1, \"f\", 1, 5, 48, 1], [1, \"f\", 1, 5, 44, 1], [1, \"f\", 1, 5, 41, 1], [1, \"f\", 1, 5, 37, 1], [1, \"f\", 1, 5, 33, 1], [1, \"f\", 1, 5, 29, 1], [1, \"f\", 2, 5, 30, 1], [1, \"f\", 2, 5, 32, 1], [1, \"f\", 2, 5, 35, 1], [1, \"f\", 2, 5, 39, 1], [1, \"f\", 2, 5, 46, 1], [1, \"f\", 2, 5, 43, 1], [1, \"f\", 1, 5, 47, 1], [1, \"f\", 0, 5, 40, 1], [1, \"f\", 0, 5, 36, 1], [1, \"f\", 0, 5, 28, 1], [1, \"f\", 1, 5, 25, 1], [1, \"f\", 1, 5, 22, 1], [1, \"f\", 1, 5, 20, 1], [1, \"f\", 1, 5, 16, 1], [1, \"f\", 1, 5, 13, 1], [1, \"f\", 1, 5, 10, 1], [1, \"f\", 2, 5, 27, 1], [1, \"f\", 2, 5, 24, 1], [1, \"f\", 2, 5, 21, 1], [1, \"f\", 2, 5, 19, 1], [1, \"f\", 2, 5, 15, 1], [1, \"f\", 2, 5, 12, 1], [1, \"f\", 2, 5, 9, 1], [1, \"f\", 0, 5, 26, 1], [1, \"f\", 0, 5, 23, 1], [1, \"f\", 0, 5, 14, 1], [1, \"f\", 0, 5, 11, 1], [1, \"f\", 0, 5, 17, 1], [1, \"f\", 1, 5, 18, 1], [1, \"f\", 1, 5, 8, 1], [1, \"f\", 0, 5, 7, 1], [1, \"f\", 1, 5, 6, 1], [1, \"f\", 0, 5, 5, 1], [1, \"f\", 1, 6, 5, 1], [1, \"f\", 2, 7, 5, 1], [1, \"f\", 0, 8, 5, 1], [1, \"f\", 1, 9, 5, 1], [1, \"f\", 1, 12, 5, 1], [1, \"f\", 1, 15, 5, 1], [1, \"f\", 1, 17, 5, 1], [1, \"f\", 1, 22, 5, 1], [1, \"f\", 1, 26, 5, 1], [1, \"f\", 2, 10, 5, 1], [1, \"f\", 2, 13, 5, 1], [1, \"f\", 2, 16, 5, 1], [1, \"f\", 2, 18, 5, 1], [1, \"f\", 2, 21, 5, 1], [1, \"f\", 2, 23, 5, 1], [1, \"f\", 2, 25, 5, 1], [1, \"f\", 2, 27, 5, 1], [1, \"f\", 0, 11, 5, 1], [1, \"f\", 0, 14, 5, 1], [1, \"f\", 0, 19, 5, 1], [1, \"f\", 0, 24, 5, 1], [1, \"f\", 0, 28, 5, 1], [1, \"f\", 1, 20, 5, 1], [1, \"f\", 1, 29, 5, 1], [1, \"f\", 1, 32, 5, 1], [1, \"f\", 1, 35, 5, 1], [1, \"f\", 1, 38, 5, 1], [1, \"f\", 1, 41, 5, 1], [1, \"f\", 1, 45, 5, 1], [1, \"f\", 2, 30, 5, 1], [1, \"f\", 2, 33, 5, 1], [1, \"f\", 2, 36, 5, 1], [1, \"f\", 2, 39, 5, 1], [1, \"f\", 2, 42, 5, 1], [1, \"f\", 2, 44, 5, 1], [1, \"f\", 2, 46, 5, 1], [1, \"f\", 0, 43, 5, 1], [1, \"f\", 0, 40, 5, 1], [1, \"f\", 0, 37, 5, 1], [1, \"f\", 0, 34, 5, 1], [1, \"f\", 0, 31, 5, 1], [1, \"f\", 0, 47, 5, 1], [1, \"f\", 1, 48, 5, 1], [1, \"f\", 1, 51, 5, 1], [1, \"f\", 1, 53, 5, 1], [1, \"f\", 1, 57, 5, 1], [1, \"f\", 1, 60, 5, 1], [1, \"f\", 1, 63, 5, 1], [1, \"f\", 1, 65, 5, 1], [1, \"f\", 2, 64, 5, 1], [1, \"f\", 2, 62, 5, 1], [1, \"f\", 2, 59, 5, 1], [1, \"f\", 2, 56, 5, 1], [1, \"f\", 2, 52, 5, 1], [1, \"f\", 2, 49, 5, 1], [1, \"f\", 2, 54, 5, 1], [1, \"f\", 0, 50, 5, 1], [1, \"f\", 0, 55, 5, 1], [1, \"f\", 0, 58, 5, 1], [1, \"f\", 0, 61, 5, 1], [1, \"f\", 0, 66, 5, 1], [1, \"f\", 1, 67, 5, 1], [1, \"f\", 1, 70, 5, 1], [1, \"f\", 1, 72, 5, 1], [1, \"f\", 1, 75, 5, 1], [1, \"f\", 1, 79, 5, 1], [1, \"f\", 2, 68, 5, 1], [1, \"f\", 2, 71, 5, 1], [1, \"f\", 2, 74, 5, 1], [1, \"f\", 2, 76, 5, 1], [1, \"f\", 2, 78, 5, 1], [1, \"f\", 0, 69, 5, 1], [1, \"f\", 0, 73, 5, 1], [1, \"f\", 0, 77, 5, 1], [1, \"f\", 0, 80, 5, 1], [1, \"f\", 1, 81, 5, 1], [1, \"f\", 1, 84, 5, 1], [1, \"f\", 1, 87, 5, 1], [1, \"f\", 1, 89, 5, 1], [1, \"f\", 1, 92, 5, 1], [1, \"f\", 1, 94, 5, 1], [1, \"f\", 0, 82, 5, 1], [1, \"f\", 2, 83, 5, 1], [1, \"f\", 2, 85, 5, 1], [1, \"f\", 2, 88, 5, 1], [1, \"f\", 2, 90, 5, 1], [1, \"f\", 2, 93, 5, 1], [1, \"f\", 2, 95, 5, 1], [1, \"f\", 0, 86, 5, 1], [1, \"f\", 0, 91, 5, 1], [1, \"f\", 2, 6, 153, 1], [1, \"f\", 1, 6, 152, 1], [1, \"t\", 1, 93, 301, 0], [1, \"t\", 3, 94, 302, 0], [1, \"t\", 5, 95, 302, 0], [1, \"t\", 5, 93, 302, 0], [1, \"b\", 3, 92, 302, 0], [1, \"t\", 1, 91, 302, 0], [1, \"t\", 5, 90, 302, 0], [1, \"b\", 2, 92, 301, 0], [1, \"t\", 1, 91, 301, 0], [1, \"t\", 2, 90, 301, 0], [1, \"b\", 2, 89, 302, 0], [1, \"t\", 4, 89, 301, 0], [1, \"t\", 1, 88, 302, 0], [1, \"t\", 2, 88, 301, 0], [1, \"t\", 3, 87, 302, 0], [1, \"t\", 4, 87, 299, 0], [1, \"t\", 4, 86, 302, 0], [1, \"t\", 1, 85, 302, 0], [1, \"t\", 5, 85, 301, 0], [1, \"b\", 2, 84, 302, 0], [1, \"t\", 5, 83, 302, 0], [1, \"t\", 1, 82, 302, 0], [1, \"t\", 5, 81, 302, 0], [1, \"t\", 2, 80, 302, 0], [1, \"t\", 4, 79, 302, 0], [1, \"t\", 2, 78, 302, 0], [1, \"b\", 1, 77, 302, 0], [1, \"b\", 2, 76, 302, 0], [1, \"t\", 2, 75, 302, 0], [1, \"t\", 4, 74, 302, 0], [1, \"b\", 1, 73, 302, 0], [1, \"t\", 2, 72, 302, 0], [1, \"t\", 4, 71, 302, 0], [1, \"b\", 3, 70, 302, 0], [1, \"t\", 1, 69, 302, 0], [1, \"t\", 2, 68, 302, 0], [1, \"t\", 5, 67, 302, 0], [1, \"b\", 1, 66, 302, 0], [1, \"t\", 2, 65, 302, 0], [1, \"t\", 4, 64, 302, 0], [1, \"b\", 3, 63, 302, 0], [1, \"t\", 5, 62, 302, 0], [1, \"b\", 1, 61, 302, 0], [1, \"t\", 3, 60, 302, 0], [1, \"t\", 4, 59, 302, 0], [1, \"b\", 2, 58, 302, 0], [1, \"t\", 5, 57, 302, 0], [1, \"t\", 1, 56, 302, 0], [1, \"t\", 3, 55, 302, 0], [1, \"t\", 4, 54, 302, 0], [1, \"t\", 1, 53, 302, 0], [1, \"t\", 5, 52, 302, 0], [1, \"t\", 2, 51, 302, 0], [1, \"t\", 4, 50, 302, 0], [1, \"t\", 2, 49, 302, 0], [1, \"b\", 1, 48, 302, 0], [1, \"t\", 3, 47, 302, 0], [1, \"t\", 4, 46, 302, 0], [1, \"t\", 1, 45, 302, 0], [1, \"t\", 2, 44, 302, 0], [1, \"t\", 5, 43, 302, 0], [1, \"t\", 2, 42, 302, 0], [1, \"t\", 1, 41, 302, 0], [1, \"t\", 4, 40, 302, 0], [1, \"b\", 2, 39, 302, 0], [1, \"t\", 5, 38, 302, 0], [1, \"t\", 1, 37, 302, 0], [1, \"t\", 2, 36, 302, 0], [1, \"t\", 5, 35, 302, 0], [1, \"t\", 0, 34, 302, 0], [1, \"t\", 3, 33, 302, 0], [1, \"t\", 4, 32, 302, 0], [1, \"b\", 1, 31, 302, 0], [1, \"t\", 2, 30, 302, 0], [1, \"t\", 4, 29, 302, 0], [1, \"t\", 2, 28, 302, 0], [1, \"t\", 5, 27, 302, 0], [1, \"b\", 3, 26, 302, 0], [1, \"t\", 1, 25, 302, 0], [1, \"t\", 4, 24, 302, 0], [1, \"t\", 2, 23, 302, 0], [1, \"t\", 1, 22, 302, 0], [1, \"t\", 5, 21, 302, 0], [1, \"t\", 2, 20, 302, 0], [1, \"t\", 4, 19, 302, 0], [1, \"b\", 1, 18, 302, 0], [1, \"t\", 5, 17, 302, 0], [1, \"t\", 3, 16, 302, 0], [1, \"t\", 1, 15, 302, 0], [1, \"t\", 5, 14, 302, 0], [1, \"t\", 3, 13, 302, 0], [1, \"t\", 4, 12, 302, 0], [1, \"t\", 1, 11, 302, 0], [1, \"t\", 2, 10, 302, 0], [1, \"t\", 4, 9, 302, 0], [1, \"b\", 3, 8, 302, 0], [1, \"t\", 5, 8, 302, 0], [1, \"t\", 5, 7, 302, 0], [1, \"b\", 2, 6, 302, 0], [1, \"t\", 1, 6, 301, 0], [1, \"t\", 4, 6, 300, 0], [1, \"t\", 2, 6, 299, 0], [1, \"b\", 0, 6, 298, 0], [1, \"t\", 5, 6, 297, 0], [1, \"t\", 2, 6, 296, 0], [1, \"t\", 0, 6, 295, 0], [1, \"b\", 2, 6, 294, 0], [1, \"t\", 5, 6, 293, 0], [1, \"t\", 1, 6, 292, 0], [1, \"b\", 0, 6, 291, 0], [1, \"t\", 2, 6, 290, 0], [1, \"t\", 5, 6, 289, 0], [1, \"t\", 1, 6, 288, 0], [1, \"t\", 4, 6, 287, 0], [1, \"t\", 2, 6, 286, 0], [1, \"t\", 5, 6, 285, 0], [1, \"t\", 2, 6, 284, 0], [1, \"b\", 0, 6, 283, 0], [1, \"t\", 2, 6, 282, 0], [1, \"t\", 5, 6, 281, 0], [1, \"b\", 2, 6, 280, 0], [1, \"t\", 5, 6, 279, 0], [1, \"t\", 1, 6, 278, 0], [1, \"t\", 4, 6, 277, 0], [1, \"t\", 3, 6, 276, 0], [1, \"t\", 5, 6, 275, 0], [1, \"b\", 0, 6, 274, 0], [1, \"t\", 5, 6, 273, 0], [1, \"t\", 1, 6, 272, 0], [1, \"t\", 4, 6, 271, 0], [1, \"b\", 3, 6, 270, 0], [1, \"t\", 5, 6, 269, 0], [1, \"t\", 1, 6, 268, 0], [1, \"t\", 4, 6, 267, 0], [1, \"t\", 1, 6, 266, 0], [1, \"t\", 3, 6, 265, 0], [1, \"t\", 4, 6, 264, 0], [1, \"b\", 2, 6, 263, 0], [1, \"t\", 5, 6, 262, 0], [1, \"t\", 3, 6, 261, 0], [1, \"t\", 0, 6, 260, 0], [1, \"t\", 5, 6, 259, 0], [1, \"t\", 1, 6, 258, 0], [1, \"t\", 3, 6, 257, 0], [1, \"t\", 4, 6, 255, 0], [1, \"t\", 3, 6, 254, 0], [1, \"t\", 5, 6, 253, 0], [1, \"b\", 2, 6, 252, 0], [1, \"t\", 5, 6, 251, 0], [1, \"t\", 1, 6, 250, 0], [1, \"t\", 3, 6, 249, 0], [1, \"t\", 4, 6, 248, 0], [1, \"b\", 3, 6, 247, 0], [1, \"t\", 5, 6, 246, 0], [1, \"t\", 3, 6, 245, 0], [1, \"t\", 5, 6, 244, 0], [1, \"t\", 0, 6, 243, 0], [1, \"t\", 4, 6, 242, 0], [1, \"t\", 3, 6, 241, 0], [1, \"t\", 5, 6, 240, 0], [1, \"b\", 0, 6, 239, 0], [1, \"t\", 3, 6, 238, 0], [1, \"t\", 4, 6, 237, 0], [1, \"t\", 1, 6, 236, 0], [1, \"t\", 5, 6, 235, 0], [1, \"b\", 2, 6, 234, 0], [1, \"t\", 2, 6, 233, 0], [1, \"t\", 4, 6, 232, 0], [1, \"b\", 3, 6, 231, 0], [1, \"t\", 5, 6, 230, 0], [1, \"t\", 1, 6, 229, 0], [1, \"t\", 2, 6, 228, 0], [1, \"t\", 5, 6, 227, 0], [1, \"b\", 2, 6, 226, 0], [1, \"t\", 4, 6, 225, 0], [1, \"t\", 0, 6, 224, 0], [1, \"t\", 2, 6, 223, 0], [1, \"t\", 0, 6, 222, 0], [1, \"b\", 2, 6, 221, 0], [1, \"t\", 4, 6, 220, 0], [1, \"b\", 3, 6, 219, 0], [1, \"t\", 5, 6, 218, 0], [1, \"t\", 0, 6, 217, 0], [1, \"t\", 3, 6, 216, 0], [1, \"b\", 0, 6, 215, 0], [1, \"t\", 4, 6, 214, 0], [1, \"t\", 2, 6, 213, 0], [1, \"t\", 0, 6, 212, 0], [1, \"t\", 2, 6, 211, 0], [1, \"b\", 3, 6, 210, 0], [1, \"t\", 0, 6, 209, 0], [1, \"t\", 5, 6, 207, 0], [1, \"t\", 2, 6, 208, 0], [1, \"t\", 0, 6, 206, 0], [1, \"t\", 2, 6, 205, 0], [1, \"t\", 2, 6, 203, 0], [1, \"b\", 0, 6, 202, 0], [1, \"t\", 3, 6, 201, 0], [1, \"t\", 4, 6, 199, 0], [1, \"t\", 0, 6, 198, 0], [1, \"t\", 2, 6, 197, 0], [1, \"t\", 4, 6, 196, 0], [1, \"t\", 1, 6, 195, 0], [1, \"t\", 3, 6, 194, 0], [1, \"t\", 4, 6, 192, 0], [1, \"t\", 2, 6, 191, 0], [1, \"b\", 0, 6, 190, 0], [1, \"t\", 3, 6, 189, 0], [1, \"t\", 4, 6, 187, 0], [1, \"b\", 0, 6, 186, 0], [1, \"t\", 2, 6, 185, 0], [1, \"t\", 4, 6, 184, 0], [1, \"t\", 2, 6, 183, 0], [1, \"t\", 0, 6, 182, 0], [1, \"b\", 2, 6, 181, 0], [1, \"t\", 5, 6, 180, 0], [1, \"t\", 2, 6, 179, 0], [1, \"t\", 0, 6, 178, 0], [1, \"t\", 2, 6, 177, 0], [1, \"t\", 4, 6, 176, 0], [1, \"b\", 2, 6, 175, 0], [1, \"t\", 1, 6, 174, 0], [1, \"t\", 5, 6, 173, 0], [1, \"t\", 2, 6, 256, 0], [1, \"t\", 4, 6, 204, 0], [1, \"t\", 4, 6, 200, 0], [1, \"t\", 2, 6, 193, 0], [1, \"t\", 2, 6, 188, 0], [1, \"f\", 1, 6, 150, 1], [1, \"f\", 2, 6, 151, 1], [1, \"f\", 2, 6, 149, 1], [1, \"f\", 1, 6, 148, 1], [1, \"f\", 2, 6, 147, 1], [1, \"f\", 2, 6, 145, 1], [1, \"f\", 2, 6, 143, 1], [1, \"f\", 1, 6, 146, 1], [1, \"f\", 1, 6, 144, 1], [1, \"f\", 1, 6, 142, 1], [1, \"f\", 2, 6, 141, 1], [1, \"f\", 2, 6, 139, 1], [1, \"f\", 2, 6, 137, 1], [1, \"f\", 2, 6, 135, 1], [1, \"f\", 2, 6, 133, 1], [1, \"f\", 1, 6, 140, 1], [1, \"f\", 1, 6, 138, 1], [1, \"f\", 1, 6, 136, 1], [1, \"f\", 1, 6, 134, 1], [1, \"f\", 1, 6, 132, 1], [1, \"f\", 2, 6, 131, 1], [1, \"f\", 2, 6, 129, 1], [1, \"f\", 2, 6, 127, 1], [1, \"f\", 2, 6, 125, 1], [1, \"f\", 2, 6, 123, 1], [1, \"f\", 2, 6, 121, 1], [1, \"f\", 1, 6, 130, 1], [1, \"f\", 1, 6, 128, 1], [1, \"f\", 1, 6, 126, 1], [1, \"f\", 1, 6, 124, 1], [1, \"f\", 1, 6, 122, 1], [1, \"f\", 1, 6, 120, 1], [1, \"f\", 2, 6, 119, 1], [1, \"f\", 2, 6, 117, 1], [1, \"f\", 2, 6, 115, 1], [1, \"f\", 2, 6, 113, 1], [1, \"f\", 2, 6, 111, 1], [1, \"f\", 2, 6, 109, 1], [1, \"f\", 1, 6, 118, 1], [1, \"f\", 1, 6, 116, 1], [1, \"f\", 1, 6, 114, 1], [1, \"f\", 1, 6, 112, 1], [1, \"f\", 1, 6, 110, 1], [1, \"f\", 1, 6, 108, 1], [1, \"f\", 1, 6, 106, 1], [1, \"f\", 1, 6, 104, 1], [1, \"f\", 2, 6, 107, 1], [1, \"f\", 2, 6, 105, 1], [1, \"f\", 2, 6, 103, 1], [1, \"f\", 2, 6, 101, 1], [1, \"f\", 2, 6, 99, 1], [1, \"f\", 2, 6, 97, 1], [1, \"f\", 2, 6, 95, 1], [1, \"f\", 2, 6, 93, 1], [1, \"f\", 2, 6, 91, 1], [1, \"f\", 1, 6, 102, 1], [1, \"f\", 1, 6, 100, 1], [1, \"f\", 1, 6, 98, 1], [1, \"f\", 1, 6, 96, 1], [1, \"f\", 1, 6, 94, 1], [1, \"f\", 1, 6, 92, 1], [1, \"f\", 1, 6, 90, 1], [1, \"f\", 1, 6, 88, 1], [1, \"f\", 1, 6, 86, 1], [1, \"f\", 2, 6, 89, 1], [1, \"f\", 2, 6, 87, 1], [1, \"f\", 2, 6, 85, 1], [1, \"f\", 2, 6, 83, 1], [1, \"f\", 2, 6, 81, 1], [1, \"f\", 2, 6, 79, 1], [1, \"f\", 2, 6, 77, 1], [1, \"f\", 1, 6, 84, 1], [1, \"f\", 1, 6, 82, 1], [1, \"f\", 1, 6, 80, 1], [1, \"f\", 1, 6, 78, 1], [1, \"f\", 1, 6, 76, 1], [1, \"f\", 2, 6, 75, 1], [1, \"f\", 2, 6, 73, 1], [1, \"f\", 2, 6, 71, 1], [1, \"f\", 2, 6, 69, 1], [1, \"f\", 2, 6, 67, 1], [1, \"f\", 2, 6, 65, 1], [1, \"f\", 1, 6, 74, 1], [1, \"f\", 1, 6, 72, 1], [1, \"f\", 1, 6, 70, 1], [1, \"f\", 1, 6, 68, 1], [1, \"f\", 1, 6, 66, 1], [1, \"f\", 1, 6, 64, 1], [1, \"f\", 2, 6, 63, 1], [1, \"f\", 2, 6, 61, 1], [1, \"f\", 2, 6, 59, 1], [1, \"f\", 2, 6, 57, 1], [1, \"f\", 2, 6, 55, 1], [1, \"f\", 2, 6, 53, 1], [1, \"f\", 2, 6, 51, 1], [1, \"f\", 1, 6, 62, 1], [1, \"f\", 1, 6, 60, 1], [1, \"f\", 1, 6, 58, 1], [1, \"f\", 1, 6, 56, 1], [1, \"f\", 1, 6, 54, 1], [1, \"f\", 1, 6, 52, 1], [1, \"f\", 1, 6, 50, 1], [1, \"f\", 2, 6, 49, 1], [1, \"f\", 2, 6, 47, 1], [1, \"f\", 2, 6, 45, 1], [1, \"f\", 2, 6, 43, 1], [1, \"f\", 2, 6, 41, 1], [1, \"f\", 2, 6, 39, 1], [1, \"f\", 1, 6, 48, 1], [1, \"f\", 1, 6, 46, 1], [1, \"f\", 1, 6, 44, 1], [1, \"f\", 1, 6, 42, 1], [1, \"f\", 1, 6, 40, 1], [1, \"f\", 1, 6, 38, 1], [1, \"f\", 2, 6, 37, 1], [1, \"f\", 2, 6, 35, 1], [1, \"f\", 2, 6, 33, 1], [1, \"f\", 2, 6, 31, 1], [1, \"f\", 2, 6, 29, 1], [1, \"f\", 2, 6, 27, 1], [1, \"f\", 1, 6, 36, 1], [1, \"f\", 1, 6, 34, 1], [1, \"f\", 1, 6, 32, 1], [1, \"f\", 1, 6, 30, 1], [1, \"f\", 1, 6, 28, 1], [1, \"f\", 1, 6, 26, 1], [1, \"f\", 2, 6, 25, 1], [1, \"f\", 2, 6, 23, 1], [1, \"f\", 2, 6, 21, 1], [1, \"f\", 2, 6, 19, 1], [1, \"f\", 2, 6, 17, 1], [1, \"f\", 2, 6, 15, 1], [1, \"f\", 1, 6, 24, 1], [1, \"f\", 1, 6, 22, 1], [1, \"f\", 1, 6, 20, 1], [1, \"f\", 1, 6, 18, 1], [1, \"f\", 1, 6, 16, 1], [1, \"f\", 2, 6, 13, 1], [1, \"f\", 2, 6, 11, 1], [1, \"f\", 2, 6, 9, 1], [1, \"f\", 2, 6, 7, 1], [1, \"f\", 1, 6, 14, 1], [1, \"f\", 1, 6, 12, 1], [1, \"f\", 1, 6, 10, 1], [1, \"f\", 1, 6, 8, 1], [1, \"f\", 1, 6, 6, 1], [1, \"f\", 1, 8, 6, 1], [1, \"f\", 2, 7, 6, 1], [1, \"f\", 2, 9, 6, 1], [1, \"f\", 2, 11, 6, 1], [1, \"f\", 2, 13, 6, 1], [1, \"f\", 2, 15, 6, 1], [1, \"f\", 1, 10, 6, 1], [1, \"f\", 1, 12, 6, 1], [1, \"f\", 1, 14, 6, 1], [1, \"f\", 1, 16, 6, 1], [1, \"f\", 1, 18, 6, 1], [1, \"f\", 1, 20, 6, 1], [1, \"f\", 1, 22, 6, 1], [1, \"f\", 1, 24, 6, 1], [1, \"f\", 1, 26, 6, 1], [1, \"f\", 2, 17, 6, 1], [1, \"f\", 2, 19, 6, 1], [1, \"f\", 2, 21, 6, 1], [1, \"f\", 2, 23, 6, 1], [1, \"f\", 2, 25, 6, 1], [1, \"f\", 2, 27, 6, 1], [1, \"f\", 2, 29, 6, 1], [1, \"f\", 2, 31, 6, 1], [1, \"f\", 2, 33, 6, 1], [1, \"f\", 1, 28, 6, 1], [1, \"f\", 1, 30, 6, 1], [1, \"f\", 1, 32, 6, 1], [1, \"f\", 1, 34, 6, 1], [1, \"f\", 2, 67, 6, 1], [1, \"f\", 2, 69, 6, 1], [1, \"f\", 2, 71, 6, 1], [1, \"f\", 2, 73, 6, 1], [1, \"f\", 2, 75, 6, 1], [1, \"f\", 1, 68, 6, 1], [1, \"f\", 1, 70, 6, 1], [1, \"f\", 1, 72, 6, 1], [1, \"f\", 1, 74, 6, 1], [1, \"f\", 1, 76, 6, 1], [1, \"f\", 2, 77, 6, 1], [1, \"f\", 2, 79, 6, 1], [1, \"f\", 2, 81, 6, 1], [1, \"f\", 2, 83, 6, 1], [1, \"f\", 2, 85, 6, 1], [1, \"f\", 1, 78, 6, 1], [1, \"f\", 1, 80, 6, 1], [1, \"f\", 1, 82, 6, 1], [1, \"f\", 1, 84, 6, 1], [1, \"f\", 1, 86, 6, 1], [1, \"f\", 2, 87, 6, 1], [1, \"f\", 2, 89, 6, 1], [1, \"f\", 2, 91, 6, 1], [1, \"f\", 2, 93, 6, 1], [1, \"f\", 1, 88, 6, 1], [1, \"f\", 1, 90, 6, 1], [1, \"f\", 1, 92, 6, 1], [1, \"f\", 1, 94, 6, 1], [1, \"f\", 2, 95, 6, 1], [1, \"f\", 1, 95, 7, 1], [1, \"f\", 1, 83, 7, 1], [1, \"f\", 1, 81, 7, 1], [1, \"f\", 1, 79, 7, 1], [1, \"f\", 1, 77, 7, 1], [1, \"f\", 1, 75, 7, 1], [1, \"f\", 1, 73, 7, 1], [1, \"f\", 1, 71, 7, 1], [1, \"f\", 1, 69, 7, 1], [1, \"f\", 1, 33, 7, 1], [1, \"f\", 1, 31, 7, 1], [1, \"f\", 1, 29, 7, 1], [1, \"f\", 1, 27, 7, 1], [1, \"f\", 1, 25, 7, 1], [1, \"f\", 1, 23, 7, 1], [1, \"f\", 1, 21, 7, 1], [1, \"f\", 1, 19, 7, 1], [1, \"f\", 1, 17, 7, 1], [1, \"f\", 1, 15, 7, 1], [1, \"f\", 1, 13, 7, 1], [1, \"f\", 1, 11, 7, 1], [1, \"f\", 1, 9, 7, 1], [1, \"f\", 1, 7, 7, 1], [1, \"s\", 0, 7, 8, 1], [1, \"t\", 4, 7, 174, 0], [1, \"t\", 5, 7, 175, 0], [1, \"t\", 4, 7, 176, 0], [1, \"b\", 2, 7, 177, 0], [1, \"t\", 3, 94, 301, 0], [1, \"b\", 3, 95, 301, 0], [1, \"t\", 4, 96, 301, 0], [1, \"t\", 1, 97, 301, 0], [1, \"t\", 2, 98, 301, 0], [1, \"t\", 4, 99, 301, 0], [1, \"t\", 2, 100, 301, 0], [1, \"t\", 4, 96, 304, 0], [1, \"t\", 2, 96, 302, 0], [1, \"t\", 2, 97, 304, 0], [1, \"t\", 2, 96, 303, 0], [1, \"t\", 5, 97, 303, 0], [1, \"t\", 5, 98, 304, 0], [1, \"b\", 2, 97, 302, 0], [1, \"b\", 2, 99, 304, 0], [1, \"t\", 1, 98, 303, 0], [1, \"t\", 4, 98, 302, 0], [1, \"t\", 4, 99, 303, 0], [1, \"t\", 4, 100, 304, 0], [1, \"t\", 5, 99, 302, 0], [1, \"t\", 5, 101, 303, 0], [1, \"t\", 2, 100, 303, 0], [1, \"t\", 0, 100, 302, 0], [1, \"t\", 0, 101, 304, 0], [1, \"t\", 4, 102, 304, 0], [1, \"f\", 0, 94, 7, 1], [1, \"f\", 1, 93, 7, 1], [1, \"f\", 1, 92, 7, 1], [1, \"f\", 0, 91, 7, 1], [1, \"f\", 1, 90, 7, 1], [1, \"f\", 1, 89, 7, 1], [1, \"f\", 0, 88, 7, 1], [1, \"f\", 1, 87, 7, 1], [1, \"f\", 1, 86, 7, 1], [1, \"f\", 1, 85, 7, 1], [1, \"f\", 0, 84, 7, 1], [1, \"f\", 1, 82, 7, 1], [1, \"f\", 0, 80, 7, 1], [1, \"f\", 1, 78, 7, 1], [1, \"f\", 0, 76, 7, 1], [1, \"f\", 1, 74, 7, 1], [1, \"f\", 0, 72, 7, 1], [1, \"f\", 0, 70, 7, 1], [1, \"f\", 1, 68, 7, 1], [1, \"f\", 1, 32, 7, 1], [1, \"f\", 0, 30, 7, 1], [1, \"f\", 1, 28, 7, 1], [1, \"f\", 0, 26, 7, 1], [1, \"f\", 1, 24, 7, 1], [1, \"f\", 0, 22, 7, 1], [1, \"f\", 1, 20, 7, 1], [1, \"f\", 0, 18, 7, 1], [1, \"f\", 1, 16, 7, 1], [1, \"f\", 0, 14, 7, 1], [1, \"f\", 1, 12, 7, 1], [1, \"f\", 0, 10, 7, 1], [1, \"f\", 1, 8, 7, 1], [1, \"s\", 1, 7, 9, 1], [1, \"f\", 0, 95, 152, 1], [1, \"f\", 1, 95, 151, 1], [1, \"f\", 0, 95, 11, 1], [1, \"f\", 1, 95, 12, 1], [1, \"f\", 1, 95, 14, 1], [1, \"f\", 1, 95, 19, 1], [1, \"f\", 0, 95, 15, 1], [1, \"f\", 0, 95, 20, 1], [1, \"f\", 1, 95, 21, 1], [1, \"f\", 1, 95, 26, 1], [1, \"f\", 1, 95, 37, 1], [1, \"f\", 0, 95, 44, 1], [1, \"f\", 1, 95, 50, 1], [1, \"f\", 1, 95, 52, 1], [1, \"f\", 0, 95, 53, 1], [1, \"f\", 1, 95, 54, 1], [1, \"f\", 1, 95, 62, 1], [1, \"f\", 0, 95, 55, 1], [1, \"f\", 1, 95, 64, 1], [1, \"f\", 0, 95, 58, 1], [1, \"f\", 0, 95, 61, 1], [1, \"f\", 0, 95, 68, 1], [1, \"f\", 0, 95, 72, 1], [1, \"f\", 0, 95, 78, 1], [1, \"f\", 1, 95, 115, 1], [1, \"f\", 1, 95, 117, 1], [1, \"f\", 1, 95, 128, 1], [1, \"f\", 0, 95, 85, 1], [1, \"f\", 0, 95, 91, 1], [1, \"f\", 0, 95, 95, 1], [1, \"f\", 0, 95, 114, 1], [1, \"f\", 2, 95, 113, 1], [1, \"f\", 1, 95, 119, 1], [1, \"f\", 0, 95, 120, 1], [1, \"f\", 1, 95, 121, 1], [1, \"f\", 0, 95, 127, 1], [1, \"f\", 1, 95, 130, 1], [1, \"f\", 0, 95, 131, 1], [1, \"f\", 1, 95, 132, 1], [1, \"f\", 1, 95, 136, 1], [1, \"f\", 0, 95, 137, 1], [1, \"f\", 0, 95, 143, 1], [1, \"f\", 0, 95, 147, 1], [1, \"f\", 1, 95, 138, 1], [1, \"f\", 1, 95, 144, 1], [1, \"f\", 1, 95, 10, 1], [1, \"f\", 0, 95, 8, 1], [1, \"f\", 1, 95, 9, 1], [1, \"f\", 0, 95, 13, 1], [1, \"f\", 1, 95, 16, 1], [1, \"f\", 1, 95, 17, 1], [1, \"f\", 0, 95, 18, 1], [1, \"f\", 1, 95, 45, 1], [1, \"f\", 0, 95, 51, 1], [1, \"f\", 1, 95, 56, 1], [1, \"f\", 1, 95, 57, 1], [1, \"f\", 1, 95, 59, 1], [1, \"f\", 1, 95, 60, 1], [1, \"f\", 1, 95, 63, 1], [1, \"f\", 0, 95, 65, 1], [1, \"f\", 1, 95, 66, 1], [1, \"f\", 1, 95, 67, 1], [1, \"f\", 1, 95, 69, 1], [1, \"f\", 1, 95, 70, 1], [1, \"f\", 0, 95, 71, 1], [1, \"f\", 1, 95, 73, 1], [1, \"f\", 1, 95, 74, 1], [1, \"f\", 0, 95, 75, 1], [1, \"f\", 1, 95, 76, 1], [1, \"f\", 1, 95, 77, 1], [1, \"f\", 1, 95, 79, 1], [1, \"f\", 1, 95, 80, 1], [1, \"f\", 0, 95, 81, 1], [1, \"f\", 1, 95, 82, 1], [1, \"f\", 0, 95, 83, 1], [1, \"f\", 1, 95, 84, 1], [1, \"f\", 1, 95, 86, 1], [1, \"f\", 1, 95, 88, 1], [1, \"f\", 0, 95, 87, 1], [1, \"f\", 1, 95, 89, 1], [1, \"f\", 1, 95, 90, 1], [1, \"f\", 1, 95, 92, 1], [1, \"f\", 1, 95, 93, 1], [1, \"f\", 1, 95, 94, 1], [1, \"f\", 1, 95, 96, 1], [1, \"f\", 1, 95, 97, 1], [1, \"f\", 0, 95, 98, 1], [1, \"f\", 1, 95, 99, 1], [1, \"f\", 1, 95, 100, 1], [1, \"f\", 0, 95, 101, 1], [1, \"f\", 1, 95, 102, 1], [1, \"f\", 0, 95, 103, 1], [1, \"f\", 1, 95, 104, 1], [1, \"f\", 1, 95, 105, 1], [1, \"f\", 0, 95, 106, 1], [1, \"f\", 1, 95, 107, 1], [1, \"f\", 1, 95, 108, 1], [1, \"f\", 1, 95, 109, 1], [1, \"f\", 0, 95, 110, 1], [1, \"f\", 1, 95, 111, 1], [1, \"f\", 0, 95, 112, 1], [1, \"f\", 1, 95, 116, 1], [1, \"f\", 0, 95, 118, 1], [1, \"f\", 0, 95, 122, 1], [1, \"f\", 1, 95, 123, 1], [1, \"f\", 1, 95, 124, 1], [1, \"f\", 0, 95, 125, 1], [1, \"f\", 1, 95, 126, 1], [1, \"f\", 1, 95, 129, 1], [1, \"f\", 1, 95, 133, 1], [1, \"f\", 0, 95, 134, 1], [1, \"f\", 1, 95, 135, 1], [1, \"f\", 1, 95, 139, 1], [1, \"f\", 0, 95, 140, 1], [1, \"f\", 1, 95, 141, 1], [1, \"f\", 1, 95, 142, 1], [1, \"f\", 1, 95, 146, 1], [1, \"f\", 0, 95, 145, 1], [1, \"f\", 1, 95, 148, 1], [1, \"f\", 1, 95, 149, 1], [1, \"f\", 1, 95, 150, 1], [1, \"f\", 1, 95, 153, 1], [1, \"cs\", 0, 64, 9, 1], [1, \"cs\", 1, 64, 10, 1], [1, \"cs\", 2, 64, 16, 1], [1, \"cs\", 2, 64, 19, 1], [1, \"cs\", 0, 64, 20, 1], [1, \"cs\", 1, 64, 21, 1], [1, \"cs\", 2, 64, 22, 1], [1, \"cs\", 0, 64, 23, 1], [1, \"cs\", 2, 64, 24, 1], [1, \"cs\", 1, 64, 29, 1], [1, \"cs\", 2, 64, 30, 1], [1, \"cs\", 3, 64, 31, 1], [1, \"cs\", 0, 64, 32, 1], [1, \"cs\", 1, 64, 33, 1], [1, \"cs\", 2, 64, 34, 1], [1, \"cs\", 0, 64, 35, 1], [1, \"cs\", 2, 64, 8, 1], [1, \"cs\", 2, 65, 8, 1], [1, \"cs\", 1, 65, 9, 1], [1, \"cs\", 2, 65, 10, 1], [1, \"cs\", 3, 65, 11, 1], [1, \"cs\", 1, 65, 16, 1], [1, \"cs\", 0, 64, 17, 1], [1, \"cs\", 3, 65, 17, 1], [1, \"cs\", 2, 64, 18, 1], [1, \"cs\", 2, 65, 18, 1], [1, \"cs\", 0, 65, 19, 1], [1, \"cs\", 1, 65, 20, 1], [1, \"cs\", 3, 65, 21, 1], [1, \"cs\", 2, 65, 22, 1], [1, \"cs\", 3, 65, 23, 1], [1, \"cs\", 0, 65, 24, 1], [1, \"cs\", 2, 65, 29, 1], [1, \"cs\", 3, 65, 30, 1], [1, \"cs\", 0, 65, 31, 1], [1, \"cs\", 1, 65, 32, 1], [1, \"cs\", 2, 65, 33, 1], [1, \"cs\", 3, 65, 34, 1], [1, \"cs\", 2, 63, 9, 1], [1, \"cs\", 0, 62, 9, 1], [1, \"cs\", 2, 61, 9, 1], [1, \"cs\", 0, 60, 9, 1], [1, \"cs\", 2, 59, 9, 1], [1, \"cs\", 2, 58, 9, 1], [1, \"cs\", 0, 57, 9, 1], [1, \"cs\", 2, 56, 9, 1], [1, \"cs\", 2, 55, 9, 1], [1, \"cs\", 2, 54, 9, 1], [1, \"cs\", 0, 53, 9, 1], [1, \"cs\", 0, 51, 9, 1], [1, \"cs\", 2, 52, 9, 1], [1, \"cs\", 2, 50, 9, 1], [1, \"cs\", 2, 48, 9, 1], [1, \"cs\", 2, 49, 9, 1], [1, \"cs\", 0, 47, 9, 1], [1, \"cs\", 0, 45, 9, 1], [1, \"cs\", 0, 43, 9, 1], [1, \"cs\", 2, 46, 9, 1], [1, \"cs\", 2, 44, 9, 1], [1, \"cs\", 2, 42, 9, 1], [1, \"cs\", 2, 41, 9, 1], [1, \"cs\", 0, 40, 9, 1], [1, \"cs\", 2, 39, 9, 1], [1, \"cs\", 2, 38, 9, 1], [1, \"cs\", 0, 37, 9, 1], [1, \"cs\", 0, 63, 8, 1], [1, \"cs\", 2, 65, 7, 1], [1, \"cs\", 3, 64, 7, 1], [1, \"cs\", 2, 62, 8, 1], [1, \"cs\", 3, 61, 8, 1], [1, \"cs\", 1, 62, 7, 1], [1, \"cs\", 2, 63, 7, 1], [1, \"cs\", 0, 64, 6, 1], [1, \"cs\", 3, 65, 6, 1], [1, \"cs\", 2, 63, 6, 1], [1, \"cs\", 2, 62, 6, 1], [1, \"cs\", 2, 61, 6, 1], [1, \"cs\", 2, 60, 6, 1], [1, \"cs\", 2, 59, 6, 1], [1, \"cs\", 2, 61, 7, 1], [1, \"cs\", 0, 60, 7, 1], [1, \"cs\", 2, 60, 8, 1], [1, \"cs\", 2, 59, 7, 1], [1, \"cs\", 2, 59, 8, 1], [1, \"cs\", 1, 58, 8, 1], [1, \"cs\", 1, 57, 6, 1], [1, \"cs\", 1, 55, 7, 1], [1, \"cs\", 0, 56, 6, 1], [1, \"cs\", 2, 58, 6, 1], [1, \"cs\", 2, 58, 7, 1], [1, \"cs\", 2, 57, 7, 1], [1, \"cs\", 2, 56, 7, 1], [1, \"cs\", 2, 55, 6, 1], [1, \"cs\", 2, 57, 8, 1], [1, \"cs\", 2, 56, 8, 1], [1, \"cs\", 2, 55, 8, 1], [1, \"cs\", 0, 54, 8, 1], [1, \"cs\", 0, 50, 7, 1], [1, \"cs\", 0, 53, 6, 1], [1, \"cs\", 2, 54, 6, 1], [1, \"cs\", 2, 54, 7, 1], [1, \"cs\", 2, 53, 7, 1], [1, \"cs\", 2, 52, 7, 1], [1, \"cs\", 2, 52, 6, 1], [1, \"cs\", 1, 52, 8, 1], [1, \"cs\", 2, 53, 8, 1], [1, \"cs\", 2, 51, 8, 1], [1, \"cs\", 2, 51, 7, 1], [1, \"cs\", 2, 51, 6, 1], [1, \"cs\", 2, 50, 6, 1], [1, \"cs\", 2, 50, 8, 1], [1, \"cs\", 2, 49, 8, 1], [1, \"cs\", 2, 49, 7, 1], [1, \"cs\", 2, 49, 6, 1], [1, \"cs\", 0, 46, 7, 1], [1, \"cs\", 1, 48, 8, 1], [1, \"cs\", 1, 44, 7, 1], [1, \"cs\", 1, 41, 8, 1], [1, \"cs\", 2, 48, 7, 1], [1, \"cs\", 2, 48, 6, 1], [1, \"cs\", 2, 47, 6, 1], [1, \"cs\", 2, 47, 7, 1], [1, \"cs\", 2, 47, 8, 1], [1, \"cs\", 2, 46, 8, 1], [1, \"cs\", 2, 45, 8, 1], [1, \"cs\", 2, 45, 7, 1], [1, \"cs\", 2, 45, 6, 1], [1, \"cs\", 2, 46, 6, 1], [1, \"cs\", 2, 44, 6, 1], [1, \"cs\", 2, 44, 8, 1], [1, \"cs\", 2, 43, 8, 1], [1, \"cs\", 2, 43, 7, 1], [1, \"cs\", 2, 43, 6, 1], [1, \"cs\", 2, 42, 6, 1], [1, \"cs\", 2, 42, 7, 1], [1, \"cs\", 2, 42, 8, 1], [1, \"cs\", 2, 41, 7, 1], [1, \"cs\", 2, 41, 6, 1], [1, \"cs\", 2, 40, 6, 1], [1, \"cs\", 2, 40, 7, 1], [1, \"cs\", 2, 40, 8, 1], [1, \"cs\", 2, 39, 8, 1], [1, \"cs\", 0, 39, 7, 1], [1, \"cs\", 1, 38, 8, 1], [1, \"cs\", 2, 39, 6, 1], [1, \"cs\", 2, 38, 6, 1], [1, \"cs\", 2, 37, 6, 1], [1, \"cs\", 2, 38, 7, 1], [1, \"cs\", 2, 37, 7, 1], [1, \"cs\", 2, 37, 8, 1], [1, \"cs\", 2, 37, 10, 1], [1, \"cs\", 2, 38, 10, 1], [1, \"cs\", 0, 38, 11, 1], [1, \"cs\", 0, 38, 17, 1], [1, \"cs\", 1, 37, 18, 1], [1, \"cs\", 0, 38, 19, 1], [1, \"cs\", 2, 37, 11, 1], [1, \"cs\", 2, 37, 16, 1], [1, \"cs\", 2, 37, 17, 1], [1, \"cs\", 2, 38, 18, 1], [1, \"cs\", 2, 37, 19, 1], [1, \"cs\", 3, 38, 16, 1], [1, \"cs\", 0, 37, 21, 1], [1, \"cs\", 0, 38, 22, 1], [1, \"cs\", 0, 38, 24, 1], [1, \"cs\", 2, 37, 20, 1], [1, \"cs\", 2, 38, 20, 1], [1, \"cs\", 2, 38, 21, 1], [1, \"cs\", 1, 37, 23, 1], [1, \"cs\", 3, 37, 22, 1], [1, \"cs\", 3, 38, 23, 1], [1, \"cs\", 2, 37, 24, 1], [1, \"cs\", 0, 38, 30, 1], [1, \"cs\", 0, 38, 32, 1], [1, \"cs\", 0, 37, 31, 1], [1, \"cs\", 1, 38, 34, 1], [1, \"cs\", 1, 37, 29, 1], [1, \"cs\", 2, 38, 29, 1], [1, \"cs\", 2, 37, 30, 1], [1, \"cs\", 2, 38, 31, 1], [1, \"cs\", 2, 37, 32, 1], [1, \"cs\", 3, 38, 33, 1], [1, \"cs\", 3, 38, 35, 1], [1, \"cs\", 2, 37, 33, 1], [1, \"cs\", 2, 36, 8, 1], [1, \"cs\", 0, 36, 11, 1], [1, \"cs\", 0, 35, 9, 1], [1, \"cs\", 2, 36, 9, 1], [1, \"cs\", 2, 36, 10, 1], [1, \"cs\", 2, 35, 10, 1], [1, \"cs\", 1, 33, 8, 1], [1, \"cs\", 3, 34, 9, 1], [1, \"cs\", 3, 35, 8, 1], [1, \"cs\", 2, 34, 8, 1], [1, \"cs\", 0, 36, 7, 1], [1, \"cs\", 1, 34, 7, 1], [1, \"cs\", 2, 35, 7, 1], [1, \"cs\", 2, 35, 6, 1], [1, \"cs\", 2, 36, 6, 1], [1, \"cs\", 2, 68, 9, 1], [1, \"cs\", 2, 66, 10, 1], [1, \"cs\", 3, 66, 9, 1], [1, \"cs\", 0, 67, 9, 1], [1, \"cs\", 0, 66, 8, 1], [1, \"cs\", 2, 67, 8, 1], [1, \"cs\", 1, 68, 8, 1], [1, \"cs\", 1, 66, 11, 1], [1, \"cs\", 2, 67, 10, 1], [1, \"cs\", 0, 66, 6, 1], [1, \"cs\", 2, 66, 7, 1], [1, \"cs\", 2, 67, 7, 1], [1, \"cs\", 2, 69, 8, 1], [1, \"cs\", 2, 63, 32, 1], [1, \"cs\", 2, 62, 34, 1], [1, \"cs\", 2, 60, 35, 1], [1, \"cs\", 3, 59, 35, 1], [1, \"cs\", 0, 61, 35, 1], [1, \"cs\", 0, 63, 34, 1], [1, \"cs\", 2, 63, 33, 1], [1, \"cs\", 2, 63, 35, 1], [1, \"cs\", 2, 62, 35, 1], [1, \"cs\", 2, 58, 36, 1], [1, \"cs\", 1, 59, 36, 1], [1, \"cs\", 1, 62, 36, 1], [1, \"cs\", 2, 60, 36, 1], [1, \"cs\", 2, 61, 34, 1], [1, \"cs\", 3, 62, 33, 1], [1, \"cs\", 3, 63, 36, 1], [1, \"cs\", 3, 61, 36, 1], [1, \"cs\", 0, 42, 36, 1], [1, \"cs\", 1, 39, 36, 1], [1, \"cs\", 2, 41, 36, 1], [1, \"cs\", 3, 39, 35, 1], [1, \"cs\", 3, 40, 36, 1], [1, \"cs\", 3, 43, 36, 1], [1, \"cs\", 1, 40, 35, 1], [1, \"cs\", 2, 41, 35, 1], [1, \"cs\", 2, 40, 34, 1], [1, \"cs\", 2, 39, 34, 1], [1, \"cs\", 2, 39, 33, 1], [1, \"cs\", 2, 39, 32, 1], [1, \"cs\", 0, 40, 33, 1], [1, \"cs\", 2, 41, 34, 1], [1, \"cs\", 1, 44, 36, 1], [1, \"cs\", 3, 43, 35, 1], [1, \"cs\", 2, 42, 35, 1], [1, \"cs\", 0, 37, 34, 1], [1, \"cs\", 3, 59, 30, 1], [1, \"cs\", 0, 60, 29, 1], [1, \"cs\", 2, 60, 28, 1], [1, \"cs\", 3, 60, 27, 1], [1, \"cs\", 0, 60, 26, 1], [1, \"cs\", 2, 54, 25, 1], [1, \"cs\", 2, 48, 25, 1], [1, \"cs\", 2, 42, 26, 1], [1, \"cs\", 0, 55, 25, 1], [1, \"cs\", 2, 59, 26, 1], [1, \"cs\", 0, 43, 26, 1], [1, \"cs\", 1, 42, 27, 1], [1, \"cs\", 2, 42, 28, 1], [1, \"cs\", 2, 43, 30, 1], [1, \"cs\", 0, 42, 29, 1], [1, \"cs\", 0, 54, 24, 1], [1, \"cs\", 0, 48, 24, 1], [1, \"cs\", 2, 54, 23, 1], [1, \"cs\", 2, 48, 23, 1], [1, \"cs\", 2, 63, 22, 1], [1, \"cs\", 2, 63, 21, 1], [1, \"cs\", 2, 39, 21, 1], [1, \"cs\", 3, 57, 18, 1], [1, \"cs\", 2, 56, 18, 1], [1, \"cs\", 3, 51, 21, 1], [1, \"cs\", 0, 51, 20, 1], [1, \"cs\", 2, 51, 19, 1], [1, \"cs\", 3, 51, 18, 1], [1, \"cs\", 2, 63, 16, 1], [1, \"cs\", 2, 63, 10, 1], [1, \"cs\", 2, 56, 13, 1], [1, \"cs\", 3, 57, 13, 1], [1, \"cs\", 1, 45, 18, 1], [1, \"cs\", 2, 47, 18, 1], [1, \"cs\", 2, 46, 18, 1], [1, \"cs\", 0, 46, 13, 1], [1, \"cs\", 2, 45, 13, 1], [1, \"cs\", 2, 39, 10, 1], [1, \"cs\", 2, 39, 16, 1], [1, \"cs\", 2, 47, 17, 1], [1, \"a\", 0, 51, 15, 1], [1, \"a\", 1, 53, 14, 1], [1, \"a\", 1, 49, 14, 1], [1, \"de\", 8, 55, 15, 0], [1, \"de\", 9, 48, 28, 0], [1, \"de\", 10, 58, 26, 0], [1, \"de\", 11, 59, 29, 0], [1, \"de\", 11, 55, 34, 0], [1, \"de\", 10, 48, 33, 0], [1, \"de\", 9, 41, 32, 0], [1, \"de\", 9, 56, 24, 0], [1, \"de\", 9, 62, 16, 0], [1, \"de\", 9, 45, 11, 0], [1, \"de\", 9, 44, 17, 0], [1, \"de\", 10, 44, 13, 0], [1, \"de\", 10, 58, 13, 0], [1, \"de\", 10, 63, 31, 0], [1, \"de\", 8, 60, 30, 0], [1, \"de\", 8, 43, 26, 0], [1, \"de\", 10, 43, 29, 0], [1, \"de\", 10, 53, 29, 0], [1, \"de\", 10, 53, 24, 0], [1, \"de\", 9, 53, 19, 0], [1, \"de\", 11, 49, 19, 0], [1, \"de\", 10, 39, 26, 0], [1, \"de\", 9, 46, 24, 0], [1, \"de\", 9, 62, 10, 0], [1, \"de\", 8, 40, 14, 0], [1, \"de\", 32, 55, 35, 0], [1, \"de\", 32, 60, 33, 0], [1, \"de\", 32, 63, 28, 0], [1, \"de\", 32, 63, 24, 0], [1, \"de\", 32, 58, 22, 0], [1, \"de\", 32, 59, 17, 0], [1, \"de\", 32, 63, 13, 0], [1, \"de\", 32, 59, 10, 0], [1, \"de\", 32, 56, 12, 0], [1, \"de\", 32, 52, 17, 0], [1, \"de\", 32, 51, 14, 0], [1, \"de\", 32, 39, 12, 0], [1, \"de\", 32, 39, 18, 0], [1, \"de\", 32, 41, 25, 0], [1, \"de\", 32, 39, 30, 0], [1, \"de\", 32, 50, 29, 0], [1, \"de\", 32, 43, 34, 0], [1, \"de\", 32, 47, 34, 0], [1, \"de\", 31, 54, 33, 0], [1, \"de\", 31, 59, 24, 0], [1, \"de\", 31, 63, 19, 0], [1, \"de\", 31, 47, 15, 0], [1, \"de\", 31, 43, 17, 0], [1, \"de\", 31, 39, 27, 0], [1, \"de\", 31, 48, 27, 0], [1, \"de\", 31, 57, 27, 0], [1, \"de\", 32, 44, 27, 0], [1, \"d\", 0, 12, 13, 1], [1, \"d\", 0, 89, 13, 1], [1, \"d\", 1, 91, 21, 1], [1, \"d\", 1, 10, 22, 1], [1, \"f\", 2, 89, 18, 1], [1, \"f\", 0, 88, 19, 1], [1, \"g\", 1, 85, 22, 1], [1, \"s\", 1, 90, 29, 1], [1, \"s\", 1, 92, 15, 1], [1, \"s\", 0, 91, 31, 1], [1, \"s\", 2, 90, 38, 1], [1, \"s\", 0, 91, 42, 1], [1, \"s\", 0, 90, 49, 1], [1, \"f\", 1, 86, 43, 1], [1, \"f\", 0, 81, 45, 1], [1, \"f\", 2, 66, 44, 1], [1, \"f\", 2, 55, 49, 1], [1, \"f\", 1, 54, 50, 1], [1, \"f\", 2, 43, 45, 1], [1, \"f\", 2, 31, 48, 1], [1, \"f\", 1, 27, 39, 1], [1, \"f\", 1, 80, 46, 1], [1, \"f\", 1, 69, 48, 1], [1, \"g\", 0, 80, 40, 1], [1, \"g\", 2, 81, 40, 1], [1, \"s\", 2, 77, 39, 1], [1, \"s\", 0, 68, 43, 1], [1, \"s\", 2, 57, 41, 1], [1, \"s\", 1, 56, 42, 1], [1, \"s\", 1, 40, 41, 1], [1, \"s\", 2, 48, 48, 1], [1, \"f\", 2, 17, 12, 1], [1, \"f\", 0, 13, 31, 1], [1, \"f\", 1, 14, 32, 1], [1, \"s\", 0, 15, 27, 1], [1, \"s\", 0, 13, 39, 1], [1, \"f\", 2, 11, 17, 1], [1, \"f\", 1, 12, 18, 1], [1, \"g\", 2, 12, 25, 1], [1, \"f\", 0, 16, 45, 1], [1, \"f\", 1, 17, 46, 1], [1, \"s\", 1, 74, 48, 1], [1, \"s\", 1, 20, 47, 1], [1, \"g\", 0, 58, 59, 1], [1, \"g\", 0, 46, 72, 1], [1, \"g\", 0, 69, 79, 1], [1, \"g\", 0, 72, 74, 1], [1, \"g\", 0, 26, 88, 1], [1, \"g\", 0, 20, 74, 1], [1, \"g\", 0, 28, 67, 1], [1, \"g\", 0, 49, 86, 1], [1, \"g\", 0, 77, 90, 1], [1, \"g\", 0, 87, 72, 1], [1, \"g\", 0, 14, 85, 1], [1, \"g\", 1, 85, 97, 1], [1, \"g\", 1, 68, 104, 1], [1, \"g\", 1, 63, 91, 1], [1, \"g\", 1, 39, 90, 1], [1, \"g\", 1, 34, 99, 1], [1, \"g\", 1, 17, 103, 1], [1, \"g\", 2, 77, 60, 1], [1, \"g\", 2, 19, 56, 1], [1, \"g\", 2, 39, 60, 1], [1, \"g\", 2, 87, 57, 1], [1, \"f\", 0, 9, 62, 1], [1, \"f\", 0, 12, 81, 1], [1, \"f\", 0, 26, 59, 1], [1, \"f\", 0, 35, 53, 1], [1, \"f\", 0, 44, 58, 1], [1, \"f\", 0, 88, 62, 1], [1, \"f\", 0, 91, 82, 1], [1, \"f\", 0, 84, 85, 1], [1, \"f\", 0, 79, 69, 1], [1, \"f\", 0, 64, 71, 1], [1, \"f\", 0, 62, 83, 1], [1, \"f\", 0, 34, 81, 1], [1, \"f\", 0, 39, 71, 1], [1, \"f\", 0, 54, 94, 1], [1, \"f\", 1, 81, 70, 1], [1, \"f\", 1, 91, 72, 1], [1, \"f\", 1, 8, 91, 1], [1, \"f\", 1, 14, 81, 1], [1, \"f\", 1, 29, 79, 1], [1, \"f\", 1, 13, 65, 1], [1, \"f\", 1, 46, 97, 1], [1, \"f\", 1, 43, 73, 1], [1, \"f\", 1, 60, 69, 1], [1, \"f\", 1, 70, 96, 1], [1, \"f\", 1, 58, 84, 1], [1, \"s\", 1, 56, 76, 1], [1, \"s\", 1, 85, 74, 1], [1, \"s\", 0, 72, 71, 1], [1, \"s\", 0, 41, 62, 1], [1, \"s\", 0, 60, 61, 1], [1, \"s\", 0, 20, 66, 1], [1, \"s\", 0, 47, 83, 1], [1, \"s\", 0, 29, 86, 1], [1, \"s\", 0, 78, 92, 1], [1, \"s\", 0, 62, 102, 1], [1, \"s\", 0, 18, 95, 1], [1, \"s\", 2, 64, 101, 1], [1, \"s\", 2, 78, 84, 1], [1, \"s\", 2, 49, 83, 1], [1, \"s\", 2, 15, 76, 1], [1, \"s\", 2, 21, 84, 1], [1, \"f\", 1, 26, 94, 1], [1, \"f\", 2, 23, 96, 1], [1, \"f\", 2, 25, 72, 1], [1, \"f\", 2, 85, 77, 1], [1, \"f\", 2, 79, 95, 1], [1, \"f\", 2, 51, 65, 1], [1, \"f\", 2, 69, 60, 1], [1, \"f\", 1, 25, 105, 1], [1, \"s\", 1, 18, 68, 1], [1, \"s\", 0, 55, 76, 1], [1, \"s\", 0, 74, 59, 1], [1, \"f\", 1, 46, 142, 1], [1, \"f\", 1, 19, 140, 1], [1, \"f\", 1, 77, 137, 1], [1, \"f\", 0, 75, 137, 1], [1, \"f\", 0, 55, 138, 1], [1, \"f\", 0, 33, 127, 1], [1, \"f\", 0, 76, 121, 1], [1, \"f\", 0, 55, 121, 1], [1, \"f\", 0, 13, 123, 1], [1, \"f\", 0, 18, 141, 1], [1, \"f\", 0, 40, 137, 1], [1, \"f\", 2, 76, 142, 1], [1, \"f\", 2, 57, 140, 1], [1, \"f\", 2, 39, 138, 1], [1, \"f\", 2, 16, 143, 1], [1, \"f\", 2, 29, 131, 1], [1, \"f\", 0, 70, 150, 1], [1, \"f\", 0, 28, 146, 1], [1, \"f\", 0, 12, 132, 1], [1, \"f\", 0, 90, 129, 1], [1, \"f\", 1, 87, 131, 1], [1, \"f\", 0, 91, 143, 1], [1, \"f\", 2, 87, 145, 1], [1, \"f\", 1, 89, 141, 1], [1, \"f\", 1, 63, 130, 1], [1, \"f\", 1, 75, 122, 1], [1, \"f\", 1, 52, 124, 1], [1, \"f\", 1, 34, 127, 1], [1, \"f\", 1, 14, 123, 1], [1, \"f\", 1, 24, 122, 1], [1, \"f\", 0, 83, 108, 1], [1, \"f\", 0, 89, 118, 1], [1, \"f\", 0, 56, 107, 1], [1, \"f\", 0, 38, 113, 1], [1, \"f\", 0, 16, 110, 1], [1, \"f\", 1, 80, 105, 1], [1, \"f\", 1, 82, 109, 1], [1, \"f\", 1, 87, 118, 1], [1, \"f\", 1, 59, 110, 1], [1, \"f\", 1, 29, 111, 1], [1, \"f\", 2, 28, 112, 1], [1, \"f\", 2, 70, 112, 1], [1, \"f\", 2, 42, 111, 1], [1, \"s\", 0, 68, 157, 1], [1, \"s\", 0, 81, 158, 1], [1, \"s\", 0, 25, 172, 1], [1, \"s\", 0, 22, 161, 1], [1, \"s\", 0, 35, 152, 1], [1, \"s\", 0, 66, 144, 1], [1, \"s\", 0, 87, 145, 1], [1, \"s\", 0, 86, 145, 1], [1, \"s\", 0, 84, 135, 1], [1, \"s\", 0, 69, 133, 1], [1, \"s\", 0, 84, 122, 1], [1, \"s\", 0, 68, 121, 1], [1, \"s\", 0, 48, 124, 1], [1, \"s\", 0, 26, 129, 1], [1, \"s\", 0, 9, 127, 1], [1, \"s\", 0, 11, 144, 1], [1, \"s\", 0, 9, 109, 1], [1, \"s\", 0, 35, 101, 1], [1, \"s\", 0, 47, 109, 1], [1, \"s\", 0, 58, 111, 1], [1, \"s\", 0, 84, 110, 1], [1, \"s\", 0, 28, 114, 1], [1, \"s\", 1, 30, 116, 1], [1, \"s\", 1, 46, 112, 1], [1, \"s\", 1, 81, 111, 1], [1, \"s\", 1, 70, 123, 1], [1, \"s\", 1, 49, 127, 1], [1, \"s\", 1, 66, 134, 1], [1, \"s\", 1, 67, 144, 1], [1, \"s\", 1, 38, 152, 1], [1, \"s\", 1, 21, 164, 1], [1, \"s\", 1, 12, 147, 1], [1, \"s\", 1, 24, 130, 1], [1, \"s\", 1, 12, 125, 1], [1, \"s\", 1, 65, 158, 1], [1, \"s\", 1, 83, 167, 1], [1, \"s\", 1, 65, 167, 1], [1, \"s\", 1, 47, 164, 1], [1, \"s\", 1, 56, 168, 1], [1, \"s\", 2, 54, 169, 1], [1, \"s\", 2, 88, 170, 1], [1, \"s\", 2, 91, 162, 1], [1, \"s\", 2, 79, 149, 1], [1, \"s\", 2, 75, 144, 1], [1, \"s\", 2, 57, 150, 1], [1, \"s\", 2, 47, 143, 1], [1, \"s\", 2, 31, 145, 1], [1, \"s\", 2, 36, 138, 1], [1, \"s\", 2, 10, 163, 1], [1, \"s\", 2, 22, 142, 1], [1, \"g\", 2, 78, 132, 1], [1, \"g\", 1, 48, 135, 1], [1, \"g\", 2, 16, 136, 1], [1, \"g\", 0, 62, 92, 1], [1, \"g\", 2, 70, 80, 1], [1, \"g\", 2, 15, 86, 1], [1, \"g\", 2, 47, 75, 1], [1, \"g\", 2, 36, 89, 1], [1, \"g\", 2, 80, 90, 1], [1, \"f\", 1, 39, 118, 1], [1, \"d\", 2, 84, 54, 1], [1, \"d\", 2, 16, 54, 1], [1, \"de\", 7, 13, 13, 0], [1, \"de\", 5, 16, 28, 0], [1, \"de\", 5, 9, 25, 0], [1, \"de\", 5, 34, 41, 0], [1, \"de\", 4, 28, 40, 0], [1, \"de\", 6, 31, 47, 0], [1, \"de\", 6, 12, 39, 0], [1, \"de\", 4, 16, 47, 0], [1, \"de\", 4, 7, 46, 0], [1, \"de\", 6, 7, 33, 0], [1, \"de\", 6, 40, 42, 0], [1, \"de\", 7, 20, 48, 0], [1, \"de\", 7, 29, 59, 0], [1, \"de\", 6, 27, 58, 0], [1, \"de\", 6, 15, 54, 0], [1, \"de\", 5, 12, 66, 0], [1, \"de\", 5, 37, 53, 0], [1, \"de\", 4, 10, 63, 0], [1, \"de\", 7, 49, 48, 0], [1, \"de\", 7, 37, 63, 0], [1, \"de\", 6, 33, 68, 0], [1, \"de\", 6, 56, 52, 0], [1, \"de\", 5, 59, 58, 0], [1, \"de\", 6, 48, 58, 0], [1, \"de\", 4, 53, 63, 0], [1, \"de\", 4, 67, 44, 0], [1, \"de\", 5, 70, 49, 0], [1, \"de\", 5, 82, 55, 0], [1, \"de\", 5, 79, 41, 0], [1, \"de\", 5, 91, 29, 0], [1, \"de\", 7, 91, 43, 0], [1, \"de\", 6, 85, 44, 0], [1, \"de\", 6, 74, 60, 0], [1, \"de\", 6, 90, 8, 0], [1, \"de\", 5, 91, 15, 0], [1, \"de\", 4, 87, 20, 0], [1, \"de\", 7, 93, 11, 0], [1, \"de\", 6, 91, 21, 0], [1, \"de\", 6, 85, 35, 0], [1, \"de\", 5, 93, 58, 0], [1, \"de\", 5, 87, 63, 0], [1, \"de\", 7, 77, 62, 0], [1, \"de\", 6, 68, 61, 0], [1, \"de\", 5, 90, 73, 0], [1, \"de\", 4, 87, 71, 0], [1, \"de\", 7, 80, 71, 0], [1, \"de\", 7, 83, 77, 0], [1, \"de\", 7, 89, 83, 0], [1, \"de\", 4, 71, 80, 0], [1, \"de\", 4, 71, 70, 0], [1, \"de\", 5, 63, 72, 0], [1, \"de\", 4, 54, 75, 0], [1, \"de\", 5, 44, 83, 0], [1, \"de\", 5, 42, 74, 0], [1, \"de\", 5, 15, 81, 0], [1, \"de\", 4, 29, 80, 0], [1, \"de\", 4, 37, 90, 0], [1, \"de\", 4, 7, 75, 0], [1, \"de\", 6, 22, 74, 0], [1, \"de\", 6, 43, 95, 0], [1, \"de\", 6, 57, 85, 0], [1, \"de\", 6, 19, 94, 0], [1, \"de\", 6, 9, 92, 0], [1, \"de\", 5, 26, 89, 0], [1, \"de\", 5, 31, 112, 0], [1, \"de\", 5, 54, 108, 0], [1, \"de\", 5, 55, 95, 0], [1, \"de\", 5, 35, 104, 0], [1, \"de\", 5, 13, 110, 0], [1, \"de\", 7, 27, 107, 0], [1, \"de\", 7, 47, 99, 0], [1, \"de\", 7, 11, 104, 0], [1, \"de\", 7, 9, 111, 0], [1, \"de\", 7, 40, 114, 0], [1, \"de\", 7, 28, 117, 0], [1, \"de\", 7, 47, 113, 0], [1, \"de\", 7, 63, 104, 0], [1, \"de\", 4, 64, 92, 0], [1, \"de\", 6, 86, 97, 0], [1, \"de\", 5, 76, 91, 0], [1, \"de\", 5, 85, 86, 0], [1, \"de\", 6, 78, 83, 0], [1, \"de\", 6, 71, 97, 0], [1, \"de\", 4, 69, 105, 0], [1, \"de\", 4, 79, 104, 0], [1, \"de\", 4, 86, 109, 0], [1, \"de\", 4, 86, 118, 0], [1, \"de\", 5, 70, 113, 0], [1, \"de\", 6, 69, 121, 0], [1, \"de\", 6, 76, 122, 0], [1, \"de\", 7, 87, 130, 0], [1, \"de\", 4, 84, 123, 0], [1, \"de\", 4, 57, 121, 0], [1, \"de\", 5, 53, 125, 0], [1, \"de\", 5, 62, 131, 0], [1, \"de\", 6, 67, 143, 0], [1, \"de\", 5, 77, 143, 0], [1, \"de\", 5, 85, 136, 0], [1, \"de\", 6, 87, 147, 0], [1, \"de\", 6, 92, 140, 0], [1, \"de\", 4, 93, 127, 0], [1, \"de\", 5, 93, 106, 0], [1, \"de\", 5, 45, 144, 0], [1, \"de\", 4, 41, 139, 0], [1, \"de\", 4, 54, 138, 0], [1, \"de\", 6, 29, 145, 0], [1, \"de\", 6, 29, 132, 0], [1, \"de\", 6, 35, 127, 0], [1, \"de\", 6, 64, 142, 0], [1, \"de\", 5, 23, 131, 0], [1, \"de\", 5, 9, 134, 0], [1, \"de\", 6, 11, 121, 0], [1, \"de\", 4, 26, 121, 0], [1, \"de\", 35, 58, 150, 0], [1, \"de\", 33, 48, 156, 0], [1, \"de\", 33, 25, 158, 0], [1, \"de\", 33, 36, 154, 0], [1, \"de\", 34, 9, 154, 0], [1, \"de\", 34, 13, 148, 0], [1, \"de\", 34, 21, 142, 0], [1, \"de\", 34, 38, 139, 0], [1, \"de\", 34, 47, 144, 0], [1, \"de\", 34, 68, 142, 0], [1, \"de\", 36, 70, 135, 0], [1, \"de\", 36, 64, 132, 0], [1, \"de\", 36, 86, 134, 0], [1, \"de\", 36, 90, 141, 0], [1, \"de\", 36, 93, 131, 0], [1, \"de\", 36, 91, 125, 0], [1, \"de\", 36, 76, 123, 0], [1, \"de\", 33, 82, 122, 0], [1, \"de\", 35, 56, 122, 0], [1, \"de\", 35, 40, 119, 0], [1, \"de\", 35, 17, 112, 0], [1, \"de\", 35, 37, 102, 0], [1, \"de\", 33, 18, 97, 0], [1, \"de\", 34, 10, 83, 0], [1, \"de\", 33, 19, 73, 0], [1, \"de\", 33, 10, 60, 0], [1, \"de\", 35, 24, 60, 0], [1, \"de\", 36, 14, 45, 0], [1, \"de\", 36, 21, 42, 0], [1, \"de\", 35, 8, 32, 0], [1, \"de\", 33, 9, 24, 0], [1, \"de\", 35, 35, 27, 0], [1, \"de\", 33, 56, 35, 0], [1, \"de\", 36, 53, 36, 0], [1, \"de\", 33, 45, 35, 0], [1, \"de\", 35, 53, 39, 0], [1, \"de\", 36, 57, 30, 0], [1, \"de\", 33, 86, 108, 0], [1, \"de\", 33, 68, 112, 0], [1, \"de\", 33, 49, 109, 0], [1, \"de\", 33, 46, 95, 0], [1, \"de\", 33, 90, 76, 0], [1, \"de\", 36, 76, 83, 0], [1, \"de\", 36, 70, 72, 0], [1, \"de\", 36, 78, 63, 0], [1, \"de\", 36, 90, 64, 0], [1, \"de\", 36, 60, 70, 0], [1, \"de\", 35, 75, 90, 0], [1, \"de\", 35, 81, 58, 0], [1, \"de\", 35, 91, 51, 0], [1, \"de\", 35, 93, 56, 0], [1, \"de\", 35, 61, 60, 0], [1, \"de\", 35, 66, 46, 0], [1, \"de\", 33, 90, 19, 0], [1, \"de\", 34, 92, 9, 0], [1, \"de\", 35, 75, 39, 0], [1, \"de\", 35, 67, 42, 0], [1, \"de\", 35, 93, 37, 0], [1, \"de\", 36, 89, 28, 0], [1, \"de\", 36, 42, 61, 0], [1, \"de\", 33, 49, 50, 0], [1, \"de\", 33, 44, 75, 0], [1, \"de\", 33, 46, 85, 0], [1, \"de\", 33, 64, 84, 0], [1, \"de\", 33, 56, 94, 0], [1, \"de\", 33, 25, 90, 0], [1, \"de\", 33, 31, 69, 0], [1, \"de\", 35, 34, 54, 0], [1, \"de\", 35, 29, 47, 0], [1, \"de\", 36, 42, 41, 0], [1, \"de\", 36, 29, 34, 0], [1, \"de\", 35, 20, 55, 0], [1, \"de\", 35, 14, 52, 0], [1, \"s\", 2, 12, 171, 1], [1, \"r\", 20, 188, 0], [1, \"r\", 21, 188, 0], [1, \"r\", 22, 188, 0], [1, \"r\", 23, 188, 0], [1, \"r\", 24, 188, 0], [1, \"r\", 25, 189, 0], [1, \"r\", 24, 189, 0], [1, \"r\", 23, 189, 0], [1, \"r\", 22, 189, 0], [1, \"r\", 21, 189, 0], [1, \"r\", 20, 189, 0], [1, \"r\", 19, 189, 0], [1, \"r\", 19, 190, 0], [1, \"r\", 19, 191, 0], [1, \"r\", 20, 191, 0], [1, \"r\", 21, 191, 0], [1, \"r\", 22, 191, 0], [1, \"r\", 24, 191, 0], [1, \"r\", 23, 191, 0], [1, \"r\", 25, 191, 0], [1, \"r\", 25, 190, 0], [1, \"r\", 24, 190, 0], [1, \"r\", 23, 190, 0], [1, \"r\", 22, 190, 0], [1, \"r\", 21, 190, 0], [1, \"r\", 20, 190, 0], [1, \"r\", 26, 190, 0], [1, \"r\", 26, 191, 0], [1, \"r\", 24, 193, 0], [1, \"r\", 23, 193, 0], [1, \"r\", 22, 193, 0], [1, \"r\", 20, 192, 0], [1, \"r\", 21, 192, 0], [1, \"r\", 22, 192, 0], [1, \"r\", 23, 192, 0], [1, \"r\", 24, 192, 0], [1, \"r\", 25, 192, 0], [1, \"r\", 53, 199, 0], [1, \"r\", 52, 200, 0], [1, \"r\", 54, 199, 0], [1, \"r\", 55, 199, 0], [1, \"r\", 55, 200, 0], [1, \"r\", 54, 200, 0], [1, \"r\", 53, 200, 0], [1, \"r\", 51, 200, 0], [1, \"r\", 56, 200, 0], [1, \"r\", 55, 201, 0], [1, \"r\", 54, 201, 0], [1, \"r\", 55, 202, 0], [1, \"r\", 54, 203, 0], [1, \"r\", 54, 204, 0], [1, \"r\", 54, 202, 0], [1, \"r\", 53, 202, 0], [1, \"r\", 52, 202, 0], [1, \"r\", 53, 201, 0], [1, \"r\", 52, 201, 0], [1, \"r\", 51, 201, 0], [1, \"r\", 51, 202, 0], [1, \"r\", 50, 202, 0], [1, \"r\", 50, 201, 0], [1, \"r\", 56, 201, 0], [1, \"r\", 53, 203, 0], [1, \"r\", 52, 203, 0], [1, \"r\", 51, 203, 0], [1, \"r\", 56, 202, 0], [1, \"r\", 55, 203, 0], [1, \"r\", 53, 204, 0], [1, \"r\", 52, 204, 0], [1, \"r\", 55, 204, 0], [1, \"r\", 56, 203, 0], [1, \"r\", 56, 244, 0], [1, \"r\", 54, 246, 0], [1, \"r\", 50, 248, 0], [1, \"r\", 48, 248, 0], [1, \"r\", 43, 248, 0], [1, \"r\", 45, 238, 0], [1, \"r\", 44, 238, 0], [1, \"r\", 43, 238, 0], [1, \"r\", 46, 238, 0], [1, \"r\", 47, 238, 0], [1, \"r\", 48, 238, 0], [1, \"r\", 49, 238, 0], [1, \"r\", 50, 238, 0], [1, \"r\", 51, 238, 0], [1, \"r\", 52, 238, 0], [1, \"r\", 53, 238, 0], [1, \"r\", 54, 239, 0], [1, \"r\", 53, 240, 0], [1, \"r\", 53, 239, 0], [1, \"r\", 52, 239, 0], [1, \"r\", 51, 239, 0], [1, \"r\", 50, 239, 0], [1, \"r\", 49, 239, 0], [1, \"r\", 48, 239, 0], [1, \"r\", 47, 239, 0], [1, \"r\", 46, 239, 0], [1, \"r\", 45, 239, 0], [1, \"r\", 44, 239, 0], [1, \"r\", 43, 239, 0], [1, \"r\", 42, 239, 0], [1, \"r\", 41, 240, 0], [1, \"r\", 42, 240, 0], [1, \"r\", 43, 240, 0], [1, \"r\", 44, 240, 0], [1, \"r\", 45, 240, 0], [1, \"r\", 46, 240, 0], [1, \"r\", 47, 240, 0], [1, \"r\", 48, 240, 0], [1, \"r\", 49, 240, 0], [1, \"r\", 50, 240, 0], [1, \"r\", 51, 240, 0], [1, \"r\", 52, 240, 0], [1, \"r\", 54, 240, 0], [1, \"r\", 55, 240, 0], [1, \"r\", 56, 241, 0], [1, \"r\", 55, 241, 0], [1, \"r\", 54, 241, 0], [1, \"r\", 53, 241, 0], [1, \"r\", 52, 241, 0], [1, \"r\", 51, 241, 0], [1, \"r\", 49, 241, 0], [1, \"r\", 50, 241, 0], [1, \"r\", 48, 241, 0], [1, \"r\", 47, 241, 0], [1, \"r\", 46, 241, 0], [1, \"r\", 45, 241, 0], [1, \"r\", 44, 241, 0], [1, \"r\", 43, 241, 0], [1, \"r\", 42, 241, 0], [1, \"r\", 41, 241, 0], [1, \"r\", 40, 242, 0], [1, \"r\", 41, 242, 0], [1, \"r\", 42, 242, 0], [1, \"r\", 43, 242, 0], [1, \"r\", 44, 242, 0], [1, \"r\", 45, 242, 0], [1, \"r\", 46, 242, 0], [1, \"r\", 47, 242, 0], [1, \"r\", 48, 242, 0], [1, \"r\", 49, 242, 0], [1, \"r\", 50, 242, 0], [1, \"r\", 51, 242, 0], [1, \"r\", 52, 242, 0], [1, \"r\", 53, 242, 0], [1, \"r\", 54, 242, 0], [1, \"r\", 55, 242, 0], [1, \"r\", 56, 242, 0], [1, \"r\", 56, 243, 0], [1, \"r\", 55, 243, 0], [1, \"r\", 54, 243, 0], [1, \"r\", 53, 243, 0], [1, \"r\", 52, 243, 0], [1, \"r\", 51, 243, 0], [1, \"r\", 50, 243, 0], [1, \"r\", 49, 243, 0], [1, \"r\", 48, 243, 0], [1, \"r\", 47, 243, 0], [1, \"r\", 46, 243, 0], [1, \"r\", 45, 243, 0], [1, \"r\", 44, 243, 0], [1, \"r\", 43, 243, 0], [1, \"r\", 42, 243, 0], [1, \"r\", 41, 243, 0], [1, \"r\", 40, 243, 0], [1, \"r\", 40, 244, 0], [1, \"r\", 41, 244, 0], [1, \"r\", 43, 244, 0], [1, \"r\", 44, 244, 0], [1, \"r\", 45, 244, 0], [1, \"r\", 46, 244, 0], [1, \"r\", 47, 244, 0], [1, \"r\", 48, 244, 0], [1, \"r\", 49, 244, 0], [1, \"r\", 50, 244, 0], [1, \"r\", 51, 244, 0], [1, \"r\", 52, 244, 0], [1, \"r\", 53, 244, 0], [1, \"r\", 54, 244, 0], [1, \"r\", 55, 244, 0], [1, \"r\", 42, 244, 0], [1, \"r\", 40, 245, 0], [1, \"r\", 41, 245, 0], [1, \"r\", 42, 245, 0], [1, \"r\", 43, 245, 0], [1, \"r\", 44, 245, 0], [1, \"r\", 45, 245, 0], [1, \"r\", 46, 245, 0], [1, \"r\", 47, 245, 0], [1, \"r\", 48, 245, 0], [1, \"r\", 49, 245, 0], [1, \"r\", 50, 245, 0], [1, \"r\", 51, 245, 0], [1, \"r\", 52, 246, 0], [1, \"r\", 52, 245, 0], [1, \"r\", 53, 245, 0], [1, \"r\", 54, 245, 0], [1, \"r\", 55, 245, 0], [1, \"r\", 53, 246, 0], [1, \"r\", 51, 246, 0], [1, \"r\", 50, 246, 0], [1, \"r\", 49, 246, 0], [1, \"r\", 48, 246, 0], [1, \"r\", 47, 246, 0], [1, \"r\", 45, 246, 0], [1, \"r\", 46, 246, 0], [1, \"r\", 44, 246, 0], [1, \"r\", 43, 246, 0], [1, \"r\", 42, 246, 0], [1, \"r\", 41, 246, 0], [1, \"r\", 42, 247, 0], [1, \"r\", 43, 247, 0], [1, \"r\", 44, 247, 0], [1, \"r\", 45, 247, 0], [1, \"r\", 46, 247, 0], [1, \"r\", 47, 247, 0], [1, \"r\", 48, 247, 0], [1, \"r\", 50, 247, 0], [1, \"r\", 51, 247, 0], [1, \"r\", 52, 247, 0], [1, \"r\", 53, 247, 0], [1, \"r\", 54, 247, 0], [1, \"r\", 49, 247, 0], [1, \"r\", 49, 248, 0], [1, \"r\", 47, 248, 0], [1, \"r\", 46, 248, 0], [1, \"r\", 45, 248, 0], [1, \"r\", 51, 248, 0], [1, \"r\", 55, 246, 1], [1, \"r\", 55, 247, 1], [1, \"r\", 56, 247, 1], [1, \"r\", 56, 248, 1], [1, \"r\", 95, 270, 1], [1, \"r\", 93, 270, 1], [1, \"r\", 94, 270, 1], [1, \"r\", 95, 271, 1], [1, \"r\", 94, 271, 1], [1, \"r\", 93, 271, 1], [1, \"r\", 94, 282, 1], [1, \"r\", 93, 282, 1], [1, \"r\", 93, 281, 1], [1, \"r\", 92, 281, 1], [1, \"r\", 92, 280, 1], [1, \"r\", 91, 280, 1], [1, \"r\", 90, 279, 1], [1, \"r\", 95, 275, 1], [1, \"r\", 95, 274, 1], [1, \"r\", 95, 273, 1], [1, \"r\", 95, 272, 1], [1, \"r\", 94, 274, 1], [1, \"r\", 94, 273, 1], [1, \"r\", 94, 272, 1], [1, \"r\", 93, 272, 1], [1, \"r\", 93, 273, 1], [1, \"r\", 93, 274, 1], [1, \"r\", 92, 273, 1], [1, \"r\", 92, 272, 1], [1, \"r\", 92, 270, 1], [1, \"r\", 92, 271, 1], [1, \"r\", 92, 269, 1], [1, \"r\", 90, 269, 1], [1, \"r\", 91, 269, 1], [1, \"r\", 91, 271, 1], [1, \"r\", 91, 270, 1], [1, \"r\", 95, 278, 1], [1, \"r\", 95, 277, 1], [1, \"r\", 95, 276, 1], [1, \"r\", 94, 276, 1], [1, \"r\", 94, 275, 1], [1, \"r\", 93, 275, 1], [1, \"r\", 92, 274, 1], [1, \"r\", 92, 275, 1], [1, \"r\", 91, 275, 1], [1, \"r\", 90, 275, 1], [1, \"r\", 89, 274, 1], [1, \"r\", 90, 274, 1], [1, \"r\", 89, 275, 1], [1, \"r\", 88, 274, 1], [1, \"r\", 88, 273, 1], [1, \"r\", 86, 272, 1], [1, \"r\", 85, 271, 1], [1, \"r\", 86, 271, 1], [1, \"r\", 87, 272, 1], [1, \"r\", 55, 248, 1], [1, \"r\", 54, 248, 1], [1, \"r\", 56, 249, 1], [1, \"r\", 55, 249, 1], [1, \"r\", 55, 250, 1], [1, \"r\", 56, 250, 1], [1, \"r\", 57, 250, 1], [1, \"r\", 57, 249, 1], [1, \"r\", 59, 250, 1], [1, \"r\", 58, 250, 1], [1, \"r\", 60, 250, 1], [1, \"r\", 61, 251, 1], [1, \"r\", 60, 251, 1], [1, \"r\", 62, 251, 1], [1, \"r\", 62, 252, 1], [1, \"r\", 63, 252, 1], [1, \"r\", 58, 251, 1], [1, \"r\", 57, 251, 1], [1, \"r\", 56, 251, 1], [1, \"r\", 58, 252, 1], [1, \"r\", 57, 252, 1], [1, \"r\", 57, 253, 1], [1, \"r\", 58, 253, 1], [1, \"r\", 58, 254, 1], [1, \"r\", 59, 255, 1], [1, \"r\", 58, 255, 1], [1, \"r\", 57, 254, 1], [1, \"r\", 56, 252, 1], [1, \"r\", 55, 251, 1], [1, \"r\", 60, 255, 1], [1, \"r\", 61, 255, 1], [1, \"r\", 61, 256, 1], [1, \"r\", 60, 256, 1], [1, \"r\", 62, 256, 1], [1, \"r\", 62, 257, 1], [1, \"r\", 61, 257, 1], [1, \"r\", 64, 253, 1], [1, \"r\", 64, 254, 1], [1, \"r\", 65, 254, 1], [1, \"r\", 61, 250, 1], [1, \"r\", 64, 252, 1], [1, \"r\", 65, 253, 1], [1, \"r\", 66, 254, 1], [1, \"r\", 65, 255, 1], [1, \"r\", 64, 255, 1], [1, \"r\", 64, 256, 1], [1, \"r\", 65, 256, 1], [1, \"r\", 65, 257, 1], [1, \"r\", 64, 257, 1], [1, \"r\", 63, 257, 1], [1, \"r\", 62, 258, 1], [1, \"r\", 63, 258, 1], [1, \"r\", 64, 258, 1], [1, \"r\", 66, 255, 1], [1, \"r\", 66, 256, 1], [1, \"r\", 66, 257, 1], [1, \"r\", 66, 258, 1], [1, \"r\", 65, 258, 1], [1, \"r\", 67, 258, 1], [1, \"r\", 67, 257, 1], [1, \"r\", 67, 259, 1], [1, \"r\", 66, 259, 1], [1, \"r\", 65, 259, 1], [1, \"r\", 56, 246, 1], [1, \"r\", 56, 245, 1], [1, \"r\", 68, 258, 1], [1, \"r\", 68, 259, 1], [1, \"r\", 68, 260, 1], [1, \"r\", 69, 260, 1], [1, \"r\", 69, 261, 1], [1, \"r\", 70, 261, 1], [1, \"r\", 71, 261, 1], [1, \"r\", 67, 260, 1], [1, \"r\", 89, 269, 1], [1, \"r\", 89, 268, 1], [1, \"r\", 90, 268, 1], [1, \"r\", 82, 267, 1], [1, \"r\", 83, 267, 1], [1, \"r\", 80, 266, 1], [1, \"r\", 81, 266, 1], [1, \"r\", 81, 267, 1], [1, \"r\", 79, 266, 1], [1, \"r\", 78, 265, 1], [1, \"r\", 77, 265, 1], [1, \"r\", 76, 264, 1], [1, \"r\", 75, 264, 1], [1, \"r\", 75, 263, 1], [1, \"r\", 74, 263, 1], [1, \"r\", 74, 262, 1], [1, \"r\", 72, 262, 1], [1, \"r\", 73, 262, 1], [1, \"r\", 71, 262, 1], [1, \"r\", 85, 270, 1], [1, \"r\", 84, 270, 1], [1, \"r\", 84, 269, 1], [1, \"r\", 83, 269, 1], [1, \"r\", 82, 269, 1], [1, \"r\", 81, 269, 1], [1, \"r\", 81, 268, 1], [1, \"r\", 82, 268, 1], [1, \"r\", 83, 268, 1], [1, \"r\", 80, 268, 1], [1, \"r\", 80, 267, 1], [1, \"r\", 79, 267, 1], [1, \"r\", 78, 266, 1], [1, \"r\", 76, 265, 1], [1, \"r\", 75, 262, 1], [1, \"r\", 90, 280, 1], [1, \"r\", 89, 280, 1], [1, \"r\", 89, 279, 1], [1, \"r\", 88, 279, 1], [1, \"r\", 88, 278, 1], [1, \"r\", 87, 277, 1], [1, \"r\", 86, 276, 1], [1, \"r\", 86, 275, 1], [1, \"r\", 86, 274, 1], [1, \"r\", 86, 273, 1], [1, \"r\", 85, 273, 1], [1, \"r\", 85, 272, 1], [1, \"r\", 85, 274, 1], [1, \"r\", 86, 277, 1], [1, \"r\", 87, 278, 1], [1, \"r\", 84, 271, 1], [1, \"r\", 83, 270, 1], [1, \"r\", 87, 273, 1], [1, \"r\", 91, 274, 1], [1, \"r\", 89, 273, 1], [1, \"r\", 88, 272, 1], [1, \"r\", 91, 281, 1], [1, \"r\", 92, 282, 1], [1, \"r\", 88, 280, 1], [1, \"r\", 87, 279, 1], [1, \"r\", 85, 275, 1], [1, \"r\", 84, 273, 1], [1, \"r\", 84, 272, 1], [1, \"r\", 83, 271, 1], [1, \"r\", 82, 270, 1], [1, \"r\", 84, 267, 0], [1, \"r\", 85, 267, 0], [1, \"r\", 76, 262, 0], [1, \"r\", 77, 262, 0], [1, \"r\", 88, 268, 0], [1, \"r\", 78, 262, 0], [1, \"r\", 79, 262, 0], [1, \"r\", 80, 262, 0], [1, \"r\", 80, 263, 0], [1, \"r\", 81, 263, 0], [1, \"r\", 82, 263, 0], [1, \"r\", 83, 263, 0], [1, \"r\", 84, 263, 0], [1, \"r\", 85, 263, 0], [1, \"r\", 88, 262, 0], [1, \"r\", 89, 262, 0], [1, \"r\", 90, 262, 0], [1, \"r\", 87, 262, 0], [1, \"r\", 86, 262, 0], [1, \"r\", 86, 263, 0], [1, \"r\", 87, 263, 0], [1, \"r\", 91, 262, 0], [1, \"r\", 95, 262, 0], [1, \"r\", 94, 262, 0], [1, \"r\", 86, 267, 0], [1, \"r\", 87, 267, 0], [1, \"r\", 87, 268, 0], [1, \"r\", 86, 268, 0], [1, \"r\", 74, 189, 0], [1, \"r\", 75, 189, 0], [1, \"r\", 76, 189, 0], [1, \"r\", 77, 189, 0], [1, \"r\", 78, 190, 0], [1, \"r\", 77, 190, 0], [1, \"r\", 75, 190, 0], [1, \"r\", 76, 190, 0], [1, \"r\", 74, 190, 0], [1, \"r\", 73, 190, 0], [1, \"r\", 78, 191, 0], [1, \"r\", 76, 191, 0], [1, \"r\", 77, 191, 0], [1, \"r\", 75, 191, 0], [1, \"r\", 74, 191, 0], [1, \"r\", 78, 192, 0], [1, \"r\", 77, 192, 0], [1, \"r\", 76, 192, 0], [1, \"r\", 75, 192, 0], [1, \"r\", 74, 192, 0], [1, \"r\", 73, 191, 0], [1, \"f\", 1, 96, 22, 1], [1, \"s\", 1, 97, 22, 1], [1, \"f\", 1, 98, 22, 1], [1, \"s\", 0, 99, 22, 1], [1, \"s\", 1, 100, 21, 1], [1, \"s\", 1, 96, 49, 1], [1, \"s\", 1, 100, 50, 1], [1, \"s\", 0, 99, 49, 1], [1, \"s\", 0, 97, 49, 1], [1, \"f\", 1, 98, 49, 1], [1, \"r\", 70, 218, 0], [1, \"r\", 71, 218, 0], [1, \"r\", 72, 218, 0], [1, \"r\", 73, 218, 0], [1, \"r\", 74, 219, 0], [1, \"r\", 73, 219, 0], [1, \"r\", 72, 219, 0], [1, \"r\", 71, 219, 0], [1, \"r\", 70, 219, 0], [1, \"r\", 73, 220, 0], [1, \"r\", 72, 220, 0], [1, \"r\", 71, 220, 0], [1, \"r\", 72, 221, 0], [1, \"r\", 71, 221, 0], [1, \"r\", 70, 221, 0], [1, \"r\", 69, 221, 0], [1, \"r\", 68, 221, 0], [1, \"r\", 70, 220, 0], [1, \"r\", 69, 220, 0], [1, \"r\", 69, 219, 0], [1, \"r\", 68, 220, 0], [1, \"r\", 73, 221, 0], [1, \"r\", 73, 222, 0], [1, \"r\", 71, 222, 0], [1, \"r\", 72, 222, 0], [1, \"r\", 74, 221, 0], [1, \"r\", 74, 220, 0], [1, \"r\", 75, 220, 0], [1, \"r\", 75, 221, 0], [1, \"r\", 70, 222, 0], [1, \"r\", 69, 222, 0], [1, \"r\", 29, 217, 0], [1, \"r\", 30, 217, 0], [1, \"r\", 31, 217, 0], [1, \"r\", 32, 217, 0], [1, \"r\", 31, 219, 0], [1, \"r\", 30, 219, 0], [1, \"r\", 29, 219, 0], [1, \"r\", 27, 219, 0], [1, \"r\", 25, 219, 0], [1, \"r\", 26, 219, 0], [1, \"r\", 28, 219, 0], [1, \"r\", 26, 218, 0], [1, \"r\", 27, 218, 0], [1, \"r\", 28, 218, 0], [1, \"r\", 29, 218, 0], [1, \"r\", 30, 218, 0], [1, \"r\", 28, 217, 0], [1, \"r\", 26, 217, 0], [1, \"r\", 27, 217, 0], [1, \"r\", 28, 216, 0], [1, \"r\", 29, 216, 0], [1, \"r\", 30, 216, 0], [1, \"r\", 31, 218, 0], [1, \"r\", 32, 218, 0], [1, \"r\", 31, 216, 0], [1, \"r\", 31, 221, 0], [1, \"r\", 31, 220, 0], [1, \"r\", 30, 220, 0], [1, \"r\", 29, 220, 0], [1, \"r\", 28, 220, 0], [1, \"r\", 27, 220, 0], [1, \"r\", 26, 220, 0], [1, \"r\", 25, 218, 0], [1, \"r\", 27, 221, 0], [1, \"r\", 28, 221, 0], [1, \"r\", 29, 221, 0], [1, \"r\", 30, 221, 0], [1, \"r\", 32, 220, 0], [1, \"r\", 32, 219, 0], [1, \"r\", 33, 218, 0], [1, \"r\", 33, 219, 0], [1, \"r\", 75, 238, 0], [1, \"r\", 76, 238, 0], [1, \"r\", 77, 239, 0], [1, \"r\", 76, 239, 0], [1, \"r\", 75, 239, 0], [1, \"r\", 74, 239, 0], [1, \"r\", 76, 240, 0], [1, \"r\", 77, 240, 0], [1, \"r\", 78, 240, 0], [1, \"r\", 77, 241, 0], [1, \"r\", 76, 241, 0], [1, \"r\", 75, 241, 0], [1, \"r\", 75, 240, 0], [1, \"r\", 74, 240, 0], [1, \"r\", 78, 239, 0], [1, \"r\", 77, 238, 0], [1, \"r\", 18, 253, 0], [1, \"r\", 19, 252, 0], [1, \"r\", 20, 252, 0], [1, \"r\", 21, 253, 0], [1, \"r\", 23, 254, 0], [1, \"r\", 20, 254, 0], [1, \"r\", 19, 254, 0], [1, \"r\", 22, 254, 0], [1, \"r\", 18, 254, 0], [1, \"r\", 19, 253, 0], [1, \"r\", 20, 253, 0], [1, \"r\", 21, 254, 0], [1, \"r\", 22, 253, 0], [1, \"r\", 21, 255, 0], [1, \"r\", 20, 255, 0], [1, \"r\", 19, 255, 0], [1, \"r\", 18, 255, 0], [1, \"r\", 17, 255, 0], [1, \"r\", 17, 254, 0], [1, \"r\", 22, 255, 0], [1, \"r\", 19, 256, 0], [1, \"r\", 20, 256, 0], [1, \"r\", 21, 256, 0], [1, \"r\", 39, 270, 0], [1, \"r\", 40, 270, 0], [1, \"r\", 41, 270, 0], [1, \"r\", 43, 270, 0], [1, \"r\", 44, 270, 0], [1, \"r\", 46, 270, 0], [1, \"r\", 42, 270, 0], [1, \"r\", 45, 270, 0], [1, \"r\", 44, 269, 0], [1, \"r\", 43, 269, 0], [1, \"r\", 42, 269, 0], [1, \"r\", 40, 269, 0], [1, \"r\", 41, 269, 0], [1, \"r\", 45, 271, 0], [1, \"r\", 44, 271, 0], [1, \"r\", 43, 271, 0], [1, \"r\", 42, 271, 0], [1, \"r\", 41, 271, 0], [1, \"r\", 40, 271, 0], [1, \"r\", 39, 271, 0], [1, \"r\", 46, 271, 0], [1, \"r\", 45, 272, 0], [1, \"r\", 44, 272, 0], [1, \"r\", 43, 272, 0], [1, \"r\", 42, 272, 0], [1, \"r\", 19, 284, 0], [1, \"r\", 20, 284, 0], [1, \"r\", 21, 285, 0], [1, \"r\", 22, 285, 0], [1, \"r\", 23, 286, 0], [1, \"r\", 22, 288, 0], [1, \"r\", 20, 288, 0], [1, \"r\", 18, 288, 0], [1, \"r\", 17, 287, 0], [1, \"r\", 16, 287, 0], [1, \"r\", 16, 286, 0], [1, \"r\", 17, 286, 0], [1, \"r\", 18, 286, 0], [1, \"r\", 19, 286, 0], [1, \"r\", 20, 286, 0], [1, \"r\", 21, 286, 0], [1, \"r\", 22, 286, 0], [1, \"r\", 20, 285, 0], [1, \"r\", 19, 285, 0], [1, \"r\", 18, 285, 0], [1, \"r\", 17, 285, 0], [1, \"r\", 19, 287, 0], [1, \"r\", 18, 287, 0], [1, \"r\", 20, 287, 0], [1, \"r\", 21, 287, 0], [1, \"r\", 22, 287, 0], [1, \"r\", 23, 287, 0], [1, \"r\", 21, 288, 0], [1, \"r\", 19, 288, 0], [1, \"r\", 17, 288, 0], [1, \"r\", 19, 289, 0], [1, \"r\", 21, 289, 0], [1, \"r\", 22, 289, 0], [1, \"r\", 20, 289, 0], [1, \"r\", 23, 288, 0], [1, \"r\", 24, 287, 0], [1, \"r\", 24, 286, 0], [1, \"r\", 23, 285, 0], [1, \"r\", 66, 286, 0], [1, \"r\", 64, 287, 0], [1, \"r\", 63, 287, 0], [1, \"r\", 60, 287, 0], [1, \"r\", 59, 285, 0], [1, \"r\", 58, 284, 0], [1, \"r\", 59, 283, 0], [1, \"r\", 65, 283, 0], [1, \"r\", 64, 283, 0], [1, \"r\", 63, 283, 0], [1, \"r\", 62, 283, 0], [1, \"r\", 61, 283, 0], [1, \"r\", 60, 283, 0], [1, \"r\", 59, 284, 0], [1, \"r\", 58, 285, 0], [1, \"r\", 60, 286, 0], [1, \"r\", 59, 286, 0], [1, \"r\", 61, 287, 0], [1, \"r\", 62, 287, 0], [1, \"r\", 61, 286, 0], [1, \"r\", 62, 286, 0], [1, \"r\", 63, 286, 0], [1, \"r\", 64, 286, 0], [1, \"r\", 65, 286, 0], [1, \"r\", 67, 285, 0], [1, \"r\", 66, 285, 0], [1, \"r\", 65, 285, 0], [1, \"r\", 64, 285, 0], [1, \"r\", 63, 285, 0], [1, \"r\", 62, 285, 0], [1, \"r\", 61, 285, 0], [1, \"r\", 60, 285, 0], [1, \"r\", 60, 284, 0], [1, \"r\", 61, 284, 0], [1, \"r\", 62, 284, 0], [1, \"r\", 63, 284, 0], [1, \"r\", 64, 284, 0], [1, \"r\", 65, 284, 0], [1, \"r\", 66, 284, 0], [1, \"r\", 65, 287, 0], [1, \"r\", 67, 286, 0], [1, \"p\", 0, 13, 189, 1], [1, \"p\", 0, 32, 184, 1], [1, \"p\", 0, 47, 191, 1], [1, \"p\", 0, 64, 184, 1], [1, \"p\", 0, 84, 192, 1], [1, \"p\", 0, 78, 207, 1], [1, \"p\", 0, 58, 216, 1], [1, \"p\", 0, 41, 211, 1], [1, \"p\", 0, 18, 211, 1], [1, \"p\", 0, 14, 230, 1], [1, \"p\", 0, 29, 237, 1], [1, \"p\", 0, 50, 230, 1], [1, \"p\", 0, 78, 241, 1], [1, \"p\", 0, 74, 256, 1], [1, \"p\", 0, 68, 266, 1], [1, \"p\", 0, 48, 259, 1], [1, \"p\", 0, 31, 263, 1], [1, \"p\", 0, 18, 274, 1], [1, \"p\", 0, 33, 283, 1], [1, \"p\", 0, 66, 287, 1], [1, \"p\", 0, 82, 291, 1], [1, \"p\", 0, 16, 295, 1], [1, \"p\", 0, 45, 294, 1], [1, \"p\", 0, 18, 252, 1], [1, \"p\", 0, 79, 227, 1], [1, \"p\", 0, 32, 200, 1], [1, \"p\", 0, 64, 200, 1], [1, \"s\", 0, 21, 193, 1], [1, \"s\", 1, 18, 189, 1], [1, \"s\", 2, 26, 189, 1], [1, \"b\", 1, 15, 181, 0], [1, \"b\", 2, 18, 190, 0], [1, \"b\", 2, 29, 193, 0], [1, \"t\", 3, 16, 182, 0], [1, \"t\", 3, 13, 195, 0], [1, \"t\", 4, 16, 183, 0], [1, \"t\", 5, 10, 184, 0], [1, \"t\", 5, 23, 182, 0], [1, \"t\", 4, 30, 187, 0], [1, \"t\", 1, 26, 192, 0], [1, \"b\", 1, 25, 188, 0], [1, \"s\", 1, 24, 181, 1], [1, \"t\", 3, 33, 183, 0], [1, \"b\", 1, 36, 189, 0], [1, \"t\", 2, 35, 190, 0], [1, \"b\", 3, 19, 200, 0], [1, \"s\", 0, 28, 194, 1], [1, \"s\", 1, 32, 196, 1], [1, \"s\", 1, 36, 183, 1], [1, \"s\", 2, 38, 184, 1], [1, \"s\", 2, 10, 192, 1], [1, \"s\", 2, 12, 183, 1], [1, \"s\", 1, 15, 199, 1], [1, \"b\", 0, 12, 202, 0], [1, \"t\", 2, 13, 203, 0], [1, \"t\", 4, 20, 200, 0], [1, \"t\", 4, 12, 194, 0], [1, \"t\", 5, 15, 205, 0], [1, \"t\", 5, 29, 200, 0], [1, \"t\", 3, 28, 201, 0], [1, \"s\", 2, 25, 199, 1], [1, \"s\", 1, 22, 204, 1], [1, \"g\", 2, 25, 205, 1], [1, \"b\", 1, 27, 216, 0], [1, \"s\", 1, 25, 217, 1], [1, \"s\", 1, 33, 217, 1], [1, \"s\", 2, 35, 215, 1], [1, \"s\", 0, 32, 221, 1], [1, \"t\", 2, 31, 222, 0], [1, \"t\", 4, 26, 221, 0], [1, \"b\", 3, 27, 222, 0], [1, \"b\", 0, 17, 217, 0], [1, \"t\", 3, 18, 216, 0], [1, \"t\", 4, 13, 215, 0], [1, \"t\", 5, 30, 213, 0], [1, \"t\", 5, 24, 208, 0], [1, \"s\", 1, 12, 216, 1], [1, \"s\", 2, 11, 210, 1], [1, \"s\", 2, 34, 223, 1], [1, \"b\", 2, 36, 218, 0], [1, \"t\", 4, 40, 206, 0], [1, \"t\", 5, 35, 203, 0], [1, \"t\", 3, 39, 206, 0], [1, \"b\", 1, 34, 204, 0], [1, \"s\", 1, 33, 206, 1], [1, \"s\", 1, 42, 203, 1], [1, \"s\", 0, 47, 196, 1], [1, \"b\", 2, 40, 196, 0], [1, \"t\", 4, 39, 197, 0], [1, \"t\", 5, 44, 187, 0], [1, \"b\", 1, 46, 181, 0], [1, \"t\", 2, 47, 182, 0], [1, \"b\", 0, 57, 182, 0], [1, \"b\", 3, 56, 183, 0], [1, \"t\", 4, 55, 184, 0], [1, \"t\", 5, 62, 195, 0], [1, \"s\", 1, 51, 185, 1], [1, \"s\", 2, 62, 180, 1], [1, \"s\", 2, 61, 188, 1], [1, \"s\", 1, 61, 189, 1], [1, \"s\", 2, 48, 195, 1], [1, \"b\", 1, 51, 199, 0], [1, \"t\", 2, 52, 199, 0], [1, \"t\", 3, 56, 204, 0], [1, \"t\", 4, 57, 204, 0], [1, \"t\", 4, 51, 204, 0], [1, \"s\", 1, 52, 205, 1], [1, \"s\", 2, 57, 200, 1], [1, \"s\", 1, 56, 199, 1], [1, \"b\", 0, 55, 192, 0], [1, \"t\", 3, 56, 193, 0], [1, \"t\", 4, 50, 190, 0], [1, \"b\", 1, 76, 188, 0], [1, \"t\", 2, 75, 188, 0], [1, \"t\", 2, 73, 192, 0], [1, \"t\", 4, 72, 191, 0], [1, \"t\", 5, 78, 193, 0], [1, \"b\", 0, 79, 192, 0], [1, \"s\", 2, 79, 190, 1], [1, \"s\", 1, 74, 194, 1], [1, \"s\", 1, 72, 187, 1], [1, \"s\", 0, 74, 183, 1], [1, \"s\", 1, 75, 183, 1], [1, \"t\", 2, 69, 181, 0], [1, \"t\", 4, 70, 182, 0], [1, \"t\", 5, 69, 180, 0], [1, \"b\", 1, 65, 189, 0], [1, \"b\", 2, 66, 189, 0], [1, \"t\", 3, 64, 188, 0], [1, \"t\", 4, 67, 192, 0], [1, \"b\", 2, 85, 183, 0], [1, \"t\", 1, 84, 184, 0], [1, \"t\", 4, 81, 180, 0], [1, \"t\", 5, 89, 180, 0], [1, \"t\", 0, 90, 188, 0], [1, \"t\", 3, 89, 190, 0], [1, \"s\", 1, 87, 187, 1], [1, \"s\", 2, 87, 197, 1], [1, \"b\", 1, 84, 200, 0], [1, \"t\", 2, 83, 201, 0], [1, \"t\", 4, 87, 207, 0], [1, \"s\", 2, 79, 202, 1], [1, \"s\", 1, 80, 203, 1], [1, \"t\", 0, 71, 200, 0], [1, \"b\", 2, 72, 201, 0], [1, \"t\", 2, 65, 205, 0], [1, \"t\", 1, 66, 206, 0], [1, \"t\", 4, 63, 209, 0], [1, \"t\", 5, 73, 203, 0], [1, \"s\", 0, 70, 207, 1], [1, \"s\", 1, 71, 206, 1], [1, \"s\", 2, 68, 199, 1], [1, \"s\", 1, 64, 213, 1], [1, \"t\", 0, 85, 213, 0], [1, \"b\", 2, 84, 212, 0], [1, \"t\", 3, 77, 209, 0], [1, \"t\", 4, 83, 216, 0], [1, \"t\", 4, 73, 209, 0], [1, \"b\", 0, 86, 222, 0], [1, \"b\", 3, 87, 221, 0], [1, \"s\", 1, 80, 214, 1], [1, \"s\", 2, 87, 216, 1], [1, \"s\", 2, 84, 224, 1], [1, \"s\", 1, 77, 227, 1], [1, \"t\", 1, 74, 222, 0], [1, \"b\", 1, 69, 218, 0], [1, \"b\", 2, 75, 219, 0], [1, \"s\", 2, 74, 218, 1], [1, \"s\", 1, 69, 223, 1], [1, \"s\", 1, 77, 221, 1], [1, \"b\", 1, 72, 211, 0], [1, \"b\", 1, 85, 232, 0], [1, \"t\", 2, 84, 233, 0], [1, \"t\", 2, 78, 238, 0], [1, \"b\", 1, 77, 237, 0], [1, \"t\", 5, 87, 236, 0], [1, \"t\", 5, 76, 229, 0], [1, \"b\", 2, 74, 241, 0], [1, \"s\", 0, 73, 242, 1], [1, \"s\", 0, 81, 238, 1], [1, \"s\", 1, 82, 237, 1], [1, \"s\", 2, 72, 237, 1], [1, \"s\", 2, 78, 242, 1], [1, \"b\", 1, 66, 230, 0], [1, \"b\", 2, 62, 229, 0], [1, \"t\", 4, 67, 231, 0], [1, \"t\", 4, 62, 228, 0], [1, \"t\", 5, 64, 233, 0], [1, \"t\", 2, 65, 234, 0], [1, \"t\", 2, 51, 220, 0], [1, \"t\", 1, 50, 218, 0], [1, \"b\", 1, 45, 223, 0], [1, \"b\", 2, 46, 224, 0], [1, \"t\", 4, 49, 218, 0], [1, \"t\", 4, 47, 225, 0], [1, \"s\", 1, 50, 215, 1], [1, \"s\", 2, 51, 213, 1], [1, \"s\", 2, 42, 227, 1], [1, \"s\", 1, 44, 227, 1], [1, \"s\", 1, 60, 230, 1], [1, \"s\", 2, 59, 231, 1], [1, \"b\", 1, 85, 252, 0], [1, \"t\", 2, 84, 251, 0], [1, \"t\", 2, 74, 250, 0], [1, \"t\", 0, 75, 251, 0], [1, \"b\", 0, 83, 246, 0], [1, \"t\", 3, 82, 247, 0], [1, \"t\", 4, 81, 259, 0], [1, \"t\", 4, 69, 249, 0], [1, \"t\", 5, 87, 246, 0], [1, \"t\", 5, 75, 252, 0], [1, \"s\", 1, 79, 257, 1], [1, \"s\", 2, 78, 249, 1], [1, \"s\", 2, 80, 258, 1], [1, \"s\", 1, 88, 254, 1], [1, \"s\", 1, 85, 264, 1], [1, \"s\", 2, 89, 263, 1], [1, \"s\", 2, 87, 269, 1], [1, \"s\", 0, 84, 268, 1], [1, \"s\", 2, 76, 267, 1], [1, \"s\", 1, 66, 261, 1], [1, \"s\", 1, 87, 274, 1], [1, \"s\", 1, 76, 263, 1], [1, \"s\", 1, 59, 251, 1], [1, \"s\", 0, 59, 252, 1], [1, \"t\", 2, 86, 265, 0], [1, \"t\", 0, 78, 270, 0], [1, \"t\", 2, 79, 271, 0], [1, \"t\", 0, 77, 260, 0], [1, \"t\", 3, 78, 261, 0], [1, \"b\", 1, 71, 264, 0], [1, \"b\", 1, 88, 269, 0], [1, \"t\", 5, 84, 264, 0], [1, \"t\", 5, 79, 261, 0], [1, \"t\", 5, 72, 265, 0], [1, \"t\", 5, 77, 270, 0], [1, \"t\", 0, 87, 261, 0], [1, \"t\", 2, 86, 260, 0], [1, \"t\", 4, 84, 255, 0], [1, \"t\", 4, 68, 255, 0], [1, \"t\", 1, 67, 254, 0], [1, \"t\", 2, 65, 262, 0], [1, \"t\", 1, 57, 260, 0], [1, \"t\", 2, 58, 259, 0], [1, \"b\", 1, 63, 256, 0], [1, \"b\", 1, 52, 248, 0], [1, \"t\", 2, 53, 248, 0], [1, \"s\", 1, 50, 253, 1], [1, \"s\", 2, 67, 263, 1], [1, \"s\", 2, 52, 252, 1], [1, \"s\", 2, 71, 244, 1], [1, \"b\", 0, 57, 245, 0], [1, \"t\", 2, 58, 244, 0], [1, \"b\", 1, 53, 237, 0], [1, \"t\", 2, 54, 237, 0], [1, \"t\", 2, 41, 238, 0], [1, \"t\", 1, 42, 237, 0], [1, \"t\", 5, 57, 235, 0], [1, \"t\", 5, 60, 246, 0], [1, \"t\", 5, 50, 252, 0], [1, \"t\", 1, 42, 248, 0], [1, \"b\", 1, 43, 249, 0], [1, \"b\", 3, 37, 243, 0], [1, \"s\", 0, 50, 236, 1], [1, \"s\", 2, 39, 247, 1], [1, \"s\", 2, 51, 235, 1], [1, \"s\", 2, 60, 243, 1], [1, \"s\", 2, 36, 240, 1], [1, \"s\", 2, 43, 254, 1], [1, \"s\", 1, 42, 254, 1], [1, \"t\", 1, 38, 233, 0], [1, \"t\", 2, 35, 235, 0], [1, \"t\", 4, 33, 228, 0], [1, \"t\", 4, 33, 245, 0], [1, \"t\", 4, 43, 235, 0], [1, \"t\", 5, 45, 249, 0], [1, \"t\", 5, 41, 253, 0], [1, \"b\", 1, 20, 227, 0], [1, \"b\", 1, 14, 240, 0], [1, \"t\", 3, 21, 227, 0], [1, \"t\", 3, 27, 234, 0], [1, \"t\", 3, 15, 241, 0], [1, \"t\", 3, 12, 229, 0], [1, \"t\", 4, 17, 224, 0], [1, \"t\", 4, 11, 231, 0], [1, \"t\", 4, 22, 238, 0], [1, \"t\", 4, 11, 239, 0], [1, \"t\", 1, 22, 243, 0], [1, \"b\", 2, 23, 242, 0], [1, \"s\", 1, 23, 238, 1], [1, \"s\", 1, 22, 228, 1], [1, \"s\", 2, 24, 228, 1], [1, \"s\", 2, 21, 236, 1], [1, \"s\", 0, 13, 228, 1], [1, \"s\", 0, 16, 242, 1], [1, \"s\", 1, 15, 244, 1], [1, \"s\", 1, 34, 236, 1], [1, \"t\", 1, 26, 249, 0], [1, \"t\", 1, 22, 256, 0], [1, \"t\", 2, 23, 255, 0], [1, \"b\", 1, 17, 256, 0], [1, \"b\", 2, 18, 256, 0], [1, \"s\", 0, 21, 252, 1], [1, \"s\", 2, 20, 250, 1], [1, \"s\", 2, 23, 259, 1], [1, \"s\", 1, 13, 257, 1], [1, \"t\", 1, 31, 254, 0], [1, \"t\", 2, 32, 254, 0], [1, \"t\", 4, 28, 254, 0], [1, \"t\", 4, 34, 258, 0], [1, \"t\", 0, 29, 260, 0], [1, \"b\", 2, 30, 261, 0], [1, \"t\", 0, 43, 262, 0], [1, \"t\", 2, 42, 263, 0], [1, \"t\", 4, 46, 264, 0], [1, \"b\", 1, 39, 265, 0], [1, \"b\", 1, 58, 267, 0], [1, \"t\", 2, 57, 268, 0], [1, \"t\", 4, 62, 270, 0], [1, \"t\", 5, 52, 273, 0], [1, \"s\", 1, 52, 269, 1], [1, \"s\", 1, 41, 272, 1], [1, \"s\", 2, 41, 274, 1], [1, \"t\", 2, 42, 268, 0], [1, \"t\", 0, 43, 268, 0], [1, \"b\", 1, 46, 272, 0], [1, \"b\", 1, 14, 265, 0], [1, \"t\", 2, 15, 266, 0], [1, \"t\", 4, 19, 264, 0], [1, \"t\", 4, 29, 263, 0], [1, \"t\", 4, 11, 269, 0], [1, \"t\", 1, 29, 271, 0], [1, \"b\", 2, 28, 272, 0], [1, \"t\", 2, 24, 267, 0], [1, \"t\", 2, 20, 279, 0], [1, \"t\", 0, 19, 278, 0], [1, \"t\", 3, 13, 278, 0], [1, \"b\", 0, 21, 284, 0], [1, \"b\", 0, 18, 289, 0], [1, \"t\", 2, 20, 283, 0], [1, \"t\", 2, 19, 290, 0], [1, \"t\", 4, 19, 283, 0], [1, \"t\", 4, 20, 290, 0], [1, \"s\", 1, 16, 285, 1], [1, \"s\", 1, 24, 288, 1], [1, \"s\", 2, 26, 287, 1], [1, \"s\", 2, 16, 278, 1], [1, \"s\", 1, 21, 268, 1], [1, \"s\", 2, 19, 268, 1], [1, \"t\", 0, 12, 294, 0], [1, \"b\", 1, 13, 295, 0], [1, \"t\", 3, 13, 291, 0], [1, \"t\", 3, 10, 299, 0], [1, \"t\", 4, 11, 287, 0], [1, \"t\", 4, 17, 298, 0], [1, \"t\", 1, 27, 294, 0], [1, \"b\", 2, 26, 295, 0], [1, \"t\", 3, 33, 297, 0], [1, \"b\", 1, 48, 278, 0], [1, \"b\", 0, 46, 280, 0], [1, \"b\", 2, 50, 280, 0], [1, \"t\", 0, 44, 282, 0], [1, \"b\", 1, 49, 283, 0], [1, \"b\", 0, 51, 278, 0], [1, \"b\", 3, 50, 279, 0], [1, \"b\", 3, 44, 284, 0], [1, \"b\", 0, 47, 284, 0], [1, \"b\", 2, 42, 283, 0], [1, \"t\", 4, 51, 277, 0], [1, \"b\", 1, 44, 286, 0], [1, \"b\", 2, 46, 286, 0], [1, \"b\", 1, 42, 285, 0], [1, \"b\", 3, 41, 286, 0], [1, \"t\", 5, 42, 287, 0], [1, \"b\", 1, 42, 278, 0], [1, \"b\", 2, 43, 279, 0], [1, \"b\", 0, 40, 280, 0], [1, \"t\", 4, 39, 283, 0], [1, \"t\", 4, 39, 279, 0], [1, \"t\", 5, 43, 277, 0], [1, \"t\", 5, 47, 287, 0], [1, \"t\", 4, 46, 277, 0], [1, \"t\", 4, 45, 290, 0], [1, \"t\", 4, 36, 285, 0], [1, \"t\", 3, 35, 284, 0], [1, \"t\", 3, 36, 272, 0], [1, \"t\", 4, 35, 271, 0], [1, \"t\", 1, 29, 279, 0], [1, \"b\", 1, 32, 277, 0], [1, \"t\", 3, 31, 278, 0], [1, \"b\", 2, 28, 280, 0], [1, \"t\", 4, 29, 286, 0], [1, \"t\", 5, 28, 275, 0], [1, \"t\", 3, 37, 292, 0], [1, \"b\", 1, 36, 291, 0], [1, \"b\", 0, 34, 298, 0], [1, \"t\", 4, 31, 292, 0], [1, \"t\", 4, 46, 295, 0], [1, \"t\", 4, 59, 287, 0], [1, \"b\", 1, 58, 286, 0], [1, \"s\", 1, 68, 284, 1], [1, \"s\", 2, 70, 286, 1], [1, \"s\", 0, 67, 284, 1], [1, \"t\", 3, 66, 283, 0], [1, \"t\", 1, 65, 282, 0], [1, \"b\", 1, 64, 288, 0], [1, \"t\", 3, 60, 293, 0], [1, \"t\", 1, 61, 294, 0], [1, \"b\", 1, 76, 294, 0], [1, \"t\", 5, 75, 295, 0], [1, \"t\", 5, 56, 293, 0], [1, \"t\", 5, 59, 281, 0], [1, \"t\", 5, 67, 291, 0], [1, \"b\", 0, 88, 293, 0], [1, \"t\", 2, 89, 292, 0], [1, \"t\", 2, 85, 286, 0], [1, \"t\", 4, 88, 289, 0], [1, \"t\", 4, 79, 287, 0], [1, \"b\", 1, 84, 285, 0], [1, \"t\", 3, 75, 284, 0], [1, \"b\", 0, 75, 278, 0], [1, \"t\", 3, 74, 277, 0], [1, \"t\", 4, 81, 276, 0], [1, \"t\", 2, 65, 276, 0], [1, \"b\", 1, 66, 275, 0], [1, \"g\", 0, 45, 261, 1], [1, \"g\", 1, 39, 258, 1], [1, \"g\", 0, 35, 250, 1], [1, \"g\", 2, 22, 247, 1], [1, \"g\", 2, 27, 227, 1], [1, \"g\", 2, 63, 218, 1], [1, \"g\", 1, 56, 224, 1], [1, \"g\", 0, 46, 231, 1], [1, \"g\", 1, 65, 240, 1], [1, \"g\", 2, 67, 238, 1], [1, \"g\", 2, 79, 232, 1], [1, \"g\", 2, 72, 253, 1], [1, \"g\", 2, 62, 264, 1], [1, \"g\", 2, 28, 267, 1], [1, \"g\", 2, 58, 274, 1], [1, \"de\", 2, 14, 182, 0], [1, \"de\", 2, 24, 182, 0], [1, \"de\", 0, 11, 185, 0], [1, \"de\", 0, 14, 194, 0], [1, \"de\", 1, 25, 196, 0], [1, \"de\", 3, 31, 183, 0], [1, \"de\", 0, 38, 181, 0], [1, \"de\", 2, 45, 186, 0], [1, \"de\", 1, 38, 191, 0], [1, \"de\", 0, 56, 181, 0], [1, \"de\", 1, 68, 182, 0], [1, \"de\", 2, 80, 181, 0], [1, \"de\", 3, 86, 187, 0], [1, \"de\", 0, 84, 193, 0], [1, \"de\", 1, 82, 201, 0], [1, \"de\", 2, 64, 191, 0], [1, \"de\", 2, 72, 200, 0], [1, \"de\", 3, 64, 201, 0], [1, \"de\", 2, 76, 209, 0], [1, \"de\", 3, 71, 212, 0], [1, \"de\", 1, 86, 214, 0], [1, \"de\", 0, 57, 208, 0], [1, \"de\", 0, 41, 203, 0], [1, \"de\", 1, 15, 206, 0], [1, \"de\", 2, 25, 209, 0], [1, \"de\", 3, 16, 218, 0], [1, \"de\", 3, 11, 227, 0], [1, \"de\", 0, 22, 229, 0], [1, \"de\", 1, 15, 239, 0], [1, \"de\", 2, 24, 238, 0], [1, \"de\", 3, 22, 246, 0], [1, \"de\", 3, 10, 253, 0], [1, \"de\", 1, 18, 258, 0], [1, \"de\", 1, 28, 261, 0], [1, \"de\", 1, 14, 267, 0], [1, \"de\", 0, 24, 268, 0], [1, \"de\", 0, 15, 278, 0], [1, \"de\", 2, 21, 279, 0], [1, \"de\", 2, 30, 272, 0], [1, \"de\", 2, 29, 281, 0], [1, \"de\", 2, 15, 284, 0], [1, \"de\", 3, 12, 291, 0], [1, \"de\", 3, 30, 287, 0], [1, \"de\", 3, 27, 293, 0], [1, \"de\", 0, 25, 296, 0], [1, \"de\", 0, 11, 298, 0], [1, \"de\", 0, 8, 286, 0], [1, \"de\", 2, 36, 299, 0], [1, \"de\", 2, 37, 280, 0], [1, \"de\", 3, 38, 291, 0], [1, \"de\", 1, 48, 287, 0], [1, \"de\", 1, 46, 277, 0], [1, \"de\", 1, 53, 278, 0], [1, \"de\", 3, 48, 295, 0], [1, \"de\", 0, 57, 294, 0], [1, \"de\", 1, 65, 290, 0], [1, \"de\", 1, 84, 292, 0], [1, \"de\", 2, 77, 295, 0], [1, \"de\", 2, 84, 287, 0], [1, \"de\", 0, 74, 279, 0], [1, \"de\", 3, 65, 274, 0], [1, \"de\", 2, 71, 267, 0], [1, \"de\", 2, 65, 261, 0], [1, \"de\", 2, 47, 264, 0], [1, \"de\", 3, 47, 258, 0], [1, \"de\", 3, 53, 251, 0], [1, \"de\", 2, 40, 253, 0], [1, \"de\", 0, 35, 244, 0], [1, \"de\", 0, 37, 233, 0], [1, \"de\", 3, 44, 226, 0], [1, \"de\", 2, 37, 219, 0], [1, \"de\", 2, 54, 234, 0], [1, \"de\", 1, 66, 234, 0], [1, \"de\", 2, 65, 241, 0], [1, \"de\", 0, 68, 249, 0], [1, \"de\", 3, 78, 257, 0], [1, \"de\", 2, 86, 253, 0], [1, \"de\", 2, 83, 245, 0], [1, \"de\", 1, 82, 238, 0], [1, \"de\", 3, 76, 235, 0], [1, \"de\", 2, 86, 232, 0], [1, \"de\", 0, 86, 224, 0], [1, \"de\", 2, 76, 226, 0], [1, \"de\", 2, 61, 228, 0], [1, \"de\", 2, 58, 217, 0], [1, \"de\", 0, 49, 217, 0], [1, \"de\", 19, 11, 179, 0], [1, \"de\", 20, 17, 180, 0], [1, \"de\", 22, 18, 181, 0], [1, \"de\", 19, 30, 184, 0], [1, \"de\", 19, 27, 187, 0], [1, \"de\", 19, 30, 195, 0], [1, \"de\", 19, 18, 192, 0], [1, \"de\", 19, 44, 182, 0], [1, \"de\", 19, 49, 182, 0], [1, \"de\", 19, 54, 182, 0], [1, \"de\", 19, 59, 183, 0], [1, \"de\", 19, 56, 186, 0], [1, \"de\", 19, 46, 188, 0], [1, \"de\", 19, 58, 193, 0], [1, \"de\", 19, 67, 187, 0], [1, \"de\", 19, 65, 192, 0], [1, \"de\", 19, 71, 180, 0], [1, \"de\", 19, 78, 187, 0], [1, \"de\", 19, 80, 194, 0], [1, \"de\", 19, 72, 193, 0], [1, \"de\", 19, 82, 182, 0], [1, \"de\", 19, 88, 185, 0], [1, \"de\", 19, 87, 189, 0], [1, \"de\", 19, 86, 197, 0], [1, \"de\", 19, 85, 203, 0], [1, \"de\", 19, 74, 200, 0], [1, \"de\", 19, 70, 202, 0], [1, \"de\", 19, 83, 199, 0], [1, \"de\", 19, 86, 208, 0], [1, \"de\", 19, 84, 214, 0], [1, \"de\", 19, 83, 211, 0], [1, \"de\", 19, 84, 217, 0], [1, \"de\", 19, 77, 210, 0], [1, \"de\", 19, 71, 210, 0], [1, \"de\", 19, 73, 213, 0], [1, \"de\", 19, 66, 207, 0], [1, \"de\", 19, 66, 204, 0], [1, \"de\", 19, 62, 209, 0], [1, \"de\", 19, 63, 201, 0], [1, \"de\", 19, 56, 205, 0], [1, \"de\", 19, 49, 199, 0], [1, \"de\", 19, 50, 205, 0], [1, \"de\", 19, 40, 197, 0], [1, \"de\", 19, 38, 198, 0], [1, \"de\", 19, 40, 208, 0], [1, \"de\", 19, 36, 204, 0], [1, \"de\", 19, 33, 204, 0], [1, \"de\", 19, 29, 202, 0], [1, \"de\", 19, 27, 200, 0], [1, \"de\", 19, 26, 193, 0], [1, \"de\", 19, 18, 201, 0], [1, \"de\", 19, 20, 199, 0], [1, \"de\", 19, 12, 196, 0], [1, \"de\", 19, 12, 204, 0], [1, \"de\", 19, 11, 201, 0], [1, \"de\", 19, 23, 208, 0], [1, \"de\", 19, 31, 214, 0], [1, \"de\", 19, 26, 215, 0], [1, \"de\", 19, 36, 217, 0], [1, \"de\", 19, 32, 223, 0], [1, \"de\", 19, 26, 223, 0], [1, \"de\", 19, 18, 218, 0], [1, \"de\", 19, 15, 215, 0], [1, \"de\", 19, 17, 212, 0], [1, \"de\", 19, 15, 224, 0], [1, \"de\", 19, 19, 229, 0], [1, \"de\", 19, 10, 230, 0], [1, \"de\", 19, 22, 240, 0], [1, \"de\", 19, 13, 238, 0], [1, \"de\", 19, 13, 243, 0], [1, \"de\", 19, 24, 244, 0], [1, \"de\", 19, 24, 250, 0], [1, \"de\", 19, 28, 253, 0], [1, \"de\", 19, 33, 255, 0], [1, \"de\", 19, 34, 260, 0], [1, \"de\", 19, 31, 260, 0], [1, \"de\", 19, 38, 267, 0], [1, \"de\", 19, 44, 264, 0], [1, \"de\", 19, 43, 261, 0], [1, \"de\", 19, 16, 257, 0], [1, \"de\", 19, 22, 258, 0], [1, \"de\", 19, 12, 253, 0], [1, \"de\", 19, 8, 242, 0], [1, \"de\", 19, 8, 255, 0], [1, \"de\", 19, 15, 264, 0], [1, \"de\", 19, 20, 265, 0], [1, \"de\", 19, 12, 271, 0], [1, \"de\", 19, 8, 272, 0], [1, \"de\", 19, 13, 277, 0], [1, \"de\", 19, 21, 277, 0], [1, \"de\", 19, 21, 281, 0], [1, \"de\", 19, 27, 282, 0], [1, \"de\", 19, 29, 278, 0], [1, \"de\", 19, 29, 273, 0], [1, \"de\", 19, 36, 271, 0], [1, \"de\", 19, 8, 278, 0], [1, \"de\", 19, 11, 286, 0], [1, \"de\", 19, 17, 291, 0], [1, \"de\", 19, 14, 294, 0], [1, \"de\", 19, 8, 292, 0], [1, \"de\", 19, 12, 300, 0], [1, \"de\", 19, 18, 298, 0], [1, \"de\", 19, 16, 301, 0], [1, \"de\", 19, 27, 296, 0], [1, \"de\", 19, 25, 292, 0], [1, \"de\", 19, 23, 301, 0], [1, \"de\", 19, 28, 301, 0], [1, \"de\", 19, 35, 297, 0], [1, \"de\", 19, 37, 301, 0], [1, \"de\", 19, 43, 301, 0], [1, \"de\", 19, 46, 294, 0], [1, \"de\", 19, 46, 288, 0], [1, \"de\", 19, 40, 287, 0], [1, \"de\", 19, 50, 301, 0], [1, \"de\", 19, 58, 301, 0], [1, \"de\", 19, 64, 301, 0], [1, \"de\", 19, 71, 301, 0], [1, \"de\", 19, 80, 301, 0], [1, \"de\", 19, 87, 301, 0], [1, \"de\", 19, 86, 294, 0], [1, \"de\", 19, 87, 290, 0], [1, \"de\", 19, 82, 286, 0], [1, \"de\", 19, 75, 285, 0], [1, \"de\", 19, 66, 292, 0], [1, \"de\", 19, 66, 288, 0], [1, \"de\", 19, 58, 288, 0], [1, \"de\", 19, 67, 282, 0], [1, \"de\", 19, 61, 281, 0], [1, \"de\", 19, 60, 295, 0], [1, \"de\", 19, 50, 282, 0], [1, \"de\", 19, 47, 283, 0], [1, \"de\", 19, 48, 281, 0], [1, \"de\", 19, 44, 277, 0], [1, \"de\", 19, 41, 282, 0], [1, \"de\", 19, 38, 281, 0], [1, \"de\", 19, 42, 288, 0], [1, \"de\", 19, 52, 281, 0], [1, \"de\", 19, 50, 275, 0], [1, \"de\", 19, 39, 277, 0], [1, \"de\", 19, 38, 284, 0], [1, \"de\", 19, 51, 285, 0], [1, \"de\", 19, 38, 278, 0], [1, \"de\", 19, 47, 272, 0], [1, \"de\", 19, 44, 267, 0], [1, \"de\", 19, 76, 280, 0], [1, \"de\", 19, 78, 272, 0], [1, \"de\", 19, 68, 275, 0], [1, \"de\", 19, 70, 265, 0], [1, \"de\", 19, 65, 263, 0], [1, \"de\", 19, 64, 262, 0], [1, \"de\", 19, 60, 268, 0], [1, \"de\", 19, 56, 266, 0], [1, \"de\", 19, 55, 260, 0], [1, \"de\", 19, 59, 258, 0], [1, \"de\", 19, 62, 255, 0], [1, \"de\", 19, 67, 253, 0], [1, \"de\", 19, 69, 256, 0], [1, \"de\", 19, 44, 253, 0], [1, \"de\", 19, 44, 250, 0], [1, \"de\", 19, 36, 245, 0], [1, \"de\", 19, 39, 239, 0], [1, \"de\", 19, 42, 234, 0], [1, \"de\", 19, 37, 235, 0], [1, \"de\", 19, 45, 226, 0], [1, \"de\", 19, 46, 222, 0], [1, \"de\", 19, 51, 218, 0], [1, \"de\", 19, 68, 218, 0], [1, \"de\", 19, 74, 224, 0], [1, \"de\", 19, 76, 218, 0], [1, \"de\", 19, 84, 221, 0], [1, \"de\", 19, 88, 223, 0], [1, \"de\", 19, 76, 230, 0], [1, \"de\", 19, 86, 234, 0], [1, \"de\", 19, 79, 237, 0], [1, \"de\", 19, 75, 243, 0], [1, \"de\", 19, 81, 245, 0], [1, \"de\", 19, 83, 247, 0], [1, \"de\", 19, 88, 247, 0], [1, \"de\", 19, 84, 254, 0], [1, \"de\", 19, 86, 251, 0], [1, \"de\", 19, 85, 260, 0], [1, \"de\", 19, 79, 260, 0], [1, \"de\", 19, 76, 251, 0], [1, \"de\", 19, 72, 251, 0], [1, \"de\", 19, 69, 251, 0], [1, \"de\", 19, 87, 266, 0], [1, \"de\", 19, 89, 270, 0], [1, \"de\", 19, 87, 271, 0], [1, \"de\", 19, 82, 277, 0], [1, \"de\", 19, 87, 284, 0], [1, \"de\", 19, 87, 237, 0], [1, \"de\", 19, 88, 179, 0], [1, \"de\", 19, 50, 191, 0], [1, \"de\", 19, 52, 221, 0], [1, \"de\", 19, 34, 234, 0], [1, \"de\", 19, 27, 233, 0], [1, \"de\", 19, 37, 293, 0], [1, \"de\", 29, 13, 181, 0], [1, \"de\", 29, 8, 180, 0], [1, \"de\", 30, 13, 186, 0], [1, \"de\", 31, 24, 183, 0], [1, \"de\", 32, 33, 185, 0], [1, \"de\", 32, 37, 182, 0], [1, \"de\", 29, 45, 183, 0], [1, \"de\", 30, 48, 183, 0], [1, \"de\", 30, 58, 181, 0], [1, \"de\", 30, 66, 188, 0], [1, \"de\", 30, 66, 182, 0], [1, \"de\", 29, 63, 196, 0], [1, \"de\", 29, 54, 194, 0], [1, \"de\", 30, 79, 189, 0], [1, \"de\", 30, 87, 182, 0], [1, \"de\", 30, 83, 185, 0], [1, \"de\", 29, 88, 189, 0], [1, \"de\", 29, 85, 202, 0], [1, \"de\", 31, 82, 203, 0], [1, \"de\", 32, 80, 201, 0], [1, \"de\", 32, 87, 209, 0], [1, \"de\", 32, 83, 214, 0], [1, \"de\", 30, 88, 220, 0], [1, \"de\", 30, 78, 229, 0], [1, \"de\", 30, 73, 223, 0], [1, \"de\", 29, 74, 217, 0], [1, \"de\", 29, 67, 217, 0], [1, \"de\", 30, 72, 208, 0], [1, \"de\", 30, 73, 199, 0], [1, \"de\", 30, 65, 207, 0], [1, \"de\", 29, 63, 210, 0], [1, \"de\", 29, 50, 204, 0], [1, \"de\", 30, 41, 205, 0], [1, \"de\", 29, 35, 205, 0], [1, \"de\", 30, 27, 202, 0], [1, \"de\", 30, 20, 201, 0], [1, \"de\", 29, 10, 203, 0], [1, \"de\", 29, 14, 196, 0], [1, \"de\", 29, 24, 187, 0], [1, \"de\", 29, 28, 223, 0], [1, \"de\", 29, 32, 212, 0], [1, \"de\", 30, 28, 214, 0], [1, \"de\", 31, 24, 218, 0], [1, \"de\", 29, 36, 219, 0], [1, \"de\", 29, 37, 217, 0], [1, \"de\", 29, 52, 217, 0], [1, \"de\", 29, 59, 217, 0], [1, \"de\", 29, 69, 231, 0], [1, \"de\", 29, 64, 242, 0], [1, \"de\", 30, 53, 253, 0], [1, \"de\", 30, 45, 250, 0], [1, \"de\", 30, 58, 261, 0], [1, \"de\", 30, 73, 276, 0], [1, \"de\", 30, 64, 276, 0], [1, \"de\", 30, 82, 285, 0], [1, \"de\", 30, 65, 293, 0], [1, \"de\", 30, 56, 288, 0], [1, \"de\", 30, 45, 296, 0], [1, \"de\", 30, 40, 288, 0], [1, \"de\", 30, 37, 283, 0], [1, \"de\", 30, 53, 280, 0], [1, \"de\", 30, 41, 277, 0], [1, \"de\", 29, 28, 296, 0], [1, \"de\", 29, 18, 292, 0], [1, \"de\", 29, 24, 284, 0], [1, \"de\", 30, 10, 295, 0], [1, \"de\", 30, 10, 286, 0], [1, \"de\", 30, 15, 279, 0], [1, \"de\", 30, 15, 269, 0], [1, \"de\", 30, 21, 259, 0], [1, \"de\", 30, 12, 256, 0], [1, \"de\", 30, 31, 245, 0], [1, \"de\", 30, 12, 240, 0], [1, \"de\", 30, 28, 235, 0], [1, \"de\", 30, 13, 226, 0], [1, \"de\", 30, 39, 231, 0], [1, \"de\", 30, 61, 226, 0], [1, \"r\", 96, 262, 0], [1, \"r\", 97, 262, 0], [1, \"r\", 98, 262, 0], [1, \"r\", 97, 270, 0], [1, \"r\", 97, 271, 0], [1, \"r\", 97, 272, 0], [1, \"r\", 97, 273, 0], [1, \"r\", 97, 274, 0], [1, \"r\", 97, 275, 0], [1, \"r\", 97, 276, 0], [1, \"r\", 97, 277, 0], [1, \"r\", 97, 278, 0], [1, \"r\", 98, 270, 0], [1, \"r\", 98, 271, 0], [1, \"r\", 98, 272, 0], [1, \"r\", 98, 273, 0], [1, \"r\", 98, 274, 0], [1, \"r\", 98, 275, 0], [1, \"r\", 98, 276, 0], [1, \"r\", 98, 277, 0], [1, \"r\", 98, 278, 0], [1, \"r\", 96, 283, 0], [1, \"r\", 97, 283, 0], [1, \"r\", 97, 284, 0], [1, \"r\", 97, 285, 0], [1, \"r\", 98, 283, 0], [1, \"r\", 98, 284, 0], [1, \"r\", 98, 285, 0], [1, \"r\", 96, 270, 0], [1, \"r\", 96, 271, 0], [1, \"r\", 96, 272, 0], [1, \"r\", 96, 273, 0], [1, \"r\", 96, 274, 0], [1, \"r\", 96, 275, 0], [1, \"r\", 96, 276, 0], [1, \"r\", 96, 277, 0], [1, \"r\", 96, 278, 0], [1, \"r\", 44, 248, 0], [1, \"de\", 16, 94, 290, 0], [1, \"de\", 16, 94, 252, 0], [1, \"de\", 16, 94, 228, 0], [1, \"de\", 17, 94, 200, 0], [1, \"r\", 95, 282, 1], [1, \"r\", 95, 281, 1], [1, \"r\", 94, 281, 1], [1, \"r\", 90, 281, 1], [1, \"r\", 91, 282, 1], [1, \"r\", 89, 281, 1], [1, \"r\", 85, 276, 1], [1, \"r\", 85, 277, 1], [1, \"r\", 86, 278, 1], [1, \"p\", 0, 85, 279, 1], [1, \"r\", 86, 279, 1], [1, \"r\", 87, 280, 1], [1, \"r\", 96, 281, 0], [1, \"r\", 97, 281, 0], [1, \"r\", 98, 281, 0], [1, \"r\", 98, 282, 0], [1, \"r\", 97, 282, 0], [1, \"r\", 96, 282, 0], [1, \"r\", 68, 261, 1], [1, \"fo\", 1, 94, 168, 0], [1, \"fo\", 2, 94, 151, 0], [1, \"fo\", 1, 94, 138, 0], [1, \"fo\", 1, 93, 124, 0], [1, \"fo\", 1, 94, 129, 0], [1, \"fo\", 1, 93, 113, 0], [1, \"fo\", 1, 94, 102, 0], [1, \"fo\", 1, 94, 93, 0], [1, \"fo\", 1, 93, 90, 0], [1, \"fo\", 1, 94, 79, 0], [1, \"fo\", 1, 94, 76, 0], [1, \"fo\", 1, 93, 70, 0], [1, \"fo\", 1, 93, 63, 0], [1, \"fo\", 1, 94, 53, 0], [1, \"fo\", 1, 93, 10, 0], [1, \"fo\", 1, 85, 8, 0], [1, \"fo\", 1, 94, 12, 0], [1, \"fo\", 1, 66, 13, 0], [1, \"fo\", 1, 69, 9, 0], [1, \"fo\", 2, 68, 14, 0], [1, \"fo\", 2, 66, 25, 0], [1, \"fo\", 2, 92, 9, 0], [1, \"fo\", 2, 94, 14, 0], [1, \"fo\", 2, 87, 9, 0], [1, \"fo\", 2, 71, 9, 0], [1, \"fo\", 2, 90, 12, 0], [1, \"fo\", 2, 91, 13, 0], [1, \"fo\", 1, 74, 12, 0], [1, \"fo\", 2, 72, 12, 0], [1, \"fo\", 2, 75, 13, 0], [1, \"fo\", 2, 74, 15, 0], [1, \"fo\", 2, 84, 12, 0], [1, \"fo\", 2, 81, 14, 0], [1, \"fo\", 1, 84, 13, 0], [1, \"fo\", 1, 84, 19, 0], [1, \"fo\", 1, 11, 9, 0], [1, \"fo\", 1, 7, 14, 0], [1, \"fo\", 1, 8, 22, 0], [1, \"fo\", 1, 7, 34, 0], [1, \"fo\", 1, 12, 24, 0], [1, \"fo\", 2, 8, 24, 0], [1, \"fo\", 2, 9, 21, 0], [1, \"fo\", 2, 31, 10, 0], [1, \"fo\", 2, 33, 27, 0], [1, \"fo\", 2, 9, 34, 0], [1, \"fo\", 2, 8, 19, 0], [1, \"fo\", 1, 14, 10, 0], [1, \"fo\", 2, 13, 9, 0], [1, \"fo\", 2, 15, 11, 0], [1, \"fo\", 2, 9, 9, 0], [1, \"fo\", 2, 9, 10, 0], [1, \"fo\", 2, 9, 15, 0], [1, \"fo\", 2, 10, 23, 0], [1, \"fo\", 2, 34, 29, 0], [1, \"fo\", 2, 27, 18, 0], [1, \"fo\", 2, 25, 21, 0], [1, \"fo\", 2, 20, 18, 0], [1, \"fo\", 2, 18, 21, 0], [1, \"fo\", 2, 29, 9, 0], [1, \"fo\", 2, 13, 14, 0], [1, \"fo\", 2, 9, 38, 0], [1, \"fo\", 2, 21, 39, 0], [1, \"fo\", 2, 84, 26, 0], [1, \"fo\", 2, 77, 25, 0], [1, \"fo\", 2, 86, 35, 0], [1, \"fo\", 1, 70, 35, 0], [1, \"fo\", 2, 72, 36, 0], [1, \"fo\", 2, 73, 31, 0], [1, \"fo\", 2, 89, 39, 0], [1, \"fo\", 2, 65, 40, 0], [1, \"fo\", 2, 92, 32, 0], [1, \"fo\", 2, 90, 28, 0], [1, \"de\", 22, 25, 266, 0], [1, \"de\", 22, 17, 206, 0], [1, \"de\", 19, 8, 184, 0], [1, \"de\", 19, 22, 183, 0], [1, \"de\", 19, 35, 188, 0], [1, \"de\", 19, 36, 192, 0], [1, \"de\", 19, 50, 277, 0], [1, \"de\", 19, 35, 279, 0], [1, \"t\", 4, 7, 178, 0], [1, \"t\", 1, 7, 179, 0], [1, \"t\", 3, 7, 180, 0], [1, \"t\", 2, 7, 181, 0], [1, \"t\", 5, 7, 182, 0], [1, \"t\", 4, 7, 183, 0], [1, \"t\", 3, 7, 184, 0], [1, \"t\", 4, 7, 185, 0], [1, \"t\", 2, 7, 186, 0], [1, \"t\", 1, 7, 187, 0], [1, \"t\", 4, 7, 188, 0], [1, \"t\", 3, 7, 189, 0], [1, \"t\", 5, 7, 190, 0], [1, \"t\", 1, 7, 191, 0], [1, \"t\", 3, 7, 192, 0], [1, \"t\", 4, 7, 193, 0], [1, \"t\", 3, 7, 194, 0], [1, \"t\", 5, 7, 195, 0], [1, \"t\", 2, 7, 196, 0], [1, \"t\", 4, 7, 197, 0], [1, \"b\", 2, 7, 198, 0], [1, \"t\", 4, 7, 199, 0], [1, \"t\", 2, 7, 200, 0], [1, \"t\", 5, 7, 201, 0], [1, \"t\", 2, 7, 202, 0], [1, \"t\", 4, 7, 203, 0], [1, \"t\", 2, 7, 204, 0], [1, \"t\", 5, 7, 205, 0], [1, \"t\", 2, 7, 206, 0], [1, \"t\", 1, 7, 207, 0], [1, \"t\", 4, 7, 208, 0], [1, \"t\", 3, 7, 209, 0], [1, \"t\", 1, 7, 210, 0], [1, \"b\", 0, 7, 211, 0], [1, \"t\", 3, 7, 212, 0], [1, \"t\", 4, 7, 213, 0], [1, \"t\", 3, 7, 214, 0], [1, \"t\", 5, 7, 215, 0], [1, \"t\", 5, 7, 216, 0], [1, \"t\", 3, 7, 217, 0], [1, \"t\", 1, 7, 218, 0], [1, \"t\", 4, 7, 219, 0], [1, \"b\", 2, 7, 220, 0], [1, \"t\", 1, 7, 221, 0], [1, \"t\", 2, 7, 222, 0], [1, \"t\", 4, 7, 223, 0], [1, \"t\", 3, 7, 224, 0], [1, \"t\", 1, 7, 225, 0], [1, \"t\", 4, 7, 226, 0], [1, \"t\", 2, 7, 227, 0], [1, \"t\", 5, 7, 228, 0], [1, \"t\", 3, 7, 229, 0], [1, \"t\", 1, 7, 230, 0], [1, \"t\", 4, 7, 231, 0], [1, \"b\", 2, 7, 232, 0], [1, \"t\", 5, 7, 233, 0], [1, \"t\", 1, 7, 234, 0], [1, \"t\", 3, 7, 235, 0], [1, \"t\", 4, 7, 236, 0], [1, \"t\", 2, 7, 237, 0], [1, \"t\", 5, 7, 238, 0], [1, \"b\", 3, 7, 239, 0], [1, \"t\", 2, 7, 240, 0], [1, \"t\", 1, 7, 241, 0], [1, \"t\", 2, 7, 242, 0], [1, \"t\", 4, 7, 243, 0], [1, \"t\", 3, 7, 244, 0], [1, \"t\", 4, 7, 245, 0], [1, \"t\", 1, 7, 246, 0], [1, \"b\", 0, 7, 247, 0], [1, \"t\", 3, 7, 248, 0], [1, \"t\", 5, 7, 249, 0], [1, \"t\", 2, 7, 250, 0], [1, \"t\", 1, 7, 251, 0], [1, \"t\", 4, 7, 252, 0], [1, \"t\", 3, 7, 253, 0], [1, \"t\", 5, 7, 254, 0], [1, \"t\", 1, 7, 255, 0], [1, \"t\", 4, 7, 256, 0], [1, \"t\", 1, 7, 257, 0], [1, \"t\", 2, 7, 258, 0], [1, \"t\", 5, 7, 260, 0], [1, \"t\", 3, 7, 259, 0], [1, \"t\", 1, 7, 261, 0], [1, \"t\", 3, 7, 262, 0], [1, \"t\", 4, 7, 263, 0], [1, \"t\", 1, 7, 264, 0], [1, \"t\", 2, 7, 265, 0], [1, \"t\", 5, 7, 266, 0], [1, \"t\", 2, 7, 267, 0], [1, \"t\", 2, 7, 269, 0], [1, \"b\", 2, 7, 268, 0], [1, \"t\", 4, 7, 270, 0], [1, \"t\", 1, 7, 271, 0], [1, \"t\", 5, 7, 272, 0], [1, \"b\", 2, 7, 273, 0], [1, \"t\", 4, 7, 274, 0], [1, \"t\", 2, 7, 275, 0], [1, \"t\", 5, 7, 276, 0], [1, \"t\", 5, 7, 277, 0], [1, \"t\", 2, 7, 278, 0], [1, \"t\", 1, 7, 279, 0], [1, \"t\", 4, 7, 280, 0], [1, \"b\", 1, 7, 281, 0], [1, \"t\", 3, 7, 282, 0], [1, \"t\", 4, 7, 283, 0], [1, \"t\", 1, 7, 284, 0], [1, \"t\", 3, 7, 285, 0], [1, \"t\", 5, 7, 286, 0], [1, \"t\", 4, 7, 288, 0], [1, \"t\", 2, 7, 287, 0], [1, \"b\", 0, 7, 289, 0], [1, \"t\", 4, 7, 290, 0], [1, \"t\", 2, 7, 291, 0], [1, \"t\", 5, 7, 292, 0], [1, \"t\", 3, 7, 293, 0], [1, \"t\", 1, 7, 294, 0], [1, \"t\", 4, 7, 295, 0], [1, \"t\", 3, 7, 296, 0], [1, \"t\", 1, 7, 297, 0], [1, \"t\", 4, 7, 298, 0], [1, \"t\", 2, 7, 299, 0], [1, \"b\", 0, 7, 300, 0], [1, \"t\", 2, 7, 301, 0], [1, \"r\", 196, 271, 0], [1, \"r\", 199, 274, 0], [1, \"r\", 167, 238, 0], [1, \"r\", 171, 240, 0], [1, \"r\", 189, 207, 0], [1, \"r\", 192, 209, 0], [1, \"r\", 198, 271, 0], [1, \"r\", 197, 271, 0], [1, \"r\", 198, 272, 0], [1, \"r\", 197, 272, 0], [1, \"r\", 196, 272, 0], [1, \"r\", 195, 272, 0], [1, \"r\", 199, 272, 0], [1, \"r\", 199, 273, 0], [1, \"r\", 198, 273, 0], [1, \"r\", 197, 273, 0], [1, \"r\", 196, 273, 0], [1, \"r\", 198, 274, 0], [1, \"r\", 197, 274, 0], [1, \"r\", 195, 273, 0], [1, \"r\", 196, 274, 0], [1, \"r\", 198, 275, 0], [1, \"r\", 197, 275, 0], [1, \"r\", 200, 274, 0], [1, \"r\", 200, 273, 0], [1, \"r\", 199, 275, 0], [1, \"plm\", 2, 200, 272, 0], [1, \"plm\", 1, 195, 271, 0], [1, \"plm\", 0, 199, 268, 0], [1, \"plm\", 0, 193, 277, 0], [1, \"plm\", 1, 199, 276, 0], [1, \"s\", 1, 200, 275, 1], [1, \"s\", 1, 194, 272, 1], [1, \"s\", 2, 193, 270, 1], [1, \"g\", 2, 193, 273, 1], [1, \"g\", 2, 201, 267, 1], [1, \"m\", 2, 220, 298, 1], [1, \"m\", 1, 219, 292, 1], [1, \"m\", 1, 214, 297, 1], [1, \"r\", 168, 238, 0], [1, \"r\", 169, 238, 0], [1, \"r\", 170, 238, 0], [1, \"r\", 171, 239, 0], [1, \"r\", 170, 239, 0], [1, \"r\", 169, 239, 0], [1, \"r\", 168, 239, 0], [1, \"r\", 167, 239, 0], [1, \"r\", 166, 239, 0], [1, \"r\", 166, 240, 0], [1, \"r\", 167, 240, 0], [1, \"r\", 168, 240, 0], [1, \"r\", 169, 240, 0], [1, \"r\", 170, 240, 0], [1, \"r\", 168, 241, 0], [1, \"r\", 169, 241, 0], [1, \"r\", 170, 241, 0], [1, \"r\", 171, 241, 0], [1, \"plm\", 2, 171, 238, 0], [1, \"plm\", 1, 166, 238, 0], [1, \"plm\", 0, 167, 237, 0], [1, \"plm\", 0, 171, 242, 0], [1, \"plm\", 0, 165, 243, 0], [1, \"plm\", 0, 171, 235, 0], [1, \"plm\", 0, 174, 241, 0], [1, \"s\", 1, 165, 239, 1], [1, \"s\", 1, 172, 241, 1], [1, \"s\", 0, 170, 237, 1], [1, \"s\", 1, 171, 237, 1], [1, \"s\", 2, 174, 236, 1], [1, \"s\", 2, 162, 241, 1], [1, \"s\", 2, 170, 246, 1], [1, \"s\", 2, 167, 235, 1], [1, \"s\", 2, 176, 243, 1], [1, \"r\", 190, 207, 0], [1, \"r\", 191, 207, 0], [1, \"r\", 192, 208, 0], [1, \"r\", 191, 208, 0], [1, \"r\", 190, 208, 0], [1, \"r\", 189, 208, 0], [1, \"r\", 188, 208, 0], [1, \"r\", 189, 209, 0], [1, \"r\", 190, 209, 0], [1, \"r\", 191, 209, 0], [1, \"r\", 188, 209, 0], [1, \"r\", 190, 210, 0], [1, \"r\", 191, 210, 0], [1, \"r\", 192, 210, 0], [1, \"plm\", 2, 189, 210, 0], [1, \"plm\", 2, 192, 205, 0], [1, \"plm\", 1, 192, 207, 0], [1, \"plm\", 0, 193, 210, 0], [1, \"plm\", 0, 187, 208, 0], [1, \"plm\", 0, 197, 206, 0], [1, \"plm\", 0, 191, 213, 0], [1, \"plm\", 0, 190, 204, 0], [1, \"s\", 1, 188, 207, 1], [1, \"s\", 1, 190, 211, 1], [1, \"s\", 2, 188, 213, 1], [1, \"s\", 2, 187, 205, 1], [1, \"s\", 0, 194, 210, 1], [1, \"s\", 0, 198, 207, 1], [1, \"s\", 1, 193, 204, 1], [1, \"s\", 1, 193, 213, 1], [1, \"s\", 2, 198, 212, 1], [1, \"s\", 2, 182, 208, 1], [1, \"s\", 1, 204, 271, 1], [1, \"s\", 0, 203, 272, 1], [1, \"s\", 0, 189, 275, 1], [1, \"s\", 0, 195, 265, 1], [1, \"s\", 2, 196, 264, 1], [1, \"s\", 2, 186, 274, 1], [1, \"s\", 2, 197, 280, 1], [1, \"s\", 0, 217, 282, 1], [1, \"s\", 1, 214, 285, 1], [1, \"s\", 1, 214, 274, 1], [1, \"s\", 1, 203, 282, 1], [1, \"s\", 1, 205, 290, 1], [1, \"s\", 0, 207, 292, 1], [1, \"s\", 0, 197, 297, 1], [1, \"s\", 0, 184, 287, 1], [1, \"s\", 2, 213, 289, 1], [1, \"s\", 2, 196, 294, 1], [1, \"s\", 2, 187, 286, 1], [1, \"s\", 1, 192, 289, 1], [1, \"s\", 1, 189, 299, 1], [1, \"s\", 0, 213, 273, 1], [1, \"g\", 2, 212, 278, 1], [1, \"g\", 1, 200, 288, 1], [1, \"g\", 2, 215, 265, 1], [1, \"g\", 2, 183, 281, 1], [1, \"s\", 0, 178, 295, 1], [1, \"s\", 0, 167, 281, 1], [1, \"s\", 0, 175, 263, 1], [1, \"s\", 1, 176, 293, 1], [1, \"s\", 1, 163, 285, 1], [1, \"s\", 1, 177, 266, 1], [1, \"s\", 1, 161, 272, 1], [1, \"s\", 2, 185, 261, 1], [1, \"c\", 0, 217, 270, 1], [1, \"c\", 0, 220, 278, 1], [1, \"c\", 0, 217, 283, 1], [1, \"c\", 0, 220, 287, 1], [1, \"c\", 0, 210, 292, 1], [1, \"c\", 0, 205, 297, 1], [1, \"c\", 0, 198, 293, 1], [1, \"c\", 0, 208, 283, 1], [1, \"c\", 0, 197, 283, 1], [1, \"c\", 0, 190, 289, 1], [1, \"c\", 0, 183, 296, 1], [1, \"c\", 0, 189, 291, 1], [1, \"c\", 0, 178, 284, 1], [1, \"c\", 0, 208, 265, 1], [1, \"c\", 0, 169, 292, 1], [1, \"s\", 1, 158, 294, 1], [1, \"s\", 0, 151, 297, 1], [1, \"s\", 0, 147, 288, 1], [1, \"c\", 0, 150, 289, 1], [1, \"c\", 0, 160, 282, 1], [1, \"c\", 0, 146, 274, 1], [1, \"c\", 0, 167, 264, 1], [1, \"c\", 0, 165, 267, 1], [1, \"g\", 0, 189, 257, 1], [1, \"g\", 1, 197, 248, 1], [1, \"g\", 2, 170, 255, 1], [1, \"g\", 2, 212, 234, 1], [1, \"g\", 2, 189, 230, 1], [1, \"g\", 2, 173, 221, 1], [1, \"g\", 1, 210, 214, 1], [1, \"s\", 1, 153, 257, 1], [1, \"s\", 0, 158, 255, 1], [1, \"s\", 0, 184, 248, 1], [1, \"s\", 0, 212, 254, 1], [1, \"s\", 1, 203, 249, 1], [1, \"s\", 2, 204, 252, 1], [1, \"s\", 2, 187, 248, 1], [1, \"s\", 0, 206, 237, 1], [1, \"s\", 0, 196, 227, 1], [1, \"s\", 0, 181, 228, 1], [1, \"s\", 1, 199, 227, 1], [1, \"s\", 1, 208, 238, 1], [1, \"s\", 1, 179, 222, 1], [1, \"s\", 1, 213, 223, 1], [1, \"s\", 2, 182, 222, 1], [1, \"s\", 2, 211, 226, 1], [1, \"s\", 2, 214, 214, 1], [1, \"s\", 2, 201, 216, 1], [1, \"s\", 2, 215, 192, 1], [1, \"s\", 1, 210, 198, 1], [1, \"s\", 1, 198, 196, 1], [1, \"s\", 2, 208, 199, 1], [1, \"s\", 2, 187, 192, 1], [1, \"s\", 1, 179, 198, 1], [1, \"s\", 2, 177, 197, 1], [1, \"s\", 0, 164, 197, 1], [1, \"s\", 1, 159, 193, 1], [1, \"s\", 1, 149, 206, 1], [1, \"s\", 1, 164, 209, 1], [1, \"s\", 2, 165, 210, 1], [1, \"s\", 2, 161, 191, 1], [1, \"s\", 1, 162, 224, 1], [1, \"s\", 0, 150, 236, 1], [1, \"s\", 1, 149, 239, 1], [1, \"s\", 2, 153, 236, 1], [1, \"s\", 2, 160, 223, 1], [1, \"s\", 2, 151, 207, 1], [1, \"s\", 2, 147, 220, 1], [1, \"s\", 2, 145, 265, 1], [1, \"s\", 2, 145, 285, 1], [1, \"c\", 0, 152, 266, 1], [1, \"c\", 0, 185, 271, 1], [1, \"c\", 0, 210, 254, 1], [1, \"c\", 0, 209, 256, 1], [1, \"c\", 0, 198, 254, 1], [1, \"c\", 0, 213, 246, 1], [1, \"c\", 0, 216, 237, 1], [1, \"c\", 0, 204, 240, 1], [1, \"c\", 0, 196, 234, 1], [1, \"c\", 0, 188, 238, 1], [1, \"c\", 0, 182, 245, 1], [1, \"c\", 0, 173, 252, 1], [1, \"c\", 0, 153, 248, 1], [1, \"c\", 0, 158, 233, 1], [1, \"c\", 0, 147, 230, 1], [1, \"c\", 0, 151, 224, 1], [1, \"c\", 0, 157, 214, 1], [1, \"c\", 0, 167, 219, 1], [1, \"c\", 0, 171, 208, 1], [1, \"c\", 0, 179, 219, 1], [1, \"c\", 0, 176, 229, 1], [1, \"c\", 0, 195, 221, 1], [1, \"c\", 0, 207, 222, 1], [1, \"c\", 0, 214, 207, 1], [1, \"c\", 0, 205, 210, 1], [1, \"c\", 0, 204, 196, 1], [1, \"c\", 0, 214, 196, 1], [1, \"c\", 0, 190, 199, 1], [1, \"c\", 0, 184, 194, 1], [1, \"c\", 0, 172, 199, 1], [1, \"c\", 0, 161, 204, 1], [1, \"c\", 0, 157, 196, 1], [1, \"c\", 0, 149, 194, 1], [1, \"c\", 0, 147, 208, 1], [1, \"c\", 0, 207, 274, 1], [1, \"c\", 0, 217, 258, 1], [1, \"c\", 0, 201, 260, 1], [1, \"c\", 0, 178, 276, 1], [1, \"c\", 0, 187, 265, 1], [1, \"s\", 1, 204, 260, 1], [1, \"s\", 1, 216, 260, 1], [1, \"s\", 1, 187, 255, 1], [1, \"s\", 2, 189, 254, 1], [1, \"s\", 2, 212, 257, 1], [1, \"s\", 2, 182, 286, 1], [1, \"s\", 2, 169, 280, 1], [1, \"s\", 2, 217, 273, 1], [1, \"s\", 2, 215, 282, 1], [1, \"s\", 2, 172, 263, 1], [1, \"s\", 2, 176, 267, 1], [1, \"s\", 2, 215, 251, 1], [1, \"fod\", 1, 221, 282, 0], [1, \"fod\", 1, 222, 284, 0], [1, \"fod\", 1, 221, 290, 0], [1, \"fod\", 1, 222, 294, 0], [1, \"fod\", 1, 221, 297, 0], [1, \"fod\", 1, 223, 298, 0], [1, \"fod\", 1, 222, 300, 0], [1, \"fod\", 1, 218, 301, 0], [1, \"fod\", 1, 217, 299, 0], [1, \"fod\", 1, 215, 301, 0], [1, \"fod\", 1, 212, 300, 0], [1, \"fod\", 1, 206, 300, 0], [1, \"fod\", 1, 209, 301, 0], [1, \"fod\", 1, 204, 299, 0], [1, \"fod\", 1, 202, 301, 0], [1, \"fod\", 1, 199, 301, 0], [1, \"fod\", 1, 222, 282, 0], [1, \"fod\", 1, 207, 301, 0], [1, \"fod\", 1, 197, 301, 0], [1, \"fod\", 1, 215, 291, 0], [1, \"fod\", 1, 216, 286, 0], [1, \"fod\", 1, 214, 292, 0], [1, \"fod\", 1, 210, 289, 0], [1, \"fod\", 1, 208, 294, 0], [1, \"fod\", 1, 210, 298, 0], [1, \"fod\", 1, 212, 281, 0], [1, \"fod\", 1, 219, 278, 0], [1, \"fod\", 1, 219, 282, 0], [1, \"fod\", 1, 205, 286, 0], [1, \"fod\", 1, 202, 293, 0], [1, \"fod\", 1, 198, 295, 0], [1, \"fod\", 2, 213, 282, 0], [1, \"fod\", 2, 213, 291, 0], [1, \"fod\", 2, 216, 289, 0], [1, \"fod\", 2, 219, 289, 0], [1, \"fod\", 2, 218, 285, 0], [1, \"fod\", 2, 220, 283, 0], [1, \"fod\", 2, 211, 283, 0], [1, \"fod\", 2, 215, 281, 0], [1, \"fod\", 2, 217, 279, 0], [1, \"fod\", 2, 208, 290, 0], [1, \"fod\", 2, 211, 296, 0], [1, \"fod\", 2, 215, 294, 0], [1, \"fod\", 2, 212, 298, 0], [1, \"fod\", 2, 203, 294, 0], [1, \"fod\", 2, 204, 288, 0], [1, \"fod\", 2, 200, 294, 0], [1, \"fod\", 2, 198, 297, 0], [1, \"fod\", 2, 202, 299, 0], [1, \"fod\", 2, 200, 299, 0], [1, \"fod\", 2, 220, 300, 0], [1, \"fod\", 2, 220, 295, 0], [1, \"fod\", 2, 220, 292, 0], [1, \"fod\", 2, 219, 287, 0], [1, \"fod\", 2, 211, 288, 0], [1, \"fod\", 2, 213, 287, 0], [1, \"fod\", 2, 211, 289, 0], [1, \"fod\", 2, 212, 290, 0], [1, \"fod\", 2, 195, 296, 0], [1, \"fod\", 2, 196, 299, 0], [1, \"fod\", 2, 194, 300, 0], [1, \"fod\", 2, 195, 300, 0], [1, \"fod\", 2, 213, 279, 0], [1, \"fod\", 2, 211, 279, 0], [1, \"fod\", 0, 218, 290, 0], [1, \"fod\", 0, 212, 294, 0], [1, \"fod\", 1, 213, 295, 0], [1, \"fod\", 1, 217, 292, 0], [1, \"fod\", 1, 218, 288, 0], [1, \"fod\", 1, 210, 295, 0], [1, \"fod\", 1, 213, 292, 0], [1, \"fod\", 1, 212, 289, 0], [1, \"fod\", 1, 205, 295, 0], [1, \"fod\", 2, 206, 296, 0], [1, \"fod\", 2, 208, 296, 0], [1, \"fod\", 2, 221, 288, 0], [1, \"fod\", 2, 209, 299, 0], [1, \"fod\", 2, 211, 291, 0], [1, \"fod\", 1, 203, 275, 0], [1, \"fod\", 1, 204, 272, 0], [1, \"fod\", 2, 205, 273, 0], [1, \"fod\", 2, 204, 276, 0], [1, \"fod\", 2, 202, 276, 0], [1, \"fod\", 2, 199, 277, 0], [1, \"fod\", 2, 202, 273, 0], [1, \"fod\", 2, 199, 270, 0], [1, \"fod\", 2, 194, 274, 0], [1, \"fod\", 2, 194, 277, 0], [1, \"fod\", 1, 192, 274, 0], [1, \"fod\", 1, 194, 267, 0], [1, \"fod\", 2, 194, 265, 0], [1, \"fod\", 2, 190, 272, 0], [1, \"fod\", 2, 191, 275, 0], [1, \"fod\", 2, 195, 274, 0], [1, \"fod\", 2, 200, 271, 0], [1, \"fod\", 1, 168, 243, 0], [1, \"fod\", 1, 175, 240, 0], [1, \"fod\", 1, 169, 234, 0], [1, \"fod\", 1, 162, 235, 0], [1, \"fod\", 2, 169, 236, 0], [1, \"fod\", 2, 171, 234, 0], [1, \"fod\", 2, 165, 238, 0], [1, \"fod\", 2, 173, 241, 0], [1, \"fod\", 2, 174, 238, 0], [1, \"fod\", 2, 176, 240, 0], [1, \"fod\", 2, 169, 244, 0], [1, \"fod\", 2, 166, 243, 0], [1, \"fod\", 2, 162, 236, 0], [1, \"fod\", 2, 164, 235, 0], [1, \"fod\", 2, 162, 233, 0], [1, \"fod\", 2, 163, 236, 0], [1, \"fod\", 2, 174, 242, 0], [1, \"fod\", 2, 171, 243, 0], [1, \"fod\", 1, 194, 206, 0], [1, \"fod\", 1, 190, 214, 0], [1, \"fod\", 1, 186, 206, 0], [1, \"fod\", 1, 197, 207, 0], [1, \"fod\", 2, 196, 208, 0], [1, \"fod\", 2, 198, 206, 0], [1, \"fod\", 2, 198, 208, 0], [1, \"fod\", 2, 194, 204, 0], [1, \"fod\", 2, 187, 206, 0], [1, \"fod\", 2, 186, 204, 0], [1, \"fod\", 2, 189, 214, 0], [1, \"fod\", 2, 189, 213, 0], [1, \"fod\", 2, 193, 215, 0], [1, \"fod\", 2, 194, 214, 0], [1, \"fod\", 2, 187, 215, 0], [1, \"fod\", 2, 193, 209, 0], [1, \"fod\", 2, 189, 211, 0], [1, \"fod\", 2, 187, 209, 0], [1, \"fod\", 2, 187, 207, 0], [1, \"fod\", 2, 191, 205, 0], [1, \"fod\", 2, 189, 203, 0], [1, \"cs\", 2, 224, 176, 1], [1, \"cs\", 0, 224, 177, 1], [1, \"cs\", 3, 224, 178, 1], [1, \"cs\", 2, 224, 179, 1], [1, \"cs\", 1, 224, 180, 1], [1, \"cs\", 2, 224, 181, 1], [1, \"cs\", 0, 224, 182, 1], [1, \"cs\", 2, 224, 183, 1], [1, \"cs\", 0, 224, 184, 1], [1, \"cs\", 3, 224, 185, 1], [1, \"cs\", 2, 224, 186, 1], [1, \"cs\", 0, 224, 187, 1], [1, \"cs\", 2, 224, 188, 1], [1, \"cs\", 0, 224, 189, 1], [1, \"cs\", 1, 224, 190, 1], [1, \"cs\", 2, 224, 191, 1], [1, \"cs\", 0, 224, 192, 1], [1, \"cs\", 2, 224, 193, 1], [1, \"cs\", 2, 224, 194, 1], [1, \"cs\", 1, 224, 195, 1], [1, \"cs\", 2, 224, 196, 1], [1, \"cs\", 0, 224, 197, 1], [1, \"cs\", 3, 224, 198, 1], [1, \"cs\", 2, 224, 199, 1], [1, \"cs\", 1, 224, 200, 1], [1, \"cs\", 2, 224, 201, 1], [1, \"cs\", 3, 224, 202, 1], [1, \"cs\", 0, 224, 203, 1], [1, \"cs\", 1, 224, 204, 1], [1, \"cs\", 2, 224, 205, 1], [1, \"cs\", 0, 224, 206, 1], [1, \"cs\", 1, 224, 207, 1], [1, \"cs\", 3, 224, 208, 1], [1, \"cs\", 2, 224, 209, 1], [1, \"cs\", 2, 224, 210, 1], [1, \"cs\", 0, 223, 211, 1], [1, \"cs\", 1, 224, 211, 1], [1, \"cs\", 2, 224, 212, 1], [1, \"cs\", 2, 224, 213, 1], [1, \"cs\", 1, 224, 214, 1], [1, \"cs\", 3, 224, 215, 1], [1, \"cs\", 0, 224, 216, 1], [1, \"cs\", 1, 224, 217, 1], [1, \"cs\", 2, 224, 218, 1], [1, \"cs\", 3, 224, 219, 1], [1, \"cs\", 0, 223, 215, 1], [1, \"cs\", 2, 223, 214, 1], [1, \"cs\", 2, 223, 212, 1], [1, \"cs\", 2, 223, 216, 1], [1, \"cs\", 3, 223, 217, 1], [1, \"cs\", 0, 223, 218, 1], [1, \"cs\", 0, 224, 220, 1], [1, \"cs\", 0, 224, 222, 1], [1, \"cs\", 0, 223, 209, 1], [1, \"cs\", 0, 223, 205, 1], [1, \"cs\", 2, 224, 221, 1], [1, \"cs\", 2, 223, 219, 1], [1, \"cs\", 2, 223, 220, 1], [1, \"cs\", 2, 223, 213, 1], [1, \"cs\", 2, 223, 210, 1], [1, \"cs\", 1, 223, 178, 1], [1, \"cs\", 3, 223, 179, 1], [1, \"cs\", 3, 223, 181, 1], [1, \"cs\", 3, 223, 182, 1], [1, \"cs\", 1, 223, 185, 1], [1, \"cs\", 2, 223, 184, 1], [1, \"cs\", 2, 223, 186, 1], [1, \"cs\", 0, 223, 180, 1], [1, \"cs\", 0, 223, 183, 1], [1, \"cs\", 2, 223, 187, 1], [1, \"cs\", 1, 223, 188, 1], [1, \"cs\", 2, 223, 189, 1], [1, \"cs\", 2, 223, 190, 1], [1, \"cs\", 3, 223, 191, 1], [1, \"cs\", 1, 223, 192, 1], [1, \"cs\", 2, 223, 193, 1], [1, \"cs\", 2, 223, 194, 1], [1, \"cs\", 3, 223, 195, 1], [1, \"cs\", 1, 223, 196, 1], [1, \"cs\", 2, 223, 197, 1], [1, \"cs\", 2, 223, 199, 1], [1, \"cs\", 2, 223, 198, 1], [1, \"cs\", 0, 223, 200, 1], [1, \"cs\", 2, 223, 201, 1], [1, \"cs\", 0, 223, 202, 1], [1, \"cs\", 3, 223, 203, 1], [1, \"cs\", 3, 223, 204, 1], [1, \"cs\", 3, 223, 206, 1], [1, \"cs\", 3, 223, 207, 1], [1, \"cs\", 3, 223, 208, 1], [1, \"cs\", 2, 223, 221, 1], [1, \"cs\", 2, 223, 222, 1], [1, \"cs\", 0, 223, 224, 1], [1, \"cs\", 0, 224, 228, 1], [1, \"cs\", 0, 224, 230, 1], [1, \"cs\", 0, 223, 234, 1], [1, \"cs\", 2, 223, 223, 1], [1, \"cs\", 2, 224, 223, 1], [1, \"cs\", 2, 224, 224, 1], [1, \"cs\", 2, 224, 225, 1], [1, \"cs\", 1, 223, 226, 1], [1, \"cs\", 1, 224, 231, 1], [1, \"cs\", 1, 223, 232, 1], [1, \"cs\", 3, 223, 225, 1], [1, \"cs\", 3, 224, 226, 1], [1, \"cs\", 3, 223, 227, 1], [1, \"cs\", 3, 224, 227, 1], [1, \"cs\", 3, 223, 229, 1], [1, \"cs\", 3, 223, 228, 1], [1, \"cs\", 3, 224, 229, 1], [1, \"cs\", 3, 223, 230, 1], [1, \"cs\", 3, 223, 231, 1], [1, \"cs\", 3, 224, 232, 1], [1, \"cs\", 3, 224, 233, 1], [1, \"cs\", 3, 223, 233, 1], [1, \"cs\", 3, 224, 234, 1], [1, \"cs\", 3, 224, 235, 1], [1, \"cs\", 3, 223, 235, 1], [1, \"cs\", 1, 224, 236, 1], [1, \"cs\", 2, 223, 236, 1], [1, \"cs\", 2, 223, 237, 1], [1, \"cs\", 3, 224, 237, 1], [1, \"cs\", 3, 224, 238, 1], [1, \"cs\", 0, 224, 239, 1], [1, \"cs\", 1, 223, 241, 1], [1, \"cs\", 0, 224, 243, 1], [1, \"cs\", 0, 223, 245, 1], [1, \"cs\", 0, 224, 247, 1], [1, \"cs\", 2, 223, 240, 1], [1, \"cs\", 2, 223, 239, 1], [1, \"cs\", 2, 224, 240, 1], [1, \"cs\", 2, 224, 241, 1], [1, \"cs\", 2, 224, 242, 1], [1, \"cs\", 2, 223, 242, 1], [1, \"cs\", 2, 223, 243, 1], [1, \"cs\", 2, 223, 244, 1], [1, \"cs\", 2, 224, 244, 1], [1, \"cs\", 2, 224, 245, 1], [1, \"cs\", 2, 224, 246, 1], [1, \"cs\", 3, 223, 238, 1], [1, \"cs\", 3, 223, 246, 1], [1, \"cs\", 2, 223, 247, 1], [1, \"cs\", 1, 223, 249, 1], [1, \"cs\", 1, 224, 253, 1], [1, \"cs\", 1, 223, 256, 1], [1, \"cs\", 0, 223, 254, 1], [1, \"cs\", 0, 224, 250, 1], [1, \"cs\", 3, 223, 248, 1], [1, \"cs\", 3, 223, 250, 1], [1, \"cs\", 3, 223, 252, 1], [1, \"cs\", 3, 223, 255, 1], [1, \"cs\", 3, 223, 257, 1], [1, \"cs\", 2, 224, 248, 1], [1, \"cs\", 2, 224, 249, 1], [1, \"cs\", 2, 223, 251, 1], [1, \"cs\", 2, 224, 251, 1], [1, \"cs\", 2, 224, 252, 1], [1, \"cs\", 2, 223, 253, 1], [1, \"cs\", 2, 224, 254, 1], [1, \"cs\", 2, 224, 255, 1], [1, \"cs\", 2, 224, 256, 1], [1, \"cs\", 2, 224, 257, 1], [1, \"cs\", 0, 224, 258, 1], [1, \"cs\", 0, 223, 261, 1], [1, \"cs\", 0, 224, 263, 1], [1, \"cs\", 0, 224, 266, 1], [1, \"cs\", 0, 224, 272, 1], [1, \"cs\", 0, 223, 270, 1], [1, \"cs\", 0, 223, 275, 1], [1, \"cs\", 1, 223, 259, 1], [1, \"cs\", 1, 223, 264, 1], [1, \"cs\", 1, 223, 268, 1], [1, \"cs\", 1, 224, 274, 1], [1, \"cs\", 2, 223, 258, 1], [1, \"cs\", 2, 223, 260, 1], [1, \"cs\", 2, 223, 263, 1], [1, \"cs\", 2, 223, 265, 1], [1, \"cs\", 2, 223, 267, 1], [1, \"cs\", 2, 223, 271, 1], [1, \"cs\", 2, 223, 273, 1], [1, \"cs\", 3, 223, 262, 1], [1, \"cs\", 3, 223, 266, 1], [1, \"cs\", 3, 223, 269, 1], [1, \"cs\", 3, 223, 272, 1], [1, \"cs\", 3, 223, 274, 1], [1, \"cs\", 3, 224, 275, 1], [1, \"cs\", 3, 224, 273, 1], [1, \"cs\", 3, 224, 271, 1], [1, \"cs\", 3, 224, 270, 1], [1, \"cs\", 3, 224, 269, 1], [1, \"cs\", 3, 224, 268, 1], [1, \"cs\", 3, 224, 267, 1], [1, \"cs\", 3, 224, 265, 1], [1, \"cs\", 3, 224, 264, 1], [1, \"cs\", 3, 224, 262, 1], [1, \"cs\", 3, 224, 261, 1], [1, \"cs\", 3, 224, 260, 1], [1, \"cs\", 3, 224, 259, 1], [1, \"cs\", 2, 223, 276, 1], [1, \"cs\", 1, 224, 276, 1], [1, \"cs\", 1, 224, 280, 1], [1, \"cs\", 1, 223, 281, 1], [1, \"cs\", 1, 224, 286, 1], [1, \"cs\", 0, 223, 280, 1], [1, \"cs\", 0, 223, 284, 1], [1, \"cs\", 0, 224, 288, 1], [1, \"cs\", 0, 224, 279, 1], [1, \"cs\", 2, 223, 277, 1], [1, \"cs\", 2, 224, 277, 1], [1, \"cs\", 2, 224, 278, 1], [1, \"cs\", 2, 224, 281, 1], [1, \"cs\", 2, 224, 283, 1], [1, \"cs\", 2, 224, 282, 1], [1, \"cs\", 2, 224, 284, 1], [1, \"cs\", 2, 224, 285, 1], [1, \"cs\", 2, 224, 287, 1], [1, \"cs\", 2, 223, 287, 1], [1, \"cs\", 2, 223, 285, 1], [1, \"cs\", 2, 223, 283, 1], [1, \"cs\", 2, 223, 279, 1], [1, \"cs\", 3, 223, 278, 1], [1, \"cs\", 3, 223, 282, 1], [1, \"cs\", 3, 223, 286, 1], [1, \"cs\", 3, 223, 289, 1], [1, \"cs\", 3, 224, 289, 1], [1, \"cs\", 2, 223, 288, 1], [1, \"cs\", 2, 224, 290, 1], [1, \"cs\", 1, 223, 290, 1], [1, \"cs\", 0, 224, 292, 1], [1, \"cs\", 0, 223, 294, 1], [1, \"cs\", 0, 224, 297, 1], [1, \"cs\", 0, 223, 299, 1], [1, \"cs\", 2, 223, 291, 1], [1, \"cs\", 2, 224, 291, 1], [1, \"cs\", 2, 223, 292, 1], [1, \"cs\", 2, 223, 293, 1], [1, \"cs\", 2, 224, 293, 1], [1, \"cs\", 2, 224, 294, 1], [1, \"cs\", 1, 224, 295, 1], [1, \"cs\", 2, 223, 295, 1], [1, \"cs\", 2, 223, 296, 1], [1, \"cs\", 2, 224, 296, 1], [1, \"cs\", 2, 223, 297, 1], [1, \"cs\", 2, 223, 298, 1], [1, \"cs\", 2, 224, 298, 1], [1, \"cs\", 2, 224, 299, 1], [1, \"cs\", 2, 223, 300, 1], [1, \"cs\", 1, 224, 300, 1], [1, \"cs\", 0, 223, 301, 1], [1, \"cs\", 0, 224, 302, 1], [1, \"cs\", 0, 224, 304, 1], [1, \"cs\", 3, 224, 301, 1], [1, \"cs\", 3, 224, 303, 1], [1, \"cs\", 0, 221, 303, 1], [1, \"cs\", 0, 219, 304, 1], [1, \"cs\", 1, 222, 304, 1], [1, \"cs\", 1, 222, 302, 1], [1, \"cs\", 2, 223, 302, 1], [1, \"cs\", 2, 223, 303, 1], [1, \"cs\", 2, 222, 303, 1], [1, \"cs\", 2, 223, 304, 1], [1, \"cs\", 2, 221, 304, 1], [1, \"cs\", 2, 220, 304, 1], [1, \"cs\", 2, 220, 303, 1], [1, \"cs\", 2, 220, 302, 1], [1, \"cs\", 2, 221, 302, 1], [1, \"cs\", 2, 219, 303, 1], [1, \"cs\", 0, 217, 302, 1], [1, \"cs\", 0, 215, 304, 1], [1, \"cs\", 0, 214, 302, 1], [1, \"cs\", 1, 218, 302, 1], [1, \"cs\", 1, 217, 304, 1], [1, \"cs\", 1, 215, 302, 1], [1, \"cs\", 2, 219, 302, 1], [1, \"cs\", 2, 218, 303, 1], [1, \"cs\", 2, 218, 304, 1], [1, \"cs\", 2, 217, 303, 1], [1, \"cs\", 2, 216, 304, 1], [1, \"cs\", 2, 215, 303, 1], [1, \"cs\", 2, 216, 303, 1], [1, \"cs\", 2, 216, 302, 1], [1, \"cs\", 2, 214, 303, 1], [1, \"cs\", 2, 214, 304, 1], [1, \"cs\", 0, 212, 302, 1], [1, \"cs\", 0, 210, 303, 1], [1, \"cs\", 0, 212, 304, 1], [1, \"cs\", 0, 208, 304, 1], [1, \"cs\", 1, 210, 302, 1], [1, \"cs\", 1, 208, 303, 1], [1, \"cs\", 2, 213, 302, 1], [1, \"cs\", 2, 213, 303, 1], [1, \"cs\", 2, 213, 304, 1], [1, \"cs\", 2, 212, 303, 1], [1, \"cs\", 2, 211, 304, 1], [1, \"cs\", 2, 211, 303, 1], [1, \"cs\", 2, 211, 302, 1], [1, \"cs\", 2, 209, 302, 1], [1, \"cs\", 2, 209, 303, 1], [1, \"cs\", 2, 209, 304, 1], [1, \"cs\", 2, 210, 304, 1], [1, \"cs\", 2, 208, 302, 1], [1, \"cs\", 0, 206, 303, 1], [1, \"cs\", 0, 203, 304, 1], [1, \"cs\", 0, 200, 303, 1], [1, \"cs\", 0, 199, 304, 1], [1, \"cs\", 0, 195, 304, 1], [1, \"cs\", 0, 191, 303, 1], [1, \"cs\", 0, 193, 304, 1], [1, \"cs\", 0, 189, 304, 1], [1, \"cs\", 1, 204, 303, 1], [1, \"cs\", 0, 197, 302, 1], [1, \"cs\", 0, 202, 302, 1], [1, \"cs\", 0, 188, 302, 1], [1, \"cs\", 0, 194, 302, 1], [1, \"cs\", 1, 197, 303, 1], [1, \"cs\", 1, 201, 304, 1], [1, \"cs\", 1, 192, 302, 1], [1, \"cs\", 1, 189, 303, 1], [1, \"cs\", 1, 205, 302, 1], [1, \"cs\", 1, 188, 304, 1], [1, \"cs\", 2, 207, 302, 1], [1, \"cs\", 2, 207, 303, 1], [1, \"cs\", 2, 207, 304, 1], [1, \"cs\", 2, 206, 304, 1], [1, \"cs\", 2, 206, 302, 1], [1, \"cs\", 2, 205, 303, 1], [1, \"cs\", 2, 204, 304, 1], [1, \"cs\", 2, 205, 304, 1], [1, \"cs\", 2, 204, 302, 1], [1, \"cs\", 2, 203, 302, 1], [1, \"cs\", 2, 203, 303, 1], [1, \"cs\", 2, 202, 303, 1], [1, \"cs\", 2, 201, 303, 1], [1, \"cs\", 2, 201, 302, 1], [1, \"cs\", 2, 200, 302, 1], [1, \"cs\", 2, 199, 302, 1], [1, \"cs\", 2, 198, 303, 1], [1, \"cs\", 2, 198, 302, 1], [1, \"cs\", 2, 199, 303, 1], [1, \"cs\", 2, 200, 304, 1], [1, \"cs\", 2, 202, 304, 1], [1, \"cs\", 2, 197, 304, 1], [1, \"cs\", 2, 198, 304, 1], [1, \"cs\", 2, 196, 304, 1], [1, \"cs\", 2, 196, 303, 1], [1, \"cs\", 2, 196, 302, 1], [1, \"cs\", 2, 195, 302, 1], [1, \"cs\", 2, 195, 303, 1], [1, \"cs\", 2, 194, 303, 1], [1, \"cs\", 2, 194, 304, 1], [1, \"cs\", 2, 193, 303, 1], [1, \"cs\", 2, 193, 302, 1], [1, \"cs\", 2, 192, 303, 1], [1, \"cs\", 2, 192, 304, 1], [1, \"cs\", 2, 191, 304, 1], [1, \"cs\", 2, 190, 304, 1], [1, \"cs\", 2, 190, 303, 1], [1, \"cs\", 2, 189, 302, 1], [1, \"cs\", 2, 190, 302, 1], [1, \"cs\", 2, 191, 302, 1], [1, \"cs\", 2, 188, 303, 1], [1, \"cs\", 0, 186, 303, 1], [1, \"cs\", 0, 183, 304, 1], [1, \"cs\", 0, 184, 302, 1], [1, \"cs\", 0, 181, 302, 1], [1, \"cs\", 0, 176, 302, 1], [1, \"cs\", 0, 178, 303, 1], [1, \"cs\", 0, 173, 304, 1], [1, \"cs\", 0, 170, 303, 1], [1, \"cs\", 0, 172, 302, 1], [1, \"cs\", 1, 182, 303, 1], [1, \"cs\", 1, 178, 304, 1], [1, \"cs\", 1, 175, 304, 1], [1, \"cs\", 1, 173, 302, 1], [1, \"cs\", 1, 185, 304, 1], [1, \"cs\", 1, 169, 304, 1], [1, \"cs\", 3, 187, 304, 1], [1, \"cs\", 3, 186, 304, 1], [1, \"cs\", 3, 187, 303, 1], [1, \"cs\", 3, 187, 302, 1], [1, \"cs\", 3, 186, 302, 1], [1, \"cs\", 3, 185, 302, 1], [1, \"cs\", 3, 185, 303, 1], [1, \"cs\", 3, 184, 303, 1], [1, \"cs\", 3, 183, 303, 1], [1, \"cs\", 3, 183, 302, 1], [1, \"cs\", 3, 182, 302, 1], [1, \"cs\", 3, 184, 304, 1], [1, \"cs\", 3, 182, 304, 1], [1, \"cs\", 3, 181, 304, 1], [1, \"cs\", 3, 179, 304, 1], [1, \"cs\", 3, 180, 304, 1], [1, \"cs\", 3, 181, 303, 1], [1, \"cs\", 3, 180, 303, 1], [1, \"cs\", 3, 179, 303, 1], [1, \"cs\", 3, 180, 302, 1], [1, \"cs\", 3, 179, 302, 1], [1, \"cs\", 3, 178, 302, 1], [1, \"cs\", 3, 177, 302, 1], [1, \"cs\", 3, 177, 304, 1], [1, \"cs\", 3, 177, 303, 1], [1, \"cs\", 3, 176, 303, 1], [1, \"cs\", 3, 176, 304, 1], [1, \"cs\", 3, 174, 304, 1], [1, \"cs\", 3, 175, 303, 1], [1, \"cs\", 3, 174, 303, 1], [1, \"cs\", 3, 173, 303, 1], [1, \"cs\", 3, 172, 303, 1], [1, \"cs\", 3, 171, 303, 1], [1, \"cs\", 3, 170, 304, 1], [1, \"cs\", 3, 171, 304, 1], [1, \"cs\", 3, 172, 304, 1], [1, \"cs\", 3, 174, 302, 1], [1, \"cs\", 3, 175, 302, 1], [1, \"cs\", 3, 171, 302, 1], [1, \"cs\", 3, 170, 302, 1], [1, \"cs\", 3, 169, 302, 1], [1, \"cs\", 3, 169, 303, 1], [1, \"cs\", 0, 168, 302, 1], [1, \"cs\", 0, 166, 303, 1], [1, \"cs\", 0, 163, 304, 1], [1, \"cs\", 0, 161, 302, 1], [1, \"cs\", 0, 159, 303, 1], [1, \"cs\", 0, 152, 304, 1], [1, \"cs\", 0, 155, 303, 1], [1, \"cs\", 1, 164, 303, 1], [1, \"cs\", 1, 162, 303, 1], [1, \"cs\", 1, 158, 304, 1], [1, \"cs\", 1, 156, 302, 1], [1, \"cs\", 1, 153, 302, 1], [1, \"cs\", 1, 154, 304, 1], [1, \"cs\", 2, 168, 304, 1], [1, \"cs\", 2, 168, 303, 1], [1, \"cs\", 2, 167, 303, 1], [1, \"cs\", 2, 167, 304, 1], [1, \"cs\", 2, 166, 304, 1], [1, \"cs\", 2, 165, 304, 1], [1, \"cs\", 2, 164, 304, 1], [1, \"cs\", 2, 165, 303, 1], [1, \"cs\", 2, 167, 302, 1], [1, \"cs\", 2, 166, 302, 1], [1, \"cs\", 2, 165, 302, 1], [1, \"cs\", 2, 164, 302, 1], [1, \"cs\", 2, 163, 302, 1], [1, \"cs\", 2, 162, 302, 1], [1, \"cs\", 2, 163, 303, 1], [1, \"cs\", 2, 162, 304, 1], [1, \"cs\", 2, 160, 304, 1], [1, \"cs\", 2, 159, 304, 1], [1, \"cs\", 2, 161, 304, 1], [1, \"cs\", 2, 161, 303, 1], [1, \"cs\", 2, 160, 303, 1], [1, \"cs\", 2, 160, 302, 1], [1, \"cs\", 2, 158, 302, 1], [1, \"cs\", 2, 159, 302, 1], [1, \"cs\", 2, 157, 302, 1], [1, \"cs\", 2, 156, 303, 1], [1, \"cs\", 2, 157, 303, 1], [1, \"cs\", 2, 158, 303, 1], [1, \"cs\", 2, 157, 304, 1], [1, \"cs\", 2, 156, 304, 1], [1, \"cs\", 2, 155, 304, 1], [1, \"cs\", 2, 153, 304, 1], [1, \"cs\", 2, 153, 303, 1], [1, \"cs\", 2, 154, 303, 1], [1, \"cs\", 2, 154, 302, 1], [1, \"cs\", 2, 155, 302, 1], [1, \"cs\", 2, 152, 303, 1], [1, \"cs\", 2, 152, 302, 1], [1, \"cs\", 0, 151, 302, 1], [1, \"cs\", 0, 149, 303, 1], [1, \"cs\", 0, 145, 304, 1], [1, \"cs\", 0, 147, 302, 1], [1, \"cs\", 0, 143, 303, 1], [1, \"cs\", 0, 141, 303, 1], [1, \"cs\", 1, 147, 304, 1], [1, \"cs\", 1, 145, 302, 1], [1, \"cs\", 1, 142, 302, 1], [1, \"cs\", 1, 150, 304, 1], [1, \"cs\", 2, 151, 304, 1], [1, \"cs\", 2, 151, 303, 1], [1, \"cs\", 2, 150, 303, 1], [1, \"cs\", 2, 150, 302, 1], [1, \"cs\", 2, 148, 302, 1], [1, \"cs\", 2, 146, 302, 1], [1, \"cs\", 2, 144, 302, 1], [1, \"cs\", 2, 141, 302, 1], [1, \"cs\", 2, 141, 304, 1], [1, \"cs\", 2, 142, 304, 1], [1, \"cs\", 2, 142, 303, 1], [1, \"cs\", 2, 143, 304, 1], [1, \"cs\", 2, 144, 304, 1], [1, \"cs\", 2, 144, 303, 1], [1, \"cs\", 2, 148, 304, 1], [1, \"cs\", 2, 148, 303, 1], [1, \"cs\", 2, 146, 303, 1], [1, \"cs\", 2, 145, 303, 1], [1, \"cs\", 2, 147, 303, 1], [1, \"cs\", 2, 146, 304, 1], [1, \"cs\", 2, 149, 304, 1], [1, \"cs\", 3, 149, 302, 1], [1, \"cs\", 3, 143, 302, 1], [1, \"cs\", 0, 139, 304, 1], [1, \"cs\", 0, 138, 302, 1], [1, \"cs\", 1, 139, 302, 1], [1, \"cs\", 2, 140, 302, 1], [1, \"cs\", 2, 140, 303, 1], [1, \"cs\", 2, 139, 303, 1], [1, \"cs\", 2, 138, 303, 1], [1, \"cs\", 2, 138, 304, 1], [1, \"cs\", 2, 140, 304, 1], [1, \"cs\", 0, 137, 304, 1], [1, \"cs\", 0, 135, 303, 1], [1, \"cs\", 0, 133, 304, 1], [1, \"cs\", 1, 135, 304, 1], [1, \"cs\", 1, 136, 302, 1], [1, \"cs\", 2, 137, 302, 1], [1, \"cs\", 2, 136, 303, 1], [1, \"cs\", 2, 137, 303, 1], [1, \"cs\", 2, 136, 304, 1], [1, \"cs\", 2, 134, 304, 1], [1, \"cs\", 2, 134, 303, 1], [1, \"cs\", 2, 133, 303, 1], [1, \"cs\", 2, 132, 304, 1], [1, \"cs\", 0, 131, 302, 1], [1, \"cs\", 0, 134, 302, 1], [1, \"cs\", 0, 129, 304, 1], [1, \"cs\", 1, 130, 303, 1], [1, \"cs\", 1, 132, 302, 1], [1, \"cs\", 2, 135, 302, 1], [1, \"cs\", 2, 133, 302, 1], [1, \"cs\", 2, 132, 303, 1], [1, \"cs\", 2, 131, 303, 1], [1, \"cs\", 2, 130, 304, 1], [1, \"cs\", 2, 131, 304, 1], [1, \"cs\", 2, 128, 304, 1], [1, \"cs\", 2, 129, 303, 1], [1, \"cs\", 2, 130, 302, 1], [1, \"cs\", 3, 127, 304, 1], [1, \"cs\", 2, 132, 301, 1], [1, \"cs\", 2, 133, 301, 1], [1, \"cs\", 2, 134, 301, 1], [1, \"cs\", 2, 135, 301, 1], [1, \"cs\", 3, 131, 301, 1], [1, \"cs\", 3, 136, 301, 1], [1, \"cs\", 3, 136, 178, 1], [1, \"cs\", 0, 136, 183, 1], [1, \"cs\", 2, 136, 182, 1], [1, \"cs\", 1, 136, 181, 1], [1, \"cs\", 0, 136, 179, 1], [1, \"cs\", 3, 136, 180, 1], [1, \"cs\", 2, 135, 183, 1], [1, \"cs\", 1, 135, 182, 1], [1, \"cs\", 3, 135, 180, 1], [1, \"cs\", 0, 134, 183, 1], [1, \"cs\", 2, 133, 183, 1], [1, \"cs\", 3, 133, 182, 1], [1, \"cs\", 1, 132, 183, 1], [1, \"cs\", 3, 131, 183, 1], [1, \"cs\", 2, 135, 181, 1], [1, \"cs\", 2, 134, 182, 1], [1, \"cs\", 3, 134, 181, 1], [1, \"fod\", 0, 213, 301, 0], [1, \"fod\", 0, 204, 301, 0], [1, \"fod\", 1, 196, 288, 0], [1, \"fod\", 1, 198, 283, 0], [1, \"fod\", 1, 190, 288, 0], [1, \"fod\", 1, 189, 296, 0], [1, \"fod\", 1, 193, 293, 0], [1, \"fod\", 1, 183, 292, 0], [1, \"fod\", 1, 186, 287, 0], [1, \"fod\", 1, 190, 290, 0], [1, \"fod\", 1, 218, 271, 0], [1, \"fod\", 1, 220, 266, 0], [1, \"fod\", 1, 211, 268, 0], [1, \"fod\", 1, 210, 274, 0], [1, \"fod\", 1, 205, 263, 0], [1, \"fod\", 1, 216, 258, 0], [1, \"fod\", 2, 201, 294, 0], [1, \"fod\", 2, 190, 296, 0], [1, \"fod\", 2, 188, 299, 0], [1, \"fod\", 2, 186, 297, 0], [1, \"fod\", 2, 188, 296, 0], [1, \"fod\", 2, 189, 291, 0], [1, \"fod\", 2, 189, 286, 0], [1, \"fod\", 2, 191, 286, 0], [1, \"fod\", 2, 197, 286, 0], [1, \"fod\", 2, 195, 290, 0], [1, \"fod\", 2, 186, 288, 0], [1, \"fod\", 2, 184, 290, 0], [1, \"fod\", 2, 183, 293, 0], [1, \"fod\", 2, 198, 286, 0], [1, \"fod\", 2, 196, 283, 0], [1, \"fod\", 2, 196, 281, 0], [1, \"fod\", 2, 201, 280, 0], [1, \"fod\", 2, 205, 287, 0], [1, \"fod\", 2, 209, 283, 0], [1, \"fod\", 2, 212, 280, 0], [1, \"fod\", 2, 209, 277, 0], [1, \"fod\", 2, 217, 278, 0], [1, \"fod\", 2, 219, 275, 0], [1, \"fod\", 2, 220, 271, 0], [1, \"fod\", 2, 220, 267, 0], [1, \"fod\", 2, 217, 265, 0], [1, \"fod\", 2, 213, 267, 0], [1, \"fod\", 2, 208, 264, 0], [1, \"fod\", 2, 206, 261, 0], [1, \"fod\", 2, 203, 265, 0], [1, \"fod\", 2, 204, 270, 0], [1, \"fod\", 2, 196, 267, 0], [1, \"fod\", 2, 214, 261, 0], [1, \"fod\", 2, 211, 260, 0], [1, \"fod\", 2, 218, 256, 0], [1, \"fod\", 2, 219, 262, 0], [1, \"fod\", 2, 220, 253, 0], [1, \"fod\", 2, 211, 257, 0], [1, \"la\", 3, 198, 27, 1], [1, \"la\", 3, 201, 30, 1], [1, \"la\", 3, 200, 32, 1], [1, \"la\", 3, 198, 33, 1], [1, \"la\", 3, 196, 33, 1], [1, \"la\", 3, 194, 32, 1], [1, \"la\", 3, 194, 28, 1], [1, \"la\", 0, 200, 28, 1], [1, \"la\", 0, 193, 30, 1], [1, \"la\", 3, 196, 27, 1], [1, \"la\", 3, 199, 30, 1], [1, \"la\", 3, 197, 29, 1], [1, \"la\", 3, 195, 30, 1], [1, \"la\", 3, 197, 31, 1], [1, \"la\", 2, 201, 33, 1], [1, \"la\", 4, 202, 34, 1], [1, \"la\", 4, 202, 35, 1], [1, \"la\", 4, 203, 36, 1], [1, \"la\", 4, 204, 37, 1], [1, \"la\", 2, 205, 38, 1], [1, \"la\", 5, 205, 39, 1], [1, \"la\", 5, 205, 40, 1], [1, \"la\", 2, 206, 41, 1], [1, \"la\", 1, 207, 42, 1], [1, \"la\", 1, 205, 41, 1], [1, \"la\", 4, 208, 43, 1], [1, \"la\", 4, 209, 43, 1], [1, \"la\", 1, 210, 43, 1], [1, \"la\", 2, 211, 43, 1], [1, \"la\", 5, 212, 43, 1], [1, \"la\", 4, 213, 44, 1], [1, \"la\", 3, 223, 54, 1], [1, \"la\", 3, 221, 53, 1], [1, \"la\", 3, 219, 53, 1], [1, \"la\", 4, 218, 52, 1], [1, \"la\", 4, 217, 51, 1], [1, \"la\", 4, 216, 51, 1], [1, \"la\", 1, 215, 50, 1], [1, \"la\", 4, 212, 46, 1], [1, \"la\", 1, 210, 44, 1], [1, \"la\", 3, 206, 50, 1], [1, \"re\", 0, 217, 24, 1], [1, \"re\", 0, 207, 16, 1], [1, \"de\", 44, 54, 14, 0], [1, \"de\", 44, 53, 13, 0], [1, \"de\", 44, 51, 16, 0], [1, \"de\", 44, 49, 13, 0], [1, \"de\", 44, 48, 14, 0], [1, \"de\", 21, 78, 293, 0], [1, \"cs\", 0, 221, 8, 1], [1, \"cs\", 0, 224, 9, 1], [1, \"cs\", 1, 223, 8, 1], [1, \"cs\", 2, 224, 8, 1], [1, \"cs\", 2, 222, 8, 1], [1, \"cs\", 0, 224, 6, 1], [1, \"cs\", 0, 222, 5, 1], [1, \"cs\", 0, 219, 7, 1], [1, \"cs\", 1, 220, 5, 1], [1, \"cs\", 1, 217, 7, 1], [1, \"cs\", 2, 224, 5, 1], [1, \"cs\", 2, 223, 5, 1], [1, \"cs\", 2, 224, 7, 1], [1, \"cs\", 2, 223, 7, 1], [1, \"cs\", 2, 223, 6, 1], [1, \"cs\", 2, 222, 6, 1], [1, \"cs\", 2, 222, 7, 1], [1, \"cs\", 2, 221, 7, 1], [1, \"cs\", 2, 221, 6, 1], [1, \"cs\", 2, 221, 5, 1], [1, \"cs\", 2, 220, 6, 1], [1, \"cs\", 2, 220, 7, 1], [1, \"cs\", 2, 220, 8, 1], [1, \"cs\", 2, 219, 8, 1], [1, \"cs\", 2, 219, 6, 1], [1, \"cs\", 2, 219, 5, 1], [1, \"cs\", 0, 218, 5, 1], [1, \"cs\", 0, 216, 8, 1], [1, \"cs\", 2, 218, 8, 1], [1, \"cs\", 2, 217, 8, 1], [1, \"cs\", 2, 218, 7, 1], [1, \"cs\", 2, 218, 6, 1], [1, \"cs\", 2, 217, 6, 1], [1, \"cs\", 2, 217, 5, 1], [1, \"cs\", 1, 215, 6, 1], [1, \"cs\", 1, 213, 5, 1], [1, \"cs\", 0, 214, 6, 1], [1, \"cs\", 0, 216, 5, 1], [1, \"cs\", 0, 213, 8, 1], [1, \"cs\", 0, 211, 7, 1], [1, \"cs\", 0, 209, 5, 1], [1, \"cs\", 0, 208, 7, 1], [1, \"cs\", 0, 207, 8, 1], [1, \"cs\", 2, 216, 6, 1], [1, \"cs\", 2, 216, 7, 1], [1, \"cs\", 2, 215, 7, 1], [1, \"cs\", 2, 215, 8, 1], [1, \"cs\", 2, 214, 8, 1], [1, \"cs\", 2, 214, 7, 1], [1, \"cs\", 2, 215, 5, 1], [1, \"cs\", 2, 214, 5, 1], [1, \"cs\", 2, 213, 6, 1], [1, \"cs\", 2, 213, 7, 1], [1, \"cs\", 2, 212, 7, 1], [1, \"cs\", 1, 211, 5, 1], [1, \"cs\", 1, 209, 8, 1], [1, \"cs\", 2, 212, 8, 1], [1, \"cs\", 2, 211, 8, 1], [1, \"cs\", 2, 210, 8, 1], [1, \"cs\", 2, 209, 7, 1], [1, \"cs\", 2, 210, 7, 1], [1, \"cs\", 2, 210, 6, 1], [1, \"cs\", 2, 212, 6, 1], [1, \"cs\", 2, 212, 5, 1], [1, \"cs\", 2, 211, 6, 1], [1, \"cs\", 2, 210, 5, 1], [1, \"cs\", 2, 209, 6, 1], [1, \"cs\", 2, 208, 6, 1], [1, \"cs\", 2, 208, 5, 1], [1, \"cs\", 2, 207, 7, 1], [1, \"cs\", 2, 207, 6, 1], [1, \"cs\", 2, 207, 5, 1], [1, \"cs\", 2, 206, 5, 1], [1, \"cs\", 2, 208, 8, 1], [1, \"cs\", 2, 206, 6, 1], [1, \"cs\", 0, 204, 8, 1], [1, \"cs\", 0, 205, 6, 1], [1, \"cs\", 0, 203, 5, 1], [1, \"cs\", 0, 202, 7, 1], [1, \"cs\", 0, 199, 8, 1], [1, \"cs\", 0, 200, 6, 1], [1, \"cs\", 0, 197, 6, 1], [1, \"cs\", 0, 195, 8, 1], [1, \"cs\", 0, 194, 6, 1], [1, \"cs\", 1, 202, 8, 1], [1, \"cs\", 1, 206, 7, 1], [1, \"cs\", 1, 201, 5, 1], [1, \"cs\", 1, 197, 8, 1], [1, \"cs\", 1, 192, 7, 1], [1, \"cs\", 1, 195, 5, 1], [1, \"cs\", 2, 205, 7, 1], [1, \"cs\", 2, 205, 8, 1], [1, \"cs\", 2, 206, 8, 1], [1, \"cs\", 2, 204, 7, 1], [1, \"cs\", 2, 204, 6, 1], [1, \"cs\", 2, 204, 5, 1], [1, \"cs\", 2, 205, 5, 1], [1, \"cs\", 2, 203, 6, 1], [1, \"cs\", 2, 203, 7, 1], [1, \"cs\", 2, 203, 8, 1], [1, \"cs\", 2, 201, 8, 1], [1, \"cs\", 2, 200, 8, 1], [1, \"cs\", 2, 200, 7, 1], [1, \"cs\", 2, 201, 7, 1], [1, \"cs\", 2, 201, 6, 1], [1, \"cs\", 2, 202, 5, 1], [1, \"cs\", 2, 202, 6, 1], [1, \"cs\", 2, 200, 5, 1], [1, \"cs\", 2, 199, 5, 1], [1, \"cs\", 2, 197, 5, 1], [1, \"cs\", 2, 196, 5, 1], [1, \"cs\", 2, 198, 5, 1], [1, \"cs\", 2, 198, 6, 1], [1, \"cs\", 2, 199, 6, 1], [1, \"cs\", 2, 199, 7, 1], [1, \"cs\", 2, 198, 7, 1], [1, \"cs\", 2, 198, 8, 1], [1, \"cs\", 2, 197, 7, 1], [1, \"cs\", 2, 196, 7, 1], [1, \"cs\", 2, 196, 8, 1], [1, \"cs\", 2, 196, 6, 1], [1, \"cs\", 2, 195, 6, 1], [1, \"cs\", 2, 195, 7, 1], [1, \"cs\", 2, 194, 7, 1], [1, \"cs\", 2, 193, 8, 1], [1, \"cs\", 2, 194, 8, 1], [1, \"cs\", 2, 193, 7, 1], [1, \"cs\", 2, 193, 6, 1], [1, \"cs\", 2, 193, 5, 1], [1, \"cs\", 2, 194, 5, 1], [1, \"cs\", 0, 192, 5, 1], [1, \"cs\", 0, 191, 8, 1], [1, \"cs\", 0, 190, 6, 1], [1, \"cs\", 0, 188, 7, 1], [1, \"cs\", 0, 186, 8, 1], [1, \"cs\", 0, 186, 5, 1], [1, \"cs\", 0, 184, 7, 1], [1, \"cs\", 0, 182, 8, 1], [1, \"cs\", 0, 181, 6, 1], [1, \"cs\", 1, 189, 8, 1], [1, \"cs\", 1, 183, 8, 1], [1, \"cs\", 1, 188, 5, 1], [1, \"cs\", 1, 185, 6, 1], [1, \"cs\", 1, 180, 7, 1], [1, \"cs\", 1, 183, 5, 1], [1, \"cs\", 1, 178, 8, 1], [1, \"cs\", 1, 177, 6, 1], [1, \"cs\", 1, 173, 7, 1], [1, \"cs\", 1, 171, 7, 1], [1, \"cs\", 0, 177, 8, 1], [1, \"cs\", 0, 175, 7, 1], [1, \"cs\", 0, 179, 5, 1], [1, \"cs\", 0, 174, 5, 1], [1, \"cs\", 0, 176, 5, 1], [1, \"cs\", 0, 172, 8, 1], [1, \"cs\", 0, 170, 8, 1], [1, \"cs\", 0, 169, 6, 1], [1, \"cs\", 2, 192, 6, 1], [1, \"cs\", 2, 192, 8, 1], [1, \"cs\", 2, 191, 7, 1], [1, \"cs\", 2, 191, 6, 1], [1, \"cs\", 2, 191, 5, 1], [1, \"cs\", 2, 190, 5, 1], [1, \"cs\", 2, 189, 5, 1], [1, \"cs\", 2, 189, 6, 1], [1, \"cs\", 2, 189, 7, 1], [1, \"cs\", 2, 190, 7, 1], [1, \"cs\", 2, 190, 8, 1], [1, \"cs\", 2, 188, 8, 1], [1, \"cs\", 2, 187, 8, 1], [1, \"cs\", 2, 187, 7, 1], [1, \"cs\", 2, 187, 6, 1], [1, \"cs\", 2, 188, 6, 1], [1, \"cs\", 2, 187, 5, 1], [1, \"cs\", 2, 186, 6, 1], [1, \"cs\", 2, 186, 7, 1], [1, \"cs\", 2, 185, 7, 1], [1, \"cs\", 2, 185, 8, 1], [1, \"cs\", 2, 184, 8, 1], [1, \"cs\", 2, 183, 7, 1], [1, \"cs\", 2, 183, 6, 1], [1, \"cs\", 2, 184, 6, 1], [1, \"cs\", 2, 184, 5, 1], [1, \"cs\", 2, 185, 5, 1], [1, \"cs\", 2, 182, 6, 1], [1, \"cs\", 2, 182, 7, 1], [1, \"cs\", 2, 181, 7, 1], [1, \"cs\", 2, 181, 8, 1], [1, \"cs\", 2, 180, 8, 1], [1, \"cs\", 2, 179, 8, 1], [1, \"cs\", 2, 182, 5, 1], [1, \"cs\", 2, 181, 5, 1], [1, \"cs\", 2, 180, 5, 1], [1, \"cs\", 2, 180, 6, 1], [1, \"cs\", 2, 179, 6, 1], [1, \"cs\", 2, 179, 7, 1], [1, \"cs\", 2, 178, 7, 1], [1, \"cs\", 2, 178, 6, 1], [1, \"cs\", 2, 178, 5, 1], [1, \"cs\", 2, 177, 5, 1], [1, \"cs\", 2, 177, 7, 1], [1, \"cs\", 2, 176, 7, 1], [1, \"cs\", 2, 176, 6, 1], [1, \"cs\", 2, 175, 6, 1], [1, \"cs\", 2, 175, 5, 1], [1, \"cs\", 2, 176, 8, 1], [1, \"cs\", 2, 174, 8, 1], [1, \"cs\", 2, 175, 8, 1], [1, \"cs\", 2, 173, 8, 1], [1, \"cs\", 2, 174, 7, 1], [1, \"cs\", 2, 173, 6, 1], [1, \"cs\", 2, 174, 6, 1], [1, \"cs\", 2, 172, 5, 1], [1, \"cs\", 2, 173, 5, 1], [1, \"cs\", 2, 172, 6, 1], [1, \"cs\", 2, 172, 7, 1], [1, \"cs\", 2, 171, 8, 1], [1, \"cs\", 2, 170, 7, 1], [1, \"cs\", 2, 170, 6, 1], [1, \"cs\", 2, 170, 5, 1], [1, \"cs\", 2, 171, 5, 1], [1, \"cs\", 2, 171, 6, 1], [1, \"cs\", 2, 169, 5, 1], [1, \"cs\", 2, 169, 7, 1], [1, \"cs\", 2, 169, 8, 1], [1, \"cs\", 1, 168, 7, 1], [1, \"cs\", 1, 166, 5, 1], [1, \"cs\", 1, 164, 7, 1], [1, \"cs\", 1, 160, 7, 1], [1, \"cs\", 1, 156, 8, 1], [1, \"cs\", 0, 166, 8, 1], [1, \"cs\", 0, 168, 5, 1], [1, \"cs\", 0, 164, 6, 1], [1, \"cs\", 0, 162, 7, 1], [1, \"cs\", 0, 158, 8, 1], [1, \"cs\", 0, 157, 6, 1], [1, \"cs\", 0, 161, 5, 1], [1, \"cs\", 0, 159, 5, 1], [1, \"cs\", 0, 155, 7, 1], [1, \"cs\", 0, 154, 5, 1], [1, \"cs\", 0, 151, 7, 1], [1, \"cs\", 1, 153, 8, 1], [1, \"cs\", 1, 151, 5, 1], [1, \"cs\", 2, 168, 6, 1], [1, \"cs\", 2, 168, 8, 1], [1, \"cs\", 2, 167, 8, 1], [1, \"cs\", 2, 167, 7, 1], [1, \"cs\", 2, 167, 6, 1], [1, \"cs\", 2, 167, 5, 1], [1, \"cs\", 2, 166, 6, 1], [1, \"cs\", 2, 166, 7, 1], [1, \"cs\", 2, 165, 7, 1], [1, \"cs\", 2, 165, 6, 1], [1, \"cs\", 2, 165, 5, 1], [1, \"cs\", 2, 164, 5, 1], [1, \"cs\", 2, 163, 5, 1], [1, \"cs\", 2, 162, 5, 1], [1, \"cs\", 2, 162, 6, 1], [1, \"cs\", 2, 163, 6, 1], [1, \"cs\", 2, 163, 7, 1], [1, \"cs\", 2, 163, 8, 1], [1, \"cs\", 2, 164, 8, 1], [1, \"cs\", 2, 165, 8, 1], [1, \"cs\", 2, 161, 8, 1], [1, \"cs\", 2, 162, 8, 1], [1, \"cs\", 2, 160, 8, 1], [1, \"cs\", 2, 159, 8, 1], [1, \"cs\", 2, 159, 7, 1], [1, \"cs\", 2, 159, 6, 1], [1, \"cs\", 2, 160, 5, 1], [1, \"cs\", 2, 160, 6, 1], [1, \"cs\", 2, 161, 6, 1], [1, \"cs\", 2, 161, 7, 1], [1, \"cs\", 2, 157, 7, 1], [1, \"cs\", 2, 158, 7, 1], [1, \"cs\", 2, 158, 6, 1], [1, \"cs\", 2, 158, 5, 1], [1, \"cs\", 2, 155, 5, 1], [1, \"cs\", 2, 155, 6, 1], [1, \"cs\", 2, 156, 6, 1], [1, \"cs\", 2, 156, 7, 1], [1, \"cs\", 2, 157, 8, 1], [1, \"cs\", 2, 155, 8, 1], [1, \"cs\", 2, 154, 8, 1], [1, \"cs\", 2, 154, 7, 1], [1, \"cs\", 2, 154, 6, 1], [1, \"cs\", 2, 152, 8, 1], [1, \"cs\", 2, 153, 7, 1], [1, \"cs\", 2, 153, 6, 1], [1, \"cs\", 2, 153, 5, 1], [1, \"cs\", 2, 152, 5, 1], [1, \"cs\", 2, 152, 6, 1], [1, \"cs\", 2, 152, 7, 1], [1, \"cs\", 2, 151, 6, 1], [1, \"cs\", 2, 157, 5, 1], [1, \"cs\", 1, 156, 5, 1], [1, \"cs\", 0, 150, 5, 1], [1, \"cs\", 0, 149, 7, 1], [1, \"cs\", 0, 147, 8, 1], [1, \"cs\", 0, 146, 5, 1], [1, \"cs\", 0, 144, 7, 1], [1, \"cs\", 0, 142, 5, 1], [1, \"cs\", 1, 147, 6, 1], [1, \"cs\", 1, 145, 8, 1], [1, \"cs\", 1, 144, 5, 1], [1, \"cs\", 2, 148, 5, 1], [1, \"cs\", 2, 149, 5, 1], [1, \"cs\", 2, 150, 6, 1], [1, \"cs\", 2, 150, 8, 1], [1, \"cs\", 2, 151, 8, 1], [1, \"cs\", 2, 150, 7, 1], [1, \"cs\", 2, 149, 8, 1], [1, \"cs\", 2, 148, 8, 1], [1, \"cs\", 2, 149, 6, 1], [1, \"cs\", 2, 148, 6, 1], [1, \"cs\", 2, 148, 7, 1], [1, \"cs\", 2, 147, 7, 1], [1, \"cs\", 2, 147, 5, 1], [1, \"cs\", 2, 146, 6, 1], [1, \"cs\", 2, 146, 7, 1], [1, \"cs\", 2, 146, 8, 1], [1, \"cs\", 2, 145, 7, 1], [1, \"cs\", 2, 145, 6, 1], [1, \"cs\", 2, 145, 5, 1], [1, \"cs\", 2, 144, 6, 1], [1, \"cs\", 2, 143, 5, 1], [1, \"cs\", 2, 143, 6, 1], [1, \"cs\", 2, 142, 6, 1], [1, \"cs\", 2, 141, 5, 1], [1, \"cs\", 2, 224, 10, 1], [1, \"cs\", 0, 224, 11, 1], [1, \"cs\", 0, 224, 13, 1], [1, \"cs\", 0, 224, 17, 1], [1, \"cs\", 0, 224, 19, 1], [1, \"cs\", 0, 224, 22, 1], [1, \"cs\", 0, 224, 24, 1], [1, \"cs\", 0, 224, 29, 1], [1, \"cs\", 0, 224, 33, 1], [1, \"cs\", 0, 224, 35, 1], [1, \"cs\", 0, 224, 38, 1], [1, \"cs\", 1, 224, 14, 1], [1, \"cs\", 1, 224, 20, 1], [1, \"cs\", 1, 224, 27, 1], [1, \"cs\", 1, 224, 31, 1], [1, \"cs\", 1, 224, 36, 1], [1, \"cs\", 2, 224, 12, 1], [1, \"cs\", 2, 224, 15, 1], [1, \"cs\", 2, 224, 16, 1], [1, \"cs\", 2, 224, 18, 1], [1, \"cs\", 2, 224, 21, 1], [1, \"cs\", 2, 224, 23, 1], [1, \"cs\", 2, 224, 25, 1], [1, \"cs\", 2, 224, 26, 1], [1, \"cs\", 2, 224, 28, 1], [1, \"cs\", 2, 224, 30, 1], [1, \"cs\", 2, 224, 32, 1], [1, \"cs\", 2, 224, 34, 1], [1, \"cs\", 2, 224, 37, 1], [1, \"cs\", 2, 224, 39, 1], [1, \"cs\", 0, 224, 41, 1], [1, \"cs\", 0, 224, 44, 1], [1, \"cs\", 0, 224, 46, 1], [1, \"cs\", 0, 224, 52, 1], [1, \"cs\", 0, 224, 57, 1], [1, \"cs\", 1, 224, 47, 1], [1, \"cs\", 2, 224, 40, 1], [1, \"cs\", 2, 224, 42, 1], [1, \"cs\", 2, 224, 43, 1], [1, \"cs\", 2, 224, 45, 1], [1, \"cs\", 2, 224, 49, 1], [1, \"cs\", 1, 224, 50, 1], [1, \"cs\", 2, 224, 51, 1], [1, \"la\", 3, 224, 54, 1], [1, \"cs\", 2, 224, 56, 1], [1, \"cs\", 2, 224, 58, 1], [1, \"cs\", 2, 224, 61, 1], [1, \"cs\", 0, 224, 60, 1], [1, \"cs\", 0, 224, 64, 1], [1, \"cs\", 0, 224, 66, 1], [1, \"cs\", 0, 224, 70, 1], [1, \"cs\", 0, 224, 74, 1], [1, \"cs\", 0, 224, 77, 1], [1, \"cs\", 1, 224, 62, 1], [1, \"cs\", 1, 224, 68, 1], [1, \"cs\", 1, 224, 72, 1], [1, \"cs\", 1, 224, 76, 1], [1, \"cs\", 1, 224, 80, 1], [1, \"cs\", 1, 224, 83, 1], [1, \"cs\", 1, 224, 91, 1], [1, \"cs\", 1, 224, 95, 1], [1, \"cs\", 1, 224, 97, 1], [1, \"cs\", 0, 224, 85, 1], [1, \"cs\", 0, 224, 88, 1], [1, \"cs\", 0, 224, 93, 1], [1, \"cs\", 0, 224, 98, 1], [1, \"cs\", 2, 224, 59, 1], [1, \"cs\", 2, 224, 63, 1], [1, \"cs\", 2, 224, 65, 1], [1, \"cs\", 2, 224, 67, 1], [1, \"cs\", 2, 224, 69, 1], [1, \"cs\", 2, 224, 71, 1], [1, \"cs\", 2, 224, 73, 1], [1, \"cs\", 2, 224, 75, 1], [1, \"cs\", 2, 224, 78, 1], [1, \"cs\", 2, 224, 79, 1], [1, \"cs\", 2, 224, 81, 1], [1, \"cs\", 2, 224, 82, 1], [1, \"cs\", 2, 224, 84, 1], [1, \"cs\", 2, 224, 86, 1], [1, \"cs\", 2, 224, 87, 1], [1, \"cs\", 2, 224, 89, 1], [1, \"cs\", 2, 224, 90, 1], [1, \"cs\", 2, 224, 92, 1], [1, \"cs\", 2, 224, 94, 1], [1, \"cs\", 2, 224, 96, 1], [1, \"cs\", 2, 224, 99, 1], [1, \"cs\", 2, 224, 100, 1], [1, \"cs\", 0, 224, 101, 1], [1, \"cs\", 1, 224, 103, 1], [1, \"cs\", 2, 224, 102, 1], [1, \"cs\", 0, 222, 10, 1], [1, \"cs\", 2, 223, 9, 1], [1, \"cs\", 2, 222, 9, 1], [1, \"cs\", 2, 221, 9, 1], [1, \"cs\", 2, 223, 10, 1], [1, \"cs\", 2, 223, 11, 1], [1, \"cs\", 2, 223, 12, 1], [1, \"cs\", 3, 223, 13, 1], [1, \"cs\", 3, 222, 11, 1], [1, \"cs\", 3, 220, 9, 1], [1, \"cs\", 3, 219, 9, 1], [1, \"cs\", 3, 221, 10, 1], [1, \"re\", 2, 219, 13, 1], [1, \"re\", 1, 218, 18, 1], [1, \"re\", 1, 214, 13, 1], [1, \"cs\", 0, 221, 20, 1], [1, \"cs\", 1, 223, 18, 1], [1, \"cs\", 2, 222, 19, 1], [1, \"cs\", 2, 223, 19, 1], [1, \"cs\", 2, 223, 20, 1], [1, \"cs\", 2, 222, 20, 1], [1, \"cs\", 2, 220, 21, 1], [1, \"cs\", 0, 219, 21, 1], [1, \"cs\", 3, 221, 21, 1], [1, \"cs\", 3, 218, 21, 1], [1, \"cs\", 3, 222, 21, 1], [1, \"cs\", 3, 220, 22, 1], [1, \"cs\", 3, 219, 22, 1], [1, \"cs\", 3, 221, 22, 1], [1, \"cs\", 0, 211, 9, 1], [1, \"cs\", 1, 211, 10, 1], [1, \"cs\", 1, 210, 12, 1], [1, \"cs\", 0, 211, 13, 1], [1, \"cs\", 2, 210, 9, 1], [1, \"cs\", 2, 210, 10, 1], [1, \"cs\", 2, 210, 11, 1], [1, \"cs\", 2, 212, 9, 1], [1, \"cs\", 2, 210, 13, 1], [1, \"cs\", 2, 211, 12, 1], [1, \"cs\", 2, 211, 11, 1], [1, \"cs\", 2, 211, 14, 1], [1, \"cs\", 2, 212, 15, 1], [1, \"cs\", 2, 210, 14, 1], [1, \"cs\", 3, 211, 15, 1], [1, \"cs\", 3, 213, 9, 1], [1, \"cs\", 3, 212, 10, 1], [1, \"cs\", 3, 223, 21, 1], [1, \"cs\", 3, 209, 9, 1], [1, \"la\", 3, 223, 22, 1], [1, \"la\", 3, 221, 23, 1], [1, \"la\", 3, 207, 9, 1], [1, \"la\", 3, 209, 10, 1], [1, \"la\", 0, 209, 12, 1], [1, \"la\", 4, 209, 14, 1], [1, \"la\", 4, 219, 23, 1], [1, \"la\", 3, 210, 15, 1], [1, \"la\", 3, 217, 22, 1], [1, \"la\", 4, 212, 16, 1], [1, \"la\", 2, 214, 19, 1], [1, \"la\", 4, 213, 20, 1], [1, \"la\", 1, 212, 21, 1], [1, \"la\", 4, 215, 18, 1], [1, \"la\", 2, 216, 17, 1], [1, \"la\", 5, 216, 16, 1], [1, \"la\", 5, 216, 15, 1], [1, \"la\", 1, 217, 16, 1], [1, \"la\", 2, 218, 16, 1], [1, \"la\", 2, 216, 14, 1], [1, \"la\", 2, 219, 16, 1], [1, \"la\", 5, 220, 16, 1], [1, \"la\", 5, 216, 13, 1], [1, \"la\", 4, 217, 15, 1], [1, \"cs\", 0, 211, 44, 1], [1, \"cs\", 1, 212, 45, 1], [1, \"cs\", 2, 213, 45, 1], [1, \"cs\", 0, 214, 46, 1], [1, \"cs\", 2, 215, 46, 1], [1, \"cs\", 3, 213, 46, 1], [1, \"cs\", 3, 214, 47, 1], [1, \"cs\", 3, 214, 48, 1], [1, \"cs\", 3, 216, 46, 1], [1, \"cs\", 0, 208, 20, 1], [1, \"cs\", 0, 210, 21, 1], [1, \"cs\", 0, 212, 23, 1], [1, \"cs\", 0, 213, 25, 1], [1, \"cs\", 2, 213, 24, 1], [1, \"cs\", 2, 211, 22, 1], [1, \"cs\", 2, 210, 20, 1], [1, \"cs\", 2, 209, 21, 1], [1, \"cs\", 2, 209, 20, 1], [1, \"cs\", 2, 211, 21, 1], [1, \"cs\", 2, 212, 22, 1], [1, \"cs\", 2, 213, 23, 1], [1, \"cs\", 3, 213, 26, 1], [1, \"cs\", 3, 207, 20, 1], [1, \"la\", 4, 192, 33, 1], [1, \"la\", 4, 191, 34, 1], [1, \"la\", 4, 190, 35, 1], [1, \"la\", 3, 189, 37, 1], [1, \"la\", 3, 188, 39, 1], [1, \"la\", 4, 186, 40, 1], [1, \"la\", 4, 185, 39, 1], [1, \"la\", 4, 184, 39, 1], [1, \"la\", 2, 183, 39, 1], [1, \"la\", 1, 182, 40, 1], [1, \"la\", 2, 181, 41, 1], [1, \"la\", 5, 180, 41, 1], [1, \"la\", 5, 179, 41, 1], [1, \"la\", 4, 192, 28, 1], [1, \"la\", 4, 191, 28, 1], [1, \"la\", 4, 190, 27, 1], [1, \"la\", 3, 188, 27, 1], [1, \"la\", 4, 187, 26, 1], [1, \"la\", 4, 186, 25, 1], [1, \"la\", 4, 185, 25, 1], [1, \"la\", 4, 184, 24, 1], [1, \"la\", 5, 184, 23, 1], [1, \"la\", 2, 184, 22, 1], [1, \"la\", 5, 184, 21, 1], [1, \"la\", 1, 183, 20, 1], [1, \"la\", 5, 182, 20, 1], [1, \"la\", 2, 181, 20, 1], [1, \"la\", 5, 180, 20, 1], [1, \"la\", 2, 179, 20, 1], [1, \"la\", 4, 178, 19, 1], [1, \"la\", 3, 178, 17, 1], [1, \"la\", 3, 176, 18, 1], [1, \"cs\", 0, 177, 15, 1], [1, \"cs\", 0, 175, 17, 1], [1, \"cs\", 0, 180, 16, 1], [1, \"cs\", 0, 174, 19, 1], [1, \"cs\", 0, 172, 20, 1], [1, \"cs\", 1, 175, 15, 1], [1, \"cs\", 1, 172, 18, 1], [1, \"cs\", 1, 181, 15, 1], [1, \"cs\", 2, 179, 15, 1], [1, \"cs\", 2, 177, 16, 1], [1, \"cs\", 2, 176, 16, 1], [1, \"cs\", 2, 174, 18, 1], [1, \"cs\", 2, 173, 19, 1], [1, \"cs\", 2, 172, 19, 1], [1, \"cs\", 2, 173, 18, 1], [1, \"cs\", 2, 173, 17, 1], [1, \"cs\", 2, 174, 17, 1], [1, \"cs\", 2, 174, 16, 1], [1, \"cs\", 2, 175, 16, 1], [1, \"cs\", 2, 176, 15, 1], [1, \"cs\", 2, 178, 15, 1], [1, \"cs\", 2, 178, 16, 1], [1, \"cs\", 2, 179, 16, 1], [1, \"cs\", 2, 180, 15, 1], [1, \"cs\", 2, 181, 16, 1], [1, \"cs\", 3, 182, 16, 1], [1, \"cs\", 3, 172, 21, 1], [1, \"la\", 1, 175, 19, 1], [1, \"la\", 2, 174, 20, 1], [1, \"la\", 2, 173, 20, 1], [1, \"la\", 1, 180, 17, 1], [1, \"la\", 2, 181, 17, 1], [1, \"la\", 3, 191, 20, 1], [1, \"s\", 0, 217, 30, 1], [1, \"s\", 0, 208, 35, 1], [1, \"s\", 0, 204, 24, 1], [1, \"s\", 1, 218, 32, 1], [1, \"s\", 1, 207, 34, 1], [1, \"s\", 1, 202, 23, 1], [1, \"s\", 1, 195, 16, 1], [1, \"s\", 2, 222, 28, 1], [1, \"s\", 2, 212, 38, 1], [1, \"s\", 2, 207, 23, 1], [1, \"s\", 2, 202, 12, 1], [1, \"s\", 2, 195, 18, 1], [1, \"s\", 1, 191, 12, 1], [1, \"s\", 0, 187, 16, 1], [1, \"s\", 2, 188, 16, 1], [1, \"s\", 1, 186, 14, 1], [1, \"s\", 1, 201, 16, 1], [1, \"g\", 1, 216, 31, 1], [1, \"g\", 0, 200, 15, 1], [1, \"g\", 0, 202, 40, 1], [1, \"g\", 0, 189, 32, 1], [1, \"g\", 0, 204, 28, 1], [1, \"g\", 0, 196, 24, 1], [1, \"g\", 2, 198, 37, 1], [1, \"s\", 0, 193, 39, 1], [1, \"s\", 0, 201, 45, 1], [1, \"a\", 0, 210, 29, 1], [1, \"a\", 0, 200, 20, 1], [1, \"cs\", 0, 200, 34, 1], [1, \"cs\", 0, 193, 27, 1], [1, \"cs\", 1, 203, 30, 1], [1, \"cs\", 1, 191, 31, 1], [1, \"cs\", 2, 202, 32, 1], [1, \"cs\", 2, 194, 26, 1], [1, \"cs\", 2, 192, 27, 1], [1, \"cs\", 2, 192, 32, 1], [1, \"cs\", 2, 203, 31, 1], [1, \"cs\", 2, 202, 31, 1], [1, \"cs\", 2, 202, 30, 1], [1, \"cs\", 3, 202, 29, 1], [1, \"cs\", 3, 201, 32, 1], [1, \"cs\", 3, 199, 35, 1], [1, \"cs\", 0, 193, 34, 1], [1, \"cs\", 2, 194, 34, 1], [1, \"cs\", 2, 198, 35, 1], [1, \"cs\", 3, 199, 34, 1], [1, \"cs\", 3, 191, 29, 1], [1, \"cs\", 0, 191, 30, 1], [1, \"cs\", 3, 190, 29, 1], [1, \"la\", 3, 180, 69, 1], [1, \"la\", 3, 182, 68, 1], [1, \"la\", 3, 184, 68, 1], [1, \"la\", 3, 186, 70, 1], [1, \"la\", 3, 184, 72, 1], [1, \"la\", 3, 182, 72, 1], [1, \"la\", 3, 180, 71, 1], [1, \"cs\", 0, 186, 68, 1], [1, \"cs\", 0, 187, 70, 1], [1, \"cs\", 0, 183, 74, 1], [1, \"cs\", 0, 178, 70, 1], [1, \"cs\", 2, 182, 66, 1], [1, \"cs\", 2, 182, 74, 1], [1, \"cs\", 2, 181, 73, 1], [1, \"cs\", 2, 180, 74, 1], [1, \"cs\", 2, 181, 74, 1], [1, \"la\", 0, 184, 70, 1], [1, \"la\", 3, 182, 70, 1], [1, \"cs\", 2, 181, 67, 1], [1, \"cs\", 3, 184, 67, 1], [1, \"cs\", 3, 182, 67, 1], [1, \"la\", 4, 187, 69, 1], [1, \"la\", 1, 188, 68, 1], [1, \"la\", 4, 189, 68, 1], [1, \"la\", 2, 190, 68, 1], [1, \"la\", 1, 191, 68, 1], [1, \"la\", 4, 192, 68, 1], [1, \"la\", 2, 193, 68, 1], [1, \"la\", 4, 194, 69, 1], [1, \"la\", 2, 194, 70, 1], [1, \"la\", 5, 195, 71, 1], [1, \"la\", 1, 194, 71, 1], [1, \"la\", 2, 196, 72, 1], [1, \"la\", 4, 196, 71, 1], [1, \"la\", 1, 197, 73, 1], [1, \"la\", 5, 196, 73, 1], [1, \"la\", 5, 198, 73, 1], [1, \"la\", 3, 201, 73, 1], [1, \"la\", 3, 203, 72, 1], [1, \"la\", 4, 199, 73, 1], [1, \"la\", 1, 205, 72, 1], [1, \"la\", 2, 206, 72, 1], [1, \"la\", 5, 207, 72, 1], [1, \"la\", 1, 208, 72, 1], [1, \"la\", 1, 209, 73, 1], [1, \"la\", 2, 209, 74, 1], [1, \"la\", 5, 211, 76, 1], [1, \"la\", 4, 210, 75, 1], [1, \"la\", 5, 212, 76, 1], [1, \"la\", 4, 202, 75, 1], [1, \"la\", 2, 203, 76, 1], [1, \"la\", 4, 204, 77, 1], [1, \"la\", 2, 204, 78, 1], [1, \"la\", 2, 204, 79, 1], [1, \"la\", 5, 204, 80, 1], [1, \"cs\", 0, 202, 74, 1], [1, \"cs\", 1, 203, 74, 1], [1, \"cs\", 2, 204, 73, 1], [1, \"cs\", 2, 203, 75, 1], [1, \"cs\", 3, 204, 76, 1], [1, \"cs\", 3, 205, 73, 1], [1, \"cs\", 0, 205, 74, 1], [1, \"cs\", 2, 204, 74, 1], [1, \"cs\", 2, 204, 75, 1], [1, \"cs\", 2, 206, 73, 1], [1, \"cs\", 3, 207, 73, 1], [1, \"cs\", 2, 205, 76, 1], [1, \"cs\", 3, 205, 77, 1], [1, \"la\", 3, 183, 66, 1], [1, \"la\", 4, 183, 65, 1], [1, \"la\", 4, 184, 64, 1], [1, \"la\", 4, 185, 63, 1], [1, \"la\", 1, 185, 62, 1], [1, \"la\", 2, 185, 61, 1], [1, \"la\", 2, 185, 60, 1], [1, \"la\", 4, 186, 59, 1], [1, \"la\", 1, 187, 58, 1], [1, \"la\", 2, 187, 57, 1], [1, \"la\", 2, 187, 56, 1], [1, \"s\", 0, 191, 60, 1], [1, \"s\", 1, 195, 58, 1], [1, \"s\", 1, 199, 46, 1], [1, \"s\", 2, 202, 49, 1], [1, \"g\", 2, 197, 55, 1], [1, \"g\", 1, 213, 55, 1], [1, \"g\", 0, 192, 45, 1], [1, \"g\", 0, 210, 61, 1], [1, \"g\", 0, 182, 52, 1], [1, \"g\", 0, 180, 35, 1], [1, \"g\", 0, 175, 25, 1], [1, \"g\", 0, 168, 32, 1], [1, \"g\", 1, 179, 28, 1], [1, \"g\", 1, 161, 16, 1], [1, \"g\", 2, 172, 12, 1], [1, \"g\", 2, 160, 25, 1], [1, \"g\", 2, 157, 39, 1], [1, \"g\", 2, 170, 43, 1], [1, \"g\", 2, 202, 67, 1], [1, \"g\", 2, 217, 72, 1], [1, \"g\", 2, 214, 82, 1], [1, \"g\", 2, 193, 86, 1], [1, \"g\", 2, 168, 60, 1], [1, \"g\", 2, 165, 78, 1], [1, \"g\", 2, 173, 88, 1], [1, \"s\", 0, 185, 51, 1], [1, \"s\", 0, 175, 44, 1], [1, \"s\", 0, 165, 50, 1], [1, \"s\", 0, 160, 32, 1], [1, \"s\", 1, 162, 30, 1], [1, \"s\", 1, 176, 28, 1], [1, \"s\", 1, 154, 17, 1], [1, \"s\", 1, 184, 49, 1], [1, \"s\", 1, 192, 62, 1], [1, \"s\", 1, 216, 62, 1], [1, \"s\", 1, 204, 65, 1], [1, \"s\", 1, 217, 79, 1], [1, \"s\", 1, 206, 86, 1], [1, \"la\", 3, 211, 69, 1], [1, \"la\", 4, 215, 69, 1], [1, \"la\", 5, 201, 81, 1], [1, \"la\", 1, 207, 83, 1], [1, \"la\", 3, 173, 32, 1], [1, \"la\", 2, 181, 45, 1], [1, \"la\", 1, 178, 38, 1], [1, \"la\", 1, 213, 69, 1], [1, \"la\", 5, 214, 69, 1], [1, \"la\", 4, 216, 68, 1], [1, \"la\", 0, 191, 78, 1], [1, \"la\", 3, 191, 80, 1], [1, \"la\", 3, 189, 79, 1], [1, \"g\", 2, 150, 29, 1], [1, \"g\", 2, 154, 67, 1], [1, \"g\", 2, 202, 94, 1], [1, \"g\", 2, 155, 90, 1], [1, \"s\", 2, 215, 80, 1], [1, \"s\", 2, 204, 62, 1], [1, \"s\", 2, 218, 60, 1], [1, \"s\", 2, 194, 62, 1], [1, \"s\", 0, 216, 86, 1], [1, \"s\", 0, 211, 93, 1], [1, \"la\", 0, 216, 92, 1], [1, \"la\", 0, 151, 96, 1], [1, \"la\", 1, 155, 95, 1], [1, \"la\", 4, 214, 88, 1], [1, \"s\", 0, 205, 99, 1], [1, \"s\", 1, 217, 88, 1], [1, \"s\", 1, 213, 94, 1], [1, \"s\", 1, 202, 97, 1], [1, \"s\", 0, 199, 85, 1], [1, \"s\", 0, 190, 93, 1], [1, \"s\", 1, 199, 87, 1], [1, \"s\", 1, 192, 97, 1], [1, \"la\", 3, 196, 92, 1], [1, \"la\", 1, 199, 91, 1], [1, \"la\", 1, 220, 91, 1], [1, \"la\", 0, 219, 77, 1], [1, \"la\", 0, 200, 59, 1], [1, \"la\", 3, 188, 87, 1], [1, \"la\", 0, 183, 94, 1], [1, \"la\", 1, 187, 83, 1], [1, \"la\", 1, 175, 82, 1], [1, \"la\", 1, 172, 94, 1], [1, \"la\", 2, 179, 78, 1], [1, \"la\", 0, 166, 87, 1], [1, \"la\", 3, 159, 80, 1], [1, \"la\", 3, 167, 15, 1], [1, \"la\", 1, 164, 17, 1], [1, \"la\", 1, 172, 28, 1], [1, \"la\", 3, 153, 24, 1], [1, \"la\", 4, 164, 91, 1], [1, \"la\", 4, 156, 82, 1], [1, \"la\", 4, 149, 90, 1], [1, \"s\", 0, 178, 85, 1], [1, \"s\", 1, 180, 85, 1], [1, \"s\", 0, 163, 96, 1], [1, \"s\", 0, 159, 86, 1], [1, \"s\", 0, 185, 78, 1], [1, \"s\", 1, 194, 75, 1], [1, \"s\", 2, 195, 76, 1], [1, \"s\", 2, 181, 78, 1], [1, \"s\", 2, 161, 87, 1], [1, \"s\", 2, 166, 97, 1], [1, \"s\", 2, 177, 97, 1], [1, \"s\", 0, 149, 85, 1], [1, \"s\", 1, 151, 83, 1], [1, \"s\", 1, 175, 74, 1], [1, \"s\", 0, 174, 72, 1], [1, \"la\", 3, 168, 71, 1], [1, \"la\", 3, 180, 60, 1], [1, \"s\", 0, 156, 63, 1], [1, \"s\", 0, 151, 47, 1], [1, \"s\", 1, 158, 64, 1], [1, \"s\", 1, 161, 75, 1], [1, \"s\", 1, 162, 51, 1], [1, \"s\", 1, 175, 45, 1], [1, \"s\", 1, 152, 47, 1], [1, \"s\", 1, 159, 33, 1], [1, \"s\", 1, 152, 18, 1], [1, \"s\", 0, 151, 13, 1], [1, \"s\", 0, 166, 22, 1], [1, \"s\", 0, 170, 63, 1], [1, \"s\", 2, 172, 62, 1], [1, \"s\", 2, 155, 61, 1], [1, \"s\", 2, 167, 51, 1], [1, \"s\", 2, 150, 52, 1], [1, \"la\", 4, 178, 69, 1], [1, \"la\", 4, 177, 68, 1], [1, \"la\", 3, 176, 67, 1], [1, \"la\", 0, 174, 67, 1], [1, \"la\", 1, 172, 67, 1], [1, \"la\", 4, 171, 67, 1], [1, \"la\", 4, 170, 66, 1], [1, \"la\", 4, 169, 66, 1], [1, \"la\", 1, 168, 66, 1], [1, \"la\", 4, 167, 67, 1], [1, \"la\", 1, 166, 67, 1], [1, \"la\", 4, 165, 68, 1], [1, \"la\", 5, 164, 68, 1], [1, \"la\", 2, 163, 68, 1], [1, \"la\", 5, 162, 68, 1], [1, \"la\", 2, 161, 68, 1], [1, \"la\", 3, 153, 72, 1], [1, \"la\", 3, 163, 60, 1], [1, \"la\", 3, 164, 42, 1], [1, \"la\", 0, 155, 51, 1], [1, \"la\", 1, 168, 42, 1], [1, \"la\", 4, 158, 48, 1], [1, \"la\", 4, 178, 57, 1], [1, \"la\", 4, 151, 69, 1], [1, \"la\", 2, 170, 74, 1], [1, \"la\", 2, 160, 84, 1], [1, \"la\", 2, 174, 92, 1], [1, \"la\", 2, 188, 90, 1], [1, \"la\", 2, 209, 84, 1], [1, \"la\", 2, 206, 93, 1], [1, \"la\", 5, 156, 70, 1], [1, \"la\", 5, 165, 57, 1], [1, \"la\", 5, 182, 58, 1], [1, \"la\", 5, 166, 44, 1], [1, \"la\", 1, 163, 39, 1], [1, \"la\", 1, 152, 53, 1], [1, \"la\", 1, 152, 37, 1], [1, \"la\", 2, 163, 13, 1], [1, \"de\", 12, 219, 12, 0], [1, \"de\", 14, 203, 13, 0], [1, \"de\", 15, 220, 19, 0], [1, \"de\", 12, 223, 15, 0], [1, \"de\", 12, 213, 10, 0], [1, \"de\", 37, 217, 19, 0], [1, \"de\", 38, 220, 14, 0], [1, \"de\", 38, 215, 10, 0], [1, \"de\", 40, 214, 14, 0], [1, \"de\", 40, 222, 16, 0], [1, \"de\", 40, 209, 18, 0], [1, \"de\", 37, 212, 18, 0], [1, \"de\", 38, 215, 26, 0], [1, \"de\", 37, 222, 25, 0], [1, \"de\", 40, 221, 29, 0], [1, \"de\", 12, 220, 27, 0], [1, \"de\", 13, 213, 27, 0], [1, \"de\", 14, 215, 30, 0], [1, \"de\", 15, 219, 33, 0], [1, \"de\", 38, 220, 31, 0], [1, \"de\", 38, 217, 35, 0], [1, \"de\", 40, 221, 34, 0], [1, \"de\", 39, 215, 32, 0], [1, \"de\", 37, 211, 35, 0], [1, \"de\", 12, 223, 38, 0], [1, \"de\", 13, 213, 38, 0], [1, \"de\", 14, 222, 44, 0], [1, \"de\", 15, 208, 33, 0], [1, \"de\", 15, 206, 23, 0], [1, \"de\", 13, 205, 28, 0], [1, \"de\", 14, 211, 23, 0], [1, \"de\", 14, 201, 20, 0], [1, \"de\", 15, 198, 9, 0], [1, \"de\", 15, 199, 16, 0], [1, \"de\", 12, 194, 15, 0], [1, \"de\", 12, 197, 23, 0], [1, \"de\", 37, 205, 13, 0], [1, \"de\", 39, 204, 9, 0], [1, \"de\", 40, 196, 12, 0], [1, \"de\", 40, 198, 18, 0], [1, \"de\", 37, 192, 11, 0], [1, \"de\", 37, 199, 24, 0], [1, \"de\", 37, 209, 24, 0], [1, \"de\", 39, 209, 30, 0], [1, \"de\", 39, 204, 31, 0], [1, \"de\", 39, 192, 24, 0], [1, \"de\", 40, 187, 23, 0], [1, \"de\", 38, 187, 18, 0], [1, \"de\", 39, 192, 18, 0], [1, \"de\", 37, 185, 15, 0], [1, \"de\", 12, 188, 15, 0], [1, \"de\", 13, 185, 13, 0], [1, \"de\", 14, 189, 9, 0], [1, \"de\", 15, 187, 22, 0], [1, \"de\", 15, 180, 9, 0], [1, \"de\", 12, 177, 14, 0], [1, \"de\", 14, 173, 9, 0], [1, \"de\", 14, 171, 15, 0], [1, \"de\", 40, 182, 9, 0], [1, \"de\", 39, 179, 13, 0], [1, \"de\", 39, 175, 9, 0], [1, \"de\", 40, 173, 14, 0], [1, \"de\", 37, 169, 11, 0], [1, \"de\", 37, 163, 10, 0], [1, \"de\", 38, 164, 15, 0], [1, \"de\", 39, 170, 20, 0], [1, \"de\", 40, 160, 17, 0], [1, \"de\", 40, 154, 10, 0], [1, \"de\", 40, 165, 23, 0], [1, \"de\", 40, 150, 19, 0], [1, \"de\", 37, 155, 16, 0], [1, \"de\", 39, 146, 10, 0], [1, \"de\", 12, 159, 12, 0], [1, \"de\", 13, 151, 9, 0], [1, \"de\", 14, 150, 14, 0], [1, \"de\", 15, 153, 19, 0], [1, \"de\", 13, 161, 25, 0], [1, \"de\", 14, 169, 25, 0], [1, \"de\", 15, 176, 25, 0], [1, \"de\", 12, 180, 29, 0], [1, \"de\", 12, 188, 31, 0], [1, \"de\", 14, 181, 36, 0], [1, \"de\", 37, 186, 33, 0], [1, \"de\", 38, 183, 26, 0], [1, \"de\", 39, 177, 21, 0], [1, \"de\", 40, 175, 31, 0], [1, \"de\", 37, 176, 39, 0], [1, \"de\", 37, 168, 34, 0], [1, \"de\", 38, 162, 32, 0], [1, \"de\", 38, 168, 45, 0], [1, \"de\", 38, 173, 45, 0], [1, \"de\", 39, 160, 35, 0], [1, \"de\", 40, 161, 42, 0], [1, \"de\", 40, 170, 39, 0], [1, \"de\", 40, 181, 43, 0], [1, \"de\", 40, 156, 26, 0], [1, \"de\", 40, 150, 32, 0], [1, \"de\", 37, 159, 26, 0], [1, \"de\", 37, 155, 40, 0], [1, \"de\", 37, 154, 45, 0], [1, \"de\", 39, 149, 45, 0], [1, \"de\", 40, 150, 50, 0], [1, \"de\", 40, 160, 52, 0], [1, \"de\", 37, 164, 52, 0], [1, \"de\", 38, 168, 50, 0], [1, \"de\", 12, 176, 45, 0], [1, \"de\", 12, 167, 32, 0], [1, \"de\", 13, 158, 32, 0], [1, \"de\", 14, 149, 28, 0], [1, \"de\", 15, 163, 30, 0], [1, \"de\", 14, 158, 39, 0], [1, \"de\", 12, 171, 43, 0], [1, \"de\", 12, 174, 36, 0], [1, \"de\", 12, 151, 43, 0], [1, \"de\", 13, 152, 48, 0], [1, \"de\", 14, 164, 49, 0], [1, \"de\", 15, 149, 52, 0], [1, \"de\", 12, 174, 49, 0], [1, \"de\", 13, 183, 51, 0], [1, \"de\", 14, 186, 48, 0], [1, \"de\", 37, 182, 48, 0], [1, \"de\", 38, 187, 52, 0], [1, \"de\", 39, 188, 43, 0], [1, \"de\", 37, 200, 38, 0], [1, \"de\", 40, 194, 37, 0], [1, \"de\", 39, 199, 44, 0], [1, \"de\", 38, 200, 49, 0], [1, \"de\", 37, 196, 54, 0], [1, \"de\", 12, 194, 40, 0], [1, \"de\", 13, 202, 45, 0], [1, \"de\", 14, 198, 47, 0], [1, \"de\", 15, 198, 55, 0], [1, \"de\", 15, 212, 54, 0], [1, \"de\", 15, 216, 63, 0], [1, \"de\", 14, 209, 62, 0], [1, \"de\", 12, 219, 60, 0], [1, \"de\", 12, 206, 56, 0], [1, \"de\", 12, 218, 72, 0], [1, \"de\", 12, 223, 67, 0], [1, \"de\", 12, 205, 64, 0], [1, \"de\", 12, 193, 63, 0], [1, \"de\", 14, 216, 80, 0], [1, \"de\", 14, 222, 87, 0], [1, \"de\", 38, 210, 53, 0], [1, \"de\", 37, 210, 47, 0], [1, \"de\", 37, 200, 63, 0], [1, \"de\", 37, 218, 62, 0], [1, \"de\", 37, 222, 60, 0], [1, \"de\", 37, 207, 70, 0], [1, \"de\", 38, 203, 68, 0], [1, \"de\", 38, 195, 66, 0], [1, \"de\", 38, 218, 55, 0], [1, \"de\", 38, 212, 61, 0], [1, \"de\", 38, 222, 70, 0], [1, \"de\", 38, 218, 70, 0], [1, \"de\", 40, 222, 81, 0], [1, \"de\", 38, 214, 79, 0], [1, \"de\", 39, 213, 83, 0], [1, \"de\", 39, 207, 76, 0], [1, \"de\", 39, 208, 86, 0], [1, \"de\", 39, 218, 87, 0], [1, \"de\", 39, 222, 93, 0], [1, \"de\", 39, 216, 96, 0], [1, \"de\", 39, 209, 94, 0], [1, \"de\", 39, 201, 87, 0], [1, \"de\", 39, 198, 82, 0], [1, \"de\", 39, 207, 99, 0], [1, \"de\", 39, 200, 97, 0], [1, \"de\", 39, 202, 92, 0], [1, \"de\", 37, 194, 97, 0], [1, \"de\", 39, 204, 88, 0], [1, \"de\", 39, 189, 90, 0], [1, \"de\", 39, 194, 81, 0], [1, \"de\", 39, 188, 98, 0], [1, \"de\", 37, 183, 91, 0], [1, \"de\", 37, 186, 80, 0], [1, \"de\", 37, 191, 72, 0], [1, \"de\", 38, 184, 77, 0], [1, \"de\", 38, 180, 80, 0], [1, \"de\", 39, 173, 75, 0], [1, \"de\", 40, 178, 87, 0], [1, \"de\", 40, 174, 94, 0], [1, \"de\", 40, 192, 93, 0], [1, \"de\", 40, 165, 92, 0], [1, \"de\", 37, 160, 89, 0], [1, \"de\", 38, 161, 85, 0], [1, \"de\", 38, 164, 98, 0], [1, \"de\", 38, 151, 99, 0], [1, \"de\", 38, 151, 85, 0], [1, \"de\", 40, 148, 83, 0], [1, \"de\", 40, 160, 77, 0], [1, \"de\", 40, 167, 77, 0], [1, \"de\", 40, 153, 69, 0], [1, \"de\", 40, 149, 74, 0], [1, \"de\", 37, 161, 64, 0], [1, \"de\", 37, 154, 61, 0], [1, \"de\", 39, 157, 55, 0], [1, \"de\", 39, 174, 64, 0], [1, \"de\", 39, 175, 56, 0], [1, \"de\", 39, 149, 67, 0], [1, \"de\", 12, 218, 96, 0], [1, \"de\", 13, 212, 95, 0], [1, \"de\", 14, 204, 85, 0], [1, \"de\", 15, 215, 85, 0], [1, \"de\", 15, 197, 97, 0], [1, \"de\", 12, 198, 87, 0], [1, \"de\", 14, 196, 77, 0], [1, \"de\", 13, 194, 86, 0], [1, \"de\", 15, 181, 84, 0], [1, \"de\", 14, 184, 79, 0], [1, \"de\", 14, 188, 93, 0], [1, \"de\", 13, 180, 87, 0], [1, \"de\", 13, 178, 96, 0], [1, \"de\", 13, 163, 95, 0], [1, \"de\", 15, 172, 88, 0], [1, \"de\", 15, 176, 75, 0], [1, \"de\", 14, 172, 72, 0], [1, \"de\", 14, 169, 82, 0], [1, \"de\", 13, 164, 78, 0], [1, \"de\", 13, 158, 87, 0], [1, \"de\", 13, 149, 86, 0], [1, \"de\", 15, 154, 91, 0], [1, \"de\", 15, 160, 74, 0], [1, \"de\", 14, 152, 76, 0], [1, \"de\", 14, 158, 63, 0], [1, \"de\", 14, 150, 60, 0], [1, \"de\", 12, 169, 59, 0], [1, \"de\", 13, 173, 61, 0], [1, \"cs\", 1, 143, 104, 1], [1, \"cs\", 0, 141, 102, 1], [1, \"cs\", 3, 138, 102, 1], [1, \"cs\", 2, 139, 102, 1], [1, \"cs\", 2, 140, 102, 1], [1, \"cs\", 3, 143, 107, 1], [1, \"cs\", 0, 143, 106, 1], [1, \"cs\", 2, 143, 105, 1], [1, \"cs\", 2, 142, 103, 1], [1, \"cs\", 0, 142, 104, 1], [1, \"cs\", 2, 141, 103, 1], [1, \"cs\", 3, 142, 105, 1], [1, \"cs\", 3, 140, 103, 1], [1, \"cs\", 3, 141, 104, 1], [1, \"la\", 4, 151, 23, 1], [1, \"la\", 4, 150, 22, 1], [1, \"la\", 1, 149, 21, 1], [1, \"la\", 4, 148, 21, 1], [1, \"la\", 2, 147, 20, 1], [1, \"la\", 4, 147, 19, 1], [1, \"la\", 5, 147, 18, 1], [1, \"la\", 1, 147, 17, 1], [1, \"la\", 3, 144, 9, 1], [1, \"la\", 5, 147, 16, 1], [1, \"la\", 2, 147, 15, 1], [1, \"la\", 4, 147, 14, 1], [1, \"la\", 4, 145, 11, 1], [1, \"la\", 5, 145, 12, 1], [1, \"la\", 1, 146, 13, 1], [1, \"la\", 2, 145, 13, 1], [1, \"la\", 3, 155, 25, 1], [1, \"la\", 0, 155, 24, 1], [1, \"la\", 3, 153, 26, 1], [1, \"cs\", 0, 151, 24, 1], [1, \"cs\", 0, 153, 22, 1], [1, \"cs\", 3, 152, 22, 1], [1, \"cs\", 3, 154, 22, 1], [1, \"cs\", 1, 157, 26, 1], [1, \"cs\", 2, 157, 24, 1], [1, \"cs\", 2, 156, 26, 1], [1, \"cs\", 2, 154, 28, 1], [1, \"cs\", 2, 151, 26, 1], [1, \"cs\", 2, 152, 25, 1], [1, \"cs\", 2, 151, 25, 1], [1, \"cs\", 2, 156, 27, 1], [1, \"cs\", 2, 157, 23, 1], [1, \"cs\", 2, 157, 22, 1], [1, \"cs\", 3, 150, 24, 1], [1, \"cs\", 3, 150, 23, 1], [1, \"de\", 38, 155, 29, 0], [1, \"de\", 12, 157, 27, 0], [1, \"de\", 14, 153, 29, 0], [1, \"de\", 15, 158, 23, 0], [1, \"de\", 13, 156, 21, 0], [1, \"de\", 13, 147, 36, 0], [1, \"de\", 13, 161, 56, 0], [1, \"de\", 13, 147, 79, 0], [1, \"de\", 12, 157, 99, 0], [1, \"de\", 12, 172, 99, 0], [1, \"la\", 3, 143, 102, 1], [1, \"la\", 4, 149, 96, 1], [1, \"la\", 4, 145, 102, 1], [1, \"la\", 1, 148, 97, 1], [1, \"la\", 5, 148, 98, 1], [1, \"cs\", 3, 144, 104, 1], [1, \"cs\", 3, 144, 103, 1], [1, \"cs\", 3, 145, 103, 1], [1, \"cs\", 3, 145, 104, 1], [1, \"cs\", 3, 142, 101, 1], [1, \"cs\", 3, 143, 100, 1], [1, \"cs\", 3, 141, 101, 1], [1, \"cs\", 3, 142, 100, 1], [1, \"cs\", 0, 141, 100, 1], [1, \"cs\", 2, 140, 101, 1], [1, \"cs\", 2, 144, 105, 1], [1, \"cs\", 3, 146, 103, 1], [1, \"cs\", 3, 146, 102, 1], [1, \"cs\", 3, 150, 95, 1], [1, \"cs\", 0, 150, 97, 1], [1, \"cs\", 2, 151, 98, 1], [1, \"cs\", 0, 153, 97, 1], [1, \"cs\", 3, 153, 96, 1], [1, \"cs\", 2, 149, 95, 1], [1, \"s\", 0, 213, 127, 1], [1, \"plm\", 1, 214, 131, 0], [1, \"plm\", 1, 207, 128, 0], [1, \"plm\", 0, 208, 127, 0], [1, \"s\", 1, 207, 132, 1], [1, \"s\", 2, 208, 133, 1], [1, \"plm\", 0, 217, 132, 0], [1, \"plm\", 2, 186, 158, 0], [1, \"plm\", 0, 184, 160, 0], [1, \"s\", 1, 183, 156, 1], [1, \"s\", 2, 186, 159, 1], [1, \"p\", 0, 182, 157, 1], [1, \"p\", 0, 114, 205, 1], [1, \"plm\", 1, 117, 204, 0], [1, \"plm\", 0, 117, 205, 0], [1, \"plm\", 2, 112, 204, 0], [1, \"s\", 2, 114, 207, 1], [1, \"s\", 2, 115, 204, 1], [1, \"plm\", 2, 122, 151, 0], [1, \"plm\", 1, 123, 150, 0], [1, \"plm\", 1, 117, 151, 0], [1, \"s\", 0, 118, 150, 1], [1, \"s\", 1, 122, 152, 1], [1, \"plm\", 2, 156, 130, 0], [1, \"plm\", 1, 154, 127, 0], [1, \"s\", 0, 153, 128, 1], [1, \"s\", 2, 152, 130, 1], [1, \"p\", 0, 123, 65, 1], [1, \"plm\", 2, 125, 62, 0], [1, \"plm\", 1, 124, 62, 0], [1, \"plm\", 0, 120, 65, 0], [1, \"s\", 1, 125, 63, 1], [1, \"s\", 1, 121, 64, 1], [1, \"s\", 2, 122, 62, 1], [1, \"cs\", 0, 140, 106, 1], [1, \"cs\", 2, 144, 106, 1], [1, \"cs\", 2, 145, 105, 1], [1, \"cs\", 2, 144, 107, 1], [1, \"cs\", 2, 141, 106, 1], [1, \"cs\", 2, 141, 105, 1], [1, \"cs\", 2, 140, 105, 1], [1, \"cs\", 2, 140, 104, 1], [1, \"cs\", 1, 138, 103, 1], [1, \"cs\", 0, 139, 104, 1], [1, \"cs\", 2, 139, 103, 1], [1, \"cs\", 2, 139, 105, 1], [1, \"cs\", 2, 142, 106, 1], [1, \"cs\", 2, 142, 107, 1], [1, \"cs\", 2, 139, 101, 1], [1, \"de\", 19, 27, 264, 0], [1, \"la\", 4, 147, 99, 1], [1, \"la\", 1, 146, 100, 1], [1, \"la\", 4, 145, 101, 1], [1, \"cs\", 1, 215, 47, 1], [1, \"cs\", 2, 216, 47, 1], [1, \"cs\", 2, 215, 48, 1], [1, \"la\", 4, 214, 45, 1], [1, \"la\", 4, 215, 45, 1], [1, \"la\", 0, 216, 46, 1], [1, \"la\", 4, 216, 48, 1], [1, \"la\", 4, 216, 49, 1], [1, \"la\", 4, 217, 50, 1], [1, \"la\", 3, 214, 49, 1], [1, \"la\", 4, 211, 45, 1], [1, \"la\", 3, 213, 47, 1], [1, \"cs\", 2, 224, 48, 1], [1, \"plm\", 2, 111, 243, 0], [1, \"plm\", 1, 108, 246, 0], [1, \"s\", 1, 110, 243, 1], [1, \"s\", 0, 108, 245, 1], [1, \"s\", 0, 121, 276, 1], [1, \"plm\", 2, 122, 277, 0], [1, \"plm\", 2, 117, 276, 0], [1, \"plm\", 1, 118, 277, 0], [1, \"s\", 1, 118, 278, 1], [1, \"cs\", 2, 66, 16, 1], [1, \"cs\", 3, 67, 16, 1], [1, \"cs\", 0, 67, 17, 1], [1, \"cs\", 2, 66, 17, 1], [1, \"cs\", 3, 66, 18, 1], [1, \"cs\", 3, 68, 17, 1], [1, \"cs\", 0, 36, 16, 1], [1, \"cs\", 2, 36, 17, 1], [1, \"cs\", 2, 36, 18, 1], [1, \"cs\", 3, 35, 17, 1], [1, \"cs\", 3, 36, 19, 1], [1, \"cs\", 3, 35, 18, 1], [1, \"cs\", 2, 66, 30, 1], [1, \"cs\", 2, 66, 23, 1], [1, \"cs\", 3, 66, 22, 1], [1, \"cs\", 3, 66, 31, 1], [1, \"cs\", 2, 36, 30, 1], [1, \"cs\", 2, 36, 23, 1], [1, \"cs\", 1, 36, 22, 1], [1, \"cs\", 2, 36, 31, 1], [1, \"cs\", 3, 42, 13, 1], [1, \"cs\", 0, 43, 13, 1], [1, \"cs\", 2, 44, 13, 1], [1, \"cs\", 3, 42, 16, 1], [1, \"cs\", 3, 41, 16, 1], [1, \"cs\", 3, 40, 16, 1], [1, \"cs\", 0, 42, 19, 1], [1, \"cs\", 3, 43, 19, 1], [1, \"cs\", 3, 44, 19, 1], [1, \"cs\", 3, 45, 19, 1], [1, \"cs\", 2, 46, 19, 1], [1, \"cs\", 0, 43, 22, 1], [1, \"cs\", 2, 42, 22, 1], [1, \"cs\", 1, 41, 22, 1], [1, \"cs\", 0, 40, 22, 1], [1, \"cs\", 3, 39, 17, 1], [1, \"cs\", 1, 44, 26, 1], [1, \"cs\", 2, 45, 26, 1], [1, \"cs\", 3, 46, 26, 1], [1, \"cs\", 0, 47, 26, 1], [1, \"cs\", 2, 48, 26, 1], [1, \"cs\", 3, 47, 25, 1], [1, \"cs\", 3, 43, 27, 1], [1, \"cs\", 1, 49, 32, 1], [1, \"cs\", 2, 50, 32, 1], [1, \"cs\", 2, 51, 32, 1], [1, \"cs\", 2, 52, 32, 1], [1, \"d\", 0, 51, 29, 1], [1, \"d\", 1, 53, 29, 1], [1, \"d\", 1, 49, 29, 1], [1, \"cs\", 3, 55, 31, 1], [1, \"cs\", 3, 54, 32, 1], [1, \"cs\", 3, 47, 31, 1], [1, \"cs\", 3, 48, 32, 1], [1, \"cs\", 0, 51, 33, 1], [1, \"cs\", 2, 52, 33, 1], [1, \"cs\", 2, 50, 33, 1], [1, \"cs\", 3, 56, 30, 1], [1, \"cs\", 3, 56, 31, 1], [1, \"cs\", 3, 46, 30, 1], [1, \"cs\", 3, 46, 31, 1], [1, \"cs\", 1, 53, 33, 1], [1, \"cs\", 2, 49, 33, 1], [1, \"cs\", 2, 53, 32, 1], [1, \"cs\", 0, 55, 32, 1], [1, \"cs\", 0, 47, 32, 1], [1, \"d\", 1, 54, 35, 1], [1, \"fo\", 2, 35, 15, 0], [1, \"fo\", 2, 36, 12, 0], [1, \"fo\", 2, 67, 15, 0], [1, \"cs\", 3, 60, 13, 1], [1, \"cs\", 2, 59, 13, 1], [1, \"cs\", 1, 58, 13, 1], [1, \"cs\", 3, 62, 16, 1], [1, \"cs\", 0, 61, 16, 1], [1, \"cs\", 3, 60, 16, 1], [1, \"cs\", 3, 63, 17, 1], [1, \"cs\", 2, 60, 19, 1], [1, \"cs\", 1, 59, 19, 1], [1, \"cs\", 3, 58, 19, 1], [1, \"cs\", 2, 57, 19, 1], [1, \"cs\", 2, 56, 19, 1], [1, \"cs\", 0, 55, 18, 1], [1, \"cs\", 2, 55, 17, 1], [1, \"cs\", 2, 63, 23, 1], [1, \"cs\", 0, 62, 22, 1], [1, \"cs\", 2, 61, 22, 1], [1, \"cs\", 1, 60, 22, 1], [1, \"cs\", 0, 59, 22, 1], [1, \"cs\", 2, 54, 26, 1], [1, \"cs\", 2, 55, 26, 1], [1, \"cs\", 2, 56, 26, 1], [1, \"cs\", 1, 57, 26, 1], [1, \"cs\", 2, 58, 26, 1], [1, \"cs\", 2, 59, 27, 1], [1, \"cs\", 2, 68, 16, 1], [1, \"cs\", 2, 68, 15, 1], [1, \"cs\", 3, 69, 15, 1], [1, \"cs\", 3, 70, 15, 1], [1, \"cs\", 3, 70, 14, 1], [1, \"cs\", 1, 69, 14, 1], [1, \"cs\", 1, 69, 16, 1], [1, \"cs\", 2, 71, 13, 1], [1, \"cs\", 2, 71, 14, 1], [1, \"cs\", 3, 72, 13, 1], [1, \"cs\", 3, 70, 8, 1], [1, \"cs\", 3, 71, 8, 1], [1, \"cs\", 2, 72, 8, 1], [1, \"cs\", 0, 73, 8, 1], [1, \"cs\", 3, 74, 9, 1], [1, \"cs\", 3, 74, 8, 1], [1, \"cs\", 0, 75, 8, 1], [1, \"cs\", 3, 76, 8, 1], [1, \"cs\", 3, 75, 9, 1], [1, \"cs\", 3, 75, 10, 1], [1, \"cs\", 0, 76, 10, 1], [1, \"cs\", 0, 76, 16, 1], [1, \"cs\", 3, 76, 15, 1], [1, \"cs\", 3, 75, 16, 1], [1, \"cs\", 2, 77, 11, 1], [1, \"cs\", 2, 77, 14, 1], [1, \"cs\", 3, 77, 12, 1], [1, \"cs\", 3, 77, 13, 1], [1, \"cs\", 3, 77, 15, 1], [1, \"cs\", 0, 74, 18, 1], [1, \"cs\", 1, 75, 17, 1], [1, \"cs\", 2, 74, 17, 1], [1, \"cs\", 3, 73, 19, 1], [1, \"cs\", 3, 67, 23, 1], [1, \"cs\", 0, 68, 23, 1], [1, \"cs\", 0, 72, 20, 1], [1, \"cs\", 2, 73, 20, 1], [1, \"cs\", 2, 74, 19, 1], [1, \"cs\", 2, 74, 36, 1], [1, \"cs\", 2, 77, 27, 1], [1, \"cs\", 2, 76, 26, 1], [1, \"cs\", 2, 75, 26, 1], [1, \"cs\", 0, 74, 26, 1], [1, \"cs\", 2, 75, 25, 1], [1, \"cs\", 0, 76, 25, 1], [1, \"cs\", 1, 77, 23, 1], [1, \"cs\", 2, 77, 16, 1], [1, \"cs\", 2, 76, 17, 1], [1, \"cs\", 2, 76, 24, 1], [1, \"cs\", 2, 77, 24, 1], [1, \"cs\", 2, 77, 25, 1], [1, \"cs\", 2, 77, 26, 1], [1, \"cs\", 1, 75, 27, 1], [1, \"cs\", 3, 76, 27, 1], [1, \"cs\", 2, 67, 24, 1], [1, \"cs\", 2, 66, 24, 1], [1, \"cs\", 2, 73, 26, 1], [1, \"cs\", 2, 74, 27, 1], [1, \"cs\", 2, 74, 25, 1], [1, \"cs\", 2, 66, 19, 1], [1, \"cs\", 2, 66, 20, 1], [1, \"cs\", 2, 66, 21, 1], [1, \"cs\", 2, 67, 18, 1], [1, \"cs\", 2, 67, 22, 1], [1, \"cs\", 0, 77, 36, 1], [1, \"cs\", 0, 77, 32, 1], [1, \"cs\", 1, 75, 35, 1], [1, \"cs\", 2, 75, 36, 1], [1, \"cs\", 2, 76, 36, 1], [1, \"cs\", 2, 77, 35, 1], [1, \"cs\", 2, 77, 34, 1], [1, \"cs\", 2, 76, 35, 1], [1, \"cs\", 2, 77, 33, 1], [1, \"cs\", 2, 77, 31, 1], [1, \"cs\", 0, 77, 29, 1], [1, \"cs\", 0, 71, 32, 1], [1, \"cs\", 0, 76, 34, 1], [1, \"cs\", 2, 77, 30, 1], [1, \"cs\", 2, 77, 28, 1], [1, \"cs\", 2, 76, 28, 1], [1, \"cs\", 2, 75, 28, 1], [1, \"cs\", 2, 76, 29, 1], [1, \"cs\", 2, 76, 33, 1], [1, \"cs\", 2, 70, 32, 1], [1, \"cs\", 2, 69, 31, 1], [1, \"cs\", 0, 68, 31, 1], [1, \"cs\", 2, 67, 31, 1], [1, \"cs\", 2, 67, 30, 1], [1, \"cs\", 2, 69, 32, 1], [1, \"cs\", 1, 67, 32, 1], [1, \"cs\", 2, 68, 32, 1], [1, \"cs\", 2, 66, 32, 1], [1, \"cs\", 2, 66, 33, 1], [1, \"cs\", 2, 67, 33, 1], [1, \"cs\", 2, 70, 33, 1], [1, \"cs\", 2, 69, 33, 1], [1, \"cs\", 2, 68, 33, 1], [1, \"cs\", 0, 68, 34, 1], [1, \"cs\", 1, 66, 35, 1], [1, \"cs\", 2, 67, 34, 1], [1, \"cs\", 2, 66, 34, 1], [1, \"cs\", 2, 65, 35, 1], [1, \"cs\", 2, 64, 36, 1], [1, \"cs\", 2, 65, 36, 1], [1, \"cs\", 2, 67, 35, 1], [1, \"cs\", 2, 66, 36, 1], [1, \"cs\", 2, 69, 34, 1], [1, \"cs\", 2, 68, 35, 1], [1, \"cs\", 2, 76, 9, 1], [1, \"cs\", 2, 77, 9, 1], [1, \"cs\", 2, 77, 8, 1], [1, \"cs\", 2, 77, 10, 1], [1, \"cs\", 2, 78, 8, 1], [1, \"cs\", 2, 78, 9, 1], [1, \"cs\", 2, 78, 10, 1], [1, \"cs\", 2, 78, 11, 1], [1, \"cs\", 2, 78, 12, 1], [1, \"cs\", 2, 78, 13, 1], [1, \"cs\", 0, 79, 9, 1], [1, \"cs\", 1, 79, 11, 1], [1, \"cs\", 3, 79, 8, 1], [1, \"cs\", 3, 79, 10, 1], [1, \"cs\", 3, 79, 12, 1], [1, \"cs\", 3, 80, 8, 1], [1, \"cs\", 1, 80, 10, 1], [1, \"cs\", 2, 80, 9, 1], [1, \"cs\", 2, 80, 11, 1], [1, \"cs\", 2, 81, 8, 1], [1, \"cs\", 2, 81, 9, 1], [1, \"cs\", 2, 81, 10, 1], [1, \"cs\", 2, 78, 14, 1], [1, \"cs\", 2, 79, 13, 1], [1, \"cs\", 2, 78, 15, 1], [1, \"cs\", 2, 80, 12, 1], [1, \"cs\", 0, 79, 14, 1], [1, \"cs\", 0, 82, 9, 1], [1, \"cs\", 2, 82, 8, 1], [1, \"cs\", 2, 82, 10, 1], [1, \"cs\", 2, 81, 11, 1], [1, \"cs\", 3, 80, 13, 1], [1, \"cs\", 1, 78, 30, 1], [1, \"cs\", 1, 78, 34, 1], [1, \"cs\", 1, 78, 27, 1], [1, \"cs\", 0, 78, 25, 1], [1, \"cs\", 0, 79, 29, 1], [1, \"cs\", 0, 79, 32, 1], [1, \"cs\", 0, 79, 35, 1], [1, \"cs\", 2, 78, 35, 1], [1, \"cs\", 2, 78, 36, 1], [1, \"cs\", 2, 79, 34, 1], [1, \"cs\", 2, 78, 33, 1], [1, \"cs\", 2, 79, 33, 1], [1, \"cs\", 2, 78, 32, 1], [1, \"cs\", 2, 78, 31, 1], [1, \"cs\", 2, 79, 31, 1], [1, \"cs\", 2, 79, 30, 1], [1, \"cs\", 2, 78, 29, 1], [1, \"cs\", 2, 78, 28, 1], [1, \"cs\", 2, 79, 28, 1], [1, \"cs\", 2, 79, 27, 1], [1, \"cs\", 2, 78, 26, 1], [1, \"cs\", 2, 79, 26, 1], [1, \"cs\", 2, 78, 24, 1], [1, \"cs\", 2, 80, 34, 1], [1, \"cs\", 2, 80, 33, 1], [1, \"cs\", 2, 80, 31, 1], [1, \"cs\", 2, 80, 30, 1], [1, \"cs\", 2, 80, 32, 1], [1, \"cs\", 2, 80, 29, 1], [1, \"cs\", 2, 80, 28, 1], [1, \"cs\", 2, 80, 27, 1], [1, \"cs\", 0, 81, 30, 1], [1, \"cs\", 1, 81, 32, 1], [1, \"cs\", 1, 81, 28, 1], [1, \"cs\", 2, 81, 29, 1], [1, \"cs\", 2, 81, 31, 1], [1, \"cs\", 2, 81, 33, 1], [1, \"cs\", 2, 82, 30, 1], [1, \"cs\", 2, 82, 31, 1], [1, \"cs\", 2, 82, 32, 1], [1, \"cs\", 0, 37, 36, 1], [1, \"cs\", 2, 38, 36, 1], [1, \"cs\", 2, 37, 35, 1], [1, \"cs\", 2, 36, 36, 1], [1, \"cs\", 2, 34, 35, 1], [1, \"cs\", 2, 35, 35, 1], [1, \"cs\", 2, 36, 35, 1], [1, \"cs\", 0, 33, 34, 1], [1, \"cs\", 1, 35, 34, 1], [1, \"cs\", 2, 36, 34, 1], [1, \"cs\", 2, 34, 34, 1], [1, \"cs\", 2, 36, 33, 1], [1, \"cs\", 2, 35, 33, 1], [1, \"cs\", 2, 34, 33, 1], [1, \"cs\", 2, 33, 33, 1], [1, \"cs\", 2, 31, 32, 1], [1, \"cs\", 1, 36, 32, 1], [1, \"cs\", 1, 32, 32, 1], [1, \"cs\", 2, 35, 32, 1], [1, \"cs\", 2, 33, 32, 1], [1, \"cs\", 2, 32, 33, 1], [1, \"cs\", 2, 33, 31, 1], [1, \"cs\", 2, 34, 31, 1], [1, \"cs\", 2, 35, 31, 1], [1, \"cs\", 0, 34, 32, 1], [1, \"cs\", 2, 35, 30, 1], [1, \"cs\", 1, 39, 23, 1], [1, \"cs\", 3, 39, 22, 1], [1, \"cs\", 3, 36, 24, 1], [1, \"cs\", 3, 35, 24, 1], [1, \"cs\", 2, 34, 23, 1], [1, \"cs\", 2, 35, 23, 1], [1, \"cs\", 2, 36, 20, 1], [1, \"cs\", 2, 36, 21, 1], [1, \"cs\", 2, 35, 22, 1], [1, \"cs\", 2, 35, 16, 1], [1, \"cs\", 2, 34, 16, 1], [1, \"cs\", 2, 33, 16, 1], [1, \"cs\", 0, 34, 17, 1], [1, \"cs\", 0, 32, 15, 1], [1, \"cs\", 2, 31, 14, 1], [1, \"cs\", 3, 30, 13, 1], [1, \"cs\", 1, 33, 15, 1], [1, \"cs\", 1, 31, 13, 1], [1, \"cs\", 2, 32, 14, 1], [1, \"cs\", 0, 31, 8, 1], [1, \"cs\", 2, 32, 8, 1], [1, \"cs\", 2, 25, 13, 1], [1, \"cs\", 0, 25, 12, 1], [1, \"cs\", 2, 25, 11, 1], [1, \"cs\", 3, 25, 10, 1], [1, \"cs\", 0, 25, 9, 1], [1, \"cs\", 2, 25, 8, 1], [1, \"cs\", 2, 26, 8, 1], [1, \"cs\", 2, 27, 8, 1], [1, \"cs\", 2, 28, 8, 1], [1, \"cs\", 2, 29, 8, 1], [1, \"cs\", 2, 30, 8, 1], [1, \"cs\", 2, 26, 9, 1], [1, \"cs\", 2, 27, 9, 1], [1, \"cs\", 2, 26, 10, 1], [1, \"cs\", 1, 27, 10, 1], [1, \"cs\", 3, 28, 9, 1], [1, \"cs\", 3, 25, 14, 1], [1, \"cs\", 0, 25, 15, 1], [1, \"cs\", 2, 26, 15, 1], [1, \"cs\", 3, 27, 16, 1], [1, \"cs\", 0, 28, 17, 1], [1, \"cs\", 1, 29, 18, 1], [1, \"cs\", 2, 26, 16, 1], [1, \"cs\", 2, 25, 16, 1], [1, \"cs\", 2, 27, 17, 1], [1, \"cs\", 2, 26, 17, 1], [1, \"cs\", 1, 27, 18, 1], [1, \"cs\", 2, 28, 18, 1], [1, \"cs\", 2, 30, 19, 1], [1, \"cs\", 2, 29, 19, 1], [1, \"cs\", 2, 24, 14, 1], [1, \"cs\", 2, 24, 15, 1], [1, \"cs\", 0, 23, 14, 1], [1, \"cs\", 2, 24, 10, 1], [1, \"cs\", 2, 24, 11, 1], [1, \"cs\", 2, 24, 12, 1], [1, \"cs\", 2, 24, 13, 1], [1, \"cs\", 1, 23, 10, 1], [1, \"cs\", 0, 22, 8, 1], [1, \"cs\", 0, 22, 12, 1], [1, \"cs\", 1, 23, 8, 1], [1, \"cs\", 2, 24, 8, 1], [1, \"cs\", 2, 24, 9, 1], [1, \"cs\", 2, 23, 9, 1], [1, \"cs\", 2, 22, 9, 1], [1, \"cs\", 2, 22, 10, 1], [1, \"cs\", 2, 22, 11, 1], [1, \"cs\", 2, 23, 11, 1], [1, \"cs\", 2, 23, 12, 1], [1, \"cs\", 2, 23, 13, 1], [1, \"cs\", 2, 22, 13, 1], [1, \"cs\", 2, 21, 9, 1], [1, \"cs\", 2, 21, 8, 1], [1, \"cs\", 2, 29, 25, 1], [1, \"cs\", 2, 25, 24, 1], [1, \"cs\", 2, 26, 25, 1], [1, \"cs\", 2, 27, 25, 1], [1, \"cs\", 0, 28, 25, 1], [1, \"cs\", 1, 25, 23, 1], [1, \"cs\", 2, 26, 24, 1], [1, \"cs\", 0, 24, 25, 1], [1, \"cs\", 3, 23, 24, 1], [1, \"cs\", 3, 24, 24, 1], [1, \"cs\", 3, 25, 25, 1], [1, \"cs\", 3, 23, 25, 1], [1, \"cs\", 1, 22, 26, 1], [1, \"cs\", 1, 26, 26, 1], [1, \"cs\", 1, 29, 26, 1], [1, \"cs\", 2, 23, 26, 1], [1, \"cs\", 2, 24, 26, 1], [1, \"cs\", 2, 25, 26, 1], [1, \"cs\", 2, 27, 26, 1], [1, \"cs\", 2, 28, 26, 1], [1, \"cs\", 2, 30, 26, 1], [1, \"cs\", 2, 29, 27, 1], [1, \"cs\", 2, 28, 28, 1], [1, \"cs\", 1, 26, 29, 1], [1, \"cs\", 0, 28, 27, 1], [1, \"cs\", 2, 27, 28, 1], [1, \"cs\", 2, 27, 27, 1], [1, \"cs\", 2, 26, 28, 1], [1, \"cs\", 2, 26, 27, 1], [1, \"cs\", 2, 25, 28, 1], [1, \"cs\", 2, 25, 27, 1], [1, \"cs\", 2, 23, 27, 1], [1, \"cs\", 2, 22, 27, 1], [1, \"cs\", 2, 24, 27, 1], [1, \"cs\", 0, 24, 28, 1], [1, \"cs\", 0, 25, 32, 1], [1, \"cs\", 1, 24, 30, 1], [1, \"cs\", 2, 25, 31, 1], [1, \"cs\", 2, 25, 30, 1], [1, \"cs\", 2, 25, 29, 1], [1, \"cs\", 2, 24, 29, 1], [1, \"cs\", 2, 23, 29, 1], [1, \"cs\", 2, 26, 33, 1], [1, \"cs\", 0, 26, 34, 1], [1, \"cs\", 2, 27, 35, 1], [1, \"cs\", 2, 22, 28, 1], [1, \"cs\", 2, 23, 28, 1], [1, \"cs\", 2, 24, 31, 1], [1, \"cs\", 2, 24, 32, 1], [1, \"cs\", 2, 25, 33, 1], [1, \"cs\", 2, 26, 35, 1], [1, \"cs\", 2, 24, 33, 1], [1, \"cs\", 2, 25, 34, 1], [1, \"cs\", 1, 22, 29, 1], [1, \"cs\", 1, 24, 34, 1], [1, \"cs\", 0, 23, 35, 1], [1, \"cs\", 2, 25, 35, 1], [1, \"cs\", 2, 24, 35, 1], [1, \"cs\", 2, 23, 34, 1], [1, \"cs\", 2, 23, 33, 1], [1, \"cs\", 0, 22, 33, 1], [1, \"cs\", 1, 23, 32, 1], [1, \"cs\", 2, 22, 32, 1], [1, \"cs\", 2, 23, 31, 1], [1, \"cs\", 2, 23, 30, 1], [1, \"cs\", 2, 22, 30, 1], [1, \"cs\", 2, 22, 31, 1], [1, \"cs\", 1, 21, 31, 1], [1, \"cs\", 0, 21, 29, 1], [1, \"cs\", 2, 21, 30, 1], [1, \"cs\", 2, 24, 36, 1], [1, \"cs\", 2, 26, 36, 1], [1, \"cs\", 2, 25, 36, 1], [1, \"cs\", 2, 27, 36, 1], [1, \"cs\", 2, 28, 36, 1], [1, \"d\", 2, 83, 65, 1], [1, \"d\", 2, 16, 67, 1], [1, \"g\", 0, 15, 17, 1], [1, \"s\", 0, 18, 13, 1], [1, \"s\", 0, 85, 11, 1], [1, \"f\", 0, 41, 102, 1], [1, \"f\", 0, 42, 124, 1], [1, \"f\", 0, 64, 116, 1], [1, \"f\", 0, 74, 104, 1], [1, \"f\", 0, 70, 87, 1], [1, \"f\", 0, 27, 96, 1], [1, \"f\", 0, 22, 79, 1], [1, \"f\", 0, 20, 117, 1], [1, \"f\", 0, 30, 137, 1], [1, \"f\", 0, 59, 146, 1], [1, \"f\", 0, 52, 147, 1], [1, \"f\", 0, 20, 149, 1], [1, \"f\", 0, 36, 146, 1], [1, \"f\", 0, 62, 124, 1], [1, \"g\", 1, 34, 121, 1], [1, \"g\", 1, 52, 116, 1], [1, \"g\", 1, 78, 116, 1], [1, \"g\", 1, 71, 129, 1], [1, \"s\", 0, 53, 100, 1], [1, \"s\", 0, 73, 111, 1], [1, \"s\", 0, 77, 126, 1], [1, \"s\", 0, 48, 90, 1], [1, \"s\", 0, 19, 102, 1], [1, \"s\", 0, 18, 127, 1], [1, \"s\", 0, 35, 159, 1], [1, \"s\", 0, 65, 54, 1], [1, \"s\", 0, 44, 52, 1], [1, \"s\", 0, 26, 51, 1], [1, \"f\", 1, 56, 136, 1], [1, \"f\", 1, 41, 133, 1], [1, \"f\", 1, 80, 120, 1], [1, \"f\", 1, 16, 117, 1], [1, \"f\", 1, 13, 99, 1], [1, \"f\", 1, 17, 89, 1], [1, \"f\", 1, 90, 98, 1], [1, \"f\", 1, 84, 95, 1], [1, \"f\", 1, 16, 57, 1], [1, \"f\", 1, 77, 53, 1], [1, \"d\", 1, 48, 35, 1], [1, \"de\", 8, 33, 13, 0], [1, \"de\", 8, 30, 9, 0], [1, \"de\", 9, 32, 30, 0], [1, \"de\", 10, 30, 25, 0], [1, \"de\", 10, 33, 21, 0], [1, \"de\", 8, 31, 34, 0], [1, \"de\", 8, 67, 29, 0], [1, \"de\", 9, 70, 22, 0], [1, \"de\", 10, 70, 16, 0], [1, \"de\", 10, 75, 11, 0], [1, \"de\", 8, 68, 10, 0], [1, \"de\", 8, 75, 30, 0], [1, \"de\", 11, 71, 33, 0], [1, \"de\", 11, 72, 25, 0], [1, \"de\", 11, 64, 25, 0], [1, \"de\", 11, 52, 10, 0], [1, \"de\", 11, 31, 15, 0], [1, \"de\", 30, 29, 14, 0], [1, \"de\", 30, 36, 15, 0], [1, \"de\", 30, 34, 29, 0], [1, \"de\", 30, 30, 29, 0], [1, \"de\", 30, 71, 29, 0], [1, \"de\", 28, 68, 25, 0], [1, \"de\", 28, 75, 15, 0], [1, \"de\", 27, 67, 19, 0], [1, \"de\", 29, 72, 10, 0], [1, \"de\", 29, 75, 32, 0], [1, \"de\", 29, 32, 20, 0], [1, \"fo\", 1, 39, 12, 0], [1, \"fo\", 1, 34, 14, 0], [1, \"fo\", 1, 74, 28, 0], [1, \"fo\", 2, 74, 29, 0], [1, \"fo\", 2, 69, 30, 0], [1, \"fo\", 2, 77, 22, 0], [1, \"fo\", 2, 74, 21, 0], [1, \"fo\", 2, 76, 18, 0], [1, \"fo\", 1, 78, 17, 0], [1, \"fo\", 1, 28, 19, 0], [1, \"fo\", 2, 27, 24, 0], [1, \"fo\", 2, 24, 17, 0], [1, \"fo\", 2, 29, 21, 0], [1, \"fo\", 1, 27, 32, 0], [1, \"fo\", 2, 30, 33, 0], [1, \"fo\", 1, 29, 28, 0], [1, \"fo\", 2, 28, 31, 0], [1, \"fo\", 2, 20, 24, 0], [1, \"fo\", 2, 20, 26, 0], [1, \"fo\", 2, 23, 16, 0], [1, \"fo\", 2, 11, 25, 0], [1, \"de\", 33, 29, 22, 0], [1, \"de\", 34, 32, 25, 0], [1, \"de\", 34, 30, 18, 0], [1, \"de\", 33, 78, 18, 0], [1, \"de\", 33, 73, 35, 0], [1, \"de\", 36, 72, 23, 0], [1, \"de\", 35, 25, 18, 0], [1, \"d\", 1, 83, 41, 1], [1, \"d\", 1, 17, 40, 1], [1, \"cs\", 2, 224, 104, 1], [1, \"cs\", 0, 224, 105, 1], [1, \"cs\", 3, 224, 106, 1], [1, \"la\", 3, 216, 128, 1], [1, \"la\", 0, 215, 126, 1], [1, \"s\", 0, 216, 130, 1], [1, \"s\", 1, 217, 129, 1], [1, \"s\", 0, 218, 128, 1], [1, \"s\", 1, 217, 127, 1], [1, \"s\", 0, 217, 126, 1], [1, \"s\", 1, 217, 125, 1], [1, \"s\", 0, 216, 124, 1], [1, \"s\", 1, 215, 124, 1], [1, \"s\", 0, 214, 124, 1], [1, \"s\", 1, 213, 125, 1], [1, \"s\", 0, 213, 126, 1], [1, \"plm\", 2, 217, 130, 0], [1, \"plm\", 2, 212, 125, 0], [1, \"p\", 0, 214, 134, 1], [1, \"s\", 1, 211, 126, 1], [1, \"b\", 1, 45, 277, 0], [1, \"b\", 1, 50, 286, 0], [1, \"b\", 2, 51, 284, 0], [1, \"b\", 1, 47, 287, 0], [1, \"b\", 0, 39, 285, 0], [1, \"b\", 3, 40, 283, 0], [1, \"b\", 0, 52, 283, 0], [1, \"b\", 1, 51, 280, 0], [1, \"g\", 0, 45, 269, 1], [1, \"p\", 0, 55, 281, 1], [1, \"b\", 1, 5, 172, 0], [1, \"b\", 2, 6, 172, 0], [1, \"t\", 5, 6, 171, 0], [1, \"t\", 1, 5, 170, 0], [1, \"t\", 1, 5, 164, 0], [1, \"t\", 3, 6, 164, 0], [1, \"b\", 0, 6, 165, 0], [1, \"t\", 3, 5, 165, 0], [1, \"b\", 2, 6, 166, 0], [1, \"t\", 4, 5, 166, 0], [1, \"t\", 4, 6, 167, 0], [1, \"t\", 2, 6, 168, 0], [1, \"t\", 0, 6, 169, 0], [1, \"t\", 4, 6, 170, 0], [1, \"t\", 0, 5, 167, 0], [1, \"t\", 2, 5, 169, 0], [1, \"b\", 0, 5, 168, 0], [1, \"s\", 1, 7, 153, 1], [1, \"s\", 2, 7, 151, 1], [1, \"de\", 5, 7, 152, 0], [1, \"t\", 1, 5, 154, 0], [1, \"b\", 0, 6, 154, 0], [1, \"t\", 2, 6, 155, 0], [1, \"b\", 2, 6, 156, 0], [1, \"t\", 2, 5, 157, 0], [1, \"t\", 4, 5, 155, 0], [1, \"b\", 0, 6, 157, 0], [1, \"t\", 1, 5, 156, 0], [1, \"t\", 5, 6, 158, 0], [1, \"b\", 2, 6, 159, 0], [1, \"b\", 0, 6, 162, 0], [1, \"t\", 4, 6, 163, 0], [1, \"t\", 4, 6, 161, 0], [1, \"b\", 1, 6, 160, 0], [1, \"b\", 2, 5, 163, 0], [1, \"b\", 2, 5, 158, 0], [1, \"b\", 2, 5, 161, 0], [1, \"t\", 1, 5, 162, 0], [1, \"t\", 1, 5, 160, 0], [1, \"b\", 1, 85, 176, 0], [1, \"b\", 2, 83, 178, 0], [1, \"s\", 1, 82, 177, 1], [1, \"b\", 0, 76, 172, 0], [1, \"b\", 3, 76, 174, 0], [1, \"t\", 3, 73, 174, 0], [1, \"t\", 5, 72, 175, 0], [1, \"t\", 5, 87, 173, 0], [1, \"de\", 2, 76, 175, 0], [1, \"de\", 3, 77, 171, 0], [1, \"de\", 3, 86, 177, 0], [1, \"de\", 2, 71, 175, 0], [1, \"s\", 1, 70, 174, 1], [1, \"r\", 48, 174, 0], [1, \"r\", 49, 175, 0], [1, \"r\", 50, 175, 0], [1, \"r\", 51, 175, 0], [1, \"r\", 51, 174, 0], [1, \"r\", 50, 174, 0], [1, \"r\", 49, 174, 0], [1, \"r\", 52, 175, 0], [1, \"r\", 52, 176, 0], [1, \"r\", 51, 176, 0], [1, \"r\", 50, 176, 0], [1, \"r\", 49, 176, 0], [1, \"r\", 48, 175, 0], [1, \"r\", 47, 175, 0], [1, \"r\", 48, 176, 0], [1, \"r\", 69, 163, 0], [1, \"r\", 70, 163, 0], [1, \"r\", 71, 163, 0], [1, \"r\", 73, 163, 0], [1, \"r\", 72, 163, 0], [1, \"r\", 73, 164, 0], [1, \"r\", 72, 164, 0], [1, \"r\", 71, 164, 0], [1, \"r\", 70, 164, 0], [1, \"r\", 69, 164, 0], [1, \"r\", 68, 164, 0], [1, \"r\", 68, 165, 0], [1, \"r\", 69, 165, 0], [1, \"r\", 70, 165, 0], [1, \"r\", 71, 165, 0], [1, \"r\", 72, 165, 0], [1, \"r\", 74, 164, 0], [1, \"r\", 73, 165, 0], [1, \"r\", 72, 166, 0], [1, \"r\", 71, 166, 0], [1, \"r\", 70, 166, 0], [1, \"r\", 74, 165, 0], [1, \"r\", 24, 164, 0], [1, \"r\", 25, 164, 0], [1, \"r\", 27, 164, 0], [1, \"r\", 26, 164, 0], [1, \"r\", 28, 165, 0], [1, \"r\", 26, 165, 0], [1, \"r\", 27, 165, 0], [1, \"r\", 25, 165, 0], [1, \"r\", 24, 165, 0], [1, \"r\", 23, 165, 0], [1, \"r\", 22, 165, 0], [1, \"r\", 21, 165, 0], [1, \"r\", 21, 166, 0], [1, \"r\", 22, 166, 0], [1, \"r\", 23, 166, 0], [1, \"r\", 24, 166, 0], [1, \"r\", 25, 166, 0], [1, \"r\", 26, 166, 0], [1, \"r\", 27, 166, 0], [1, \"r\", 28, 166, 0], [1, \"r\", 28, 167, 0], [1, \"r\", 26, 167, 0], [1, \"r\", 25, 167, 0], [1, \"r\", 24, 167, 0], [1, \"r\", 23, 167, 0], [1, \"r\", 22, 167, 0], [1, \"r\", 27, 167, 0], [1, \"r\", 29, 166, 0], [1, \"r\", 29, 167, 0], [1, \"r\", 28, 168, 0], [1, \"r\", 27, 168, 0], [1, \"r\", 26, 168, 0], [1, \"r\", 25, 168, 0], [1, \"r\", 24, 168, 0], [1, \"r\", 23, 168, 0], [1, \"r\", 27, 169, 0], [1, \"r\", 26, 169, 0], [1, \"r\", 25, 169, 0], [1, \"r\", 24, 169, 0], [1, \"r\", 23, 169, 0], [1, \"r\", 22, 168, 0], [1, \"r\", 21, 167, 0], [1, \"s\", 1, 52, 174, 1], [1, \"t\", 3, 50, 177, 0], [1, \"t\", 4, 49, 177, 0], [1, \"b\", 0, 47, 174, 0], [1, \"b\", 0, 69, 166, 0], [1, \"t\", 2, 68, 166, 0], [1, \"t\", 5, 74, 163, 0], [1, \"t\", 1, 73, 162, 0], [1, \"s\", 0, 73, 166, 1], [1, \"s\", 2, 76, 165, 1], [1, \"g\", 2, 59, 175, 1], [1, \"p\", 0, 78, 168, 1], [1, \"p\", 0, 61, 162, 1], [1, \"p\", 0, 42, 170, 1], [1, \"p\", 0, 20, 174, 1], [1, \"p\", 0, 16, 160, 1], [1, \"b\", 1, 23, 164, 0], [1, \"b\", 1, 28, 169, 0], [1, \"b\", 2, 29, 168, 0], [1, \"b\", 2, 16, 170, 0], [1, \"t\", 1, 15, 171, 0], [1, \"t\", 5, 13, 175, 0], [1, \"t\", 5, 19, 166, 0], [1, \"t\", 5, 26, 163, 0], [1, \"s\", 1, 29, 165, 1], [1, \"t\", 5, 11, 167, 0], [1, \"t\", 0, 29, 176, 0], [1, \"b\", 2, 30, 175, 0], [1, \"t\", 2, 24, 177, 0], [1, \"b\", 1, 37, 174, 0], [1, \"b\", 0, 35, 172, 0], [1, \"b\", 3, 37, 170, 0], [1, \"t\", 4, 38, 169, 0], [1, \"t\", 4, 34, 173, 0], [1, \"t\", 5, 38, 175, 0], [1, \"b\", 2, 39, 173, 0], [1, \"t\", 3, 37, 176, 0], [1, \"t\", 4, 30, 168, 0], [1, \"s\", 2, 35, 176, 1], [1, \"s\", 1, 41, 175, 1], [1, \"b\", 2, 53, 176, 0], [1, \"t\", 5, 55, 173, 0], [1, \"t\", 5, 45, 170, 0], [1, \"b\", 1, 53, 162, 0], [1, \"b\", 0, 50, 164, 0], [1, \"t\", 2, 54, 163, 0], [1, \"t\", 3, 49, 165, 0], [1, \"t\", 4, 48, 160, 0], [1, \"t\", 4, 57, 164, 0], [1, \"t\", 4, 66, 162, 0], [1, \"b\", 1, 86, 161, 0], [1, \"b\", 2, 81, 163, 0], [1, \"t\", 3, 85, 162, 0], [1, \"t\", 5, 81, 162, 0], [1, \"t\", 5, 88, 163, 0], [1, \"t\", 1, 84, 166, 0], [1, \"t\", 5, 72, 160, 0], [1, \"t\", 5, 70, 170, 0], [1, \"s\", 1, 57, 162, 1], [1, \"b\", 1, 39, 161, 0], [1, \"b\", 0, 34, 164, 0], [1, \"b\", 2, 54, 164, 0], [1, \"t\", 1, 59, 169, 0], [1, \"t\", 3, 60, 170, 0], [1, \"t\", 4, 63, 169, 0], [1, \"t\", 4, 63, 174, 0], [1, \"t\", 1, 62, 175, 0], [1, \"t\", 5, 40, 162, 0], [1, \"t\", 1, 63, 180, 0], [1, \"t\", 2, 64, 179, 0], [1, \"t\", 2, 35, 165, 0], [1, \"s\", 1, 63, 173, 1], [1, \"s\", 2, 40, 165, 1], [1, \"b\", 0, 46, 169, 0], [1, \"de\", 22, 74, 168, 0], [1, \"de\", 22, 86, 168, 0], [1, \"de\", 22, 83, 175, 0], [1, \"de\", 22, 78, 175, 0], [1, \"de\", 19, 72, 176, 0], [1, \"de\", 19, 68, 168, 0], [1, \"de\", 19, 65, 163, 0], [1, \"de\", 19, 75, 162, 0], [1, \"de\", 19, 80, 162, 0], [1, \"de\", 19, 88, 159, 0], [1, \"de\", 19, 87, 164, 0], [1, \"de\", 19, 61, 177, 0], [1, \"de\", 19, 59, 172, 0], [1, \"de\", 19, 59, 167, 0], [1, \"de\", 19, 53, 165, 0], [1, \"de\", 19, 56, 163, 0], [1, \"de\", 19, 51, 161, 0], [1, \"de\", 19, 48, 167, 0], [1, \"de\", 19, 47, 170, 0], [1, \"de\", 19, 41, 163, 0], [1, \"de\", 19, 37, 161, 0], [1, \"de\", 19, 36, 166, 0], [1, \"de\", 19, 36, 171, 0], [1, \"de\", 19, 34, 174, 0], [1, \"de\", 19, 40, 172, 0], [1, \"de\", 19, 38, 177, 0], [1, \"de\", 19, 42, 176, 0], [1, \"de\", 19, 53, 178, 0], [1, \"de\", 19, 53, 172, 0], [1, \"de\", 19, 64, 181, 0], [1, \"de\", 19, 64, 175, 0], [1, \"de\", 19, 79, 172, 0], [1, \"de\", 19, 30, 170, 0], [1, \"de\", 19, 17, 168, 0], [1, \"de\", 19, 14, 173, 0], [1, \"de\", 19, 12, 162, 0], [1, \"de\", 19, 9, 167, 0], [1, \"de\", 19, 20, 161, 0], [1, \"de\", 19, 27, 162, 0], [1, \"de\", 19, 83, 195, 0], [1, \"de\", 2, 85, 163, 0], [1, \"de\", 2, 80, 164, 0], [1, \"de\", 2, 84, 169, 0], [1, \"de\", 2, 55, 165, 0], [1, \"de\", 3, 46, 163, 0], [1, \"de\", 2, 66, 169, 0], [1, \"de\", 0, 63, 175, 0], [1, \"de\", 0, 34, 164, 0], [1, \"de\", 0, 18, 160, 0], [1, \"de\", 2, 40, 160, 0], [1, \"de\", 2, 53, 160, 0], [1, \"de\", 2, 14, 170, 0], [1, \"de\", 2, 19, 175, 0], [1, \"de\", 2, 23, 176, 0], [1, \"de\", 5, 60, 147, 0], [1, \"de\", 33, 59, 160, 0], [1, \"de\", 33, 85, 157, 0], [1, \"de\", 33, 29, 143, 0], [1, \"de\", 33, 62, 140, 0], [1, \"de\", 33, 43, 127, 0], [1, \"de\", 33, 18, 129, 0], [1, \"de\", 33, 50, 134, 0], [1, \"de\", 33, 79, 127, 0], [1, \"de\", 33, 89, 139, 0], [1, \"b\", 1, 44, 156, 0], [1, \"t\", 2, 45, 157, 0], [1, \"b\", 0, 75, 156, 0], [1, \"t\", 3, 76, 157, 0], [1, \"t\", 5, 62, 157, 0], [1, \"t\", 5, 79, 156, 0], [1, \"t\", 5, 41, 156, 0], [1, \"b\", 1, 28, 156, 0], [1, \"t\", 2, 27, 157, 0], [1, \"t\", 4, 21, 156, 0], [1, \"t\", 4, 56, 159, 0], [1, \"f\", 1, 94, 153, 1], [1, \"f\", 2, 93, 153, 1], [1, \"f\", 2, 99, 153, 1], [1, \"f\", 1, 98, 153, 1], [1, \"f\", 0, 97, 153, 1], [1, \"f\", 1, 96, 153, 1], [1, \"s\", 1, 7, 149, 1], [1, \"de\", 4, 7, 150, 0], [1, \"b\", 3, 43, 281, 0], [1, \"de\", 50, 24, 39, 0], [1, \"de\", 50, 21, 39, 0], [1, \"de\", 50, 22, 43, 0], [1, \"de\", 50, 15, 34, 0], [1, \"de\", 50, 18, 26, 0], [1, \"de\", 50, 44, 42, 0], [1, \"de\", 50, 57, 39, 0], [1, \"de\", 50, 62, 43, 0], [1, \"de\", 50, 77, 44, 0], [1, \"de\", 50, 71, 41, 0], [1, \"de\", 50, 55, 39, 0], [1, \"de\", 50, 22, 39, 0], [1, \"de\", 50, 20, 41, 0], [1, \"de\", 50, 18, 21, 0], [1, \"de\", 50, 15, 21, 0], [1, \"de\", 50, 18, 19, 0], [1, \"de\", 50, 17, 17, 0], [1, \"de\", 50, 18, 10, 0], [1, \"de\", 50, 18, 9, 0], [1, \"de\", 50, 52, 41, 0], [1, \"de\", 50, 82, 39, 0], [1, \"de\", 50, 86, 38, 0], [1, \"de\", 50, 84, 31, 0], [1, \"de\", 50, 86, 30, 0], [1, \"de\", 50, 84, 26, 0], [1, \"de\", 50, 86, 23, 0], [1, \"de\", 50, 86, 14, 0], [1, \"de\", 50, 29, 42, 0], [1, \"de\", 9, 74, 37, 0], [1, \"de\", 9, 76, 22, 0], [1, \"de\", 10, 79, 24, 0], [1, \"de\", 11, 77, 17, 0], [1, \"de\", 36, 81, 25, 0], [1, \"de\", 36, 80, 36, 0], [1, \"de\", 36, 21, 36, 0], [1, \"de\", 28, 23, 22, 0], [1, \"de\", 28, 27, 31, 0], [1, \"de\", 28, 69, 36, 0], [1, \"de\", 28, 80, 20, 0], [1, \"de\", 51, 24, 155, 0], [1, \"de\", 51, 7, 154, 0], [1, \"de\", 51, 11, 154, 0], [1, \"de\", 51, 12, 156, 0], [1, \"de\", 51, 16, 154, 0], [1, \"de\", 51, 20, 154, 0], [1, \"de\", 51, 23, 154, 0], [1, \"de\", 51, 18, 157, 0], [1, \"de\", 51, 31, 154, 0], [1, \"de\", 51, 32, 157, 0], [1, \"de\", 51, 86, 154, 0], [1, \"de\", 51, 88, 156, 0], [1, \"de\", 51, 82, 154, 0], [1, \"de\", 51, 80, 154, 0], [1, \"de\", 51, 77, 154, 0], [1, \"de\", 51, 74, 154, 0], [1, \"de\", 51, 71, 154, 0], [1, \"de\", 51, 67, 154, 0], [1, \"de\", 51, 60, 154, 0], [1, \"de\", 51, 57, 154, 0], [1, \"de\", 51, 65, 154, 0], [1, \"de\", 51, 68, 156, 0], [1, \"de\", 51, 59, 156, 0], [1, \"de\", 51, 55, 154, 0], [1, \"de\", 51, 54, 154, 0], [1, \"de\", 51, 52, 154, 0], [1, \"de\", 51, 55, 155, 0], [1, \"de\", 51, 54, 157, 0], [1, \"de\", 51, 49, 154, 0], [1, \"de\", 51, 46, 154, 0], [1, \"de\", 51, 44, 154, 0], [1, \"de\", 51, 43, 154, 0], [1, \"de\", 51, 41, 154, 0], [1, \"de\", 51, 38, 154, 0], [1, \"de\", 51, 39, 156, 0], [1, \"de\", 51, 34, 154, 0], [1, \"de\", 5, 19, 142, 0], [1, \"de\", 5, 37, 147, 0], [1, \"de\", 7, 53, 147, 0], [1, \"de\", 6, 69, 150, 0], [1, \"de\", 4, 94, 148, 0], [1, \"de\", 4, 66, 147, 0], [1, \"de\", 4, 10, 145, 0], [1, \"de\", 4, 28, 137, 0], [1, \"de\", 4, 15, 137, 0], [1, \"de\", 4, 48, 134, 0], [1, \"de\", 5, 67, 135, 0], [1, \"de\", 34, 84, 155, 0], [1, \"de\", 35, 70, 156, 0], [1, \"de\", 35, 51, 156, 0], [1, \"de\", 35, 56, 157, 0], [1, \"de\", 35, 65, 159, 0], [1, \"de\", 35, 23, 156, 0], [1, \"de\", 35, 15, 155, 0], [1, \"de\", 35, 8, 155, 0], [1, \"de\", 33, 13, 155, 0], [1, \"de\", 33, 33, 158, 0], [1, \"de\", 36, 78, 155, 0], [1, \"de\", 36, 87, 157, 0], [1, \"fo\", 1, 73, 36, 0], [1, \"fo\", 1, 80, 24, 0], [1, \"fo\", 2, 67, 36, 0], [1, \"fo\", 2, 45, 36, 0], [1, \"fo\", 2, 53, 34, 0], [1, \"fo\", 1, 51, 35, 0], [1, \"fo\", 1, 58, 35, 0], [1, \"fo\", 1, 33, 35, 0], [1, \"fo\", 1, 31, 33, 0], [1, \"fo\", 2, 29, 36, 0], [1, \"fo\", 2, 56, 36, 0], [1, \"fo\", 2, 60, 37, 0], [1, \"fo\", 2, 45, 32, 0], [1, \"fo\", 2, 22, 25, 0], [1, \"fo\", 2, 21, 35, 0], [1, \"de\", 52, 90, 208, 0], [1, \"de\", 18, 94, 250, 0], [1, \"de\", 17, 95, 253, 0], [1, \"cs\", 0, 140, 5, 1], [1, \"cs\", 2, 139, 5, 1], [1, \"cs\", 2, 138, 5, 1], [1, \"cs\", 2, 138, 6, 1], [1, \"cs\", 2, 139, 6, 1], [1, \"cs\", 2, 141, 6, 1], [1, \"cs\", 2, 140, 6, 1], [1, \"la\", 3, 143, 7, 1], [1, \"la\", 3, 139, 7, 1], [1, \"cs\", 0, 137, 7, 1], [1, \"cs\", 1, 138, 8, 1], [1, \"cs\", 2, 137, 6, 1], [1, \"cs\", 2, 137, 8, 1], [1, \"cs\", 2, 136, 7, 1], [1, \"cs\", 2, 138, 9, 1], [1, \"cs\", 3, 139, 9, 1], [1, \"cs\", 3, 136, 8, 1], [1, \"cs\", 3, 137, 9, 1], [1, \"de\", 53, 92, 165, 0], [1, \"de\", 53, 92, 180, 0], [1, \"de\", 53, 92, 188, 0], [1, \"de\", 54, 92, 153, 0], [1, \"de\", 54, 91, 153, 0], [1, \"de\", 54, 90, 153, 0], [1, \"de\", 54, 89, 153, 0], [1, \"de\", 54, 88, 153, 0], [1, \"de\", 54, 87, 153, 0], [1, \"de\", 54, 86, 153, 0], [1, \"de\", 54, 85, 153, 0], [1, \"de\", 54, 84, 153, 0], [1, \"de\", 54, 83, 153, 0], [1, \"de\", 54, 82, 153, 0], [1, \"de\", 54, 81, 153, 0], [1, \"de\", 54, 80, 153, 0], [1, \"de\", 54, 79, 153, 0], [1, \"de\", 54, 78, 153, 0], [1, \"de\", 54, 77, 153, 0], [1, \"de\", 54, 76, 153, 0], [1, \"de\", 54, 75, 153, 0], [1, \"de\", 54, 74, 153, 0], [1, \"de\", 54, 73, 153, 0], [1, \"de\", 54, 72, 153, 0], [1, \"de\", 54, 70, 153, 0], [1, \"de\", 54, 71, 153, 0], [1, \"de\", 54, 69, 153, 0], [1, \"de\", 54, 68, 153, 0], [1, \"de\", 54, 67, 153, 0], [1, \"de\", 54, 66, 153, 0], [1, \"de\", 54, 65, 153, 0], [1, \"de\", 54, 64, 153, 0], [1, \"de\", 54, 63, 153, 0], [1, \"de\", 54, 61, 153, 0], [1, \"de\", 54, 62, 153, 0], [1, \"de\", 54, 60, 153, 0], [1, \"de\", 54, 59, 153, 0], [1, \"de\", 54, 57, 153, 0], [1, \"de\", 54, 58, 153, 0], [1, \"de\", 54, 56, 153, 0], [1, \"de\", 54, 55, 153, 0], [1, \"de\", 54, 54, 153, 0], [1, \"de\", 54, 53, 153, 0], [1, \"de\", 54, 52, 153, 0], [1, \"de\", 54, 51, 153, 0], [1, \"de\", 54, 50, 153, 0], [1, \"de\", 54, 49, 153, 0], [1, \"de\", 54, 48, 153, 0], [1, \"de\", 54, 47, 153, 0], [1, \"de\", 54, 46, 153, 0], [1, \"de\", 54, 45, 153, 0], [1, \"de\", 54, 44, 153, 0], [1, \"de\", 54, 43, 153, 0], [1, \"de\", 54, 42, 153, 0], [1, \"de\", 54, 41, 153, 0], [1, \"de\", 54, 40, 153, 0], [1, \"de\", 54, 39, 153, 0], [1, \"de\", 54, 37, 153, 0], [1, \"de\", 54, 38, 153, 0], [1, \"de\", 54, 36, 153, 0], [1, \"de\", 54, 35, 153, 0], [1, \"de\", 54, 34, 153, 0], [1, \"de\", 54, 33, 153, 0], [1, \"de\", 54, 32, 153, 0], [1, \"de\", 54, 31, 153, 0], [1, \"de\", 54, 30, 153, 0], [1, \"de\", 54, 29, 153, 0], [1, \"de\", 54, 28, 153, 0], [1, \"de\", 54, 27, 153, 0], [1, \"de\", 54, 26, 153, 0], [1, \"de\", 54, 25, 153, 0], [1, \"de\", 54, 24, 153, 0], [1, \"de\", 54, 23, 153, 0], [1, \"de\", 54, 22, 153, 0], [1, \"de\", 54, 21, 153, 0], [1, \"de\", 54, 20, 153, 0], [1, \"de\", 54, 19, 153, 0], [1, \"de\", 54, 18, 153, 0], [1, \"de\", 54, 17, 153, 0], [1, \"de\", 54, 16, 153, 0], [1, \"de\", 54, 15, 153, 0], [1, \"de\", 54, 14, 153, 0], [1, \"de\", 54, 13, 153, 0], [1, \"de\", 54, 12, 153, 0], [1, \"de\", 54, 11, 153, 0], [1, \"de\", 54, 10, 153, 0], [1, \"de\", 54, 8, 153, 0], [1, \"de\", 54, 9, 153, 0], [1, \"de\", 55, 83, 8, 0], [1, \"de\", 55, 83, 9, 0], [1, \"de\", 55, 83, 10, 0], [1, \"de\", 55, 83, 11, 0], [1, \"de\", 55, 83, 12, 0], [1, \"de\", 55, 83, 13, 0], [1, \"de\", 55, 83, 14, 0], [1, \"de\", 55, 83, 15, 0], [1, \"de\", 55, 83, 16, 0], [1, \"de\", 55, 83, 17, 0], [1, \"de\", 55, 83, 19, 0], [1, \"de\", 55, 83, 18, 0], [1, \"de\", 55, 83, 20, 0], [1, \"de\", 55, 83, 21, 0], [1, \"de\", 55, 83, 22, 0], [1, \"de\", 55, 83, 23, 0], [1, \"de\", 55, 83, 24, 0], [1, \"de\", 55, 83, 25, 0], [1, \"de\", 55, 83, 26, 0], [1, \"de\", 55, 83, 27, 0], [1, \"de\", 55, 83, 28, 0], [1, \"de\", 55, 83, 29, 0], [1, \"de\", 55, 83, 30, 0], [1, \"de\", 55, 83, 31, 0], [1, \"de\", 55, 83, 32, 0], [1, \"de\", 55, 83, 33, 0], [1, \"de\", 55, 83, 34, 0], [1, \"de\", 55, 83, 36, 0], [1, \"de\", 55, 83, 35, 0], [1, \"de\", 55, 83, 37, 0], [1, \"de\", 55, 83, 38, 0], [1, \"de\", 55, 81, 38, 0], [1, \"de\", 55, 82, 38, 0], [1, \"de\", 55, 80, 38, 0], [1, \"de\", 55, 79, 38, 0], [1, \"de\", 55, 78, 38, 0], [1, \"de\", 55, 77, 38, 0], [1, \"de\", 55, 76, 38, 0], [1, \"de\", 55, 75, 38, 0], [1, \"de\", 55, 73, 38, 0], [1, \"de\", 55, 74, 38, 0], [1, \"de\", 55, 72, 38, 0], [1, \"de\", 55, 71, 38, 0], [1, \"de\", 55, 70, 38, 0], [1, \"de\", 55, 68, 38, 0], [1, \"de\", 55, 69, 38, 0], [1, \"de\", 55, 67, 38, 0], [1, \"de\", 55, 66, 38, 0], [1, \"de\", 55, 65, 38, 0], [1, \"de\", 55, 64, 38, 0], [1, \"de\", 55, 63, 38, 0], [1, \"de\", 55, 62, 38, 0], [1, \"de\", 55, 60, 38, 0], [1, \"de\", 55, 61, 38, 0], [1, \"de\", 55, 59, 38, 0], [1, \"de\", 55, 57, 38, 0], [1, \"de\", 55, 58, 38, 0], [1, \"de\", 55, 56, 38, 0], [1, \"de\", 55, 55, 38, 0], [1, \"de\", 55, 54, 38, 0], [1, \"de\", 55, 53, 38, 0], [1, \"de\", 55, 52, 38, 0], [1, \"de\", 55, 51, 38, 0], [1, \"de\", 55, 49, 38, 0], [1, \"de\", 55, 50, 38, 0], [1, \"de\", 55, 48, 38, 0], [1, \"de\", 55, 47, 38, 0], [1, \"de\", 55, 46, 38, 0], [1, \"de\", 55, 45, 38, 0], [1, \"de\", 55, 44, 38, 0], [1, \"de\", 55, 43, 38, 0], [1, \"de\", 55, 42, 38, 0], [1, \"de\", 55, 41, 38, 0], [1, \"de\", 55, 40, 38, 0], [1, \"de\", 55, 39, 38, 0], [1, \"de\", 55, 38, 38, 0], [1, \"de\", 55, 37, 38, 0], [1, \"de\", 55, 36, 38, 0], [1, \"de\", 55, 34, 38, 0], [1, \"de\", 55, 35, 38, 0], [1, \"de\", 55, 33, 38, 0], [1, \"de\", 55, 31, 38, 0], [1, \"de\", 55, 32, 38, 0], [1, \"de\", 55, 30, 38, 0], [1, \"de\", 55, 29, 38, 0], [1, \"de\", 55, 28, 38, 0], [1, \"de\", 55, 27, 38, 0], [1, \"de\", 55, 26, 38, 0], [1, \"de\", 55, 25, 38, 0], [1, \"de\", 55, 24, 38, 0], [1, \"de\", 55, 23, 38, 0], [1, \"de\", 55, 21, 38, 0], [1, \"de\", 55, 22, 38, 0], [1, \"de\", 55, 20, 38, 0], [1, \"de\", 55, 19, 38, 0], [1, \"de\", 55, 19, 37, 0], [1, \"de\", 55, 19, 36, 0], [1, \"de\", 55, 19, 35, 0], [1, \"de\", 55, 19, 34, 0], [1, \"de\", 55, 19, 33, 0], [1, \"de\", 55, 19, 32, 0], [1, \"de\", 55, 19, 31, 0], [1, \"de\", 55, 19, 30, 0], [1, \"de\", 55, 19, 28, 0], [1, \"de\", 55, 19, 29, 0], [1, \"de\", 55, 19, 27, 0], [1, \"de\", 55, 19, 26, 0], [1, \"de\", 55, 19, 25, 0], [1, \"de\", 55, 19, 24, 0], [1, \"de\", 55, 19, 23, 0], [1, \"de\", 55, 19, 22, 0], [1, \"de\", 55, 19, 21, 0], [1, \"de\", 55, 19, 20, 0], [1, \"de\", 55, 19, 18, 0], [1, \"de\", 55, 19, 19, 0], [1, \"de\", 55, 19, 16, 0], [1, \"de\", 55, 19, 17, 0], [1, \"de\", 55, 19, 15, 0], [1, \"de\", 55, 19, 14, 0], [1, \"de\", 55, 19, 13, 0], [1, \"de\", 55, 19, 12, 0], [1, \"de\", 55, 19, 11, 0], [1, \"de\", 55, 19, 10, 0], [1, \"de\", 55, 19, 9, 0], [1, \"de\", 55, 19, 8, 0], [1, \"de\", 55, 84, 35, 0], [1, \"de\", 55, 84, 32, 0], [1, \"de\", 55, 84, 25, 0], [1, \"de\", 50, 84, 24, 0], [1, \"de\", 55, 84, 20, 0], [1, \"de\", 55, 84, 17, 0], [1, \"de\", 55, 84, 16, 0], [1, \"de\", 50, 84, 15, 0], [1, \"de\", 55, 84, 8, 0], [1, \"de\", 55, 84, 9, 0], [1, \"de\", 50, 85, 11, 0], [1, \"de\", 55, 81, 39, 0], [1, \"de\", 50, 83, 40, 0], [1, \"de\", 55, 72, 39, 0], [1, \"de\", 55, 74, 39, 0], [1, \"de\", 55, 66, 39, 0], [1, \"de\", 55, 65, 39, 0], [1, \"de\", 50, 67, 41, 0], [1, \"de\", 55, 56, 39, 0], [1, \"de\", 55, 58, 39, 0], [1, \"de\", 55, 50, 39, 0], [1, \"de\", 50, 49, 39, 0], [1, \"de\", 55, 44, 39, 0], [1, \"de\", 55, 42, 39, 0], [1, \"de\", 50, 43, 39, 0], [1, \"de\", 50, 41, 39, 0], [1, \"de\", 50, 37, 39, 0], [1, \"de\", 55, 36, 39, 0], [1, \"de\", 55, 32, 39, 0], [1, \"de\", 50, 31, 39, 0], [1, \"de\", 55, 23, 39, 0], [1, \"de\", 55, 18, 37, 0], [1, \"de\", 50, 18, 36, 0], [1, \"de\", 55, 18, 35, 0], [1, \"de\", 50, 18, 34, 0], [1, \"de\", 55, 18, 31, 0], [1, \"de\", 50, 18, 30, 0], [1, \"de\", 55, 18, 25, 0], [1, \"de\", 50, 18, 24, 0], [1, \"de\", 55, 18, 20, 0], [1, \"de\", 55, 18, 14, 0], [1, \"de\", 50, 18, 15, 0], [1, \"de\", 55, 18, 8, 0], [1, \"de\", 54, 90, 154, 0], [1, \"de\", 51, 89, 154, 0], [1, \"de\", 54, 85, 154, 0], [1, \"de\", 54, 81, 154, 0], [1, \"de\", 54, 76, 154, 0], [1, \"de\", 54, 70, 154, 0], [1, \"de\", 54, 66, 154, 0], [1, \"de\", 54, 61, 154, 0], [1, \"de\", 54, 56, 154, 0], [1, \"de\", 54, 53, 154, 0], [1, \"de\", 54, 45, 154, 0], [1, \"de\", 54, 42, 154, 0], [1, \"de\", 54, 37, 154, 0], [1, \"de\", 54, 30, 154, 0], [1, \"de\", 54, 25, 154, 0], [1, \"de\", 54, 17, 154, 0], [1, \"de\", 54, 10, 154, 0], [1, \"de\", 54, 8, 154, 0], [1, \"de\", 55, 20, 9, 0], [1, \"de\", 53, 93, 154, 0], [1, \"de\", 53, 93, 156, 0], [1, \"de\", 53, 93, 158, 0], [1, \"de\", 52, 91, 157, 0], [1, \"de\", 53, 93, 159, 0], [1, \"de\", 53, 93, 161, 0], [1, \"de\", 53, 93, 162, 0], [1, \"de\", 53, 93, 163, 0], [1, \"de\", 53, 93, 164, 0], [1, \"de\", 53, 93, 165, 0], [1, \"de\", 53, 93, 166, 0], [1, \"de\", 53, 93, 167, 0], [1, \"de\", 52, 91, 167, 0], [1, \"de\", 53, 93, 169, 0], [1, \"de\", 53, 93, 168, 0], [1, \"de\", 53, 93, 170, 0], [1, \"de\", 53, 93, 171, 0], [1, \"de\", 53, 93, 173, 0], [1, \"de\", 53, 93, 176, 0], [1, \"de\", 53, 93, 175, 0], [1, \"de\", 53, 92, 169, 0], [1, \"de\", 53, 93, 178, 0], [1, \"de\", 53, 93, 179, 0], [1, \"de\", 53, 93, 180, 0], [1, \"de\", 53, 93, 181, 0], [1, \"de\", 53, 93, 183, 0], [1, \"de\", 53, 93, 184, 0], [1, \"de\", 53, 93, 186, 0], [1, \"de\", 18, 95, 185, 0], [1, \"de\", 53, 93, 187, 0], [1, \"de\", 53, 93, 188, 0], [1, \"de\", 52, 91, 186, 0], [1, \"de\", 53, 93, 190, 0], [1, \"de\", 53, 93, 192, 0], [1, \"de\", 53, 93, 195, 0], [1, \"de\", 53, 93, 194, 0], [1, \"de\", 52, 91, 196, 0], [1, \"de\", 53, 93, 197, 0], [1, \"de\", 53, 93, 200, 0], [1, \"de\", 53, 93, 198, 0], [1, \"de\", 53, 93, 201, 0], [1, \"de\", 53, 93, 202, 0], [1, \"de\", 53, 93, 203, 0], [1, \"de\", 53, 93, 204, 0], [1, \"de\", 53, 93, 206, 0], [1, \"de\", 53, 93, 205, 0], [1, \"de\", 53, 93, 207, 0], [1, \"de\", 53, 93, 209, 0], [1, \"de\", 53, 93, 210, 0], [1, \"de\", 53, 93, 212, 0], [1, \"de\", 52, 91, 204, 0], [1, \"de\", 53, 93, 213, 0], [1, \"de\", 53, 93, 214, 0], [1, \"de\", 53, 93, 215, 0], [1, \"de\", 53, 93, 216, 0], [1, \"de\", 53, 93, 217, 0], [1, \"de\", 53, 93, 218, 0], [1, \"de\", 53, 93, 219, 0], [1, \"de\", 53, 93, 220, 0], [1, \"de\", 52, 92, 213, 0], [1, \"de\", 52, 92, 206, 0], [1, \"de\", 52, 92, 202, 0], [1, \"de\", 53, 92, 201, 0], [1, \"de\", 52, 92, 194, 0], [1, \"de\", 52, 92, 178, 0], [1, \"de\", 52, 92, 171, 0], [1, \"de\", 53, 93, 221, 0], [1, \"de\", 53, 93, 222, 0], [1, \"de\", 53, 93, 223, 0], [1, \"de\", 53, 93, 225, 0], [1, \"de\", 53, 93, 228, 0], [1, \"de\", 53, 93, 227, 0], [1, \"de\", 52, 92, 217, 0], [1, \"de\", 53, 92, 218, 0], [1, \"de\", 52, 92, 221, 0], [1, \"de\", 52, 92, 225, 0], [1, \"de\", 52, 93, 226, 0], [1, \"de\", 52, 93, 224, 0], [1, \"de\", 52, 93, 208, 0], [1, \"de\", 52, 93, 211, 0], [1, \"de\", 52, 93, 196, 0], [1, \"de\", 52, 93, 199, 0], [1, \"de\", 52, 93, 189, 0], [1, \"de\", 52, 93, 191, 0], [1, \"de\", 52, 93, 193, 0], [1, \"de\", 52, 93, 182, 0], [1, \"de\", 52, 93, 185, 0], [1, \"de\", 52, 93, 172, 0], [1, \"de\", 52, 93, 174, 0], [1, \"de\", 52, 93, 177, 0], [1, \"de\", 52, 93, 155, 0], [1, \"de\", 52, 93, 157, 0], [1, \"de\", 52, 93, 160, 0], [1, \"de\", 52, 92, 162, 0], [1, \"de\", 53, 93, 229, 0], [1, \"de\", 53, 93, 231, 0], [1, \"de\", 53, 93, 232, 0], [1, \"de\", 53, 93, 234, 0], [1, \"de\", 52, 93, 230, 0], [1, \"de\", 52, 92, 228, 0], [1, \"de\", 53, 93, 235, 0], [1, \"de\", 53, 93, 236, 0], [1, \"de\", 53, 93, 237, 0], [1, \"de\", 53, 93, 239, 0], [1, \"de\", 53, 93, 240, 0], [1, \"de\", 52, 93, 238, 0], [1, \"de\", 53, 93, 241, 0], [1, \"de\", 52, 93, 242, 0], [1, \"de\", 52, 93, 243, 0], [1, \"de\", 53, 93, 244, 0], [1, \"de\", 53, 93, 246, 0], [1, \"de\", 53, 93, 245, 0], [1, \"de\", 52, 93, 247, 0], [1, \"de\", 53, 93, 248, 0], [1, \"de\", 52, 92, 235, 0], [1, \"de\", 52, 92, 245, 0], [1, \"de\", 52, 93, 249, 0], [1, \"de\", 53, 93, 250, 0], [1, \"de\", 53, 93, 251, 0], [1, \"de\", 53, 93, 252, 0], [1, \"de\", 53, 93, 254, 0], [1, \"de\", 52, 93, 253, 0], [1, \"de\", 52, 93, 255, 0], [1, \"de\", 53, 93, 257, 0], [1, \"de\", 53, 93, 256, 0], [1, \"de\", 52, 93, 258, 0], [1, \"de\", 53, 93, 259, 0], [1, \"de\", 52, 93, 260, 0], [1, \"de\", 53, 93, 263, 0], [1, \"de\", 53, 93, 264, 0], [1, \"de\", 53, 93, 265, 0], [1, \"de\", 52, 93, 266, 0], [1, \"de\", 53, 93, 267, 0], [1, \"de\", 52, 93, 268, 0], [1, \"de\", 52, 93, 269, 0], [1, \"de\", 53, 93, 276, 0], [1, \"de\", 53, 93, 277, 0], [1, \"de\", 52, 93, 278, 0], [1, \"de\", 53, 93, 279, 0], [1, \"de\", 52, 93, 280, 0], [1, \"de\", 52, 93, 283, 0], [1, \"de\", 53, 93, 284, 0], [1, \"de\", 53, 93, 285, 0], [1, \"de\", 53, 93, 286, 0], [1, \"de\", 52, 93, 287, 0], [1, \"de\", 53, 93, 288, 0], [1, \"de\", 53, 93, 289, 0], [1, \"de\", 52, 93, 290, 0], [1, \"de\", 52, 93, 291, 0], [1, \"de\", 53, 93, 292, 0], [1, \"de\", 52, 93, 293, 0], [1, \"de\", 53, 93, 294, 0], [1, \"de\", 52, 93, 295, 0], [1, \"de\", 52, 93, 296, 0], [1, \"de\", 53, 93, 297, 0], [1, \"de\", 53, 93, 298, 0], [1, \"de\", 52, 93, 299, 0], [1, \"de\", 53, 93, 300, 0], [1, \"de\", 52, 92, 298, 0], [1, \"de\", 52, 92, 293, 0], [1, \"r\", 92, 262, 0], [1, \"r\", 93, 262, 0], [1, \"de\", 52, 93, 261, 0], [1, \"cs\", 0, 223, 104, 1], [1, \"cs\", 2, 223, 105, 1], [1, \"cs\", 2, 223, 102, 1], [1, \"cs\", 2, 223, 103, 1], [1, \"la\", 3, 141, 8, 1], [1, \"cs\", 2, 140, 9, 1], [1, \"la\", 4, 142, 9, 1], [1, \"de\", 4, 81, 149, 0], [1, \"f\", 0, 83, 148, 1], [1, \"f\", 1, 82, 149, 1], [1, \"de\", 34, 81, 156, 0], [1, \"de\", 51, 17, 9, 0], [1, \"de\", 54, 16, 9, 0], [1, \"de\", 54, 15, 9, 0], [1, \"cs\", 3, 223, 106, 1], [1, \"p\", 0, 119, 279, 1], [1, \"p\", 0, 109, 242, 1], [1, \"cs\", 1, 29, 9, 1], [1, \"cs\", 2, 30, 9, 1], [1, \"cs\", 2, 31, 9, 1], [1, \"cs\", 2, 32, 9, 1], [1, \"cs\", 2, 33, 9, 1], [1, \"cs\", 2, 69, 9, 1], [1, \"cs\", 2, 71, 9, 1], [1, \"cs\", 2, 70, 9, 1], [1, \"cs\", 1, 72, 9, 1], [1, \"cs\", 2, 73, 9, 1], [1, \"de\", 10, 31, 10, 0], [1, \"de\", 10, 29, 10, 0], [1, \"de\", 10, 44, 10, 0], [1, \"de\", 4, 87, 10, 0], [1, \"de\", 4, 86, 10, 0], [1, \"de\", 5, 87, 9, 0], [1, \"de\", 5, 13, 10, 0], [1, \"de\", 4, 14, 11, 0], [1, \"de\", 4, 16, 10, 0], [1, \"de\", 4, 17, 10, 0], [1, \"cs\", 2, 146, 9, 1], [1, \"cs\", 2, 148, 9, 1], [1, \"cs\", 2, 150, 9, 1], [1, \"cs\", 2, 153, 9, 1], [1, \"cs\", 2, 155, 9, 1], [1, \"cs\", 1, 149, 9, 1], [1, \"cs\", 1, 154, 9, 1], [1, \"cs\", 3, 147, 9, 1], [1, \"cs\", 3, 151, 9, 1], [1, \"cs\", 3, 152, 9, 1], [1, \"cs\", 3, 156, 9, 1], [1, \"cs\", 3, 157, 9, 1], [1, \"cs\", 3, 158, 9, 1], [1, \"cs\", 3, 159, 9, 1], [1, \"cs\", 3, 160, 9, 1], [1, \"cs\", 0, 161, 9, 1], [1, \"cs\", 2, 162, 9, 1], [1, \"cs\", 2, 163, 9, 1], [1, \"cs\", 1, 164, 9, 1], [1, \"cs\", 2, 165, 9, 1], [1, \"cs\", 3, 166, 9, 1], [1, \"cs\", 3, 168, 9, 1], [1, \"cs\", 3, 170, 9, 1], [1, \"cs\", 1, 169, 9, 1], [1, \"cs\", 2, 167, 9, 1], [1, \"cs\", 2, 171, 9, 1], [1, \"cs\", 2, 173, 9, 1], [1, \"cs\", 2, 172, 9, 1], [1, \"cs\", 2, 174, 9, 1], [1, \"cs\", 1, 175, 9, 1], [1, \"cs\", 3, 176, 9, 1], [1, \"cs\", 3, 178, 9, 1], [1, \"cs\", 3, 179, 9, 1], [1, \"cs\", 0, 180, 9, 1], [1, \"cs\", 2, 177, 9, 1], [1, \"cs\", 2, 182, 9, 1], [1, \"cs\", 2, 181, 9, 1], [1, \"cs\", 2, 183, 9, 1], [1, \"cs\", 2, 184, 9, 1], [1, \"cs\", 2, 185, 9, 1], [1, \"cs\", 2, 186, 9, 1], [1, \"cs\", 1, 187, 9, 1], [1, \"cs\", 2, 188, 9, 1], [1, \"cs\", 3, 189, 9, 1], [1, \"cs\", 3, 190, 9, 1], [1, \"cs\", 3, 191, 9, 1], [1, \"cs\", 2, 192, 9, 1], [1, \"cs\", 0, 193, 9, 1], [1, \"cs\", 2, 194, 9, 1], [1, \"cs\", 2, 196, 9, 1], [1, \"cs\", 2, 198, 9, 1], [1, \"cs\", 2, 200, 9, 1], [1, \"cs\", 3, 195, 9, 1], [1, \"cs\", 3, 197, 9, 1], [1, \"cs\", 3, 199, 9, 1], [1, \"cs\", 0, 201, 9, 1], [1, \"cs\", 2, 202, 9, 1], [1, \"cs\", 2, 203, 9, 1], [1, \"cs\", 3, 208, 9, 1], [1, \"cs\", 3, 207, 9, 1], [1, \"cs\", 3, 206, 9, 1], [1, \"cs\", 3, 205, 9, 1], [1, \"cs\", 3, 204, 9, 1], [1, \"cs\", 3, 214, 9, 1], [1, \"cs\", 3, 215, 9, 1], [1, \"cs\", 3, 216, 9, 1], [1, \"cs\", 3, 217, 9, 1], [1, \"cs\", 3, 218, 9, 1], [1, \"b\", 0, 5, 159, 0], [1, \"b\", 0, 5, 171, 0], [2, \"isl\", 1, 122, 63, 0], [2, \"isl\", 2, 119, 277, 0], [2, \"isl\", 2, 109, 244, 0], [2, \"isl\", 2, 114, 205, 0], [2, \"isl\", 1, 120, 150, 0], [2, \"isl\", 2, 154, 129, 0], [2, \"isl\", 0, 184, 158, 0], [2, \"isl\", 1, 208, 128, 0], [2, \"isl\", 1, 215, 132, 0], [2, \"isl\", 1, 214, 128, 0], [2, \"isl\", 1, 209, 132, 0], [1, \"la\", 3, 217, 20, 1], [1, \"la\", 1, 215, 19, 1], [1, \"la\", 0, 212, 18, 1], [1, \"la\", 4, 214, 18, 1], [1, \"la\", 4, 216, 19, 1], [1, \"la\", 4, 211, 20, 1], [1, \"la\", 3, 210, 19, 1], [1, \"la\", 3, 215, 21, 1], [1, \"la\", 1, 214, 20, 1], [1, \"la\", 3, 214, 22, 1], [1, \"la\", 3, 214, 24, 1], [1, \"la\", 4, 214, 26, 1], [1, \"la\", 4, 213, 27, 1], [1, \"la\", 1, 212, 28, 1], [1, \"la\", 2, 212, 29, 1], [1, \"la\", 5, 212, 30, 1], [1, \"la\", 4, 208, 19, 1], [1, \"la\", 4, 207, 19, 1], [1, \"la\", 1, 206, 19, 1], [1, \"la\", 1, 205, 19, 1], [1, \"la\", 2, 204, 19, 1], [1, \"la\", 5, 203, 19, 1], [1, \"la\", 3, 210, 17, 1]];\r\nvar COUNTER = 0;\r\nvar SPRITE = {GROUND: [\"#133A2B\", \"#042b30\"], SNOW_GROUND: [\"#EBF2F0\", \"#136167\"], CRAFT_LOADING: [\"#4EB687\", \"#187484\"], BROWN_LIFE: [\"#664516\", \"#13474C\"], SAND_COLOR: [\"#FCEFBB\", \"#0F4D48\"], SAND_SHOVEL_CO: [\"#C1AA7E\", \"#0F423D\"], GRD_SHOVEL_CO: [\"#594837\", \"#163A3A\"], ICE_SHOVEL_CO: [\"#A5D6D6\", \"#539CA0\"], WATER_3_COLOR: [\"#0B6A84\", \"#09373F\"], WATER_2_COLOR: [\"#2A8B9B\", \"#0F464C\"], WATER_1_COLOR: [\"#A9D6D3\", \"#115E60\"], FLOAM_COLOR: [\"#ECF7F9\", \"#539CA0\"], WEAPON_LOADING: [\"#FFF\", \"#FFF\"], HELMET_LOADING: [\"#FFF\", \"#FFF\"], SWIM_COLOR: [\"#1C9BA4\", \"#00272F\"], LAVA_GROUND: [\"#2D2017\", \"#031C1E\"], DAY: 0, NIGHT: 1, DRAGON_DEN_X: 2300, DRAGON_DEN_Y: 2290, FLAKES_NUMBER: 34, FLAKES_SIZES: 5, SAND_NUMBER: 68, ASHES_NUMBER: 34, ASHES_SIZES: 5, SMOG: 1, SMOG_PUSH: 0.6, SMOG_SPEED: 0.25, STEP_SPACE: 50, TRAIL_SPACE: 10, SWIM_SPACE: 75, GHOST_BUBBLES: 20, BUBBLES_SIZES: 5, SWORD: COUNTER++, PICK: COUNTER++, FUR: COUNTER++, PICK_GOLD: COUNTER++, PICK_DIAMOND: COUNTER++, SWORD_GOLD: COUNTER++, SWORD_DIAMOND: COUNTER++, HAND: COUNTER++, PICK_WOOD: COUNTER++, PIRATE_SWORD: COUNTER++, EARMUFFS: COUNTER++, COAT: COUNTER++, WOOD_SPEAR: COUNTER++, SPEAR: COUNTER++, GOLD_SPEAR: COUNTER++, DIAMOND_SPEAR: COUNTER++, DRAGON_SPEAR: COUNTER++, LAVA_SPEAR: COUNTER++, CRAB_SPEAR: COUNTER++, REIDITE_SWORD: COUNTER++, DIAMOND_PROTECTION: COUNTER++, AMETHYST_PROTECTION: COUNTER++, REIDITE_PROTECTION: COUNTER++, EXPLORER_HAT: COUNTER++, PIRATE_HAT: COUNTER++, STONE_HELMET: COUNTER++, GOLD_HELMET: COUNTER++, DIAMOND_HELMET: COUNTER++, BOOK: COUNTER++, BAG: COUNTER++, SWORD_AMETHYST: COUNTER++, PICK_AMETHYST: COUNTER++, PICK_REIDITE: COUNTER++, AMETHYST_SPEAR: COUNTER++, REIDITE_SPEAR: COUNTER++, HAMMER: COUNTER++, HAMMER_GOLD: COUNTER++, HAMMER_DIAMOND: COUNTER++, HAMMER_AMETHYST: COUNTER++, HAMMER_REIDITE: COUNTER++, CAP_SCARF: COUNTER++, CHRISTMAS_HAT: COUNTER++, ELF_HAT: COUNTER++, AMETHYST_HELMET: COUNTER++, REIDITE_HELMET: COUNTER++, SUPER_HAMMER: COUNTER++, SHOVEL: COUNTER++, SUPER_DIVING_SUIT: COUNTER++, DIVING_MASK: COUNTER++, WATERING_CAN_FULL: COUNTER++, SHOVEL_GOLD: COUNTER++, SHOVEL_DIAMOND: COUNTER++, SHOVEL_AMETHYST: COUNTER++, PITCHFORK: COUNTER++, PITCHFORK2: COUNTER++, SPANNER: COUNTER++, MACHETE: COUNTER++, SWORD_WOOD: COUNTER++, WOOD_HELMET: COUNTER++, DRAGON_HELMET: COUNTER++, LAVA_HELMET: COUNTER++, CROWN_CRAB: COUNTER++, DRAGON_SWORD: COUNTER++, LAVA_SWORD: COUNTER++, WOOD_BOW: COUNTER++, STONE_BOW: COUNTER++, GOLD_BOW: COUNTER++, DIAMOND_BOW: COUNTER++, AMETHYST_BOW: COUNTER++, REIDITE_BOW: COUNTER++, DRAGON_BOW: COUNTER++, WOOD_SHIELD: COUNTER++, STONE_SHIELD: COUNTER++, GOLD_SHIELD: COUNTER++, DIAMOND_SHIELD: COUNTER++, AMETHYST_SHIELD: COUNTER++, REIDITE_SHIELD: COUNTER++, CROWN_GREEN: COUNTER++, CROWN_ORANGE: COUNTER++, CROWN_BLUE: COUNTER++, TURBAN1: COUNTER++, TURBAN2: COUNTER++, PILOT_HELMET: COUNTER++, HOOD: COUNTER++, PEASANT: COUNTER++, WINTER_HOOD: COUNTER++, WINTER_PEASANT: COUNTER++, FLOWER_HAT: COUNTER++, FUR_HAT: COUNTER++, SADDLE: COUNTER++, WITCH: COUNTER++, NIMBUS: COUNTER++, WAND1: COUNTER++, WAND2: COUNTER++, FIREFLY_ITEM: COUNTER++, WOOD_ARROW: COUNTER++, STONE_ARROW: COUNTER++, GOLD_ARROW: COUNTER++, DIAMOND_ARROW: COUNTER++, AMETHYST_ARROW: COUNTER++, REIDITE_ARROW: COUNTER++, DRAGON_ARROW: COUNTER++, STONES: COUNTER++, TREE: COUNTER++, PLANT: COUNTER++, GOLD: COUNTER++, DIAMOND: COUNTER++, WOOD_FIRE: COUNTER++, WORKBENCH: COUNTER++, PLANT_SEED: COUNTER++, MEAT: COUNTER++, COOKED_MEAT: COUNTER++, BIG_FIRE_WOOD: COUNTER++, FURNACE_OFF: COUNTER++, PAPER: COUNTER++, AMETHYST: COUNTER++, AMETHYST_WALL: COUNTER++, AMETHYST_SPIKE: COUNTER++, DOOR_AMETHYST_CLOSE: COUNTER++, BRIDGE: COUNTER++, SAND: COUNTER++, BOTTLE_FULL: COUNTER++, BOTTLE_EMPTY: COUNTER++, KRAKEN_SKIN: COUNTER++, WATERING_CAN: COUNTER++, FLOUR: COUNTER++, WHEAT_SEED: COUNTER++, COOKIE: COUNTER++, WILD_WHEAT: COUNTER++, WINDMILL: COUNTER++, CAKE: COUNTER++, FOODFISH: COUNTER++, FOODFISH_COOKED: COUNTER++, SCALES: COUNTER++, INV_GROUND: COUNTER++, PLOT: COUNTER++, INV_ICE: COUNTER++, INV_BREAD: COUNTER++, BREAD_OVEN_OFF: COUNTER++, INV_SANDWICH: COUNTER++, FUR_WINTER: COUNTER++, BLUE_CORD: COUNTER++, LOCK: COUNTER++, DRAGON_HEART: COUNTER++, LAVA_HEART: COUNTER++, RESURRECTION: COUNTER++, EMERALD_MACHINE: COUNTER++, EXTRACTOR_MACHINE_STONE: COUNTER++, EXTRACTOR_MACHINE_GOLD: COUNTER++, EXTRACTOR_MACHINE_DIAMOND: COUNTER++, EXTRACTOR_MACHINE_AMETHYST: COUNTER++, EXTRACTOR_MACHINE_REIDITE: COUNTER++, LOCKPICK: COUNTER++, TOTEM: COUNTER++, SPIKE: COUNTER++, CORD: COUNTER++, WALL: COUNTER++, STONE_WALL: COUNTER++, GOLD_WALL: COUNTER++, DIAMOND_WALL: COUNTER++, DOOR_WOOD_CLOSE: COUNTER++, CHEST: COUNTER++, STONE_SPIKE: COUNTER++, GOLD_SPIKE: COUNTER++, DIAMOND_SPIKE: COUNTER++, DOOR_STONE_CLOSE: COUNTER++, DOOR_GOLD_CLOSE: COUNTER++, DOOR_DIAMOND_CLOSE: COUNTER++, FUR_WOLF: COUNTER++, INV_GEMME_BLUE: COUNTER++, INV_GEMME_GREEN: COUNTER++, INV_GEMME_ORANGE: COUNTER++, INV_SPECIAL_FUR: COUNTER++, INV_SPECIAL_FUR_2: COUNTER++, INV_BUCKET_FULL: COUNTER++, INV_BUCKET_EMPTY: COUNTER++, WELL_EMPTY: COUNTER++, SIGN: COUNTER++, DRAGON_CUBE: COUNTER++, DRAGON_ORB: COUNTER++, LAVA_CUBE: COUNTER++, LAVA_ORB: COUNTER++, PLANT_PUMPKIN: COUNTER++, PUMPKIN: COUNTER++, ROOF: COUNTER++, PLANT_GARLIC: COUNTER++, GARLIC: COUNTER++, PLANT_THORNBUSH: COUNTER++, THORNBUSH: COUNTER++, BANDAGE: COUNTER++, INV_CRAB_STICK: COUNTER++, INV_CRAB_LOOT: COUNTER++, BED: COUNTER++, SUGAR_CAN: COUNTER++, INV_CANDY: COUNTER++, GARLAND: COUNTER++, REIDITE: COUNTER++, MAGMA: COUNTER++, PLANT_CARROT: COUNTER++, CARROT: COUNTER++, PLANT_TOMATO: COUNTER++, TOMATO: COUNTER++, PLANT_WATERMELON: COUNTER++, WATERMELON: COUNTER++, PLANT_ALOE_VERA: COUNTER++, ALOE_VERA_GROWN: COUNTER++, WOOD_DOOR_SPIKE: COUNTER++, STONE_DOOR_SPIKE: COUNTER++, GOLD_DOOR_SPIKE: COUNTER++, DIAMOND_DOOR_SPIKE: COUNTER++, AMETHYST_DOOR_SPIKE: COUNTER++, REIDITE_WALL: COUNTER++, REIDITE_DOOR: COUNTER++, REIDITE_SPIKE: COUNTER++, REIDITE_DOOR_SPIKE: COUNTER++, WOOD_TOWER: COUNTER++, PENGUIN_FEATHER: COUNTER++, BOAT: COUNTER++, SLED: COUNTER++, BOAT_WAVE: COUNTER++, SLED_WAVE: COUNTER++, MOUNT_BOAR: COUNTER++, BOAR_STEP: COUNTER++, CRAB_STICK: COUNTER++, CRAB_LOOT: COUNTER++, CRAB_BOSS: COUNTER++, BABY_DRAGON: COUNTER++, BABY_LAVA: COUNTER++, CRAB_STEP: COUNTER++, HAWK: COUNTER++, PLANE: COUNTER++, HAWK_FEATHER: COUNTER++, VULTURE: COUNTER++, ALOE_VERA: COUNTER++, VULTURE_FEATHER: COUNTER++, EMERALD: COUNTER++, FUR_BOAR: COUNTER++, DECORATION: COUNTER++, FOD: COUNTER++, FIREFLY: COUNTER++, HURT_FIREFLY: COUNTER++, SPELL: COUNTER++, BABY_MAMMOTH: COUNTER++, BABY_MAMMOTH_STEP: COUNTER++, CRATE: COUNTER++, SEED: COUNTER++, INV_DRAGON_ORB: COUNTER++, INV_LAVA_ORB: COUNTER++, CRAFT_SWORD: COUNTER++, BODY: COUNTER++, CRAFT_PICK: COUNTER++, CRAFT_PICK_DIAMOND: COUNTER++, INV_PICK_GOLD: COUNTER++, MINIMAP: COUNTER++, SPIDER: COUNTER++, INV_SWORD: COUNTER++, CRAFT_WORK: COUNTER++, CRAFT_STONE_WALL: COUNTER++, RABBIT: COUNTER++, CRAFT_GOLD_WALL: COUNTER++, WEB: COUNTER++, GAUGES: COUNTER++, CRAFT_DOOR_WOOD_CLOSE: COUNTER++, CHEST_PLANT: COUNTER++, CHEST_GOLD: COUNTER++, CHEST_DIAMOND: COUNTER++, CHEST_PICK_GOLD: COUNTER++, CHEST_FIRE: COUNTER++, CHEST_PICK_WOOD: COUNTER++, CHEST_MEAT: COUNTER++, CHEST_BIG_FIRE: COUNTER++, INV_PLANT: COUNTER++, LEADERBOARD: COUNTER++, HURT: COUNTER++, COLD: COUNTER++, HUNGER: COUNTER++, GROUND_FIRE: COUNTER++, COUNTER: COUNTER++, CRAFT_SEED: COUNTER++, HERB: COUNTER++, HAND_SHADOW: COUNTER++, PLANT_MINI: COUNTER++, FIRE: COUNTER++, HALO_FIRE: COUNTER++, CRAFT_SWORD_GOLD: COUNTER++, CRAFT_SWORD_DIAMOND: COUNTER++, INV_SWORD_GOLD: COUNTER++, INV_SWORD_DIAMOND: COUNTER++, FRUIT: COUNTER++, CRAFT_PICK_GOLD: COUNTER++, INV_PICK_DIAMOND: COUNTER++, INV_GOLD: COUNTER++, INV_DIAMOND: COUNTER++, WOLF: COUNTER++, INV_MEAT: COUNTER++, GEAR2: COUNTER++, CRAFT_FIRE: COUNTER++, INV_BANDAGE: COUNTER++, CRAFT_BANDAGE: COUNTER++, INV_CORD: COUNTER++, YOUR_SCORE: COUNTER++, TREE_BRANCH: COUNTER++, HEAL: COUNTER++, INV_FIRE: COUNTER++, INV_WORK: COUNTER++, INV_SEED: COUNTER++, INV_PICK: COUNTER++, INV_PICK_WOOD: COUNTER++, CRAFT_PICK_WOOD: COUNTER++, INV_STONE: COUNTER++, INV_WOOD: COUNTER++, INV_WALL: COUNTER++, CRAFT_WALL: COUNTER++, INV_SPIKE: COUNTER++, CRAFT_SPIKE: COUNTER++, WHEAT_MOB: COUNTER++, HURT_RABBIT: COUNTER++, INV_COOKED_MEAT: COUNTER++, GEAR: COUNTER++, CRAFT_COOKED_MEAT: COUNTER++, HURT_WOLF: COUNTER++, CRAFT_BIG_FIRE: COUNTER++, INV_BIG_FIRE: COUNTER++, INV_STONE_WALL: COUNTER++, INV_GOLD_WALL: COUNTER++, INV_DIAMOND_WALL: COUNTER++, CRAFT_DIAMOND_WALL: COUNTER++, HURT_SPIDER: COUNTER++, EMPTY_SLOT: COUNTER++, INV_DOOR_WOOD_CLOSE: COUNTER++, DOOR_WOOD_OPEN: COUNTER++, INV_CHEST: COUNTER++, CRAFT_CHEST: COUNTER++, CHEST_SLOT: COUNTER++, CHEST_SWORD: COUNTER++, CHEST_PICK: COUNTER++, CHEST_STONE: COUNTER++, CHEST_WOOD: COUNTER++, CHEST_PICK_DIAMOND: COUNTER++, CHEST_SWORD_GOLD: COUNTER++, CHEST_SWORD_DIAMOND: COUNTER++, CHEST_WORK: COUNTER++, CHEST_SEED: COUNTER++, CHEST_WALL: COUNTER++, CHEST_SPIKE: COUNTER++, CHEST_COOKED_MEAT: COUNTER++, CHEST_BANDAGE: COUNTER++, CHEST_CORD: COUNTER++, CHEST_STONE_WALL: COUNTER++, CHEST_GOLD_WALL: COUNTER++, CHEST_DIAMOND_WALL: COUNTER++, CHEST_DOOR_WOOD_CLOSE: COUNTER++, CHEST_WORKBENCH: COUNTER++, CHEST_CHEST: COUNTER++, CRAFT_STONE_SPIKE: COUNTER++, INV_STONE_SPIKE: COUNTER++, INV_GOLD_SPIKE: COUNTER++, CRAFT_GOLD_SPIKE: COUNTER++, INV_DIAMOND_SPIKE: COUNTER++, CRAFT_DIAMOND_SPIKE: COUNTER++, CHEST_PLUS: COUNTER++, CRAFT_BAG: COUNTER++, INV_FUR: COUNTER++, INV_EARMUFFS: COUNTER++, CRAFT_EARMUFFS: COUNTER++, CRAFT_DOOR_STONE_CLOSE: COUNTER++, INV_DOOR_STONE_CLOSE: COUNTER++, DOOR_STONE_OPEN: COUNTER++, CRAFT_DOOR_GOLD_CLOSE: COUNTER++, INV_DOOR_GOLD_CLOSE: COUNTER++, DOOR_GOLD_OPEN: COUNTER++, CRAFT_DOOR_DIAMOND_CLOSE: COUNTER++, INV_DOOR_DIAMOND_CLOSE: COUNTER++, DOOR_DIAMOND_OPEN: COUNTER++, CRAFT_COAT: COUNTER++, INV_COAT: COUNTER++, CHEST_STONE_SPIKE: COUNTER++, CHEST_GOLD_SPIKE: COUNTER++, CHEST_DIAMOND_SPIKE: COUNTER++, CHEST_BAG: COUNTER++, CHEST_FUR: COUNTER++, CHEST_EARMUFFS: COUNTER++, CHEST_DOOR_STONE_CLOSE: COUNTER++, CHEST_DOOR_GOLD_CLOSE: COUNTER++, CHEST_DOOR_DIAMOND_CLOSE: COUNTER++, CHEST_COAT: COUNTER++, INV_BAG: COUNTER++, INV_FUR_WOLF: COUNTER++, CHEST_FUR_WOLF: COUNTER++, INV_SPEAR: COUNTER++, CRAFT_SPEAR: COUNTER++, CHEST_SPEAR: COUNTER++, INV_GOLD_SPEAR: COUNTER++, CRAFT_GOLD_SPEAR: COUNTER++, CHEST_GOLD_SPEAR: COUNTER++, INV_WOOD_SPEAR: COUNTER++, CRAFT_WOOD_SPEAR: COUNTER++, CHEST_WOOD_SPEAR: COUNTER++, INV_DIAMOND_SPEAR: COUNTER++, CRAFT_DIAMOND_SPEAR: COUNTER++, CHEST_DIAMOND_SPEAR: COUNTER++, FURNACE_ON: COUNTER++, INV_FURNACE: COUNTER++, CRAFT_FURNACE: COUNTER++, CHEST_FURNACE: COUNTER++, FURNACE_SLOT: COUNTER++, FURNACE_BUTTON: COUNTER++, FIR: COUNTER++, STONES_WINTER: COUNTER++, GOLD_WINTER: COUNTER++, DIAMOND_WINTER: COUNTER++, GROUND_FIRE_WINTER: COUNTER++, INV_AMETHYST: COUNTER++, FOX: COUNTER++, INV_EXPLORER_HAT: COUNTER++, CRAFT_EXPLORER_HAT: COUNTER++, CHEST_EXPLORER_HAT: COUNTER++, INV_PIRATE_HAT: COUNTER++, CRAFT_PIRATE_HAT: COUNTER++, CHEST_PIRATE_HAT: COUNTER++, INV_PILOT_HELMET: COUNTER++, CRAFT_PILOT_HELMET: COUNTER++, CHEST_PILOT_HELMET: COUNTER++, INV_STONE_HELMET: COUNTER++, CRAFT_STONE_HELMET: COUNTER++, CHEST_STONE_HELMET: COUNTER++, INV_GOLD_HELMET: COUNTER++, CRAFT_GOLD_HELMET: COUNTER++, CHEST_GOLD_HELMET: COUNTER++, INV_DIAMOND_HELMET: COUNTER++, CRAFT_DIAMOND_HELMET: COUNTER++, CHEST_DIAMOND_HELMET: COUNTER++, INV_BOOK: COUNTER++, CRAFT_BOOK: COUNTER++, CHEST_BOOK: COUNTER++, INV_PAPER: COUNTER++, CRAFT_PAPER: COUNTER++, CHEST_PAPER: COUNTER++, HERB_WINTER: COUNTER++, BEAR: COUNTER++, CHEST_AMETHYST: COUNTER++, SNOW: COUNTER++, DRAGON_GROUND: COUNTER++, DRAGON: COUNTER++, LAVA_DRAGON: COUNTER++, WING_LEFT: COUNTER++, WING_RIGHT: COUNTER++, LAVA_WING_LEFT: COUNTER++, LAVA_WING_RIGHT: COUNTER++, INV_SWORD_AMETHYST: COUNTER++, CRAFT_SWORD_AMETHYST: COUNTER++, CHEST_SWORD_AMETHYST: COUNTER++, INV_PICK_AMETHYST: COUNTER++, CHEST_PICK_AMETHYST: COUNTER++, CRAFT_PICK_AMETHYST: COUNTER++, HURT_FOX: COUNTER++, HURT_BEAR: COUNTER++, HURT_DRAGON: COUNTER++, HURT_LAVA_DRAGON: COUNTER++, SLOT_NUMBER: COUNTER++, HURT_WING_LEFT: COUNTER++, HURT_WING_RIGHT: COUNTER++, HURT_LAVA_WING_LEFT: COUNTER++, HURT_LAVA_WING_RIGHT: COUNTER++, FLAKES: COUNTER++, DESERT: COUNTER++, INV_AMETHYST_SPEAR: COUNTER++, CRAFT_AMETHYST_SPEAR: COUNTER++, CHEST_AMETHYST_SPEAR: COUNTER++, SNOW_STEP: COUNTER++, LAVA_STEP: COUNTER++, INV_HAMMER: COUNTER++, CRAFT_HAMMER: COUNTER++, CHEST_HAMMER: COUNTER++, INV_HAMMER_GOLD: COUNTER++, CRAFT_HAMMER_GOLD: COUNTER++, CHEST_HAMMER_GOLD: COUNTER++, INV_HAMMER_DIAMOND: COUNTER++, CRAFT_HAMMER_DIAMOND: COUNTER++, CHEST_HAMMER_DIAMOND: COUNTER++, INV_HAMMER_AMETHYST: COUNTER++, CRAFT_HAMMER_AMETHYST: COUNTER++, CHEST_HAMMER_AMETHYST: COUNTER++, INV_HAMMER_REIDITE: COUNTER++, CRAFT_HAMMER_REIDITE: COUNTER++, CHEST_HAMMER_REIDITE: COUNTER++, INV_AMETHYST_WALL: COUNTER++, CRAFT_AMETHYST_WALL: COUNTER++, CHEST_AMETHYST_WALL: COUNTER++, INV_AMETHYST_SPIKE: COUNTER++, CRAFT_AMETHYST_SPIKE: COUNTER++, CHEST_AMETHYST_SPIKE: COUNTER++, CRAFT_DOOR_AMETHYST_CLOSE: COUNTER++, INV_DOOR_AMETHYST_CLOSE: COUNTER++, DOOR_AMETHYST_OPEN: COUNTER++, CHEST_DOOR_AMETHYST_CLOSE: COUNTER++, INV_CAP_SCARF: COUNTER++, CRAFT_CAP_SCARF: COUNTER++, CHEST_CAP_SCARF: COUNTER++, INV_FUR_WINTER: COUNTER++, CHEST_FUR_WINTER: COUNTER++, SLOT_NUMBER: COUNTER++, DOOR_WOOD_OPEN_WINTER: COUNTER++, DOOR_STONE_OPEN_WINTER: COUNTER++, DOOR_GOLD_OPEN_WINTER: COUNTER++, DOOR_DIAMOND_OPEN_WINTER: COUNTER++, DOOR_AMETHYST_OPEN_WINTER: COUNTER++, INV_BLUE_CORD: COUNTER++, CHEST_BLUE_CORD: COUNTER++, CRAFT_BLUE_CORD: COUNTER++, BIGMAP: COUNTER++, SHOW_SPECTATORS: COUNTER++, INV_LOCK: COUNTER++, CRAFT_LOCK: COUNTER++, CHEST_LOCK: COUNTER++, INV_DRAGON_HEART: COUNTER++, CHEST_DRAGON_HEART: COUNTER++, INV_LAVA_HEART: COUNTER++, CHEST_LAVA_HEART: COUNTER++, RECONNECT: COUNTER++, RESURRECTION_GROUND: COUNTER++, RESURRECTION_HOLE: COUNTER++, RESURRECTION_ROTATE: COUNTER++, INV_RESURRECTION: COUNTER++, CRAFT_RESURRECTION: COUNTER++, CHEST_RESURRECTION: COUNTER++, INV_LOCKPICK: COUNTER++, CRAFT_LOCKPICK: COUNTER++, CHEST_LOCKPICK: COUNTER++, KEY: COUNTER++, PADLOCK: COUNTER++, DELAY_WEAPON: COUNTER++, LOCKED: COUNTER++, PADLOCK_ON_CHEST: COUNTER++, BUBBLES: COUNTER++, INV_AMETHYST_HELMET: COUNTER++, CRAFT_AMETHYST_HELMET: COUNTER++, CHEST_AMETHYST_HELMET: COUNTER++, SPECIAL_ITEMS: COUNTER++, POINTS: COUNTER++, AUTO_FEED: COUNTER++, BANDAGE_ACTIVATED: COUNTER++, STOP_REGENERATION: COUNTER++, STOP_REGENERATION_BLIZZARD: COUNTER++, INV_SUPER_HAMMER: COUNTER++, CRAFT_SUPER_HAMMER: COUNTER++, CHEST_SUPER_HAMMER: COUNTER++, INV_TOTEM: COUNTER++, CHEST_TOTEM: COUNTER++, CRAFT_TOTEM: COUNTER++, TEAM_BUTTON: COUNTER++, MANAGE_TEAM_BUTTON: COUNTER++, ICON_MEMBER: COUNTER++, ICON_LEADER: COUNTER++, FULL_TEAM_BUTTON: COUNTER++, SHOW_TEAM_BUTTON: COUNTER++, DELAY_TEAM: COUNTER++, INV_DRAGON_SWORD: COUNTER++, CRAFT_DRAGON_SWORD: COUNTER++, CHEST_DRAGON_SWORD: COUNTER++, INV_LAVA_SWORD: COUNTER++, CRAFT_LAVA_SWORD: COUNTER++, CHEST_LAVA_SWORD: COUNTER++, INV_WOOD_BOW: COUNTER++, CRAFT_WOOD_BOW: COUNTER++, CHEST_WOOD_BOW: COUNTER++, INV_STONE_BOW: COUNTER++, CRAFT_STONE_BOW: COUNTER++, CHEST_STONE_BOW: COUNTER++, INV_GOLD_BOW: COUNTER++, CRAFT_GOLD_BOW: COUNTER++, CHEST_GOLD_BOW: COUNTER++, INV_DIAMOND_BOW: COUNTER++, CRAFT_DIAMOND_BOW: COUNTER++, CHEST_DIAMOND_BOW: COUNTER++, INV_AMETHYST_BOW: COUNTER++, CRAFT_AMETHYST_BOW: COUNTER++, CHEST_AMETHYST_BOW: COUNTER++, INV_REIDITE_BOW: COUNTER++, CRAFT_REIDITE_BOW: COUNTER++, CHEST_REIDITE_BOW: COUNTER++, INV_DRAGON_BOW: COUNTER++, CRAFT_DRAGON_BOW: COUNTER++, CHEST_DRAGON_BOW: COUNTER++, CHEST_DRAGON_ORB: COUNTER++, CHEST_LAVA_ORB: COUNTER++, SHOP: COUNTER++, CURSED_SWORD: COUNTER++, INV_CURSED_SWORD: COUNTER++, CRAFT_CURSED_SWORD: COUNTER++, CHEST_CURSED_SWORD: COUNTER++, ITEM1: COUNTER++, ITEM2: COUNTER++, ITEM3: COUNTER++, ITEM4: COUNTER++, SAND_BORDER: COUNTER++, SAND_STEP: COUNTER++, OCEAN: COUNTER++, CRAFT_BRIDGE: COUNTER++, INV_BRIDGE: COUNTER++, CHEST_BRIDGE: COUNTER++, LACK: COUNTER++, OXYGEN: COUNTER++, INV_SAND: COUNTER++, CHEST_SAND: COUNTER++, CRAFT_BOTTLE_EMPTY: COUNTER++, INV_BOTTLE_EMPTY: COUNTER++, INV_BOTTLE_FULL: COUNTER++, CHEST_BOTTLE_EMPTY: COUNTER++, CHEST_BOTTLE_FULL: COUNTER++, INV_SHOVEL: COUNTER++, CHEST_SHOVEL: COUNTER++, CRAFT_SHOVEL: COUNTER++, LAKE_DEEP: COUNTER++, LAKE: COUNTER++, LAKE_EDGE: COUNTER++, SHINGLE: COUNTER++, DRIED_PLANT: COUNTER++, INV_KRAKEN_SKIN: COUNTER++, CHEST_KRAKEN_SKIN: COUNTER++, INV_WATERING_CAN: COUNTER++, CRAFT_WATERING_CAN: COUNTER++, CHEST_WATERING_CAN: COUNTER++, INV_FLOUR: COUNTER++, CHEST_FLOUR: COUNTER++, INV_WHEAT_SEED: COUNTER++, CRAFT_WHEAT_SEED: COUNTER++, CHEST_WHEAT_SEED: COUNTER++, INV_COOKIE: COUNTER++, CRAFT_COOKIE: COUNTER++, CHEST_COOKIE: COUNTER++, KRAKEN: COUNTER++, DRIED_WHEAT: COUNTER++, INV_WILD_WHEAT: COUNTER++, CHEST_WILD_WHEAT: COUNTER++, WINDMILL_WINGS: COUNTER++, WINDMILL_HEAD: COUNTER++, CRAFT_WINDMILL: COUNTER++, INV_WINDMILL: COUNTER++, CHEST_WINDMILL: COUNTER++, INV_SUPER_DIVING_SUIT: COUNTER++, CRAFT_SUPER_DIVING_SUIT: COUNTER++, CHEST_SUPER_DIVING_SUIT: COUNTER++, INV_DIVING_MASK: COUNTER++, CRAFT_DIVING_MASK: COUNTER++, CHEST_DIVING_MASK: COUNTER++, INV_WATERING_CAN_FULL: COUNTER++, CHEST_WATERING_CAN_FULL: COUNTER++, CRAFT_WATERING_CAN_FULL: COUNTER++, WINDMILL_CASES: COUNTER++, EXTRACTOR_CASES: COUNTER++, WINDMILL_WHEAT_SEED: COUNTER++, WINDMILL_FLOUR: COUNTER++, INV_CAKE: COUNTER++, CRAFT_CAKE: COUNTER++, CHEST_CAKE: COUNTER++, INV_FOODFISH: COUNTER++, CHEST_FOODFISH: COUNTER++, INV_FOODFISH_COOKED: COUNTER++, CHEST_FOODFISH_COOKED: COUNTER++, CRAFT_FOODFISH_COOKED: COUNTER++, DELAY_DRINK: COUNTER++, WHEAT_SEED_DRIED: COUNTER++, HEART_SYMBOL_HUD: COUNTER++, COLD_SYMBOL_HUD: COUNTER++, FOOD_SYMBOL_HUD: COUNTER++, WATER_SYMBOL_HUD: COUNTER++, PIRANHA: COUNTER++, INV_SCALES: COUNTER++, CHEST_SCALES: COUNTER++, CAVE_STONES: COUNTER++, HERB_CAVE: COUNTER++, WATERBLOCK: COUNTER++, SHADOW_CAVE_STONES: COUNTER++, CAVE_STEP: COUNTER++, DELAY_SPIKE: COUNTER++, CHEST_GROUND: COUNTER++, CHEST_PLOT: COUNTER++, CRAFT_PLOT: COUNTER++, INV_PLOT: COUNTER++, CHEST_ICE: COUNTER++, HURT_KRAKEN: COUNTER++, HURT_PIRANHA: COUNTER++, CHEST_BREAD: COUNTER++, CRAFT_BREAD: COUNTER++, TREASURE_CHEST: COUNTER++, ISLAND: COUNTER++, PALM: COUNTER++, WAVE_ONE: COUNTER++, WAVE_TWO: COUNTER++, ISLAND_BLOCK: COUNTER++, HURT_TREASURE_CHEST: COUNTER++, ISLAND_STEP: COUNTER++, INV_SHOVEL_GOLD: COUNTER++, CRAFT_SHOVEL_GOLD: COUNTER++, CHEST_SHOVEL_GOLD: COUNTER++, INV_SHOVEL_DIAMOND: COUNTER++, CHEST_SHOVEL_DIAMOND: COUNTER++, CRAFT_SHOVEL_DIAMOND: COUNTER++, INV_SHOVEL_AMETHYST: COUNTER++, CRAFT_SHOVEL_AMETHYST: COUNTER++, CHEST_SHOVEL_AMETHYST: COUNTER++, RECIPE_BUTTON: COUNTER++, INV_SPANNER: COUNTER++, CHEST_SPANNER: COUNTER++, CRAFT_SPANNER: COUNTER++, INV_MACHETE: COUNTER++, CHEST_MACHETE: COUNTER++, CRAFT_MACHETE: COUNTER++, CRAFT_BOTTLE_FULL: COUNTER++, BREAD_OVEN_ON: COUNTER++, INV_BREAD_OVEN: COUNTER++, CRAFT_BREAD_OVEN: COUNTER++, CHEST_BREAD_OVEN: COUNTER++, BREAD_LIGHT_UP: COUNTER++, BREAD_LIGHT_DOWN: COUNTER++, BREAD_OVEN_UI: COUNTER++, BREAD_OVEN_WOOD: COUNTER++, BREAD_OVEN_BREAD: COUNTER++, CLOCK: COUNTER++, ARROW_CLOCK: COUNTER++, OPTION_BUTTON: COUNTER++, DEAD_BOX: COUNTER++, HURT_DEAD_BOX: COUNTER++, CRAFT_SANDWICH: COUNTER++, CHEST_SANDWICH: COUNTER++, INV_DRAGON_HELMET: COUNTER++, CHEST_DRAGON_HELMET: COUNTER++, CRAFT_DRAGON_HELMET: COUNTER++, INV_LAVA_HELMET: COUNTER++, CHEST_LAVA_HELMET: COUNTER++, CRAFT_LAVA_HELMET: COUNTER++, INV_WITCH: COUNTER++, CHEST_WITCH: COUNTER++, CRAFT_WITCH: COUNTER++, INV_NIMBUS: COUNTER++, CHEST_NIMBUS: COUNTER++, CRAFT_NIMBUS: COUNTER++, INV_WAND1: COUNTER++, CHEST_WAND1: COUNTER++, CRAFT_WAND1: COUNTER++, INV_WAND2: COUNTER++, CHEST_WAND2: COUNTER++, CRAFT_WAND2: COUNTER++, DRAGON_SWORD_HALO: COUNTER++, INV_DRAGON_CUBE: COUNTER++, CHEST_DRAGON_CUBE: COUNTER++, INV_LAVA_CUBE: COUNTER++, CHEST_LAVA_CUBE: COUNTER++, QUEST_BUTTON: COUNTER++, INV_CROWN_GREEN: COUNTER++, CHEST_CROWN_GREEN: COUNTER++, CRAFT_CROWN_GREEN: COUNTER++, CHEST_GEMME_GREEN: COUNTER++, INV_CROWN_ORANGE: COUNTER++, CHEST_CROWN_ORANGE: COUNTER++, CRAFT_CROWN_ORANGE: COUNTER++, CHEST_GEMME_ORANGE: COUNTER++, INV_CROWN_BLUE: COUNTER++, CHEST_CROWN_BLUE: COUNTER++, CHEST_GEMME_BLUE: COUNTER++, INV_HOOD: COUNTER++, CRAFT_HOOD: COUNTER++, CHEST_HOOD: COUNTER++, CRAFT_CROWN_BLUE: COUNTER++, INV_PEASANT: COUNTER++, CRAFT_PEASANT: COUNTER++, CHEST_PEASANT: COUNTER++, CHEST_SPECIAL_FUR: COUNTER++, CHEST_SPECIAL_FUR_2: COUNTER++, INV_WINTER_PEASANT: COUNTER++, CRAFT_WINTER_PEASANT: COUNTER++, CHEST_WINTER_PEASANT: COUNTER++, INV_WINTER_HOOD: COUNTER++, CRAFT_WINTER_HOOD: COUNTER++, CHEST_WINTER_HOOD: COUNTER++, SOUND_BUTTON_ON: COUNTER++, SOUND_BUTTON_OFF: COUNTER++, CRAFT_BUCKET_FULL: COUNTER++, CRAFT_BUCKET_EMPTY: COUNTER++, CHEST_BUCKET_FULL: COUNTER++, CHEST_BUCKET_EMPTY: COUNTER++, WELL_FULL: COUNTER++, INV_WELL: COUNTER++, CHEST_WELL: COUNTER++, CRAFT_WELL: COUNTER++, DELAY_HELMET: COUNTER++, GLOVES_HOOD: COUNTER++, DELAY_WALL: COUNTER++, MARKET_BUTTON: COUNTER++, ACCESSORY: COUNTER++, MARKET_BGD: COUNTER++, DEAD_BOX_UI: COUNTER++, CRAFT_SIGN: COUNTER++, INV_SIGN: COUNTER++, CHEST_SIGN: COUNTER++, SYMBOLS: COUNTER++, SIGN_BUTTON: COUNTER++, TREE_WEB1: COUNTER++, TREE_WEB2: COUNTER++, TREE_BRANCH_WEB1: COUNTER++, TREE_BRANCH_WEB2: COUNTER++, INV_PUMPKIN_SEED: COUNTER++, CRAFT_PUMPKIN_SEED: COUNTER++, CHEST_PUMPKIN_SEED: COUNTER++, PUMPKIN_SEED_MOB: COUNTER++, PLANT_PUMPKIN_DRIED: COUNTER++, DRIED_PUMPKIN: COUNTER++, INV_PUMPKIN: COUNTER++, CHEST_PUMPKIN: COUNTER++, HALO_FIRE_PUMPKIN: COUNTER++, GROUND_FIRE_PUMPKIN: COUNTER++, MINIMAP_CTX: COUNTER++, BIGMAP_CTX: COUNTER++, ZOMBIE_BODY: COUNTER++, ZOMBIE_HEAD: COUNTER++, ZOMBIE_HAND: COUNTER++, ZOMBIE_HURT: COUNTER++, ZOMBIE_HUNGER: COUNTER++, ZOMBIE_HEAL: COUNTER++, INV_WOOD_HELMET: COUNTER++, CRAFT_WOOD_HELMET: COUNTER++, CHEST_WOOD_HELMET: COUNTER++, INV_SWORD_WOOD: COUNTER++, CRAFT_SWORD_WOOD: COUNTER++, CHEST_SWORD_WOOD: COUNTER++, ZOMBIE_PLAYER: COUNTER++, VAMPIRE: COUNTER++, INV_GARLIC_SEED: COUNTER++, CRAFT_GARLIC_SEED: COUNTER++, CHEST_GARLIC_SEED: COUNTER++, GARLIC_SEED_MOB: COUNTER++, PLANT_GARLIC_DRIED: COUNTER++, DRIED_GARLIC: COUNTER++, INV_GARLIC: COUNTER++, CHEST_GARLIC: COUNTER++, INV_ROOF: COUNTER++, CRAFT_ROOF: COUNTER++, CHEST_ROOF: COUNTER++, INV_THORNBUSH_SEED: COUNTER++, CRAFT_THORNBUSH_SEED: COUNTER++, CHEST_THORNBUSH_SEED: COUNTER++, THORNBUSH_SEED_MOB: COUNTER++, PLANT_THORNBUSH_DRIED: COUNTER++, INV_THORNBUSH: COUNTER++, CHEST_THORNBUSH: COUNTER++, CRAFT_THORNBUSH: COUNTER++, ROOFS: COUNTER++, GIFT: COUNTER++, TREE_SNOW1: COUNTER++, TREE_SNOW2: COUNTER++, TREE_BRANCH_SNOW1: COUNTER++, TREE_BRANCH_SNOW2: COUNTER++, HURT_GIFT: COUNTER++, INV_PIRATE_SWORD: COUNTER++, CRAFT_PIRATE_SWORD: COUNTER++, CHEST_PIRATE_SWORD: COUNTER++, CHEST_SUGAR_CAN: COUNTER++, CRAFT_SUGAR_CAN: COUNTER++, INV_SUGAR_CAN: COUNTER++, INV_FERRERO: COUNTER++, CHEST_FERRERO: COUNTER++, CHEST_CANDY: COUNTER++, DRIED_THORNBUSH: COUNTER++, INV_GARLAND: COUNTER++, CHEST_GARLAND: COUNTER++, GARLANDS: COUNTER++, GARLANDS_LIGHT: COUNTER++, INV_DRAGON_SPEAR: COUNTER++, CHEST_DRAGON_SPEAR: COUNTER++, CRAFT_DRAGON_SPEAR: COUNTER++, INV_LAVA_SPEAR: COUNTER++, CHEST_LAVA_SPEAR: COUNTER++, CRAFT_LAVA_SPEAR: COUNTER++, INV_CHRISTMAS_HAT: COUNTER++, CHEST_CHRISTMAS_HAT: COUNTER++, INV_ELF_HAT: COUNTER++, CHEST_ELF_HAT: COUNTER++, ROBOT_SKIN: COUNTER++, VERIFIED: COUNTER++, CRAB_ATTACK: COUNTER++, CRAB: COUNTER++, HURT_CRAB: COUNTER++, HURT_CRAB_CLAW_LEFT: COUNTER++, HURT_CRAB_CLAW_RIGHT: COUNTER++, HEAL_CRAB: COUNTER++, HEAL_CRAB_CLAW_LEFT: COUNTER++, HEAL_CRAB_CLAW_RIGHT: COUNTER++, CRAB_CLAW_LEFT: COUNTER++, CRAB_CLAW_RIGHT: COUNTER++, CRAB_CLAW_LEFT_ATTACK: COUNTER++, CRAB_CLAW_RIGHT_ATTACK: COUNTER++, CHEST_CRAB_STICK: COUNTER++, CHEST_CRAB_SPEAR: COUNTER++, CRAFT_CRAB_SPEAR: COUNTER++, INV_CRAB_SPEAR: COUNTER++, FISH1: COUNTER++, FISH2: COUNTER++, HURT_FISH1: COUNTER++, HURT_FISH2: COUNTER++, CHEST_CRAB_LOOT: COUNTER++, INV_BED: COUNTER++, CHEST_BED: COUNTER++, CRAFT_BED: COUNTER++, INV_CROWN_CRAB: COUNTER++, CHEST_CROWN_CRAB: COUNTER++, CRAFT_CROWN_CRAB: COUNTER++, BED_TOP: COUNTER++, HURT_RABBIT_SKIN: COUNTER++, COLD_RABBIT_SKIN: COUNTER++, HUNGER_RABBIT_SKIN: COUNTER++, HEAL_RABBIT_SKIN: COUNTER++, FIRE_MOB: COUNTER++, HURT_FIRE_MOB: COUNTER++, GLOVES_DIAMOND_PROTECTION: COUNTER++, INV_DIAMOND_PROTECTION: COUNTER++, CRAFT_DIAMOND_PROTECTION: COUNTER++, CHEST_DIAMOND_PROTECTION: COUNTER++, GLOVES_AMETHYST_PROTECTION: COUNTER++, INV_AMETHYST_PROTECTION: COUNTER++, CRAFT_AMETHYST_PROTECTION: COUNTER++, CHEST_AMETHYST_PROTECTION: COUNTER++, GLOVES_REIDITE_PROTECTION: COUNTER++, INV_REIDITE_PROTECTION: COUNTER++, CRAFT_REIDITE_PROTECTION: COUNTER++, CHEST_REIDITE_PROTECTION: COUNTER++, INV_REIDITE_SWORD: COUNTER++, CRAFT_REIDITE_SWORD: COUNTER++, CHEST_REIDITE_SWORD: COUNTER++, LAVA_SHINGLE: COUNTER++, INV_FLAME: COUNTER++, CHEST_FLAME: COUNTER++, INV_REIDITE: COUNTER++, CHEST_REIDITE: COUNTER++, HERB_LAVA: COUNTER++, LAVA_BUBBLE: COUNTER++, ASHES: COUNTER++, INV_REIDITE_SPEAR: COUNTER++, CRAFT_REIDITE_SPEAR: COUNTER++, CHEST_REIDITE_SPEAR: COUNTER++, INV_REIDITE_HELMET: COUNTER++, CRAFT_REIDITE_HELMET: COUNTER++, CHEST_REIDITE_HELMET: COUNTER++, INV_CARROT_SEED: COUNTER++, CRAFT_CARROT_SEED: COUNTER++, CHEST_CARROT_SEED: COUNTER++, CARROT_SEED_MOB: COUNTER++, PLANT_CARROT_DRIED: COUNTER++, DRIED_CARROT: COUNTER++, INV_CARROT: COUNTER++, CHEST_CARROT: COUNTER++, TOMATO_MINI: COUNTER++, DRIED_TOMATO_MINI: COUNTER++, INV_TOMATO_SEED: COUNTER++, CRAFT_TOMATO_SEED: COUNTER++, CHEST_TOMATO_SEED: COUNTER++, TOMATO_SEED_MOB: COUNTER++, PLANT_TOMATO_DRIED: COUNTER++, DRIED_TOMATO: COUNTER++, INV_TOMATO: COUNTER++, INV_WATERMELON_SEED: COUNTER++, CRAFT_WATERMELON_SEED: COUNTER++, CHEST_WATERMELON_SEED: COUNTER++, WATERMELON_SEED_MOB: COUNTER++, PLANT_WATERMELON_DRIED: COUNTER++, DRIED_WATERMELON: COUNTER++, INV_WATERMELON: COUNTER++, CHEST_WATERMELON: COUNTER++, CHEST_TOMATO: COUNTER++, INV_PITCHFORK: COUNTER++, CHEST_PITCHFORK: COUNTER++, CRAFT_PITCHFORK: COUNTER++, INV_PITCHFORK2: COUNTER++, CHEST_PITCHFORK2: COUNTER++, CRAFT_PITCHFORK2: COUNTER++, INV_ALOE_VERA_SEED: COUNTER++, CRAFT_ALOE_VERA_SEED: COUNTER++, CHEST_ALOE_VERA_SEED: COUNTER++, ALOE_VERA_SEED_MOB: COUNTER++, PLANT_ALOE_VERA_DRIED: COUNTER++, DRIED_ALOE_VERA: COUNTER++, INV_ALOE_VERA: COUNTER++, CHEST_ALOE_VERA: COUNTER++, CACTUS: COUNTER++, CRAFT_WOOD_DOOR_SPIKE: COUNTER++, INV_WOOD_DOOR_SPIKE: COUNTER++, CHEST_WOOD_DOOR_SPIKE: COUNTER++, CRAFT_STONE_DOOR_SPIKE: COUNTER++, INV_STONE_DOOR_SPIKE: COUNTER++, CHEST_STONE_DOOR_SPIKE: COUNTER++, CRAFT_GOLD_DOOR_SPIKE: COUNTER++, INV_GOLD_DOOR_SPIKE: COUNTER++, CHEST_GOLD_DOOR_SPIKE: COUNTER++, CRAFT_DIAMOND_DOOR_SPIKE: COUNTER++, INV_DIAMOND_DOOR_SPIKE: COUNTER++, CHEST_DIAMOND_DOOR_SPIKE: COUNTER++, CRAFT_AMETHYST_DOOR_SPIKE: COUNTER++, INV_AMETHYST_DOOR_SPIKE: COUNTER++, CHEST_AMETHYST_DOOR_SPIKE: COUNTER++, CRAFT_REIDITE_DOOR_SPIKE: COUNTER++, INV_REIDITE_DOOR_SPIKE: COUNTER++, CHEST_REIDITE_DOOR_SPIKE: COUNTER++, CRAFT_REIDITE_DOOR: COUNTER++, INV_REIDITE_DOOR: COUNTER++, CHEST_REIDITE_DOOR: COUNTER++, CRAFT_REIDITE_SPIKE: COUNTER++, INV_REIDITE_SPIKE: COUNTER++, CHEST_REIDITE_SPIKE: COUNTER++, CRAFT_REIDITE_WALL: COUNTER++, INV_REIDITE_WALL: COUNTER++, CHEST_REIDITE_WALL: COUNTER++, INV_PICK_REIDITE: COUNTER++, CHEST_PICK_REIDITE: COUNTER++, CRAFT_PICK_REIDITE: COUNTER++, GOLDEN_HEN: COUNTER++, GOLDEN_CHICKEN: COUNTER++, HURT_GOLDEN_HEN: COUNTER++, HURT_GOLDEN_CHICKEN: COUNTER++, RIVER: COUNTER++, RIVER_DECO: COUNTER++, RIVER_WAVE: COUNTER++, CRAFT_BOAT: COUNTER++, INV_BOAT: COUNTER++, CHEST_BOAT: COUNTER++, CRAFT_SLED: COUNTER++, INV_SLED: COUNTER++, CHEST_SLED: COUNTER++, PENGUIN: COUNTER++, HURT_PENGUIN: COUNTER++, INV_PENGUIN_FEATHER: COUNTER++, CHEST_PENGUIN_FEATHER: COUNTER++, INV_HAWK_FEATHER: COUNTER++, CHEST_HAWK_FEATHER: COUNTER++, INV_VULTURE_FEATHER: COUNTER++, CHEST_VULTURE_FEATHER: COUNTER++, FOG: COUNTER++, BOAR: COUNTER++, BOAR_TAMED: COUNTER++, BOAR_ATTACK: COUNTER++, HURT_BOAR: COUNTER++, INV_SADDLE: COUNTER++, CHEST_SADDLE: COUNTER++, CRAFT_SADDLE: COUNTER++, INV_MOUNT_BOAR: COUNTER++, CHEST_MOUNT_BOAR: COUNTER++, CRAFT_MOUNT_BOAR: COUNTER++, MARKER: COUNTER++, CRAB_BOSS_ATTACK: COUNTER++, CRAB_BOSS: COUNTER++, CRAB_BOSS_TAMED: COUNTER++, HURT_CRAB_BOSS: COUNTER++, HURT_CRAB_BOSS_CLAW_LEFT: COUNTER++, HURT_CRAB_BOSS_CLAW_RIGHT: COUNTER++, CRAB_BOSS_CLAW_LEFT_ATTACK: COUNTER++, CRAB_BOSS_CLAW_LEFT: COUNTER++, CRAB_BOSS_CLAW_LEFT_TAMED: COUNTER++, CRAB_BOSS_CLAW_RIGHT_ATTACK: COUNTER++, CRAB_BOSS_CLAW_RIGHT: COUNTER++, CRAB_BOSS_CLAW_RIGHT_TAMED: COUNTER++, HEAL_CRAB_BOSS: COUNTER++, HEAL_CRAB_BOSS_CLAW_LEFT: COUNTER++, HEAL_CRAB_BOSS_CLAW_RIGHT: COUNTER++, BABY_DRAGON_ATTACK: COUNTER++, BABY_DRAGON: COUNTER++, BABY_DRAGON_TAMED: COUNTER++, BABY_DRAGON_WING_LEFT_ATTACK: COUNTER++, BABY_DRAGON_WING_LEFT: COUNTER++, BABY_DRAGON_WING_LEFT_TAMED: COUNTER++, BABY_DRAGON_WING_RIGHT_ATTACK: COUNTER++, BABY_DRAGON_WING_RIGHT: COUNTER++, BABY_DRAGON_WING_RIGHT_TAMED: COUNTER++, HURT_BABY_DRAGON: COUNTER++, HURT_BABY_DRAGON_WING_LEFT: COUNTER++, HURT_BABY_DRAGON_WING_RIGHT: COUNTER++, INV_BABY_DRAGON: COUNTER++, CHEST_BABY_DRAGON: COUNTER++, CRAFT_BABY_DRAGON: COUNTER++, BABY_LAVA_ATTACK: COUNTER++, BABY_LAVA: COUNTER++, BABY_LAVA_TAMED: COUNTER++, BABY_LAVA_WING_LEFT_ATTACK: COUNTER++, BABY_LAVA_WING_LEFT: COUNTER++, BABY_LAVA_WING_LEFT_TAMED: COUNTER++, BABY_LAVA_WING_RIGHT_ATTACK: COUNTER++, BABY_LAVA_WING_RIGHT: COUNTER++, BABY_LAVA_WING_RIGHT_TAMED: COUNTER++, HURT_BABY_LAVA: COUNTER++, HURT_BABY_LAVA_WING_LEFT: COUNTER++, HURT_BABY_LAVA_WING_RIGHT: COUNTER++, INV_BABY_LAVA: COUNTER++, CHEST_BABY_LAVA: COUNTER++, CRAFT_BABY_LAVA: COUNTER++, HAWK_ATTACK: COUNTER++, HAWK: COUNTER++, HAWK_TAMED: COUNTER++, HAWK_WING_LEFT_ATTACK: COUNTER++, HAWK_WING_LEFT: COUNTER++, HAWK_WING_LEFT_TAMED: COUNTER++, HAWK_WING_RIGHT_ATTACK: COUNTER++, HAWK_WING_RIGHT: COUNTER++, HAWK_WING_RIGHT_TAMED: COUNTER++, HURT_HAWK: COUNTER++, HURT_HAWK_WING_LEFT: COUNTER++, HURT_HAWK_WING_RIGHT: COUNTER++, INV_HAWK: COUNTER++, CHEST_HAWK: COUNTER++, CRAFT_HAWK: COUNTER++, HAWK_GROUND: COUNTER++, HAWK_GROUND_ATTACK: COUNTER++, HURT_HAWK_GROUND: COUNTER++, CRAFT_PLANE: COUNTER++, INV_PLANE: COUNTER++, CHEST_PLANE: COUNTER++, VULTURE_ATTACK: COUNTER++, VULTURE: COUNTER++, VULTURE_TAMED: COUNTER++, VULTURE_WING_LEFT_ATTACK: COUNTER++, VULTURE_WING_LEFT: COUNTER++, VULTURE_WING_LEFT_TAMED: COUNTER++, VULTURE_WING_RIGHT_ATTACK: COUNTER++, VULTURE_WING_RIGHT: COUNTER++, VULTURE_WING_RIGHT_TAMED: COUNTER++, HURT_VULTURE: COUNTER++, HURT_VULTURE_WING_LEFT: COUNTER++, HURT_VULTURE_WING_RIGHT: COUNTER++, INV_VULTURE: COUNTER++, CHEST_VULTURE: COUNTER++, CRAFT_VULTURE: COUNTER++, VULTURE_GROUND: COUNTER++, VULTURE_GROUND_ATTACK: COUNTER++, HURT_VULTURE_GROUND: COUNTER++, INV_TURBAN1: COUNTER++, CRAFT_TURBAN1: COUNTER++, CHEST_TURBAN1: COUNTER++, INV_TURBAN2: COUNTER++, CRAFT_TURBAN2: COUNTER++, CHEST_TURBAN2: COUNTER++, SCORPION: COUNTER++, HURT_SCORPION: COUNTER++, SCORPION_HAND_LEFT: COUNTER++, SCORPION_HAND_RIGHT: COUNTER++, HURT_SCORPION_HAND_LEFT: COUNTER++, HURT_SCORPION_HAND_RIGHT: COUNTER++, SAND_WORM_GROUND: [\"#E9CF96\", \"#144940\"], HURT_SAND_WORM0: COUNTER++, SAND_WORM1: COUNTER++, HURT_SAND_WORM1: COUNTER++, SAND_WORM2: COUNTER++, HURT_SAND_WORM2: COUNTER++, INV_CACTUS: COUNTER++, CHEST_CACTUS: COUNTER++, INV_EMERALD: COUNTER++, CHEST_EMERALD: COUNTER++, INV_PITCHFORK_PART: COUNTER++, CHEST_PITCHFORK_PART: COUNTER++, INV_PILOT_GLASSES: COUNTER++, CHEST_PILOT_GLASSES: COUNTER++, INV_FUR_BOAR: COUNTER++, CHEST_FUR_BOAR: COUNTER++, INV_FIREFLY: COUNTER++, CHEST_FIREFLY: COUNTER++, INV_WOOD_ARROW: COUNTER++, CHEST_WOOD_ARROW: COUNTER++, CRAFT_WOOD_ARROW: COUNTER++, INV_STONE_ARROW: COUNTER++, CHEST_STONE_ARROW: COUNTER++, CRAFT_STONE_ARROW: COUNTER++, INV_GOLD_ARROW: COUNTER++, CHEST_GOLD_ARROW: COUNTER++, CRAFT_GOLD_ARROW: COUNTER++, INV_DIAMOND_ARROW: COUNTER++, CHEST_DIAMOND_ARROW: COUNTER++, CRAFT_DIAMOND_ARROW: COUNTER++, INV_AMETHYST_ARROW: COUNTER++, CHEST_AMETHYST_ARROW: COUNTER++, CRAFT_AMETHYST_ARROW: COUNTER++, INV_REIDITE_ARROW: COUNTER++, CHEST_REIDITE_ARROW: COUNTER++, CRAFT_REIDITE_ARROW: COUNTER++, INV_DRAGON_ARROW: COUNTER++, CHEST_DRAGON_ARROW: COUNTER++, CRAFT_DRAGON_ARROW: COUNTER++, INV_SANDWORM_JUICE: COUNTER++, CHEST_SANDWORM_JUICE: COUNTER++, INV_CRAB_BOSS: COUNTER++, CHEST_CRAB_BOSS: COUNTER++, CRAFT_CRAB_BOSS: COUNTER++, EMERALD_MACHINE_GROUND: COUNTER++, EMERALD_MACHINE_HOLE: COUNTER++, EMERALD_MACHINE_ROTATE: COUNTER++, INV_EMERALD_MACHINE: COUNTER++, CRAFT_EMERALD_MACHINE: COUNTER++, CHEST_EMERALD_MACHINE: COUNTER++, EXTRACTOR_MACHINE0_STONE: COUNTER++, INV_EXTRACTOR_MACHINE_STONE: COUNTER++, CRAFT_EXTRACTOR_MACHINE_STONE: COUNTER++, CHEST_EXTRACTOR_MACHINE_STONE: COUNTER++, EXTRACTOR_MACHINE0_GOLD: COUNTER++, INV_EXTRACTOR_MACHINE_GOLD: COUNTER++, CRAFT_EXTRACTOR_MACHINE_GOLD: COUNTER++, CHEST_EXTRACTOR_MACHINE_GOLD: COUNTER++, EXTRACTOR_MACHINE0_DIAMOND: COUNTER++, INV_EXTRACTOR_MACHINE_DIAMOND: COUNTER++, CRAFT_EXTRACTOR_MACHINE_DIAMOND: COUNTER++, CHEST_EXTRACTOR_MACHINE_DIAMOND: COUNTER++, EXTRACTOR_MACHINE0_AMETHYST: COUNTER++, INV_EXTRACTOR_MACHINE_AMETHYST: COUNTER++, CRAFT_EXTRACTOR_MACHINE_AMETHYST: COUNTER++, CHEST_EXTRACTOR_MACHINE_AMETHYST: COUNTER++, EXTRACTOR_MACHINE0_REIDITE: COUNTER++, INV_EXTRACTOR_MACHINE_REIDITE: COUNTER++, CRAFT_EXTRACTOR_MACHINE_REIDITE: COUNTER++, CHEST_EXTRACTOR_MACHINE_REIDITE: COUNTER++, MAMMOTH: COUNTER++, HURT_MAMMOTH: COUNTER++, BABY_MAMMOTH: COUNTER++, BABY_MAMMOTH_TAMED: COUNTER++, BABY_MAMMOTH_ATTACK: COUNTER++, HURT_BABY_MAMMOTH: COUNTER++, INV_BABY_MAMMOTH: COUNTER++, CHEST_BABY_MAMMOTH: COUNTER++, CRAFT_BABY_MAMMOTH: COUNTER++, INV_FLOWER_HAT: COUNTER++, CRAFT_FLOWER_HAT: COUNTER++, CHEST_FLOWER_HAT: COUNTER++, INV_FUR_HAT: COUNTER++, CRAFT_FUR_HAT: COUNTER++, CHEST_FUR_HAT: COUNTER++, INV_FUR_MAMMOTH: COUNTER++, CHEST_FUR_MAMMOTH: COUNTER++, CRAFT_WOOD_TOWER: COUNTER++, INV_WOOD_TOWER: COUNTER++, CHEST_WOOD_TOWER: COUNTER++, CRAFT_WOOD_SHIELD: COUNTER++, INV_WOOD_SHIELD: COUNTER++, CHEST_WOOD_SHIELD: COUNTER++, CRAFT_STONE_SHIELD: COUNTER++, INV_STONE_SHIELD: COUNTER++, CHEST_STONE_SHIELD: COUNTER++, CRAFT_GOLD_SHIELD: COUNTER++, INV_GOLD_SHIELD: COUNTER++, CHEST_GOLD_SHIELD: COUNTER++, CRAFT_DIAMOND_SHIELD: COUNTER++, INV_DIAMOND_SHIELD: COUNTER++, CHEST_DIAMOND_SHIELD: COUNTER++, CRAFT_AMETHYST_SHIELD: COUNTER++, INV_AMETHYST_SHIELD: COUNTER++, CHEST_AMETHYST_SHIELD: COUNTER++, CRAFT_REIDITE_SHIELD: COUNTER++, INV_REIDITE_SHIELD: COUNTER++, CHEST_REIDITE_SHIELD: COUNTER++};\r\nvar COUNTER = 0;\r\nvar CRAFT = {FIRE: COUNTER++, BIG_FIRE: COUNTER++, FURNACE: COUNTER++, WORKBENCH: COUNTER++, PICK_WOOD: COUNTER++, PICK: COUNTER++, PICK_GOLD: COUNTER++, PICK_DIAMOND: COUNTER++, PICK_AMETHYST: COUNTER++, PICK_REIDITE: COUNTER++, HAMMER: COUNTER++, HAMMER_GOLD: COUNTER++, HAMMER_DIAMOND: COUNTER++, HAMMER_AMETHYST: COUNTER++, HAMMER_REIDITE: COUNTER++, SUPER_HAMMER: COUNTER++, SHOVEL: COUNTER++, SHOVEL_GOLD: COUNTER++, SHOVEL_DIAMOND: COUNTER++, SHOVEL_AMETHYST: COUNTER++, WATERING_CAN: COUNTER++, WATERING_CAN_FULL: COUNTER++, PITCHFORK: COUNTER++, PITCHFORK2: COUNTER++, BOOK: COUNTER++, WOOD_SPEAR: COUNTER++, SPEAR: COUNTER++, GOLD_SPEAR: COUNTER++, DIAMOND_SPEAR: COUNTER++, AMETHYST_SPEAR: COUNTER++, REIDITE_SPEAR: COUNTER++, DRAGON_SPEAR: COUNTER++, LAVA_SPEAR: COUNTER++, CRAB_SPEAR: COUNTER++, SWORD_WOOD: COUNTER++, SWORD: COUNTER++, SWORD_GOLD: COUNTER++, SWORD_DIAMOND: COUNTER++, SWORD_AMETHYST: COUNTER++, REIDITE_SWORD: COUNTER++, SEED: COUNTER++, WHEAT_SEED: COUNTER++, PUMPKIN_SEED: COUNTER++, GARLIC_SEED: COUNTER++, THORNBUSH_SEED: COUNTER++, CARROT_SEED: COUNTER++, TOMATO_SEED: COUNTER++, WATERMELON_SEED: COUNTER++, ALOE_VERA_SEED: COUNTER++, COOKED_MEAT: COUNTER++, FOODFISH_COOKED: COUNTER++, BREAD: COUNTER++, COOKIE: COUNTER++, CAKE: COUNTER++, BANDAGE: COUNTER++, WALL: COUNTER++, STONE_WALL: COUNTER++, GOLD_WALL: COUNTER++, DIAMOND_WALL: COUNTER++, AMETHYST_WALL: COUNTER++, REIDITE_WALL: COUNTER++, WOOD_DOOR: COUNTER++, STONE_DOOR: COUNTER++, GOLD_DOOR: COUNTER++, DIAMOND_DOOR: COUNTER++, AMETHYST_DOOR: COUNTER++, REIDITE_DOOR: COUNTER++, SPIKE: COUNTER++, STONE_SPIKE: COUNTER++, GOLD_SPIKE: COUNTER++, DIAMOND_SPIKE: COUNTER++, AMETHYST_SPIKE: COUNTER++, REIDITE_SPIKE: COUNTER++, WOOD_DOOR_SPIKE: COUNTER++, STONE_DOOR_SPIKE: COUNTER++, GOLD_DOOR_SPIKE: COUNTER++, DIAMOND_DOOR_SPIKE: COUNTER++, AMETHYST_DOOR_SPIKE: COUNTER++, REIDITE_DOOR_SPIKE: COUNTER++, CHEST: COUNTER++, EXPLORER_HAT: COUNTER++, PIRATE_HAT: COUNTER++, PILOT_HELMET: COUNTER++, EARMUFFS: COUNTER++, COAT: COUNTER++, CAP_SCARF: COUNTER++, FUR_HAT: COUNTER++, WOOD_HELMET: COUNTER++, STONE_HELMET: COUNTER++, GOLD_HELMET: COUNTER++, DIAMOND_HELMET: COUNTER++, AMETHYST_HELMET: COUNTER++, REIDITE_HELMET: COUNTER++, DIVING_MASK: COUNTER++, SUPER_DIVING_SUIT: COUNTER++, DIAMOND_PROTECTION: COUNTER++, AMETHYST_PROTECTION: COUNTER++, REIDITE_PROTECTION: COUNTER++, TURBAN1: COUNTER++, TURBAN2: COUNTER++, BAG: COUNTER++, PAPER: COUNTER++, BLUE_CORD: COUNTER++, LOCK: COUNTER++, LOCKPICK: COUNTER++, TOTEM: COUNTER++, BRIDGE: COUNTER++, ROOF: COUNTER++, WOOD_TOWER: COUNTER++, PLOT: COUNTER++, BOTTLE_EMPTY: COUNTER++, BOTTLE_FULL: COUNTER++, BOTTLE_FULL_2: COUNTER++, BOTTLE_FULL_3: COUNTER++, WINDMILL: COUNTER++, RESURRECTION: COUNTER++, EMERALD_MACHINE: COUNTER++, EXTRACTOR_MACHINE_STONE: COUNTER++, EXTRACTOR_MACHINE_GOLD: COUNTER++, EXTRACTOR_MACHINE_DIAMOND: COUNTER++, EXTRACTOR_MACHINE_AMETHYST: COUNTER++, EXTRACTOR_MACHINE_REIDITE: COUNTER++, SPANNER: COUNTER++, MACHETE: COUNTER++, BREAD_OVEN: COUNTER++, SANDWICH: COUNTER++, DRAGON_HELMET: COUNTER++, LAVA_HELMET: COUNTER++, CROWN_CRAB: COUNTER++, DRAGON_SWORD: COUNTER++, LAVA_SWORD: COUNTER++, WOOD_BOW: COUNTER++, WOOD_ARROW: COUNTER++, STONE_BOW: COUNTER++, STONE_ARROW: COUNTER++, GOLD_BOW: COUNTER++, GOLD_ARROW: COUNTER++, DIAMOND_BOW: COUNTER++, DIAMOND_ARROW: COUNTER++, AMETHYST_BOW: COUNTER++, AMETHYST_ARROW: COUNTER++, REIDITE_BOW: COUNTER++, REIDITE_ARROW: COUNTER++, DRAGON_BOW: COUNTER++, DRAGON_ARROW: COUNTER++, WOOD_SHIELD: COUNTER++, STONE_SHIELD: COUNTER++, GOLD_SHIELD: COUNTER++, DIAMOND_SHIELD: COUNTER++, AMETHYST_SHIELD: COUNTER++, REIDITE_SHIELD: COUNTER++, CROWN_GREEN: COUNTER++, CROWN_ORANGE: COUNTER++, CROWN_BLUE: COUNTER++, HOOD: COUNTER++, PEASANT: COUNTER++, WINTER_HOOD: COUNTER++, WINTER_PEASANT: COUNTER++, BUCKET_FULL: COUNTER++, BUCKET_EMPTY: COUNTER++, WELL: COUNTER++, SIGN: COUNTER++, BED: COUNTER++, BOAT: COUNTER++, SLED: COUNTER++, SADDLE: COUNTER++, PLANE: COUNTER++, WITCH: COUNTER++, WAND1: COUNTER++, WAND2: COUNTER++, NIMBUS: COUNTER++};\r\nvar COUNTER = 0;\r\nvar INV = {SWORD: COUNTER++, PICK: COUNTER++, FUR: COUNTER++, PICK_GOLD: COUNTER++, PICK_DIAMOND: COUNTER++, SWORD_GOLD: COUNTER++, SWORD_DIAMOND: COUNTER++, HAND: COUNTER++, PICK_WOOD: COUNTER++, PIRATE_SWORD: COUNTER++, EARMUFFS: COUNTER++, COAT: COUNTER++, WOOD_SPEAR: COUNTER++, SPEAR: COUNTER++, GOLD_SPEAR: COUNTER++, DIAMOND_SPEAR: COUNTER++, DRAGON_SPEAR: COUNTER++, LAVA_SPEAR: COUNTER++, CRAB_SPEAR: COUNTER++, REIDITE_SWORD: COUNTER++, DIAMOND_PROTECTION: COUNTER++, AMETHYST_PROTECTION: COUNTER++, REIDITE_PROTECTION: COUNTER++, EXPLORER_HAT: COUNTER++, PIRATE_HAT: COUNTER++, STONE_HELMET: COUNTER++, GOLD_HELMET: COUNTER++, DIAMOND_HELMET: COUNTER++, BOOK: COUNTER++, BAG: COUNTER++, SWORD_AMETHYST: COUNTER++, PICK_AMETHYST: COUNTER++, PICK_REIDITE: COUNTER++, AMETHYST_SPEAR: COUNTER++, REIDITE_SPEAR: COUNTER++, HAMMER: COUNTER++, HAMMER_GOLD: COUNTER++, HAMMER_DIAMOND: COUNTER++, HAMMER_AMETHYST: COUNTER++, HAMMER_REIDITE: COUNTER++, CAP_SCARF: COUNTER++, CHRISTMAS_HAT: COUNTER++, ELF_HAT: COUNTER++, AMETHYST_HELMET: COUNTER++, REIDITE_HELMET: COUNTER++, SUPER_HAMMER: COUNTER++, SHOVEL: COUNTER++, SUPER_DIVING_SUIT: COUNTER++, DIVING_MASK: COUNTER++, WATERING_CAN_FULL: COUNTER++, SHOVEL_GOLD: COUNTER++, SHOVEL_DIAMOND: COUNTER++, SHOVEL_AMETHYST: COUNTER++, PITCHFORK: COUNTER++, PITCHFORK2: COUNTER++, SPANNER: COUNTER++, MACHETE: COUNTER++, SWORD_WOOD: COUNTER++, WOOD_HELMET: COUNTER++, DRAGON_HELMET: COUNTER++, LAVA_HELMET: COUNTER++, CROWN_CRAB: COUNTER++, DRAGON_SWORD: COUNTER++, LAVA_SWORD: COUNTER++, WOOD_BOW: COUNTER++, STONE_BOW: COUNTER++, GOLD_BOW: COUNTER++, DIAMOND_BOW: COUNTER++, AMETHYST_BOW: COUNTER++, REIDITE_BOW: COUNTER++, DRAGON_BOW: COUNTER++, WOOD_SHIELD: COUNTER++, STONE_SHIELD: COUNTER++, GOLD_SHIELD: COUNTER++, DIAMOND_SHIELD: COUNTER++, AMETHYST_SHIELD: COUNTER++, REIDITE_SHIELD: COUNTER++, CROWN_GREEN: COUNTER++, CROWN_ORANGE: COUNTER++, CROWN_BLUE: COUNTER++, TURBAN1: COUNTER++, TURBAN2: COUNTER++, PILOT_HELMET: COUNTER++, HOOD: COUNTER++, PEASANT: COUNTER++, WINTER_HOOD: COUNTER++, WINTER_PEASANT: COUNTER++, FLOWER_HAT: COUNTER++, FUR_HAT: COUNTER++, SADDLE: COUNTER++, WITCH: COUNTER++, NIMBUS: COUNTER++, WAND1: COUNTER++, WAND2: COUNTER++, FIREFLY: COUNTER++, WOOD_ARROW: COUNTER++, STONE_ARROW: COUNTER++, GOLD_ARROW: COUNTER++, DIAMOND_ARROW: COUNTER++, AMETHYST_ARROW: COUNTER++, REIDITE_ARROW: COUNTER++, DRAGON_ARROW: COUNTER++, STONE: COUNTER++, WOOD: COUNTER++, PLANT: COUNTER++, GOLD: COUNTER++, DIAMOND: COUNTER++, FIRE: COUNTER++, WORKBENCH: COUNTER++, SEED: COUNTER++, MEAT: COUNTER++, COOKED_MEAT: COUNTER++, BIG_FIRE: COUNTER++, FURNACE: COUNTER++, PAPER: COUNTER++, AMETHYST: COUNTER++, AMETHYST_WALL: COUNTER++, AMETHYST_SPIKE: COUNTER++, AMETHYST_DOOR: COUNTER++, BRIDGE: COUNTER++, SAND: COUNTER++, BOTTLE_FULL: COUNTER++, BOTTLE_EMPTY: COUNTER++, KRAKEN_SKIN: COUNTER++, WATERING_CAN: COUNTER++, FLOUR: COUNTER++, WHEAT_SEED: COUNTER++, COOKIE: COUNTER++, WILD_WHEAT: COUNTER++, WINDMILL: COUNTER++, CAKE: COUNTER++, FOODFISH: COUNTER++, FOODFISH_COOKED: COUNTER++, SCALES: COUNTER++, GROUND: COUNTER++, PLOT: COUNTER++, ICE: COUNTER++, BREAD: COUNTER++, BREAD_OVEN: COUNTER++, SANDWICH: COUNTER++, FUR_WINTER: COUNTER++, BLUE_CORD: COUNTER++, LOCK: COUNTER++, DRAGON_HEART: COUNTER++, LAVA_HEART: COUNTER++, RESURRECTION: COUNTER++, EMERALD_MACHINE: COUNTER++, EXTRACTOR_MACHINE_STONE: COUNTER++, EXTRACTOR_MACHINE_GOLD: COUNTER++, EXTRACTOR_MACHINE_DIAMOND: COUNTER++, EXTRACTOR_MACHINE_AMETHYST: COUNTER++, EXTRACTOR_MACHINE_REIDITE: COUNTER++, LOCKPICK: COUNTER++, TOTEM: COUNTER++, SPIKE: COUNTER++, CORD: COUNTER++, WALL: COUNTER++, STONE_WALL: COUNTER++, GOLD_WALL: COUNTER++, DIAMOND_WALL: COUNTER++, WOOD_DOOR: COUNTER++, CHEST: COUNTER++, STONE_SPIKE: COUNTER++, GOLD_SPIKE: COUNTER++, DIAMOND_SPIKE: COUNTER++, STONE_DOOR: COUNTER++, GOLD_DOOR: COUNTER++, DIAMOND_DOOR: COUNTER++, FUR_WOLF: COUNTER++, GEMME_GREEN: COUNTER++, GEMME_ORANGE: COUNTER++, GEMME_BLUE: COUNTER++, SPECIAL_FUR: COUNTER++, SPECIAL_FUR_2: COUNTER++, BUCKET_FULL: COUNTER++, BUCKET_EMPTY: COUNTER++, WELL: COUNTER++, SIGN: COUNTER++, DRAGON_CUBE: COUNTER++, DRAGON_ORB: COUNTER++, LAVA_CUBE: COUNTER++, LAVA_ORB: COUNTER++, PUMPKIN_SEED: COUNTER++, PUMPKIN: COUNTER++, ROOF: COUNTER++, GARLIC_SEED: COUNTER++, GARLIC: COUNTER++, THORNBUSH_SEED: COUNTER++, THORNBUSH: COUNTER++, BANDAGE: COUNTER++, CRAB_STICK: COUNTER++, CRAB_LOOT: COUNTER++, BED: COUNTER++, SUGAR_CAN: COUNTER++, CANDY: COUNTER++, GARLAND: COUNTER++, REIDITE: COUNTER++, FLAME: COUNTER++, CARROT_SEED: COUNTER++, CARROT: COUNTER++, TOMATO_SEED: COUNTER++, TOMATO: COUNTER++, WATERMELON_SEED: COUNTER++, WATERMELON: COUNTER++, ALOE_VERA_SEED: COUNTER++, ALOE_VERA: COUNTER++, WOOD_DOOR_SPIKE: COUNTER++, STONE_DOOR_SPIKE: COUNTER++, GOLD_DOOR_SPIKE: COUNTER++, DIAMOND_DOOR_SPIKE: COUNTER++, AMETHYST_DOOR_SPIKE: COUNTER++, REIDITE_WALL: COUNTER++, REIDITE_DOOR: COUNTER++, REIDITE_SPIKE: COUNTER++, REIDITE_DOOR_SPIKE: COUNTER++, WOOD_TOWER: COUNTER++, PENGUIN_FEATHER: COUNTER++, BOAT: COUNTER++, SLED: COUNTER++, MOUNT_BOAR: COUNTER++, CRAB_BOSS: COUNTER++, BABY_DRAGON: COUNTER++, BABY_LAVA: COUNTER++, HAWK: COUNTER++, PLANE: COUNTER++, HAWK_FEATHER: COUNTER++, VULTURE_FEATHER: COUNTER++, CACTUS: COUNTER++, EMERALD: COUNTER++, PITCHFORK_PART: COUNTER++, PILOT_GLASSES: COUNTER++, FUR_BOAR: COUNTER++, SANDWORM_JUICE: COUNTER++, BABY_MAMMOTH: COUNTER++, FUR_MAMMOTH: COUNTER++};\r\nvar CATEGORY = {TOOLS: 0, WEAPONS: 1, CLOTHES: 2, FOODS: 3, UTILS: 4, BASES: 5};\r\nvar INV_INFOS = [];\r\nINV_INFOS[INV.WOOD] = {name: \"Wood\", img: SPRITE.INV_WOOD, grid: 0, recycle: 0};\r\nINV_INFOS[INV.STONE] = {name: \"Stone\", img: SPRITE.INV_STONE, grid: 0, recycle: 0};\r\nINV_INFOS[INV.GOLD] = {name: \"Gold\", img: SPRITE.INV_GOLD, grid: 0, recycle: 0};\r\nINV_INFOS[INV.DIAMOND] = {name: \"Diamond\", img: SPRITE.INV_DIAMOND, grid: 0, recycle: 0};\r\nINV_INFOS[INV.AMETHYST] = {name: \"Amethyst\", img: SPRITE.INV_AMETHYST, grid: 0, recycle: 0};\r\nINV_INFOS[INV.FUR] = {name: \"Rabbit fur\", img: SPRITE.INV_FUR, grid: 0, recycle: 0};\r\nINV_INFOS[INV.FUR_WOLF] = {name: \"Wolf fur\", img: SPRITE.INV_FUR_WOLF, grid: 0, recycle: 0};\r\nINV_INFOS[INV.FUR_BOAR] = {name: \"Boar fur\", img: SPRITE.INV_FUR_BOAR, grid: 0, recycle: 0};\r\nINV_INFOS[INV.FIREFLY] = {name: \"Firefly\", img: SPRITE.INV_FIREFLY, grid: 0, recycle: 0};\r\nINV_INFOS[INV.WOOD_ARROW] = {name: \"Wood arrow\", img: SPRITE.INV_WOOD_ARROW, grid: 0, recycle: 1};\r\nINV_INFOS[INV.STONE_ARROW] = {name: \"Stone arrow\", img: SPRITE.INV_STONE_ARROW, grid: 0, recycle: 1};\r\nINV_INFOS[INV.GOLD_ARROW] = {name: \"Gold arrow\", img: SPRITE.INV_GOLD_ARROW, grid: 0, recycle: 1};\r\nINV_INFOS[INV.DIAMOND_ARROW] = {name: \"Diamond arrow\", img: SPRITE.INV_DIAMOND_ARROW, grid: 0, recycle: 1};\r\nINV_INFOS[INV.AMETHYST_ARROW] = {name: \"Amethyst arrow\", img: SPRITE.INV_AMETHYST_ARROW, grid: 0, recycle: 1};\r\nINV_INFOS[INV.REIDITE_ARROW] = {name: \"Reidite arrow\", img: SPRITE.INV_REIDITE_ARROW, grid: 0, recycle: 1};\r\nINV_INFOS[INV.DRAGON_ARROW] = {name: \"Dragon arrow\", img: SPRITE.INV_DRAGON_ARROW, grid: 0, recycle: 0};\r\nINV_INFOS[INV.FUR_WINTER] = {name: \"Winter fur\", img: SPRITE.INV_FUR_WINTER, grid: 0, recycle: 0};\r\nINV_INFOS[INV.FUR_MAMMOTH] = {name: \"Fur mammoth\", img: SPRITE.INV_FUR_MAMMOTH, grid: 0, recycle: 0};\r\nINV_INFOS[INV.CORD] = {name: \"Web\", img: SPRITE.INV_CORD, grid: 0, recycle: 0};\r\nINV_INFOS[INV.MEAT] = {name: \"Meat\", img: SPRITE.INV_MEAT, grid: 0, recycle: 0};\r\nINV_INFOS[INV.FOODFISH] = {name: \"Fish\", img: SPRITE.INV_FOODFISH, grid: 0, recycle: 0};\r\nINV_INFOS[INV.KRAKEN_SKIN] = {name: \"Kraken skin\", img: SPRITE.INV_KRAKEN_SKIN, grid: 0, recycle: 0};\r\nINV_INFOS[INV.SCALES] = {name: \"Piranha scales\", img: SPRITE.INV_SCALES, grid: 0, recycle: 0};\r\nINV_INFOS[INV.ICE] = {name: \"Ice\", img: SPRITE.INV_ICE, grid: 0, recycle: 0};\r\nINV_INFOS[INV.SAND] = {name: \"Sand\", img: SPRITE.INV_SAND, grid: 0, recycle: 0};\r\nINV_INFOS[INV.GROUND] = {name: \"Dirt\", img: SPRITE.INV_GROUND, grid: 0, recycle: 0};\r\nINV_INFOS[INV.PLANT] = {name: \"Berrie\", img: SPRITE.INV_PLANT, grid: 0, recycle: 0};\r\nINV_INFOS[INV.FLOUR] = {name: \"Flour\", img: SPRITE.INV_FLOUR, grid: 0, recycle: 0};\r\nINV_INFOS[INV.WILD_WHEAT] = {name: \"Flour\", img: SPRITE.INV_WILD_WHEAT, grid: 0, recycle: 0};\r\nINV_INFOS[INV.SPECIAL_FUR] = {name: \"Special fur peasant\", img: SPRITE.INV_SPECIAL_FUR, grid: 0, recycle: 0};\r\nINV_INFOS[INV.SPECIAL_FUR_2] = {name: \"Special fur hood\", img: SPRITE.INV_SPECIAL_FUR_2, grid: 0, recycle: 0};\r\nINV_INFOS[INV.PUMPKIN] = {name: \"Pumpkin\", img: SPRITE.INV_PUMPKIN, grid: 0, recycle: 0};\r\nINV_INFOS[INV.GARLIC] = {name: \"Garlic\", img: SPRITE.INV_GARLIC, grid: 0, recycle: 0};\r\nINV_INFOS[INV.THORNBUSH] = {name: \"Thornbush\", img: SPRITE.INV_THORNBUSH, grid: 0, recycle: 0};\r\nINV_INFOS[INV.CARROT] = {name: \"Carrot\", img: SPRITE.INV_CARROT, grid: 0, recycle: 0};\r\nINV_INFOS[INV.TOMATO] = {name: \"Tomato\", img: SPRITE.INV_TOMATO, grid: 0, recycle: 0};\r\nINV_INFOS[INV.WATERMELON] = {name: \"Watermelon\", img: SPRITE.INV_WATERMELON, grid: 0, recycle: 0};\r\nINV_INFOS[INV.ALOE_VERA] = {name: \"Aloe Vera\", img: SPRITE.INV_ALOE_VERA, grid: 0, recycle: 0};\r\nINV_INFOS[INV.PENGUIN_FEATHER] = {name: \"Penguin Feather\", img: SPRITE.INV_PENGUIN_FEATHER, grid: 0, recycle: 0};\r\nINV_INFOS[INV.HAWK_FEATHER] = {name: \"Hawk Feather\", img: SPRITE.INV_HAWK_FEATHER, grid: 0, recycle: 0};\r\nINV_INFOS[INV.VULTURE_FEATHER] = {name: \"Vulture Feather\", img: SPRITE.INV_VULTURE_FEATHER, grid: 0, recycle: 0};\r\nINV_INFOS[INV.CACTUS] = {name: \"Cactus\", img: SPRITE.INV_CACTUS, grid: 0, recycle: 0};\r\nINV_INFOS[INV.PILOT_GLASSES] = {name: \"Cactus\", img: SPRITE.INV_PILOT_GLASSES, grid: 0, recycle: 0};\r\nINV_INFOS[INV.PITCHFORK_PART] = {name: \"Pitchfork Part\", img: SPRITE.INV_PITCHFORK_PART, grid: 0, recycle: 0};\r\nINV_INFOS[INV.SANDWORM_JUICE] = {name: \"Emerald Machine\", img: SPRITE.INV_SANDWORM_JUICE, grid: 0, recycle: 0};\r\nINV_INFOS[INV.EMERALD] = {name: \"Emerald\", img: SPRITE.INV_EMERALD, grid: 0, recycle: 0};\r\nINV_INFOS[INV.CHRISTMAS_HAT] = {name: \"Christmas Hat\", img: SPRITE.INV_CHRISTMAS_HAT, recycle: 0};\r\nINV_INFOS[INV.ELF_HAT] = {name: \"Elf Hat\", img: SPRITE.INV_ELF_HAT, recycle: 0};\r\nINV_INFOS[INV.GARLAND] = {name: \"Garland\", img: SPRITE.INV_GARLAND, recycle: 0, grid: 0};\r\nINV_INFOS[INV.CANDY] = {name: \"Candy\", img: SPRITE.INV_CANDY, recycle: 0};\r\nINV_INFOS[INV.SUGAR_CAN] = {name: \"Sugar Cane\", img: SPRITE.INV_SUGAR_CAN, recycle: 0};\r\nINV_INFOS[INV.PIRATE_SWORD] = {name: \"Pirate Sword\", img: SPRITE.INV_PIRATE_SWORD, grid: 0, recycle: 0};\r\nINV_INFOS[INV.CRAB_STICK] = {name: \"Crab Stick\", img: SPRITE.INV_CRAB_STICK, grid: 0, recycle: 0};\r\nINV_INFOS[INV.REIDITE] = {name: \"Reidite\", img: SPRITE.INV_REIDITE, grid: 0, recycle: 0};\r\nINV_INFOS[INV.FLAME] = {name: \"Flame\", img: SPRITE.INV_FLAME, grid: 0, recycle: 0};\r\nINV_INFOS[INV.FIRE] = {name: \"Campfire\", img: SPRITE.CRAFT_FIRE, grid: 0, recycle: 1};\r\nINV_INFOS[INV.BED] = {name: \"Bed\", img: SPRITE.CRAFT_BED, grid: 0, recycle: 1};\r\nINV_INFOS[INV.WORKBENCH] = {name: \"Workbench\", img: SPRITE.CRAFT_WORK, grid: 0, recycle: 1};\r\nINV_INFOS[INV.SWORD] = {name: \"Stone sword\", img: SPRITE.CRAFT_SWORD, grid: 0, recycle: 1};\r\nINV_INFOS[INV.PICK] = {name: \"Stone pick\", img: SPRITE.CRAFT_PICK, grid: 0, recycle: 1};\r\nINV_INFOS[INV.SEED] = {name: \"Berries bush\", img: SPRITE.CRAFT_SEED, grid: 0, recycle: 0};\r\nINV_INFOS[INV.PICK_GOLD] = {name: \"Gold pick\", img: SPRITE.CRAFT_PICK_GOLD, grid: 0, recycle: 1};\r\nINV_INFOS[INV.PICK_DIAMOND] = {name: \"Diamond pick\", img: SPRITE.CRAFT_PICK_DIAMOND, grid: 0, recycle: 1};\r\nINV_INFOS[INV.SWORD_WOOD] = {name: \"Wood sword\", img: SPRITE.CRAFT_SWORD_WOOD, grid: 0, recycle: 1};\r\nINV_INFOS[INV.SWORD_GOLD] = {name: \"Gold sword\", img: SPRITE.CRAFT_SWORD_GOLD, grid: 0, recycle: 1};\r\nINV_INFOS[INV.SWORD_DIAMOND] = {name: \"Diamond sword\", img: SPRITE.CRAFT_SWORD_DIAMOND, grid: 0, recycle: 1};\r\nINV_INFOS[INV.PICK_WOOD] = {name: \"Wood pick\", img: SPRITE.CRAFT_PICK_WOOD, grid: 0, recycle: 1};\r\nINV_INFOS[INV.WALL] = {name: \"Wood wall\", img: SPRITE.CRAFT_WALL, grid: 0, recycle: 1};\r\nINV_INFOS[INV.SPIKE] = {name: \"Wood spike\", img: SPRITE.CRAFT_SPIKE, grid: 0, recycle: 1};\r\nINV_INFOS[INV.COOKED_MEAT] = {name: \"Cooked meat\", img: SPRITE.CRAFT_COOKED_MEAT, grid: 0, recycle: 0};\r\nINV_INFOS[INV.BIG_FIRE] = {name: \"Big campfire\", img: SPRITE.CRAFT_BIG_FIRE, grid: 0, recycle: 1};\r\nINV_INFOS[INV.BANDAGE] = {name: \"Bandage\", img: SPRITE.CRAFT_BANDAGE, grid: 0, recycle: 1};\r\nINV_INFOS[INV.STONE_WALL] = {name: \"Stone wall\", img: SPRITE.CRAFT_STONE_WALL, grid: 0, recycle: 1};\r\nINV_INFOS[INV.GOLD_WALL] = {name: \"Gold wall\", img: SPRITE.CRAFT_GOLD_WALL, grid: 0, recycle: 1};\r\nINV_INFOS[INV.DIAMOND_WALL] = {name: \"Diamond wall\", img: SPRITE.CRAFT_DIAMOND_WALL, grid: 0, recycle: 1};\r\nINV_INFOS[INV.WOOD_DOOR] = {name: \"Wood door\", img: SPRITE.CRAFT_DOOR_WOOD_CLOSE, grid: 0, recycle: 1};\r\nINV_INFOS[INV.CHEST] = {name: \"Chest\", img: SPRITE.CRAFT_CHEST, grid: 0, recycle: 1};\r\nINV_INFOS[INV.STONE_SPIKE] = {name: \"Stone spike\", img: SPRITE.CRAFT_STONE_SPIKE, grid: 0, recycle: 1};\r\nINV_INFOS[INV.GOLD_SPIKE] = {name: \"Gold spike\", img: SPRITE.CRAFT_GOLD_SPIKE, grid: 0, recycle: 1};\r\nINV_INFOS[INV.DIAMOND_SPIKE] = {name: \"Diamond spike\", img: SPRITE.CRAFT_DIAMOND_SPIKE, grid: 0, recycle: 1};\r\nINV_INFOS[INV.STONE_DOOR] = {name: \"Stone door\", img: SPRITE.CRAFT_DOOR_STONE_CLOSE, grid: 0, recycle: 1};\r\nINV_INFOS[INV.GOLD_DOOR] = {name: \"Gold door\", img: SPRITE.CRAFT_DOOR_GOLD_CLOSE, grid: 0, recycle: 1};\r\nINV_INFOS[INV.DIAMOND_DOOR] = {name: \"Diamond door\", img: SPRITE.CRAFT_DOOR_DIAMOND_CLOSE, grid: 0, recycle: 1};\r\nINV_INFOS[INV.EARMUFFS] = {name: \"Chapka\", img: SPRITE.CRAFT_EARMUFFS, grid: 0, recycle: 1};\r\nINV_INFOS[INV.COAT] = {name: \"Big Chapka\", img: SPRITE.CRAFT_COAT, grid: 0, recycle: 1};\r\nINV_INFOS[INV.WOOD_SPEAR] = {name: \"Wood spear\", img: SPRITE.CRAFT_WOOD_SPEAR, grid: 0, recycle: 1};\r\nINV_INFOS[INV.SPEAR] = {name: \"Stone spear\", img: SPRITE.CRAFT_SPEAR, grid: 0, recycle: 1};\r\nINV_INFOS[INV.GOLD_SPEAR] = {name: \"Gold spear\", img: SPRITE.CRAFT_GOLD_SPEAR, grid: 0, recycle: 1};\r\nINV_INFOS[INV.DIAMOND_SPEAR] = {name: \"Diamond spear\", img: SPRITE.CRAFT_DIAMOND_SPEAR, grid: 0, recycle: 1};\r\nINV_INFOS[INV.DRAGON_SPEAR] = {name: \"Dragon spear\", img: SPRITE.CRAFT_DRAGON_SPEAR, grid: 0, recycle: 0};\r\nINV_INFOS[INV.LAVA_SPEAR] = {name: \"Dragon spear\", img: SPRITE.CRAFT_LAVA_SPEAR, grid: 0, recycle: 0};\r\nINV_INFOS[INV.CRAB_SPEAR] = {name: \"Crab spear\", img: SPRITE.CRAFT_CRAB_SPEAR, grid: 0, recycle: 1};\r\nINV_INFOS[INV.CRAB_LOOT] = {name: \"Crab loot\", img: SPRITE.INV_CRAB_LOOT, grid: 0, recycle: 0};\r\nINV_INFOS[INV.FURNACE] = {name: \"Furnace\", img: SPRITE.CRAFT_FURNACE, grid: 0, recycle: 1};\r\nINV_INFOS[INV.EXPLORER_HAT] = {name: \"Explorer hat\", img: SPRITE.CRAFT_EXPLORER_HAT, grid: 0, recycle: 1};\r\nINV_INFOS[INV.PIRATE_HAT] = {name: \"Pirate hat\", img: SPRITE.CRAFT_PIRATE_HAT, grid: 0, recycle: 1};\r\nINV_INFOS[INV.FLOWER_HAT] = {name: \"Flower hat\", img: SPRITE.CRAFT_FLOWER_HAT, grid: 0, recycle: 1};\r\nINV_INFOS[INV.FUR_HAT] = {name: \"Fur hat\", img: SPRITE.CRAFT_FUR_HAT, grid: 0, recycle: 1};\r\nINV_INFOS[INV.WOOD_HELMET] = {name: \"Wood helmet\", img: SPRITE.CRAFT_WOOD_HELMET, grid: 0, recycle: 1};\r\nINV_INFOS[INV.STONE_HELMET] = {name: \"Stone helmet\", img: SPRITE.CRAFT_STONE_HELMET, grid: 0, recycle: 1};\r\nINV_INFOS[INV.GOLD_HELMET] = {name: \"Gold helmet\", img: SPRITE.CRAFT_GOLD_HELMET, grid: 0, recycle: 1};\r\nINV_INFOS[INV.DIAMOND_HELMET] = {name: \"Diamond helmet\", img: SPRITE.CRAFT_DIAMOND_HELMET, grid: 0, recycle: 1};\r\nINV_INFOS[INV.BOOK] = {name: \"Book\", img: SPRITE.CRAFT_BOOK, grid: 0, recycle: 1};\r\nINV_INFOS[INV.PAPER] = {name: \"Paper\", img: SPRITE.CRAFT_PAPER, grid: 0, recycle: 0};\r\nINV_INFOS[INV.BAG] = {name: \"Bag\", img: SPRITE.CRAFT_BAG, grid: 0, recycle: 1};\r\nINV_INFOS[INV.SWORD_AMETHYST] = {name: \"Amethyst sword\", img: SPRITE.CRAFT_SWORD_AMETHYST, grid: 0, recycle: 1};\r\nINV_INFOS[INV.PICK_AMETHYST] = {name: \"Amethyst pick\", img: SPRITE.CRAFT_PICK_AMETHYST, grid: 0, recycle: 1};\r\nINV_INFOS[INV.AMETHYST_SPEAR] = {name: \"Amethyst spear\", img: SPRITE.CRAFT_AMETHYST_SPEAR, grid: 0, recycle: 1};\r\nINV_INFOS[INV.HAMMER] = {name: \"Stone hammer\", img: SPRITE.CRAFT_HAMMER, grid: 0, recycle: 1};\r\nINV_INFOS[INV.HAMMER_GOLD] = {name: \"Gold hammer\", img: SPRITE.CRAFT_HAMMER_GOLD, grid: 0, recycle: 1};\r\nINV_INFOS[INV.HAMMER_DIAMOND] = {name: \"Diamond hammer\", img: SPRITE.CRAFT_HAMMER_DIAMOND, grid: 0, recycle: 1};\r\nINV_INFOS[INV.HAMMER_AMETHYST] = {name: \"Amethyst hammer\", img: SPRITE.CRAFT_HAMMER_AMETHYST, grid: 0, recycle: 1};\r\nINV_INFOS[INV.HAMMER_REIDITE] = {name: \"Reidite hammer\", img: SPRITE.CRAFT_HAMMER_REIDITE, grid: 0, recycle: 1};\r\nINV_INFOS[INV.AMETHYST_WALL] = {name: \"Amethyst wall\", img: SPRITE.CRAFT_AMETHYST_WALL, grid: 0, recycle: 1};\r\nINV_INFOS[INV.AMETHYST_SPIKE] = {name: \"Amethyst spike\", img: SPRITE.CRAFT_AMETHYST_SPIKE, grid: 0, recycle: 1};\r\nINV_INFOS[INV.AMETHYST_DOOR] = {name: \"Amethyst door\", img: SPRITE.CRAFT_DOOR_AMETHYST_CLOSE, grid: 0, recycle: 1};\r\nINV_INFOS[INV.CAP_SCARF] = {name: \"Cap & scarf\", img: SPRITE.CRAFT_CAP_SCARF, grid: 0, recycle: 1};\r\nINV_INFOS[INV.BLUE_CORD] = {name: \"Blue cord\", img: SPRITE.CRAFT_BLUE_CORD, grid: 0, recycle: 0};\r\nINV_INFOS[INV.LOCK] = {name: \"Lock\", img: SPRITE.CRAFT_LOCK, grid: 0, recycle: 1};\r\nINV_INFOS[INV.RESURRECTION] = {name: \"Resurrection\", img: SPRITE.CRAFT_RESURRECTION, grid: 0, recycle: 1};\r\nINV_INFOS[INV.LOCKPICK] = {name: \"Lockpick\", img: SPRITE.CRAFT_LOCKPICK, grid: 0, recycle: 1};\r\nINV_INFOS[INV.TOTEM] = {name: \"Totem\", img: SPRITE.CRAFT_TOTEM, grid: 0, recycle: 1};\r\nINV_INFOS[INV.AMETHYST_HELMET] = {name: \"Amethyst helmet\", img: SPRITE.CRAFT_AMETHYST_HELMET, grid: 0, recycle: 1};\r\nINV_INFOS[INV.SUPER_HAMMER] = {name: \"Super hammer\", img: SPRITE.CRAFT_SUPER_HAMMER, grid: 0, recycle: 1};\r\nINV_INFOS[INV.BRIDGE] = {name: \"Bridge\", img: SPRITE.CRAFT_BRIDGE, grid: 1, recycle: 1};\r\nINV_INFOS[INV.WOOD_TOWER] = {name: \"Wood Tower\", img: SPRITE.CRAFT_WOOD_TOWER, grid: 1, recycle: 1};\r\nINV_INFOS[INV.BOTTLE_FULL] = {name: \"Bottle full\", img: SPRITE.CRAFT_BOTTLE_FULL, grid: 0, recycle: 0};\r\nINV_INFOS[INV.BOTTLE_EMPTY] = {name: \"Bottle empty\", img: SPRITE.CRAFT_BOTTLE_EMPTY, grid: 0, recycle: 0};\r\nINV_INFOS[INV.SHOVEL] = {name: \"Stone shovel\", img: SPRITE.CRAFT_SHOVEL, grid: 0, recycle: 1};\r\nINV_INFOS[INV.WATERING_CAN] = {name: \"Watering can\", img: SPRITE.CRAFT_WATERING_CAN, grid: 0, recycle: 0};\r\nINV_INFOS[INV.WHEAT_SEED] = {name: \"Wheat\", img: SPRITE.CRAFT_WHEAT_SEED, grid: 0, recycle: 0};\r\nINV_INFOS[INV.COOKIE] = {name: \"Cookie\", img: SPRITE.CRAFT_COOKIE, grid: 0, recycle: 0};\r\nINV_INFOS[INV.WINDMILL] = {name: \"Windmill\", img: SPRITE.CRAFT_WINDMILL, grid: 0, recycle: 1};\r\nINV_INFOS[INV.SUPER_DIVING_SUIT] = {name: \"Super diving suit\", img: SPRITE.CRAFT_SUPER_DIVING_SUIT, grid: 0, recycle: 1};\r\nINV_INFOS[INV.DIVING_MASK] = {name: \"Diving mask\", img: SPRITE.CRAFT_DIVING_MASK, grid: 0, recycle: 1};\r\nINV_INFOS[INV.WATERING_CAN_FULL] = {name: \"Watering can full\", img: SPRITE.CRAFT_WATERING_CAN_FULL, grid: 0, recycle: 0};\r\nINV_INFOS[INV.CAKE] = {name: \"Cake\", img: SPRITE.CRAFT_CAKE, grid: 0, recycle: 0};\r\nINV_INFOS[INV.FOODFISH_COOKED] = {name: \"Foodfish cooked\", img: SPRITE.CRAFT_FOODFISH_COOKED, grid: 0, recycle: 0};\r\nINV_INFOS[INV.PLOT] = {name: \"Plot\", img: SPRITE.CRAFT_PLOT, grid: 1, recycle: 1};\r\nINV_INFOS[INV.BREAD] = {name: \"Bread\", img: SPRITE.CRAFT_BREAD, grid: 0, recycle: 0};\r\nINV_INFOS[INV.BOTTLE_FULL_2] = {name: \"Bottle full (with ice)\", img: SPRITE.CRAFT_BOTTLE_FULL_2, grid: 0, recycle: 1};\r\nINV_INFOS[INV.BOTTLE_FULL_3] = {name: \"Bottle full (with well)\", img: SPRITE.CRAFT_BOTTLE_FULL_3, grid: 0, recycle: 1};\r\nINV_INFOS[INV.SHOVEL_GOLD] = {name: \"Gold shovel\", img: SPRITE.CRAFT_SHOVEL_GOLD, grid: 0, recycle: 1};\r\nINV_INFOS[INV.SHOVEL_DIAMOND] = {name: \"Diamond shovel\", img: SPRITE.CRAFT_SHOVEL_DIAMOND, grid: 0, recycle: 1};\r\nINV_INFOS[INV.SHOVEL_AMETHYST] = {name: \"Amethyst shovel\", img: SPRITE.CRAFT_SHOVEL_AMETHYST, grid: 0, recycle: 1};\r\nINV_INFOS[INV.SPANNER] = {name: \"Spanner\", img: SPRITE.CRAFT_SPANNER, grid: 0, recycle: 1};\r\nINV_INFOS[INV.MACHETE] = {name: \"Machete\", img: SPRITE.CRAFT_MACHETE, grid: 0, recycle: 1};\r\nINV_INFOS[INV.BREAD_OVEN] = {name: \"Bread oven\", img: SPRITE.CRAFT_BREAD_OVEN, grid: 0, recycle: 1};\r\nINV_INFOS[INV.SANDWICH] = {name: \"Sandwich\", img: SPRITE.CRAFT_SANDWICH, grid: 0, recycle: 0};\r\nINV_INFOS[INV.DRAGON_HELMET] = {name: \"Dragon helmet\", img: SPRITE.CRAFT_DRAGON_HELMET, grid: 0, recycle: 0};\r\nINV_INFOS[INV.LAVA_HELMET] = {name: \"Dragon helmet\", img: SPRITE.CRAFT_LAVA_HELMET, grid: 0, recycle: 0};\r\nINV_INFOS[INV.WITCH] = {name: \"Witch\", img: SPRITE.CRAFT_WITCH, grid: 0, recycle: 0};\r\nINV_INFOS[INV.NIMBUS] = {name: \"Nimbus\", img: SPRITE.CRAFT_NIMBUS, grid: 0, recycle: 0};\r\nINV_INFOS[INV.WAND1] = {name: \"Wand1\", img: SPRITE.CRAFT_WAND1, grid: 0, recycle: 0};\r\nINV_INFOS[INV.WAND2] = {name: \"Wand2\", img: SPRITE.CRAFT_WAND2, grid: 0, recycle: 0};\r\nINV_INFOS[INV.DRAGON_SWORD] = {name: \"Dragon sword\", img: SPRITE.CRAFT_DRAGON_SWORD, grid: 0, recycle: 0};\r\nINV_INFOS[INV.LAVA_SWORD] = {name: \"Dragon sword\", img: SPRITE.CRAFT_LAVA_SWORD, grid: 0, recycle: 0};\r\nINV_INFOS[INV.WOOD_SHIELD] = {name: \"Wood shield\", img: SPRITE.CRAFT_WOOD_SHIELD, grid: 0, recycle: 1};\r\nINV_INFOS[INV.STONE_SHIELD] = {name: \"Stone shield\", img: SPRITE.CRAFT_STONE_SHIELD, grid: 0, recycle: 1};\r\nINV_INFOS[INV.GOLD_SHIELD] = {name: \"Gold shield\", img: SPRITE.CRAFT_GOLD_SHIELD, grid: 0, recycle: 1};\r\nINV_INFOS[INV.DIAMOND_SHIELD] = {name: \"Diamond shield\", img: SPRITE.CRAFT_DIAMOND_SHIELD, grid: 0, recycle: 1};\r\nINV_INFOS[INV.AMETHYST_SHIELD] = {name: \"Amethyst shield\", img: SPRITE.CRAFT_AMETHYST_SHIELD, grid: 0, recycle: 1};\r\nINV_INFOS[INV.REIDITE_SHIELD] = {name: \"Reidite shield\", img: SPRITE.CRAFT_REIDITE_SHIELD, grid: 0, recycle: 1};\r\nINV_INFOS[INV.WOOD_BOW] = {name: \"Wood bow\", img: SPRITE.CRAFT_WOOD_BOW, grid: 0, recycle: 1};\r\nINV_INFOS[INV.STONE_BOW] = {name: \"Stone bow\", img: SPRITE.CRAFT_STONE_BOW, grid: 0, recycle: 1};\r\nINV_INFOS[INV.GOLD_BOW] = {name: \"Gold bow\", img: SPRITE.CRAFT_GOLD_BOW, grid: 0, recycle: 1};\r\nINV_INFOS[INV.DIAMOND_BOW] = {name: \"Diamond bow\", img: SPRITE.CRAFT_DIAMOND_BOW, grid: 0, recycle: 1};\r\nINV_INFOS[INV.AMETHYST_BOW] = {name: \"Amethyst bow\", img: SPRITE.CRAFT_AMETHYST_BOW, grid: 0, recycle: 1};\r\nINV_INFOS[INV.REIDITE_BOW] = {name: \"Reidite bow\", img: SPRITE.CRAFT_REIDITE_BOW, grid: 0, recycle: 1};\r\nINV_INFOS[INV.DRAGON_BOW] = {name: \"Dragon bow\", img: SPRITE.CRAFT_DRAGON_BOW, grid: 0, recycle: 0};\r\nINV_INFOS[INV.CROWN_GREEN] = {name: \"Crown of life\", img: SPRITE.CRAFT_CROWN_GREEN, grid: 0, recycle: 0};\r\nINV_INFOS[INV.GEMME_GREEN] = {name: \"Gem of life\", img: SPRITE.INV_GEMME_GREEN, grid: 0, recycle: 0};\r\nINV_INFOS[INV.DRAGON_ORB] = {name: \"Orb of the dragon\", img: SPRITE.INV_DRAGON_ORB, grid: 0, recycle: 0};\r\nINV_INFOS[INV.LAVA_ORB] = {name: \"Orb of the dragon\", img: SPRITE.INV_LAVA_ORB, grid: 0, recycle: 0};\r\nINV_INFOS[INV.DRAGON_CUBE] = {name: \"Cube of the dragon\", img: SPRITE.INV_DRAGON_CUBE, grid: 0, recycle: 0};\r\nINV_INFOS[INV.LAVA_CUBE] = {name: \"Cube of the dragon\", img: SPRITE.INV_LAVA_CUBE, grid: 0, recycle: 0};\r\nINV_INFOS[INV.CROWN_ORANGE] = {name: \"Crown of luck\", img: SPRITE.CRAFT_CROWN_ORANGE, grid: 0, recycle: 0};\r\nINV_INFOS[INV.GEMME_ORANGE] = {name: \"Gem of luck\", img: SPRITE.INV_GEMME_ORANGE, grid: 0, recycle: 0};\r\nINV_INFOS[INV.CROWN_BLUE] = {name: \"Crown of the angel\", img: SPRITE.CRAFT_CROWN_BLUE, grid: 0, recycle: 0};\r\nINV_INFOS[INV.GEMME_BLUE] = {name: \"Gem of the angel\", img: SPRITE.INV_GEMME_BLUE, grid: 0, recycle: 0};\r\nINV_INFOS[INV.DRAGON_HEART] = {name: \"Dragon heart\", img: SPRITE.INV_DRAGON_HEART, grid: 0, recycle: 0};\r\nINV_INFOS[INV.LAVA_HEART] = {name: \"Lava heart\", img: SPRITE.INV_LAVA_HEART, grid: 0, recycle: 0};\r\nINV_INFOS[INV.HOOD] = {name: \"Hood\", img: SPRITE.CRAFT_HOOD, grid: 0, recycle: 1};\r\nINV_INFOS[INV.PEASANT] = {name: \"Peasant\", img: SPRITE.CRAFT_PEASANT, grid: 0, recycle: 1};\r\nINV_INFOS[INV.WINTER_PEASANT] = {name: \"Winter peasant\", img: SPRITE.CRAFT_WINTER_PEASANT, grid: 0, recycle: 0};\r\nINV_INFOS[INV.WINTER_HOOD] = {name: \"Winter hood\", img: SPRITE.CRAFT_WINTER_HOOD, grid: 0, recycle: 0};\r\nINV_INFOS[INV.BUCKET_FULL] = {name: \"Bucket full\", img: SPRITE.CRAFT_BUCKET_FULL, grid: 0, recycle: 0};\r\nINV_INFOS[INV.BUCKET_EMPTY] = {name: \"Bucket empty\", img: SPRITE.CRAFT_BUCKET_EMPTY, grid: 0, recycle: 1};\r\nINV_INFOS[INV.WELL] = {name: \"Well\", img: SPRITE.CRAFT_WELL, grid: 0, recycle: 1};\r\nINV_INFOS[INV.SIGN] = {name: \"Sign\", img: SPRITE.CRAFT_SIGN, grid: 0, recycle: 1};\r\nINV_INFOS[INV.PUMPKIN_SEED] = {name: \"Pumpkin Seed\", img: SPRITE.CRAFT_PUMPKIN_SEED, grid: 0, recycle: 0};\r\nINV_INFOS[INV.GARLIC_SEED] = {name: \"Garlic Seed\", img: SPRITE.CRAFT_GARLIC_SEED, grid: 0, recycle: 0};\r\nINV_INFOS[INV.THORNBUSH_SEED] = {name: \"Thorbushes Seed\", img: SPRITE.CRAFT_THORNBUSH_SEED, grid: 0, recycle: 0};\r\nINV_INFOS[INV.ROOF] = {name: \"Roof\", img: SPRITE.CRAFT_ROOF, grid: 1, recycle: 1};\r\nINV_INFOS[INV.CROWN_CRAB] = {name: \"Crab Crown\", img: SPRITE.CRAFT_CROWN_CRAB, grid: 0, recycle: 1};\r\nINV_INFOS[INV.CARROT_SEED] = {name: \"Carrot Seed\", img: SPRITE.CRAFT_CARROT_SEED, grid: 0, recycle: 0};\r\nINV_INFOS[INV.TOMATO_SEED] = {name: \"Tomato Seed\", img: SPRITE.CRAFT_TOMATO_SEED, grid: 0, recycle: 0};\r\nINV_INFOS[INV.WATERMELON_SEED] = {name: \"Watermelon Seed\", img: SPRITE.CRAFT_WATERMELON_SEED, grid: 0, recycle: 0};\r\nINV_INFOS[INV.ALOE_VERA_SEED] = {name: \"Aloe Vera Seed\", img: SPRITE.CRAFT_ALOE_VERA_SEED, grid: 0, recycle: 0};\r\nINV_INFOS[INV.TURBAN1] = {name: \"Cap\", img: SPRITE.CRAFT_TURBAN1, grid: 0, recycle: 1};\r\nINV_INFOS[INV.TURBAN2] = {name: \"Turban\", img: SPRITE.CRAFT_TURBAN2, grid: 0, recycle: 1};\r\nINV_INFOS[INV.PILOT_HELMET] = {name: \"Pilot Helmet\", img: SPRITE.CRAFT_PILOT_HELMET, grid: 0, recycle: 1};\r\nINV_INFOS[INV.EMERALD_MACHINE] = {name: \"Emerald Machine\", img: SPRITE.CRAFT_EMERALD_MACHINE, grid: 0, recycle: 0};\r\nINV_INFOS[INV.EXTRACTOR_MACHINE_STONE] = {name: \"Emerald Machine\", img: SPRITE.CRAFT_EXTRACTOR_MACHINE_STONE, grid: 0, recycle: 1};\r\nINV_INFOS[INV.EXTRACTOR_MACHINE_GOLD] = {name: \"Emerald Machine\", img: SPRITE.CRAFT_EXTRACTOR_MACHINE_GOLD, grid: 0, recycle: 1};\r\nINV_INFOS[INV.EXTRACTOR_MACHINE_DIAMOND] = {name: \"Emerald Machine\", img: SPRITE.CRAFT_EXTRACTOR_MACHINE_DIAMOND, grid: 0, recycle: 1};\r\nINV_INFOS[INV.EXTRACTOR_MACHINE_AMETHYST] = {name: \"Emerald Machine\", img: SPRITE.CRAFT_EXTRACTOR_MACHINE_AMETHYST, grid: 0, recycle: 1};\r\nINV_INFOS[INV.EXTRACTOR_MACHINE_REIDITE] = {name: \"Emerald Machine\", img: SPRITE.CRAFT_EXTRACTOR_MACHINE_REIDITE, grid: 0, recycle: 1};\r\nINV_INFOS[INV.PITCHFORK] = {name: \"Pitchfork\", img: SPRITE.CRAFT_PITCHFORK, grid: 0, recycle: 1};\r\nINV_INFOS[INV.WOOD_DOOR_SPIKE] = {name: \"Wood Door Spike\", img: SPRITE.CRAFT_WOOD_DOOR_SPIKE, grid: 0, recycle: 1};\r\nINV_INFOS[INV.STONE_DOOR_SPIKE] = {name: \"Stone Door Spike\", img: SPRITE.CRAFT_STONE_DOOR_SPIKE, grid: 0, recycle: 1};\r\nINV_INFOS[INV.GOLD_DOOR_SPIKE] = {name: \"Gold Door Spike\", img: SPRITE.CRAFT_GOLD_DOOR_SPIKE, grid: 0, recycle: 1};\r\nINV_INFOS[INV.DIAMOND_DOOR_SPIKE] = {name: \"Diamond Door Spike\", img: SPRITE.CRAFT_DIAMOND_DOOR_SPIKE, grid: 0, recycle: 1};\r\nINV_INFOS[INV.AMETHYST_DOOR_SPIKE] = {name: \"Amethyst Door Spike\", img: SPRITE.CRAFT_AMETHYST_DOOR_SPIKE, grid: 0, recycle: 1};\r\nINV_INFOS[INV.DIAMOND_PROTECTION] = {name: \"Diamond Fire Protection \", img: SPRITE.CRAFT_DIAMOND_PROTECTION, grid: 0, recycle: 1};\r\nINV_INFOS[INV.AMETHYST_PROTECTION] = {name: \"Amethyst Fire Protection \", img: SPRITE.CRAFT_AMETHYST_PROTECTION, grid: 0, recycle: 1};\r\nINV_INFOS[INV.REIDITE_PROTECTION] = {name: \"Amethyst Fire Protection \", img: SPRITE.CRAFT_REIDITE_PROTECTION, grid: 0, recycle: 1};\r\nINV_INFOS[INV.REIDITE_SWORD] = {name: \"Reidite Sword\", img: SPRITE.CRAFT_REIDITE_SWORD, grid: 0, recycle: 1};\r\nINV_INFOS[INV.REIDITE_SPEAR] = {name: \"Reidite Spear\", img: SPRITE.CRAFT_REIDITE_SPEAR, grid: 0, recycle: 1};\r\nINV_INFOS[INV.REIDITE_HELMET] = {name: \"Reidite Helmet\", img: SPRITE.CRAFT_REIDITE_HELMET, grid: 0, recycle: 1};\r\nINV_INFOS[INV.REIDITE_DOOR_SPIKE] = {name: \"Reidite Door Spike\", img: SPRITE.CRAFT_REIDITE_DOOR_SPIKE, grid: 0, recycle: 1};\r\nINV_INFOS[INV.REIDITE_DOOR] = {name: \"Reidite Door\", img: SPRITE.CRAFT_REIDITE_DOOR, grid: 0, recycle: 1};\r\nINV_INFOS[INV.REIDITE_SPIKE] = {name: \"Reidite Spike\", img: SPRITE.CRAFT_REIDITE_SPIKE, grid: 0, recycle: 1};\r\nINV_INFOS[INV.REIDITE_WALL] = {name: \"Reidite Wall\", img: SPRITE.CRAFT_REIDITE_WALL, grid: 0, recycle: 1};\r\nINV_INFOS[INV.PICK_REIDITE] = {name: \"Reidite pick\", img: SPRITE.CRAFT_PICK_REIDITE, grid: 0, recycle: 1};\r\nINV_INFOS[INV.BOAT] = {name: \"Boat\", img: SPRITE.CRAFT_BOAT, grid: 0, recycle: 1};\r\nINV_INFOS[INV.SLED] = {name: \"Sled\", img: SPRITE.CRAFT_SLED, grid: 0, recycle: 1};\r\nINV_INFOS[INV.SADDLE] = {name: \"Saddle\", img: SPRITE.CRAFT_SADDLE, grid: 0, recycle: 1};\r\nINV_INFOS[INV.MOUNT_BOAR] = {name: \"Mount Boar\", img: SPRITE.CRAFT_MOUNT_BOAR, grid: 0, recycle: 0};\r\nINV_INFOS[INV.CRAB_BOSS] = {name: \"Mount King Crab\", img: SPRITE.CRAFT_CRAB_BOSS, grid: 0, recycle: 0};\r\nINV_INFOS[INV.BABY_DRAGON] = {name: \"Mount Baby Dragon\", img: SPRITE.CRAFT_BABY_DRAGON, grid: 0, recycle: 0};\r\nINV_INFOS[INV.BABY_LAVA] = {name: \"Mount Baby Lava\", img: SPRITE.CRAFT_BABY_LAVA, grid: 0, recycle: 0};\r\nINV_INFOS[INV.HAWK] = {name: \"Mount Hawk\", img: SPRITE.CRAFT_HAWK, grid: 0, recycle: 0};\r\nINV_INFOS[INV.PLANE] = {name: \"Plane\", img: SPRITE.CRAFT_PLANE, grid: 0, recycle: 0};\r\nINV_INFOS[INV.PITCHFORK2] = {name: \"Pitchfork 2\", img: SPRITE.CRAFT_PITCHFORK2, grid: 0, recycle: 0};\r\nINV_INFOS[INV.BABY_MAMMOTH] = {name: \"Baby Mammoth\", img: SPRITE.CRAFT_BABY_MAMMOTH, grid: 0, recycle: 0};\r\nvar OLD_RECIPES = undefined;\r\nvar RECIPES = [{r: [[INV.WOOD, 25], [INV.STONE, 5]], w: 0, f: 0, o: 0, e: 0, id: CRAFT.FIRE, id2: INV.FIRE, time: 0.2, t: CATEGORY.UTILS}, {r: [[INV.FIRE, 1], [INV.WOOD, 35], [INV.STONE, 10]], w: 0, f: 0, o: 0, e: 0, id: CRAFT.BIG_FIRE, id2: INV.BIG_FIRE, time: 0.2, t: CATEGORY.UTILS}, {r: [[INV.WOOD, 150], [INV.STONE, 50], [INV.GOLD, 15]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.FURNACE, id2: INV.FURNACE, time: 0.05, t: CATEGORY.UTILS}, {r: [[INV.WOOD, 20], [INV.STONE, 10]], w: 0, f: 0, o: 0, e: 0, id: CRAFT.WORKBENCH, id2: INV.WORKBENCH, time: 0.16666666666666666, t: CATEGORY.UTILS}, {r: [[INV.WOOD, 10]], w: 0, f: 0, o: 0, e: 0, id: CRAFT.PICK_WOOD, id2: INV.PICK_WOOD, time: 0.3333333333333333, t: CATEGORY.TOOLS}, {r: [[INV.PICK_WOOD, 1], [INV.WOOD, 50], [INV.STONE, 15]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.PICK, id2: INV.PICK, time: 0.125, t: CATEGORY.TOOLS}, {r: [[INV.WOOD, 40], [INV.GOLD, 20], [INV.STONE, 30], [INV.PICK, 1]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.PICK_GOLD, id2: INV.PICK_GOLD, time: 0.08333333333333333, t: CATEGORY.TOOLS}, {r: [[INV.DIAMOND, 20], [INV.GOLD, 50], [INV.STONE, 80], [INV.PICK_GOLD, 1]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.PICK_DIAMOND, id2: INV.PICK_DIAMOND, time: 0.05, t: CATEGORY.TOOLS}, {r: [[INV.DIAMOND, 40], [INV.GOLD, 60], [INV.AMETHYST, 30], [INV.PICK_DIAMOND, 1]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.PICK_AMETHYST, id2: INV.PICK_AMETHYST, time: 0.016666666666666666, t: CATEGORY.TOOLS}, {r: [[INV.AMETHYST, 30], [INV.DIAMOND, 40], [INV.REIDITE, 30], [INV.PICK_AMETHYST, 1]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.PICK_REIDITE, id2: INV.PICK_REIDITE, time: 0.011111111111111112, t: CATEGORY.TOOLS}, {r: [[INV.WOOD, 90], [INV.STONE, 50]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.HAMMER, id2: INV.HAMMER, time: 0.1, t: CATEGORY.TOOLS}, {r: [[INV.WOOD, 160], [INV.STONE, 120], [INV.GOLD, 80], [INV.HAMMER, 1]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.HAMMER_GOLD, id2: INV.HAMMER_GOLD, time: 0.06666666666666667, t: CATEGORY.TOOLS}, {r: [[INV.DIAMOND, 80], [INV.STONE, 200], [INV.GOLD, 150], [INV.HAMMER_GOLD, 1]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.HAMMER_DIAMOND, id2: INV.HAMMER_DIAMOND, time: 0.05, t: CATEGORY.TOOLS}, {r: [[INV.DIAMOND, 160], [INV.AMETHYST, 60], [INV.GOLD, 250], [INV.HAMMER_DIAMOND, 1]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.HAMMER_AMETHYST, id2: INV.HAMMER_AMETHYST, time: 0.016666666666666666, t: CATEGORY.TOOLS}, {r: [[INV.AMETHYST, 160], [INV.REIDITE, 60], [INV.DIAMOND, 250], [INV.HAMMER_AMETHYST, 1]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.HAMMER_REIDITE, id2: INV.HAMMER_REIDITE, time: 0.011111111111111112, t: CATEGORY.TOOLS}, {r: [[INV.HAMMER_REIDITE, 1], [INV.BOTTLE_FULL, 1], [INV.KRAKEN_SKIN, 1], [INV.SCALES, 10], [INV.AMETHYST, 20]], w: 1, f: 1, o: 0, e: 0, id: CRAFT.SUPER_HAMMER, id2: INV.SUPER_HAMMER, time: 0.008333333333333333, t: CATEGORY.TOOLS}, {r: [[INV.WOOD, 30], [INV.STONE, 15]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.SHOVEL, id2: INV.SHOVEL, time: 0.2, t: CATEGORY.TOOLS}, {r: [[INV.SHOVEL, 1], [INV.GOLD, 20], [INV.STONE, 30], [INV.WOOD, 40]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.SHOVEL_GOLD, id2: INV.SHOVEL_GOLD, time: 0.1, t: CATEGORY.TOOLS}, {r: [[INV.SHOVEL_GOLD, 1], [INV.DIAMOND, 20], [INV.GOLD, 50], [INV.STONE, 80]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.SHOVEL_DIAMOND, id2: INV.SHOVEL_DIAMOND, time: 0.05, t: CATEGORY.TOOLS}, {r: [[INV.SHOVEL_DIAMOND, 1], [INV.GOLD, 60], [INV.AMETHYST, 30], [INV.DIAMOND, 40]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.SHOVEL_AMETHYST, id2: INV.SHOVEL_AMETHYST, time: 0.025, t: CATEGORY.TOOLS}, {r: [[INV.WOOD, 50]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.WATERING_CAN, id2: INV.WATERING_CAN, time: 0.2, t: CATEGORY.TOOLS}, {r: [[INV.WATERING_CAN, 1]], w: 0, f: 0, o: 1, e: 0, id: CRAFT.WATERING_CAN_FULL, id2: INV.WATERING_CAN_FULL, time: 0.2, t: CATEGORY.TOOLS}, {r: [[INV.WOOD, 100], [INV.STONE, 50]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.PITCHFORK, id2: INV.PITCHFORK, time: 0.1, t: CATEGORY.TOOLS}, {r: [[INV.PITCHFORK, 1], [INV.PITCHFORK_PART, 1]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.PITCHFORK2, id2: INV.PITCHFORK2, time: 0.016666666666666666, t: CATEGORY.TOOLS}, {r: [[INV.PAPER, 4], [INV.CORD, 4], [INV.FUR_WOLF, 4]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.BOOK, id2: INV.BOOK, time: 0.06666666666666667, t: CATEGORY.TOOLS}, {r: [[INV.WOOD, 40]], w: 0, f: 0, o: 0, e: 0, id: CRAFT.WOOD_SPEAR, id2: INV.WOOD_SPEAR, time: 0.2, t: CATEGORY.WEAPONS}, {r: [[INV.WOOD_SPEAR, 1], [INV.WOOD, 60], [INV.STONE, 10]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.SPEAR, id2: INV.SPEAR, time: 0.1, t: CATEGORY.WEAPONS}, {r: [[INV.WOOD, 80], [INV.GOLD, 30], [INV.STONE, 30], [INV.SPEAR, 1]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.GOLD_SPEAR, id2: INV.GOLD_SPEAR, t: CATEGORY.WEAPONS, time: 0.05}, {r: [[INV.WOOD, 200], [INV.DIAMOND, 40], [INV.GOLD, 60], [INV.GOLD_SPEAR, 1]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.DIAMOND_SPEAR, id2: INV.DIAMOND_SPEAR, time: 0.03333333333333333, t: CATEGORY.WEAPONS}, {r: [[INV.AMETHYST, 40], [INV.DIAMOND, 80], [INV.GOLD, 90], [INV.DIAMOND_SPEAR, 1]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.AMETHYST_SPEAR, id2: INV.AMETHYST_SPEAR, time: 0.016666666666666666, t: CATEGORY.WEAPONS}, {r: [[INV.REIDITE, 40], [INV.AMETHYST, 80], [INV.DIAMOND, 90], [INV.AMETHYST_SPEAR, 1]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.REIDITE_SPEAR, id2: INV.REIDITE_SPEAR, time: 0.011111111111111112, t: CATEGORY.WEAPONS}, {r: [[INV.BLUE_CORD, 20], [INV.DRAGON_ORB, 1], [INV.AMETHYST, 100], [INV.DRAGON_HEART, 3]], w: 1, f: 1, o: 1, e: 0, id: CRAFT.DRAGON_SPEAR, id2: INV.DRAGON_SPEAR, time: 0.008333333333333333, t: CATEGORY.WEAPONS}, {r: [[INV.DRAGON_SPEAR, 1], [INV.LAVA_ORB, 1], [INV.REIDITE, 100], [INV.LAVA_HEART, 2]], w: 1, f: 1, o: 1, e: 0, id: CRAFT.LAVA_SPEAR, id2: INV.LAVA_SPEAR, time: 0.005, t: CATEGORY.WEAPONS}, {r: [[INV.WOOD_SPEAR, 1], [INV.CRAB_LOOT, 5], [INV.CORD, 6]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.CRAB_SPEAR, id2: INV.CRAB_SPEAR, time: 0.03333333333333333, t: CATEGORY.WEAPONS}, {r: [[INV.WOOD, 30]], w: 0, f: 0, o: 0, e: 0, id: CRAFT.SWORD_WOOD, id2: INV.SWORD_WOOD, time: 0.2, t: CATEGORY.WEAPONS}, {r: [[INV.WOOD, 50], [INV.STONE, 25], [INV.SWORD_WOOD, 1]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.SWORD, id2: INV.SWORD, time: 0.1, t: CATEGORY.WEAPONS}, {r: [[INV.WOOD, 60], [INV.GOLD, 40], [INV.STONE, 50], [INV.SWORD, 1]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.SWORD_GOLD, id2: INV.SWORD_GOLD, time: 0.05, t: CATEGORY.WEAPONS}, {r: [[INV.DIAMOND, 40], [INV.GOLD, 60], [INV.STONE, 80], [INV.SWORD_GOLD, 1]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.SWORD_DIAMOND, id2: INV.SWORD_DIAMOND, time: 0.03333333333333333, t: CATEGORY.WEAPONS}, {r: [[INV.DIAMOND, 60], [INV.GOLD, 100], [INV.AMETHYST, 40], [INV.SWORD_DIAMOND, 1]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.SWORD_AMETHYST, id2: INV.SWORD_AMETHYST, time: 0.016666666666666666, t: CATEGORY.WEAPONS}, {r: [[INV.DIAMOND, 100], [INV.AMETHYST, 80], [INV.REIDITE, 40], [INV.SWORD_AMETHYST, 1]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.REIDITE_SWORD, id2: INV.REIDITE_SWORD, time: 0.011111111111111112, t: CATEGORY.WEAPONS}, {r: [[INV.PLANT, 3]], w: 0, f: 1, o: 0, e: 0, id: CRAFT.SEED, id2: INV.SEED, time: 0.2, t: CATEGORY.FOODS}, {r: [[INV.WILD_WHEAT, 3]], w: 0, f: 1, o: 0, e: 0, id: CRAFT.WHEAT_SEED, id2: INV.WHEAT_SEED, time: 0.2, t: CATEGORY.FOODS}, {r: [[INV.PUMPKIN, 8]], w: 0, f: 1, o: 0, e: 0, id: CRAFT.PUMPKIN_SEED, id2: INV.PUMPKIN_SEED, time: 0.2, t: CATEGORY.FOODS}, {r: [[INV.GARLIC, 8]], w: 0, f: 1, o: 0, e: 0, id: CRAFT.GARLIC_SEED, id2: INV.GARLIC_SEED, time: 0.2, t: CATEGORY.FOODS}, {r: [[INV.THORNBUSH, 8]], w: 0, f: 1, o: 0, e: 0, id: CRAFT.THORNBUSH_SEED, id2: INV.THORNBUSH_SEED, time: 0.2, t: CATEGORY.FOODS}, {r: [[INV.CARROT, 8]], w: 0, f: 1, o: 0, e: 0, id: CRAFT.CARROT_SEED, id2: INV.CARROT_SEED, time: 0.2, t: CATEGORY.FOODS}, {r: [[INV.TOMATO, 8]], w: 0, f: 1, o: 0, e: 0, id: CRAFT.TOMATO_SEED, id2: INV.TOMATO_SEED, time: 0.2, t: CATEGORY.FOODS}, {r: [[INV.WATERMELON, 16]], w: 0, f: 1, o: 0, e: 0, id: CRAFT.WATERMELON_SEED, id2: INV.WATERMELON_SEED, time: 0.2, t: CATEGORY.FOODS}, {r: [[INV.ALOE_VERA, 16]], w: 0, f: 1, o: 0, e: 0, id: CRAFT.ALOE_VERA_SEED, id2: INV.ALOE_VERA_SEED, time: 0.2, t: CATEGORY.FOODS}, {r: [[INV.MEAT, 1]], w: 0, f: 1, o: 0, e: 0, id: CRAFT.COOKED_MEAT, id2: INV.COOKED_MEAT, time: 0.2, t: CATEGORY.FOODS}, {r: [[INV.FOODFISH, 1]], w: 0, f: 1, o: 0, e: 0, id: CRAFT.FOODFISH_COOKED, id2: INV.FOODFISH_COOKED, time: 0.3333333333333333, t: CATEGORY.FOODS}, {r: [[INV.FLOUR, 3]], w: 0, f: 1, o: 0, e: 0, id: CRAFT.BREAD, id2: INV.BREAD, time: 0.3333333333333333, t: CATEGORY.FOODS}, {r: [[INV.FLOUR, 3], [INV.PLANT, 1]], w: 0, f: 1, o: 0, e: 0, id: CRAFT.COOKIE, id2: INV.COOKIE, time: 0.3333333333333333, t: CATEGORY.FOODS}, {r: [[INV.FLOUR, 5], [INV.PLANT, 2], [INV.ICE, 2]], w: 0, f: 1, o: 0, e: 0, id: CRAFT.CAKE, id2: INV.CAKE, time: 0.2, t: CATEGORY.FOODS}, {r: [[INV.CORD, 2]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.BANDAGE, id2: INV.BANDAGE, time: 0.2, t: CATEGORY.UTILS}, {r: [[INV.WOOD, 20]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.WALL, id2: INV.WALL, time: 0.2, t: CATEGORY.BASES}, {r: [[INV.WALL, 1], [INV.STONE, 17]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.STONE_WALL, id2: INV.STONE_WALL, time: 0.2, t: CATEGORY.BASES}, {r: [[INV.STONE_WALL, 1], [INV.GOLD, 14]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.GOLD_WALL, id2: INV.GOLD_WALL, time: 0.2, t: CATEGORY.BASES}, {r: [[INV.GOLD_WALL, 1], [INV.DIAMOND, 11]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.DIAMOND_WALL, id2: INV.DIAMOND_WALL, time: 0.2, t: CATEGORY.BASES}, {r: [[INV.DIAMOND_WALL, 1], [INV.AMETHYST, 8]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.AMETHYST_WALL, id2: INV.AMETHYST_WALL, time: 0.2, t: CATEGORY.BASES}, {r: [[INV.AMETHYST_WALL, 1], [INV.REIDITE, 5]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.REIDITE_WALL, id2: INV.REIDITE_WALL, time: 0.2, t: CATEGORY.BASES}, {r: [[INV.WOOD, 30]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.WOOD_DOOR, id2: INV.WOOD_DOOR, time: 0.125, t: CATEGORY.BASES}, {r: [[INV.WOOD_DOOR, 1], [INV.STONE, 27]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.STONE_DOOR, id2: INV.STONE_DOOR, time: 0.125, t: CATEGORY.BASES}, {r: [[INV.STONE_DOOR, 1], [INV.GOLD, 24]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.GOLD_DOOR, id2: INV.GOLD_DOOR, time: 0.125, t: CATEGORY.BASES}, {r: [[INV.GOLD_DOOR, 1], [INV.DIAMOND, 21]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.DIAMOND_DOOR, id2: INV.DIAMOND_DOOR, time: 0.125, t: CATEGORY.BASES}, {r: [[INV.DIAMOND_DOOR, 1], [INV.AMETHYST, 18]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.AMETHYST_DOOR, id2: INV.AMETHYST_DOOR, time: 0.125, t: CATEGORY.BASES}, {r: [[INV.AMETHYST_DOOR, 1], [INV.REIDITE, 15]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.REIDITE_DOOR, id2: INV.REIDITE_DOOR, time: 0.125, t: CATEGORY.BASES}, {r: [[INV.WALL, 1], [INV.WOOD, 40], [INV.STONE, 30]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.SPIKE, id2: INV.SPIKE, time: 0.05, t: CATEGORY.BASES}, {r: [[INV.STONE_WALL, 1], [INV.STONE, 70]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.STONE_SPIKE, id2: INV.STONE_SPIKE, time: 0.05, t: CATEGORY.BASES}, {r: [[INV.GOLD_WALL, 1], [INV.GOLD, 40], [INV.STONE, 30]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.GOLD_SPIKE, id2: INV.GOLD_SPIKE, time: 0.05, t: CATEGORY.BASES}, {r: [[INV.DIAMOND_WALL, 1], [INV.DIAMOND, 40], [INV.STONE, 30]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.DIAMOND_SPIKE, id2: INV.DIAMOND_SPIKE, time: 0.05, t: CATEGORY.BASES}, {r: [[INV.AMETHYST_WALL, 1], [INV.AMETHYST, 40], [INV.STONE, 30]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.AMETHYST_SPIKE, id2: INV.AMETHYST_SPIKE, time: 0.05, t: CATEGORY.BASES}, {r: [[INV.REIDITE_WALL, 1], [INV.REIDITE, 40], [INV.GOLD, 30]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.REIDITE_SPIKE, id2: INV.REIDITE_SPIKE, time: 0.05, t: CATEGORY.BASES}, {r: [[INV.WOOD_DOOR, 1], [INV.WOOD, 80], [INV.STONE, 60]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.WOOD_DOOR_SPIKE, id2: INV.WOOD_DOOR_SPIKE, time: 0.05, t: CATEGORY.BASES}, {r: [[INV.STONE_DOOR, 1], [INV.STONE, 140]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.STONE_DOOR_SPIKE, id2: INV.STONE_DOOR_SPIKE, time: 0.05, t: CATEGORY.BASES}, {r: [[INV.GOLD_DOOR, 1], [INV.GOLD, 80], [INV.STONE, 60]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.GOLD_DOOR_SPIKE, id2: INV.GOLD_DOOR_SPIKE, time: 0.05, t: CATEGORY.BASES}, {r: [[INV.DIAMOND_DOOR, 1], [INV.DIAMOND, 80], [INV.STONE, 60]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.DIAMOND_DOOR_SPIKE, id2: INV.DIAMOND_DOOR_SPIKE, time: 0.05, t: CATEGORY.BASES}, {r: [[INV.AMETHYST_DOOR, 1], [INV.AMETHYST, 80], [INV.STONE, 60]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.AMETHYST_DOOR_SPIKE, id2: INV.AMETHYST_DOOR_SPIKE, time: 0.05, t: CATEGORY.BASES}, {r: [[INV.REIDITE_DOOR, 1], [INV.REIDITE, 80], [INV.GOLD, 60]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.REIDITE_DOOR_SPIKE, id2: INV.REIDITE_DOOR_SPIKE, time: 0.05, t: CATEGORY.BASES}, {r: [[INV.WOOD, 25], [INV.GOLD, 2]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.CHEST, id2: INV.CHEST, time: 0.2, t: CATEGORY.UTILS}, {r: [[INV.PAPER, 1], [INV.FUR, 1], [INV.CORD, 2]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.EXPLORER_HAT, id2: INV.EXPLORER_HAT, time: 0.2, t: CATEGORY.CLOTHES}, {r: [[INV.PAPER, 5], [INV.PENGUIN_FEATHER, 20], [INV.BLUE_CORD, 5], [INV.FUR, 5]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.PIRATE_HAT, id2: INV.PIRATE_HAT, time: 0.03333333333333333, t: CATEGORY.CLOTHES}, {r: [[INV.PILOT_GLASSES, 1], [INV.HAWK_FEATHER, 8], [INV.VULTURE_FEATHER, 8], [INV.PENGUIN_FEATHER, 8], [INV.CORD, 6]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.PILOT_HELMET, id2: INV.PILOT_HELMET, time: 0.016666666666666666, t: CATEGORY.CLOTHES}, {r: [[INV.FUR, 1], [INV.CORD, 2]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.EARMUFFS, id2: INV.EARMUFFS, time: 0.2, t: CATEGORY.CLOTHES}, {r: [[INV.EARMUFFS, 1], [INV.FUR_WOLF, 5], [INV.CORD, 4]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.COAT, id2: INV.COAT, time: 0.08333333333333333, t: CATEGORY.CLOTHES}, {r: [[INV.COAT, 1], [INV.FUR_WINTER, 5], [INV.BLUE_CORD, 4]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.CAP_SCARF, id2: INV.CAP_SCARF, time: 0.03333333333333333, t: CATEGORY.CLOTHES}, {r: [[INV.CAP_SCARF, 1], [INV.FUR_WINTER, 5], [INV.FUR_MAMMOTH, 10], [INV.BLUE_CORD, 4]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.FUR_HAT, id2: INV.FUR_HAT, time: 0.02, t: CATEGORY.CLOTHES}, {r: [[INV.WOOD, 50]], w: 0, f: 0, o: 0, e: 0, id: CRAFT.WOOD_HELMET, id2: INV.WOOD_HELMET, time: 0.2, t: CATEGORY.CLOTHES}, {r: [[INV.STONE, 75], [INV.WOOD, 75], [INV.WOOD_HELMET, 1]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.STONE_HELMET, id2: INV.STONE_HELMET, time: 0.1, t: CATEGORY.CLOTHES}, {r: [[INV.STONE, 90], [INV.WOOD, 90], [INV.GOLD, 90], [INV.STONE_HELMET, 1]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.GOLD_HELMET, id2: INV.GOLD_HELMET, time: 0.05, t: CATEGORY.CLOTHES}, {r: [[INV.STONE, 100], [INV.GOLD, 100], [INV.DIAMOND, 100], [INV.GOLD_HELMET, 1]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.DIAMOND_HELMET, id2: INV.DIAMOND_HELMET, time: 0.03333333333333333, t: CATEGORY.CLOTHES}, {r: [[INV.AMETHYST, 80], [INV.GOLD, 150], [INV.DIAMOND, 120], [INV.DIAMOND_HELMET, 1]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.AMETHYST_HELMET, id2: INV.AMETHYST_HELMET, time: 0.016666666666666666, t: CATEGORY.CLOTHES}, {r: [[INV.REIDITE, 80], [INV.DIAMOND, 150], [INV.AMETHYST, 120], [INV.AMETHYST_HELMET, 1]], w: 1, f: 1, o: 0, e: 0, id: CRAFT.REIDITE_HELMET, id2: INV.REIDITE_HELMET, time: 0.011111111111111112, t: CATEGORY.CLOTHES}, {r: [[INV.SCALES, 2], [INV.DIAMOND, 40], [INV.CORD, 4]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.DIVING_MASK, id2: INV.DIVING_MASK, time: 0.05, t: CATEGORY.CLOTHES}, {r: [[INV.DIVING_MASK, 1], [INV.GOLD, 80], [INV.KRAKEN_SKIN, 1], [INV.AMETHYST, 20]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.SUPER_DIVING_SUIT, id2: INV.SUPER_DIVING_SUIT, time: 0.011111111111111112, t: CATEGORY.CLOTHES}, {r: [[INV.FLAME, 5], [INV.DIAMOND, 50], [INV.BLUE_CORD, 5]], w: 1, f: 1, o: 0, e: 0, id: CRAFT.DIAMOND_PROTECTION, id2: INV.DIAMOND_PROTECTION, time: 0.05, t: CATEGORY.CLOTHES}, {r: [[INV.DIAMOND_PROTECTION, 1], [INV.FLAME, 10], [INV.AMETHYST, 50]], w: 1, f: 1, o: 0, e: 0, id: CRAFT.AMETHYST_PROTECTION, id2: INV.AMETHYST_PROTECTION, time: 0.016666666666666666, t: CATEGORY.CLOTHES}, {r: [[INV.AMETHYST_PROTECTION, 1], [INV.FLAME, 15], [INV.AMETHYST, 50], [INV.REIDITE, 50]], w: 1, f: 1, o: 0, e: 0, id: CRAFT.REIDITE_PROTECTION, id2: INV.REIDITE_PROTECTION, time: 0.011111111111111112, t: CATEGORY.CLOTHES}, {r: [[INV.CORD, 4], [INV.FUR_BOAR, 2]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.TURBAN1, id2: INV.TURBAN1, time: 0.06666666666666667, t: CATEGORY.CLOTHES}, {r: [[INV.TURBAN1, 1], [INV.CORD, 6], [INV.FUR_BOAR, 4], [INV.VULTURE_FEATHER, 12], [INV.PENGUIN_FEATHER, 4]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.TURBAN2, id2: INV.TURBAN2, time: 0.006666666666666667, t: CATEGORY.CLOTHES}, {r: [[INV.CORD, 6], [INV.FUR_WOLF, 5]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.BAG, id2: INV.BAG, time: 0.06666666666666667, t: CATEGORY.CLOTHES}, {r: [[INV.WOOD, 20]], w: 0, f: 1, o: 0, e: 0, id: CRAFT.PAPER, id2: INV.PAPER, time: 0.3333333333333333, t: CATEGORY.UTILS}, {r: [[INV.DIAMOND, 1], [INV.CORD, 1]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.BLUE_CORD, id2: INV.BLUE_CORD, time: 0.3333333333333333, t: CATEGORY.UTILS}, {r: [[INV.GOLD, 10]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.LOCK, id2: INV.LOCK, time: 0.2, t: CATEGORY.UTILS}, {r: [[INV.GOLD, 250]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.LOCKPICK, id2: INV.LOCKPICK, time: 0.016666666666666666, t: CATEGORY.UTILS}, {r: [[INV.WOOD, 50]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.TOTEM, id2: INV.TOTEM, time: 0.1, t: CATEGORY.UTILS}, {r: [[INV.WOOD, 15]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.BRIDGE, id2: INV.BRIDGE, time: 0.2, t: CATEGORY.UTILS}, {r: [[INV.WOOD, 30]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.ROOF, id2: INV.ROOF, time: 0.2, t: CATEGORY.UTILS}, {r: [[INV.WOOD, 120]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.WOOD_TOWER, id2: INV.WOOD_TOWER, time: 0.06666666666666667, t: CATEGORY.UTILS}, {r: [[INV.WOOD, 20], [INV.GROUND, 15]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.PLOT, id2: INV.PLOT, time: 0.2, t: CATEGORY.UTILS}, {r: [[INV.SAND, 25]], w: 1, f: 1, o: 0, e: 0, id: CRAFT.BOTTLE_EMPTY, id2: INV.BOTTLE_EMPTY, time: 0.2, t: CATEGORY.FOODS}, {r: [[INV.BOTTLE_EMPTY, 1]], w: 0, f: 0, o: 1, e: 0, id: CRAFT.BOTTLE_FULL, id2: INV.BOTTLE_FULL, time: 0.2, t: CATEGORY.FOODS}, {r: [[INV.ICE, 20], [INV.BOTTLE_EMPTY, 1]], w: 0, f: 1, o: 0, e: 0, id: CRAFT.BOTTLE_FULL_2, id2: INV.BOTTLE_FULL, time: 0.1, t: CATEGORY.FOODS}, {r: [[INV.BOTTLE_EMPTY, 1]], w: 0, f: 0, o: 0, e: 1, id: CRAFT.BOTTLE_FULL_3, id2: INV.BOTTLE_FULL, time: 0.3333333333333333, t: CATEGORY.FOODS}, {r: [[INV.WOOD, 60], [INV.STONE, 20], [INV.CORD, 2]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.WINDMILL, id2: INV.WINDMILL, time: 0.1, t: CATEGORY.UTILS}, {r: [[INV.DIAMOND, 40], [INV.STONE, 45]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.RESURRECTION, id2: INV.RESURRECTION, time: 0.05, t: CATEGORY.UTILS}, {r: [[INV.RESURRECTION, 1], [INV.EMERALD, 40], [INV.SANDWORM_JUICE, 1]], w: 1, f: 1, o: 1, e: 0, id: CRAFT.EMERALD_MACHINE, id2: INV.EMERALD_MACHINE, time: 0.005, t: CATEGORY.UTILS}, {r: [[INV.WOOD, 50], [INV.STONE, 100]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.EXTRACTOR_MACHINE_STONE, id2: INV.EXTRACTOR_MACHINE_STONE, time: 0.011111111111111112, t: CATEGORY.UTILS}, {r: [[INV.STONE, 60], [INV.GOLD, 120]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.EXTRACTOR_MACHINE_GOLD, id2: INV.EXTRACTOR_MACHINE_GOLD, time: 0.011111111111111112, t: CATEGORY.UTILS}, {r: [[INV.GOLD, 70], [INV.DIAMOND, 140]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.EXTRACTOR_MACHINE_DIAMOND, id2: INV.EXTRACTOR_MACHINE_DIAMOND, time: 0.011111111111111112, t: CATEGORY.UTILS}, {r: [[INV.DIAMOND, 80], [INV.AMETHYST, 160]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.EXTRACTOR_MACHINE_AMETHYST, id2: INV.EXTRACTOR_MACHINE_AMETHYST, time: 0.011111111111111112, t: CATEGORY.UTILS}, {r: [[INV.AMETHYST, 90], [INV.REIDITE, 180]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.EXTRACTOR_MACHINE_REIDITE, id2: INV.EXTRACTOR_MACHINE_REIDITE, time: 0.011111111111111112, t: CATEGORY.UTILS}, {r: [[INV.STONE, 70]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.SPANNER, id2: INV.SPANNER, time: 0.1, t: CATEGORY.TOOLS}, {r: [[INV.STONE, 70], [INV.WOOD, 50]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.MACHETE, id2: INV.MACHETE, time: 0.1, t: CATEGORY.TOOLS}, {r: [[INV.WOOD, 40], [INV.STONE, 40]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.BREAD_OVEN, id2: INV.BREAD_OVEN, time: 0.1, t: CATEGORY.UTILS}, {r: [[INV.BREAD, 1], [INV.COOKED_MEAT, 1]], w: 0, f: 0, o: 0, e: 0, id: CRAFT.SANDWICH, id2: INV.SANDWICH, time: 0.3333333333333333, t: CATEGORY.FOODS}, {r: [[INV.BLUE_CORD, 30], [INV.DRAGON_CUBE, 1], [INV.AMETHYST, 150], [INV.DRAGON_HEART, 3]], w: 1, f: 1, o: 1, e: 0, id: CRAFT.DRAGON_HELMET, id2: INV.DRAGON_HELMET, time: 0.008333333333333333, t: CATEGORY.CLOTHES}, {r: [[INV.DRAGON_HELMET, 1], [INV.LAVA_CUBE, 1], [INV.REIDITE, 150], [INV.LAVA_HEART, 2]], w: 1, f: 1, o: 1, e: 0, id: CRAFT.LAVA_HELMET, id2: INV.LAVA_HELMET, time: 0.005555555555555556, t: CATEGORY.CLOTHES}, {r: [[INV.GOLD_HELMET, 1], [INV.CRAB_LOOT, 10], [INV.CRAB_STICK, 10], [INV.CORD, 10]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.CROWN_CRAB, id2: INV.CROWN_CRAB, time: 0.016666666666666666, t: CATEGORY.CLOTHES}, {r: [[INV.BLUE_CORD, 20], [INV.DRAGON_ORB, 1], [INV.AMETHYST, 150], [INV.DRAGON_HEART, 3]], w: 1, f: 1, o: 1, e: 0, id: CRAFT.DRAGON_SWORD, id2: INV.DRAGON_SWORD, time: 0.008333333333333333, t: CATEGORY.WEAPONS}, {r: [[INV.DRAGON_SWORD, 1], [INV.LAVA_ORB, 1], [INV.REIDITE, 150], [INV.LAVA_HEART, 2]], w: 1, f: 1, o: 1, e: 0, id: CRAFT.LAVA_SWORD, id2: INV.LAVA_SWORD, time: 0.005555555555555556, t: CATEGORY.WEAPONS}, {r: [[INV.WOOD, 100], [INV.CORD, 4]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.WOOD_BOW, id2: INV.WOOD_BOW, time: 0.05, t: CATEGORY.WEAPONS}, {r: [[INV.WOOD, 30]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.WOOD_ARROW, id2: INV.WOOD_ARROW, time: 0.2, t: CATEGORY.WEAPONS}, {r: [[INV.STONE, 200], [INV.CORD, 8], [INV.PENGUIN_FEATHER, 4], [INV.WOOD_BOW, 1]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.STONE_BOW, id2: INV.STONE_BOW, time: 0.04, t: CATEGORY.WEAPONS}, {r: [[INV.STONE, 20], [INV.HAWK_FEATHER, 1]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.STONE_ARROW, id2: INV.STONE_ARROW, time: 0.2, t: CATEGORY.WEAPONS}, {r: [[INV.GOLD, 200], [INV.CORD, 12], [INV.HAWK_FEATHER, 4], [INV.PENGUIN_FEATHER, 4], [INV.STONE_BOW, 1]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.GOLD_BOW, id2: INV.GOLD_BOW, time: 0.03333333333333333, t: CATEGORY.WEAPONS}, {r: [[INV.GOLD, 20], [INV.PENGUIN_FEATHER, 1]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.GOLD_ARROW, id2: INV.GOLD_ARROW, time: 0.1, t: CATEGORY.WEAPONS}, {r: [[INV.DIAMOND, 200], [INV.BLUE_CORD, 10], [INV.HAWK_FEATHER, 8], [INV.PENGUIN_FEATHER, 8], [INV.GOLD_BOW, 1]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.DIAMOND_BOW, id2: INV.DIAMOND_BOW, time: 0.02857142857142857, t: CATEGORY.WEAPONS}, {r: [[INV.DIAMOND, 10], [INV.PENGUIN_FEATHER, 1]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.DIAMOND_ARROW, id2: INV.DIAMOND_ARROW, time: 0.1, t: CATEGORY.WEAPONS}, {r: [[INV.AMETHYST, 200], [INV.BLUE_CORD, 10], [INV.PENGUIN_FEATHER, 8], [INV.VULTURE_FEATHER, 8], [INV.DIAMOND_BOW, 1]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.AMETHYST_BOW, id2: INV.AMETHYST_BOW, time: 0.025, t: CATEGORY.WEAPONS}, {r: [[INV.AMETHYST, 10], [INV.VULTURE_FEATHER, 1]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.AMETHYST_ARROW, id2: INV.AMETHYST_ARROW, time: 0.06666666666666667, t: CATEGORY.WEAPONS}, {r: [[INV.REIDITE, 200], [INV.BLUE_CORD, 10], [INV.KRAKEN_SKIN, 1], [INV.AMETHYST_BOW, 1]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.REIDITE_BOW, id2: INV.REIDITE_BOW, time: 0.022222222222222223, t: CATEGORY.WEAPONS}, {r: [[INV.REIDITE, 10], [INV.VULTURE_FEATHER, 1], [INV.FLAME, 1]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.REIDITE_ARROW, id2: INV.REIDITE_ARROW, time: 0.06666666666666667, t: CATEGORY.WEAPONS}, {r: [[INV.EMERALD, 200], [INV.BLUE_CORD, 10], [INV.DRAGON_ORB, 1], [INV.REIDITE_BOW, 1]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.DRAGON_BOW, id2: INV.DRAGON_BOW, time: 0.02, t: CATEGORY.WEAPONS}, {r: [[INV.EMERALD, 10], [INV.SANDWORM_JUICE, 1]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.DRAGON_ARROW, id2: INV.DRAGON_ARROW, time: 0.05, t: CATEGORY.WEAPONS}, {r: [[INV.WOOD, 100]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.WOOD_SHIELD, id2: INV.WOOD_SHIELD, time: 0.04, t: CATEGORY.WEAPONS}, {r: [[INV.WOOD_SHIELD, 1], [INV.STONE, 100], [INV.WOOD, 50]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.STONE_SHIELD, id2: INV.STONE_SHIELD, time: 0.025, t: CATEGORY.WEAPONS}, {r: [[INV.STONE_SHIELD, 1], [INV.GOLD, 50], [INV.STONE, 50], [INV.WOOD, 50]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.GOLD_SHIELD, id2: INV.GOLD_SHIELD, time: 0.02, t: CATEGORY.WEAPONS}, {r: [[INV.GOLD_SHIELD, 1], [INV.DIAMOND, 50], [INV.GOLD, 50], [INV.STONE, 50]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.DIAMOND_SHIELD, id2: INV.DIAMOND_SHIELD, time: 0.014285714285714285, t: CATEGORY.WEAPONS}, {r: [[INV.DIAMOND_SHIELD, 1], [INV.AMETHYST, 50], [INV.DIAMOND, 50], [INV.GOLD, 50]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.AMETHYST_SHIELD, id2: INV.AMETHYST_SHIELD, time: 0.011111111111111112, t: CATEGORY.WEAPONS}, {r: [[INV.AMETHYST_SHIELD, 1], [INV.REIDITE, 50], [INV.AMETHYST, 50], [INV.DIAMOND, 50]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.REIDITE_SHIELD, id2: INV.REIDITE_SHIELD, time: 0.008333333333333333, t: CATEGORY.WEAPONS}, {r: [[INV.GEMME_GREEN, 1], [INV.GOLD, 200]], w: 1, f: 1, o: 1, e: 0, id: CRAFT.CROWN_GREEN, id2: INV.CROWN_GREEN, time: 0.016666666666666666, t: CATEGORY.CLOTHES}, {r: [[INV.GEMME_ORANGE, 1], [INV.GOLD, 200]], w: 1, f: 1, o: 1, e: 0, id: CRAFT.CROWN_ORANGE, id2: INV.CROWN_ORANGE, time: 0.016666666666666666, t: CATEGORY.CLOTHES}, {r: [[INV.GEMME_BLUE, 1], [INV.GOLD, 200], [INV.DRAGON_HEART, 1]], w: 1, f: 1, o: 1, e: 0, id: CRAFT.CROWN_BLUE, id2: INV.CROWN_BLUE, time: 0.016666666666666666, t: CATEGORY.CLOTHES}, {r: [[INV.FUR_WOLF, 10], [INV.FUR, 5], [INV.CORD, 6]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.HOOD, id2: INV.HOOD, time: 0.1, t: CATEGORY.CLOTHES}, {r: [[INV.FUR, 3], [INV.CORD, 2]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.PEASANT, id2: INV.PEASANT, time: 0.1, t: CATEGORY.CLOTHES}, {r: [[INV.HOOD, 1], [INV.SPECIAL_FUR_2, 1], [INV.FUR_WINTER, 15], [INV.BLUE_CORD, 5], [INV.PENGUIN_FEATHER, 8]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.WINTER_HOOD, id2: INV.WINTER_HOOD, time: 0.016666666666666666, t: CATEGORY.CLOTHES}, {r: [[INV.PEASANT, 1], [INV.SPECIAL_FUR, 1], [INV.FUR_WINTER, 10], [INV.BLUE_CORD, 5], [INV.PENGUIN_FEATHER, 8]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.WINTER_PEASANT, id2: INV.WINTER_PEASANT, time: 0.016666666666666666, t: CATEGORY.CLOTHES}, {r: [[INV.BUCKET_EMPTY, 1]], w: 0, f: 0, o: 1, e: 0, id: CRAFT.BUCKET_FULL, id2: INV.BUCKET_FULL, time: 0.2, t: CATEGORY.TOOLS}, {r: [[INV.WOOD, 20], [INV.CORD, 1]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.BUCKET_EMPTY, id2: INV.BUCKET_EMPTY, time: 0.2, t: CATEGORY.TOOLS}, {r: [[INV.STONE, 100], [INV.GROUND, 30]], w: 1, f: 1, o: 0, e: 0, id: CRAFT.WELL, id2: INV.WELL, time: 0.1, t: CATEGORY.UTILS}, {r: [[INV.WOOD, 20]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.SIGN, id2: INV.SIGN, time: 0.2, t: CATEGORY.UTILS}, {r: [[INV.WOOD, 100], [INV.STONE, 50], [INV.FUR, 5], [INV.FUR_WOLF, 5], [INV.CORD, 6]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.BED, id2: INV.BED, time: 0.05, t: CATEGORY.UTILS}, {r: [[INV.WOOD, 250], [INV.BLUE_CORD, 10], [INV.FUR_WINTER, 2], [INV.SCALES, 2]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.BOAT, id2: INV.BOAT, time: 0.02, t: CATEGORY.UTILS}, {r: [[INV.WOOD, 250], [INV.CORD, 10], [INV.FUR_WINTER, 2], [INV.PENGUIN_FEATHER, 8]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.SLED, id2: INV.SLED, time: 0.02, t: CATEGORY.UTILS}, {r: [[INV.CORD, 10], [INV.FUR_WOLF, 6], [INV.FUR, 4], [INV.SAND, 50]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.SADDLE, id2: INV.SADDLE, time: 0.05, t: CATEGORY.UTILS}, {r: [[INV.WOOD, 250], [INV.CORD, 10], [INV.PAPER, 10], [INV.HAWK_FEATHER, 8]], w: 1, f: 0, o: 0, e: 0, id: CRAFT.PLANE, id2: INV.PLANE, time: 0.02, t: CATEGORY.UTILS}];\r\nvar COUNTER = 300;\r\nTEXT = {YOU_CANNOT_JOIN: COUNTER++, KICKED: COUNTER++, KEY_ALREADY: COUNTER++, KEY_WRONG: COUNTER++, OLD_VERSION: COUNTER++, NO_MORE_RESOURCES: COUNTER++, SURVIVED_1DAY: COUNTER++, SURVIVED: COUNTER++, DAYS: COUNTER++, DEAD_SAD: COUNTER++, SPAM_ME: COUNTER++, SPAM_ME2: COUNTER++, EMPTY: COUNTER++, INV_FULL: COUNTER++, DEAD: COUNTER++, WRONG_TOOL: COUNTER++, JOIN_TEAM: COUNTER++, YOU_DEAD: COUNTER++, JOINED_TEAM: COUNTER++, TEAM_DESTROYED: COUNTER++, LEFT_TEAM: COUNTER++, LEFT_TEAM2: COUNTER++, TOKEN: COUNTER++, CHOOSE: COUNTER++, PLAYERS: COUNTER++, TOTAL_PLAYERS: COUNTER++, TOTAL_MODE: COUNTER++, COMMING_SOON: COUNTER++, BACK_TO_THE_GAME: COUNTER++, TWITTER: COUNTER++, FACEBOOK: COUNTER++, KIT_NEXT: COUNTER++, POINTS: COUNTER++, SCORE: COUNTER++, KILL: COUNTER++, DAYS_SURVIVED: COUNTER++, MODE_FREE: COUNTER++, MODE_GRID: COUNTER++, NEW_VERSION: COUNTER++, WRONG_PASSWORD: COUNTER++, TEMPEST_OFF: COUNTER++, TEMPEST_ON: COUNTER++, BLIZZARD_OFF: COUNTER++, BLIZZARD_ON: COUNTER++};\r\nvar set_english = function () {\r\n    LANG[INV.EXTRACTOR_MACHINE_STONE] = [\"Stone Extractor\", \"Can produce stone with wood\", \"It takes 10 seconds to drill Stone\", \"Durability: 2000\"];\r\n    LANG[INV.EXTRACTOR_MACHINE_GOLD] = [\"Gold Extractor\", \"Can produce gold with wood\", \"It takes 10 seconds to drill Gold\", \"Durability: 2000\"];\r\n    LANG[INV.EXTRACTOR_MACHINE_DIAMOND] = [\"Diamond Extractor\", \"Can produce diamond with wood\", \"It takes 10 seconds to drill Diamond\", \"Durability: 2000\"];\r\n    LANG[INV.EXTRACTOR_MACHINE_AMETHYST] = [\"Amethyst Extractor\", \"Can produce amethyst with wood\", \"It takes 10 seconds to drill Amethyst\", \"Durability: 2000\"];\r\n    LANG[INV.EXTRACTOR_MACHINE_REIDITE] = [\"Reidite Extractor\", \"Can produce reidite with wood\", \"It takes 10 seconds to drill Reidite\", \"Durability: 2000\"];\r\n    LANG[INV.REIDITE_SHIELD] = [\"Reidite Shield\", \"A must for the pros of the getaway\", \"You can not attack when you use it\", \"Damage: 6\", \"Players Defense: 6\"];\r\n    LANG[INV.AMETHYST_SHIELD] = [\"Amethyst Shield\", \"Because you know how to run away in style\", \"You can not attack when you use it\", \"Damage: 5\", \"Players Defense: 5\"];\r\n    LANG[INV.DIAMOND_SHIELD] = [\"Diamond Shield\", \"Run or attack, you've obviously made your choice.\", \"You can not attack when you use it\", \"Damage: 4\", \"Players Defense: 4\"];\r\n    LANG[INV.GOLD_SHIELD] = [\"Gold Shield\", \"When it's golden, it's always better.\", \"You can not attack when you use it\", \"Damage: 3\", \"Players Defense: 3\"];\r\n    LANG[INV.STONE_SHIELD] = [\"Stone Shield\", \"Protects you a bit more\", \"You can not attack when you use it\", \"Damage: 2\", \"Players Defense: 2\"];\r\n    LANG[INV.WOOD_SHIELD] = [\"Wood Shield\", \"Protects you a bit\", \"You can not attack when you use it\", \"Damage: 1\", \"Players Defense: 1\"];\r\n    LANG[INV.MACHETE] = [\"Machete\", \"You gather more from mob boxes\", \"Useless to attack mobs\", \"Damage against Players: 5\"];\r\n    LANG[INV.WOOD_TOWER] = [\"Tower\", \"Allows you to shoot over walls with a bow\", \"Does not allow to pass through roofs\"];\r\n    LANG[INV.DRAGON_ARROW] = [\"Dragon Arrow\", \"Must be used with a Dragon Bow\", \"Damage: 45\", \"Mobs Damage: 1200\", \"Building Damage: 45\"];\r\n    LANG[INV.DRAGON_BOW] = [\"Dragon Bow\", \"Also called the One-Shot-Monster\", \"Requiers arrows to be used\"];\r\n    LANG[INV.REIDITE_ARROW] = [\"Reidite Arrow\", \"Must be used with a Reidite or a Dragon Bow\", \"Damage: 40\", \"Mobs Damage: 900\", \"Building Damage: 40\"];\r\n    LANG[INV.REIDITE_BOW] = [\"Reidite Bow\", \"Makes the most terrifying monster cry.\", \"Requiers any arrows, except dragon arrows, to be used\"];\r\n    LANG[INV.AMETHYST_ARROW] = [\"Amethyst Arrow\", \"Must be used with Amethyst, Reidite or Dragon Bow\", \"Damage: 35\", \"Mobs Damage: 600\", \"Building Damage: 35\"];\r\n    LANG[INV.AMETHYST_BOW] = [\"Amethyst Bow\", \"It's super efficient!\", \"Requiers any arrows, except dragon and reidite arrows, to be used\"];\r\n    LANG[INV.DIAMOND_ARROW] = [\"Diamond Arrow\", \"Must be used with Diamond, Amethyst, Reidite or Dragon Bow\", \"Damage: 30\", \"Mobs Damage: 300\", \"Building Damage: 30\"];\r\n    LANG[INV.DIAMOND_BOW] = [\"Diamond Bow\", \"Like a Robin Wood who would keep the diamonds\", \"Requiers wood, stone, gold or diamond arrows to be used\"];\r\n    LANG[INV.GOLD_ARROW] = [\"Gold Arrow\", \"Must be used with a Bow, except a wooden and stone one\", \"Damage: 25\", \"Mobs Damage: 200\", \"Building Damage: 25\"];\r\n    LANG[INV.GOLD_BOW] = [\"Gold Bow\", \"When it's golden, it's better.\", \"Requiers wood, stone or gold arrows to be used\"];\r\n    LANG[INV.STONE_ARROW] = [\"Stone Arrow\", \"Must be used with a Bow, except a wooden one\", \"Damage: 20\", \"Mobs Damage: 100\", \"Building Damage: 20\"];\r\n    LANG[INV.STONE_BOW] = [\"Stone Bow\", \"Like Robin Wood\", \"Requiers wood and stone arrows to be used\"];\r\n    LANG[INV.WOOD_ARROW] = [\"Wood Arrow\", \"Must be used with any bow\", \"Damage: 15\", \"Mobs Damage: 20\", \"Building Damage: 15\"];\r\n    LANG[INV.WOOD_BOW] = [\"Wood Bow\", \"A little bow that does not do many damages.\", \"Requiers wood arrows to be used\"];\r\n    LANG[INV.EMERALD_MACHINE] = [\"Emerald Machine\", \"Allows to automatically generate score points.\", \"Be careful, you can only build one.\", \"Once placed your soul is connected to the machine, if the machine is destroyed, you will die.\", \"The machine can't be build in the sea\", \"You earn more points in the desert, than in the lava, than in winter, than in the forest.\"];\r\n    LANG[INV.FUR_BOAR] = [\"Boar fur\", \"Hakuna Matata, well, he can no longer say it\"];\r\n    LANG[INV.FUR_MAMMOTH] = [\"Mammoth fur\", \"Soft and warm. Perfect for a hat.\"];\r\n    LANG[INV.VULTURE_FEATHER] = [\"Vulture Feather\", \"From a deadly vulture\"];\r\n    LANG[INV.EMERALD] = [\"Emerald\", \"How many golden breads can you get from it?\"];\r\n    LANG[INV.SANDWORM_JUICE] = [\"Sand Worm Juice\", \"I don't want to know how you got this.\"];\r\n    LANG[INV.TURBAN1] = [\"Turban\", \"Useful to survive in the desert.\"];\r\n    LANG[INV.TURBAN2] = [\"Ninja outfit\", \"Essential to survive in the desert\"];\r\n    LANG[INV.PILOT_HELMET] = [\"Pilot Hat\", \"Take off and land with flying objects much faster.\"];\r\n    LANG[INV.PILOT_GLASSES] = [\"Pilot Glasses\"];\r\n    LANG[INV.MOUNT_BOAR] = [\"Tamed Boar\", \"Fast on lands and slow on water.\"];\r\n    LANG[INV.BABY_MAMMOTH] = [\"Tamed Baby Mammoth\", \"Fast on lands and slow on water.\"];\r\n    LANG[INV.CRAB_BOSS] = [\"Tamed Crab Boss\", \"Fast on lands and water, and slow on winter.\", \"Gives a +10 damage bonus of the Crab Spear\", \"when holding a Crab Helmet\"];\r\n    LANG[INV.BABY_DRAGON] = [\"Tamed Baby Dragon\", \"You can fly with it.\", \"Faster than a hawk\", \"When you are flying,\", \" you can only hit people who are flying too\"];\r\n    LANG[INV.BABY_LAVA] = [\"Tamed Baby Lava Dragon\", \"You can fly with it.\", \"Faster than a baby dragon\", \"When you are flying,\", \" you can only hit people who are flying too\"];\r\n    LANG[INV.HAWK] = [\"Tamed Hawk\", \"You can fly with it.\", \"When you are flying,\", \" you can only hit people who are flying too\"];\r\n    LANG[INV.SADDLE] = [\"Saddle\", \"Hit a boar with it to tame it.\"];\r\n    LANG[INV.WITCH] = [\"Witch Hat\", \"You're a wizard Starvy!\"];\r\n    LANG[INV.NIMBUS] = [\"Nimbus 2000\", \"That's not just a broomstick, Starvy, it's a Nimbus 2000!\", \"Only works with the witch hat.\"];\r\n    LANG[INV.WAND1] = [\"Wand of life\", \"Soon we must all choose between what is right and what is easy.\", \"You need the witch hat and firefly to cast spell\"];\r\n    LANG[INV.WAND2] = [\"Death Wand\", \"The wand of He-Who-Must-Not-Be-Named... Lapa...\", \"You need the witch hat and firefly to cast spell\"];\r\n    LANG[INV.FIREFLY] = [\"Firefly\", \"They make a cute little squeak.\", \"However, you must tear off his wings to make magical projectiles for use with magic wands.\"];\r\n    LANG[INV.PIRATE_HAT] = [\"Pirate hat\", \"You are faster with it in a boat\", \"Warm outside water and in winter\"];\r\n    LANG[INV.SLED] = [\"Sled\", \"You are faster with it in the snow\"];\r\n    LANG[INV.BOAT] = [\"Boat\", \"You are faster with it in the water\"];\r\n    LANG[INV.PLANE] = [\"Plane\", \"Fly in the forest, ocean and winter\", \"Can't fly in desert or lava biome\", \"When you are flying,\", \" you can only hit people who are flying too\"];\r\n    LANG[INV.HAMMER_REIDITE] = [\"Reidite Hammer\", \"Useful to destroy buildings\", \"Damage: 6\", \"Building Damage: 60\"];\r\n    LANG[INV.PENGUIN_FEATHER] = [\"Penguin Feather\", \"From a deadly cute penguin.\"];\r\n    LANG[INV.HAWK_FEATHER] = [\"Hawk Feather\", \"From a deadly hawk.\"];\r\n    LANG[INV.CACTUS] = [\"Cactus\", \"Food : 20\", \"Water : 10\"];\r\n    LANG[INV.ALOE_VERA] = [\"Aloe Vera\", \"Allows you to heal a little\", \"Heal : 30\"];\r\n    LANG[INV.ALOE_VERA_SEED] = [\"Aloe Vera Seed\", \"Grows into Aloe Vera\"];\r\n    LANG[INV.WATERMELON] = [\"Watermelon\", \"Like a melon, but with water\", \"Food : 15\", \"Water : 8\"];\r\n    LANG[INV.WATERMELON_SEED] = [\"Watermelon Seed\", \"Grows into Watermelon\", \"Birth: 4min\", \"Growth: 180s\", \"Need water: 3min 20s\", \"Durability: 400\", \"Lifetime: 8 days\"];\r\n    LANG[INV.REIDITE_DOOR] = [\"Reidite Door\", \"Noboby can destroy it. Except very reckless\", \"Damage: 5\", \"On-Hit Damage: 1\", \"Durability: 4000\"];\r\n    LANG[INV.REIDITE_WALL] = [\"Reidite Wall\", \"Better wall in StarveLand\", \"Durability: 4000\"];\r\n    LANG[INV.REIDITE_SPIKE] = [\"Reidite Spike\", \"It hurts\", \"Damage: 60\", \"On-Hit Damage: 5\", \"Durability: 3000\"];\r\n    LANG[INV.REIDITE_DOOR_SPIKE] = [\"Reidite Door Spike\", \"Painful and useful at the same time\", \"Damage: 35\", \"On-Hit Damage: 4\", \"Durability: 2000\"];\r\n    LANG[INV.PICK_REIDITE] = [\"Reidite Pickaxe\", \"Can also harvest reidite, better look!\", \"Damage: 6\", \"Building Damage: 1\"];\r\n    LANG[INV.WOOD_DOOR_SPIKE] = [\"Wood Door Spike\", \"Can be opened or closed by you or your friends\", \"Damage: 5\", \"On-Hit Damage: 1\", \"Durability: 100\"];\r\n    LANG[INV.STONE_DOOR_SPIKE] = [\"Stone Door Spike\", \"A stronger door is more serious\", \"Damage: 10\", \"On-Hit Damage: 2\", \"Durability: 200\"];\r\n    LANG[INV.GOLD_DOOR_SPIKE] = [\"Gold Door Spike\", 'Are you rebuilding the \"el dorado?\"', \"Damage: 15\", \"On-Hit Damage: 2\", \"Durability: 400\"];\r\n    LANG[INV.DIAMOND_DOOR_SPIKE] = [\"Diamond Door Spike\", \"For a shining house\", \"Damage: 25\", \"On-Hit Damage: 3\", \"Durability: 800\"];\r\n    LANG[INV.AMETHYST_DOOR_SPIKE] = [\"Amethyst Door Spike\", \"Is your house a locked safe?\", \"Damage: 30\", \"On-Hit Damage: 3\", \"Durability: 1600\"];\r\n    LANG[INV.CARROT] = [\"Carrot\", \"Eat it or sell it in exchange for Tomato Seed or Diamond\", \"Food : 20\"];\r\n    LANG[INV.TOMATO] = [\"Tomato\", \"Eat it or sell it in exchange for Thornbush Seed or Amethyst\", \"Food : 16\"];\r\n    LANG[INV.CARROT_SEED] = [\"Carrot Seed\", \"Grows into Carrot\", \"Birth: 4min\", \"Growth: 30s\", \"Need water: 1min 40s\", \"Durability: 700\", \"Lifetime: 8 days\"];\r\n    LANG[INV.TOMATO_SEED] = [\"Tomato Seed\", \"Grows into Tomato\", \"Birth: 4min\", \"Growth: 30s\", \"Need water: 1min 40s\", \"Durability: 700\", \"Lifetime: 8 days\"];\r\n    LANG[INV.PITCHFORK] = [\"Pitchfork\", \"Perfect for gathering\"];\r\n    LANG[INV.PITCHFORK2] = [\"Golden Pitchfork\", \"Essential for a real farmer.\"];\r\n    LANG[INV.PITCHFORK_PART] = [\"Pitchfork Part\", \"Shaped by the gods. You'll never be hungry again.\"];\r\n    LANG[INV.EGG0] = [\"Easter Egg\", \"Eat it or sell it in exchange for wood or stone\", \"Food : 12\"];\r\n    LANG[INV.EGG1] = [\"Easter Egg\", \"Eat it or sell it in exchange for gold\", \"Food : 25\"];\r\n    LANG[INV.EGG2] = [\"Easter Egg\", \"Eat it or sell it in exchange for diamond\", \"Food : 50\"];\r\n    LANG[INV.EGG3] = [\"Easter Egg\", \"Eat it or sell it in exchange for amethyst\", \"Food : 75\"];\r\n    LANG[INV.EGG4] = [\"Easter Egg\", \"Eat it or sell it in exchange for reidite\", \"Food : 100\"];\r\n    LANG[INV.LAVA_CUBE] = [\"Lava Cube\", \"You feel an immense power emanating from this cube\"];\r\n    LANG[INV.LAVA_ORB] = [\"Lava Orb\", \"You feel an immense power emanating from this orb\"];\r\n    LANG[INV.LAVA_SWORD] = [\"Lava Sword\", \"Don't be too mean with that.\", \"Damage: 33\", \"Building Damage: 11\"];\r\n    LANG[INV.LAVA_SPEAR] = [\"Lava Spear\", \"Doing good or doing evil\", \"Damage: 24\", \"Building Damage: 8\"];\r\n    LANG[INV.LAVA_HEART] = [\"Lava Heart\", \"You can feel a strange force.\", \"A huge power emanates from it.\", \"We must not find the secret.\"];\r\n    LANG[INV.LAVA_HELMET] = [\"Lava Helmet\", \"You will conquer the world\", \"Players Defense: 9\", \"Animals Defense: 30\"];\r\n    LANG[INV.REIDITE_SPEAR] = [\"Reidite Spear\", \"Really useful against Lava Monsters\", \"Damage: 22\", \"Building Damage: 7\"];\r\n    LANG[INV.REIDITE_SWORD] = [\"Reidite Sword\", \"Really useful against Lava Monsters\", \"Damage: 30\", \"Building Damage: 10\"];\r\n    LANG[INV.FLAME] = [\"Flame\", \"It's hot!\"];\r\n    LANG[INV.DIAMOND_PROTECTION] = [\"Diamond Protection\", \"You can survive longer in lava\", \"Cools down in lava biome\", \"Players Defense: 2, Animals Defense: 8\"];\r\n    LANG[INV.AMETHYST_PROTECTION] = [\"Amethyst Protection\", \"You can survive longer in lava\", \"Cools down in lava biome\", \"Players Defense: 5, Animals Defense: 13\"];\r\n    LANG[INV.REIDITE_PROTECTION] = [\"Reidite Protection\", \"You can survive longer in lava\", \"Cools down in lava biome\", \"Players Defense: 6, Animals Defense: 19\"];\r\n    LANG[INV.REIDITE] = [\"Reidite\", \"The ultimate ore\"];\r\n    LANG[INV.DRAGON_CUBE] = [\"Dragon Cube\", \"You feel a great power emanating from this cube\"];\r\n    DIE[22] = [\"This crab, though frightening in nature, pinched your fingertips so hard that you had a heart attack.\"];\r\n    DIE[23] = [\"The heat makes you suffocate, you can see your skin fall apart. You're charred. The grilled marshmallow has never been so tasty.\"];\r\n    DIE[24] = [\"Your vital organs melt inside, fortunately the toxic gases that escape from the lava make you faint and you do not feel the excruciating pain of death.\"];\r\n    DIE[25] = [\"The Will-O'-The-Wisp devoured you from the inside with its fiery flames.\"];\r\n    DIE[26] = [\"Oh my God, you died in indescribable pain. Even Lapa turned his head not to see this massacre.\"];\r\n    DIE[27] = ['You were trampled by that boar. From now on, your new nickname is \"the doormat\".'];\r\n    DIE[28] = ['With a force of 3300 newtons, the shock wave from the closing of the crab king\\'s claw made you explode your heart from the inside. In addition, the crab has eaten you by sharing your remains with its other small crabs. All dance in joy around your corpse by performing a singular dance called the \"crab rave\"'];\r\n    DIE[29] = [\"Even if it is a baby, under the heat of the flames of this cute dragon, you become a delicious dish.\"];\r\n    DIE[30] = [\"Under its cute fake looks, the lava baby dismembers you so quickly that you don't have your life flashes before your eyes.\"];\r\n    DIE[31] = [\"The hawk slashed both your eyes out. Terrified, you try to escape by crawling and screaming in pain. Unfortunately the hawk catches you and takes you to distant skies that we already know will never see you again.\"];\r\n    DIE[32] = [\"Believing you saw an oasis, you dived into this tree that seemed to you to be full of juicy fruit. Unfortunately, these shiny fruits were in fact horribly painful thorns. Now stuck to the cactus, exhausted by the desert, you have fainted forever.\"];\r\n    DIE[33] = [\"That vulture had been spying on you for a long time. He was waiting for a moment of fragility from you. Once cornered by this harassing desert, barely able to breathe, the vulture twisted on you and in a flash ripped out your last hope. At your last breath, you could still see the vulture plunge his head into what was left of your body to enjoy your entrails.\"];\r\n    DIE[34] = [\"Out of nowhere, the sand worm devours you in a terrifying howl. But why did Lapa bring such a despicable monster to life?\"];\r\n    DIE[35] = [\"Exhausted by so much heat. You would like to cry, but the sand quickly dries your tears. You suffocate, sand enters your mouth, the thumping sound of the sandstorm will be the last thing you will hear... Next time, use a turban or protect yourself under a roof\"];\r\n    DIE[36] = [\"You feel weak, your vision becomes blurry, you can feel the darkness invading your body. Your soul flies away and leaves behind a lifeless body. Your emerald machine has been destroyed.\"];\r\n    DIE[37] = ['You hear \"Avada Kedavra!\" before you turn to ashes.'];\r\n    DIE[38] = [\"You died crushed by an angry baby mammoth.\"];\r\n    DIE[39] = [\"You were skewered by a mammoth. In the violence of the animal's charge, your heart was left hanging on the tip of the tusk. You could still see your heart beating in the open air before losing your life crushed by the mammoth's feet for good. Notice that under the pressure of the crushing your eyes have been exorbed and that the penguins use the frozen eyes of the starvers as a balloon to distract themselves.\"];\r\n    DIE[40] = [\"The blizzard storm is so intense that your frostbite causes necrosis of all your limbs. Next time protect yourself with a roof or with warmer clothes.\"];\r\n    LANG[INV.CRAB_STICK] = [\"Crab sticks\", \"Oh, yeah? Is there crab in the crab sticks?\", \"Food: 20\"];\r\n    LANG[TEXT.TEMPEST_ON] = \"A sandstorm is approaching in a few seconds.\";\r\n    LANG[TEXT.TEMPEST_OFF] = \"The sandstorm will soon stop.\";\r\n    LANG[TEXT.BLIZZARD_ON] = \"A blizzard is approaching in a few seconds.\";\r\n    LANG[TEXT.BLIZZARD_OFF] = \"The blizzard will soon stop.\";\r\n    LANG[TEXT.BACK_TO_THE_GAME] = \" BACK TO THE GAME\";\r\n    LANG[TEXT.TWITTER] = \" Share on Twitter\";\r\n    LANG[TEXT.FACEBOOK] = \" Share on Facebook\";\r\n    LANG[TEXT.KIT_NEXT] = \"You can buy items on the shop in the next game with your points\";\r\n    LANG[TEXT.POINTS] = \"points\";\r\n    LANG[TEXT.SCORE] = \"Score\";\r\n    LANG[TEXT.KILL] = \"Kill\";\r\n    LANG[TEXT.DAYS_SURVIVED] = \"Days survived\";\r\n    LANG[TEXT.MODE_FREE] = \"Building method: Free. Press G to change\";\r\n    LANG[TEXT.MODE_GRID] = \"Building method: Grid. Press G to change\";\r\n    LANG[INV.CRAB_LOOT] = [\"Crab Claw\", \"Crab claws can also be eaten\", \"Food: 10\"];\r\n    LANG[INV.CRAB_SPEAR] = [\"Crab Spear\", \"Allow you to calm crabs, and heal them\", \"Gives a +10 damages bonus when holding it with\", \"a Crab Helmet on a Crab King\", \"Damage: 14\", \"Building Damage: 4\"];\r\n    LANG[INV.CROWN_CRAB] = [\"Crab Helmet\", \"You are the king of crabs!\", \"Crabs follow you\", \"They can't hit you and you can't hit them\", \"Players Defense: 5\", \"Animals Defense: 19\"];\r\n    LANG[INV.BED] = [\"Bed\", \"Relax in this confortable bed\", \"You are less cold, less thirsty, and less hungry\", \"You will be cured faster\", \"Durability: 400\"];\r\n    document.getElementById(\"typequest\").innerHTML = \"Chrono Quests\";\r\n    document.getElementById(\"timeremainingquest\").innerHTML = \"Time Remaining\";\r\n    document.getElementById(\"constraintquest\").innerHTML = \" Constraints\";\r\n    document.getElementById(\"claim_rewards\").innerHTML = \" Claim rewards\";\r\n    document.getElementById(\"rewardquest\").innerHTML = \" Reward\";\r\n    document.getElementById(\"killdragon_1\").innerHTML = \" Collect 1 dragon heart inside the cave\";\r\n    document.getElementById(\"amethyst_2\").innerHTML = \" Gather 1 amethyst\";\r\n    document.getElementById(\"survive20min_3\").innerHTML = \"Survive without losing life\";\r\n    document.getElementById(\"treasure_chest_4\").innerHTML = \" Open 5 treasure chests\";\r\n    document.getElementById(\"dont_hit_5\").innerHTML = \" Be peaceful\";\r\n    document.getElementById(\"bread_6\").innerHTML = \"100 bread in winter, alone, without come back\";\r\n    document.getElementById(\"winter_7\").innerHTML = \" After 1 day, survive in winter\";\r\n    for (var i = 0; i < 7; i++) document.getElementById(\"claim_reward_\" + i).innerHTML = \"CLAIM REWARD!\";\r\n    document.getElementById(\"quit_chronoquest\").innerHTML = \" QUIT\";\r\n    LANG[INV.HAND] = [\"Hand\"];\r\n    LANG[INV.GROUND] = [\"Dirt\", \"Dirty!\"];\r\n    LANG[INV.SAND] = [\"Sand\", \"I got it in my eyes!\"];\r\n    LANG[INV.WOOD] = [\"Wood\", \"You can't get enough of it!\"];\r\n    LANG[INV.STONE] = [\"Stone\", \"Also called a rock\"];\r\n    LANG[INV.GOLD] = [\"Gold\", \"Be generous, give it to others\"];\r\n    LANG[INV.DIAMOND] = [\"Diamond\", \"What will you make with it?\"];\r\n    LANG[INV.AMETHYST] = [\"Amethyst\", \"It's Mauve like Lapa\"];\r\n    LANG[INV.FLOUR] = [\"Flour\", \"Used in cooking\"];\r\n    LANG[INV.COOKIE] = [\"Cookie\", \"A sumptuous grandmother's cookie\", \"Food: 50\"];\r\n    LANG[INV.CAKE] = [\"A cake\", \"Dream cake for the gourmets\", \"Food: 100\"];\r\n    LANG[INV.MEAT] = [\"Raw meat\", \"You can cook it with a fire\", \"Causes food poisoning: 10\", \"Food: 15\"];\r\n    LANG[INV.COOKED_MEAT] = [\"Cooked meat\", \"A rare steak, please\", \"Food: 35\"];\r\n    LANG[INV.FOODFISH] = [\"Raw fish\", \"I think it's still alive\", \"Causes food poisoning: 10\", \"Food: 18\"];\r\n    LANG[INV.FOODFISH_COOKED] = [\"Cooked fish\", \"With lemon it's perfect\", \"Food: 35\"];\r\n    LANG[INV.BREAD] = [\"Bread\", \"An excellent French bread\", \"It's the currency used in the market\", \"Food: 15\"];\r\n    LANG[INV.SANDWICH] = [\"Sandwich\", \"Tastes like Krabby Patty\", \"Food: 100\"];\r\n    LANG[INV.CANDY] = [\"Candies\", \"Only for children!\", \"Food: 20\"];\r\n    LANG[INV.SUGAR_CAN] = [\"Sugar cane\", \"Taste it, it's delicious\", \"Food: 100\"];\r\n    LANG[INV.GARLAND] = [\"Garland\", \"Perfect decoration for roofs\"];\r\n    LANG[INV.SEED] = [\"Berries Seed\", \"Grows into Berry\", \"Birth: 2min\", \"Growth: 55s\", \"Need water: 3min 20s\", \"Durability: 700\", \"Lifetime: 8 days\"];\r\n    LANG[INV.PLANT] = [\"Berry\", \"Berry tasty!\", \"Food: 10\"];\r\n    LANG[INV.WHEAT_SEED] = [\"Wheat Seed\", \"Grows into Wheat\", \"Birth: 2min\", \"Growth: 16s\", \"Need water: 2min\", \"Durability: 700\", \"Lifetime: 8 days\"];\r\n    LANG[INV.WILD_WHEAT] = [\"Wild Wheat\", \"Turns into Flour when placed in Windmill\"];\r\n    LANG[INV.PUMPKIN_SEED] = [\"Pumpkin Seed\", \"Grows into pumpkin\", \"Birth: 2min 40s\", \"Growth: 2min\", \"Need water: 2min\", \"Durability: 700\", \"Lifetime: 8 days\"];\r\n    LANG[INV.PUMPKIN] = [\"Pumpkin\", \"It reminds me of Halloween\", \"Food: 30\"];\r\n    LANG[INV.GARLIC_SEED] = [\"Garlic Seed\", \"Very dangerous for vampires\", \"Damage: 20\", \"Birth: 4min\", \"Growth: 1min 10s\", \"Need water: 1min 40s\", \"Durability: 700\", \"Lifetime: 8 days\"];\r\n    LANG[INV.GARLIC] = [\"Garlic\", \"Reduces cold\", \"Food: 14\", \"Effect: 1\"];\r\n    LANG[INV.THORNBUSH_SEED] = [\"Thorn bush Seed\", \"Can damage your enemies\", \"Damage: 20\", \"Birth: 4min\", \"Growth: 15s\", \"Need water: 3min\", \"Durability: 1000\", \"Lifetime: 8 days\"];\r\n    LANG[INV.THORNBUSH] = [\"Thorn bush\", \"It stings!\"];\r\n    LANG[INV.PLOT] = [\"Plot\", \"Seriously, use it\", \"With this GMO fertilizer your plants\", \"will growth really faster and need less water\", \"Durability: 2000\"];\r\n    LANG[INV.ICE] = [\"Ice\", \"Useful for making cakes and water\"];\r\n    LANG[INV.SPANNER] = [\"Wrench\", \"To repair doors, walls and spike\", \"Damage: 2\"];\r\n    LANG[INV.FUR_WOLF] = [\"Wolf Fur\", \"Puppy? But where is Puppy?!\"];\r\n    LANG[INV.FUR] = [\"Rabbit Fur\", \"That rabbit was so cute...\"];\r\n    LANG[INV.SPECIAL_FUR] = [\"Pure Fur\", \"You're a bread factory\"];\r\n    LANG[INV.SPECIAL_FUR_2] = [\"Dark Fur\", \"You get ready to do something wrong\"];\r\n    LANG[INV.FUR_WINTER] = [\"Winter Fur\", \"These animals just wanted a hug...\"];\r\n    LANG[INV.SCALES] = [\"Scales\", \"It smells like fish!\"];\r\n    LANG[INV.KRAKEN_SKIN] = [\"Kraken Skin\", \"Weren't you too scared?\"];\r\n    LANG[INV.FIRE] = [\"Firecamp\", \"Warm you up!\", \"Durability: 150\", \"Lifetime: 2min\"];\r\n    LANG[INV.BIG_FIRE] = [\"Big Firecamp\", \"Warm you up more time!\", \"Durability: 400\", \"Lifetime: 6min\"];\r\n    LANG[INV.WORKBENCH] = [\"Workbench\", \"Very useful to craft all kinds of objects\"];\r\n    LANG[INV.CORD] = [\"Cord\", \"Used in crafting Hats and Bag\"];\r\n    LANG[INV.BLUE_CORD] = [\"Diamond Cord\", \"Used in crafting Special Hats\"];\r\n    LANG[INV.CHEST] = [\"Chest\", \"Allows you to store items\", \"Durability: 500\"];\r\n    LANG[INV.SWORD_WOOD] = [\"Wood Sword\", \"Does that work?\", \"Damage: 12\", \"Building Damage: 4\"];\r\n    LANG[INV.SWORD] = [\"Stone Sword\", \"Be nice to others\", \"Damage: 19\", \"Building Damage: 6\"];\r\n    LANG[INV.SWORD_GOLD] = [\"Gold Sword\", \"King of the forest\", \"Damage: 22\", \"Building Damage: 7\"];\r\n    LANG[INV.SWORD_DIAMOND] = [\"Diamond Sword\", \"You can feel the power\", \"Damage: 24\", \"Building Damage: 8\"];\r\n    LANG[INV.PIRATE_SWORD] = [\"Pirate Sword\", \"Ayyyyy!\", \"Better range than a normal sword\", \"Damage: 24\", \"Building Damage: 8\"];\r\n    LANG[INV.SWORD_AMETHYST] = [\"Amethyst Sword\", \"Mauve is the most beautiful color of the world\", \"Damage: 27\", \"Building Damage: 9\"];\r\n    LANG[INV.DRAGON_SWORD] = [\"Dragon Sword\", \"No mercy!\", \"Damage: 30\", \"Building Damage: 10\"];\r\n    LANG[INV.DRAGON_SPEAR] = [\"Dragon Spear\", \"Kill them all!\", \"Damage: 22\", \"Building Damage: 7\"];\r\n    LANG[INV.PICK_WOOD] = [\"Wood Pickaxe\", \"Can harvest only stone and wood\", \"Damage: 1\"];\r\n    LANG[INV.PICK] = [\"Stone Pickaxe\", \"Can harvest wood, stone and gold\", \"Damage: 2\"];\r\n    LANG[INV.PICK_GOLD] = [\"Gold Pickaxe\", \"Can also harvest diamond\", \"Damage: 3\", \"Building Damage: 1\"];\r\n    LANG[INV.PICK_DIAMOND] = [\"Diamond Pickaxe\", \"Can also harvest amethyst\", \"Damage: 4\", \"Building Damage: 1\"];\r\n    LANG[INV.PICK_AMETHYST] = [\"Amethyst Pickaxe\", \"Can also harvest reidite, looks fancy!\", \"Damage: 5\", \"Building Damage: 1\"];\r\n    LANG[INV.HAMMER] = [\"Stone Hammer\", \"Useful to destroy buildings\", \"Doesn't work well on diamond or amethyst\", \"Damage: 2\", \"Building Damage: 20\"];\r\n    LANG[INV.HAMMER_GOLD] = [\"Gold Hammer\", \"Useful to destroy buildings\", \"Doesn't work well on amethyst\", \"Damage: 3\", \"Building Damage: 30\"];\r\n    LANG[INV.HAMMER_DIAMOND] = [\"Diamond Hammer\", \"Useful to destroy buildings\", \"Damage: 4\", \"Building Damage: 40\"];\r\n    LANG[INV.HAMMER_AMETHYST] = [\"Amethyst Hammer\", \"Useful to destroy buildings\", \"Damage: 5\", \"Building Damage: 50\"];\r\n    LANG[INV.SUPER_HAMMER] = [\"Super Hammer\", \"Have you planned to destroy the world?\", \"Damage: 12\", \"Building Damage: 70\"];\r\n    LANG[INV.WOOD_SPEAR] = [\"Wood Spear\", \"Like a wooden stick, but it stings.\", \"Damage: 10\", \"Building Damage: 3\"];\r\n    LANG[INV.SPEAR] = [\"Stone Spear\", \"The beginning of evolution!\", \"Damage: 14\", \"Building Damage: 4\"];\r\n    LANG[INV.GOLD_SPEAR] = [\"Gold Spear\", \"Careful, it stings!\", \"Damage: 15\", \"Buildings Damage: 5\"];\r\n    LANG[INV.DIAMOND_SPEAR] = [\"Diamond Spear\", \"You're ready to kill a dragon\", \"Damage: 17\", \"Buildings Damage: 5\"];\r\n    LANG[INV.AMETHYST_SPEAR] = [\"Amethyst Spear\", \"Dragons no longer frighten you\", \"Damage: 18\", \"Buildings Damage: 6\"];\r\n    LANG[INV.SHOVEL] = [\"Stone Shovel\", \"Dig the ground to gather dirt, ice, and sand\", \"You can also gather minerals\", \"Damage: 2\"];\r\n    LANG[INV.SHOVEL_GOLD] = [\"Gold Shovel\", \"Dig the ground to gather dirt, ice, and sand\", \"You can also gather minerals\", \"Damage: 3\", \"Buildings Damage: 1\"];\r\n    LANG[INV.SHOVEL_DIAMOND] = [\"Diamond Shovel\", \"Dig the ground to gather dirt, ice, and sand\", \"You can also gather minerals\", \"Damage: 4\", \"Buildings Damage: 1\"];\r\n    LANG[INV.SHOVEL_AMETHYST] = [\"Amethyst Shovel\", \"Dig the ground to gather dirt, ice, and sand\", \"You can also gather minerals\", \"Damage: 5\", \"Buildings Damage: 1\"];\r\n    LANG[INV.WOOD_HELMET] = [\"Wood Helmet\", \"Better than nothing\", \"Players Defense: 1\", \"Animals Defense: 4\"];\r\n    LANG[INV.STONE_HELMET] = [\"Stone Helmet\", \"You're ready for battle!\", \"Players Defense: 2\", \"Animals Defense: 8\"];\r\n    LANG[INV.GOLD_HELMET] = [\"Gold Helmet\", \"AKA the helmet of the savages\", \"Players Defense: 4\", \"Animals Defense: 13\"];\r\n    LANG[INV.DIAMOND_HELMET] = [\"Diamond Helmet\", \"Don't brag too much\", \"Players Defense: 5\", \"Animals Defense: 19\"];\r\n    LANG[INV.AMETHYST_HELMET] = [\"Amethyst Helmet\", \"You're no longer afraid of anything\", \"Players Defense: 6\", \"Animals Defense: 23\"];\r\n    LANG[INV.REIDITE_HELMET] = [\"Reidite Helmet\", \"You no longer feel pain\", \"Players Defense: 7\", \"Animals Defense: 25\"];\r\n    LANG[INV.DRAGON_HELMET] = [\"Dragon Helmet\", \"You will conquer the world\", \"Players Defense: 8\", \"Animals Defense: 27\"];\r\n    LANG[INV.EXPLORER_HAT] = [\"Explorer hat\", \"Animals won't pay attention to you\", \"but don't make noises!\", \"Warm outside water and in winter\", \"You also calm down aggressive monsters twice as fast\"];\r\n    LANG[INV.CHRISTMAS_HAT] = [\"Christmas Hat\", \"Oh, oh, oh, Merry Christmas\", \"Warm outside water and in winter\"];\r\n    LANG[INV.ELF_HAT] = [\"Elf Hat\", \"Don't let yourself be exploited, you little snow elf!\", \"Warm outside water and in winter\"];\r\n    LANG[INV.HOOD] = [\"Hood\", \"You're a rogue\", \"You can steal someone only if\", \"1) It's night\", \"2) You're not wearing anything\", \"3) If you haven't been touched for eight seconds\", \"4) You are not close a fire\", \"5) Your target doesn't wear a peasant outfit\", \"Warm outside water and in winter\"];\r\n    LANG[INV.EARMUFFS] = [\"Earmuffs\", \"Some kind of little chapka.\", \"Warm outside water and in winter\"];\r\n    LANG[INV.COAT] = [\"Chapka\", \"Also called a coat.\", \"Warmer outside water and in winter\"];\r\n    LANG[INV.CAP_SCARF] = [\"Winter Scarf and Cap\", \"Very comfortable\", \"Very Warm\"];\r\n    LANG[INV.FUR_HAT] = [\"Mammoth fur hat\", \"The best blizzard protection\", \"Very Warm\"];\r\n    LANG[INV.PEASANT] = [\"Peasant\", \"Your plants grow faster\", \"Warm outside water and in winter\"];\r\n    LANG[INV.WINTER_HOOD] = [\"Winter Hood\", \"You can steal someone only if\", \"- It's night\", \"- You're not wearing anything\", \"- If you haven't been touched for four seconds\", \"- You are not close a fire\", \"- Your target doesn't wear a winter peasant outfit\", \"Warm outside water and in winter\"];\r\n    LANG[INV.WINTER_PEASANT] = [\"Winter Peasant\", \"Your plants grow faster\", \"Warm outside water and in winter\"];\r\n    LANG[INV.DIVING_MASK] = [\"Diving Mask\", \"You are fast in the water\", \"Warm in water\", \"Players Defense: 2, Animals Defense: 8\"];\r\n    LANG[INV.SUPER_DIVING_SUIT] = [\"Super Diving Mask\", \"You are very fast in the water\", \"Warm in water\", \"Players Defense: 4, Animals Defense: 16\"];\r\n    LANG[INV.DRAGON_ORB] = [\"Dragon Orb\", \"You feel a great power emanating from this orb\"];\r\n    LANG[INV.DRAGON_HEART] = [\"Dragon Heart\", \"Turns you into a Ghost on Death!\", \"You are a ghost for 60 seconds\", \"Find a resurrection stone\"];\r\n    LANG[INV.GEMME_GREEN] = [\"Green Gemstone\", \"You didn't cheat, promise?\"];\r\n    LANG[INV.GEMME_ORANGE] = [\"Orange Gemstone\", \"Only a real pirate can find it!\"];\r\n    LANG[INV.GEMME_BLUE] = [\"Blue Gemstone\", \"For too kind people\"];\r\n    LANG[INV.CROWN_GREEN] = [\"Green Crown\", \"You heal yourself very quickly\", \"Heal over time: 40\", \"Players Defense: 4, Animals Defense: 16\"];\r\n    LANG[INV.CROWN_ORANGE] = [\"Orange Crown\", \"You suddenly feel very lucky\", \"Players Defense: 4, Animals Defense: 16\"];\r\n    LANG[INV.CROWN_BLUE] = [\"Blue Crown\", \"Once you're dead, you'll become a ghost\", \"Though you will lose your weapon\", \"Players Defense: 4, Animals Defense: 16\"];\r\n    LANG[INV.BUCKET_FULL] = [\"Bucket\", \"Useful to fill a well\", \"One bucket is equivalent to twelve bottles\"];\r\n    LANG[INV.BUCKET_EMPTY] = [\"Empty Bucket\", \"You need to fill this bucket near a water source\"];\r\n    LANG[INV.BOTTLE_FULL] = [\"Bottle\", \"Allows you to drink water anywhere\", \"Water: 50\"];\r\n    LANG[INV.BOTTLE_EMPTY] = [\"Empty Bottle\", \"You can fill this bottle near a water source\"];\r\n    LANG[INV.WATERING_CAN] = [\"Empty Watering Can\", \"You must fill it with a water source to use it\"];\r\n    LANG[INV.WATERING_CAN_FULL] = [\"Watering Can\", \"Allows watering of plants\", \"Damage: 1\"];\r\n    LANG[INV.BAG] = [\"Bag\", \"More space for your items!\"];\r\n    LANG[INV.PAPER] = [\"Paper\", \"Used in book-crafting\"];\r\n    LANG[INV.BOOK] = [\"Book\", \"Allows to considerably reduce the time of crafting\", \"Must be wearing to work\", \"Damage: 1\"];\r\n    LANG[INV.BANDAGE] = [\"Bandage\", \"Recover more quickly your life\", \"Heal over time: 30\", \"Effect: 5\"];\r\n    LANG[INV.LOCK] = [\"Lock\", \"Allow you to lock your chest\"];\r\n    LANG[INV.LOCKPICK] = [\"Lock-pick\", \"Allows you to unlock one chest\"];\r\n    LANG[INV.TOTEM] = [\"Totem\", \"Allow you to create a team\", \"Share doors and chests\", \"Harmful building won't hurt your friend\"];\r\n    LANG[INV.BRIDGE] = [\"Bridge\", \"Very useful on water\", \"It allows you to drink without drowning\", \"Walk faster in water\"];\r\n    LANG[INV.SIGN] = [\"Sign\", \"Leave a message to others\", \"Durability: 200\"];\r\n    LANG[INV.ROOF] = [\"Roof\", \"Hides you a little and warms you!\", \"Also protects you against sand storm\"];\r\n    LANG[INV.WELL] = [\"Well\", \"Allows bottle filling\", \"Durability: 1000\"];\r\n    LANG[INV.WALL] = [\"Wood Wall\", \"It's just a wall\", \"Durability: 1000\"];\r\n    LANG[INV.STONE_WALL] = [\"Stone Wall\", \"It's a little more serious.\", \"Durability: 1500\"];\r\n    LANG[INV.GOLD_WALL] = [\"Gold Wall\", \"Gold on your walls? It's kind of flashy.\", \"Durability: 2000\"];\r\n    LANG[INV.DIAMOND_WALL] = [\"Diamond Wall\", \"So shiny, watch your eyes\", \"Durability: 2500\"];\r\n    LANG[INV.AMETHYST_WALL] = [\"Amethyst Wall\", \"You must be very scared to go out!\", \"Durability: 3500\"];\r\n    LANG[INV.SPIKE] = [\"Wood Spike\", \"Can damage your enemies\", \"Damage: 10, On-Hit Damage: 2\", \"Durability: 150\"];\r\n    LANG[INV.STONE_SPIKE] = [\"Stone Spike\", \"I wouldn't want to be your enemy.\", \"Damage: 20\", \"On-Hit Damage: 3\", \"Durability: 300\"];\r\n    LANG[INV.GOLD_SPIKE] = [\"Gold Spike\", \"You're so cruel.\", \"Damage: 30\", \"On-Hit Damage: 3\", \"Durability: 600\"];\r\n    LANG[INV.DIAMOND_SPIKE] = [\"Diamond Spike\", \"You don't like to have company.\", \"Damage: 40\", \"On-Hit Damage: 4\", \"Durability: 1200\"];\r\n    LANG[INV.AMETHYST_SPIKE] = [\"Amethyst Spike\", \"What the hell did your neighbors do to you?\", \"Damage: 50\", \"On-Hit Damage: 4\", \"Durability: 2400\"];\r\n    LANG[INV.WOOD_DOOR] = [\"Wood Door\", \"Can be opened or closed by you or your friends\", \"Durability: 1000\"];\r\n    LANG[INV.STONE_DOOR] = [\"Stone Door\", \"A stronger door is more serious\", \"Durability: 1500\"];\r\n    LANG[INV.GOLD_DOOR] = [\"Gold Door\", 'Are you rebuilding the \"el dorado?\"', \"Durability: 2000\"];\r\n    LANG[INV.DIAMOND_DOOR] = [\"Diamond Door\", \"For a shining house\", \"Durability: 2500\"];\r\n    LANG[INV.AMETHYST_DOOR] = [\"Amethyst Door\", \"Is your house a locked safe?\", \"Durability: 3500\"];\r\n    LANG[INV.FURNACE] = [\"Furnace\", \"Warms you up\", \"It consumes wood all 5 seconds\", \"Durability: 1000\"];\r\n    LANG[INV.WINDMILL] = [\"Windmill\", \"Can produce flour from wheat\", \"It takes 5 seconds to make Flour\", \"Returns points when working\", \"Durability: 2000\"];\r\n    LANG[INV.BREAD_OVEN] = [\"Bread Oven\", \"Allows bread to be made from flour\", \"It takes 10 seconds to make bread\", \"Returns points when working\", \"Durability: 2000\"];\r\n    LANG[INV.RESURRECTION] = [\"Resurrection stone\", \"It's magic\", \"Resurrect you if you're a ghost\", \"You will lose your weapon\", \"Durability: 200\"];\r\n    LANG[TEXT.YOU_CANNOT_JOIN] = \"You cannot join this server\";\r\n    LANG[TEXT.KICKED] = \"Kicked: \";\r\n    LANG[TEXT.KEY_ALREADY] = \"Your key is already used by someone else\";\r\n    LANG[TEXT.KEY_WRONG] = \"Your key is wrong\";\r\n    LANG[TEXT.OLD_VERSION] = \"You have an old version, you need to clear your cache\";\r\n    LANG[TEXT.NEW_VERSION] = \"Your client version is too recent for this server. The server is being updated\";\r\n    LANG[TEXT.WRONG_PASSWORD] = \"Wrong password! To enter a password: https://starve.io/?password=...\";\r\n    LANG[TEXT.NO_MORE_RESOURCES] = \"There are no more new resources\";\r\n    LANG[TEXT.SURVIVED_1DAY] = \"You survived 1 day\";\r\n    LANG[TEXT.SURVIVED] = \"You survived \";\r\n    LANG[TEXT.DAYS] = \" days\";\r\n    LANG[TEXT.DEAD_SAD] = \"You are dead ;-;\";\r\n    LANG[TEXT.SPAM_ME] = \"Server cannot find spawn location! Spam the play button!\";\r\n    LANG[TEXT.SPAM_ME2] = \"Server is full! Spam the play button!\";\r\n    LANG[TEXT.EMPTY] = \"Resource is empty\";\r\n    LANG[TEXT.INV_FULL] = \"Inventory is full (right-click to empty items)\";\r\n    LANG[TEXT.DEAD] = \" is dead\";\r\n    LANG[TEXT.WRONG_TOOL] = \"This is not the right tool\";\r\n    LANG[TEXT.JOIN_TEAM] = \"You joined a team\";\r\n    LANG[TEXT.YOU_DEAD] = \"You are dead\";\r\n    LANG[TEXT.JOINED_TEAM] = \" joined the team\";\r\n    LANG[TEXT.TEAM_DESTROYED] = \"Your team was destroyed\";\r\n    LANG[TEXT.LEFT_TEAM] = \"You left the team\";\r\n    LANG[TEXT.LEFT_TEAM2] = \" left the team\";\r\n    LANG[TEXT.TOKEN] = \"Someone stole your token :>\";\r\n    LANG[TEXT.CHOOSE] = \"Choose a server\";\r\n    LANG[TEXT.PLAYERS] = \"players\";\r\n    LANG[TEXT.TOTAL_PLAYERS] = \"total players\";\r\n    LANG[TEXT.TOTAL_MODE] = \"players on this mode\";\r\n    LANG[TEXT.COMMING_SOON] = \"Coming soon...\";\r\n    document.getElementById(\"nickname_input\").placeholder = \"Nickname\";\r\n    DIE[0] = [\"You were killed for no reason\"];\r\n    DIE[1] = [\"You starved to death, as the name of the game implies\"];\r\n    DIE[2] = [\"You froze to death. So sad\", \"You got hypothermia. Next time, try sitting by a fire instead.\"];\r\n    DIE[3] = [\"A player killed you whilst telling you to 'git gud.'\", \"You got murdered by a player. Don't worry, that player will die too, eventually.\"];\r\n    DIE[4] = [\"You stayed too close to the fire and burnt to death. Bad idea.\", \"You died to a fire. Fires hurt you. Go write a story about it.\"];\r\n    DIE[5] = [\"Your body will become a nest for spider eggs\", \"A spider killed you. At least it wasn't a rabbit.\"];\r\n    DIE[6] = [\"The wolf won't starve anymore after eating you\", \"They aren't dogs. Wolves don't like being pet.\"];\r\n    DIE[7] = [\"The fox was too quick for you\", \"The fox turned you into a box. Since when do animals have magic powers?\"];\r\n    DIE[8] = [\"The bear only wanted a hug.\", \"The bear was too much to bare. I'm not sorry.\"];\r\n    DIE[9] = [\"You were burnt to a crisp by a dragon. So sad.\", \"You got flattened by a dragon. Getting squished is a horrible way to die.\"];\r\n    DIE[10] = [\"You jumped into a spike wall. Not a good idea...\", \"You got killed by a spike wall. Most people are sensible enough not to touch pointy things.\"];\r\n    DIE[11] = [\"Even the ghost can die.\", \"You failed to be resurrected. This is a game, so you go to life after you die, so...\"];\r\n    DIE[12] = [\"A bacterium from your raw food killed you. This game is definitely too hard.\", \"You killed the raw food. It killed you too.\"];\r\n    DIE[13] = [\"You died of thirst. Better drink your own piss.\"];\r\n    DIE[14] = [\"Did you know starver's mouths are always below water when swimming? Now you know.\"];\r\n    DIE[15] = [\"Do not worry, the piranha finds you tasty.\", \"Fun fact: Pirahnas eat people. Including you.\"];\r\n    DIE[16] = [\"LapaMauve does not plan that you can kill the kraken\", \"A kraken krak-ed your skull.\"];\r\n    DIE[17] = [\"Your skin's falling apart, the sun killed you.\"];\r\n    DIE[18] = [\"Garlic stored in your pockets boiled your brain.\"];\r\n    DIE[19] = [\"As a vampire, don't stand near the garlic cloves.\"];\r\n    DIE[20] = [\"You ate garlic as a vampire, what did you expect?\"];\r\n    DIE[21] = [\"Your body wraps itself in thornbushes. As you try to escape, your skin comes off and your heart stops beating.\"];\r\n    ZOMBIE_GRUMBLE = \"Uuunnnggg\";\r\n    ZOMBIE_GRUMBLES = [\"Uuunnnggg... I'm starving\", \"Need your brain Uuunnnggg...\", \"Fresh meat here... Uuunnnggg\", \"Uuunnnggg... You are tasty\", \"Uuunnnggg...\", \"Eat... uuunnnggg...\", \"I can smell blood... Uuunnnggg\"];\r\n};\r\nvar set_russian = function () {\r\n    LANG[INV.DRAGON_CUBE] = [\"You feel a great power emanating from this orb\"];\r\n    DIE[22] = [\"This crab, though frightening in nature, pinched your fingertips so hard that you had a heart attack.\"];\r\n    LANG[INV.CRAB_STICK] = [\"Crab sticks\", \"Oh, yeah? Is there crab in the crab sticks?\", \"Food: 20\"];\r\n    LANG[TEXT.BACK_TO_THE_GAME] = \" BACK TO THE GAME\";\r\n    LANG[TEXT.TWITTER] = \" Share on Twitter\";\r\n    LANG[TEXT.FACEBOOK] = \" Share on Facebook\";\r\n    LANG[TEXT.KIT_NEXT] = \"You can buy items on the shop in the next game with your points\";\r\n    LANG[TEXT.POINTS] = \"points\";\r\n    LANG[TEXT.SCORE] = \"Score\";\r\n    LANG[TEXT.KILL] = \"Kill\";\r\n    LANG[TEXT.DAYS_SURVIVED] = \"Days survived\";\r\n    LANG[TEXT.MODE_FREE] = \"Building method: Free. Press G to change\";\r\n    LANG[TEXT.MODE_GRID] = \"Building method: Grid. Press G to change\";\r\n    LANG[INV.CRAB_LOOT] = [\"Crab Claw\", \"Crab claws can also be eaten\", \"Food: 10\"];\r\n    LANG[INV.CRAB_SPEAR] = [\"Crab Spear\", \"Allow you to calm crabs, and heal them\", \"Damage: 14\", \"Building Damage: 4\"];\r\n    LANG[INV.CROWN_CRAB] = [\"Crab Helmet\", \"You are the king of crabs!\", \"Crabs follow you\", \"They can't hit you and you can't hit them\", \"Players Defense: 4\", \"Animals Defense: 13\"];\r\n    LANG[INV.BED] = [\"Bed\", \"Relax in this confortable bed\", \"You are less cold, less thirsty, and less hungry\", \"You will be cured faster\", \"Durability: 400\"];\r\n    document.getElementById(\"typequest\").innerHTML = \"Chrono Quests\";\r\n    document.getElementById(\"timeremainingquest\").innerHTML = \"Time Remaining\";\r\n    document.getElementById(\"constraintquest\").innerHTML = \" Constraints\";\r\n    document.getElementById(\"claim_rewards\").innerHTML = \" Claim rewards\";\r\n    document.getElementById(\"rewardquest\").innerHTML = \" Reward\";\r\n    document.getElementById(\"killdragon_1\").innerHTML = \" Collect 1 dragon heart\";\r\n    document.getElementById(\"amethyst_2\").innerHTML = \" Gather 1 amethyst\";\r\n    document.getElementById(\"survive20min_3\").innerHTML = \"Survive without losing life\";\r\n    document.getElementById(\"treasure_chest_4\").innerHTML = \" Open 5 treasure chests\";\r\n    document.getElementById(\"dont_hit_5\").innerHTML = \" Be peaceful\";\r\n    document.getElementById(\"bread_6\").innerHTML = \" Collect 100 bread in deep winter\";\r\n    document.getElementById(\"winter_7\").innerHTML = \" After 1 day, survive in winter\";\r\n    for (var i = 0; i < 7; i++) document.getElementById(\"claim_reward_\" + i).innerHTML = \"CLAIM REWARD!\";\r\n    document.getElementById(\"quit_chronoquest\").innerHTML = \" QUIT\";\r\n    LANG[INV.HAND] = [\"Рука\"];\r\n    LANG[INV.GROUND] = [\"Земля\", \"Грязно!\"];\r\n    LANG[INV.SAND] = [\"Песок\", \"Он в моих глазах!\"];\r\n    LANG[INV.WOOD] = [\"Дерево\", \"Постоянно нужно больше!\"];\r\n    LANG[INV.STONE] = [\"Камень\", \"Твердый\"];\r\n    LANG[INV.GOLD] = [\"Золото\", \"Будьте щедры, давайте его другим\"];\r\n    LANG[INV.DIAMOND] = [\"Алмаз\", \"Что вы создадите с помощью него?\"];\r\n    LANG[INV.AMETHYST] = [\"Аметист\", \"Он сиреневый, как Lapa\"];\r\n    LANG[INV.FLOUR] = [\"Мука\", \"Используется в готовке\"];\r\n    LANG[INV.COOKIE] = [\"Печенье\", \"Превосходное бабушкино печенье\", \"Еда: 50\"];\r\n    LANG[INV.CAKE] = [\"Торт\", \"Торт мечты для гурманов\", \"Еда: 100\"];\r\n    LANG[INV.MEAT] = [\"Сырое Мясо\", \"Ты можешь пожарить его с помощью огня\", \"Вызывает отравление: 10\", \"Еда: 15\"];\r\n    LANG[INV.COOKED_MEAT] = [\"Жареное Мясо\", \"Превосходный стейк, пожалуйста\", \"Еда: 35\"];\r\n    LANG[INV.FOODFISH] = [\"Сырая Рыба\", \"Я думаю она всё ещё жива\", \"Вызывает отравление: 10\", \"Еда: 18\"];\r\n    LANG[INV.FOODFISH_COOKED] = [\"Жареная рыба\", \"С лимоном она прекрасна\", \"Еда: 35\"];\r\n    LANG[INV.BREAD] = [\"Хлеб\", \"Прекрасный французский хлеб\", \"Это валюта, используемая на рынке\", \"Еда: 15\"];\r\n    LANG[INV.SANDWICH] = [\"Бутерброд\", \"На вкус как Крабсбургер\", \"Еда: 100\"];\r\n    LANG[INV.CANDY] = [\"Конфеты\", \"Только для детей!\", \"Еда: 20\"];\r\n    LANG[INV.SUGAR_CAN] = [\"Сахарная Трость\", \"Попробуйте это, это вкусно\", \"Еда: 100\"];\r\n    LANG[INV.GARLAND] = [\"Гирлянда\", \"Прекрасная декорация для крыши\"];\r\n    LANG[INV.SEED] = [\"Семя Ягоды\", \"Вырастает в ягоды\", \"Рождение: 2мин\", \"Рост: 55сек\", \"Нужна вода: 3мин 20сек\", \"Прочность: 700\", \"Продолжительность: 8 дней\"];\r\n    LANG[INV.PLANT] = [\"Ягода\", \"Ягода вкусная!\", \"Еда: 10\"];\r\n    LANG[INV.WHEAT_SEED] = [\"Пшеничное Семя\", \"Вырастает в пшеницу\", \"Рождение: 2мин\", \"Рост: 16сек\", \"Нужна вода: 2мин\", \"Прочность: 700\", \"Продолжительность: 8 дней\"];\r\n    LANG[INV.WILD_WHEAT] = [\"Дикая Пшеница\", \"Перемалывается в муку, когда помещается в мельницу\"];\r\n    LANG[INV.PUMPKIN_SEED] = [\"Семена Тыквы\", \"Вырастает в тыкву\", \"Рождение: 2мин 40сек\", \"Рост: 2мин\", \"Нужна вода: 2мин\", \"Прочность: 700\", \"Продолжительность: 8 дней\"];\r\n    LANG[INV.PUMPKIN] = [\"Тыква\", \"Это напоминает мне Хеллоуин\", \"Еда: 30\"];\r\n    LANG[INV.GARLIC_SEED] = [\"Семена Чеснока\", \"Очень опасно для вампиров\", \"Урон: 20\", \"Рождение: 4мин\", \"Рост: 4 мин\", \"Нужна вода: 1мин 40сек\", \"Прочность: 700\", \"Продолжительность: 8 дней\"];\r\n    LANG[INV.GARLIC] = [\"Чеснок\", \"Лечит и снижает получаемый холод\", \"Еда: 14\", \"Лечит: 30\", \"Эффект: 1\"];\r\n    LANG[INV.THORNBUSH_SEED] = [\"Семена Колючего Куста\", \"Может нанести урон врагам\", \"Урон: 20\", \"Рождение: 4мин\", \"Рост: 15сек\", \"Нужна вода: 3мин\", \"Прочность: 1000\", \"Продолжительность: 8 дней\"];\r\n    LANG[INV.THORNBUSH] = [\"Колючий Куст\", \"Это больно!\"];\r\n    LANG[INV.PLOT] = [\"Грядка\", \"Серьезно, используйте это.\", \"С этим ГМО удобрением ваши растения\", \"будут расти быстрее и потребуют меньше воды\", \"Прочность: 2000\"];\r\n    LANG[INV.ICE] = [\"Лёд\", \"Используется для изготовления тортов и воды\"];\r\n    LANG[INV.SPANNER] = [\"Гаечный Ключ\", \"Для починки дверей, стен, колючек\", \"Урон: 2\"];\r\n    LANG[INV.FUR_WOLF] = [\"Шкура Волка\", \"Щенок? Но где же Щенок?!\"];\r\n    LANG[INV.FUR] = [\"Шкура Зайца\", \"Этот кролик был таким милым...\"];\r\n    LANG[INV.SPECIAL_FUR] = [\"Чистая Шкура\", \"Вы - фабрика хлеба\"];\r\n    LANG[INV.SPECIAL_FUR_2] = [\"Чёрная Шкура\", \"Вы готовы делать зло.\"];\r\n    LANG[INV.FUR_WINTER] = [\"Зимняя Шкура\", \"Эти животные просто хотели обнять тебя...\"];\r\n    LANG[INV.SCALES] = [\"Чешуя\", \"Она пахнет рыбой!\"];\r\n    LANG[INV.KRAKEN_SKIN] = [\"Шкура Кракена\", \"Вы не испугались?\"];\r\n    LANG[INV.FIRE] = [\"Костёр\", \"Согрейтесь!\", \"Прочность: 150\", \"Продолжительность: 2мин\"];\r\n    LANG[INV.BIG_FIRE] = [\"Большой Костёр\", \"Согрейтесь больше!\", \"Прочность: 400\", \"Продолжительность: 6мин\"];\r\n    LANG[INV.WORKBENCH] = [\"Верстак\", \"Необходим для создания многих предметов\"];\r\n    LANG[INV.CORD] = [\"Нить\", \"Используется в изготовлении Шапок и Рюкзака\"];\r\n    LANG[INV.BLUE_CORD] = [\"Алмазная Нить\", \"Используется в изготовлении специальных шапок\"];\r\n    LANG[INV.CHEST] = [\"Сундук\", \"Позволяет хранить предметы\", \"Прочность: 500\"];\r\n    LANG[INV.SWORD_WOOD] = [\"Деревянный Меч\", \"Это работает?\", \"Урон: 12\", \"Урон по строениям: 4\"];\r\n    LANG[INV.SWORD] = [\"Каменный Меч\", \"Будьте добры к другим\", \"Урон: 19\", \"Урон по строениям: 6\"];\r\n    LANG[INV.SWORD_GOLD] = [\"Золотой Меч\", \"Король леса\", \"Урон: 22\", \"Урон по строениям: 7\"];\r\n    LANG[INV.SWORD_DIAMOND] = [\"Алмазный Меч\", \"Ты можешь почувствовать силу\", \"Урон: 24\", \"Урон по строениям: 8\"];\r\n    LANG[INV.PIRATE_SWORD] = [\"Пиратский Меч\", \"Aррррр!\", \"Дальность атаки больше чем у нормального меча\", \"Урон: 24\", \"Урон по строениям: 8\"];\r\n    LANG[INV.SWORD_AMETHYST] = [\"Аметистовый Меч\", \"Сиреневый - самый красивый цвет в мире\", \"Урон: 27\", \"Урон по строениям: 9\"];\r\n    LANG[INV.DRAGON_SWORD] = [\"Меч Дракона\", \"Без пощады!\", \"Урон: 30\", \"Урон по строениям: 10\"];\r\n    LANG[INV.DRAGON_SPEAR] = [\"Копьё Дракона\", \"Убивай всех!\", \"Урон: 22\", \"Урон по строениям: 6\"];\r\n    LANG[INV.PICK_WOOD] = [\"Деревянная Кирка\", \"Может добывать только дерево и камень\", \"Урон: 1\"];\r\n    LANG[INV.PICK] = [\"Каменная Кирка\", \"Может добывать дерево, камень и золото\", \"Урон: 2\"];\r\n    LANG[INV.PICK_GOLD] = [\"Золотая Кирка\", \"Также может добывать алмазы\", \"Урон: 3\", \"Урон по строениям: 1\"];\r\n    LANG[INV.PICK_DIAMOND] = [\"Алмазная Кирка\", \"Можно добывать всё\", \"Урон: 4\", \"Урон по строениям: 1\"];\r\n    LANG[INV.PICK_AMETHYST] = [\"Аметистовая Кирка\", \"Можно добывать всё, ещё и выглядит красиво!\", \"Урон: 5\", \"Урон по строениям: 1\"];\r\n    LANG[INV.HAMMER] = [\"Каменный молот\", \"Используется для разрушения зданий\", \"Плохо разрушает алмазные и аметистовые здания\", \"Урон: 2\", \"Урон по строениям: 20\"];\r\n    LANG[INV.HAMMER_GOLD] = [\"Золотой Молот\", \"Используется для разрушения зданий\", \"Плохо разрушает аметистовые здания\", \"Урон: 3\", \"Урон по строениям: 30\"];\r\n    LANG[INV.HAMMER_DIAMOND] = [\"Алмазный Молот\", \"Используется для разрушения зданий\", \"Урон: 4\", \"Урон по строениям: 40\"];\r\n    LANG[INV.HAMMER_AMETHYST] = [\"Аметистовый Молот\", \"Используется для разрушения зданий\", \"Урон: 5\", \"Урон по строениям: 50\"];\r\n    LANG[INV.SUPER_HAMMER] = [\"Супер Молот\", \"У вас есть планы разрушить мир?\", \"Урон: 12\", \"Урон по строениям: 70\"];\r\n    LANG[INV.WOOD_SPEAR] = [\"Деревянное Копьё\", \"Выглядит как деревянная палочка, но делает больно.\", \"Урон: 10\", \"Урон по строениям: 2\"];\r\n    LANG[INV.SPEAR] = [\"Каменное Копьё\", \"Начало эволюции!\", \"Урон: 14\", \"Урон по строениям: 4\"];\r\n    LANG[INV.GOLD_SPEAR] = [\"Золотое Копьё\", \"Осторожно, это больно!\", \"Урон: 15\", \"Урон по строениям: 5\"];\r\n    LANG[INV.DIAMOND_SPEAR] = [\"Алмазное Копьё\", \"Вы готовы убивать дракона.\", \"Урон: 17\", \"Урон по строениям: 5\"];\r\n    LANG[INV.AMETHYST_SPEAR] = [\"Аметистовое Копьё\", \"Драконы больше не пугают вас\", \"Урон: 18\", \"Урон по строениям: 6\"];\r\n    LANG[INV.SHOVEL] = [\"Каменная Лопата\", \"Копайте землю, чтобы получить грязь, лед и песок\", \"Так же вы можете получить ресурсы\", \"Урон: 2\"];\r\n    LANG[INV.SHOVEL_GOLD] = [\"Золотая Лопата\", \"Копайте землю, чтобы получить грязь, лед и песок\", \"Так же вы можете получить ресурсы\", \"Урон: 3\", \"Урон по строениям: 1\"];\r\n    LANG[INV.SHOVEL_DIAMOND] = [\"Алмазная Лопата\", \"Копайте землю, чтобы получить грязь, лед и песок\", \"Так же вы можете получить ресурсы\", \"Урон: 4\", \"Урон по строениям: 1\"];\r\n    LANG[INV.SHOVEL_AMETHYST] = [\"Аметистовая Лопата\", \"Копайте землю, чтобы получить грязь, лед и песок\", \"Так же вы можете получить ресурсы\", \"Урон: 5\", \"Урон по стреониям: 1\"];\r\n    LANG[INV.WOOD_HELMET] = [\"Деревянный Шлем\", \"Лучше чем ничего\", \"Защита от игроков: 1\", \"Защита от животных: 4\"];\r\n    LANG[INV.STONE_HELMET] = [\"Каменный Шлем\", \"Вы готовы к битве!\", \"Защита от игроков: 2\", \"Защита от животных: 8\"];\r\n    LANG[INV.GOLD_HELMET] = [\"Золотой Шлем\", \"Также известен как шлем жестоких людей\", \"Защита от игроков: 4\", \"Защита от животных: 13\"];\r\n    LANG[INV.DIAMOND_HELMET] = [\"Алмазный Шлем\", \"Не слишком хвастайтесь\", \"Защита от игроков: 5\", \"Защита от животных: 19\"];\r\n    LANG[INV.AMETHYST_HELMET] = [\"Аметистовый Шлем\", \"Ты больше ничего не боишься\", \"Защита от игроков: 6\", \"Защита от животных: 23\"];\r\n    LANG[INV.DRAGON_HELMET] = [\"Шлем Дракона\", \"Ты покоришь мир\", \"Защита от игроков: 8\", \"Защита от животных: 27\"];\r\n    LANG[INV.EXPLORER_HAT] = [\"Шапка Исследователя\", \"Животные не обращают на вас внимания\", \"но не шумите!\", \"Защищает от холода вне воды.\"];\r\n    LANG[INV.CHRISTMAS_HAT] = [\"Рождественская Шапка\", \"Ох-хо-хо, Счастливого Рождества\", \"Защищает от холода вне воды.\"];\r\n    LANG[INV.ELF_HAT] = [\"Шапка Эльфа\", \"Не позволяйте себе эксплуатироваться, ведь вы маленький снежный эльф!\", \"Защищает от холода вне воды.\"];\r\n    LANG[INV.HOOD] = [\"Капюшон\", \"Вы разбойник\", \"Вы можете украсть что-то, если\", \"1) Ночь\", \"2) Вы ничего не носите\", \"3)Если вас не тронули в течение восьми секунд\", \"4) Вы не рядом с огнём\", \"5) Вы не можете ничего украсть у крестьянской туники\", \"Защищает от холода вне воды.\"];\r\n    LANG[INV.EARMUFFS] = [\"Теплые Наушники\", \"Какая-то маленькая шапка.\", \"Защищает от холода вне воды.\"];\r\n    LANG[INV.COAT] = [\"Шапка\", \"Так же называется пальтом.\", \"Защищает от холода вне воды.\"];\r\n    LANG[INV.CAP_SCARF] = [\"Зимний Шарф и Шапка\", \"Очень комфортно\", \"Очень тепло\"];\r\n    LANG[INV.PEASANT] = [\"Крестьянская Туника\", \"Ваши растения растут быстрее\", \"Защищает от холода вне воды.\"];\r\n    LANG[INV.WINTER_HOOD] = [\"Зимний Капюшон\", \"Вы можете украсть что-то, если\", \"- Ночь\", \"- Вы ничего не носите\", \"- Если вас не тронули в течение четырёх секунд\", \"- Вы не рядом с огнём\", \"- Вы не можете ничего украсть у крестьянской туники\", \"Защищает от холода вне воды.\"];\r\n    LANG[INV.WINTER_PEASANT] = [\"Зимняя Крестьянская Туника\", \"Ваши растения растут быстрее\", \"Защищает от холода вне воды.\"];\r\n    LANG[INV.DIVING_MASK] = [\"Акваланг\", \"Вы быстрее передвигаетесь по воде\", \"Тепло в воде\", \"Защита от игроков: 2, Защита от животных: 8\"];\r\n    LANG[INV.SUPER_DIVING_SUIT] = [\"Супер Акваланг\", \"Вы очень быстро передвигаетесь по воде\", \"Тепло в воде\", \"Защита от игроков: 4, Защита от животных: 16\"];\r\n    LANG[INV.DRAGON_ORB] = [\"Шар Дракона\", \"Даётся за квест\"];\r\n    LANG[INV.DRAGON_HEART] = [\"Сердце Дракона\", \"Превращает вас в призрака после смерти!\", \"Вы призрак на 60 секунд\", \"Найдите камень воскрешения\"];\r\n    LANG[INV.GEMME_GREEN] = [\"Зелёный Драгоценный Камень\", \"Вы без читов, правильно?\"];\r\n    LANG[INV.GEMME_ORANGE] = [\"Оранжевый Драгоценный Камень\", \"Только настоящий пират найдёт это!\"];\r\n    LANG[INV.GEMME_BLUE] = [\"Синий Драгоценный Камень\", \"Для очень добрых людей\"];\r\n    LANG[INV.CROWN_GREEN] = [\"Зеленая корона\", \"Вы лечите себя очень быстро\", \"Лечит: 40\", \"Защита от игроков: 4, Защита от животных: 16\"];\r\n    LANG[INV.CROWN_ORANGE] = [\"Оранжевая Корона\", \"Вам очень повезло\", \"Защита от игроков: 4, Защита от животных: 16\"];\r\n    LANG[INV.CROWN_BLUE] = [\"Синяя Корона\", \"Как только вы умрёте, вы станете призраком\", \"Но вы потеряете своё оружие\", \"Защита от игроков: 4, Защита от животных: 16\"];\r\n    LANG[INV.BUCKET_FULL] = [\"Ведро\", \"Используется для заполнения колодца\", \"Одно ведро равняется двенадцати бутылкам\"];\r\n    LANG[INV.BUCKET_EMPTY] = [\"Пустое ведро\", \"Вам надо заполнить это ведро возле воды\"];\r\n    LANG[INV.BOTTLE_FULL] = [\"Бутылка\", \"Позволяет пить воду в любом месте\", \"Вода: 50\"];\r\n    LANG[INV.BOTTLE_EMPTY] = [\"Пустая бутылка\", \"Вы можете заполнить бутылку возле воды\"];\r\n    LANG[INV.WATERING_CAN] = [\"Пустая Лейка\", \"Вы можете заполнить лейку возле воды\"];\r\n    LANG[INV.WATERING_CAN_FULL] = [\"Лейка\", \"Позволяет поливать растения\", \"Урон: 1\"];\r\n    LANG[INV.BAG] = [\"Рюкзак\", \"Больше места для ваших предметов!\"];\r\n    LANG[INV.PAPER] = [\"Бумага\", \"Используется при создании книги\"];\r\n    LANG[INV.BOOK] = [\"Книга\", \"Сокращает время изготовления предметов\", \"Должно быть одето для работы\", \"Урон: 1\"];\r\n    LANG[INV.BANDAGE] = [\"Бинт\", \"Восстанавливает ваше здоровье быстрее\", \"Лечит: 30\", \"Эффект: 5\"];\r\n    LANG[INV.LOCK] = [\"Замок\", \"Позволяет вам закрыть ваш сундук\"];\r\n    LANG[INV.LOCKPICK] = [\"Ключ\", \"Даёт вам открыть один запертый сундук\"];\r\n    LANG[INV.TOTEM] = [\"Тотем\", \"Позволяет вам создать команду\", \"Совместное использование дверей и сундуков\", \"Вредное здание не повредит вашего друга\"];\r\n    LANG[INV.BRIDGE] = [\"Мост\", \"Очень полезно на воде\", \"Позволяет вам пить без потери воздуха\", \"Передвигаетесь быстрее по воде\"];\r\n    LANG[INV.SIGN] = [\"Табличка\", \"Оставьте сообщение другим\", \"Прочность: 200\"];\r\n    LANG[INV.ROOF] = [\"Крыша\", \"Немного скрывает вас и согревает!\"];\r\n    LANG[INV.WELL] = [\"Колодец\", \"Позволяет заполнить бутылку\", \"Прочность: 1000\"];\r\n    LANG[INV.WALL] = [\"Деревянная Стена\", \"Это просто стена\", \"Прочность: 1000\"];\r\n    LANG[INV.STONE_WALL] = [\"Каменная Стена\", \"Это немного посерьезнее.\", \"Прочность: 1500\"];\r\n    LANG[INV.GOLD_WALL] = [\"Золотая Стена\", \"Золото на ваших стенах? Она ослепляет.\", \"Прочность: 2000\"];\r\n    LANG[INV.DIAMOND_WALL] = [\"Алмазная Стена\", \"Очень блестит, следите за вашими глазами\", \"Прочность: 2500\"];\r\n    LANG[INV.AMETHYST_WALL] = [\"Аметистовая стена\", \"Вы должны быть слишком напуганы, чтобы уйти!\", \"Прочность: 3500\"];\r\n    LANG[INV.SPIKE] = [\"Деревянная Стена с Шипами\", \"Может наносить урон врагам\", \"Урон: 10, Урон за один удар: 2\", \"Прочность: 150\"];\r\n    LANG[INV.STONE_SPIKE] = [\"Каменная Стена с Шипами\", \"Я не хотел бы быть вашим врагом\", \"Урон: 20\", \"Урон за один удар: 3\", \"Прочность: 300\"];\r\n    LANG[INV.GOLD_SPIKE] = [\"Золотая Стена с Шипами\", \"Вы очень жестоки.\", \"Урон: 30\", \"Урон за один удар: 3\", \"Прочность: 600\"];\r\n    LANG[INV.DIAMOND_SPIKE] = [\"Алмазная Стена с Шипами\", \"Вам не нравится иметь компанию.\", \"Урон: 40\", \"Урон за один удар: 4\", \"Прочность: 1200\"];\r\n    LANG[INV.AMETHYST_SPIKE] = [\"Аметистовая Стена с Шипами\", \"Какого черта, что ваши соседи сделали с вами?\", \"Урон: 50\", \"Урон за один удар: 4\", \"Прочность: 2400\"];\r\n    LANG[INV.WOOD_DOOR] = [\"Деревянная Дверь\", \"Может быть открыта и закрыта вами или друзьями\", \"Прочность: 1000\"];\r\n    LANG[INV.STONE_DOOR] = [\"Каменная Дверь\", \"Более серьезная и сильная дверь\", \"Прочность: 1500\"];\r\n    LANG[INV.GOLD_DOOR] = [\"Золотая Дверь\", 'Вы перестраиваете \"Эль Дорадо?\"', \"Прочность: 2000\"];\r\n    LANG[INV.DIAMOND_DOOR] = [\"Алмазная Дверь\", \"Для роскошного дома\", \"Прочность: 2500\"];\r\n    LANG[INV.AMETHYST_DOOR] = [\"Аметистовая Дверь\", \"Ваш дом в безопасности?\", \"Прочность: 3000\"];\r\n    LANG[INV.FURNACE] = [\"Печь\", \"Согревает\", \"Тратит дерево каждые 5 секунд\", \"Прочность: 1000\"];\r\n    LANG[INV.WINDMILL] = [\"Мельница\", \"Может сделать муку из пшеницы\", \"Требует 5 секунд для получения муки\", \"Даёт очки при работе\", \"Прочность: 2000\"];\r\n    LANG[INV.BREAD_OVEN] = [\"Хлебная Печь\", \"Позволяет готовить хлеб из муки\", \"Требует 10 секунд для получения хлеба\", \"Даёт очки при работе\", \"Прочность: 2000\"];\r\n    LANG[INV.RESURRECTION] = [\"Камень Воскрешения\", \"Это магия\", \"Воскрешает вас, если вы призрак\", \"Вы потеряете своё оружие\", \"Прочность: 200\"];\r\n    LANG[TEXT.YOU_CANNOT_JOIN] = \"Вы не можете зайти на этот сервер\";\r\n    LANG[TEXT.KICKED] = \"Выгнаны: \";\r\n    LANG[TEXT.KEY_ALREADY] = \"Ваш ключ уже используется кем-то\";\r\n    LANG[TEXT.KEY_WRONG] = \"Ваш ключ неправильный\";\r\n    LANG[TEXT.OLD_VERSION] = \"У вас старая версия, вам нужно очистить кеш\";\r\n    LANG[TEXT.NO_MORE_RESOURCES] = \"Ресурсов больше нет\";\r\n    LANG[TEXT.SURVIVED_1DAY] = \"Вы выжили 1 день\";\r\n    LANG[TEXT.SURVIVED] = \"Вы выжили \";\r\n    LANG[TEXT.DAYS] = \" дней\";\r\n    LANG[TEXT.DEAD_SAD] = \"Вы умерли ;-;\";\r\n    LANG[TEXT.SPAM_ME] = \"Сервер не может найти точку спавна! Спамьте кнопку играть!\";\r\n    LANG[TEXT.SPAM_ME2] = \"Сервер заполнен! Спамьте кнопку играть!\";\r\n    LANG[TEXT.EMPTY] = \"Ресурсы закончились\";\r\n    LANG[TEXT.INV_FULL] = \"Инвентарь заполнен (правая кнопка мыши для удаления предметов)\";\r\n    LANG[TEXT.DEAD] = \" умер\";\r\n    LANG[TEXT.WRONG_TOOL] = \"Это не тот инструмент\";\r\n    LANG[TEXT.JOIN_TEAM] = \"Вы вошли в команду\";\r\n    LANG[TEXT.YOU_DEAD] = \"Вы умерли\";\r\n    LANG[TEXT.JOINED_TEAM] = \" вошёл в команду\";\r\n    LANG[TEXT.TEAM_DESTROYED] = \"Ваша команда была разрушена\";\r\n    LANG[TEXT.LEFT_TEAM] = \"Вы покинули команду\";\r\n    LANG[TEXT.LEFT_TEAM2] = \" покинул команду\";\r\n    LANG[TEXT.TOKEN] = \"Кто-то использует ваш токен :>\";\r\n    LANG[TEXT.CHOOSE] = \"Выберите сервер\";\r\n    LANG[TEXT.PLAYERS] = \"игроков\";\r\n    LANG[TEXT.TOTAL_PLAYERS] = \"игроков всего\";\r\n    LANG[TEXT.TOTAL_MODE] = \"игроков в этом режиме\";\r\n    LANG[TEXT.COMMING_SOON] = \"Скоро...\";\r\n    document.getElementById(\"nickname_input\").placeholder = \"Имя\";\r\n    DIE[0] = [\"Вы были убиты без причины\"];\r\n    DIE[1] = [\"Вы умерли от голода, как название игры подразумевает это\"];\r\n    DIE[2] = [\"Вы замерзли до смерти. Так грустно\", \"У вас гипотермия. В следующий раз, постарайтесь быть рядом с огнём.\"];\r\n    DIE[3] = [\"Игрок убил тебя и сказал 'стань лучше.'\", \"Ты был убит игроком. Не волнуйся, этот игрок тоже умрёт, в конце концов.\"];\r\n    DIE[4] = [\"Вы стояли слишком близко к огню и сгорели. Плохая идея.\", \"Ты умер от огня, он причинил вам боль. Напишите историю насчёт этого.\"];\r\n    DIE[5] = [\"Ваше тело станет гнездом для яиц паука\", \"Паук убил вас. По крайней мере это был не кролик.\"];\r\n    DIE[6] = [\"Волк больше не будет голодать после того, как наелся вами\", \"Они не собаки. Волки не любят ласкаться.\"];\r\n    DIE[7] = [\"Лиса была слишком быстрой для вас\", \"Лиса превратила тебя в ящик. С каких пор животные обладают магическими способностями?\"];\r\n    DIE[8] = [\"Медведь просто хотел обнять тебя.\", \"Медведь был слишком грустным. Мне не жаль.\"];\r\n    DIE[9] = [\"Вы были сожжены драконом. Так грустно.\", \"Вы были сплющены драконом. Быть раздавленным - это ужасный способ умереть.\"];\r\n    DIE[10] = [\"Вы прыгнули в стену с шипами. Плохая идея...\", \"Вы были убиты стеной с шипами. Большинство людей достаточно разумны, чтобы не касаться острых вещей.\"];\r\n    DIE[11] = [\"Даже призрак может умереть.\", \"Вы не смогли воскреснуть. Это игра, и вы можете возвращаться к жизни после смерти, так что...\"];\r\n    DIE[12] = [\"Бактерия из вашей сырой пищи убила вас. Эта игра безусловно сложна.\", \"Вы убили сырую пищу. Она тоже тебя убила.\"];\r\n    DIE[13] = [\"Вы умерли от жажды. Лучше пить собственную мочу.\"];\r\n    DIE[14] = [\"Знаешь ли ты, что у голодающих рот всегда под водой, когда они плавают? Теперь ты знаешь.\"];\r\n    DIE[15] = [\"Не волнуйся, пиранья сочла тебя вкусным.\", \"Веселый факт: Пираньи едят людей. В том числе тебя.\"];\r\n    DIE[16] = [\"LapaMauve не планировал, что ты убьёшь кракена\", \"Крак! Кракен сломал твой череп.\"];\r\n    DIE[17] = [\"Твоя кожа разваливается, солнце убило тебя\"];\r\n    DIE[18] = [\"Чеснок, хранящийся в твоих карманах сварил твой мозг.\"];\r\n    DIE[19] = [\"Не стоит стоять рядом с чесночным зубком, когда вы вампир.\"];\r\n    DIE[20] = [\"Вы вампир, Вы ели чеснок, чего вы ожидали?\"];\r\n    DIE[21] = [\"Ваше тело застревает в шипах, когда вы пытаетесь убежать, ваша кожа отрывается, и ваше сердце перестает биться.\"];\r\n    ZOMBIE_GRUMBLE = \"Uuunnnggg\";\r\n    ZOMBIE_GRUMBLES = [\"Uuunnnggg... Я голоден\", \"Нужны твои мозги Uuunnnggg...\", \"Свежее мясо здесь... Uuunnnggg\", \"Uuunnnggg... Ты вкусный\", \"Uuunnnggg...\", \"Еда… Uuunnnggg...\", \"Я чувствую запах крови... Uuunnnggg\"];\r\n};\r\nvar set_spanish = function () {\r\n    LANG[INV.DRAGON_CUBE] = [\"You feel a great power emanating from this orb\"];\r\n    DIE[22] = [\"This crab, though frightening in nature, pinched your fingertips so hard that you had a heart attack.\"];\r\n    LANG[INV.CRAB_STICK] = [\"Crab sticks\", \"Oh, yeah? Is there crab in the crab sticks?\", \"Food: 20\"];\r\n    LANG[TEXT.BACK_TO_THE_GAME] = \" BACK TO THE GAME\";\r\n    LANG[TEXT.TWITTER] = \" Share on Twitter\";\r\n    LANG[TEXT.FACEBOOK] = \" Share on Facebook\";\r\n    LANG[TEXT.KIT_NEXT] = \"You can buy items on the shop in the next game with your points\";\r\n    LANG[TEXT.POINTS] = \"points\";\r\n    LANG[TEXT.SCORE] = \"Score\";\r\n    LANG[TEXT.KILL] = \"Kill\";\r\n    LANG[TEXT.DAYS_SURVIVED] = \"Days survived\";\r\n    LANG[TEXT.MODE_FREE] = \"Building method: Free. Press G to change\";\r\n    LANG[TEXT.MODE_GRID] = \"Building method: Grid. Press G to change\";\r\n    LANG[INV.CRAB_LOOT] = [\"Crab Claw\", \"Crab claws can also be eaten\", \"Food: 10\"];\r\n    LANG[INV.CRAB_SPEAR] = [\"Crab Spear\", \"Allow you to calm crabs, and heal them\", \"Damage: 14\", \"Building Damage: 4\"];\r\n    LANG[INV.CROWN_CRAB] = [\"Crab Helmet\", \"You are the king of crabs!\", \"Crabs follow you\", \"They can't hit you and you can't hit them\", \"Players Defense: 4\", \"Animals Defense: 13\"];\r\n    LANG[INV.BED] = [\"Bed\", \"Relax in this confortable bed\", \"You are less cold, less thirsty, and less hungry\", \"You will be cured faster\", \"Durability: 400\"];\r\n    document.getElementById(\"typequest\").innerHTML = \"Chrono Quests\";\r\n    document.getElementById(\"timeremainingquest\").innerHTML = \"Time Remaining\";\r\n    document.getElementById(\"constraintquest\").innerHTML = \" Constraints\";\r\n    document.getElementById(\"claim_rewards\").innerHTML = \" Claim rewards\";\r\n    document.getElementById(\"rewardquest\").innerHTML = \" Reward\";\r\n    document.getElementById(\"killdragon_1\").innerHTML = \" Collect 1 dragon heart\";\r\n    document.getElementById(\"amethyst_2\").innerHTML = \" Gather 1 amethyst\";\r\n    document.getElementById(\"survive20min_3\").innerHTML = \"Survive without losing life\";\r\n    document.getElementById(\"treasure_chest_4\").innerHTML = \" Open 5 treasure chests\";\r\n    document.getElementById(\"dont_hit_5\").innerHTML = \" Be peaceful\";\r\n    document.getElementById(\"bread_6\").innerHTML = \" Collect 100 bread in deep winter\";\r\n    document.getElementById(\"winter_7\").innerHTML = \" After 1 day, survive in winter\";\r\n    for (var i = 0; i < 7; i++) document.getElementById(\"claim_reward_\" + i).innerHTML = \"CLAIM REWARD!\";\r\n    document.getElementById(\"quit_chronoquest\").innerHTML = \" QUIT\";\r\n    LANG[INV.HAND] = [\"Mano\"];\r\n    LANG[INV.GROUND] = [\"Tierra\", \"¡Tan limpia como mis manos!\"];\r\n    LANG[INV.SAND] = [\"Arena\", \"¡Tengo arena en mis ojos!\"];\r\n    LANG[INV.WOOD] = [\"Madera\", \"¡Nunca hay suficiente!\"];\r\n    LANG[INV.STONE] = [\"Piedra\", \"También llamada roca.\"];\r\n    LANG[INV.GOLD] = [\"Oro\", \"Sé generoso, compártelo con los otros\"];\r\n    LANG[INV.DIAMOND] = [\"Diamante\", \"¿Que vas a hacer con él?\"];\r\n    LANG[INV.AMETHYST] = [\"Amatista\", \"Es Mauve como Lapa\"];\r\n    LANG[INV.FLOUR] = [\"Harina\", \"Usada para cocinar.\"];\r\n    LANG[INV.COOKIE] = [\"Galleta\", \"Una galleta de la abuelita\", \"Comida: 50\"];\r\n    LANG[INV.CAKE] = [\"Tarta\", \"¡Cumpleaños Feliz!\", \"Comida: 100\"];\r\n    LANG[INV.MEAT] = [\"Carne Cruda\", \"Se cocina con fuego\", \"Causa veneno. 10\", \"Comida: 15\"];\r\n    LANG[INV.COOKED_MEAT] = [\"Carne Cocinada\", \"es la supervivencia del más fuerte :'(\", \"Comida: 35\"];\r\n    LANG[INV.FOODFISH] = [\"Pescado Crudo\", \"Creo que sigue vivo\", \"Causa veneno de comida: 10\", \"Comida: 18\"];\r\n    LANG[INV.FOODFISH_COOKED] = [\"Pescado Cocinado\", \"Con limón sería perfecto\", \"Comida: 35\"];\r\n    LANG[INV.BREAD] = [\"Pan\", \"¡Caliente, desde Francia!\", \"Es dinero usado en la tienda\", \"Comida: 15\"];\r\n    LANG[INV.SANDWICH] = [\"Bocadillo\", \"Sabe como un Krabby Patty\", \"Comida: 100\"];\r\n    LANG[INV.CANDY] = [\"Caramelos\", \"¡Solo para niños/as!\", \"Comida: 100\"];\r\n    LANG[INV.SUGAR_CAN] = [\"Caña de Azúcar\", \"Pruébala, es deliciosa\", \"Comida: 100\"];\r\n    LANG[INV.GARLAND] = [\"Guirnalda\", \"Perfecta para decorar el techo\"];\r\n    LANG[INV.SEED] = [\"Semillas de Bayas\", \"Se convierte en bayas\", \"Nacimiento: 2 Minutos\", \"Crecimiento: 55 Segundos\", \"Necesita agua: 3 Minutos 20 Segundos\", \"Durabilidad: 700\", \"Tiempo de vida: 8 Días\"];\r\n    LANG[INV.PLANT] = [\"Baya\", \"No es venenosa.\", \"Comida: 10\"];\r\n    LANG[INV.WHEAT_SEED] = [\"Semilla de Trigo\", \"Se convierte en Trigo \", \"Nacimiento: 2 Minutos\", \"Crecimiento: 16 Segundos\", \"Necesita agua: 2 Minutos\", \"Durabilidad: 700\", \"Tiempo de vida: 8 Días\"];\r\n    LANG[INV.WILD_WHEAT] = [\"Trigo Silvestre\", \"Se convierte en harina cuando se coloca en un molino\"];\r\n    LANG[INV.PUMPKIN_SEED] = [\"Semilla de Calabaza\", \"Crece a Calabazas\", \"Nacimiento: 2 Minutos 40 Segundos\", \"Crecimiento: 2 Minutos\", \"Necesita agua: 2 Minutos\", \"Durabilidad: 700\", \"Tiempo de vida: 8 Días\"];\r\n    LANG[INV.PUMPKIN] = [\"Calabaza\", \"Me recuerda a Halloween\", \"Comida: 30\"];\r\n    LANG[INV.GARLIC_SEED] = [\"Semilla de Ajo\", \"Muy peligroso para vampiros\", \"Daño: 20\", \"Nacimiento: 4 Minutos\", \"Crecimiento: 1 Minutos 10 Segundos\", \"Necesita Agua: 1 Minutos 40 Segundos\", \"Durabilidad: 700\", \"Tiempo de Vida: 8 Días\"];\r\n    LANG[INV.GARLIC] = [\"Ajo\", \"Te sana y reduce el frio\", \"Comida: 14\", \"sanación con eliempo: 30\", \"Efecto: 1\"];\r\n    LANG[INV.THORNBUSH_SEED] = [\"Semilla de Planta de Espinas\", \"Puede dañar a tus enemigos\", \"Daño por contacto: 20\", \"Nacimiento: 4 Minutos\", \"Crecimiento: 15 Segundos\", \"Necesita Agua: 3 Minutos\", \"Durabilidad: 1000\", \"Tiempo de Vida: 8 Días\"];\r\n    LANG[INV.THORNBUSH] = [\"Planta de Espinas\", \"¡Te daña!\"];\r\n    LANG[INV.PLOT] = [\"Parcela\", \"En serio, úsala\", \"Se usa para plantar plantas en invierno o sobre puentes\", \"Tus plantas crecerán muy rápido y necesitarán menos agua\", \"Durabilidad: 2000\"];\r\n    LANG[INV.ICE] = [\"Hielo\", \"Bueno para hacer tartas y agua\"];\r\n    LANG[INV.SPANNER] = [\"Llave de Reparación\", \"Puede reparar paredes, puertas y pinchos\", \"Daño: 2\"];\r\n    LANG[INV.FUR_WOLF] = [\"Pelaje de Lobo\", \"¿Perrito? ¡¿Donde esta el perrito?!\"];\r\n    LANG[INV.FUR] = [\"Pelaje de Conejo\", \"El Conejo era muy lindo...\"];\r\n    LANG[INV.SPECIAL_FUR] = [\"Pelaje Puro\", \"¡Eres una maquina de pan!\"];\r\n    LANG[INV.SPECIAL_FUR_2] = [\"Pelaje Oscuro\", \"¿Estás listo para hacer algo malo?\"];\r\n    LANG[INV.FUR_WINTER] = [\"Pelaje de Invierno\", \"Esos animales solo querían un abrazo...\"];\r\n    LANG[INV.SCALES] = [\"Escamas\", \"¡Huele a pescado!\"];\r\n    LANG[INV.KRAKEN_SKIN] = [\"Piel del Kraken\", \"¡¿No tienes mucho miedo?!\"];\r\n    LANG[INV.FIRE] = [\"Fogata\", \"¡Te calienta!\", \"Durabilidad: 150\", \"Tiempo de vida: 2 Minutos\"];\r\n    LANG[INV.BIG_FIRE] = [\"Fogata Grande\", \"¡Te calienta por más tiempo!\", \"Durabilidad: 400\", \"Tiempo de Vida: 6 Minutos\"];\r\n    LANG[INV.WORKBENCH] = [\"Mesa de Trabajo\", \"¡Te sirve mucho para crear cosas de todos tipos!\"];\r\n    LANG[INV.CORD] = [\"Hilo\", \"Usado para craftear ropa y mochila\"];\r\n    LANG[INV.BLUE_CORD] = [\"Hilo de Diamante\", \"Usado para craftear ropa especial\"];\r\n    LANG[INV.CHEST] = [\"Cofre\", \"Te permite guardar cosas, o compartirlas\", \"Durabilidad: 500\"];\r\n    LANG[INV.SWORD_WOOD] = [\"Espada de Madera\", \"¿Eso funciona?\", \"Daño: 12\", \"Daño para estructuras: 4\"];\r\n    LANG[INV.SWORD] = [\"Espada de Piedra\", \"Sé bueno con los otros\", \"Daño: 19\", \"Daño para estructuras: 6\"];\r\n    LANG[INV.SWORD_GOLD] = [\"Espada de Oro\", \"¡Rey de la selva!\", \"Daño: 22\", \"Daño para estructuras: 7\"];\r\n    LANG[INV.SWORD_DIAMOND] = [\"Espada de Diamante\", \"Puedes sentir el poder\", \"Daño: 24\", \"Daño para estructuras: 8\"];\r\n    LANG[INV.PIRATE_SWORD] = [\"Espada de Pirata\", \"Arrrrr!\", \"¡Mejor distancia que una espada normal\", \"Daño: 24\", \"Daño para estructuras: 8\"];\r\n    LANG[INV.SWORD_AMETHYST] = [\"Espada de Amatista\", \"Mauve es el mejor color del mundo :3\", \"Daño: 27\", \"Daño para estructuras: 9\"];\r\n    LANG[INV.DRAGON_SWORD] = [\"Espada del Dragón\", \"¡Tienes el poder de un Dragón!\", \"Daño: 30\", \"Daño para estructuras: 10\"];\r\n    LANG[INV.DRAGON_SPEAR] = [\"Lanza del Dragón\", \"¡Mátalos a todos!\", \"Daño: 22\", \"Daño para estructuras: 6\"];\r\n    LANG[INV.PICK_WOOD] = [\"Pico de Madera\", \"Solo puede minar madera y piedra\", \"Daño: 1\"];\r\n    LANG[INV.PICK] = [\"Pico de Piedra\", \"Puede minar hasta oro\", \"Daño: 2\"];\r\n    LANG[INV.PICK_GOLD] = [\"Pico de Oro\", \"Puede minar hasta Diamante\", \"Daño: 3\", \"Daño para estructuras: 1\"];\r\n    LANG[INV.PICK_DIAMOND] = [\"Pico de Diamante\", \"¡Puede minarlo todo!\", \"Daño: 4\", \"Daño para estructuras: 1\"];\r\n    LANG[INV.PICK_AMETHYST] = [\"Pico de Amatista\", \"¡Puede minarlo todo, parece fantastico!\", \"Daño: 5\", \"Daño para estructuras: 1\"];\r\n    LANG[INV.HAMMER] = [\"Martillo de Piedra\", \"Bueno para destruir estructuras\", \"No funciona bien con diamante y amatista\", \"Daño: 2\", \"Daño para estructuras: 20\"];\r\n    LANG[INV.HAMMER_GOLD] = [\"Martillo de Oro\", \"Bueno para destruir estructuras\", \"No funciona bien con amatista \", \"Daño: 3\", \"Daño para estructuras: 30\"];\r\n    LANG[INV.HAMMER_DIAMOND] = [\"Martillo de Diamante\", \"Bueno para destruir estructuras\", \"Daño: 4\", \"Daño para estructuras: 40\"];\r\n    LANG[INV.HAMMER_AMETHYST] = [\"Martillo de Amatista\", \"Bueno para destruir estructuras\", \"Daño: 5\", \"Daño para estructuras: 50\"];\r\n    LANG[INV.SUPER_HAMMER] = [\"Super Martillo\", \"¿Has planeado destruir el mundo?\", \"Daño: 12\", \"Daño para estructuras: 70\"];\r\n    LANG[INV.WOOD_SPEAR] = [\"Lanza de Madera\", \"Como un palo de madera, pero mata.\", \"Daño: 10\", \"Daño para estructuras: 2\"];\r\n    LANG[INV.SPEAR] = [\"Lanza de Piedra\", \"¡El comienzo de la evolución!\", \"Daño: 14\", \"Daño para estructuras: 4\"];\r\n    LANG[INV.GOLD_SPEAR] = [\"Lanza de Oro\", \"¡Cuidado, te hace mucho daño!\", \"Daño: 15\", \"Daño para estructuras: 5\"];\r\n    LANG[INV.DIAMOND_SPEAR] = [\"Lanza de Diamante\", \"¡Estas preparado para matar al Dragon!\", \"Daño: 17\", \"Daño para estructuras: 5\"];\r\n    LANG[INV.AMETHYST_SPEAR] = [\"Lanza de Amatista\", \"Los dragones te tienen miedo\", \"Daño: 18\", \"Daño para estructuras: 6\"];\r\n    LANG[INV.SHOVEL] = [\"Pala de Piedra\", \"Cava para conseguir tierra, arena y hielo\", \"También puedes conseguir minerales\", \"Daño: 2\"];\r\n    LANG[INV.SHOVEL_GOLD] = [\"Pala de Oro\", \"Cava para conseguir tierra, arena y hielo\", \"También puedes conseguir minerales\", \"Daño: 3\", \"Daño para estructuras: 1\"];\r\n    LANG[INV.SHOVEL_DIAMOND] = [\"Pala de Diamante\", \"Cava para conseguir tierra, arena y hielo\", \"También puedes conseguir minerales\", \"Daño: 4\", \"Daño para estructuras: 1\"];\r\n    LANG[INV.SHOVEL_AMETHYST] = [\"Pala de Amatista\", \"Cava para conseguir tierra, arena y hielo\", \"También puedes conseguir minerales\", \"Daño: 5\", \"Daño para estructuras: 1\"];\r\n    LANG[INV.WOOD_HELMET] = [\"Casco de Madera\", \"¡Mejor que nada!\", \"Protección contra jugadores: 1\", \"Protección contra animales: 4\"];\r\n    LANG[INV.STONE_HELMET] = [\"Casco de Piedra\", \"¡Estas listo para la batalla!\", \"Protección contra jugadores: 2\", \"Protección contra animales: 8\"];\r\n    LANG[INV.GOLD_HELMET] = [\"Casco de Oro\", \"AKA el casco de los salvajes\", \"Protección contra jugadores: 4\", \"Protección contra animales: 13\"];\r\n    LANG[INV.DIAMOND_HELMET] = [\"Casco de Diamante\", \"No ataques tanto\", \"Protección de jugadores: 5\", \"Protección contra animales: 19\"];\r\n    LANG[INV.AMETHYST_HELMET] = [\"Casco de Amatista\", \"¡No tienes miedo de nada!\", \"Protección contra jugadores: 6\", \"Protección contra animales: 23\"];\r\n    LANG[INV.DRAGON_HELMET] = [\"Casco del Dragón\", \"¡Vas a dominar el mundo!\", \"Protección contra jugadores: 8\", \"Protección contra animales: 27\"];\r\n    LANG[INV.EXPLORER_HAT] = [\"Gorro del Explorador\", \"Los animales no te atacarán\", \"¡Pero no ataques!\", \" Te calienta en el invierno y fuera del agua\"];\r\n    LANG[INV.CHRISTMAS_HAT] = [\"Gorro de Navidad\", \"¡Ho, ho, ho, feliz Navidad!\", \"Te calienta en el invierno y fuera del  agua\"];\r\n    LANG[INV.ELF_HAT] = [\"Gorro del Duende\", \"¡No dejes que te descubren que eres, duende del hielo!\", \"Te calienta en el invierno y fuera del agua\"];\r\n    LANG[INV.HOOD] = [\"Capucha\", \"¡Eres un ladron!\", \"Puedes robar de alguien solo si\", \"1) Es de noche\", \"2) No tienes nada en tu mano\", \"3) Si no te han tocado en los  8 segundos anteriores\", \"4) No estas cerca de una fogata\", \"5) Si tu objetivo no lleva puesto una gorra de campesino\", \"Te calienta en invierno y fuera del agua\"];\r\n    LANG[INV.EARMUFFS] = [\"Orejeras\", \"Como un abrigo pequeño.\", \"Te calienta en invierno y fuera del agua\"];\r\n    LANG[INV.COAT] = [\"Chapka\", \"También llamado abrigo.\", \"Te calienta en el invierno y fuera del agua\"];\r\n    LANG[INV.CAP_SCARF] = [\"Gorro y Bufanda \", \"Muy cómodo, muy caliente\"];\r\n    LANG[INV.PEASANT] = [\"Gorra de Campesino\", \"Tus plantas crecen mas rápido\", \"Te Calienta en el invierno y fuera del agua\"];\r\n    LANG[INV.WINTER_HOOD] = [\"Capucha de Invierno\", \"Puedes robar de alguien solo si\", \"1) Es de noche\", \"2) No tienes nada en tu mano\", \"3) Si no te han tocado antes de 8 segundos\", \"4) No estas cerca de un fuego\", \"5) Si tu objetivo no lleva puesto una Gorra de Campesino\", \"Te calienta en invierno y fuera del agua\"];\r\n    LANG[INV.WINTER_PEASANT] = [\"Gorra de Invierno del Campesino\", \"Tus plantas crecen aún más rápido\", \"Te calienta en invierno y fuera del agua\"];\r\n    LANG[INV.DIVING_MASK] = [\"Máscara de Buceo\", \"Eres un tiburón en el agua\", \"Calienta en el agua\", \"Protección contra jugadores: 2, Protección contra animales: 8\"];\r\n    LANG[INV.SUPER_DIVING_SUIT] = [\"Súper Máscara de Buceo\", \"Eres muy rápido en agua\", \"Calienta en el agua\", \"Defensa del Jugador: 4, Defensa de los animales: 16\"];\r\n    LANG[INV.DRAGON_ORB] = [\"Esfera del Dragón\", \"Dada en la misión\"];\r\n    LANG[INV.DRAGON_HEART] = [\"Corazón del Dragón\", \"¡Te convierte en un fantasma cuando mueres!\", \"Eres un fantasma por 60 segundos\", \"Encuentra una Piedra de resurreción\"];\r\n    LANG[INV.GEMME_GREEN] = [\"Gema Verde\", \"¿¿No has hecho trampas, verdad??\"];\r\n    LANG[INV.GEMME_ORANGE] = [\"Gema Naranja\", \"¡Solo un pirata verdadero lo puede encontrar!\"];\r\n    LANG[INV.GEMME_BLUE] = [\"Gema Azul\", \"Para gente muy amable\"];\r\n    LANG[INV.CROWN_GREEN] = [\"Corona Verde\", \"Te sanas muy rápido\", \"Sanación con el tiempo: 40\", \"Protección contra jugadores: 4, Protección contra animales: 16\"];\r\n    LANG[INV.CROWN_ORANGE] = [\"Corona Naranja\", \"Ahora tienes much suerte\", \"Protección contra jugadores: 4, Protección contra animales: 16\"];\r\n    LANG[INV.CROWN_BLUE] = [\"Corona Azul\", \"Cuando mueres, te conviertes en un fantasma\", \"Pero perderás tu alma\", \"Protección contra jugador: 4, Protección contra animales: 16\"];\r\n    LANG[INV.BUCKET_FULL] = [\"Cubo\", \"Bueno para rellenar botellas\", \"Un cubo es equivalente a 12 botellas\"];\r\n    LANG[INV.BUCKET_EMPTY] = [\"Cubo Vacío\", \"Tienes que llenar este cubo con agua\"];\r\n    LANG[INV.BOTTLE_FULL] = [\"Botella\", \"Te permite beber agua donde quieras\", \"Agua: 50\"];\r\n    LANG[INV.BOTTLE_EMPTY] = [\"Botella Vacia\", \"La puedes llenar de agua\"];\r\n    LANG[INV.WATERING_CAN] = [\"Regadera Vacía\", \"La tienes que llenar de agua\"];\r\n    LANG[INV.WATERING_CAN_FULL] = [\"Regadera\", \"Te permite regar las plantas\", \"Daño: 1\"];\r\n    LANG[INV.BAG] = [\"Mochila\", \"¡Mas espacio para tus cosas!\"];\r\n    LANG[INV.PAPER] = [\"Hoja\", \"Usada para hacer un libro\"];\r\n    LANG[INV.BOOK] = [\"Libro\", \"Reduce el tiempo de elaboración\", \"Lo tienes que tener en la mano para que funcione\", \"Daño: 1\"];\r\n    LANG[INV.BANDAGE] = [\"Vendaje\", \"Recuperas vida mas rapido\", \"Sanación tiempo: 30\", \"Efecto: 5\"];\r\n    LANG[INV.LOCK] = [\"Cerradura\", \"Te permite cerrar tu cofre\"];\r\n    LANG[INV.LOCKPICK] = [\"Llave\", \"Te permite abrir un cofre cerrado\"];\r\n    LANG[INV.TOTEM] = [\"Tótem\", \"Te permite crear un equipo\", \"Compartir puertas y cofres cerrados\", \"Tus pinchos no dañan al resto tu equipo\"];\r\n    LANG[INV.BRIDGE] = [\"Puente\", \"Muy útil en el agua\", \"Te permite beber agua sin tener que ahogarse\", \"Puedes nadar más rápido encima del agua\"];\r\n    LANG[INV.SIGN] = [\"Cartel\", \"Sirve para dejar un mensage para otros\", \"Durabilidad: 200\"];\r\n    LANG[INV.ROOF] = [\"Techo\", \"Te esconde un poco y te protege del frío\"];\r\n    LANG[INV.WELL] = [\"Fuente\", \"Permite rellenar botellas\", \"Durabilidad: 1000\"];\r\n    LANG[INV.WALL] = [\"Pared de Madera\", \"Es solo una pared.\", \"Durabilidad: 1000\"];\r\n    LANG[INV.STONE_WALL] = [\"Pared de Piedra\", \"Es un poco más serio\", \"Durabilidad: 1500\"];\r\n    LANG[INV.GOLD_WALL] = [\"Pared de Oro\", \"¿Oro en de tus paredes? Eres rico\", \"Durabilidad: 2000\"];\r\n    LANG[INV.DIAMOND_WALL] = [\"Pared de Diamante\", \"Muy brillante, cuidado con tus ojos\", \"Durabilidad: 2500\"];\r\n    LANG[INV.AMETHYST_WALL] = [\"Pared de Amatista\", \"¡Debes tener mucho miedo de lo que hay fuera!\", \"Durabilidad: 3500\"];\r\n    LANG[INV.SPIKE] = [\"Pincho de Madera\", \"Puede dañar a tus enemigos\", \"Daño: 10, Daño por golpe: 2\", \"Durabilidad: 150\"];\r\n    LANG[INV.STONE_SPIKE] = [\"Pincho de Piedra\", \"No querría ser tu enemigo.\", \"Daño: 20\", \"Daño por contacto: 3\", \"Durabilidad: 300\"];\r\n    LANG[INV.GOLD_SPIKE] = [\"Pincho de Oro\", \"¡Eres tan cruel!\", \"Daño: 30\", \"Daño por golpe: 3\", \"Durabilidad: 600\"];\r\n    LANG[INV.DIAMOND_SPIKE] = [\"Pincho de Diamante\", \"No te gusta tener compañía.\", \"Daño: 40\", \"Daño por contacto: 4\", \"Durabilidad: 1200\"];\r\n    LANG[INV.AMETHYST_SPIKE] = [\"Pincho de Amatista\", \"¡¿Que demonios te hicieron tus vecinos?!\", \"Daño: 50\", \"Daño por contacto: 4\", \"Durabilidad: 2400\"];\r\n    LANG[INV.WOOD_DOOR] = [\"Puerta de Madera\", \"Puedes abrir y cerrarla \", \"Durabilidad: 1000\"];\r\n    LANG[INV.STONE_DOOR] = [\"Puerta de Piedra\", \"Una puerta más buena es más seria\", \"Durabilidad: 1500\"];\r\n    LANG[INV.GOLD_DOOR] = [\"Puerta de Oro\", \"¿Estas reconstruyendo El Dorado?\", \"Durabilidad: 2000\"];\r\n    LANG[INV.DIAMOND_DOOR] = [\"Puerta de Diamante\", \"Para una casa brillante\", \"Durabilidad: 2500\"];\r\n    LANG[INV.AMETHYST_DOOR] = [\"Puerta de Amatista\", \"¿Tu casa es una caja fuerte?\", \"Durabilidad: 3500\"];\r\n    LANG[INV.FURNACE] = [\"Caldera\", \"Te calienta\", \"Consume 1 Madera cada 5 segundos\", \"Durabilidad: 1000\"];\r\n    LANG[INV.WINDMILL] = [\"Molino\", \"Puede producir harina a partir del trigo\", \"Necesita 5 segundos para producir harina\", \"Devuelve los puntos que trabaja\", \"Durabilidad: 2000\"];\r\n    LANG[INV.BREAD_OVEN] = [\"Horno de Pan\", \"Produce pan de harina\", \"Necesita 10 segundos para producir Pan\", \"Devuelve los puntos que trabaja\", \"Durabilidad: 2000\"];\r\n    LANG[INV.RESURRECTION] = [\"Piedra de Resurreción\", \"¡Es magia!\", \"Te resucitacuando eres una fantasma\", \"Perderás tu arma\", \"Durabilidad: 200\"];\r\n    LANG[TEXT.YOU_CANNOT_JOIN] = \"No puedes unirte a este servidor\";\r\n    LANG[TEXT.KICKED] = \"Expulsado: \";\r\n    LANG[TEXT.KEY_ALREADY] = \"Tu llave ya está usada\";\r\n    LANG[TEXT.KEY_WRONG] = \"Tu llave está mal\";\r\n    LANG[TEXT.OLD_VERSION] = \"Tienes una versión antigua, limpia tu cache\";\r\n    LANG[TEXT.NO_MORE_RESOURCES] = \"No hay mas recursos\";\r\n    LANG[TEXT.SURVIVED_1DAY] = \"Has sobrevivido 1 día\";\r\n    LANG[TEXT.SURVIVED] = \"Has sobrevivido \";\r\n    LANG[TEXT.DAYS] = \" días\";\r\n    LANG[TEXT.DEAD_SAD] = \"Estás muerto ;-;\";\r\n    LANG[TEXT.SPAM_ME] = \"No se encuentra un lugar para unirse, ¡spamea el botón de jugar!\";\r\n    LANG[TEXT.SPAM_ME2] = \"El servidor esta lleno, ¡spamea el botón de jugar!\";\r\n    LANG[TEXT.EMPTY] = \"Recurso vacio\";\r\n    LANG[TEXT.INV_FULL] = \"¡Inventario lleno!(Haz click derecho para borrar cosas) \";\r\n    LANG[TEXT.DEAD] = \" está muerto\";\r\n    LANG[TEXT.WRONG_TOOL] = \"Esta no es la herramienta correcta\";\r\n    LANG[TEXT.JOIN_TEAM] = \"Te has unido a un equipo\";\r\n    LANG[TEXT.YOU_DEAD] = \"Estás muerto\";\r\n    LANG[TEXT.JOINED_TEAM] = \" se unió al equipo\";\r\n    LANG[TEXT.TEAM_DESTROYED] = \"Tu equipo ha sido destruido\";\r\n    LANG[TEXT.LEFT_TEAM] = \"Has dejado el equipo\";\r\n    LANG[TEXT.LEFT_TEAM2] = \" dejo el equipo \";\r\n    LANG[TEXT.TOKEN] = \"Alguien te robó tu token :>\";\r\n    LANG[TEXT.CHOOSE] = \"Elige un servidor\";\r\n    LANG[TEXT.PLAYERS] = \"jugadores\";\r\n    LANG[TEXT.TOTAL_PLAYERS] = \"total de jugadores\";\r\n    LANG[TEXT.TOTAL_MODE] = \"Jugadores en este modo de juego\";\r\n    LANG[TEXT.COMMING_SOON] = \"Próximamente...\";\r\n    document.getElementById(\"nickname_input\").placeholder = \"Apodo\";\r\n    DIE[0] = [\"Has muerto por ninguna razón\"];\r\n    DIE[1] = [\"Has muerto de hambre, como implica el nombre del juego dice\"];\r\n    DIE[2] = [\"Te has congelado hasta morir, qué triste\", \"Moriste por hipotermia. La próxima quédate cerca de  una fogata.\"];\r\n    DIE[3] = [\"Un jugador te ha matado diciendo que mejores.\", \"Fuiste asesinado por un jugador, pero no te preocupes, ese jugador también morirá, eventualmente.\"];\r\n    DIE[4] = [\"Te has acercado demasiado al fuego, y te has quemado vivo, mala idea.\", \"Has muerto por el fuego, el fuego te quema, ve y escribe una historia sobre eso.\"];\r\n    DIE[5] = [\"Tu cuerpo será un buen nido para los huevos de la arañas\", \"Una araña te ha matado, al menos no fué un conejo.\"];\r\n    DIE[6] = [\"El lobo no tendrá hambre después de comerte.\", \"No son perros, no les gusta ser acariciados.\"];\r\n    DIE[7] = [\"El zorro era demasiado rápido para ti.\", \"El zorro te convirtió en una caja. ¿Desde cuándo los animales tienen poderes mágicos?\"];\r\n    DIE[8] = [\"El oso solo quería un abrazo\", \"El oso era demasiado para ti. Lo siento.\"];\r\n    DIE[9] = [\"El dragón te quemó vivo.\", \"El dragón te ha aplastado, todos tus huesos ahora son vapor... otro cadaver mas.\"];\r\n    DIE[10] = [\"Has saltado a una pared de pinchos, mala idea\", \"Has muerto por una pared de pinchos. La gente suele ser lo suficientemente sensible para no tocar cosas puntiagudas..\"];\r\n    DIE[11] = [\"Un fantasma también puede morir.\", \"No has revivido a tiempo, asi que eres un fantasma de un fantasma.\"];\r\n    DIE[12] = [\"Una bacteria te ha matado por comer carne cruda. Este juego es muy difícil.\", \"Has matado a la carne cruda. Ella también te ha matado a ti..\"];\r\n    DIE[13] = [\"Has muerto de sed, mejor bebe tu propia orina.\"];\r\n    DIE[14] = [\"¿Sabiás que los jugadores tienen su boca debajo del agua? Ahora lo sabes.\"];\r\n    DIE[15] = [\"No te preocupes, a la piraña le pareciste delicioso.\", \"Las pirañas comen a personas, incluyendote a ti también.\"];\r\n    DIE[16] = [\"LapaMauve no planea que puedas matar al kraken\", \"Un Kraken te partió el kra-neo.\"];\r\n    DIE[17] = [\"Tu piel se cayó, el sol te quemó.\"];\r\n    DIE[18] = [\"El ajo guardado en tu bolsillo te quemó el cerebro.\"];\r\n    DIE[19] = [\"Eres un vampiro, no te quedes cerca del ajo.\"];\r\n    DIE[20] = [\"Has comido un ajo siendo  vampiro,¿que esperabas?\"];\r\n    DIE[21] = [\"Te has quedado atrapado en una planta de espinas. Al intentar escapar, tu piel se cae y entra un pincho en tu corazón.\"];\r\n    ZOMBIE_GRUMBLE = \"Uuunnnggg\";\r\n    ZOMBIE_GRUMBLES = [\"Uuunnnggg... Tengo hambre\", \"Necesito tu cerebro uuunnnggg...\", \"Carne fresca... Uuunnnggg\", \"Uuunnnggg... Pareces delicioso\", \"Uuunnnggg...\", \"Comida... uuunnnggg...\", \"Puedo oler sangre... Uuunnnggg\"];\r\n};\r\nvar set_polish = function () {\r\n    LANG[INV.DRAGON_CUBE] = [\"You feel a great power emanating from this orb\"];\r\n    DIE[22] = [\"This crab, though frightening in nature, pinched your fingertips so hard that you had a heart attack.\"];\r\n    LANG[INV.CRAB_STICK] = [\"Crab sticks\", \"Oh, yeah? Is there crab in the crab sticks?\", \"Food: 20\"];\r\n    LANG[TEXT.BACK_TO_THE_GAME] = \" BACK TO THE GAME\";\r\n    LANG[TEXT.TWITTER] = \" Share on Twitter\";\r\n    LANG[TEXT.FACEBOOK] = \" Share on Facebook\";\r\n    LANG[TEXT.KIT_NEXT] = \"You can buy items on the shop in the next game with your points\";\r\n    LANG[TEXT.POINTS] = \"points\";\r\n    LANG[TEXT.SCORE] = \"Score\";\r\n    LANG[TEXT.KILL] = \"Kill\";\r\n    LANG[TEXT.DAYS_SURVIVED] = \"Days survived\";\r\n    LANG[TEXT.MODE_FREE] = \"Building method: Free. Press G to change\";\r\n    LANG[TEXT.MODE_GRID] = \"Building method: Grid. Press G to change\";\r\n    LANG[INV.CRAB_LOOT] = [\"Crab Claw\", \"Crab claws can also be eaten\", \"Food: 10\"];\r\n    LANG[INV.CRAB_SPEAR] = [\"Crab Spear\", \"Allow you to calm crabs, and heal them\", \"Damage: 14\", \"Building Damage: 4\"];\r\n    LANG[INV.CROWN_CRAB] = [\"Crab Helmet\", \"You are the king of crabs!\", \"Crabs follow you\", \"They can't hit you and you can't hit them\", \"Players Defense: 4\", \"Animals Defense: 13\"];\r\n    LANG[INV.BED] = [\"Bed\", \"Relax in this confortable bed\", \"You are less cold, less thirsty, and less hungry\", \"You will be cured faster\", \"Durability: 400\"];\r\n    document.getElementById(\"typequest\").innerHTML = \"Chrono Quests\";\r\n    document.getElementById(\"timeremainingquest\").innerHTML = \"Time Remaining\";\r\n    document.getElementById(\"constraintquest\").innerHTML = \" Constraints\";\r\n    document.getElementById(\"claim_rewards\").innerHTML = \" Claim rewards\";\r\n    document.getElementById(\"rewardquest\").innerHTML = \" Reward\";\r\n    document.getElementById(\"killdragon_1\").innerHTML = \" Collect 1 dragon heart\";\r\n    document.getElementById(\"amethyst_2\").innerHTML = \" Gather 1 amethyst\";\r\n    document.getElementById(\"survive20min_3\").innerHTML = \"Survive without losing life\";\r\n    document.getElementById(\"treasure_chest_4\").innerHTML = \" Open 5 treasure chests\";\r\n    document.getElementById(\"dont_hit_5\").innerHTML = \" Be peaceful\";\r\n    document.getElementById(\"bread_6\").innerHTML = \" Collect 100 bread in deep winter\";\r\n    document.getElementById(\"winter_7\").innerHTML = \" After 1 day, survive in winter\";\r\n    for (var i = 0; i < 7; i++) document.getElementById(\"claim_reward_\" + i).innerHTML = \"CLAIM REWARD!\";\r\n    document.getElementById(\"quit_chronoquest\").innerHTML = \" QUIT\";\r\n    LANG[INV.HAND] = [\"Ręka\"];\r\n    LANG[INV.GROUND] = [\"Ziemia\", \"Brudna!\"];\r\n    LANG[INV.SAND] = [\"Piasek\", \"Mam go w oczach!\"];\r\n    LANG[INV.WOOD] = [\"Drewno\", \"Nie możesz mieć go wystarczająco!\"];\r\n    LANG[INV.STONE] = [\"Kamień\", \"Także nazywany skałą\"];\r\n    LANG[INV.GOLD] = [\"Złoto\", \"Bądź hojny, daj trochę innym\"];\r\n    LANG[INV.DIAMOND] = [\"Diament\", \"Co z nim zrobisz?\"];\r\n    LANG[INV.AMETHYST] = [\"Ametyst\", \"Jest Fiołkowy jak Lapa\"];\r\n    LANG[INV.FLOUR] = [\"Mąka\", \"Używana w gotowaniu\"];\r\n    LANG[INV.COOKIE] = [\"Ciastko\", \"Przepyszne ciasteczko od babci\", \"Jedzenie: 50\"];\r\n    LANG[INV.CAKE] = [\"Ciasto\", \"Raj dla smakoszy\", \"Jedzenie: 100\"];\r\n    LANG[INV.MEAT] = [\"Surowe mięso\", \"Możesz je upiec w ogniu\", \"Powoduje zatrucie pokarmowe: 10\", \"Jedzenie: 15\"];\r\n    LANG[INV.COOKED_MEAT] = [\"Pieczone mięso\", \"Krwisty stek, proszę\", \"Jedzenie: 35\"];\r\n    LANG[INV.FOODFISH] = [\"Surowa ryba\", \"Myślę, że nadal jest żywa\", \"Powoduje zatrucie pokarmowe: 10\", \"Jedzenie: 18\"];\r\n    LANG[INV.FOODFISH_COOKED] = [\"Pieczona ryba\", \"Z cytryną jest idealna\", \" Jedzenie: 35\"];\r\n    LANG[INV.BREAD] = [\"Chleb\", \"Świetny Francuski chleb\", \"Jest walutą używaną w markecie\", \"Jedzenie: 15\"];\r\n    LANG[INV.SANDWICH] = [\"Kanapka\", \"Smakuje jak kraboburger\", \"Jedzenie: 100\"];\r\n    LANG[INV.CANDY] = [\"Cukierki\", \"Tylko dla dzieci!\", \"Jedzenie: 100\"];\r\n    LANG[INV.SUGAR_CAN] = [\"Laska cukrowa\", \"Spróbuj, jest przepyszna\", \"Jedzenie: 100\"];\r\n    LANG[INV.GARLAND] = [\"Girlanda\", \"Idealna do dekorowania dachów\"];\r\n    LANG[INV.SEED] = [\"Nasionko jagody\", \"Wyrośnie w jagody\", \"Narodziny: 2min\", \"Rośnięcie: 55s\", \"Podlewanie: 3min 20s\", \"Wytrzymałość: 700\", \"Czas życia: 8 dni\"];\r\n    LANG[INV.PLANT] = [\"Jagody\", \"Jagody są pyszne!\", \"Jedzenie: 10\"];\r\n    LANG[INV.WHEAT_SEED] = [\"Nasiono pszenicy\", \"Wyrośnie w pszenicę\", \"Narodziny: 2min\", \"Rośnięcie: 16s\", \"Podlewanie: 2min\", \"Wytrzymałość: 700\", \"Czas życia: 8 dni\"];\r\n    LANG[INV.WILD_WHEAT] = [\"Pszenica\", \"Zamienia się w mąkę jeżeli wrzucisz ją do wiatraka\"];\r\n    LANG[INV.PUMPKIN_SEED] = [\"Nasiono dyni\", \"Wyrośnie w dynię\", \"Narodziny: 2min 40s\", \"Rośnięcie: 2min\", \"Podlewanie: 2min\", \"Wytrzymałość: 700\", \"Czas życia: 8 dni\"];\r\n    LANG[INV.PUMPKIN] = [\"Dynia\", \"Przypomina mi o Halloween\", \"Jedzenie: 30\"];\r\n    LANG[INV.GARLIC_SEED] = [\"Nasionko czosnku\", \"Bardzo niebezpieczne dla wampirów\", \"Obrażenia: 20\", \"Narodziny: 4min\", \"Rośnięcie: 1min 10s\", \"Podlewanie: 1min 40s\", \"Wytrzymałość: 700\", \"Czas życia: 8 dni\"];\r\n    LANG[INV.GARLIC] = [\"Czosnek\", \"Leczy cię i redukuje zimno\", \"Jedzenie: 14\", \"Uzdrawia z biegiem czasu: 30\", \"Efekt: 1\"];\r\n    LANG[INV.THORNBUSH_SEED] = [\"Nasiono kolczastego krzewu\", \"Może zranić twoich wrogów\", \"Obrażenia: 20\", \"Narodziny: 4min\", \"Rośnięcie: 15s\", \"Podlewanie: 3min\", \"Wytrzymałość: 1000\", \"Czas życia: 8 dni\"];\r\n    LANG[INV.THORNBUSH] = [\"Kolczasty krzew\", \"Kłuje!\"];\r\n    LANG[INV.PLOT] = [\"Donica\", \"Naprawdę, użyj jej\", \"Z tym genetycznie modyfikowanym nawozem, twoje rośliny\", \"będą rosły znacznie szybciej i będą potrzebować mniej wody\", \"Wytrzymałość: 2000\"];\r\n    LANG[INV.ICE] = [\"Lód\", \"Użyteczny do robienia ciast i wody\"];\r\n    LANG[INV.SPANNER] = [\"Klucz mechaniczny\", \"Do naprawiania drzwi i kolców\", \"Uszkodzenie: 2\"];\r\n    LANG[INV.FUR_WOLF] = [\"Wilcza skóra\", \"Szczeniaczek? Ale gdzie jest szczeniaczek?!\"];\r\n    LANG[INV.FUR] = [\"Skóra królika\", \"Ten królik był taki słodziutki...\"];\r\n    LANG[INV.SPECIAL_FUR] = [\"Skóra\", \"Jesteś fabryką chleba\"];\r\n    LANG[INV.SPECIAL_FUR_2] = [\"Ciemna skóra\", \"Byłeś gotowy zrobić coś złego\"];\r\n    LANG[INV.FUR_WINTER] = [\"Zimowa skóra\", \"Te zwierzęta chciały się tylko przytulić...\"];\r\n    LANG[INV.SCALES] = [\"Łuski\", \"Pachnie jak ryba!\"];\r\n    LANG[INV.KRAKEN_SKIN] = [\"Skóra krakena\", \"Nie byłeś zbyt przestraszony?\"];\r\n    LANG[INV.FIRE] = [\"Ognisko\", \"Ociepli cię!\", \"Wytrzymałość: 150\", \"Czas życia: 2min\"];\r\n    LANG[INV.BIG_FIRE] = [\"Duże ognisko\", \"Ociepli cię na dłużej!\", \"Wytrzymałość: 400\", \"Czas życia: 6min\"];\r\n    LANG[INV.WORKBENCH] = [\"Stół rzemieślniczy\", \"Użyteczny do stwarzania przedmiotów\"];\r\n    LANG[INV.CORD] = [\"Nić\", \"Używany w tworzeniu czapek i plecaków\"];\r\n    LANG[INV.BLUE_CORD] = [\"Diamentowa nić\", \"Używana w tworzeniu specjalnych czapek\"];\r\n    LANG[INV.CHEST] = [\"Skrzynia\", \"Pozwala ci na przechowywanie przedmiotów\", \"Wytrzymałość: 500\"];\r\n    LANG[INV.SWORD_WOOD] = [\"Drewniany miecz\", \"To coś działa?\", \"Obrażenia: 12\", \"Obrażenia do budowli: 4\"];\r\n    LANG[INV.SWORD] = [\"Kamienny miecz\", \"Bądź miły dla innych\", \"Obrażenia: 19\", \"Obrażenia do budowli: 6\"];\r\n    LANG[INV.SWORD_GOLD] = [\"Złoty miecz\", \"Król lasu\", \"Obrażenia: 22\", \"Obrażenia do budowli: 7\"];\r\n    LANG[INV.SWORD_DIAMOND] = [\"Diamentowy miecz\", \"Możesz poczuć moc\", \"Obrażenia: 24\", \"Obrażenia do budowli: 8\"];\r\n    LANG[INV.PIRATE_SWORD] = [\"Piracki miecz\", \"Ayyyyy!\", \"Dłuższy niż zwykły miecz\", \"Obrażenia: 24\", \"Obrażenia do budowli: 8\"];\r\n    LANG[INV.SWORD_AMETHYST] = [\"Ametystowy miecz\", \"fiołkowy to najpiękniejszy kolor na świecie\", \"Damage: 27\", \"Obrażenia do budowli: 9\"];\r\n    LANG[INV.DRAGON_SWORD] = [\"Smoczy miecz\", \"Bez litości!\", \"Obrażenia: 30\", \"Obrażenia do budowli: 10\"];\r\n    LANG[INV.DRAGON_SPEAR] = [\"Smocza włócznia\", \"Zabij ich wszystkich!\", \"Obrażenia: 22\", \"Obrażenia do budowli: 6\"];\r\n    LANG[INV.PICK_WOOD] = [\"Drewniany kilof\", \"Może wydobywać tylko kamienie i drewno\", \"Obrażenia: 1\"];\r\n    LANG[INV.PICK] = [\"Kamienny kilof\", \"Może wydobywać drewno, kamienie i złoto\", \"Obrażenia: 2\"];\r\n    LANG[INV.PICK_GOLD] = [\"Złoty kilof\", \"Może także wydobywać diamenty\", \"Obrażenia: 3\", \"Obrażenia do budowli: 1\"];\r\n    LANG[INV.PICK_DIAMOND] = [\"Diamentowy kilof\", \"Może wydobywać wszystko\", \"Obrażenia: 4\", \"Obrażenia do budowli: 1\"];\r\n    LANG[INV.PICK_AMETHYST] = [\"Ametystowy kilof\", \"Może wydobywać wszystko. Wygląda fantastycznie!\", \"Obrażenia: 5\", \"Obrażenia do budowli: 1\"];\r\n    LANG[INV.HAMMER] = [\"Kamienny młot\", \"Pomocny w niszczeniu budowli\", \"Nie działa najlepiej na ametyście\", \"Obrażenia: 2\", \"Obrażenia do budowli: 20\"];\r\n    LANG[INV.HAMMER_GOLD] = [\"Złoty młot\", \"Pomocny w niszczeniu budowli\", \"Nie działa najlepiej na ametyście\", \"Obrażenia: 3\", \"Obrażenia do budowli: 30\"];\r\n    LANG[INV.HAMMER_DIAMOND] = [\"Diamentowy młot\", \"Pomocny w niszczeniu budowli\", \"Obrażenia: 4\", \"Obrażenia do budowli: 40\"];\r\n    LANG[INV.HAMMER_AMETHYST] = [\"Ametystowy młot\", \"Pomocny w niszczeniu budowli\", \"Obrażenia: 5\", \"Obrażenia do budowli: 50\"];\r\n    LANG[INV.SUPER_HAMMER] = [\"Super młot\", \"Miałeś kiedyś plan zniszczenia świata?\", \"Obrażenia: 12\", \"Obrażenia do budowli: 70\"];\r\n    LANG[INV.WOOD_SPEAR] = [\"Drewniana włócznia\", \"Jak patyk, ale kłuje.\", \"Obrażenia: 10\", \"Obrażenia do budowli: 2\"];\r\n    LANG[INV.SPEAR] = [\"Kamienna włócznia\", \"Początek ewolucji!\", \"Obrażenia: 14\", \"Obrażenia do budowli: 4\"];\r\n    LANG[INV.GOLD_SPEAR] = [\"Złota włócznia\", \"Uważaj, kłuje!\", \"Obrażenia: 15\", \"Obrażenia do budowli: 5\"];\r\n    LANG[INV.DIAMOND_SPEAR] = [\"Diamentowa włócznia\", \"Jesteś gotowy, aby zabić smoka\", \"Obrażenia: 17\", \"Obrażenia do budowli: 5\"];\r\n    LANG[INV.AMETHYST_SPEAR] = [\"Ametystowa włócznia\", \"Smoki już nie są dla ciebie zagrożeniem\", \"Obrażenia: 18\", \"Obrażenia do budowli: 6\"];\r\n    LANG[INV.SHOVEL] = [\"Kamienna łopata\", \"Kop w ziemi aby zdobyć ziemię, lód i piasek\", \"Możesz także zdobyć minerały\", \"Obrażenia: 2\"];\r\n    LANG[INV.SHOVEL_GOLD] = [\"Złota łopata\", \"Kop w ziemi aby zdobyć ziemię, lód i piasek\", \"Możesz także zdobyć minerały\", \"Obrażenia: 3\", \"Obrażenia do budowli: 1\"];\r\n    LANG[INV.SHOVEL_DIAMOND] = [\"Diamentowa łopata\", \"Kop w ziemi aby zdobyć ziemię, lód i piasek\", \"Możesz także zdobyć minerały\", \"Obrażenia: 4\", \"Obrażenia do budowli: 1\"];\r\n    LANG[INV.SHOVEL_AMETHYST] = [\"Ametystowa łopata\", \"Kop w ziemi aby zdobyć ziemię, lód i piasek\", \"Możesz także zdobyć minerały\", \"Obrażenia: 5\", \"Obrażenia do budowli: 1\"];\r\n    LANG[INV.WOOD_HELMET] = [\"Drewniany hełm\", \"Lepsze niż nic\", \"Obrona przed graczami: 1\", \"Obrona przed zwierzętami: 4\"];\r\n    LANG[INV.STONE_HELMET] = [\"Kamienny hełm\", \"Jesteś gotowy do bitwy!\", \"Obrona przed graczami: 2\", \"Obrona przed zwierzętami: 8\"];\r\n    LANG[INV.GOLD_HELMET] = [\"Złoty hełm\", \"Zwany także hełmem barbarzyńców\", \"Obrona przed graczami: 4\", \"Obrona przed zwierzętami: 13\"];\r\n    LANG[INV.DIAMOND_HELMET] = [\"Diamentowy hełm\", \"Nie przechwalaj się za bardzo\", \"Obrona przed graczami: 5\", \"Obrona przed zwierzętami: 19\"];\r\n    LANG[INV.AMETHYST_HELMET] = [\"Ametystowy hełm\", \"Nie boisz się już niczego\", \"Obrona przed graczami: 6\", \"Obrona przed zwierzętami: 23\"];\r\n    LANG[INV.DRAGON_HELMET] = [\"Smoczy hełm\", \"Zmierzysz się z całym światem\", \"Obrona przed graczami: 8\", \"Obrona przed zwierzętami: 27\"];\r\n    LANG[INV.EXPLORER_HAT] = [\"Czapka odkrywcy\", \"Zwierzęta nie będą zwracały na ciebie uwagi\", \"ale nie rób hałasu!\", \"Ciepło w i poza zimą\"];\r\n    LANG[INV.CHRISTMAS_HAT] = [\"świąteczna czapka\", \"Oh, oh, oh, Wesołych Świąt\", \"Ciepło w i poza zimą\"];\r\n    LANG[INV.ELF_HAT] = [\"Czapka elfa\", \"Nie pozwól się być wykorzystywanym, mały śnieżny elfie!\", \"Ciepło w i poza zimą\"];\r\n    LANG[INV.HOOD] = [\"Kaptur\", \"Jesteś łobuzem\", \"Możesz coś komuś ukraść jeśli\", \"- Jest noc\", \"- Nic przy sobie nie masz\", \"- Jeżeli nic przez chwilę nie dotykałeś\", \"- Nie jesteś blisko ognia\", \"- Twój cel nie jest ubrany w chłopską tunikę\", \"Jest ciepło w i poza zimą\"];\r\n    LANG[INV.EARMUFFS] = [\"Nauszniki\", \"Jakiś inny rodzaj małej czapki.\", \"Ciepło w i poza zimą\"];\r\n    LANG[INV.COAT] = [\"Czapka\", \"Także nazywana płaszczem.\", \"Ciepła w i poza zimą\"];\r\n    LANG[INV.CAP_SCARF] = [\"Szal i czapka\", \"Bardzo wygodna, bardzo ciepła\"];\r\n    LANG[INV.PEASANT] = [\"Chłopska tunika\", \"Twoje rośliny rosną szybciej\", \"Ciepła w i poza zimą\"];\r\n    LANG[INV.WINTER_HOOD] = [\"Zimowy kaptur\", \"Możesz coś komuś ukraść jeśli\", \"- Jest noc\", \"- Nic przy sobie nie masz\", \"- Jeżeli nic przez chwilę nie dotykałeś\", \"- Nie jesteś blisko ognia\", \"- Twój cel nie jest ubrany w tunikę zimowego chłopa\", \"Jest ciepło w i poza zimą\"];\r\n    LANG[INV.WINTER_PEASANT] = [\"Zimowa chłopska tunika\", \"Twoje rośliny rosną szybciej\", \"Ciepło w i poza zimą\"];\r\n    LANG[INV.DIVING_MASK] = [\"Maska do nurkowania\", \"Jesteś szybki w wodzie\", \"Ciepło\", \"Obrona przed graczami: 2, Obrona przed zwierzętami: 8\"];\r\n    LANG[INV.SUPER_DIVING_SUIT] = [\"Strój głębinowy\", \"Jesteś bardzo szybki w wodzie\", \"Ciepło ci w wodzie\", \"Obrona przed graczami: 4, Obrona przed zwierzętami: 16\"];\r\n    LANG[INV.DRAGON_ORB] = [\"Smocza kula\", \"Zdobyta podczas zadania\"];\r\n    LANG[INV.DRAGON_HEART] = [\"Smocze serce\", \"Zamienia cię w ducha po śmierci!\", \"Jesteś duchem na 60 sekund\", \"Znajdź kamień rezurekcyjny\"];\r\n    LANG[INV.GEMME_GREEN] = [\"Zielony kryształ\", \"Nie oszukiwałeś, przysięgasz?\"];\r\n    LANG[INV.GEMME_ORANGE] = [\"Pomarańczowy kryształ\", \"Tylko prawdziwy pirat może go znaleźć!\"];\r\n    LANG[INV.GEMME_BLUE] = [\"Niebieski kryształ\", \"Dla zbyt miłych ludzi\"];\r\n    LANG[INV.CROWN_GREEN] = [\"Zielona korona\", \"Szybko się leczysz\", \"Uzdrawia z biegiem czasu: 40\", \"Obrona przed graczami: 4, Obrona przed zwierzętami: 16\"];\r\n    LANG[INV.CROWN_ORANGE] = [\"Pomarańczowa korona\", \"Nagle poczułeś smak szczęścia\", \"Obrona przed graczami: 4, Obrona przed zwierzętami: 16\"];\r\n    LANG[INV.CROWN_BLUE] = [\"Niebieska korona\", \"Gdy już będziesz martwy, zamienisz się w ducha\", \"Przy okazji stracisz swoją broń i kilof\", \"Obrona przed graczami: 4, Obrona przed zwierzętami: 16\"];\r\n    LANG[INV.BUCKET_FULL] = [\"Wiadro\", \"Również przydatne do napełnienia studni\", \"Jedno wiadro jest jak dwanaście butelek\"];\r\n    LANG[INV.BUCKET_EMPTY] = [\"Puste wiadro\", \"Musisz napełnić to wiadro wodą\"];\r\n    LANG[INV.BOTTLE_FULL] = [\"Butelka\", \"Pozwala pić wodę wszędzie\", \"Woda: 50\"];\r\n    LANG[INV.BOTTLE_EMPTY] = [\"Pusta butelka\", \"Możesz napełnić tą butelkę blisko źródła wody\"];\r\n    LANG[INV.WATERING_CAN] = [\"Pusta konewka\", \"Musisz ją napełnić w źródle wody, aby ją użyć\"];\r\n    LANG[INV.WATERING_CAN_FULL] = [\"Konewka\", \"Pozwala podlewać rośliny\", \"Obrażenia: 1\"];\r\n    LANG[INV.BAG] = [\"Plecak\", \"Więcej miejsca na twoje przedmioty!\"];\r\n    LANG[INV.PAPER] = [\"Papier\", \"Używany w tworzeniu książki\"];\r\n    LANG[INV.BOOK] = [\"Książka\", \"Pozwala znacznie skrócić wytwarzanie\", \"Musisz ją nosić by zadziałała\", \"Uszkodzenie 1\"];\r\n    LANG[INV.BANDAGE] = [\"Bandaż\", \"Szybciej zregeneruj życie\", \"Uzdrawia z biegiem czasu: 30\", \"Efekt: 5\"];\r\n    LANG[INV.LOCK] = [\"Zamek\", \"Pozwala ci zamknąć skrzynię\"];\r\n    LANG[INV.LOCKPICK] = [\"Wytrych\", \"Pozwala ci odblokować jedną skrzynię\"];\r\n    LANG[INV.TOTEM] = [\"Totem\", \"Pozwala ci stworzyć drużynę\", \"Dziel się drzwiami i zamkniętymi skrzyniami\", \"Szkodliwe budynki nie zranią twoich przyjaciół\"];\r\n    LANG[INV.BRIDGE] = [\"Most\", \"Bardzo przydatny w wodzie\", \"Pozwala ci pić bez utonięcia\", \"Chodzisz szybciej w wodzie\"];\r\n    LANG[INV.SIGN] = [\"Tabliczka\", \"Zostaw wiadomość dla innych\", \"Wytrzymałość: 200\"];\r\n    LANG[INV.ROOF] = [\"Dach\", \"Trochę cie ogrzewa i chowa!\"];\r\n    LANG[INV.WELL] = [\"Studnia\", \"Umożliwia napełnienie butelki\", \"Wytrzymałość: 1000\"];\r\n    LANG[INV.WALL] = [\"Drewniany mur\", \"Znasz taniec ścian?\", \"Wytrzymałość: 1000\"];\r\n    LANG[INV.STONE_WALL] = [\"Kamienny mur\", \"Jest to trochę bardziej poważniejsze.\", \"Wytrzymałość: 1500\"];\r\n    LANG[INV.GOLD_WALL] = [\" Złoty mur\", \"Złoto na twoich murach? To trochę krzykliwe.\", \"Wytrzymałość: 2000\"];\r\n    LANG[INV.DIAMOND_WALL] = [\"Diamentowy mur\", \"Jaki błyszczący, uważaj na oczy\", \"Wytrzymałość: 2500\"];\r\n    LANG[INV.AMETHYST_WALL] = [\"Ametystowy mur\", \"Musisz bardzo się bać, aby wyjść!\", \"Wytrzymałość: 3000\"];\r\n    LANG[INV.SPIKE] = [\"Drewniany kolczasty mur\", \"Może uszkodzić wrogów\", \"Obrażenia: 10, Obrażenia po uszkodzeniu: 2\", \"Wytrzymałość: 150\"];\r\n    LANG[INV.STONE_SPIKE] = [\"Kamienny kolczasty mur\", \"Nie chciałbym być twoim wrogiem.\", \"Obrażenia: 20\", \" Obrażenia po uszkodzeniu: 3\", \"Wytrzymałość: 300\"];\r\n    LANG[INV.GOLD_SPIKE] = [\"Złoty kolczasty mur\", \"Jesteśtaki okrutny.\", \"Obrażenia: 30\", \" Obrażenia po uszkodzeniu: 3\", \"Wytrzymałość: 600\"];\r\n    LANG[INV.DIAMOND_SPIKE] = [\"Diamentowy kolczasty mur\", \"Raczej nie lubisz towarzystwa.\", \"Obrażenia: 40\", \"Obrażenia po uszkodzeniu: 4\", \"Wytrzymałość: 1200\"];\r\n    LANG[INV.AMETHYST_SPIKE] = [\"Ametystowy kolczasty mur\", \"Co ci sąsiedzi ci zrobili?\", \"Obrażenia: 50\", \"Obrażenia po uszkodzeniu: 4\", \"Wytrzymałość: 2400\"];\r\n    LANG[INV.WOOD_DOOR] = [\"Drewniane drzwi\", \"Może być otwarte przez ciebie lub przyjaciół\", \"Wytrzymałość: 1000\"];\r\n    LANG[INV.STONE_DOOR] = [\"Kamienne drzwi\", \"Solidne drzwi są bardziej poważne \", \"Wytrzymałość: 1500\"];\r\n    LANG[INV.GOLD_DOOR] = [\"Złote drzwi\", \"Czy odbudowujesz El Dorado?\", \"Wytrzymałość: 2000\"];\r\n    LANG[INV.DIAMOND_DOOR] = [\"Diamentowe drzwi\", \"Dla błyszczącego domu\", \"Wytrzymałość: 2500\"];\r\n    LANG[INV.AMETHYST_DOOR] = [\"Ametystowe drzwi\", \"Czy twój dom to zamknięty sejf?\", \"Wytrzymałość: 3000\"];\r\n    LANG[INV.FURNACE] = [\"Piec\", \"Ogrzewa cię\", \"Zużywa drewno co 5 sekund\", \"Wytrzymałość: 1000\"];\r\n    LANG[INV.WINDMILL] = [\"Młyn\", \"Może produkować mąkę z pszenicy\", \"Przygotowanie mąki zajmuje 5 sekund\", \"Zwraca punkty podczas pracy\", \"Wytrzymałość: 2000\"];\r\n    LANG[INV.BREAD_OVEN] = [\"Piec do chleba\", \"Pozwala na wypiek chleba z mąki\", \"Przygotowanie chleba zajmuje 10 sekund\", \"Zwraca punkty podczas pracy\", \"Wytrzymałość: 2000\"];\r\n    LANG[INV.RESURRECTION] = [\"Kamień rezurekcyjny\", \"To magia\", \"Wskrzesi cię jeśli jesteś duchem\", \"Stracisz swoja broń i kilof\", \"Wytrzymałość: 200\"];\r\n    LANG[TEXT.YOU_CANNOT_JOIN] = \"Nie możesz dołączyć do tego serwera\";\r\n    LANG[TEXT.KICKED] = \"Wyrzucony: \";\r\n    LANG[TEXT.KEY_ALREADY] = \"Twój klucz jest aktualnie używany przez innego gracza\";\r\n    LANG[TEXT.KEY_WRONG] = \"Twój klucz jest nieprawidłowy\";\r\n    LANG[TEXT.OLD_VERSION] = \"Posiadasz starszą wersję, musisz wyczyścić swoją pamięć\";\r\n    LANG[TEXT.NO_MORE_RESOURCES] = \"Nie ma nowych minerałów, zwierząt, i jedzenia\";\r\n    LANG[TEXT.SURVIVED_1DAY] = \"Przeżyłeś 1 dzień\";\r\n    LANG[TEXT.SURVIVED] = \"Przeżyłeś \";\r\n    LANG[TEXT.DAYS] = \" dni\";\r\n    LANG[TEXT.DEAD_SAD] = \"Jesteś martwy ;-;\";\r\n    LANG[TEXT.SPAM_ME] = \"Serwer nie może znaleźć miejsca na spawn! Spamuj przycisk zagraj! Lub wybierz inny serwer...\";\r\n    LANG[TEXT.SPAM_ME2] = \"Serwer jest pełny! Spamuj przycisk zagraj!\";\r\n    LANG[TEXT.EMPTY] = \"Źródło jest puste\";\r\n    LANG[TEXT.INV_FULL] = \"Ekwipunek jest pełny (użyj prawego przycisku myszy, żeby wyrzucić przedmiot)\";\r\n    LANG[TEXT.DEAD] = \" jest martwy\";\r\n    LANG[TEXT.WRONG_TOOL] = \"To nie jest właściwe narzędzie\";\r\n    LANG[TEXT.JOIN_TEAM] = \"Dołączyłeś do drużyny\";\r\n    LANG[TEXT.YOU_DEAD] = \"Jesteś martwy\";\r\n    LANG[TEXT.JOINED_TEAM] = \" dołączył do drużyny\";\r\n    LANG[TEXT.TEAM_DESTROYED] = \"Twoja drużyna została zniszczona\";\r\n    LANG[TEXT.LEFT_TEAM] = \" Opuściłeś drużynę\";\r\n    LANG[TEXT.LEFT_TEAM2] = \" opuścił drużynę\";\r\n    LANG[TEXT.TOKEN] = \"Ktoś ukradł twój żeton :>\";\r\n    LANG[TEXT.CHOOSE] = \"Wybierz serwer\";\r\n    LANG[TEXT.PLAYERS] = \"graczy\";\r\n    LANG[TEXT.TOTAL_PLAYERS] = \"wszystkich graczy\";\r\n    LANG[TEXT.TOTAL_MODE] = \"graczy w tym trybie\";\r\n    LANG[TEXT.COMMING_SOON] = \"Już wkrótce...\";\r\n    document.getElementById(\"nickname_input\").placeholder = \"Przydomek\";\r\n    DIE[0] = [\"Zostałeś zabity bez powodu\"];\r\n    DIE[1] = [\"Umarłeś z głodu, jak nazwa gry wskazuje\"];\r\n    DIE[2] = [\"Zamarzłeś na śmierć. Ale smutne\", \"Masz hipotermię. Następnym razem, zamiast tego spróbuj siedzieć obok ogniska.\"];\r\n    DIE[3] = [\"Gracz zabił cię, mówiąc ci 'git gud.' \", \"Zostałeś zamordowany przez gracza. Nie martw się, ten gracz też zginie, ewentualnie.\"];\r\n    DIE[4] = [\"Byłeś za blisko ogniska i spłonąłeś. Zły pomysł.\", \"Zginąłeś od ognia. Ogień cię rani. Idź i napisz o tym historię.\"];\r\n    DIE[5] = [\"Twoje ciało stało się gniazdem dla pajęczych jaj\", \"Pająk cię zabił. Przynajmniej to nie był królik.\"];\r\n    DIE[6] = [\"Wilk już nie będzie głodował po zjedzeniu cię\", \"To nie są pieski.Wilki nie lubią jak się je głaszcze.\"];\r\n    DIE[7] = [\"Lis był dla ciebie za szybki\", \"Lis zmienił cię w pudło.Od kiedy zwierzęta mają magiczne zdolności?\"];\r\n    DIE[8] = [\"Niedźwiedź chciał się tylko przytulić.\", \"Niedźwiedź był biedny. Nie jest mi przykro.\"];\r\n    DIE[9] = [\"Zostałeś spalony na popiół przez smoka. Jakie to smutne.\", \"Zostałeś spłaszczony przez smoka. Być zmiażdżonym to okropny sposób na śmierć.\"];\r\n    DIE[10] = [\"Wskoczyłeś na kolczasty mur. Niezbyt dobry pomysł...\", \"Zostałeś zabity przez kolczasty mur. Większość ludzi ludzi jest wystarczająco rozsądna, aby nie dotykać spiczastych rzeczy.\"];\r\n    DIE[11] = [\"Nawet duch potrafi umrzeć.\", \"Nie udało ci się dokonać rezurekcji. To jest gra, więc żyjesz po śmierci, więc...\"];\r\n    DIE[12] = [\"Bakterie z twojego surowego mięsa zabiły cię. Ta gra jest zdecydowanie za trudna.\", \"Ty zabiłeś surowe mięso. Ono zabiło ciebię.\"];\r\n    DIE[13] = [\"Zginąłeś z pragnienia. Lepiej pić własny mocz.\"];\r\n    DIE[14] = [\"Czy wiedziałeś, że usta głodomorka są zawsze pod wodą podczas pływania? Teraz wiesz.\"];\r\n    DIE[15] = [\"Nie martw się, zasmakowałeś pirani.\", \"Zabawny fakt: Piranie jedzą ludzi, włączając ciebie.\"];\r\n    DIE[16] = [\"LapaMauve nie planuje abyś mógł zabić krakena\", \"Kraken rozwalił twoją czaszkę.\"];\r\n    DIE[17] = [\"Twoja skóra odpada, słońce cię zabija.\"];\r\n    DIE[18] = [\"Czosnek w twoich kieszeniach  ugotował ci mózg.\"];\r\n    DIE[19] = [\"Jako wampir, nie stałbym blisko ząbków czosnku.\"];\r\n    DIE[20] = [\"Zjadłeś czosnek jako wampir, czego oczekiwałeś?\"];\r\n    DIE[21] = [\"Twoje ciało owija się w cierniste krzaki.Kiedy próbujesz uciec,twoja skóra odpada i twoje serce przestaje bić.\"];\r\n    ZOMBIE_GRUMBLE = \"Uuunnnggg\";\r\n    ZOMBIE_GRUMBLES = [\"Uuunnnggg... Głoduję\", \"Potrzebuję twojego mózgu Uuunnnggg...\", \"Świeże mięso tutaj.. Uuunnnggg\", \"Uuunnnggg... Jesteś pyszny\", \"Uuunnnggg...\", \"Jeść... uuunnnggg...\", \"Czuję krew... Uuunnnggg\"];\r\n};\r\nvar set_portuguese = function () {\r\n    LANG[INV.DRAGON_CUBE] = [\"You feel a great power emanating from this orb\"];\r\n    DIE[22] = [\"This crab, though frightening in nature, pinched your fingertips so hard that you had a heart attack.\"];\r\n    LANG[INV.CRAB_STICK] = [\"Crab sticks\", \"Oh, yeah? Is there crab in the crab sticks?\", \"Food: 20\"];\r\n    LANG[TEXT.BACK_TO_THE_GAME] = \" BACK TO THE GAME\";\r\n    LANG[TEXT.TWITTER] = \" Share on Twitter\";\r\n    LANG[TEXT.FACEBOOK] = \" Share on Facebook\";\r\n    LANG[TEXT.KIT_NEXT] = \"You can buy items on the shop in the next game with your points\";\r\n    LANG[TEXT.POINTS] = \"points\";\r\n    LANG[TEXT.SCORE] = \"Score\";\r\n    LANG[TEXT.KILL] = \"Kill\";\r\n    LANG[TEXT.DAYS_SURVIVED] = \"Days survived\";\r\n    LANG[TEXT.MODE_FREE] = \"Building method: Free. Press G to change\";\r\n    LANG[TEXT.MODE_GRID] = \"Building method: Grid. Press G to change\";\r\n    LANG[INV.CRAB_LOOT] = [\"Crab Claw\", \"Crab claws can also be eaten\", \"Food: 10\"];\r\n    LANG[INV.CRAB_SPEAR] = [\"Crab Spear\", \"Allow you to calm crabs, and heal them\", \"Damage: 14\", \"Building Damage: 4\"];\r\n    LANG[INV.CROWN_CRAB] = [\"Crab Helmet\", \"You are the king of crabs!\", \"Crabs follow you\", \"They can't hit you and you can't hit them\", \"Players Defense: 4\", \"Animals Defense: 13\"];\r\n    LANG[INV.BED] = [\"Bed\", \"Relax in this confortable bed\", \"You are less cold, less thirsty, and less hungry\", \"You will be cured faster\", \"Durability: 400\"];\r\n    document.getElementById(\"typequest\").innerHTML = \"Chrono Quests\";\r\n    document.getElementById(\"timeremainingquest\").innerHTML = \"Time Remaining\";\r\n    document.getElementById(\"constraintquest\").innerHTML = \" Constraints\";\r\n    document.getElementById(\"claim_rewards\").innerHTML = \" Claim rewards\";\r\n    document.getElementById(\"rewardquest\").innerHTML = \" Reward\";\r\n    document.getElementById(\"killdragon_1\").innerHTML = \" Collect 1 dragon heart\";\r\n    document.getElementById(\"amethyst_2\").innerHTML = \" Gather 1 amethyst\";\r\n    document.getElementById(\"survive20min_3\").innerHTML = \"Survive without losing life\";\r\n    document.getElementById(\"treasure_chest_4\").innerHTML = \" Open 5 treasure chests\";\r\n    document.getElementById(\"dont_hit_5\").innerHTML = \" Be peaceful\";\r\n    document.getElementById(\"bread_6\").innerHTML = \" Collect 100 bread in deep winter\";\r\n    document.getElementById(\"winter_7\").innerHTML = \" After 1 day, survive in winter\";\r\n    for (var i = 0; i < 7; i++) document.getElementById(\"claim_reward_\" + i).innerHTML = \"CLAIM REWARD!\";\r\n    document.getElementById(\"quit_chronoquest\").innerHTML = \" QUIT\";\r\n    LANG[INV.HAND] = [\"mão\"];\r\n    LANG[INV.GROUND] = [\"terra\", \"está sujo!\"];\r\n    LANG[INV.SAND] = [\"areia\", \"entrou nos meus olhos!\"];\r\n    LANG[INV.WOOD] = [\"madeira\", \"você não pode pegar o suficiente disso!\"];\r\n    LANG[INV.STONE] = [\"pedra\", \"também chamado rocha\"];\r\n    LANG[INV.GOLD] = [\"ouro\", \"seja generoso, dê para outros\"];\r\n    LANG[INV.DIAMOND] = [\"diamante\", \"o que você irá fazer com isso?\"];\r\n    LANG[INV.AMETHYST] = [\"ametista\", \"é mauve como lapa\"];\r\n    LANG[INV.FLOUR] = [\"farinha\", \"usada na cozinha\"];\r\n    LANG[INV.COOKIE] = [\"biscoito\", \"biscoito da vovó\", \"comida: 50\"];\r\n    LANG[INV.CAKE] = [\"bolo\", \"bolo dos sonhos para gourmets\", \"comida: 100\"];\r\n    LANG[INV.MEAT] = [\"carne crua\", \"você pode cozinhar na fogueira\", \"envenenamento por comida: 10\", \"comida: 15\"];\r\n    LANG[INV.COOKED_MEAT] = [\"carne assada\", \"um mal passado, por favor\", \"comida: 35\"];\r\n    LANG[INV.FOODFISH] = [\"peixe cru\", \"eu acho que ainda está vivo\", \"causa envenenamento por comida: 10\", \"comida: 18\"];\r\n    LANG[INV.FOODFISH_COOKED] = [\"peixe assado\", \"com limão é perfeito\", \"comida: 35\"];\r\n    LANG[INV.BREAD] = [\"pão\", \"um excelente pão francês\", \"é a moeda do mercado\", \"comida: 15\"];\r\n    LANG[INV.SANDWICH] = [\"sanduíche\", \"saboroso com rissol de krabby\", \"comida: 100\"];\r\n    LANG[INV.CANDY] = [\"doces\", \"apenas para crianças!\", \"comida: 100\"];\r\n    LANG[INV.SUGAR_CAN] = [\"cana-de-açúcar\", \"prove, é delicioso!\", \"comida: 100\"];\r\n    LANG[INV.GARLAND] = [\"pisca-pisca\", \"decoração perfeita de telhado\"];\r\n    LANG[INV.SEED] = [\"sementes de berries\", \"cresce como berrie\", \"nasce em: 2min\", \"cresce em: 55s\", \"precisa de água em: 3min 20s\", \"durabilidade: 700\", \"tempo de vida: 8 dias\"];\r\n    LANG[INV.PLANT] = [\"berry\", \"Berry saborosa!\", \"comida: 10\"];\r\n    LANG[INV.WHEAT_SEED] = [\"semente de trigo\", \"cresce como trigo\", \"nasce em: 2min\", \"cresce em: 16s\", \"precisa de água em: 2min\", \"durabilidade: 700\", \"tempo de vida: 8 days\"];\r\n    LANG[INV.WILD_WHEAT] = [\"planta selvagem\", \"vira farinha quando coloca em um moinho de vento\"];\r\n    LANG[INV.PUMPKIN_SEED] = [\"semente de abóbora\", \"cresce como abóbora\", \"nasce em: 2min 40s\", \"cresce em: 2min\", \"precisa de água em: 2min\", \"durabilidade: 700\", \"tempo de vida: 8 dias\"];\r\n    LANG[INV.PUMPKIN] = [\"abóbora\", \"é a lembrança do halloween\", \"comida: 30\"];\r\n    LANG[INV.GARLIC_SEED] = [\"semente de alho\", \"muito perigoso para vampiros\", \"dano: 20\", \"nassce: 4min\", \"cresce em: 1min 10s\", \"precisa de água em: 1min 40s\", \"durabilidade: 700\", \"tempo de vida: 8 dias\"];\r\n    LANG[INV.GARLIC] = [\"alho\", \"cura você e reduz o frio\", \"comida: 14\", \"cura ao longo do tempo: 30\", \"efeito: 1\"];\r\n    LANG[INV.THORNBUSH_SEED] = [\"semente de mato de espinhos\", \"pode dar dano nos seus inimigos\", \"dano: 20\", \"nasce em: 4min\", \"cresce em: 15s\", \"precisa de água em: 3min\", \"durabilidade: 1000\", \"tempo de vida: 8 days\"];\r\n    LANG[INV.THORNBUSH] = [\"mato de espinhos\", \"pica!\"];\r\n    LANG[INV.PLOT] = [\"pote\", \"sério, use isso\", \"com esse GMO fertilize suas plantas\", \"vai crescer mais rápido e com menos água\", \"durabilidade: 2000\"];\r\n    LANG[INV.ICE] = [\"gelo\", \"útil para fazer bolo e água\"];\r\n    LANG[INV.SPANNER] = [\"chave inglesa\", \"para reparar portas, muros e muros com espinho\", \"dano: 2\"];\r\n    LANG[INV.FUR_WOLF] = [\"pele de lobo\", \"cachorro? mas onde está o cachorro?!\"];\r\n    LANG[INV.FUR] = [\"pele de coelho\", \"o coelho era tão fofo...\"];\r\n    LANG[INV.SPECIAL_FUR] = [\"pele pura\", \"você é uma fábrica de pão\"];\r\n    LANG[INV.SPECIAL_FUR_2] = [\"pele negra\", \"você está pronto para fazer algo errado\"];\r\n    LANG[INV.FUR_WINTER] = [\"pele de inverno\", \"ele só queria um abraço\"];\r\n    LANG[INV.SCALES] = [\"escala\", \"é pequeno como peixe!\"];\r\n    LANG[INV.KRAKEN_SKIN] = [\"pele do kraken\", \"você não está com medo?\"];\r\n    LANG[INV.FIRE] = [\"fogueira\", \"esquenta você!\", \"durabilidade: 150\", \"tempo de vida: 2min\"];\r\n    LANG[INV.BIG_FIRE] = [\"fogueira grande\", \"te esquenta por mais tempo!\", \"durabilidade: 400\", \"tempo de vida: 6min\"];\r\n    LANG[INV.WORKBENCH] = [\"mesa de trabalho\", \"muito útil para fazer todos os objetos\"];\r\n    LANG[INV.CORD] = [\"linha\", \"usada para fazer chapéus e mochila\"];\r\n    LANG[INV.BLUE_CORD] = [\"linha de diamante\", \"usada para fazer chapéus especiais\"];\r\n    LANG[INV.CHEST] = [\"baú\", \"permite que você guarde itens\", \"durabilidade: 500\"];\r\n    LANG[INV.SWORD_WOOD] = [\"espada de madeira\", \"isso funciona?\", \"dano: 12\", \"dano em construções: 4\"];\r\n    LANG[INV.SWORD] = [\"espada de pedra\", \"seja legal com outros\", \"dano: 19\", \"dano em construções: 6\"];\r\n    LANG[INV.SWORD_GOLD] = [\"espada de ouro\", \"rei da floresta\", \"dano: 22\", \"dano em construções: 7\"];\r\n    LANG[INV.SWORD_DIAMOND] = [\"espada de diamante\", \"você pode sentir o poder\", \"dano: 24\", \"dano em construções: 8\"];\r\n    LANG[INV.PIRATE_SWORD] = [\"espada de pirata\", \"AYYYYY!\", \"alcança mais distância que a espada normal\", \"dano: 24\", \"dano em construções: 8\"];\r\n    LANG[INV.SWORD_AMETHYST] = [\"espada de ametista\", \"mauve é a cor mais bonita do mundo\", \"dano: 27\", \"dano em construções: 9\"];\r\n    LANG[INV.DRAGON_SWORD] = [\"espada do dragão\", \"sem piedade!\", \"dano: 30\", \"dano em construções: 10\"];\r\n    LANG[INV.DRAGON_SPEAR] = [\"lança do dragão\", \"mate todos eles!\", \"dano: 22\", \"dano em construções: 6\"];\r\n    LANG[INV.PICK_WOOD] = [\"picareta de madeira\", \"pode coletar apenas madeira e pedra\", \"dano: 1\"];\r\n    LANG[INV.PICK_STONE] = [\"picareta de pedra\", \"pode coletar madeira, pedra e ouro\", \"dano: 2\"];\r\n    LANG[INV.PICK_GOLD] = [\"picareta de ouro\", \"pode coletar diamante\", \"dano: 3\", \"dano em construções: 1\"];\r\n    LANG[INV.PICK_DIAMOND] = [\"picareta de diamante\", \"pode coletar tudo\", \"dano: 4\", \"dano em construções: 1\"];\r\n    LANG[INV.PICK_AMETHYST] = [\"picareta de ametista\", \"pode coletar tudo, parece fantastico!\", \"dano: 5\", \"dano em construções: 1\"];\r\n    LANG[INV.HAMMER] = [\"martelo de pedra\", \"útil para destruir construções\", \"não funciona bem no diamante e na ametista\", \"dano: 2\", \"dano em construções: 20\"];\r\n    LANG[INV.HAMMER_GOLD] = [\"martelo de ouro\", \"útil para destruir construções\", \"não funciona bem na ametista\", \"dano: 3\", \"dano em construções: 30\"];\r\n    LANG[INV.HAMMER_DIAMOND] = [\"martelo de diamante\", \"útil para destruir construções\", \"dano: 4\", \"dano em construções: 40\"];\r\n    LANG[INV.HAMMER_AMETHYST] = [\"martelo de ametista\", \"útil para destruir construções\", \"dano: 5\", \"dano em construções: 50\"];\r\n    LANG[INV.SUPER_HAMMER] = [\"super martelo\", \"você planeja destruir o mundo?\", \"dano: 12\", \"dano em construções: 70\"];\r\n    LANG[INV.WOOD_SPEAR] = [\"lança de madeira\", \"parece um graveto de madeira mas pica.\", \"dano: 10\", \"dano em construções: 2\"];\r\n    LANG[INV.SPEAR] = [\"lança de pedra\", \"o começo da evolução!\", \"dano: 14\", \"dano em construções: 4\"];\r\n    LANG[INV.GOLD_SPEAR] = [\"lança de ouro\", \"cuidado, pica!\", \"dano: 15\", \"dano em construções: 5\"];\r\n    LANG[INV.DIAMOND_SPEAR] = [\"lança de diamante\", \"você está pronto para matar um dragão\", \"Dano: 17\", \"dano em construções: 5\"];\r\n    LANG[INV.AMETHYST_SPEAR] = [\"lança de ametista\", \"dragões não te amedrontam\", \"Dano: 18\", \"dano em construções: 6\"];\r\n    LANG[INV.SHOVEL] = [\"pá de pedral\", \"cave o chão para pegar terra, areia e gelo\", \"você também pode pegar minerais\", \"dano: 2\"];\r\n    LANG[INV.SHOVEL_GOLD] = [\"pá de ouro\", \"cave o chão para pegar terra, areia e gelo\", \"você também pode pegar minerais\", \"dano: 3\", \"dano em construções: 1\"];\r\n    LANG[INV.SHOVEL_DIAMOND] = [\"pá de diamante\", \"cave o chão para pegar terra, areia e gelo\", \"você também pode pegar minerais\", \"dano: 4\", \"dano em construções: 1\"];\r\n    LANG[INV.SHOVEL_AMETHYST] = [\"pá de ametista\", \"cave o chão para pegar terra, areia e gelo\", \"você também pode pegar minerais\", \"dano: 5\", \"dano em construções: 1\"];\r\n    LANG[INV.WOOD_HELMET] = [\"capacete de madeira\", \"melhor que nada\", \"defesa de jogadores: 1\", \"defesa de animais: 4\"];\r\n    LANG[INV.STONE_HELMET] = [\"capacete de pedra\", \"você está pronto para a batalha!\", \"defesa de jogadores: 2\", \"Animals Defense: 8\"];\r\n    LANG[INV.GOLD_HELMET] = [\"capacete de ouro\", \"AKA o capacete dos selvagens\", \"defesa de jogadores: 4\", \"defesa de animais: 13\"];\r\n    LANG[INV.DIAMOND_HELMET] = [\"capacete de diamante\", \"não se precipite tanto\", \"defesa de jogadores: 5\", \"defesa de animais: 19\"];\r\n    LANG[INV.AMETHYST_HELMET] = [\"capacete de ametista\", \"você não tem medo de mais nada\", \"defesa de jogadores: 6\", \"defesa de animais: 23\"];\r\n    LANG[INV.DRAGON_HELMET] = [\"capacete do dragão\", \"você vai conquistar o mundo\", \"defesa de jogadores: 8\", \"defesa de animais: 27\"];\r\n    LANG[INV.EXPLORER_HAT] = [\"chapéu de explorador\", \"animais não vão te atacar\", \"mas não faça barulho!\", \"quente fora da água\"];\r\n    LANG[INV.CHRISTMAS_HAT] = [\"gorro de natal\", \"Oh, oh, oh, feliz natal\", \"quente fora da água e neve\"];\r\n    LANG[INV.ELF_HAT] = [\"chapéu de elfo\", \"não deixe-se ser explorado, seu pequeno elfo de neve!\", \"quente fora da água e neve\"];\r\n    LANG[INV.HOOD] = [\"capuz\", \"você é um trapaceiro\", \"você pode roubar alguém apenas se\", \"1) é de noite\", \"2)você não está segurando nada\", \"3) se você n foi tocado por 5 segundos\", \"4) você não está perto de uma fogueira\", \"5) seu alvo não está com equipamento camponês\", \"quente fora da água e na neve\"];\r\n    LANG[INV.EARMUFFS] = [\"protetor de orelhas\", \"algum tipo de chapka pequena.\", \"quente fora da água e neve\"];\r\n    LANG[INV.COAT] = [\"Chapka\", \"também chamado de casaco.\", \"esquenta fora da água e na neve\", \"muito quente\"];\r\n    LANG[INV.CAP_SCARF] = [\"Chapéu de inverno\", \"Muito confortável\", \"Muito quente\"];\r\n    LANG[INV.PEASANT] = [\"túnica\", \"suas plantas crescem rápido\", \"quente fora da água e na neve\"];\r\n    LANG[INV.WINTER_HOOD] = [\"capuz de inferno\", \"você só pode roubar alguém se\", \"é de noite\", \"-você não está segurando nada\", \"- se você não foi tocado por 4 segundos\", \"- você não está perto de uma fogueira\", \"-seu alvo não está com equipamento de camponês de inverno\", \"esquenta fora da água e na neve\"];\r\n    LANG[INV.WINTER_PEASANT] = [\"camponês de inverno\", \"suas plantas crescem rápido\", \"quente fora da água e na neve\"];\r\n    LANG[INV.DIVING_MASK] = [\"máscara de mergulho\", \"você é rápido na água\", \"quente na água\", \"defesa de jogadores: 2, defesa de animais: 8\"];\r\n    LANG[INV.SUPER_DIVING_SUIT] = [\"super máscara de mergulho\", \"você é muito rápido na água\", \"quente na água\", \"defesa de jogadores: 4, defesa de animais: 16\"];\r\n    LANG[INV.DRAGON_ORB] = [\"esfera do dragão\", \"dado na questt\"];\r\n    LANG[INV.DRAGON_HEART] = [\"coração de dragão\", \"torna você num fantasmas na morte!\", \"você é um fantasma por 60 segundos\", \"ache uma pedra da ressurreição\"];\r\n    LANG[INV.GEMME_GREEN] = [\"pedra verde\", \"você não vai trapacear, promete?\"];\r\n    LANG[INV.GEMME_ORANGE] = [\"pedra laranja\", \"apenas um pirata de verdade pode achar-lo!\"];\r\n    LANG[INV.GEMME_BLUE] = [\"pedra azul\", \"para pessoas muito gentis\"];\r\n    LANG[INV.CROWN_GREEN] = [\"coroa verde\", \"você se regenera muito rápido\", \"regenera ao longo do tempo: 40\", \"defesa de jogadores: 4, defesa de animais: 16\"];\r\n    LANG[INV.CROWN_ORANGE] = [\"coroa laranja\", \"de repente você se sente muito sortudo\", \"defesa de jogadores: 4, defesa de animais: 16\"];\r\n    LANG[INV.CROWN_BLUE] = [\"coroa azul\", \"quando você morrer, você vira um fantasma\", \"você perderá sua arma\", \"defesa de jogadores: 4, defesa de animais: 16\"];\r\n    LANG[INV.BUCKET_FULL] = [\"balde\", \"útil para encher um poço\", \"um balde equivale a doze garrafas\"];\r\n    LANG[INV.BUCKET_EMPTY] = [\"balde vazio\", \"você precisa encher esse balde perto de uma fonte de água\"];\r\n    LANG[INV.BOTTLE_FULL] = [\"garrafa\", \"permite que você beba água em qualquer lugar\", \"água: 50\"];\r\n    LANG[INV.BOTTLE_EMPTY] = [\"garrafa vazia\", \"você pode encher essa garrafa perto de uma fonte de água\"];\r\n    LANG[INV.WATERING_CAN] = [\"regador vazio\", \"você deve enche-lo com uma fonte de água para usa-lo\"];\r\n    LANG[INV.WATERING_CAN_FULL] = [\"regador\", \"permite regar as plantas\", \"dano: 1\"];\r\n    LANG[INV.BAG] = [\"mochila\", \"mais espaço para seus itens!\"];\r\n    LANG[INV.PAPER] = [\"papel\", \"usado para fazer o livro\"];\r\n    LANG[INV.BOOK] = [\"livro\", \"permite reduzir consideradamente o tempo de construções\", \"mas precisa está equipado para fucionar\", \"dano: 1\"];\r\n    LANG[INV.BANDAGE] = [\"bandagem\", \"recupera sua vida mais rapidamente\", \"Heal over time: 30\", \"Effect: 5\"];\r\n    LANG[INV.LOCK] = [\"fechadura\", \"permite você trancar seu baú\"];\r\n    LANG[INV.LOCKPICK] = [\"chave\", \"permite destrancar um baú\"];\r\n    LANG[INV.TOTEM] = [\"Totem\", \"permite você criar um time\", \"compartilha portas e baús\", \"edifício prejudicial não quer machucar seu amigo\"];\r\n    LANG[INV.BRIDGE] = [\"ponte\", \"muito útil na água\", \"permite você beber sem se afogar\", \"anda rápido na água\"];\r\n    LANG[INV.SIGN] = [\"placa\", \"deixe uma mensagem para outros\", \"durabilidade: 200\"];\r\n    LANG[INV.ROOF] = [\"telhado\", \"esconde você um pouco e te esquenta!\"];\r\n    LANG[INV.WELL] = [\"poço\", \"permite encher garrafas\", \"durabilidade: 1000\"];\r\n    LANG[INV.WALL] = [\"muro de madeira\", \"você sabia que o muro dança?\", \"durabilidade: 1000\"];\r\n    LANG[INV.STONE_WALL] = [\"muro de pedra\", \"é um pocu mais sério.\", \"durabilidade: 1500\"];\r\n    LANG[INV.GOLD_WALL] = [\"muro de ouro\", \"ouro nos seus muros? é muito chamativo.\", \"durabilidade: 2000\"];\r\n    LANG[INV.DIAMOND_WALL] = [\"muro de diamante\", \"tão brilhoso, veja seus olhos\", \"durabilidade: 2500\"];\r\n    LANG[INV.AMETHYST_WALL] = [\"muro de ametista\", \"você está muito assustado de sair!\", \"durabilidade: 3000\"];\r\n    LANG[INV.SPIKE] = [\"espiga de madeira\", \"pode dar dano nos seus inimigos\", \"dano: 10, dano no acerto: 2\", \"durabilidade: 150\"];\r\n    LANG[INV.STONE_SPIKE] = [\"espiga de pedra\", \"eu não quero ser seu inimigo.\", \"dano: 20\", \"dano no acerto: 3\", \"durabilidade: 300\"];\r\n    LANG[INV.GOLD_SPIKE] = [\"espiga de ouro\", \"você é tão cruel.\", \"dano: 30\", \"dano no acerto: 3\", \"durabilidade: 600\"];\r\n    LANG[INV.DIAMOND_SPIKE] = [\"espiga de diamante\", \"você não gosta de ter companhia.\", \"dano: 40\", \"dano no acerto: 4\", \"durabilidade: 1200\"];\r\n    LANG[INV.AMETHYST_SPIKE] = [\"espiga de ametista\", \"o que diabos seu vizinhos fizeram para você?\", \"dano: 50\", \"dano no acerto: 4\", \"durabilidade: 2400\"];\r\n    LANG[INV.WOOD_DOOR] = [\"porta de madeira\", \"pode ser aberta ou fechada por você ou seus amigos\", \"durabilidade: 1000\"];\r\n    LANG[INV.STONE_DOOR] = [\"porta de pedra\", \"uma porta mais forte é mais sério\", \"durabilidade: 1500\"];\r\n    LANG[INV.GOLD_DOOR] = [\"porta de ouro\", \"você está re-construindo o el dorado?\", \"durabilidade: 2000\"];\r\n    LANG[INV.DIAMOND_DOOR] = [\"porta de diamante\", \"para uma casa brilhante\", \"durabilidade: 2500\"];\r\n    LANG[INV.AMETHYST_DOOR] = [\"porta de ametista\", \"é a sua casa um lugar trancado seguro?\", \"durabilidade: 3500\"];\r\n    LANG[INV.FURNACE] = [\"fornalha\", \"esquenta você\", \"consumi madeira em todo 5 segundos\", \"durabilidade: 1000\"];\r\n    LANG[INV.WINDMILL] = [\"moinho de vento\", \"pode produzir farinha do trigo\", \"demora 5 segundos para fazer farinha\", \"dá pontos ao trabalhar\", \"durabilidade: 2000\"];\r\n    LANG[INV.BREAD_OVEN] = [\"forno de pão\", \"permite fazer pão feito de farinha\", \"demora 10 segundos para fazer pão\", \"dá pontos ao trabalhar\", \"durabilidade: 2000\"];\r\n    LANG[INV.RESURRECTION] = [\"pedra da ressurreição\", \"é mágico\", \"te ressuscita se você for um fantasmas\", \"você vai perder sua arma\", \"durabilidade 200: 200\"];\r\n    LANG[TEXT.YOU_CANNOT_JOIN] = \"você não pode entrar no servidor\";\r\n    LANG[TEXT.KICKED] = \"kickado: \";\r\n    LANG[TEXT.KEY_ALREADY] = \"sua chave está em uso por outra pessoa\";\r\n    LANG[TEXT.KEY_WRONG] = \"sua chave está errada\";\r\n    LANG[TEXT.OLD_VERSION] = \"você tem uma versão velha, limpe seu cache\";\r\n    LANG[TEXT.NO_MORE_RESOURCES] = \"não tem mais recursos\";\r\n    LANG[TEXT.SURVIVED_1DAY] = \"você sobreviveu 1 dia\";\r\n    LANG[TEXT.SURVIVED] = \"você sobreviveu \";\r\n    LANG[TEXT.DAYS] = \" dias\";\r\n    LANG[TEXT.DEAD_SAD] = \"você está morto ;-;\";\r\n    LANG[TEXT.SPAM_ME] = \"servidor não pôde achar um local de spawn! spam o botão de play!\";\r\n    LANG[TEXT.SPAM_ME2] = \"servidor está cheio! spam o botão de play!\";\r\n    LANG[TEXT.EMPTY] = \"não tem recursos\";\r\n    LANG[TEXT.INV_FULL] = \"inventário está cheio (botão direito para deletar itens)\";\r\n    LANG[TEXT.DEAD] = \" está morto\";\r\n    LANG[TEXT.WRONG_TOOL] = \"essa não é a ferramenta certa\";\r\n    LANG[TEXT.JOIN_TEAM] = \"você entrou no time\";\r\n    LANG[TEXT.YOU_DEAD] = \"você está morto\";\r\n    LANG[TEXT.JOINED_TEAM] = \"entrou no time\";\r\n    LANG[TEXT.TEAM_DESTROYED] = \"seu time foi destruido\";\r\n    LANG[TEXT.LEFT_TEAM] = \"você saiu do time\";\r\n    LANG[TEXT.LEFT_TEAM2] = \" saiu do time\";\r\n    LANG[TEXT.TOKEN] = \"alguém roubou sua ficha :>\";\r\n    LANG[TEXT.CHOOSE] = \"escolha um servidor\";\r\n    LANG[TEXT.PLAYERS] = \"jogadores\";\r\n    LANG[TEXT.TOTAL_PLAYERS] = \"jogadores totais\";\r\n    LANG[TEXT.TOTAL_MODE] = \"jogadores nesse modo\";\r\n    LANG[TEXT.COMMING_SOON] = \"Coming soon...\";\r\n    document.getElementById(\"nickname_input\").placeholder = \"Apelido\";\r\n    DIE[0] = [\"você morreu sem motivo\"];\r\n    DIE[1] = [\"você morreu de fome, como o jogo diz\"];\r\n    DIE[2] = [\"você morreu de frio. tão triste\", \"você pegou hipotermia na próxima vez, tente sentar numa fogueira em vez disso.\"];\r\n    DIE[3] = [\"um jogador te matou dizendo a você para matar..'\", \"você foi morto por um jogador. não se preocupe, aquele jogador morrerá também, eventualmente.\"];\r\n    DIE[4] = [\"você ficou muito perto de uma fogueira e queimou até a morte. má ideia.\", \"você morreu por um incêndio. fogueira te machuca. vá escrever uma história sobre isso.\"];\r\n    DIE[5] = [\"seu corpo vai virar um ninho para ovos de aranhas\", \"uma aranha te matou. pelo menos não era um coelho.\"];\r\n    DIE[6] = [\"o lobo não vão morrer de fome depois te te comer\", \"eles não são cachorros. lobos não gostam de ser que nem animais de estimação.\"];\r\n    DIE[7] = [\"a raposa era muito rápida para você\", \"a raposa te tornou uma caixa. desde quando os animais tem poderes mágicos?\"];\r\n    DIE[8] = [\"o urso só queria um abraço.\", \" o urso era muito nu. eu não sinto muito.\"];\r\n    DIE[9] = [\"você foi queimado por um dragão. tão triste..\", \"você foi esmagado por um dragão.. ser esmagado é uma maneira horrível de morrer.\"];\r\n    DIE[10] = [\"você pulou em um muro com espinhos. não é uma boa ideia...\", \"você foi morto por um muro com espinhos. muitas pessoas são sensíveis o bastante para não tocar em coisas pontudas.\"];\r\n    DIE[11] = [\"até fantasmas podem morrer.\", \"você falhou para ser ressuscitado. This is a game, so you go to life after you die, so...\"];\r\n    DIE[12] = [\"uma bactéria da sua comida crua te matou esse jogo é definitivamente muito díficil.\", \"você matou a carne crua. a carne crua te matou também.\"];\r\n    DIE[13] = [\"você morreu de sede. melhor beber sua própria urina.\"];\r\n    DIE[14] = [\"você sabia que você morre afogado? agora você sabe.\"];\r\n    DIE[15] = [\"não se preocupe, as piranhas acham você saboroso.\", \"fato engraçado: Piranhas comem pessoas. incluindo você.\"];\r\n    DIE[16] = [\"LapaMauve não planeja você matar o kraken\", \"um kraken comeu seu esqueleto.\"];\r\n    DIE[17] = [\"sua pele caindo aos pedaços, o sol te matou.\"];\r\n    DIE[18] = [\"o alho amarzenado em seus bolsos ferveu seu cérebro.\"];\r\n    DIE[19] = [\"como vampiro, não chegue perto do alho.\"];\r\n    DIE[20] = [\"você comeu alho como vampiro, o que você esperava?\"];\r\n    DIE[21] = [\"seu corpo se enroscou nos espinhos. quando você tenta escapar, sua pele sai e seu coração para de bater.\"];\r\n    ZOMBIE_GRUMBLE = \"Uuunnnggg\";\r\n    ZOMBIE_GRUMBLES = [\"Uuunnnggg... estou morrendo de fome\", \"preciso do seu cerébro Uuunnnggg...\", \"carne fresca aqui... Uuunnnggg\", \"Uuunnnggg... você parece saboroso\", \"Uuunnnggg...\", \"Eat... uuunnnggg...\", \"consigo sentir o cheiro de sangue... Uuunnnggg\"];\r\n};\r\nvar set_german = function () {\r\n    LANG[INV.DRAGON_CUBE] = [\"You feel a great power emanating from this orb\"];\r\n    DIE[22] = [\"This crab, though frightening in nature, pinched your fingertips so hard that you had a heart attack.\"];\r\n    LANG[INV.CRAB_STICK] = [\"Crab sticks\", \"Oh, yeah? Is there crab in the crab sticks?\", \"Food: 20\"];\r\n    LANG[TEXT.BACK_TO_THE_GAME] = \" BACK TO THE GAME\";\r\n    LANG[TEXT.TWITTER] = \" Share on Twitter\";\r\n    LANG[TEXT.FACEBOOK] = \" Share on Facebook\";\r\n    LANG[TEXT.KIT_NEXT] = \"You can buy items on the shop in the next game with your points\";\r\n    LANG[TEXT.POINTS] = \"points\";\r\n    LANG[TEXT.SCORE] = \"Score\";\r\n    LANG[TEXT.KILL] = \"Kill\";\r\n    LANG[TEXT.DAYS_SURVIVED] = \"Days survived\";\r\n    LANG[TEXT.MODE_FREE] = \"Building method: Free. Press G to change\";\r\n    LANG[TEXT.MODE_GRID] = \"Building method: Grid. Press G to change\";\r\n    LANG[INV.CRAB_LOOT] = [\"Crab Claw\", \"Crab claws can also be eaten\", \"Food: 10\"];\r\n    LANG[INV.CRAB_SPEAR] = [\"Crab Spear\", \"Allow you to calm crabs, and heal them\", \"Damage: 14\", \"Building Damage: 4\"];\r\n    LANG[INV.CROWN_CRAB] = [\"Crab Helmet\", \"You are the king of crabs!\", \"Crabs follow you\", \"They can't hit you and you can't hit them\", \"Players Defense: 4\", \"Animals Defense: 13\"];\r\n    LANG[INV.BED] = [\"Bed\", \"Relax in this confortable bed\", \"You are less cold, less thirsty, and less hungry\", \"You will be cured faster\", \"Durability: 400\"];\r\n    document.getElementById(\"typequest\").innerHTML = \"Chrono Quests\";\r\n    document.getElementById(\"timeremainingquest\").innerHTML = \"Time Remaining\";\r\n    document.getElementById(\"constraintquest\").innerHTML = \" Constraints\";\r\n    document.getElementById(\"claim_rewards\").innerHTML = \" Claim rewards\";\r\n    document.getElementById(\"rewardquest\").innerHTML = \" Reward\";\r\n    document.getElementById(\"killdragon_1\").innerHTML = \" Collect 1 dragon heart\";\r\n    document.getElementById(\"amethyst_2\").innerHTML = \" Gather 1 amethyst\";\r\n    document.getElementById(\"survive20min_3\").innerHTML = \"Survive without losing life\";\r\n    document.getElementById(\"treasure_chest_4\").innerHTML = \" Open 5 treasure chests\";\r\n    document.getElementById(\"dont_hit_5\").innerHTML = \" Be peaceful\";\r\n    document.getElementById(\"bread_6\").innerHTML = \" Collect 100 bread in deep winter\";\r\n    document.getElementById(\"winter_7\").innerHTML = \" After 1 day, survive in winter\";\r\n    for (var i = 0; i < 7; i++) document.getElementById(\"claim_reward_\" + i).innerHTML = \"CLAIM REWARD!\";\r\n    document.getElementById(\"quit_chronoquest\").innerHTML = \" QUIT\";\r\n    LANG[INV.HAND] = [\"Hand\"];\r\n    LANG[INV.GROUND] = [\"Boden\", \"Dreckig!\"];\r\n    LANG[INV.SAND] = [\"Sand\", \"Ich habe es in meine Augen bekommen!\"];\r\n    LANG[INV.WOOD] = [\"Holz\", \"Du kannst niemals zu viel haben!\"];\r\n    LANG[INV.STONE] = [\"Stein\", \"Auch Fels gennant\"];\r\n    LANG[INV.GOLD] = [\"Gold\", \"Sei großzügig, gib anderen etwas ab \"];\r\n    LANG[INV.DIAMOND] = [\"Diamant\", \"Was wirst du daraus machen?\"];\r\n    LANG[INV.AMETHYST] = [\"Amethyst\", \"Es ist Mauve farbend, genauso wie Lapa\"];\r\n    LANG[INV.FLOUR] = [\"Mehl\", \"wird fürs Backen gebraucht\"];\r\n    LANG[INV.COOKIE] = [\"Keks\", \"Ein prächtiger Keks von Großmutter\", \"Essen: 50\"];\r\n    LANG[INV.CAKE] = [\"Ein Kuchen\", \"Perfekter Kuchen für Gourmets\", \"Essen: 100\"];\r\n    LANG[INV.MEAT] = [\"rohes Fleisch\", \"Du kannst es mit einem Feuer braten\", \"verursacht Lebensmittelvergiftung: 10\", \"Essen: 15\"];\r\n    LANG[INV.COOKED_MEAT] = [\"gebratenes Fleisch\", \"Einmal blutiges Steak, bitte\", \"Essen: 35\"];\r\n    LANG[INV.FOODFISH] = [\"roher Fisch\", \"Ich glaube es lebt noch\", \"verursacht Lebensmittelvergiftung: 10\", \"Essen: 18\"];\r\n    LANG[INV.FOODFISH_COOKED] = [\"gebratener Fisch\", \"Mit einer Zitrone ist es perfekt\", \"Essen: 35\"];\r\n    LANG[INV.BREAD] = [\"Brot\", \"Ein vorzügliches französiches Brot\", \"Es wird als Währung im Markt benutzt\", \"Essen: 15\"];\r\n    LANG[INV.SANDWICH] = [\"Sandwich\", \"Schmeckt wie Krabbenburger\", \"Essen: 100\"];\r\n    LANG[INV.CANDY] = [\"Süßigkeiten\", \"Nur für Kinder!\", \"Essen: 100\"];\r\n    LANG[INV.SUGAR_CAN] = [\"Zuckerstange\", \"Probier mal, es schmeckt hervorragend\", \"Essen: 100\"];\r\n    LANG[INV.GARLAND] = [\"Girlande\", \"perfekter Schmuck für Dächer\"];\r\n    LANG[INV.SEED] = [\"Beeren Saatgut\", \"Wird eine Beere\", \"Entstehung: 2min\", \"Wachstum: 55s\", \"Wasserbedarf: 3min 20s\", \"Haltbarkeit: 700\", \"Lebenszeit: 8 Tage\"];\r\n    LANG[INV.PLANT] = [\"Beere\", \"Beeren lecker!\", \"Essen: 10\"];\r\n    LANG[INV.WHEAT_SEED] = [\"Weizen Saatgut\", \"Wird zu Weizen\", \"Entstehung: 2min\", \"Wachstum: 16s\", \"Wasserbedarf: 2min\", \"Haltbarkeit: 700\", \"Lebenszeit: 8 Tage\"];\r\n    LANG[INV.WILD_WHEAT] = [\"Wildes Weizen\", \"Wenn es in eine Windmühle platziert wird, wird es zu Mehl\"];\r\n    LANG[INV.PUMPKIN_SEED] = [\"Kürbis Saatgut\", \"Wird zu Kürbis\", \"Entstehung: 2min 40s\", \"Wachstum: 2min\", \"Wasserbedarf: 2min\", \"Haltbarkeit: 700\", \"Lebenszeit: 8 Tage\"];\r\n    LANG[INV.PUMPKIN] = [\"Kürbis\", \"Es erinnert mich an Halloween\", \"Essen: 30\"];\r\n    LANG[INV.GARLIC_SEED] = [\"Knoblauch Saatgut\", \"Sehr gefährlich für Vampire\", \"Schaden: 20\", \"Entstehung: 4min\", \"Wachstum: 1min 10s\", \"Wasserbedarf: 1min 40s\", \"Haltbarkeit: 700\", \"Lebenszeit: 8 Tage\"];\r\n    LANG[INV.GARLIC] = [\"Knoblauch\", \"Heilt dich und hält die Kälte fern\", \"Essen: 14\", \"Heilung über Zeit: 30\", \"Effekt: 1\"];\r\n    LANG[INV.THORNBUSH_SEED] = [\"Dornenbusch Saatgut\", \"Kann deinen Gegnern Schaden zufügen\", \"Schaden: 20\", \"Entstehung: 4min\", \"Wachstum: 15s\", \"Wasserbedarf: 3min\", \"Haltbarkeit: 1000\", \"Lebenszeit: 8 Tage\"];\r\n    LANG[INV.THORNBUSH] = [\"Dornenbusch\", \"Es sticht!\"];\r\n    LANG[INV.PLOT] = [\"Topf\", \"Ernsthaft, benutz es\", \"Mit diesem GMO dünger deine Pflanzen\", \"lässt sie schneller wachsen und reduziert den Wasserverbrauch\", \"Haltbarkeit: 2000\"];\r\n    LANG[INV.ICE] = [\"Eis\", \"Nützlich um Kuchen und Wasser herzustellen\"];\r\n    LANG[INV.SPANNER] = [\"Schraubenschlüssel\", \"Es kann Wände, Türen und Stacheln reparieren\", \"Schaden: 2\"];\r\n    LANG[INV.FUR_WOLF] = [\"Wolfsfell\", \"Welpe? Aber wo ist der Welpe?!\"];\r\n    LANG[INV.FUR] = [\"Hasenfell\", \"Der Hase war so süß...\"];\r\n    LANG[INV.SPECIAL_FUR] = [\"Klares Fell\", \"Du bist eine Brotfabrik\"];\r\n    LANG[INV.SPECIAL_FUR_2] = [\"Dunkles Fell\", \"Du machst dich bereit etwas falsches zu vollführen\"];\r\n    LANG[INV.FUR_WINTER] = [\"Winter Fell\", \"Diese Tiere wollten nur eine Umarmung...\"];\r\n    LANG[INV.SCALES] = [\"Schuppen\", \"Es riecht wie Fisch!\"];\r\n    LANG[INV.KRAKEN_SKIN] = [\"Kraken Haut\", \"Warst du nicht zu ängstlich?\"];\r\n    LANG[INV.FIRE] = [\"Lagerfeuer\", \"Wärmt dich!\", \"Haltbarkeit: 150\", \"Lebensdauer: 2min\"];\r\n    LANG[INV.BIG_FIRE] = [\"Großes Lagerfeuer\", \"Wärmt dich länger!\", \"Haltbarkeit: 400\", \"Lebensdauer: 6min\"];\r\n    LANG[INV.WORKBENCH] = [\"Werkbank\", \"Sehr nützlich um allerlei Sachen herzustellen\"];\r\n    LANG[INV.CORD] = [\"Faden\", \"Wird benötigt um Mützen und Rucksäcke herzustellen  \"];\r\n    LANG[INV.BLUE_CORD] = [\"Diamant Faden\", \"Wird für spezielle Mützen gebraucht\"];\r\n    LANG[INV.CHEST] = [\"Truhe\", \"Damit kannst du Gegenstände lagern\", \"Haltbarkeit: 500\"];\r\n    LANG[INV.SWORD_WOOD] = [\"Holzschwert\", \"Funktioniert das?\", \"Schaden: 12\", \"Schaden an Gebäuden: 4\"];\r\n    LANG[INV.SWORD] = [\"Steinschwert\", \"Sei nett zu Anderen\", \"Schaden: 19\", \"Schaden an Gebäuden: 6\"];\r\n    LANG[INV.SWORD_GOLD] = [\"Goldschwert\", \"König des Waldes\", \"Schaden: 22\", \"Schaden an Gebäuden: 7\"];\r\n    LANG[INV.SWORD_DIAMOND] = [\"Diamantschwert\", \"Du kannst die Kraft spüren\", \"Schaden: 24\", \"Schaden an Gebäuden: 8\"];\r\n    LANG[INV.PIRATE_SWORD] = [\"Piratenschwert\", \"Ayyyyy!\", \"Hat eine höhere Reichweite als ein normales Schwert\", \"Schaden: 24\", \"Schaden an Gebäuden: 8\"];\r\n    LANG[INV.SWORD_AMETHYST] = [\"Amethystschwert\", \"Mauve ist die schönste Farbe der Welt\", \"Schaden: 27\", \"Schaden an Gebäuden: 9\"];\r\n    LANG[INV.DRAGON_SWORD] = [\"Drachenschwert\", \"Keine Gnade!\", \"Schaden: 30\", \"Schaden an Gebäuden: 10\"];\r\n    LANG[INV.DRAGON_SPEAR] = [\"Drachenspeer\", \"Töte sie alle!\", \"Schaden: 22\", \"Schaden an Gebäuden: 6\"];\r\n    LANG[INV.PICK_WOOD] = [\"Holzspitzhacke\", \"Kann nur Holz und Stein abbauen\", \"Schaden: 1\"];\r\n    LANG[INV.PICK] = [\"Steinspitzhacke\", \"Kann Holz, Stein und Gold abbauen\", \"Schaden: 2\"];\r\n    LANG[INV.PICK_GOLD] = [\"Goldspitzhacke\", \"Kann auch Diamanten abbauen\", \"Schaden: 3\", \"Schaden an Gebäuden: 1\"];\r\n    LANG[INV.PICK_DIAMOND] = [\"Diamantspitzhacke\", \"Kann alles abbauen\", \"Schaden: 4\", \"Schaden an Gebäuden: 1\"];\r\n    LANG[INV.PICK_AMETHYST] = [\"Amethystspitzhacke\", \"Kann alles abbauen, sieht außerdem gut aus!\", \"Schaden: 5\", \"Schaden an Gebäuden: 1\"];\r\n    LANG[INV.HAMMER] = [\"Steinhammer\", \"Nützlich um Gebäude zu zerstören\", \"Funktioniert nicht gut gegen Diamant oder Amethyst\", \"Schaden: 2\", \"Schaden an Gebäuden: 20\"];\r\n    LANG[INV.HAMMER_GOLD] = [\"Goldhammer\", \"Nützlich um Gebäude zu zerstören\", \"Funktioniert nicht gut gegen Amethyst\", \"Schaden: 3\", \"Schaden an Gebäuden: 30\"];\r\n    LANG[INV.HAMMER_DIAMOND] = [\"Diamanthammer\", \"Nützlich um Gebäude zu zerstören\", \"Schaden: 4\", \"Schaden an Gebäuden: 40\"];\r\n    LANG[INV.HAMMER_AMETHYST] = [\"Amethysthammer\", \"Nützlich um Gebäude zu zerstören\", \"Schaden: 5\", \"Schaden an Gebäuden: 50\"];\r\n    LANG[INV.SUPER_HAMMER] = [\"Superhammer\", \"Willst du die Welt zerstören?\", \"Schaden: 12\", \"Schaden an Gebäuden: 70\"];\r\n    LANG[INV.WOOD_SPEAR] = [\"Holzspeer\", \"Wie ein Stock, nur mit dem Unterschied, dass es sticht.\", \"Schaden: 10\", \"Schaden an Gebäuden: 2\"];\r\n    LANG[INV.SPEAR] = [\"Steinspeer\", \"Der Anfang der Evolution!\", \"Schaden: 14\", \"Schaden an Gebäuden: 4\"];\r\n    LANG[INV.GOLD_SPEAR] = [\"Goldspeer\", \"Pass auf, es sticht!\", \"Schaden: 15\", \"Schaden an Gebäuden: 5\"];\r\n    LANG[INV.DIAMOND_SPEAR] = [\"Diamantspeer\", \"Du bist bereit einen Drachen zu töten\", \"Schaden: 17\", \"Schaden an Gebäuden: 5\"];\r\n    LANG[INV.AMETHYST_SPEAR] = [\"AmethystSpeer\", \"Drachen jagen dir keine Angst mehr ein\", \"Schaden: 18\", \"Schaden an Gebäuden: 6\"];\r\n    LANG[INV.SHOVEL] = [\"Steinschaufel\", \"Grab herum um Dreck, Eis und Sand zu bekommen\", \"Du kannst auch Mineralien bekommen\", \"Schaden: 2\"];\r\n    LANG[INV.SHOVEL_GOLD] = [\"Goldschaufel\", \"Grab herum um Dreck, Eis und Sand zu bekommen\", \"Du kannst auch Mineralien bekommen\", \"Schaden: 3\", \"Schaden an Gebäuden: 1\"];\r\n    LANG[INV.SHOVEL_DIAMOND] = [\"Diamantschaufel\", \"Grab herum um Dreck, Eis und Sand zu bekommen\", \"Du kannst auch Mineralien bekommen\", \"Schaden: 4\", \"Schaden an Gebäuden: 1\"];\r\n    LANG[INV.SHOVEL_AMETHYST] = [\"Amethystschaufel\", \"Grab herum um Dreck, Eis und Sand zu bekommen\", \"Du kannst auch Mineralien bekommen\", \"Schaden: 5\", \"Schaden an Gebäuden: 1\"];\r\n    LANG[INV.WOOD_HELMET] = [\"Holzhelm\", \"Besser als nichts\", \"Verteidigung gegen Spieler: 1\", \"Verteidigung gegen Tiere: 4\"];\r\n    LANG[INV.STONE_HELMET] = [\"Steinhelm\", \"Du bist bereit zu kämpfen!\", \"Verteidigung gegen Spieler: 2\", \"Verteidigung gegen Tiere: 8\"];\r\n    LANG[INV.GOLD_HELMET] = [\"Goldhelm\", \"AKA Der Helm der Unbarmherzigen\", \"Verteidigung gegen Spieler: 4\", \"Verteidigung gegen Tiere: 13\"];\r\n    LANG[INV.DIAMOND_HELMET] = [\"Diamanthelm\", \"Gib nicht zu viel an\", \"Verteidigung gegen Spieler: 5\", \"Verteidigung gegen Tiere: 19\"];\r\n    LANG[INV.AMETHYST_HELMET] = [\"Amethysthelm\", \"Du musst vor nichts mehr angst haben\", \"Verteidigung gegen Spieler: 6\", \"Verteidigung gegen Tiere: 23\"];\r\n    LANG[INV.DRAGON_HELMET] = [\"Drachenhelm\", \"Du wirst die Welt erobern\", \"Verteidigung gegen Spieler: 8\", \"Verteidigung gegen Tiere: 27\"];\r\n    LANG[INV.EXPLORER_HAT] = [\"Erkunderhut\", \"Tiere beachten dich nicht mehr\", \"mach aber keine Geräusche!\", \"Hält dich warm außerhalb von Wasser und Winter\"];\r\n    LANG[INV.CHRISTMAS_HAT] = [\"Weihnachtshut\", \"Oh, oh, oh, fröhliche Weihnachten\", \"Hält dich warm außerhalb von Wasser und Winter\"];\r\n    LANG[INV.ELF_HAT] = [\"Elfenhut\", \"Lass dich nicht ausnutzen, du kleiner Schneeelf!\", \"Hält dich warm außerhalb von Wasser und Winter\"];\r\n    LANG[INV.HOOD] = [\"Kapuze\", \"Du bist ein Schurke\", \"Du kannst jemand bestehlen solange:\", \"1) Es nacht ist\", \"2) Du nichts trägst\", \"3) dich niemand für acht Sekunden berührt hat\", \"4) Du nicht in der Nähe eines Feuers bist\", \"5) Dein Ziel keine Bauernkleidung trägt\", \"Hält dich warm außerhalb von Wasser und Winter\"];\r\n    LANG[INV.EARMUFFS] = [\"Ohrwärmer\", \"Eine Art kleiner chapka.\", \"Hält dich warm außerhalb von Wasser und Winter\"];\r\n    LANG[INV.COAT] = [\"Chapka\", \"Auch Mantel genannt.\", \"Hält dich warm außerhalb von Wasser und Winter\"];\r\n    LANG[INV.CAP_SCARF] = [\"Winterschaal und Kappe\", \"Sehr angenehm\", \"Sehr Warm\"];\r\n    LANG[INV.PEASANT] = [\"Bauer\", \"Deine Pflanzen wachsen schneller\", \"Hält dich warm außerhalb von Wasser und Winter\"];\r\n    LANG[INV.WINTER_HOOD] = [\"Winterkapuze\", \"Du bist ein Wilder Schurke\", \"Du kannst jemand bestehlen solange:\", \"1) Es nacht ist\", \"2) Du nichts trägst\", \"3) dich niemand für vier Sekunden berührt hat\", \"4) Du nicht in der Nähe eines Feuers bist\", \"5) Dein Ziel keine Winterbauernkleidung trägt\", \"Hält dich warm außerhalb von Wasser und Winter\"];\r\n    LANG[INV.WINTER_PEASANT] = [\"Winterbauern\", \"Deine Pflanzen wachsen deutlich schneller\", \"Hält dich warm außerhalb von Wasser und Winter\"];\r\n    LANG[INV.DIVING_MASK] = [\"Tauchermaske\", \"Du bist schneller im Wasser\", \"Hält dich warm im Wasser\", \"Verteidigung gegen Spieler: 2, Verteidigung gegen Tiere: 8\"];\r\n    LANG[INV.SUPER_DIVING_SUIT] = [\"Supertauchermaske\", \"Du bist sehr schnell im Wasser\", \"Hält dich warm im Wasser\", \"Verteidigung gegen Spieler: 4, Verteidigung gegen Tiere: 16\"];\r\n    LANG[INV.DRAGON_ORB] = [\"Drachenkugel\", \"Erhalten bei abschließung der Quest\"];\r\n    LANG[INV.DRAGON_HEART] = [\"Drachenherz\", \"Verwandelt dich in einen Geist, sobald du stirbst!\", \"Du bist für 60 Sekunden ein Geist\", \"Finde ein Wiederbelebungsstein.\"];\r\n    LANG[INV.GEMME_GREEN] = [\"Grüner Edelstein\", \"Du hast nicht gemogelt, versprochen?\"];\r\n    LANG[INV.GEMME_ORANGE] = [\"Orangener Edelstein\", \"Nur ein echter Pirat findet ihn!\"];\r\n    LANG[INV.GEMME_BLUE] = [\"Blauer Edelstein\", \"Für sehr nette Leute\"];\r\n    LANG[INV.CROWN_GREEN] = [\"Grüne Krone\", \"Du heilst dich selbst sehr schnell\", \"Heilung über Zeit: 40\", \"Verteidigung gegen Spieler: 4, Verteidigung gegen Tiere: 16\"];\r\n    LANG[INV.CROWN_ORANGE] = [\"Orangene Krone\", \"Du fühlst dich plötzlich als hättest du mehr Glück\", \"Verteidigung gegen Spieler: 4, Verteidigung gegen Tiere: 16\"];\r\n    LANG[INV.CROWN_BLUE] = [\"Blaue Krone\", \"Sobald du stirbst wirst du ein Geist\", \"Du wirst allerdings dein Schwert und deine Spitzhacke verlieren\", \"Verteidigung gegen Spieler: 4, Verteidigung gegen Tiere: 16\"];\r\n    LANG[INV.BUCKET_FULL] = [\"Eimer\", \"Nützlich um einen Brunnen zu füllen\", \"Ein Eimer ist vergleichbar mit zwölf Flaschen\"];\r\n    LANG[INV.BUCKET_EMPTY] = [\"Leerer Eimer\", \"Du musst den Eimer in der Nähe einer Wasserquelle füllen\"];\r\n    LANG[INV.BOTTLE_FULL] = [\"Flasche\", \"Erlaubt dir überall Wasser zu trinken\", \"Wasser: 50\"];\r\n    LANG[INV.BOTTLE_EMPTY] = [\"Leere Flasche\", \"Du musst die Flasche in der Nähe einer Wasserquelle füllen\"];\r\n    LANG[INV.WATERING_CAN] = [\"Leere Gießkanne\", \"Du musst es mit einer Wasserquelle füllen\"];\r\n    LANG[INV.WATERING_CAN_FULL] = [\"Gießkanne\", \"Erlaubt das wässern von Pflanzen\", \"Schaden: 1\"];\r\n    LANG[INV.BAG] = [\"Rucksack\", \"Mehr Platz im Inventar!\"];\r\n    LANG[INV.PAPER] = [\"Papier\", \"Wird fürs Büchermachen verwendet\"];\r\n    LANG[INV.BOOK] = [\"Buch\", \"Reduziert die benötigte Zeit beim herstellen von Gegenständen\", \"Muss in der Hand gehalten werden um den Effekt zu nutzen\", \"Schaden: 1\"];\r\n    LANG[INV.BANDAGE] = [\"Verband\", \"Heile dich schneller\", \"Heilung über Zeit: 30\", \"Effekt: 5\"];\r\n    LANG[INV.LOCK] = [\"Schloss\", \"Erlaubt dir deine Truhe zu verschließen\"];\r\n    LANG[INV.LOCKPICK] = [\"Dietrich\", \"Erlaubt dir eine verschlossene Truhe zu öffnen\"];\r\n    LANG[INV.TOTEM] = [\"Totem\", \"Erlaubt dir ein Team zu gründen\", \"Teile Türen und Truhen\", \"verletzende Strukturen schaden deinen Freunden nicht mehr\"];\r\n    LANG[INV.BRIDGE] = [\"Brücke\", \"Sehr nützlich über Wasser\", \"Es erlaubt dir zu trinken ohne zu ertrinken\", \"lässt dich schneller auf dem Wasser laufen\"];\r\n    LANG[INV.SIGN] = [\"Schild\", \"Hinterlasse eine Nachricht für andere hier\", \"Haltbarkeit: 200\"];\r\n    LANG[INV.ROOF] = [\"Dach\", \"Versteckt dich ein wenig und hält warm dabei!\"];\r\n    LANG[INV.WELL] = [\"Brunnen\", \"Erlaubt dir deine Flasche zu füllen, eine mobile Wasserquelle\", \"Haltbarkeit: 1000\"];\r\n    LANG[INV.WALL] = [\"Holzwand\", \"Kennst du den Wandtanz?\", \"Haltbarkeit: 1000\"];\r\n    LANG[INV.STONE_WALL] = [\"Steinwand\", \"Es sieht ein wenig Ernsthafter aus.\", \"Haltbarkeit: 1500\"];\r\n    LANG[INV.GOLD_WALL] = [\"Goldwand\", \"Gold an deiner Wand? Es leuchtet ein wenig.\", \"Haltbarkeit: 2000\"];\r\n    LANG[INV.DIAMOND_WALL] = [\"Diamantwand\", \"So leuchtend, pass auf deine Augen auf\", \"Haltbarkeit: 2500\"];\r\n    LANG[INV.AMETHYST_WALL] = [\"Amethystwand\", \"Du musst dich wirklich fürchten raus zu gehen!\", \"Haltbarkeit: 3000\"];\r\n    LANG[INV.SPIKE] = [\"Holzstacheln\", \"Kann deine Gegner verletzen\", \"Schaden: 10, Schaden beim Angreifen: 2\", \"Haltbarkeit: 150\"];\r\n    LANG[INV.STONE_SPIKE] = [\"Steinstacheln\", \"Ich würde lieber nicht dein Gegner sein.\", \"Schaden: 20\", \"Schaden beim Angreifen: 3\", \"Haltbarkeit: 300\"];\r\n    LANG[INV.GOLD_SPIKE] = [\"Goldstacheln\", \"Du bist grausam.\", \"Schaden: 30\", \"Schaden beim Angreifen: 3\", \"Haltbarkeit: 600\"];\r\n    LANG[INV.DIAMOND_SPIKE] = [\"Diamantstacheln\", \"Du magst Gesellschaft nicht.\", \"Schaden: 40\", \"Schaden beim Angreifen: 4\", \"Haltbarkeit: 1200\"];\r\n    LANG[INV.AMETHYST_SPIKE] = [\"Amethyststacheln\", \"Was zur Hölle haben deine Nachbarn dir angetan?\", \"Schaden: 50\", \"Schaden beim Angreifen: 4\", \"Haltbarkeit: 2400\"];\r\n    LANG[INV.WOOD_DOOR] = [\"Holztür\", \"Kann von dir oder deinen Freunden geöffnet werden\", \"Haltbarkeit: 1000\"];\r\n    LANG[INV.STONE_DOOR] = [\"Steintür\", \"Eine stärkere Tür ist ernsthafter\", \"Haltbarkeit: 1500\"];\r\n    LANG[INV.GOLD_DOOR] = [\"Goldtür\", \"Baust du el dorado?\", \"Haltbarkeit: 2000\"];\r\n    LANG[INV.DIAMOND_DOOR] = [\"Diamanttür\", \"Für ein scheinendes Haus\", \"Haltbarkeit: 2500\"];\r\n    LANG[INV.AMETHYST_DOOR] = [\"Amethysttür\", \"Ist dein Haus ein verschlossener Safe?\", \"Haltbarkeit: 3500\"];\r\n    LANG[INV.FURNACE] = [\"Ofen\", \"Wärmt dich\", \"Es verbraucht alle 5 Sekunden eine Einheit Holz\", \"Haltbarkeit: 1000\"];\r\n    LANG[INV.WINDMILL] = [\"Windmühle\", \"Kann mit Weizen, Mehl herstellen\", \"Es braucht 5 Sekunden um Mehl herzustellen\", \"Gibt dir Punkte während es arbeitet\", \"Haltbarkeit: 2000\"];\r\n    LANG[INV.BREAD_OVEN] = [\"Brotofen\", \"Erlaubt dir mit Mehl, Brot herzustellen\", \"Es braucht 5 Sekunden um Brot herzustellen\", \"Gibt dir Punkte während es arbeitet\", \"Haltbarkeit: 2000\"];\r\n    LANG[INV.RESURRECTION] = [\"Wiederbelebungsstein\", \"Es ist Magie\", \"Wiederbelebt dich, wenn du ein Geist bist\", \"Du wirst deine Waffe und Spitzhacke verlieren\", \"Haltbarkeit: 200\"];\r\n    LANG[TEXT.YOU_CANNOT_JOIN] = \"Du kannst diesem Server nicht beitreten\";\r\n    LANG[TEXT.KICKED] = \"Gekickt: \";\r\n    LANG[TEXT.KEY_ALREADY] = \"Dein Schlüssel wurde bereits von jemand anderem benutzt\";\r\n    LANG[TEXT.KEY_WRONG] = \"Dein Schlüssel ist falsch\";\r\n    LANG[TEXT.OLD_VERSION] = \"Deine Version ist veraltet, säubere dein Cache\";\r\n    LANG[TEXT.NO_MORE_RESOURCES] = \"Es gibt keine neuen Ressourcen\";\r\n    LANG[TEXT.SURVIVED_1DAY] = \"Du hast einen Tag überlebt\";\r\n    LANG[TEXT.SURVIVED] = \"Du hast überlebt \";\r\n    LANG[TEXT.DAYS] = \" Tage\";\r\n    LANG[TEXT.DEAD_SAD] = \"Du bist gestorben ;-;\";\r\n    LANG[TEXT.SPAM_ME] = \"Server kann kein Spawnplatz finden! Drücke immer wieder auf spielen!\";\r\n    LANG[TEXT.SPAM_ME2] = \"Server ist voll! Drücke immer wieder auf spielen!\";\r\n    LANG[TEXT.EMPTY] = \"Ressource ist leer\";\r\n    LANG[TEXT.INV_FULL] = \"Dein Inventar ist voll (rechts-klick um Gegenstände zu entfernen)\";\r\n    LANG[TEXT.DEAD] = \" ist gestorben\";\r\n    LANG[TEXT.WRONG_TOOL] = \"Das ist nicht das richtige Werkzeug\";\r\n    LANG[TEXT.JOIN_TEAM] = \"Du bist einem Team beigetreten\";\r\n    LANG[TEXT.YOU_DEAD] = \"Du bist gestorben\";\r\n    LANG[TEXT.JOINED_TEAM] = \" ist dem Team beigetreten\";\r\n    LANG[TEXT.TEAM_DESTROYED] = \"Dein Team wurde zerstört\";\r\n    LANG[TEXT.LEFT_TEAM] = \"Du hast das Team verlassen\";\r\n    LANG[TEXT.LEFT_TEAM2] = \" hat das Team verlassen\";\r\n    LANG[TEXT.TOKEN] = \"Jemand hat dein Token gestohlen :>\";\r\n    LANG[TEXT.CHOOSE] = \"Suche dir ein Server aus\";\r\n    LANG[TEXT.PLAYERS] = \"Spieler\";\r\n    LANG[TEXT.TOTAL_PLAYERS] = \"alle Spieler\";\r\n    LANG[TEXT.TOTAL_MODE] = \"Spieler in diesem Modus\";\r\n    LANG[TEXT.COMMING_SOON] = \"Bald verfügbar...\";\r\n    document.getElementById(\"nickname_input\").placeholder = \"Spitzname\";\r\n    DIE[0] = [\"Du wurdest ohne Grund getötet\"];\r\n    DIE[1] = [\"Du bist verhungert, wie der Name des Spiels andeutet\"];\r\n    DIE[2] = [\"Du bist erfroren. Zu schade\", \"Du bist an Unterkühlung gestorben. Versuche nächstes Mal zu einem Feuer zu gehen .\"];\r\n    DIE[3] = [\"Ein Spieler hat dich getötet, während er dir gesagt hat 'git gud.'\", \"Du wurdest von einem Spieler ermordet, mach dir keine Sorgen, er wird wahrscheinlich auch sterben .\"];\r\n    DIE[4] = [\"Du bist zu nah ans Feuer gegangen und zu tode gebrannt. Schlechte Idee.\", \"Du wurdest von einem Feuer umgebracht. Feuer tut weh. Schreib eine Geschichte darüber.\"];\r\n    DIE[5] = [\"Dein Körper wird zu einem Spinnennest\", \"Eine Spinne hat dich getötet. Zumindest war es kein Hase.\"];\r\n    DIE[6] = [\"Dieser Wolf wird nicht mehr verhungern\", \"Sie sind keine Hunde. Wölfe mögen es nicht gestreichelt zu werden.\"];\r\n    DIE[7] = [\"Der Fuchs war zu schnell für dich\", \"Der Fuchs hat dich in eine Box verwandelt. Seit wann haben Tiere magische Kräfte?\"];\r\n    DIE[8] = [\"Der Bär wollte nur eine Umarmung.\", \"Der Bär war zu viel zu ertragen. Es tut mir nicht leid.\"];\r\n    DIE[9] = [\"Du wurdest von einem Drachen knusprig gebraten. Zu schade.\", \"Du wurdest von einem Drachen erdrückt. Zerquetscht zu werden ist ein schrecklicher Weg zu sterben.\"];\r\n    DIE[10] = [\"Du bist in eine Stachelwand gesprungen. Keine gute Idee...\", \"Du wurdest von einer Stachelwand getötet. Die meisten Leute sind sensibel genug keine spitzen Sachen anzufassen.\"];\r\n    DIE[11] = [\"Sogar Geister können sterben.\", \"Du hast es nicht geschafft wiederbelebt zu werden. Das ist ein Spiel, also lebst du nachdem du stirbst...\"];\r\n    DIE[12] = [\"Ein Bakterium von deinem rohen Fleisch hat dich getötet. Das Spiel ist definitiv zu schwierig.\", \"Du hast das rohe Fleisch getötet. Es hat dich ebenfalls getötet.\"];\r\n    DIE[13] = [\"Du bist verdurstet. Solltest lieber deinen eigenen Urin trinken.\"];\r\n    DIE[14] = [\"Wusstest du, dass dein Mund beim Schwimmen immer unterm Wasser ist? Jetzt weißt du es.\"];\r\n    DIE[15] = [\"Mach dir keine Sorge, der Piranha findet dich lecker.\", \"Nebenbei: Piranhas essen Menschen. Dich mit eingeschlossen.\"];\r\n    DIE[16] = [\"LapaMauve plant nicht, dass du den Kraken töten kannst\", \"Ein Kraken hat deinen Schädel zertrümmert.\"];\r\n    DIE[17] = [\"Deine Haut fällt auseinander, die Sonne hat dich umgebracht.\"];\r\n    DIE[18] = [\"Knoblauch in deiner Tasche hat dein Gehirn gebraten \"];\r\n    DIE[19] = [\"Stehe als ein Vampir nicht neben den Knoblauchnelken.\"];\r\n    DIE[20] = [\"Du hast als ein Vampir Knoblauch gegessen, was hast du erwartet?\"];\r\n    DIE[21] = [\"Dein Körper ist von einem Dornenbusch umgeben.Während du versuchst zu entkommen löst sich deine Haut von deinem Körper und dein Herz hört auf zu schlagen.\"];\r\n    ZOMBIE_GRUMBLE = \"Uuunnnggg\";\r\n    ZOMBIE_GRUMBLES = [\"Uuunnnggg...Ich verhungere...\", \"Brauche dein Gehirn... Uuunnnggg...\", \"Hier gibt es frisches Fleisch... Uuunnnggg\", \"Uuunnnggg...Du bist lecker\", \"Uuunnnggg...\", \"Essen... uuunnnggg...\", \"Ich rieche Blut... Uuunnnggg\"];\r\n};\r\nvar set_french = function () {\r\n    LANG[INV.DRAGON_CUBE] = [\"You feel a great power emanating from this orb\"];\r\n    DIE[22] = [\"This crab, though frightening in nature, pinched your fingertips so hard that you had a heart attack.\"];\r\n    LANG[INV.CRAB_STICK] = [\"Crab sticks\", \"Oh, yeah? Is there crab in the crab sticks?\", \"Food: 20\"];\r\n    LANG[TEXT.BACK_TO_THE_GAME] = \" RETOUR AU JEU\";\r\n    LANG[TEXT.TWITTER] = \" Partage sur Twitter\";\r\n    LANG[TEXT.FACEBOOK] = \" Partage sur Facebook\";\r\n    LANG[TEXT.KIT_NEXT] = \"Tu peux acheter des objets dans le magasin à ta prochaine partie avec tes points\";\r\n    LANG[TEXT.POINTS] = \"points\";\r\n    LANG[TEXT.SCORE] = \"Score\";\r\n    LANG[TEXT.KILL] = \"Tués\";\r\n    LANG[TEXT.DAYS_SURVIVED] = \"Jours survécus\";\r\n    LANG[TEXT.MODE_FREE] = \"Mode de construction: Libre. Appuie sur G pour changer\";\r\n    LANG[TEXT.MODE_GRID] = \"Mode de construction: Grille. Appuie sur G pour changer\";\r\n    LANG[INV.CRAB_LOOT] = [\"Pince de crabe\", \"Les pinces de crabes peuvent aussi être mangées\", \"Food: 10\"];\r\n    LANG[INV.CRAB_SPEAR] = [\"Lance en crabe\", \"Te permet de soigner les crabes et de les calmer\", \"Donne un bonus de +10 degats quand elle est portée\", \"avec un casque un crabe sur un Crab King\", \"Damage: 14\", \"Building Damage: 4\"];\r\n    LANG[INV.CROWN_CRAB] = [\"Casque en crabe\", \"Tu es le Roi des Crabes!\", \"Les crabes te suivent\", \"Ils ne peuvent pas te frapper et toi non plus\", \"Players Defense: 4\", \"Animals Defense: 13\"];\r\n    LANG[INV.BED] = [\"Lit\", \"Repose-toi dans ce lit douillet\", \"Tu as moins froid, moins faim et moins soif\", \"Tu te régénères plus vite\", \"Durability: 400\"];\r\n    document.getElementById(\"typequest\").innerHTML = \"Chrono Quêtes\";\r\n    document.getElementById(\"timeremainingquest\").innerHTML = \"Temps Restant\";\r\n    document.getElementById(\"constraintquest\").innerHTML = \" Contraintes\";\r\n    document.getElementById(\"claim_rewards\").innerHTML = \" Résultat\";\r\n    document.getElementById(\"rewardquest\").innerHTML = \" Récompenses\";\r\n    document.getElementById(\"killdragon_1\").innerHTML = \" Collecte 1 Cœur de dragon dans la cave\";\r\n    document.getElementById(\"amethyst_2\").innerHTML = \" Récolte 1 améthyste\";\r\n    document.getElementById(\"survive20min_3\").innerHTML = \"Survis sans perdre de vie\";\r\n    document.getElementById(\"treasure_chest_4\").innerHTML = \" Ouvre 5 coffres au trésor\";\r\n    document.getElementById(\"dont_hit_5\").innerHTML = \" Sois pacifique\";\r\n    document.getElementById(\"bread_6\").innerHTML = \" Cuisine 100 pains en hiver, seul et sans retour en arrière\";\r\n    document.getElementById(\"winter_7\").innerHTML = \" Après 1 jour, survis en hiver\";\r\n    for (var i = 0; i < 7; i++) document.getElementById(\"claim_reward_\" + i).innerHTML = \"RÉCOMPENSE!\";\r\n    document.getElementById(\"quit_chronoquest\").innerHTML = \" QUITTER\";\r\n    LANG[INV.HAND] = [\"Main\"];\r\n    LANG[INV.GROUND] = [\"Terre\", \"C'est sale!\"];\r\n    LANG[INV.SAND] = [\"Sable\", \"J'en ai dans les yeux\"];\r\n    LANG[INV.WOOD] = [\"Bois\", \"Tu n'en auras jamais trop!\"];\r\n    LANG[INV.STONE] = [\"Pierre\", \"Aussi appelée roche\"];\r\n    LANG[INV.GOLD] = [\"Or\", \"Sois généreux, donne en aux autres\"];\r\n    LANG[INV.DIAMOND] = [\"Diamant\", \"Comme tes yeux! wesh\"];\r\n    LANG[INV.AMETHYST] = [\"Améthyste\", \"C'est Mauve comme Lapa\"];\r\n    LANG[INV.FLOUR] = [\"Farine\", \"Utile pour la cuisine\"];\r\n    LANG[INV.COOKIE] = [\"Cookie\", \"Un somptueux cookie de Grand-Mère\", \"Nourriture: 50\"];\r\n    LANG[INV.CAKE] = [\"Gâteau\", \"Pour les fins gourmets\", \"Nourriture: 100\"];\r\n    LANG[INV.MEAT] = [\"Viande crue\", \"Tu peux la cuisiner avec du feu\", \"Intoxication: 10\", \"Nourriture: 15\"];\r\n    LANG[INV.COOKED_MEAT] = [\"Viande cuite\", \"Un steak saignant, s'il vous plait\", \"Nourriture: 35\"];\r\n    LANG[INV.FOODFISH] = [\"Poisson cru\", \"Je crois que c'est encore vivant\", \"Intoxication: 10\", \"Nourriture: 18\"];\r\n    LANG[INV.FOODFISH_COOKED] = [\"Poisson cuit\", \"Avec du citron, c'est parfait\", \"Nourriture: 35\"];\r\n    LANG[INV.BREAD] = [\"Baguette\", \"Une tradition s'il vous plait\", \"C'est la monnaie du marché\", \"Nourriture: 15\"];\r\n    LANG[INV.SANDWICH] = [\"Sandwich\", \"Le Jambon Beurre vaincra\", \"Nourriture: 100\"];\r\n    LANG[INV.CANDY] = [\"Bonbons\", \"Il n'y a pas de dentiste ici\", \"Nourriture: 100\"];\r\n    LANG[INV.SUGAR_CAN] = [\"Canne à sucre\", \"Sans sucre de canne\", \"Nourriture: 20\"];\r\n    LANG[INV.GARLAND] = [\"Guirlandes\", \"Utilisable sur les toits\"];\r\n    LANG[INV.SEED] = [\"Graines de baies\", \"Deviennent des baies\", \"Naissance: 2min\", \"Croissance: 55s\", \"Arrosage: 3min 20s\", \"Durabilité: 700\", \"Durée de vie: 8 jours\"];\r\n    LANG[INV.PLANT] = [\"Baies\", \"Peu nourrissant\", \"Nourriture: 10\"];\r\n    LANG[INV.WHEAT_SEED] = [\"Graines de blé\", \"Deviennent du blé\", \"Naissance: 2min\", \"Croissance: 16s\", \"Arrosage: 2min\", \"Durabilité: 700\", \"Durée de vie: 8 jours\"];\r\n    LANG[INV.WILD_WHEAT] = [\"Blé\", \"Peut être transformé en farine dans les moulins\"];\r\n    LANG[INV.PUMPKIN_SEED] = [\"Graines de citrouille\", \"Deviennent des citrouilles\", \"Naissance: 2min 40s\", \"Croissance: 2min\", \"Arrosage: 2min\", \"Durabilité: 700\", \"Durée de vie: 8 jours\"];\r\n    LANG[INV.PUMPKIN] = [\"Citrouille\", \"Ça me rappelle Halloween\", \"Nourriture: 30\"];\r\n    LANG[INV.GARLIC_SEED] = [\"Graines d'ail\", \"Très dangereux pour les vampires\", \"Dégâts: 20\", \"Naissance: 4min\", \"Croissance: 1min 10s\", \"Arrosage: 1min 40s\", \"Durabilité: 700\", \"Durée de vie: 8 jours\"];\r\n    LANG[INV.GARLIC] = [\"Ail\", \"Soigne et réduit le froid\", \"Nourriture: 14\", \"Soigne sur le temps: 30\", \"Effet: 1 fois\"];\r\n    LANG[INV.THORNBUSH_SEED] = [\"Graines de ronces\", \"Peuvent blesser vos ennemis\", \"Dégâts: 20\", \"Naissance: 4min\", \"Croissance: 15s\", \"Arrosage: 3min\", \"Durabilité: 1000\", \"Durée de vie: 8 jours\"];\r\n    LANG[INV.THORNBUSH] = [\"Ronces\", \"Ça pique!\"];\r\n    LANG[INV.PLOT] = [\"Terreau\", \"Indispensable\", \"Vos plantes grandiront plus vite\", \"et auront besoin de moins d'eau\", \"Durabilité: 2000\"];\r\n    LANG[INV.ICE] = [\"Glace\", \"Pratique pour faire de l'eau et des gâteaux\"];\r\n    LANG[INV.SPANNER] = [\"Clé à molette\", \"Pour réparer les portes, les murs et les piques\", \"Dégâts: 2\"];\r\n    LANG[INV.FUR_WOLF] = [\"Peau de loup\", \"Il était où le gentil ti Youki?\"];\r\n    LANG[INV.FUR] = [\"Peau de lapin\", \"Vous êtes un monstre\"];\r\n    LANG[INV.SPECIAL_FUR] = [\"Fourrure blanche\", \"Tu es une usine à pain\"];\r\n    LANG[INV.SPECIAL_FUR_2] = [\"Fourrure noire\", \"Tu te sens prêt à faire quelque chose de mal\"];\r\n    LANG[INV.FUR_WINTER] = [\"Fourrure d'hiver\", \"Il voulait juste un calin\"];\r\n    LANG[INV.SCALES] = [\"Écailles\", \"Ça sent le poisson!\"];\r\n    LANG[INV.KRAKEN_SKIN] = [\"Peau du kraken\", \"Tu n'as pas eu trop peur?\"];\r\n    LANG[INV.FIRE] = [\"Feu de camp\", \"Réchauffe\", \"Durabilité: 150\", \"Durée de vie: 2min\"];\r\n    LANG[INV.BIG_FIRE] = [\"Grand feu de camp\", \"Réchauffe plus longtemps\", \"Durabilité: 400\", \"Durée de vie: 6min\"];\r\n    LANG[INV.WORKBENCH] = [\"Établi\", \"Utile pour fabriquer toute sorte d'objets\"];\r\n    LANG[INV.CORD] = [\"Fil\", \"Utile pour faire des chapeaux et un sac\"];\r\n    LANG[INV.BLUE_CORD] = [\"Fil de diamant\", \"Utile pour faire des chapeaux\"];\r\n    LANG[INV.CHEST] = [\"Coffre\", \"Permet de ranger des objets\", \"Durabilité: 500\"];\r\n    LANG[INV.SWORD_WOOD] = [\"Épée en bois\", \"C'est pour les enfants\", \"Dégâts: 12\", \"Démolition: 4\"];\r\n    LANG[INV.SWORD] = [\"Épée en pierre\", \"Sois gentil avec les autres\", \"Dégâts: 19\", \"Démolition: 6\"];\r\n    LANG[INV.SWORD_GOLD] = [\"Épée en or\", \"Roi de la forêt\", \"Dégâts: 22\", \"Démolition: 7\"];\r\n    LANG[INV.SWORD_DIAMOND] = [\"Épée en diamant\", \"Tu te sens puissant\", \"Dégâts: 24\", \"Démolition: 8\"];\r\n    LANG[INV.PIRATE_SWORD] = [\"Épée de pirate\", \"Marin d'eau douce!\", \"Meilleure portée qu'une épée normale\", \"Dégâts: 24\", \"Démolition: 8\"];\r\n    LANG[INV.SWORD_AMETHYST] = [\"Épée en améthyste\", \"Mauve est la plus belle couleur du monde\", \"Dégâts: 27\", \"Démolition: 9\"];\r\n    LANG[INV.DRAGON_SWORD] = [\"Épée du Dragon\", \"Pas de pitié!\", \"Dégâts: 30\", \"Démolition: 10\"];\r\n    LANG[INV.DRAGON_SPEAR] = [\"Lance du Dragon\", \"Tuez-les tous!\", \"Dégâts: 22\", \"Démolition: 6\"];\r\n    LANG[INV.PICK_WOOD] = [\"Pioche en bois\", \"Peut récolter du bois et de la pierre\", \"Dégâts: 1\"];\r\n    LANG[INV.PICK] = [\"Pioche en pierre\", \"Peut aussi récolter de l'or\", \"Dégâts: 2\"];\r\n    LANG[INV.PICK_GOLD] = [\"Pioche en or\", \"Peut aussi récolter du diamant\", \"Dégâts: 3\", \"Démolition: 1\"];\r\n    LANG[INV.PICK_DIAMOND] = [\"Pioche en diamant\", \"Peut tout récolter\", \"Dégâts: 4\", \"Démolition: 1\"];\r\n    LANG[INV.PICK_AMETHYST] = [\"Pioche en améthyste\", \"Peut tout récolter\", \"Dégâts: 5\", \"Démolition: 1\"];\r\n    LANG[INV.HAMMER] = [\"Marteau en pierre\", \"Utile pour détruire les bâtiments\", \"Ne marche pas bien sur du diamant et améthyste\", \"Dégâts: 2\", \"Démolition: 20\"];\r\n    LANG[INV.HAMMER_GOLD] = [\"Marteau en or\", \"Utile pour détruire les bâtiments\", \"Ne marche pas bien sur l'améthyste\", \"Dégâts: 3\", \"Démolition: 30\"];\r\n    LANG[INV.HAMMER_DIAMOND] = [\"Marteau en diamant\", \"Utile pour détruire les bâtiments\", \"Dégâts: 4\", \"Démolition: 40\"];\r\n    LANG[INV.HAMMER_AMETHYST] = [\"Marteau en améthyste\", \"Utile pour détruire les bâtiments\", \"Dégâts: 5\", \"Démolition: 50\"];\r\n    LANG[INV.SUPER_HAMMER] = [\"Super Marteau\", \"As-tu prévu de détruire le monde?\", \"Dégâts: 12\", \"Démolition: 70\"];\r\n    LANG[INV.WOOD_SPEAR] = [\"Lance en bois\", \"Plus de peur que de mal\", \"Dégâts: 10\", \"Démolition: 2\"];\r\n    LANG[INV.SPEAR] = [\"Lance en pierre\", \"C'est le début de l'évolution\", \"Dégâts: 14\", \"Démolition: 4\"];\r\n    LANG[INV.GOLD_SPEAR] = [\"Lance en or\", \"Attention, ça pique!\", \"Dégâts: 15\", \"Buildings Dégâts: 5\"];\r\n    LANG[INV.DIAMOND_SPEAR] = [\"Lance en diamant\", \"Tu es prêt à tuer les dragons\", \"Dégâts: 17\", \"Buildings Dégâts: 5\"];\r\n    LANG[INV.AMETHYST_SPEAR] = [\"Lance en améthyste\", \"Les dragons ne te font plus peur\", \"Dégâts: 18\", \"Buildings Dégâts: 6\"];\r\n    LANG[INV.SHOVEL] = [\"Pelle en pierre\", \"Creuse la terre, le sable et la neige\", \"Peut aussi récupérer des minéraux\", \"Dégâts: 2\"];\r\n    LANG[INV.SHOVEL_GOLD] = [\"Pelle en or\", \"Creuse la terre, le sable et la neige\", \"Peut aussi récupérer des minéraux\", \"Dégâts: 3\", \"Buildings Dégâts: 1\"];\r\n    LANG[INV.SHOVEL_DIAMOND] = [\"Pelle en diamant\", \"Creuse la terre, le sable et la neige\", \"Peut aussi récupérer des minéraux\", \"Dégâts: 4\", \"Buildings Dégâts: 1\"];\r\n    LANG[INV.SHOVEL_AMETHYST] = [\"Pelle en améthyste\", \"Creuse la terre, le sable et la neige\", \"Peut aussi récupérer des minéraux\", \"Dégâts: 5\", \"Buildings Dégâts: 1\"];\r\n    LANG[INV.WOOD_HELMET] = [\"Casque en bois\", \"Mieux que rien\", \"Défense: 1\", \"Défense contre animaux: 4\"];\r\n    LANG[INV.STONE_HELMET] = [\"Casque en pierre\", \"Prêt pour la bataille\", \"Défense: 2\", \"Défense contre animaux: 8\"];\r\n    LANG[INV.GOLD_HELMET] = [\"Casque en or\", \"Alias le casque des sauvages\", \"Défense: 4\", \"Défense contre animaux: 13\"];\r\n    LANG[INV.DIAMOND_HELMET] = [\"Casque en diamant\", \"Ne te vante pas trop\", \"Défense: 5\", \"Défense contre animaux: 19\"];\r\n    LANG[INV.AMETHYST_HELMET] = [\"Casque en améthyste\", \"Tu n'as plus peur de rien\", \"Défense: 6\", \"Défense contre animaux: 23\"];\r\n    LANG[INV.DRAGON_HELMET] = [\"Casque du Dragon\", \"Tu vas conquérir le monde\", \"Défense: 8\", \"Défense contre animaux: 27\"];\r\n    LANG[INV.EXPLORER_HAT] = [\"Chapeau d'explorateur\", \"Les animaux t'ignorent\", \"Mais ne faites pas de bruit!\", \"Réchauffe en dehors de l'eau et dans l'hiver\"];\r\n    LANG[INV.CHRISTMAS_HAT] = [\"Chapeau du Père Noël\", \"Oh, oh, oh, Joyeux Nöel!\", \"Réchauffe en dehors de l'eau et dans l'hiver\"];\r\n    LANG[INV.ELF_HAT] = [\"Chapeau du lutin de Nöel\", \"Tu as vu le nouveau chef d'oeuvre d'Alain Chabat?\", \"Réchauffe en dehors de l'eau et dans l'hiver\"];\r\n    LANG[INV.HOOD] = [\"Capuche\", \"Voyou!\", \"Tu peux voler seulement si\", \"1) Il fait nuit\", \"2) Tu as les mains libres\", \"3) Tu n'as pas été touché depuis 8 secondes\", \"4) Tu es loin d'un feu\", \"5) Ta cible n'est pas un paysan\", \"Réchauffe en dehors de l'eau et dans l'hiver\"];\r\n    LANG[INV.EARMUFFS] = [\"Cache-oreilles\", \"Une sorte de petite chapka.\", \"Réchauffe en dehors de l'eau et dans l'hiver\"];\r\n    LANG[INV.COAT] = [\"Chapka\", \"Comment ça va, camarade?\", \"Réchauffe en dehors de l'eau et dans l'hiver\"];\r\n    LANG[INV.CAP_SCARF] = [\"Bonnet d'hiver\", \"Très confortable\", \"Très chaud\"];\r\n    LANG[INV.PEASANT] = [\"Tunique\", \"Les plantes poussent plus vite\", \"Réchauffe en dehors de l'eau et dans l'hiver\"];\r\n    LANG[INV.WINTER_HOOD] = [\"Capuche d'hiver\", \"Tu peux voler seulement si\", \"1) Il fait nuit\", \"2) Tu as les mains libres\", \"3) Tu n'as pas été touché depuis 4 secondes\", \"4) Tu es loin d'un feu\", \"5) Ta cible n'est pas un paysan d'hiver\", \"Réchauffe en dehors de l'eau et dans l'hiver\"];\r\n    LANG[INV.WINTER_PEASANT] = [\"Tunique d'hiver\", \"Tes plantes poussent plus vite\", \"Réchauffe en dehors de l'eau et dans l'hiver\"];\r\n    LANG[INV.DIVING_MASK] = [\"Masque de plongée\", \"Tu es rapide dans l'eau\", \"Réchauffe dans l'eau\", \"Défense: 2, Défense contre animaux: 8\"];\r\n    LANG[INV.SUPER_DIVING_SUIT] = [\"Scaphandre\", \"Tu es très rapide dans l'eau\", \"Réchauffe dans l'eau\", \"Défense: 4, Défense contre animaux: 16\"];\r\n    LANG[INV.DRAGON_ORB] = [\"Orbe du Dragon\", \"Donné en Quête\"];\r\n    LANG[INV.DRAGON_HEART] = [\"Coeur de Dragon\", \"Te change en fantôme!\", \"Tu es un fantôme pendant 1 min\", \"Trouve une pierre de résurrection\"];\r\n    LANG[INV.GEMME_GREEN] = [\"Gemme verte\", \"Tu n'as pas triché, promis?\"];\r\n    LANG[INV.GEMME_ORANGE] = [\"Gemme orange\", \"Seul un vrai pirate peut l'obtenir!\"];\r\n    LANG[INV.GEMME_BLUE] = [\"Gemme bleue\", \"Pour les gens trop gentils\"];\r\n    LANG[INV.CROWN_GREEN] = [\"Couronne verte\", \"Te soigne très rapidement\", \"Soigne sur le temps: 40\", \"Défense: 4, Défense contre animaux: 16\"];\r\n    LANG[INV.CROWN_ORANGE] = [\"Couronne orange\", \"Tu te sens soudainement très chanceux\", \"Défense: 4, Défense contre animaux: 16\"];\r\n    LANG[INV.CROWN_BLUE] = [\"Couronne bleue\", \"Une fois mort, tu deviens un fantôme\", \"Tu perdras toutes tes arguments\", \"Défense: 4, Défense contre animaux: 16\"];\r\n    LANG[INV.BUCKET_FULL] = [\"Seau\", \"Utile pour remplir un puit\", \"Un sceau est équivalent à 20 bouteilles\"];\r\n    LANG[INV.BUCKET_EMPTY] = [\"Seau vide\", \"Pour remplir ce seau, approche-toi d'une source d'eau\"];\r\n    LANG[INV.BOTTLE_FULL] = [\"Bouteille\", \"Te permet de boire n'importe où\", \"Eau: 50\"];\r\n    LANG[INV.BOTTLE_EMPTY] = [\"Bouteille vide\", \"Tu peux remplir cette bouteille près d'une source d'eau\"];\r\n    LANG[INV.WATERING_CAN] = [\"Arrosoir vide\", \"Doit être rempli près d'une source d'eau\"];\r\n    LANG[INV.WATERING_CAN_FULL] = [\"Arrosoir\", \"Permet d'arroser les plantes\", \"Dégâts: 1\"];\r\n    LANG[INV.BAG] = [\"Sac\", \"Plus de place dans ton inventaire!\"];\r\n    LANG[INV.PAPER] = [\"Papier\", \"Pour fabriquer toute sorte d'objets\"];\r\n    LANG[INV.BOOK] = [\"Livre\", \"Réduit considérablement le temps de fabrication\", \"Doit être porté pour fonctionner\", \"Dégâts: 1\"];\r\n    LANG[INV.BANDAGE] = [\"Bandage\", \"Soigne plus rapidement\", \"Soigne sur le temps: 30\", \"Effet: 5\"];\r\n    LANG[INV.LOCK] = [\"Cadenas\", \"Pour verrouiller un coffre\"];\r\n    LANG[INV.LOCKPICK] = [\"Clé\", \"Pour déverrouiller un coffre\"];\r\n    LANG[INV.TOTEM] = [\"Totem\", \"Te permet de créer une équipe\", \"Partage les portes et les coffres\", \"Les piques ne toucheront pas tes amis\"];\r\n    LANG[INV.BRIDGE] = [\"Pont\", \"Très utile sur l'eau\", \"Te permet de boire sans te noyer\", \"Marche plus vite sur l'eau\"];\r\n    LANG[INV.SIGN] = [\"Pancarte\", \"Laisse un message aux autres\", \"Durabilité: 200\"];\r\n    LANG[INV.ROOF] = [\"Toit\", \"Te cache un peu et te réchauffe\"];\r\n    LANG[INV.WELL] = [\"Puit\", \"Permet de remplir des bouteilles\", \"Durabilité: 1000\"];\r\n    LANG[INV.WALL] = [\"Mur en bois\", \"Tu connais la danse des murs?\", \"Durabilité: 1000\"];\r\n    LANG[INV.STONE_WALL] = [\"Mur en pierre\", \"Ça fait un peu plus sérieux\", \"Durabilité: 1500\"];\r\n    LANG[INV.GOLD_WALL] = [\"Mur en or\", \"De l'or sur tes murs? C'est un peu voyant\", \"Durabilité: 2000\"];\r\n    LANG[INV.DIAMOND_WALL] = [\"Mur en diamant\", \"Très brillant, cache tes yeux\", \"Durabilité: 2500\"];\r\n    LANG[INV.AMETHYST_WALL] = [\"Mur en améthyste\", \"Tu dois avoir très peur de sortir dehors!\", \"Durabilité: 3500\"];\r\n    LANG[INV.SPIKE] = [\"Piques en bois\", \"Peut blesser tes ennemis\", \"Dégâts: 10, Dégâts par coup: 2\", \"Durabilité: 150\"];\r\n    LANG[INV.STONE_SPIKE] = [\"Pique en pierre\", \"Je ne voudrais pas être ton ennemi\", \"Dégâts: 20\", \"Dégâts par coup: 3\", \"Durabilité: 300\"];\r\n    LANG[INV.GOLD_SPIKE] = [\"Pique en or\", \"Tu es si cruel\", \"Dégâts: 30\", \"Dégâts par coup: 3\", \"Durabilité: 600\"];\r\n    LANG[INV.DIAMOND_SPIKE] = [\"Pique en diamant\", \"Tu n'as pas l'air d'aimer la compagnie\", \"Dégâts: 40\", \"Dégâts par coup: 4\", \"Durabilité: 1200\"];\r\n    LANG[INV.AMETHYST_SPIKE] = [\"Pique en améthyste\", \"Mais qu'est ce que ton voisin t'a fait?\", \"Dégâts: 50\", \"Dégâts par coup: 4\", \"Durabilité: 2400\"];\r\n    LANG[INV.WOOD_DOOR] = [\"Porte en bois\", \"Peut être ouvert ou fermé par toi ou tes amis\", \"Durabilité: 1000\"];\r\n    LANG[INV.STONE_DOOR] = [\"Porte en pierre\", \"Tu connais les trois petits cochons?\", \"Durabilité: 1500\"];\r\n    LANG[INV.GOLD_DOOR] = [\"Porte en or\", \"Tu reconstruis l'el dorado?\", \"Durabilité: 2000\"];\r\n    LANG[INV.DIAMOND_DOOR] = [\"Porte en diamant\", \"Pour une maison éclatante\", \"Durabilité: 2500\"];\r\n    LANG[INV.AMETHYST_DOOR] = [\"Porte en améthyste\", \"Est-ce que ta maison est un coffre-fort?\", \"Durabilité: 3000\"];\r\n    LANG[INV.FURNACE] = [\"Chaudière\", \"Réchauffe\", \"Consume du bois toutes les 5 sec\", \"Durabilité: 1000\"];\r\n    LANG[INV.WINDMILL] = [\"Moulin\", \"Peut produire de la farine à partir du blé\", \"Prends 5 sec pour faire de la farine\", \"Tu obtiens des points quand c'est en marche\", \"Durabilité: 2000\"];\r\n    LANG[INV.BREAD_OVEN] = [\"Four à pain\", \"Produit du pain avec de la farine et du bois\", \"Prends 10 sec pour faire du pain\", \"Tu obtiens des points quand c'est en marche\", \"Durabilité: 2000\"];\r\n    LANG[INV.RESURRECTION] = [\"Pierre de résurrection\", \"Magie magie!\", \"Te ressuscite si tu es un fantôme\", \"Tu perds toutes tes armes\", \"Durabilité: 200\"];\r\n    LANG[TEXT.YOU_CANNOT_JOIN] = \"Tu ne peux pas rejoindre le serveur\";\r\n    LANG[TEXT.KICKED] = \"Expulsé: \";\r\n    LANG[TEXT.KEY_ALREADY] = \"Ta clé est déjà utilisée par quelqu'un d'autre\";\r\n    LANG[TEXT.KEY_WRONG] = \"Ta clé est fausse\";\r\n    LANG[TEXT.OLD_VERSION] = \"Tu as une vieille version, rafraichis tes caches\";\r\n    LANG[TEXT.NO_MORE_RESOURCES] = \"Il n'y a plus de nouvelles ressources\";\r\n    LANG[TEXT.SURVIVED_1DAY] = \"Tu as survécu 1 jour\";\r\n    LANG[TEXT.SURVIVED] = \"Tu as survécu \";\r\n    LANG[TEXT.DAYS] = \" jours\";\r\n    LANG[TEXT.DEAD_SAD] = \"Tu es mort ;-;\";\r\n    LANG[TEXT.SPAM_ME] = \"Le serveur ne trouve pas de points d'apparitions! Spam le bouton jouer!\";\r\n    LANG[TEXT.SPAM_ME2] = \"Le serveur est complet! Spam le bouton jouer\";\r\n    LANG[TEXT.EMPTY] = \"Cette ressource est vide\";\r\n    LANG[TEXT.INV_FULL] = \"Ton inventaire est rempli (Clic droit pour supprimer un objet)\";\r\n    LANG[TEXT.DEAD] = \" est mort\";\r\n    LANG[TEXT.WRONG_TOOL] = \"Ce n'est pas le bon outil\";\r\n    LANG[TEXT.JOIN_TEAM] = \"Tu as rejoins une équipe\";\r\n    LANG[TEXT.YOU_DEAD] = \"Tu es mort\";\r\n    LANG[TEXT.JOINED_TEAM] = \" a rejoint l'équipe\";\r\n    LANG[TEXT.TEAM_DESTROYED] = \"Ton équipe a été détruite\";\r\n    LANG[TEXT.LEFT_TEAM] = \"Tu as quitté l'équipe\";\r\n    LANG[TEXT.LEFT_TEAM2] = \" a quitté l'équipe\";\r\n    LANG[TEXT.TOKEN] = \"Quelqu'un a volé ton token :>\";\r\n    LANG[TEXT.CHOOSE] = \"Choisis un serveur\";\r\n    LANG[TEXT.PLAYERS] = \"joueurs\";\r\n    LANG[TEXT.TOTAL_PLAYERS] = \"joueurs\";\r\n    LANG[TEXT.TOTAL_MODE] = \"joueurs dans ce mode\";\r\n    LANG[TEXT.COMMING_SOON] = \"Bientôt...\";\r\n    document.getElementById(\"nickname_input\").placeholder = \"Surnom\";\r\n    DIE[0] = [\"Tu as été tué sans raison particulière, juste comme ça\"];\r\n    DIE[1] = [\"Tu es mort de faim, c'est plutôt ironique, non?\"];\r\n    DIE[2] = [\"Tu es mort de froid. Dommage\", \"Tu as fait une hypothermie, la prochaine fois reste près d'un feu\"];\r\n    DIE[3] = [\"Un joueur t'a tué, avant de mourir tu pouvais l'entendre rire\", \"Un joueur t'a tué, avec un peu de chance il mourra aussi\"];\r\n    DIE[4] = [\"Tu es resté sur un feu trop longtemps et tu es mort suite aux brûlures\", \"Tu es mort en restant trop longtemps sur un feu, tu voulais finir comme Jeanne d'Arc?\"];\r\n    DIE[5] = [\"Ton corps deviendra un nid pour les oeufs d'araignées.\"];\r\n    DIE[6] = [\"Ce loup n'aura plus faim après t'avoir mangé\", \"Ce ne sont pas des chiens. Les loups n'aiment pas être domestiqués.\"];\r\n    DIE[7] = [\"Ce renard était trop rapide pour toi\", \"Ce renard t'a transformé en boîte\"];\r\n    DIE[8] = [\"Cet ours voulait juste un câlin.\"];\r\n    DIE[9] = [\"Tu as été brûlé par un dragon. Quel gâchis\", \"Tu t'es fait écraser par un dragon. Une bien terrible façon de mourir...\"];\r\n    DIE[10] = [\"Tu as sauté sur des piques, c'était pas une bonne idée...\", \"Tu es mort sur des piques. La plupart des gens sont assez sensés pour ne pas toucher les choses pointues\"];\r\n    DIE[11] = [\"Même les fantômes peuvent mourir\", \"Tu n'as pas réussi à te ressusciter. Mais c'est un jeu, tu reviens à la vie après être mort, donc...\"];\r\n    DIE[12] = [\"Une bactérie logée dans la viande crue t'a tué. Ce jeu est vraiment trop dur.\", \"Tu as tué l'animal, sa viande t'a tué.\"];\r\n    DIE[13] = [\"Tu es mort de soif. La prochaine fois, vas dans un lac, dans la mer ou fais-toi une bouteille\"];\r\n    DIE[14] = [\"Tu t'es noyé. Essaye de construire un pont la prochaine fois\"];\r\n    DIE[15] = [\"Ne t'inquiète pas, le piranha t'a trouvé appétissant.\"];\r\n    DIE[16] = [\"Un kraken a 'kraké' tes os.\"];\r\n    DIE[17] = [\"Ta peau tombe en lambeau, le soleil t'a brûlé.\"];\r\n    DIE[18] = [\"L'ail dans ta poche a fait bouillir ton cerveau.\"];\r\n    DIE[19] = [\"En tant que vampire, ne reste pas à côté des gousses d'ail.\"];\r\n    DIE[20] = [\"Tu as mangé de l'ail en tant que vampire, tu t'attendais à quoi?\"];\r\n    DIE[21] = [\"Ton corps est tombé dans les ronces. En essayant de t'échapper, ta peau s'est arrachée et la douleur a fait arrêter de battre ton coeur. lol ça rime.\"];\r\n    ZOMBIE_GRUMBLE = \"Uuunnnggg\";\r\n    ZOMBIE_GRUMBLES = [\"Uuunnnggg... J'ai faim\", \"Manger cerveau, Uuunnnggg...\", \"Viande fraîche ici... Uuunnnggg\", \"Uuunnnggg... Tu as l'air bon\", \"Uuunnnggg...\", \"Manger... uuunnnggg...\", \"Je peux sentir ton sang... Uuunnnggg\"];\r\n};\r\nvar LANG = [];\r\nfor (var i = 0; i < COUNTER; i++) LANG[i] = \"\";\r\nvar DIE = [];\r\n$(\".md-languages\").on(\"click\", function () {\r\n    $(this).toggleClass(\"active\");\r\n});\r\n$(\".md-languages ul li\").on(\"click\", function () {\r\n    var v = $(this).text();\r\n    if (v === \"English\") set_english(); else if (v === \"Français\") set_french(); else if (v === \"Deutsch\") set_german(); else if (v === \"Español\") set_spanish(); else if (v === \"Português\") set_portuguese(); else if (v === \"Русский\") set_russian(); else if (v === \"Polski\") set_polish();\r\n    INFO_BOX = [];\r\n    user.craft.label = [];\r\n    $(\".md-languages ul li\").removeClass(\"active\");\r\n    $(this).addClass(\"active\");\r\n    $(\".md-languages label button\").text(v);\r\n});\r\nvar lang = \"EN\";\r\nvar userlang = navigator.language || navigator.userLanguage;\r\nswitch (userlang) {\r\n    case \"ru\":\r\n        lang = \"RU\";\r\n        break;\r\n    case \"en\":\r\n        lang = \"EN\";\r\n        break;\r\n    case \"es\":\r\n        lang = \"SP\";\r\n        break;\r\n    case \"fr\":\r\n        lang = \"FR\";\r\n        break;\r\n    case \"pl\":\r\n        lang = \"PL\";\r\n        break;\r\n    case \"de\":\r\n        lang = \"DE\";\r\n        break;\r\n    case \"pt\":\r\n        lang = \"PT\";\r\n        break;\r\n}\r\nvar next_lang;\r\nif (lang === \"FR\") {\r\n    $(\".md-languages label button\").text(\"Français\");\r\n    next_lang = set_french;\r\n} else if (lang === \"PL\") {\r\n    $(\".md-languages label button\").text(\"Polski\");\r\n    next_lang = set_polish;\r\n} else if (lang === \"PT\") {\r\n    $(\".md-languages label button\").text(\"Português\");\r\n    next_lang = set_portuguese;\r\n} else if (lang === \"SP\") {\r\n    $(\".md-languages label button\").text(\"Español\");\r\n    next_lang = set_spanish;\r\n} else if (lang === \"RU\") {\r\n    $(\".md-languages label button\").text(\"Русский\");\r\n    next_lang = set_russian;\r\n} else if (lang === \"DE\") {\r\n    $(\".md-languages label button\").text(\"Deutsch\");\r\n    next_lang = set_german;\r\n} else {\r\n    $(\".md-languages label button\").text(\"English\");\r\n    next_lang = set_english;\r\n}\r\nIMAGES = {LOGO: \"img/logo.png\", BIGDAY: \"img/mapday.png\", BIGNIGHT: \"img/mapnight.png\", BIGZDAY: \"img/bigzday.png\", BIGZNIGHT: \"img/bigznight.png\", MAPDAY_RIVER: \"img/bigday-river1.png\", MAPDAY_LAKE: \"img/bigday-lake.png\", MAPDAY_BERRY: \"img/bigday-berry.png\", MAPDAY_STONE1: \"img/bigday-stone1.png\", MAPDAY_STONE2: \"img/bigday-stone2.png\", MAPDAY_GOLD1: \"img/bigday-gold1.png\", MAPDAY_GOLD2: \"img/bigday-gold2.png\", MAPDAY_EMERALD1: \"img/bigday-emerald1.png\", MAPDAY_EMERALD2: \"img/bigday-emerald2.png\", MAPDAY_AMETHYST: \"img/bigday-amethyst.png\", MAPDAY_BEAR: \"img/bigday-bear.png\", MAPDAY_CAVE: \"img/bigday-cave.png\", MAPDAY_DIAMOND: \"img/bigday-diamond.png\", MAPDAY_ISLAND: \"img/bigday-island.png\", MAPDAY_REIDITE: \"img/bigday-reidite.png\", MAPDAY_SPIDER: \"img/bigday-spider.png\", MAPDAY_WOLF: \"img/bigday-wolf.png\", MAPDAY_FIR_TREE: \"img/bigday-fir-tree.png\", MAPDAY_FOX: \"img/bigday-fox.png\", MAPDAY_KRAKEN: \"img/bigday-kraken.png\", MAPDAY_PIRANHA: \"img/bigday-piranha.png\", MAPDAY_CACTUS: \"img/bigday-cactus.png\", MAPDAY_MAGMA: \"img/bigday-magma.png\", MAPNIGHT_RIVER: \"img/bigday-river1.png\", MAPNIGHT_LAKE: \"img/bignight-lake.png\", MAPNIGHT_BERRY: \"img/bignight-berry.png\", MAPNIGHT_STONE1: \"img/bignight-stone1.png\", MAPNIGHT_STONE2: \"img/bignight-stone2.png\", MAPNIGHT_GOLD1: \"img/bignight-gold1.png\", MAPNIGHT_GOLD2: \"img/bignight-gold2.png\", MAPNIGHT_EMERALD1: \"img/bignight-emerald1.png\", MAPNIGHT_EMERALD2: \"img/bignight-emerald2.png\", MAPNIGHT_AMETHYST: \"img/bignight-amethyst.png\", MAPNIGHT_BEAR: \"img/bignight-bear.png\", MAPNIGHT_CAVE: \"img/bignight-cave.png\", MAPNIGHT_DIAMOND: \"img/bignight-diamond.png\", MAPNIGHT_ISLAND: \"img/bignight-island.png\", MAPNIGHT_REIDITE: \"img/bignight-reidite.png\", MAPNIGHT_SPIDER: \"img/bignight-spider.png\", MAPNIGHT_WOLF: \"img/bignight-wolf.png\", MAPNIGHT_FIR_TREE: \"img/bignight-fir-tree.png\", MAPNIGHT_FOX: \"img/bignight-fox.png\", MAPNIGHT_KRAKEN: \"img/bignight-kraken.png\", MAPNIGHT_PIRANHA: \"img/bignight-piranha.png\", MAPNIGHT_CACTUS: \"img/bignight-cactus.png\", MAPNIGHT_MAGMA: \"img/bignight-magma.png\", MAPDAY_DESERT: \"img/bigday-desert.png\", MAPDAY_WINTER: \"img/bigday-winter.png\", MAPDAY_LAVA: \"img/bigday-lava.png\", MAPDAY_FOREST: \"img/bigday-forest.png\", MAPNIGHT_DESERT: \"img/bignight-desert.png\", MAPNIGHT_WINTER: \"img/bignight-winter.png\", MAPNIGHT_LAVA: \"img/bignight-lava.png\", MAPNIGHT_FOREST: \"img/bignight-forest.png\", RIVER_WAVED: \"img/day-river-wave.png\", RIVER_WAVEN: \"img/night-river-wave.png\", FOG0D: \"img/day-fog0.png\", FOG1D: \"img/day-fog1.png\", FOG2D: \"img/day-fog2.png\", FOG0N: \"img/night-fog0.png\", FOG1N: \"img/night-fog1.png\", FOG2N: \"img/night-fog2.png\", FOD0D: \"img/day-fogdesert0.png\", FOD1D: \"img/day-fogdesert1.png\", FOD2D: \"img/day-fogdesert2.png\", FOD0N: \"img/night-fogdesert0.png\", FOD1N: \"img/night-fogdesert1.png\", FOD2N: \"img/night-fogdesert2.png\", MARKER0D: \"img/day-cross-server.png\", MARKER1D: \"img/day-here-server.png\", MARKER2D: \"img/day-finish-server.png\", MARKER3D: \"img/day-item-server.png\", MARKER0N: \"img/night-cross-server.png\", MARKER1N: \"img/night-here-server.png\", MARKER2N: \"img/night-finish-server.png\", MARKER3N: \"img/night-item-server.png\", REIDITE0D: \"img/day-reidite0.png\", REIDITE0N: \"img/night-reidite0.png\", REIDITE1D: \"img/day-reidite1.png\", REIDITE1N: \"img/night-reidite1.png\", REIDITE2D: \"img/day-reidite2.png\", REIDITE2N: \"img/night-reidite2.png\", MAGMA1D: \"img/day-lava1.png\", MAGMA1N: \"img/night-lava1.png\", MAGMA2D: \"img/day-lava2.png\", MAGMA2N: \"img/night-lava2.png\", MAGMA3D: \"img/day-lava3.png\", MAGMA3N: \"img/night-lava3.png\", MAGMA4D: \"img/day-lava4.png\", MAGMA4N: \"img/night-lava4.png\", MAGMA5D: \"img/day-lava5.png\", MAGMA5N: \"img/night-lava5.png\", MAGMA6D: \"img/day-lava6.png\", MAGMA6N: \"img/night-lava6.png\", LAVA_GROUND1D: \"img/day-lava-ground1.png\", LAVA_GROUND1N: \"img/night-lava-ground1.png\", LAVA_GROUND2D: \"img/day-lava-ground2.png\", LAVA_GROUND2N: \"img/night-lava-ground2.png\", LAVA_GROUND3D: \"img/day-lava-ground3.png\", LAVA_GROUND3N: \"img/night-lava-ground3.png\", LAVA_GROUND4D: \"img/day-lava-ground4.png\", LAVA_GROUND4N: \"img/night-lava-ground4.png\", LAVA_GROUND5D: \"img/day-lava-ground5.png\", LAVA_GROUND5N: \"img/night-lava-ground5.png\", LAVA_GROUND6D: \"img/day-lava-ground6.png\", LAVA_GROUND6N: \"img/night-lava-ground6.png\", FIRE_MOBD: \"img/day-fire-mob.png\", FIRE_MOBN: \"img/night-fire-mob.png\", FIRE_MOB_HURT: \"img/hurt-fire-mob.png\", DIAMOND_PROTECTIOND: \"img/day-diamond-protection.png\", DIAMOND_PROTECTIONN: \"img/night-diamond-protection.png\", HAND_DIAMOND_PROTECTIOND: \"img/day-hand-diamond-protection.png\", HAND_DIAMOND_PROTECTIONN: \"img/night-hand-diamond-protection.png\", INV_DIAMOND_PROTECTION_OUT: \"img/inv-diamond-protection-out.png\", INV_DIAMOND_PROTECTION_IN: \"img/inv-diamond-protection-in.png\", INV_DIAMOND_PROTECTION_CLICK: \"img/inv-diamond-protection-click.png\", AMETHYST_PROTECTIOND: \"img/day-amethyst-protection.png\", AMETHYST_PROTECTIONN: \"img/night-amethyst-protection.png\", HAND_AMETHYST_PROTECTIOND: \"img/day-hand-amethyst-protection.png\", HAND_AMETHYST_PROTECTIONN: \"img/night-hand-amethyst-protection.png\", INV_AMETHYST_PROTECTION_OUT: \"img/inv-amethyst-protection-out.png\", INV_AMETHYST_PROTECTION_IN: \"img/inv-amethyst-protection-in.png\", INV_AMETHYST_PROTECTION_CLICK: \"img/inv-amethyst-protection-click.png\", REIDITE_SWORDD: \"img/day-reidite-sword.png\", REIDITE_SWORDN: \"img/night-reidite-sword.png\", INV_REIDITE_SWORD_OUT: \"img/inv-reidite-sword-out.png\", INV_REIDITE_SWORD_IN: \"img/inv-reidite-sword-in.png\", INV_REIDITE_SWORD_CLICK: \"img/inv-reidite-sword-click.png\", INV_REIDITE_OUT: \"img/inv-reidite-out.png\", INV_REIDITE_IN: \"img/inv-reidite-in.png\", INV_REIDITE_CLICK: \"img/inv-reidite-click.png\", INV_FLAME_OUT: \"img/inv-flame-out.png\", INV_FLAME_IN: \"img/inv-flame-in.png\", INV_FLAME_CLICK: \"img/inv-flame-click.png\", LAVA_BUBLE0D: \"img/day-magma-buble0.png\", LAVA_BUBLE0N: \"img/night-magma-buble0.png\", LAVA_BUBLE1D: \"img/day-magma-buble1.png\", LAVA_BUBLE1N: \"img/night-magma-buble1.png\", LAVA_BUBLE2D: \"img/day-magma-buble2.png\", LAVA_BUBLE2N: \"img/night-magma-buble2.png\", LAVA_DRAGOND: \"img/day-lava-dragon.png\", LAVA_DRAGONN: \"img/night-lava-dragon.png\", LAVA_FIRE_DRAGOND: \"img/day-fire-dragon.png\", LAVA_FIRE_DRAGONN: \"img/night-fire-dragon.png\", HURT_LAVA_DRAGON: \"img/hurt-lava-dragon.png\", LAVA_WING_LEFTD: \"img/day-lava-wing-left.png\", LAVA_WING_LEFTN: \"img/night-lava-wing-left.png\", LAVA_WING_RIGHTD: \"img/day-lava-wing-right.png\", LAVA_WING_RIGHTN: \"img/night-lava-wing-right.png\", HURT_LAVA_WING_LEFT: \"img/hurt-lava-wing-left.png\", HURT_LAVA_WING_RIGHT: \"img/hurt-lava-wing-right.png\", REIDITE_SPEARD: \"img/day-reidite-spear.png\", REIDITE_SPEARN: \"img/night-reidite-spear.png\", INV_REIDITE_SPEAR_OUT: \"img/inv-reidite-spear-out.png\", INV_REIDITE_SPEAR_IN: \"img/inv-reidite-spear-in.png\", INV_REIDITE_SPEAR_CLICK: \"img/inv-reidite-spear-click.png\", REIDITE_HELMETD: \"img/day-reidite-helmet.png\", REIDITE_HELMETN: \"img/night-reidite-helmet.png\", INV_REIDITE_HELMET_OUT: \"img/inv-reidite-helmet-out.png\", INV_REIDITE_HELMET_IN: \"img/inv-reidite-helmet-in.png\", INV_REIDITE_HELMET_CLICK: \"img/inv-reidite-helmet-click.png\", HAND_REIDITE_PROTECTIOND: \"img/day-hand-reidite-protection.png\", HAND_REIDITE_PROTECTIONN: \"img/night-hand-reidite-protection.png\", REIDITE_PROTECTIOND: \"img/day-reidite-protection.png\", REIDITE_PROTECTIONN: \"img/night-reidite-protection.png\", INV_REIDITE_PROTECTION_OUT: \"img/inv-reidite-protection-out.png\", INV_REIDITE_PROTECTION_IN: \"img/inv-reidite-protection-in.png\", INV_REIDITE_PROTECTION_CLICK: \"img/inv-reidite-protection-click.png\", LAVA_SWORDD: \"img/day-lava-dragon-sword.png\", LAVA_SWORDN: \"img/night-lava-dragon-sword.png\", INV_LAVA_SWORD_OUT: \"img/inv-lava-dragon-sword-out.png\", INV_LAVA_SWORD_IN: \"img/inv-lava-dragon-sword-in.png\", INV_LAVA_SWORD_CLICK: \"img/inv-lava-dragon-sword-click.png\", LAVA_SPEARD: \"img/day-lava-spear.png\", LAVA_SPEARN: \"img/night-lava-spear.png\", INV_LAVA_SPEAR_OUT: \"img/inv-lava-spear-out.png\", INV_LAVA_SPEAR_IN: \"img/inv-lava-spear-in.png\", INV_LAVA_SPEAR_CLICK: \"img/inv-lava-spear-click.png\", LAVA_HELMETD: \"img/day-lava-helmet.png\", LAVA_HELMETN: \"img/night-lava-helmet.png\", INV_LAVA_HELMET_OUT: \"img/inv-lava-helmet-out.png\", INV_LAVA_HELMET_IN: \"img/inv-lava-helmet-in.png\", INV_LAVA_HELMET_CLICK: \"img/inv-lava-helmet-click.png\", WITCHD: \"img/day-witch-hat.png\", WITCHN: \"img/night-witch-hat.png\", INV_WITCH_OUT: \"img/inv-witch-hat-out.png\", INV_WITCH_IN: \"img/inv-witch-hat-in.png\", INV_WITCH_CLICK: \"img/inv-witch-hat-click.png\", NIMBUSD: \"img/day-nimbus2000.png\", NIMBUSN: \"img/night-nimbus2000.png\", INV_NIMBUS_OUT: \"img/inv-nimbus2000-out.png\", INV_NIMBUS_IN: \"img/inv-nimbus2000-in.png\", INV_NIMBUS_CLICK: \"img/inv-nimbus2000-click.png\", ACCESSORY1D: \"img/day-accessory1-pacques.png\", ACCESSORY1N: \"img/night-accessory1-pacques.png\", ACCESSORY2D: \"img/day-accessory2-pacques.png\", ACCESSORY2N: \"img/night-accessory2-pacques.png\", ACCESSORY3D: \"img/day-accessory3-pacques.png\", ACCESSORY3N: \"img/night-accessory3-pacques.png\", ACCESSORY5D: \"img/day-accessory5-pacques.png\", ACCESSORY5N: \"img/night-accessory5-pacques.png\", ACCESSORY6D: \"img/day-accessory6-pacques.png\", ACCESSORY6N: \"img/night-accessory6-pacques.png\", ACCESSORY7D: \"img/day-accessory7-pacques.png\", ACCESSORY7N: \"img/night-accessory7-pacques.png\", ACCESSORY8D: \"img/day-accessory8-pacques.png\", ACCESSORY8N: \"img/night-accessory8-pacques.png\", BAG_EASTERD: \"img/day-bag-pacques.png\", BAG_EASTERN: \"img/night-bag-pacques.png\", CARROTD: \"img/day-carrot.png\", CARROTN: \"img/night-carrot.png\", CARROT_DRIEDD: \"img/day-carrot-dried.png\", CARROT_DRIEDN: \"img/night-carrot-dried.png\", TOMATO_MINID: \"img/day-tomato-herb.png\", TOMATO_MININ: \"img/night-tomato-herb.png\", TOMATO_MINI_DRIEDD: \"img/day-tomato-herb-dried.png\", TOMATO_MINI_DRIEDN: \"img/night-tomato-herb-dried.png\", TOMATOD: \"img/day-tomato.png\", TOMATON: \"img/night-tomato.png\", INV_CARROT_OUT: \"img/inv-carrot-out.png\", INV_CARROT_IN: \"img/inv-carrot-in.png\", INV_CARROT_CLICK: \"img/inv-carrot-click.png\", INV_TOMATO_OUT: \"img/inv-tomato-out.png\", INV_TOMATO_IN: \"img/inv-tomato-in.png\", INV_TOMATO_CLICK: \"img/inv-tomato-click.png\", PLAYER0D: \"img/day-player0.png\", PLAYER0N: \"img/night-player0.png\", PLAYER1D: \"img/day-player1.png\", PLAYER1N: \"img/night-player1.png\", PLAYER2D: \"img/day-player2.png\", PLAYER2N: \"img/night-player22.png\", PLAYER3D: \"img/day-player3.png\", PLAYER3N: \"img/night-player33.png\", PLAYER4D: \"img/day-player4.png\", PLAYER4N: \"img/night-player4.png\", PLAYER5D: \"img/day-player5.png\", PLAYER5N: \"img/night-player5.png\", PLAYER6D: \"img/day-player6.png\", PLAYER6N: \"img/night-player6.png\", PLAYER7D: \"img/day-player7.png\", PLAYER7N: \"img/night-player7.png\", PLAYER8D: \"img/day-player8.png\", PLAYER8N: \"img/night-player8.png\", PLAYER9D: \"img/day-player9.png\", PLAYER9N: \"img/night-player9.png\", PLAYER10D: \"img/day-player10.png\", PLAYER10N: \"img/night-player10.png\", PLAYER11D: \"img/day-player11.png\", PLAYER11N: \"img/night-player11.png\", PLAYER12D: \"img/day-player12.png\", PLAYER12N: \"img/night-player12.png\", PLAYER13D: \"img/day-player13.png\", PLAYER13N: \"img/night-player13.png\", PLAYER14D: \"img/day-player14.png\", PLAYER14N: \"img/night-player14.png\", PLAYER15D: \"img/day-player15.png\", PLAYER15N: \"img/night-player15.png\", PLAYER16D: \"img/day-player16.png\", PLAYER16N: \"img/night-player16.png\", PLAYER17D: \"img/day-player17.png\", PLAYER17N: \"img/night-player17.png\", PLAYER18D: \"img/day-player18.png\", PLAYER18N: \"img/night-player18.png\", PLAYER19D: \"img/day-player19.png\", PLAYER19N: \"img/night-player19.png\", HAND0D: \"img/day-hand-player0.png\", HAND0N: \"img/night-hand-player0.png\", HAND1D: \"img/day-hand-player1.png\", HAND1N: \"img/night-hand-player1.png\", HAND2D: \"img/day-hand-player2.png\", HAND2N: \"img/night-hand-player22.png\", HAND3D: \"img/day-hand-player3.png\", HAND3N: \"img/night-hand-player33.png\", HAND4D: \"img/day-hand-player4.png\", HAND4N: \"img/night-hand-player4.png\", HAND5D: \"img/day-hand-player5.png\", HAND5N: \"img/night-hand-player5.png\", HAND6D: \"img/day-hand-player6.png\", HAND6N: \"img/night-hand-player6.png\", HAND7D: \"img/day-hand-player7.png\", HAND7N: \"img/night-hand-player7.png\", HAND8D: \"img/day-hand-player8.png\", HAND8N: \"img/night-hand-player8.png\", HAND9D: \"img/day-hand-player9.png\", HAND9N: \"img/night-hand-player9.png\", HAND10D: \"img/day-hand-player10.png\", HAND10N: \"img/night-hand-player10.png\", HAND11D: \"img/day-hand-player11.png\", HAND11N: \"img/night-hand-player11.png\", HAND12D: \"img/day-hand-player12.png\", HAND12N: \"img/night-hand-player12.png\", HAND13D: \"img/day-hand-player13.png\", HAND13N: \"img/night-hand-player13.png\", HAND14D: \"img/day-hand-player14.png\", HAND14N: \"img/night-hand-player14.png\", HAND15D: \"img/day-hand-player15.png\", HAND15N: \"img/night-hand-player15.png\", HAND16D: \"img/day-hand-player16.png\", HAND16N: \"img/night-hand-player16.png\", HAND17D: \"img/day-hand-player17.png\", HAND17N: \"img/night-hand-player17.png\", HAND18D: \"img/day-hand-player18.png\", HAND18N: \"img/night-hand-player18.png\", HAND19D: \"img/day-hand-player19.png\", HAND19N: \"img/night-hand-player19.png\", ACCESSORY4D: \"img/day-accessory4.png\", ACCESSORY4N: \"img/night-accessory4.png\", ACCESSORY9D: \"img/day-accessory9.png\", ACCESSORY9N: \"img/night-accessory9.png\", ACCESSORY10D: \"img/day-accessory10.png\", ACCESSORY10N: \"img/night-accessory10.png\", ACCESSORY11D: \"img/day-accessory11.png\", ACCESSORY11N: \"img/night-accessory11.png\", ACCESSORY12D: \"img/day-accessory12.png\", ACCESSORY12N: \"img/night-accessory12.png\", BAGD: \"img/day-bag.png\", BAGN: \"img/night-bag.png\", INV_BAG_OUT: \"img/inv-bag-out.png\", INV_BAG_IN: \"img/inv-bag-in.png\", INV_BAG_CLICK: \"img/inv-bag-click.png\", PITCHFORKD: \"img/day-pitchfork.png\", PITCHFORKN: \"img/night-pitchfork.png\", INV_PITCHFORK_OUT: \"img/inv-pitchfork-out.png\", INV_PITCHFORK_IN: \"img/inv-pitchfork-in.png\", INV_PITCHFORK_CLICK: \"img/inv-pitchfork-click.png\", INV_WOOD_DOOR_SPIKE_OUT: \"img/inv-wood-spike-door-out.png\", INV_WOOD_DOOR_SPIKE_IN: \"img/inv-wood-spike-door-in.png\", INV_WOOD_DOOR_SPIKE_CLICK: \"img/inv-wood-spike-door-click.png\", INV_STONE_DOOR_SPIKE_OUT: \"img/inv-stone-spike-door-out.png\", INV_STONE_DOOR_SPIKE_IN: \"img/inv-stone-spike-door-in.png\", INV_STONE_DOOR_SPIKE_CLICK: \"img/inv-stone-spike-door-click.png\", INV_GOLD_DOOR_SPIKE_OUT: \"img/inv-gold-spike-door-out.png\", INV_GOLD_DOOR_SPIKE_IN: \"img/inv-gold-spike-door-in.png\", INV_GOLD_DOOR_SPIKE_CLICK: \"img/inv-gold-spike-door-click.png\", INV_DIAMOND_DOOR_SPIKE_OUT: \"img/inv-diamond-spike-door-out.png\", INV_DIAMOND_DOOR_SPIKE_IN: \"img/inv-diamond-spike-door-in.png\", INV_DIAMOND_DOOR_SPIKE_CLICK: \"img/inv-diamond-spike-door-click.png\", INV_AMETHYST_DOOR_SPIKE_OUT: \"img/inv-amethyst-spike-door-out.png\", INV_AMETHYST_DOOR_SPIKE_IN: \"img/inv-amethyst-spike-door-in.png\", INV_AMETHYST_DOOR_SPIKE_CLICK: \"img/inv-amethyst-spike-door-click.png\", WOOD_DOOR_SPIKED: \"img/day-wood-spike-door.png\", WOOD_DOOR_SPIKEN: \"img/night-wood-spike-door.png\", STONE_DOOR_SPIKED: \"img/day-stone-spike-door.png\", STONE_DOOR_SPIKEN: \"img/night-stone-spike-door.png\", GOLD_DOOR_SPIKED: \"img/day-gold-spike-door.png\", GOLD_DOOR_SPIKEN: \"img/night-gold-spike-door.png\", DIAMOND_DOOR_SPIKED: \"img/day-diamond-spike-door.png\", DIAMOND_DOOR_SPIKEN: \"img/night-diamond-spike-door.png\", AMETHYST_DOOR_SPIKED: \"img/day-amethyst-spike-door.png\", AMETHYST_DOOR_SPIKEN: \"img/night-amethyst-spike-door.png\", INV_REIDITE_DOOR_SPIKE_OUT: \"img/inv-reidite-spike-door-out.png\", INV_REIDITE_DOOR_SPIKE_IN: \"img/inv-reidite-spike-door-in.png\", INV_REIDITE_DOOR_SPIKE_CLICK: \"img/inv-reidite-spike-door-click.png\", INV_REIDITE_DOOR_OUT: \"img/inv-reidite-door-out.png\", INV_REIDITE_DOOR_IN: \"img/inv-reidite-door-in.png\", INV_REIDITE_DOOR_CLICK: \"img/inv-reidite-door-click.png\", INV_REIDITE_SPIKE_OUT: \"img/inv-reidite-spike-out.png\", INV_REIDITE_SPIKE_IN: \"img/inv-reidite-spike-in.png\", INV_REIDITE_SPIKE_CLICK: \"img/inv-reidite-spike-click.png\", INV_REIDITE_WALL_OUT: \"img/inv-reidite-wall-out.png\", INV_REIDITE_WALL_IN: \"img/inv-reidite-wall-in.png\", INV_REIDITE_WALL_CLICK: \"img/inv-reidite-wall-click.png\", REIDITE_WALLD: \"img/day-reidite-wall.png\", REIDITE_WALLN: \"img/night-reidite-wall.png\", REIDITE_DOORD: \"img/day-reidite-door.png\", REIDITE_DOORN: \"img/night-reidite-door.png\", REIDITE_SPIKED: \"img/day-reidite-spike.png\", REIDITE_SPIKEN: \"img/night-reidite-spike.png\", REIDITE_DOOR_SPIKED: \"img/day-reidite-spike-door.png\", REIDITE_DOOR_SPIKEN: \"img/night-reidite-spike-door.png\", INV_PICK_REIDITE_OUT: \"img/inv-reidite-pickaxe-out.png\", INV_PICK_REIDITE_IN: \"img/inv-reidite-pickaxe-in.png\", INV_PICK_REIDITE_CLICK: \"img/inv-reidite-pickaxe-click.png\", PICK_REIDITED: \"img/day-reidite-pickaxe.png\", PICK_REIDITEN: \"img/night-reidite-pickaxe.png\", INV_HAMMER_REIDITE_OUT: \"img/inv-reidite-hammer-out.png\", INV_HAMMER_REIDITE_IN: \"img/inv-reidite-hammer-in.png\", INV_HAMMER_REIDITE_CLICK: \"img/inv-reidite-hammer-click.png\", HAMMER_REIDITED: \"img/day-reidite-hammer.png\", HAMMER_REIDITEN: \"img/night-reidite-hammer.png\", WATERMELOND: \"img/day-watermelon1.png\", WATERMELONN: \"img/night-watermelon1.png\", DRIED_WATERMELOND: \"img/day-watermelon-dried1.png\", DRIED_WATERMELONN: \"img/night-watermelon-dried1.png\", INV_WATERMELON_OUT: \"img/inv-watermelon-out.png\", INV_WATERMELON_IN: \"img/inv-watermelon-in.png\", INV_WATERMELON_CLICK: \"img/inv-watermelon-click.png\", BOATD: \"img/day-boat.png\", BOATN: \"img/night-boat.png\", BOAT_WAVED: \"img/day-boat-wave.png\", BOAT_WAVEN: \"img/night-boat-wave.png\", INV_BOAT_OUT: \"img/inv-boat-out.png\", INV_BOAT_IN: \"img/inv-boat-in.png\", INV_BOAT_CLICK: \"img/inv-boat-click.png\", PLANED: \"img/day-plane.png\", PLANEN: \"img/night-plane.png\", INV_PLANE_OUT: \"img/inv-plane-out.png\", INV_PLANE_IN: \"img/inv-plane-in.png\", INV_PLANE_CLICK: \"img/inv-plane-click.png\", SLEDD: \"img/day-sled.png\", SLEDN: \"img/night-sled.png\", SLED_WAVED: \"img/day-sled-wave.png\", SLED_WAVEN: \"img/night-sled-wave.png\", INV_SLED_OUT: \"img/inv-sled-out.png\", INV_SLED_IN: \"img/inv-sled-in.png\", INV_SLED_CLICK: \"img/inv-sled-click.png\", PIRATE_HATD: \"img/day-pirate-hat.png\", PIRATE_HATN: \"img/night-pirate-hat.png\", INV_PIRATE_HAT_OUT: \"img/inv-pirate-hat-out.png\", INV_PIRATE_HAT_IN: \"img/inv-pirate-hat-in.png\", INV_PIRATE_HAT_CLICK: \"img/inv-pirate-hat-click.png\", PENGUIND: \"img/day-penguin.png\", PENGUINN: \"img/night-penguin.png\", HURT_PENGUIN: \"img/hurt-penguin.png\", INV_PENGUIN_FEATHER: \"img/inv-penguin-feather-click.png\", INV_HAWK_FEATHER: \"img/inv-hawk-feather-click.png\", BOARD: \"img/day-boar1.png\", BOAR_TAMEDD: \"img/day-boar1-tamed.png\", BOAR_ANGRYD: \"img/day-boar1-angry.png\", BOARN: \"img/night-boar1.png\", BOAR_TAMEDN: \"img/night-boar1-tamed.png\", BOAR_ANGRYN: \"img/night-boar1-angry.png\", INV_MOUNT_BOAR_OUT: \"img/inv-mount-boar-out.png\", INV_MOUNT_BOAR_IN: \"img/inv-mount-boar-in.png\", INV_MOUNT_BOAR_CLICK: \"img/inv-mount-boar-click.png\", HURT_BOAR: \"img/day-hurt-boar1.png\", BOAR_STEP: \"img/boar1-step.png\", SADDLED: \"img/day-saddle1.png\", SADDLEN: \"img/night-saddle1.png\", INV_SADDLE_OUT: \"img/inv-saddle-out.png\", INV_SADDLE_IN: \"img/inv-saddle-in.png\", INV_SADDLE_CLICK: \"img/inv-saddle-click.png\", WAND1D: \"img/day-magic-wand0.png\", WAND1N: \"img/night-magic-wand0.png\", LIGHT_WAND1D: \"img/day-light-wand1.png\", LIGHT_WAND1N: \"img/night-light-wand1.png\", INV_WAND1_OUT: \"img/inv-magic-wand0-out.png\", INV_WAND1_IN: \"img/inv-magic-wand0-in.png\", INV_WAND1_CLICK: \"img/inv-magic-wand0-click.png\", WAND2D: \"img/day-magic-wand1.png\", WAND2N: \"img/night-magic-wand1.png\", LIGHT_WAND0D: \"img/day-light-wand0.png\", LIGHT_WAND0N: \"img/night-light-wand0.png\", INV_WAND2_OUT: \"img/inv-magic-wand1-out.png\", INV_WAND2_IN: \"img/inv-magic-wand1-in.png\", INV_WAND2_CLICK: \"img/inv-magic-wand1-click.png\", FIREFLYD: \"img/day-firefly.png\", FIREFLYN: \"img/night-firefly.png\", HURT_FIREFLY: \"img/hurt-firefly.png\", INV_FIREFLY_OUT: \"img/inv-firefly-out.png\", INV_FIREFLY_IN: \"img/inv-firefly-in.png\", INV_FIREFLY_CLICK: \"img/inv-firefly-click.png\", BABY_DRAGOND: \"img/day-baby-dragon.png\", BABY_DRAGONN: \"img/night-baby-dragon.png\", BABY_DRAGON_ATTACKD: \"img/day-baby-dragon-angry.png\", BABY_DRAGON_ATTACKN: \"img/night-baby-dragon-angry.png\", BABY_DRAGON_TAMEDD: \"img/day-baby-dragon-tamed.png\", BABY_DRAGON_TAMEDN: \"img/night-baby-dragon-tamed.png\", BABY_DRAGON_WING_LEFT_ATTACKD: \"img/day-wing-dragon-left-angry.png\", BABY_DRAGON_WING_LEFT_ATTACKN: \"img/night-dragon-wing-left-angry.png\", BABY_DRAGON_WING_RIGHT_ATTACKD: \"img/day-wing-dragon-right-angry.png\", BABY_DRAGON_WING_RIGHT_ATTACKN: \"img/night-dragon-wing-right-angry.png\", BABY_DRAGON_WING_LEFT_TAMEDD: \"img/day-wing-dragon-left-tamed.png\", BABY_DRAGON_WING_LEFT_TAMEDN: \"img/night-dragon-wing-left-tamed.png\", BABY_DRAGON_WING_RIGHT_TAMEDD: \"img/day-wing-dragon-right-tamed.png\", BABY_DRAGON_WING_RIGHT_TAMEDN: \"img/night-wing-dragon-right-tamed.png\", BABY_DRAGON_WING_LEFTD: \"img/day-wing-dragon-left.png\", BABY_DRAGON_WING_LEFTN: \"img/night-dragon-wing-left.png\", BABY_DRAGON_WING_RIGHTD: \"img/day-wing-dragon-right.png\", BABY_DRAGON_WING_RIGHTN: \"img/night-wing-dragon-right.png\", HURT_BABY_DRAGON: \"img/hurt-baby-dragon.png\", HURT_BABY_DRAGON_WING_LEFT: \"img/hurt-baby-dragon-wing-left.png\", HURT_BABY_DRAGON_WING_RIGHT: \"img/hurt-baby-dragon-wing-right.png\", INV_BABY_DRAGON_OUT: \"img/inv-baby-dragon-out.png\", INV_BABY_DRAGON_IN: \"img/inv-baby-dragon-in.png\", INV_BABY_DRAGON_CLICK: \"img/inv-baby-dragon-click.png\", BABY_LAVAD: \"img/day-baby-lava.png\", BABY_LAVAN: \"img/night-baby-lava.png\", BABY_LAVA_ATTACKD: \"img/day-baby-lava-angry.png\", BABY_LAVA_ATTACKN: \"img/night-baby-lava-angry.png\", BABY_LAVA_TAMEDD: \"img/day-baby-lava-tamed.png\", BABY_LAVA_TAMEDN: \"img/night-baby-lava-tamed.png\", BABY_LAVA_WING_LEFT_ATTACKD: \"img/day-wing-lava-left-angry.png\", BABY_LAVA_WING_LEFT_ATTACKN: \"img/night-wing-lava-left-angry.png\", BABY_LAVA_WING_RIGHT_ATTACKD: \"img/day-wing-lava-right-angry.png\", BABY_LAVA_WING_RIGHT_ATTACKN: \"img/night-wing-lava-right-angry.png\", BABY_LAVA_WING_LEFT_TAMEDD: \"img/day-wing-lava-left-tamed.png\", BABY_LAVA_WING_LEFT_TAMEDN: \"img/night-wing-lava-left-tamed.png\", BABY_LAVA_WING_RIGHT_TAMEDD: \"img/day-wing-lava-right-tamed.png\", BABY_LAVA_WING_RIGHT_TAMEDN: \"img/night-wing-lava-right-tamed.png\", BABY_LAVA_WING_LEFTD: \"img/day-wing-lava-left.png\", BABY_LAVA_WING_LEFTN: \"img/night-wing-lava-left.png\", BABY_LAVA_WING_RIGHTD: \"img/day-wing-lava-right.png\", BABY_LAVA_WING_RIGHTN: \"img/night-wing-lava-right.png\", HURT_BABY_LAVA: \"img/hurt-baby-lava.png\", HURT_BABY_LAVA_WING_LEFT: \"img/hurt-baby-lava-wing-left.png\", HURT_BABY_LAVA_WING_RIGHT: \"img/hurt-baby-lava-wing-right.png\", INV_BABY_LAVA_OUT: \"img/inv-baby-lava-out.png\", INV_BABY_LAVA_IN: \"img/inv-baby-lava-in.png\", INV_BABY_LAVA_CLICK: \"img/inv-baby-lava-click.png\", HAWKD: \"img/day-falcon.png\", HAWKN: \"img/night-falcon.png\", HAWK_ATTACKD: \"img/day-falcon-angry.png\", HAWK_ATTACKN: \"img/night-falcon-angry.png\", HAWK_GROUNDD: \"img/day-falcon-ground.png\", HAWK_GROUNDN: \"img/night-falcon-ground.png\", HAWK_GROUND_ATTACKD: \"img/day-falcon-ground-angry.png\", HAWK_GROUND_ATTACKN: \"img/night-falcon-ground-angry.png\", HAWK_WING_LEFTD: \"img/day-falcon-wings-left.png\", HAWK_WING_LEFTN: \"img/night-falcon-wings-left.png\", HAWK_WING_RIGHTD: \"img/day-falcon-wings-right.png\", HAWK_WING_RIGHTN: \"img/night-falcon-wings-right.png\", HAWK_WING_LEFT_ATTACKD: \"img/day-falcon-angry-wings-left.png\", HAWK_WING_LEFT_ATTACKN: \"img/night-falcon-angry-wings-left.png\", HAWK_WING_RIGHT_ATTACKD: \"img/day-falcon-angry-wings-right.png\", HAWK_WING_RIGHT_ATTACKN: \"img/night-falcon-angry-wings-right.png\", HAWK_WING_LEFT_TAMEDD: \"img/day-falcon-wings-left-tamed.png\", HAWK_WING_LEFT_TAMEDN: \"img/night-falcon-wings-left-tamed.png\", HAWK_WING_RIGHT_TAMEDD: \"img/day-falcon-wings-right-tamed.png\", HAWK_WING_RIGHT_TAMEDN: \"img/night-falcon-wings-right-tamed.png\", HAWK_TAMEDD: \"img/day-falcon-tamed.png\", HAWK_TAMEDN: \"img/night-falcon-tamed.png\", HURT_HAWK_GROUND: \"img/hurt-falcon-ground.png\", HURT_HAWK: \"img/hurt-falcon.png\", HURT_HAWK_WING_LEFT: \"img/hurt-falcon-wings-left.png\", HURT_HAWK_WING_RIGHT: \"img/hurt-falcon-wings-right.png\", INV_HAWK_OUT: \"img/inv-falcon-out.png\", INV_HAWK_IN: \"img/inv-falcon-in.png\", INV_HAWK_CLICK: \"img/inv-falcon-click.png\", CRAB_BOSSD: \"img/day-crab-boss.png\", CRAB_BOSSN: \"img/night-crab-boss.png\", CRAB_BOSS_ATTACKD: \"img/day-crab-boss-angry.png\", CRAB_BOSS_ATTACKN: \"img/night-crab-boss-angry.png\", CRAB_BOSS_TAMEDD: \"img/day-crab-boss-tamed.png\", CRAB_BOSS_TAMEDN: \"img/night-crab-boss-tamed.png\", CRAB_BOSS_CLAW_LEFT_ATTACKD: \"img/day-crab-boss-claw-left-attack.png\", CRAB_BOSS_CLAW_LEFT_ATTACKN: \"img/night-crab-boss-claw-left-attack.png\", CRAB_BOSS_CLAW_RIGHT_ATTACKD: \"img/day-crab-boss-claw-right-attack.png\", CRAB_BOSS_CLAW_RIGHT_ATTACKN: \"img/night-crab-boss-claw-right-attack.png\", CRAB_BOSS_CLAW_LEFT_TAMEDD: \"img/day-crab-boss-claw-left-tamed.png\", CRAB_BOSS_CLAW_LEFT_TAMEDN: \"img/night-crab-boss-claw-left-tamed.png\", CRAB_BOSS_CLAW_RIGHT_TAMEDD: \"img/day-crab-boss-claw-right-tamed.png\", CRAB_BOSS_CLAW_RIGHT_TAMEDN: \"img/night-crab-boss-claw-right-tamed.png\", CRAB_BOSS_CLAW_LEFTD: \"img/day-crab-boss-claw-left.png\", CRAB_BOSS_CLAW_LEFTN: \"img/night-crab-boss-claw-left.png\", CRAB_BOSS_CLAW_RIGHTD: \"img/day-crab-boss-claw-right.png\", CRAB_BOSS_CLAW_RIGHTN: \"img/night-crab-boss-claw-right.png\", HURT_CRAB_BOSS: \"img/hurt-crab-boss.png\", HURT_CRAB_BOSS_CLAW_LEFT: \"img/hurt-crab-boss-claw-left.png\", HURT_CRAB_BOSS_CLAW_RIGHT: \"img/hurt-crab-boss-claw-right.png\", HEAL_CRAB_BOSS: \"img/heal-crab-boss.png\", HEAL_CRAB_BOSS_CLAW_LEFT: \"img/heal-crab-boss-claw-left.png\", HEAL_CRAB_BOSS_CLAW_RIGHT: \"img/heal-crab-boss-claw-right.png\", CRAB_STEP: \"img/crab-step.png\", INV_CRAB_BOSS_OUT: \"img/inv-crab-boss-out.png\", INV_CRAB_BOSS_IN: \"img/inv-crab-boss-in.png\", INV_CRAB_BOSS_CLICK: \"img/inv-crab-boss-click.png\", CACTUSD: \"img/day-cactus10.png\", CACTUSN: \"img/night-cactus10.png\", INV_CACTUS_OUT: \"img/inv-cactus-out.png\", INV_CACTUS_IN: \"img/inv-cactus-in.png\", INV_CACTUS_CLICK: \"img/inv-cactus-click.png\", SCORPIOND: \"img/day-scorpion.png\", SCORPIONN: \"img/night-scorpion.png\", SCORPION_HAND_LEFTD: \"img/day-scorpion-hand-left.png\", SCORPION_HAND_LEFTN: \"img/night-scorpion-hand-left.png\", SCORPION_HAND_RIGHTD: \"img/day-scorpion-hand-right.png\", SCORPION_HAND_RIGHTN: \"img/night-scorpion-hand-right.png\", HURT_SCORPION: \"img/hurt-scorpion.png\", HURT_SCORPION_HAND_LEFT: \"img/hurt-scorpion-hand-left.png\", HURT_SCORPION_HAND_RIGHT: \"img/hurt-scorpion-hand-right.png\", VULTURED: \"img/day-vulture.png\", VULTUREN: \"img/night-vulture.png\", VULTURE_ATTACKD: \"img/day-vulture-angry.png\", VULTURE_ATTACKN: \"img/night-vulture-angry.png\", VULTURE_GROUNDD: \"img/day-vulture-ground.png\", VULTURE_GROUNDN: \"img/night-vulture-ground.png\", VULTURE_GROUND_ATTACKD: \"img/day-vulture-ground-angry.png\", VULTURE_GROUND_ATTACKN: \"img/night-vulture-ground-angry.png\", VULTURE_WING_LEFTD: \"img/day-vulture-wings-left.png\", VULTURE_WING_LEFTN: \"img/night-vulture-wings-left.png\", VULTURE_WING_RIGHTD: \"img/day-vulture-wings-right.png\", VULTURE_WING_RIGHTN: \"img/night-vulture-wings-right.png\", VULTURE_WING_LEFT_ATTACKD: \"img/day-vulture-angry-wings-left.png\", VULTURE_WING_LEFT_ATTACKN: \"img/night-vulture-angry-wings-left.png\", VULTURE_WING_RIGHT_ATTACKD: \"img/day-vulture-angry-wings-right.png\", VULTURE_WING_RIGHT_ATTACKN: \"img/night-vulture-angry-wings-right.png\", VULTURE_WING_LEFT_TAMEDD: \"img/day-vulture-wings-left-tamed.png\", VULTURE_WING_LEFT_TAMEDN: \"img/night-vulture-wings-left-tamed.png\", VULTURE_WING_RIGHT_TAMEDD: \"img/day-vulture-wings-right-tamed.png\", VULTURE_WING_RIGHT_TAMEDN: \"img/night-vulture-wings-right-tamed.png\", VULTURE_TAMEDD: \"img/day-vulture-tamed.png\", VULTURE_TAMEDN: \"img/night-vulture-tamed.png\", HURT_VULTURE_GROUND: \"img/hurt-vulture-ground.png\", HURT_VULTURE: \"img/hurt-vulture.png\", HURT_VULTURE_WING_LEFT: \"img/hurt-vulture-wings-left.png\", HURT_VULTURE_WING_RIGHT: \"img/hurt-vulture-wings-right.png\", ALOE_VERAD: \"img/day-aloe-vera.png\", ALOE_VERAN: \"img/night-aloe-vera.png\", INV_ALOE_VERA_OUT: \"img/inv-aloe-vera-out.png\", INV_ALOE_VERA_IN: \"img/inv-aloe-vera-in.png\", INV_ALOE_VERA_CLICK: \"img/inv-aloe-vera-click.png\", ALOE_VERA_GROWND: \"img/day-aloe-vera-grown.png\", ALOE_VERA_GROWNN: \"img/night-aloe-vera-grown.png\", ALOE_VERA_DRIEDD: \"img/day-aloe-vera-dried.png\", ALOE_VERAN_DRIEDN: \"img/night-aloe-vera-dried.png\", TURBAN1D: \"img/day-turban1.png\", TURBAN1N: \"img/night-turban1.png\", TURBAN2D: \"img/day-turban2.png\", TURBAN2N: \"img/night-turban2.png\", INV_TURBAN2_OUT: \"img/inv-turban2-out.png\", INV_TURBAN2_IN: \"img/inv-turban2-in.png\", INV_TURBAN2_CLICK: \"img/inv-turban2-click.png\", INV_TURBAN1_OUT: \"img/inv-turban1-out.png\", INV_TURBAN1_IN: \"img/inv-turban1-in.png\", INV_TURBAN1_CLICK: \"img/inv-turban1-click.png\", PITCHFORK2D: \"img/day-pitchfork2.png\", PITCHFORK2N: \"img/night-pitchfork2.png\", INV_PITCHFORK2_OUT: \"img/inv-pitchfork2-out.png\", INV_PITCHFORK2_IN: \"img/inv-pitchfork2-in.png\", INV_PITCHFORK2_CLICK: \"img/inv-pitchfork2-click.png\", INV_PITCHFORK_PART_CLICK: \"img/inv-gold-fork-click.png\", INV_PILOT_GLASSES_CLICK: \"img/inv-pilot-glasses-click.png\", PILOT_HELMETD: \"img/day-pilot-helmet.png\", PILOT_HELMETN: \"img/night-pilot-helmet.png\", INV_PILOT_HELMET_OUT: \"img/inv-pilot-helmet-out.png\", INV_PILOT_HELMET_IN: \"img/inv-pilot-helmet-in.png\", INV_PILOT_HELMET_CLICK: \"img/inv-pilot-helmet-click.png\", SAND_WORM0D: \"img/day-sandworm0.png\", SAND_WORM1D: \"img/day-sandworm1.png\", SAND_WORM2D: \"img/day-sandworm2.png\", SAND_WORM0N: \"img/night-sandworm0.png\", SAND_WORM1N: \"img/night-sandworm1.png\", SAND_WORM2N: \"img/night-sandworm2.png\", HURT_SAND_WORM0: \"img/hurt-sandworm0.png\", HURT_SAND_WORM1: \"img/hurt-sandworm1.png\", HURT_SAND_WORM2: \"img/hurt-sandworm2.png\", INV_VULTURE_FEATHER: \"img/inv-vulture-feather-click.png\", EMERALD0D: \"img/day-emerald0.png\", EMERALD0N: \"img/night-emerald0.png\", EMERALD1D: \"img/day-emerald1.png\", EMERALD1N: \"img/night-emerald1.png\", EMERALD2D: \"img/day-emerald2.png\", EMERALD2N: \"img/night-emerald2.png\", INV_EMERALD: \"img/inv-emerald-click.png\", INV_SANDWORM_JUICE_OUT: \"img/inv-sworm-juice-out.png\", INV_SANDWORM_JUICE_IN: \"img/inv-sworm-juice-in.png\", INV_SANDWORM_JUICE_CLICK: \"img/inv-sworm-juice-click.png\", EMERALD_MACHINED: \"img/day-point-machine.png\", EMERALD_MACHINEN: \"img/night-point-machine.png\", EMERALD_MACHINE_HOLED: \"img/day-point-machine-hole.png\", EMERALD_MACHINE_HOLEN: \"img/night-point-machine-hole.png\", EMERALD_MACHINE_GROUNDD: \"img/day-point-machine-ground.png\", EMERALD_MACHINE_GROUNDN: \"img/night-point-machine-ground.png\", EMERALD_MACHINE_ROTATED: \"img/day-point-machine-rotate.png\", EMERALD_MACHINE_ROTATEN: \"img/night-point-machine-rotate.png\", INV_EMERALD_MACHINE_OUT: \"img/inv-point-machine-out.png\", INV_EMERALD_MACHINE_IN: \"img/inv-point-machine-in.png\", INV_EMERALD_MACHINE_CLICK: \"img/inv-point-machine-click.png\", EXTRACTOR_MACHINE0_STONED: \"img/day-extractor-machine0-stone.png\", EXTRACTOR_MACHINE0_STONEN: \"img/night-extractor-machine0-stone.png\", EXTRACTOR_MACHINE_STONED: \"img/day-extractor-machine-stone.png\", EXTRACTOR_MACHINE_STONEN: \"img/night-extractor-machine-stone.png\", INV_EXTRACTOR_MACHINE_STONE_OUT: \"img/inv-extractor-machine-stone-out.png\", INV_EXTRACTOR_MACHINE_STONE_IN: \"img/inv-extractor-machine-stone-in.png\", INV_EXTRACTOR_MACHINE_STONE_CLICK: \"img/inv-extractor-machine-stone-click.png\", EXTRACTOR_MACHINE0_GOLDD: \"img/day-extractor-machine0-gold.png\", EXTRACTOR_MACHINE0_GOLDN: \"img/night-extractor-machine0-gold.png\", EXTRACTOR_MACHINE_GOLDD: \"img/day-extractor-machine-gold.png\", EXTRACTOR_MACHINE_GOLDN: \"img/night-extractor-machine-gold.png\", INV_EXTRACTOR_MACHINE_GOLD_OUT: \"img/inv-extractor-machine-gold-out.png\", INV_EXTRACTOR_MACHINE_GOLD_IN: \"img/inv-extractor-machine-gold-in.png\", INV_EXTRACTOR_MACHINE_GOLD_CLICK: \"img/inv-extractor-machine-gold-click.png\", EXTRACTOR_MACHINE0_DIAMONDD: \"img/day-extractor-machine0-diamond.png\", EXTRACTOR_MACHINE0_DIAMONDN: \"img/night-extractor-machine0-diamond.png\", EXTRACTOR_MACHINE_DIAMONDD: \"img/day-extractor-machine-diamond.png\", EXTRACTOR_MACHINE_DIAMONDN: \"img/night-extractor-machine-diamond.png\", INV_EXTRACTOR_MACHINE_DIAMOND_OUT: \"img/inv-extractor-machine-diamond-out.png\", INV_EXTRACTOR_MACHINE_DIAMOND_IN: \"img/inv-extractor-machine-diamond-in.png\", INV_EXTRACTOR_MACHINE_DIAMOND_CLICK: \"img/inv-extractor-machine-diamond-click.png\", EXTRACTOR_MACHINE0_AMETHYSTD: \"img/day-extractor-machine0-amethyst.png\", EXTRACTOR_MACHINE0_AMETHYSTN: \"img/night-extractor-machine0-amethyst.png\", EXTRACTOR_MACHINE_AMETHYSTD: \"img/day-extractor-machine-amethyst.png\", EXTRACTOR_MACHINE_AMETHYSTN: \"img/night-extractor-machine-amethyst.png\", INV_EXTRACTOR_MACHINE_AMETHYST_OUT: \"img/inv-extractor-machine-amethyst-out.png\", INV_EXTRACTOR_MACHINE_AMETHYST_IN: \"img/inv-extractor-machine-amethyst-in.png\", INV_EXTRACTOR_MACHINE_AMETHYST_CLICK: \"img/inv-extractor-machine-amethyst-click.png\", EXTRACTOR_MACHINE0_REIDITED: \"img/day-extractor-machine0-reidite.png\", EXTRACTOR_MACHINE0_REIDITEN: \"img/night-extractor-machine0-reidite.png\", EXTRACTOR_MACHINE_REIDITED: \"img/day-extractor-machine-reidite.png\", EXTRACTOR_MACHINE_REIDITEN: \"img/night-extractor-machine-reidite.png\", INV_EXTRACTOR_MACHINE_REIDITE_OUT: \"img/inv-extractor-machine-reidite-out.png\", INV_EXTRACTOR_MACHINE_REIDITE_IN: \"img/inv-extractor-machine-reidite-in.png\", INV_EXTRACTOR_MACHINE_REIDITE_CLICK: \"img/inv-extractor-machine-reidite-click.png\", EXTRACTOR_CASES: \"img/extractor-cases.png\", HEND: \"img/day-golden-hen.png\", HENN: \"img/night-golden-hen.png\", CHICKEND: \"img/day-golden-chicken.png\", CHICKENN: \"img/night-golden-chicken.png\", HURT_GOLDEN_HEN: \"img/hurt-golden-hen.png\", HURT_GOLDEN_CHICKEN: \"img/hurt-golden-chicken.png\", LOGO_INTERFACE: \"img/logo-interface.png\", FOREST_MODE_HOVER: \"img/forest-mode-hover.png\", NORMAL_MODE_HOVER: \"img/normal-mode-hover.png\", VAMPIRE_MODE_HOVER: \"img/vampire-mode-hover.png\", ZOMBIE_MODE_HOVER: \"img/zombie-mode-hover.png\", MODE_COMMUNITY_HOVER: \"img/community-mode-hover2.png\", MODE_EXPERIMENTAL_HOVER: \"img/experimental-mode-hover.png\", ZOMBIE_MODE_OUT: \"img/zombie-mode-out.png\", ZOMBIE_MODE_IN: \"img/zombie-mode-in.png\", ZOMBIE_MODE_CLICK: \"img/zombie-mode-click.png\", VAMPIRE_MODE_OUT: \"img/vampire-mode-out.png\", VAMPIRE_MODE_IN: \"img/vampire-mode-in.png\", VAMPIRE_MODE_CLICK: \"img/vampire-mode-click.png\", NORMAL_MODE_OUT: \"img/normal-mode-out.png\", NORMAL_MODE_IN: \"img/normal-mode-in.png\", NORMAL_MODE_CLICK: \"img/normal-mode-click.png\", FOREST_MODE_OUT: \"img/forest-mode-out.png\", FOREST_MODE_IN: \"img/forest-mode-in.png\", FOREST_MODE_CLICK: \"img/forest-mode-click.png\", MODE_COMMUNITY_OUT: \"img/community-mode-out.png\", MODE_COMMUNITY_IN: \"img/community-mode-in.png\", MODE_COMMUNITY_CLICK: \"img/community-mode-click.png\", MODE_EXPERIMENTAL_OUT: \"img/experimental-modes-out.png\", MODE_EXPERIMENTAL_IN: \"img/experimental-modes-in.png\", MODE_EXPERIMENTAL_CLICK: \"img/experimental-modes-click.png\", YOUTUBE_BUTTON_OUT: \"img/youtube-button-out.png\", YOUTUBE_BUTTON_IN: \"img/youtube-button-in.png\", YOUTUBE_BUTTON_CLICK: \"img/youtube-button-click.png\", WIKI_BUTTON_OUT: \"img/wiki-button-out.png\", WIKI_BUTTON_IN: \"img/wiki-button-in.png\", WIKI_BUTTON_CLICK: \"img/wiki-button-click.png\", TWITTER_BUTTON_OUT: \"img/twitter-button-out.png\", TWITTER_BUTTON_IN: \"img/twitter-button-in.png\", TWITTER_BUTTON_CLICK: \"img/twitter-button-click.png\", FACEBOOK_BUTTON_OUT: \"img/facebook-button-out.png\", FACEBOOK_BUTTON_IN: \"img/facebook-button-in.png\", FACEBOOK_BUTTON_CLICK: \"img/facebook-button-click.png\", REDDIT_BUTTON_OUT: \"img/reddit-button-out.png\", REDDIT_BUTTON_IN: \"img/reddit-button-in.png\", REDDIT_BUTTON_CLICK: \"img/reddit-button-click.png\", DISCORD_BUTTON_OUT: \"img/discord-button-out.png\", DISCORD_BUTTON_IN: \"img/discord-button-in.png\", DISCORD_BUTTON_CLICK: \"img/discord-button-click.png\", TERMINAL_BUTTON_OUT: \"img/terminal-button-out.png\", TERMINAL_BUTTON_IN: \"img/terminal-button-in.png\", TERMINAL_BUTTON_CLICK: \"img/terminal-button-click.png\", RESTART_OUT: \"img/restart-out.png\", RESTART_IN: \"img/restart-in.png\", RESTART_CLICK: \"img/restart-click.png\", GUIDE_OUT: \"img/guide-out.png\", GUIDE_IN: \"img/guide-in.png\", GUIDE_CLICK: \"img/guide-click.png\", COPY_PASTE_OUT: \"img/copy-paste-out.png\", COPY_PASTE_IN: \"img/copy-paste-in.png\", COPY_PASTE_CLICK: \"img/copy-paste-click.png\", LINKS_BG: \"img/link-buttons-bg.png\", CHANGELOG_BOX: \"img/changelog-box2.png\", CHANGELOG_BUTTON_OUT: \"img/changelog_29.png\", DEVASTIO_BUTTON_OUT: \"img/banner-devast.png\", PROFILE_BUTTON_OUT: \"img/profile-button-out.png\", PROFILE_BUTTON_IN: \"img/profile-button-in.png\", PROFILE_BUTTON_CLICK: \"img/profile-button-click.png\", LOGIN_BUTTON_OUT: \"img/login-button-out.png\", LOGIN_BUTTON_IN: \"img/login-button-in.png\", LOGIN_BUTTON_CLICK: \"img/login-button-click.png\", LOGIN_GOOGLE_OUT: \"img/login-google-out.png\", LOGIN_GOOGLE_IN: \"img/login-google-in.png\", LOGIN_GOOGLE_CLICK: \"img/login-google-click.png\", LOGIN_FACEBOOK_OUT: \"img/login-facebook-out.png\", LOGIN_FACEBOOK_IN: \"img/login-facebook-in.png\", LOGIN_FACEBOOK_CLICK: \"img/login-facebook-click.png\", ACCOUNT_BOX: \"img/account-box.png\", ACCOUNT_MAINTENANCE: \"img/account-under-maintenance.png\", CLOSE_BUTTON_OUT: \"img/close-button-account-out.png\", CLOSE_BUTTON_IN: \"img/close-button-account-in.png\", CLOSE_BUTTON_CLICK: \"img/close-button-account-click.png\", PLAY_BUTTON_OUT: \"img/play-button-out.png\", PLAY_BUTTON_IN: \"img/play-button-in.png\", PLAY_BUTTON_CLICK: \"img/play-button-click.png\", MODIFY_NAME_OUT: \"img/modify-name-out.png\", MODIFY_NAME_IN: \"img/modify-name-in.png\", MODIFY_NAME_CLICK: \"img/modify-name-click.png\", YES_BUTTON_OUT: \"img/yes-button-out.png\", YES_BUTTON_IN: \"img/yes-button-in.png\", YES_BUTTON_CLICK: \"img/yes-button-click.png\", YES_300_BUTTON_OUT: \"img/yes-300-button-out.png\", YES_300_BUTTON_IN: \"img/yes-300-button-in.png\", YES_300_BUTTON_CLICK: \"img/yes-300-button-click.png\", NO_BUTTON_OUT: \"img/no-button-out.png\", NO_BUTTON_IN: \"img/no-button-in.png\", NO_BUTTON_CLICK: \"img/no-button-click.png\", NO_THANKS_BUTTON_OUT: \"img/no-thanks-button-out.png\", NO_THANKS_BUTTON_IN: \"img/no-thanks-button-in.png\", NO_THANKS_BUTTON_CLICK: \"img/no-thanks-button-click.png\", SHOP_BUTTON_OUT: \"img/shop-button-out.png\", SHOP_BUTTON_IN: \"img/shop-button-in.png\", SHOP_BUTTON_CLICK: \"img/shop-button-click.png\", LOGOUT_OUT: \"img/logout-out.png\", LOGOUT_IN: \"img/logout-in.png\", LOGOUT_CLICK: \"img/logout-click.png\", TERMS_BUTTON_OUT: \"img/terms-button-out.png\", TERMS_BUTTON_IN: \"img/terms-button-in.png\", TERMS_BUTTON_CLICK: \"img/terms-button-click.png\", TUTORIAL_ICON: \"img/tutorial-icon.png\", SKINS_ICON: \"img/skins-icon.png\", SHOP_ICON: \"img/shop-icon.png\", PAINT_ICON: \"img/paint-icon.png\", LEADERBOARD_ICON: \"img/leaderboard-icon.png\", START_ICON: \"img/start-icon.png\", PROFILE_ICON: \"img/profile-icon.png\", SERVER_ACCESS_ICON: \"img/server-access-icon2.png\", ICONS_BG_BUTTON_OUT: \"img/button-homepage-bg-out.png\", ICONS_BG_BUTTON_IN: \"img/button-homepage-bg-in.png\", ICONS_BG_BUTTON_CLICK: \"img/button-homepage-bg-click.png\", ICONS_BOTTOM_BG_BUTTON_OUT: \"img/button-bottom-homepage-bg-out.png\", ICONS_BOTTOM_BG_BUTTON_IN: \"img/button-bottom-homepage-bg-in.png\", ICONS_BOTTOM_BG_BUTTON_CLICK: \"img/button-bottom-homepage-bg-click.png\", AVATAR_RESUME: \"img/lvl-player.png\", AVATAR_LVL1: \"img/avatar-player.png\", AVATAR_LVL2: \"img/avatar-player1.png\", AVATAR_LVL3: \"img/avatar-player2.png\", AVATAR_LVL4: \"img/avatar-player3.png\", AVATAR_LVL5: \"img/avatar-player4.png\", AVATAR_LVL6: \"img/avatar-player5.png\", AVATAR_LVL7: \"img/avatar-player6.png\", AVATAR_LVL8: \"img/avatar-player7.png\", AVATAR_LVL9: \"img/avatar-player8.png\", AVATAR_LVL10: \"img/avatar-player9.png\", AVATAR_LVL11: \"img/avatar-player10.png\", AVATAR_LVL12: \"img/avatar-player11.png\", AVATAR_LVL13: \"img/avatar-player12.png\", AVATAR_LVL14: \"img/avatar-player13.png\", AVATAR_LVL15: \"img/avatar-player14.png\", AVATAR_LVL16: \"img/avatar-player14.png\", AVATAR_LVL17: \"img/avatar-player14.png\", AVATAR_LVL18: \"img/avatar-player14.png\", GOLDEN_BREAD: \"img/golden-bread.png\", BUY_BREAD_OUT: \"img/buy-bread-out.png\", BUY_BREAD_IN: \"img/buy-bread-in.png\", BUY_BREAD_CLICK: \"img/buy-bread-click.png\", GAUGE: \"img/gauge.png\", SEASON_4: \"img/season-4-out.png\", SEASON_4_IN: \"img/season-4-in.png\", SEASON_4_OUT: \"img/season-4-click.png\", SEASON4_BOX: \"img/season4-box.png\", SEASON_5: \"img/season-5-out.png\", SEASON_5_IN: \"img/season-5-in.png\", SEASON_5_OUT: \"img/season-5-click.png\", SEASON5_BOX: \"img/season5-box.png\", PROFILE_BOX: \"img/profile2-box.png\", SKINS_BOX: \"img/skins-box.png\", SHOP_BOX: \"img/shop-box.png\", PRIVATE_SERVER_BOX: \"img/private-server-box.png\", SERVER_LOCATION_BOX: \"img/location-box.png\", SERVER_DURATION_BOX: \"img/server-duration-box.png\", TUTORIAL_BOX: \"img/tutorial-box.png\", LEADERBOARD_BOX: \"img/leaderboard1-box.png\", BUY_BREAD_BOX: \"img/buy-breads-box.png\", BAG_BOX: \"img/bag-box.png\", CRATE_BOX: \"img/deadbox-box.png\", BOOK_BOX: \"img/book-box.png\", ACCESSORIES_BOX: \"img/accessories-box.png\", CUSTOM_SKIN_BOX: \"img/customskin-box.png\", BAG_REMAIN_BOX: \"img/bag-lasts.png\", SERVER_REMAIN_BOX: \"img/server-lasts.png\", SERVER_ACCESS_BOX: \"img/server-access-box2.png\", LOOT_BOX: \"img/lootbox-box.png\", CHANGE_NICKNAME1_BOX: \"img/change-nickname0.png\", CHANGE_NICKNAME0_BOX: \"img/change-nickname1.png\", CHEATING_BOX: \"img/cheating-box.png\", DAILY_QUEST_BOX: \"img/daily-quest-box.png\", DAILY_5_BREAD: \"img/daily-5-bread.png\", DAILY_10_BREAD: \"img/daily-10-bread.png\", DAILY_VALID: \"img/daily-valid.png\", NORMAL_PROFILE_OUT: \"img/normal-profile-out.png\", NORMAL_PROFILE_IN: \"img/normal-profile-in.png\", NORMAL_PROFILE_CLICK: \"img/normal-profile-click.png\", FOREST_PROFILE_OUT: \"img/forest-profile-out.png\", FOREST_PROFILE_IN: \"img/forest-profile-in.png\", FOREST_PROFILE_CLICK: \"img/forest-profile-click.png\", ZOMBIE_PROFILE_OUT: \"img/zombie-profile-out.png\", ZOMBIE_PROFILE_IN: \"img/zombie-profile-in.png\", ZOMBIE_PROFILE_CLICK: \"img/zombie-profile-click.png\", VAMPIRE_PROFILE_OUT: \"img/vampire-profile-out.png\", VAMPIRE_PROFILE_IN: \"img/vampire-profile-in.png\", VAMPIRE_PROFILE_CLICK: \"img/vampire-profile-click.png\", TOTAL_PROFILE_OUT: \"img/total-profile-out.png\", TOTAL_PROFILE_IN: \"img/total-profile-in.png\", TOTAL_PROFILE_CLICK: \"img/total-profile-click.png\", SEASON1_PROFILE_OUT: \"img/season1-profile-out.png\", SEASON1_PROFILE_IN: \"img/season1-profile-in.png\", SEASON1_PROFILE_CLICK: \"img/season1-profile-click.png\", SEASON2_PROFILE_OUT: \"img/season2-profile-out.png\", SEASON2_PROFILE_IN: \"img/season2-profile-in.png\", SEASON2_PROFILE_CLICK: \"img/season2-profile-click.png\", SEASON3_PROFILE_OUT: \"img/season3-profile-out.png\", SEASON3_PROFILE_IN: \"img/season3-profile-in.png\", SEASON3_PROFILE_CLICK: \"img/season3-profile-click.png\", SEASON4_PROFILE_OUT: \"img/season4-profile-out.png\", SEASON4_PROFILE_IN: \"img/season4-profile-in.png\", SEASON4_PROFILE_CLICK: \"img/season4-profile-click.png\", SEASON5_PROFILE_OUT: \"img/season5-profile-out.png\", SEASON5_PROFILE_IN: \"img/season5-profile-in.png\", SEASON5_PROFILE_CLICK: \"img/season5-profile-click.png\", LOCKED_SKIN_ALERT: \"img/locked-skin-alert.png\", LOCKED_CUSTOM_ALERT: \"img/locked-custom-alert.png\", RED_LOCKED: \"img/bg-red-locked.png\", SKIN_BUTTON_OUT: \"img/skin-button-out.png\", SKIN_BUTTON_IN: \"img/skin-button-in.png\", SKIN_BUTTON_CLICK: \"img/skin-button-click.png\", ACCESSORY_BUTTON_OUT: \"img/accessory-button-out.png\", ACCESSORY_BUTTON_IN: \"img/accessory-button-in.png\", ACCESSORY_BUTTON_CLICK: \"img/accessory-button-click.png\", BAG_BUTTON_OUT: \"img/bag-button-out.png\", BAG_BUTTON_IN: \"img/bag-button-in.png\", BAG_BUTTON_CLICK: \"img/bag-button-click.png\", BOOK_BUTTON_OUT: \"img/book-button-out.png\", BOOK_BUTTON_IN: \"img/book-button-in.png\", BOOK_BUTTON_CLICK: \"img/book-button-click.png\", CRATE_BUTTON_OUT: \"img/deadbox-button-out.png\", CRATE_BUTTON_IN: \"img/deadbox-button-in.png\", CRATE_BUTTON_CLICK: \"img/deadbox-button-click.png\", LOOT_BUTTON_OUT: \"img/loot-button-out.png\", LOOT_BUTTON_IN: \"img/loot-button-in.png\", LOOT_BUTTON_CLICK: \"img/loot-button-click.png\", FREE_ITEM_OUT: \"img/free-item-out.png\", FREE_ITEM_IN: \"img/free-item-in.png\", FREE_ITEM_CLICK: \"img/free-item-click.png\", WOOD_ITEM_OUT: \"img/wood-item-out.png\", WOOD_ITEM_IN: \"img/wood-item-in.png\", WOOD_ITEM_CLICK: \"img/wood-item-click.png\", STONE_ITEM_OUT: \"img/stone-item.png\", STONE_ITEM_IN: \"img/stone-item-in.png\", STONE_ITEM_CLICK: \"img/stone-item-click.png\", GOLD_ITEM_OUT: \"img/gold-item.png\", GOLD_ITEM_IN: \"img/gold-item-in.png\", GOLD_ITEM_CLICK: \"img/gold-item-click.png\", DIAMOND_ITEM_OUT: \"img/diamond-item.png\", DIAMOND_ITEM_IN: \"img/diamond-item-in.png\", DIAMOND_ITEM_CLICK: \"img/diamond-item-click.png\", AMETHYST_ITEM_OUT: \"img/amethyst-item.png\", AMETHYST_ITEM_IN: \"img/amethyst-item-in.png\", AMETHYST_ITEM_CLICK: \"img/amethyst-item-click.png\", REIDITE_ITEM_OUT: \"img/reidite-item.png\", REIDITE_ITEM_IN: \"img/reidite-item-in.png\", REIDITE_ITEM_CLICK: \"img/reidite-item-click.png\", SPECIAL_ITEM_OUT: \"img/special-item-out.png\", SPECIAL_ITEM_IN: \"img/special-item-in.png\", SPECIAL_ITEM_CLICK: \"img/special-item-click.png\", LEVEL_ITEM_OUT: \"img/level-item-out.png\", LEVEL_ITEM_IN: \"img/level-item-in.png\", LEVEL_ITEM_CLICK: \"img/level-item-click.png\", SKIN_PREVIOUS_OUT: \"img/skin-previous-out.png\", SKIN_PREVIOUS_IN: \"img/skin-previous-in.png\", SKIN_PREVIOUS_CLICK: \"img/skin-previous-click.png\", SKIN_NEXT_OUT: \"img/skin-next-out.png\", SKIN_NEXT_IN: \"img/skin-next-in.png\", SKIN_NEXT_CLICK: \"img/skin-next-click.png\", BACK_BUTTON_OUT: \"img/back-button-out.png\", BACK_BUTTON_IN: \"img/back-button-in.png\", BACK_BUTTON_CLICK: \"img/back-button-click.png\", GET_MORE_BUTTON_OUT: \"img/get-more-button-out.png\", GET_MORE_BUTTON_IN: \"img/get-more-button-in.png\", GET_MORE_BUTTON_CLICK: \"img/get-more-button-click.png\", CURRENCY1_OUT: \"img/currency1-out.png\", CURRENCY1_IN: \"img/currency1-in.png\", CURRENCY1_CLICK: \"img/currency1-click.png\", CURRENCY2_OUT: \"img/currency2-out.png\", CURRENCY2_IN: \"img/currency2-in.png\", CURRENCY2_CLICK: \"img/currency2-click.png\", CURRENCY3_OUT: \"img/currency3-out.png\", CURRENCY3_IN: \"img/currency3-in.png\", CURRENCY3_CLICK: \"img/currency3-click.png\", CURRENCY4_OUT: \"img/currency4-out.png\", CURRENCY4_IN: \"img/currency4-in.png\", CURRENCY4_CLICK: \"img/currency4-click.png\", CURRENCY5_OUT: \"img/currency5-out.png\", CURRENCY5_IN: \"img/currency5-in.png\", CURRENCY5_CLICK: \"img/currency5-click.png\", PRICE1_OUT: \"img/price1-out.png\", PRICE1_IN: \"img/price1-in.png\", PRICE1_CLICK: \"img/price1-click.png\", PRICE2_OUT: \"img/price2-out.png\", PRICE2_IN: \"img/price2-in.png\", PRICE2_CLICK: \"img/price2-click.png\", PRICE3_OUT: \"img/price3-out.png\", PRICE3_IN: \"img/price3-in.png\", PRICE3_CLICK: \"img/price3-click.png\", PRICE4_OUT: \"img/price4-out.png\", PRICE4_IN: \"img/price4-in.png\", PRICE4_CLICK: \"img/price4-click.png\", PRICE5_OUT: \"img/price5-out.png\", PRICE5_IN: \"img/price5-in.png\", PRICE5_CLICK: \"img/price5-click.png\", BUY_PRIVATE_SERVER_OUT: \"img/buy-private-server-out.png\", BUY_PRIVATE_SERVER_IN: \"img/buy-private-server-in.png\", BUY_PRIVATE_SERVER_CLICK: \"img/buy-private-server-click.png\", ATLANTA_OUT: \"img/atlanta-out.png\", ATLANTA_IN: \"img/atlanta-in.png\", ATLANTA_CLICK: \"img/atlanta-click.png\", DALLAS_OUT: \"img/dallas-out.png\", DALLAS_IN: \"img/dallas-in.png\", DALLAS_CLICK: \"img/dallas-click.png\", FREMONT_OUT: \"img/fremont-out.png\", FREMONT_IN: \"img/fremont-in.png\", FREMONT_CLICK: \"img/fremont-click.png\", NEWARK_OUT: \"img/newark-out.png\", NEWARK_IN: \"img/newark-in.png\", NEWARK_CLICK: \"img/newark-click.png\", TORONTO_OUT: \"img/toronto-out.png\", TORONTO_IN: \"img/toronto-in.png\", TORONTO_CLICK: \"img/toronto-click.png\", SINGAPORE_OUT: \"img/singapore-out.png\", SINGAPORE_IN: \"img/singapore-in.png\", SINGAPORE_CLICK: \"img/singapore-click.png\", FRANKFURT_OUT: \"img/frankfurt-out.png\", FRANKFURT_IN: \"img/frankfurt-in.png\", FRANKFURT_CLICK: \"img/frankfurt-click.png\", LONDON_OUT: \"img/london-out.png\", LONDON_IN: \"img/london-in.png\", LONDON_CLICK: \"img/london-click.png\", MUMBAI_OUT: \"img/mumbai-out.png\", MUMBAI_IN: \"img/mumbai-in.png\", MUMBAI_CLICK: \"img/mumbai-click.png\", TOKYO_OUT: \"img/tokyo-out.png\", TOKYO_IN: \"img/tokyo-in.png\", TOKYO_CLICK: \"img/tokyo-click.png\", YES_LOCATION_OUT: \"img/yes-location-out.png\", YES_LOCATION_IN: \"img/yes-location-in.png\", YES_LOCATION_CLICK: \"img/yes-location-click.png\", DAYS3_OUT: \"img/3days-out.png\", DAYS3_IN: \"img/3days-in.png\", DAYS3_CLICK: \"img/3days-click.png\", DAYS7_OUT: \"img/7days-out.png\", DAYS7_IN: \"img/7days-in.png\", DAYS7_CLICK: \"img/7days-click.png\", DAYS30_OUT: \"img/30days-out.png\", DAYS30_IN: \"img/30days-in.png\", DAYS30_CLICK: \"img/30days-click.png\", DAYS90_OUT: \"img/90days-out.png\", DAYS90_IN: \"img/90days-in.png\", DAYS90_CLICK: \"img/90days-click.png\", SPIN1: \"img/spin1.png\", SPIN2: \"img/spin2.png\", SPIN3: \"img/spin3.png\", SPIN4: \"img/spin4.png\", SPIN5: \"img/spin5.png\", SPIN6: \"img/spin6.png\", ARROW_SPIN: \"img/arrow-spin.png\", SPIN_BUTTON_1_OUT: \"img/spin-button-1-out.png\", SPIN_BUTTON_1_IN: \"img/spin-button-1-in.png\", SPIN_BUTTON_1_CLICK: \"img/spin-button-1-click.png\", SPIN_BUTTON_2_OUT: \"img/spin-button-2-out.png\", SPIN_BUTTON_2_IN: \"img/spin-button-2-in.png\", SPIN_BUTTON_2_CLICK: \"img/spin-button-2-click.png\", SPIN_BUTTON_3_OUT: \"img/spin-button-3-out.png\", SPIN_BUTTON_3_IN: \"img/spin-button-3-in.png\", SPIN_BUTTON_3_CLICK: \"img/spin-button-3-click.png\", SPIN_BUTTON_4_OUT: \"img/spin-button-4-out.png\", SPIN_BUTTON_4_IN: \"img/spin-button-4-in.png\", SPIN_BUTTON_4_CLICK: \"img/spin-button-4-click.png\", SPIN_BUTTON_5_OUT: \"img/spin-button-5-out.png\", SPIN_BUTTON_5_IN: \"img/spin-button-5-in.png\", SPIN_BUTTON_5_CLICK: \"img/spin-button-5-click.png\", SPIN_LIGHT: \"img/spin-light.png\", TUTO_WIKI_OUT: \"img/tuto-wiki-out.png\", TUTO_WIKI_IN: \"img/tuto-wiki-in.png\", TUTO_WIKI_CLICK: \"img/tuto-wiki-click.png\", TUTO_PREVIOUS_OUT: \"img/tuto-previous-out.png\", TUTO_PREVIOUS_IN: \"img/tuto-previous-in.png\", TUTO_PREVIOUS_CLICK: \"img/tuto-previous-click.png\", TUTO_NEXT_OUT: \"img/tuto-next-out.png\", TUTO_NEXT_IN: \"img/tuto-next-in.png\", TUTO_NEXT_CLICK: \"img/tuto-next-click.png\", TIME_LEADERBOARD_OUT: \"img/time-leaderboard-out.png\", TIME_LEADERBOARD_IN: \"img/time-leaderboard-in.png\", TIME_LEADERBOARD_CLICK: \"img/time-leaderboard-click.png\", SCORE_LEADERBOARD_OUT: \"img/score-leaderboard-out.png\", SCORE_LEADERBOARD_IN: \"img/score-leaderboard-in.png\", SCORE_LEADERBOARD_CLICK: \"img/score-leaderboard-click.png\", LVL_LEADERBOARD_OUT: \"img/lvl-leaderboard-out.png\", LVL_LEADERBOARD_IN: \"img/lvl-leaderboard-in.png\", LVL_LEADERBOARD_CLICK: \"img/lvl-leaderboard-click.png\", KILL_LEADERBOARD_OUT: \"img/kill-leaderboard-out.png\", KILL_LEADERBOARD_IN: \"img/kill-leaderboard-in.png\", KILL_LEADERBOARD_CLICK: \"img/kill-leaderboard-click.png\", ALL_LEADERBOARD_OUT: \"img/all-leaderboard-out.png\", ALL_LEADERBOARD_IN: \"img/all-leaderboard-in.png\", ALL_LEADERBOARD_CLICK: \"img/all-leaderboard-click.png\", TODAY_LEADERBOARD_OUT: \"img/today-leaderboard-out.png\", TODAY_LEADERBOARD_IN: \"img/today-leaderboard-in.png\", TODAY_LEADERBOARD_CLICK: \"img/today-leaderboard-click.png\", WEEK_LEADERBOARD_OUT: \"img/week-leaderboard-out.png\", WEEK_LEADERBOARD_IN: \"img/week-leaderboard-in.png\", WEEK_LEADERBOARD_CLICK: \"img/week-leaderboard-click.png\", SEASON1_LEADERBOARD_OUT: \"img/season1-out.png\", SEASON1_LEADERBOARD_IN: \"img/season1-in.png\", SEASON1_LEADERBOARD_CLICK: \"img/season1-click.png\", SEASON2_LEADERBOARD_OUT: \"img/season2--out.png\", SEASON2_LEADERBOARD_IN: \"img/season2--in.png\", SEASON2_LEADERBOARD_CLICK: \"img/season2--click.png\", SEASON3_LEADERBOARD_OUT: \"img/season3-out.png\", SEASON3_LEADERBOARD_IN: \"img/season3-in.png\", SEASON3_LEADERBOARD_CLICK: \"img/season3-click.png\", SEASON4_LEADERBOARD_OUT: \"img/season4-out.png\", SEASON4_LEADERBOARD_IN: \"img/season4-in.png\", SEASON4_LEADERBOARD_CLICK: \"img/season4-click.png\", SEASON5_LEADERBOARD_OUT: \"img/season5-out.png\", SEASON5_LEADERBOARD_IN: \"img/season5-in.png\", SEASON5_LEADERBOARD_CLICK: \"img/season5-click.png\", TOTAL_LEAD_OUT: \"img/total-lead-out.png\", TOTAL_LEAD_IN: \"img/total-lead-in.png\", TOTAL_LEAD_CLICK: \"img/total-lead-click.png\", NORMAL_LEAD_OUT: \"img/normal-lead-out.png\", NORMAL_LEAD_IN: \"img/normal-lead-in.png\", NORMAL_LEAD_CLICK: \"img/normal-lead-click.png\", FOREST_LEAD_OUT: \"img/forest-lead-out.png\", FOREST_LEAD_IN: \"img/forest-lead-in.png\", FOREST_LEAD_CLICK: \"img/forest-lead-click.png\", VAMPIRE_LEAD_OUT: \"img/vampire-lead-out.png\", VAMPIRE_LEAD_IN: \"img/vampire-lead-in.png\", VAMPIRE_LEAD_CLICK: \"img/vampire-lead-click.png\", ZOMBIE_LEAD_OUT: \"img/zombie-lead-out.png\", ZOMBIE_LEAD_IN: \"img/zombie-lead-in.png\", ZOMBIE_LEAD_CLICK: \"img/zombie-lead-click.png\", LEVEL5D: \"img/day-level5.png\", LEVEL5N: \"img/night-level5.png\", LEVEL10D: \"img/day-level10.png\", LEVEL10N: \"img/night-level10.png\", LEVEL15D: \"img/day-level15.png\", LEVEL15N: \"img/night-level15.png\", LEVEL20D: \"img/day-level20.png\", LEVEL20N: \"img/night-level20.png\", LEVEL25D: \"img/day-level25.png\", LEVEL25N: \"img/night-level25.png\", LEVEL30D: \"img/day-level30.png\", LEVEL30N: \"img/night-level30.png\", LEVEL35D: \"img/day-level35.png\", LEVEL35N: \"img/night-level35.png\", LEVEL40D: \"img/day-level40.png\", LEVEL40N: \"img/night-level40.png\", LEVEL45D: \"img/day-level45.png\", LEVEL45N: \"img/night-level45.png\", LEVEL50D: \"img/day-level50.png\", LEVEL50N: \"img/night-level50.png\", LEVEL55D: \"img/day-level55.png\", LEVEL55N: \"img/night-level55.png\", LEVEL60D: \"img/day-level60.png\", LEVEL60N: \"img/night-level60.png\", SKIN_DEVASTD: \"img/day-skin-devast0.png\", SKIN_DEVASTN: \"img/night-skin-devast0.png\", HAND_DEVASTD: \"img/day-hand-devaster.png\", HAND_DEVASTN: \"img/night-hand-devaster.png\", SKIN_STARD: \"img/day-skin-star0.png\", SKIN_STARN: \"img/night-skin-star0.png\", HAND_STARD: \"img/day-hand-star0.png\", HAND_STARN: \"img/night-hand-star0.png\", SKIN_VAMPIRED: \"img/day-vampire.png\", SKIN_VAMPIREN: \"img/night-vampire.png\", HAND_VAMPIRED: \"img/day-hand-vampire.png\", HAND_VAMPIREN: \"img/night-hand-vampire.png\", SKIN_ZOMBIED: \"img/day-zombie.png\", SKIN_ZOMBIEN: \"img/night-zombie.png\", HAND_ZOMBIED: \"img/day-hand-zombie.png\", HAND_ZOMBIEN: \"img/night-hand-zombie.png\", SKIN_ROBOTD: \"img/day-skin113.png\", SKIN_ROBOTN: \"img/night-skin113.png\", HAND_ROBOTD: \"img/day-hand-skin113.png\", HAND_ROBOTN: \"img/night-hand-skin113.png\", SKIN0D: \"img/day-skin0.png\", SKIN0N: \"img/night-skin0.png\", SKIN1D: \"img/day-skin1.png\", SKIN1N: \"img/night-skin1.png\", SKIN2D: \"img/day-skin2.png\", SKIN2N: \"img/night-skin2.png\", SKIN3D: \"img/day-skin3.png\", SKIN3N: \"img/night-skin3.png\", SKIN4D: \"img/day-skin4.png\", SKIN4N: \"img/night-skin4.png\", SKIN5D: \"img/day-skin5.png\", SKIN5N: \"img/night-skin5.png\", SKIN6D: \"img/day-skin6.png\", SKIN6N: \"img/night-skin6.png\", SKIN7D: \"img/day-skin7.png\", SKIN7N: \"img/night-skin7.png\", SKIN8D: \"img/day-skin8.png\", SKIN8N: \"img/night-skin8.png\", SKIN9D: \"img/day-skin9.png\", SKIN9N: \"img/night-skin9.png\", SKIN10D: \"img/day-skin10.png\", SKIN10N: \"img/night-skin10.png\", SKIN11D: \"img/day-skin11.png\", SKIN11N: \"img/night-skin11.png\", SKIN12D: \"img/day-skin12.png\", SKIN12N: \"img/night-skin12.png\", SKIN13D: \"img/day-skin13.png\", SKIN13N: \"img/night-skin13.png\", SKIN14D: \"img/day-skin14.png\", SKIN14N: \"img/night-skin14.png\", SKIN15D: \"img/day-skin15.png\", SKIN15N: \"img/night-skin15.png\", SKIN16D: \"img/day-skin16.png\", SKIN16N: \"img/night-skin16.png\", SKIN17D: \"img/day-skin17.png\", SKIN17N: \"img/night-skin17.png\", SKIN18D: \"img/day-skin18.png\", SKIN18N: \"img/night-skin18.png\", SKIN19D: \"img/day-skin19.png\", SKIN19N: \"img/night-skin19.png\", SKIN20D: \"img/day-skin20.png\", SKIN20N: \"img/night-skin20.png\", SKIN21D: \"img/day-skin21.png\", SKIN21N: \"img/night-skin21.png\", SKIN22D: \"img/day-skin22.png\", SKIN22N: \"img/night-skin22.png\", SKIN23D: \"img/day-skin23.png\", SKIN23N: \"img/night-skin23.png\", SKIN24D: \"img/day-skin24.png\", SKIN24N: \"img/night-skin24.png\", SKIN25D: \"img/day-skin25.png\", SKIN25N: \"img/night-skin25.png\", SKIN26D: \"img/day-skin26.png\", SKIN26N: \"img/night-skin26.png\", SKIN27D: \"img/day-skin27.png\", SKIN27N: \"img/night-skin27.png\", SKIN28D: \"img/day-skin28.png\", SKIN28N: \"img/night-skin28.png\", SKIN29D: \"img/day-skin29.png\", SKIN29N: \"img/night-skin29.png\", SKIN30D: \"img/day-skin30.png\", SKIN30N: \"img/night-skin30.png\", SKIN31D: \"img/day-skin31.png\", SKIN31N: \"img/night-skin31.png\", SKIN32D: \"img/day-skin32.png\", SKIN32N: \"img/night-skin32.png\", SKIN33D: \"img/day-skin33.png\", SKIN33N: \"img/night-skin33.png\", SKIN34D: \"img/day-skin34.png\", SKIN34N: \"img/night-skin34.png\", SKIN35D: \"img/day-skin35.png\", SKIN35N: \"img/night-skin35.png\", SKIN36D: \"img/day-skin36.png\", SKIN36N: \"img/night-skin36.png\", SKIN37D: \"img/day-skin37.png\", SKIN37N: \"img/night-skin37.png\", SKIN38D: \"img/day-skin38.png\", SKIN38N: \"img/night-skin38.png\", SKIN39D: \"img/day-skin39.png\", SKIN39N: \"img/night-skin39.png\", SKIN40D: \"img/day-skin40.png\", SKIN40N: \"img/night-skin40.png\", SKIN41D: \"img/day-skin41.png\", SKIN41N: \"img/night-skin41.png\", SKIN42D: \"img/day-skin42.png\", SKIN42N: \"img/night-skin42.png\", SKIN43D: \"img/day-skin43.png\", SKIN43N: \"img/night-skin43.png\", SKIN44D: \"img/day-skin44.png\", SKIN44N: \"img/night-skin44.png\", SKIN45D: \"img/day-skin45.png\", SKIN45N: \"img/night-skin45.png\", SKIN46D: \"img/day-skin46.png\", SKIN46N: \"img/night-skin46.png\", SKIN47D: \"img/day-skin47.png\", SKIN47N: \"img/night-skin47.png\", SKIN48D: \"img/day-skin48.png\", SKIN48N: \"img/night-skin48.png\", SKIN49D: \"img/day-skin49.png\", SKIN49N: \"img/night-skin49.png\", SKIN50D: \"img/day-skin50.png\", SKIN50N: \"img/night-skin50.png\", SKIN51D: \"img/day-skin51.png\", SKIN51N: \"img/night-skin51.png\", SKIN52D: \"img/day-skin52.png\", SKIN52N: \"img/night-skin52.png\", SKIN53D: \"img/day-skin53.png\", SKIN53N: \"img/night-skin53.png\", SKIN54D: \"img/day-skin54.png\", SKIN54N: \"img/night-skin54.png\", SKIN55D: \"img/day-skin55.png\", SKIN55N: \"img/night-skin55.png\", SKIN56D: \"img/day-skin56.png\", SKIN56N: \"img/night-skin56.png\", SKIN57D: \"img/day-skin57.png\", SKIN57N: \"img/night-skin57.png\", SKIN58D: \"img/day-skin58.png\", SKIN58N: \"img/night-skin58.png\", SKIN59D: \"img/day-skin59.png\", SKIN59N: \"img/night-skin59.png\", SKIN60D: \"img/day-skin60.png\", SKIN60N: \"img/night-skin60.png\", SKIN61D: \"img/day-skin61.png\", SKIN61N: \"img/night-skin61.png\", SKIN62D: \"img/day-skin62.png\", SKIN62N: \"img/night-skin62.png\", SKIN63D: \"img/day-skin63.png\", SKIN63N: \"img/night-skin63.png\", SKIN64D: \"img/day-skin64.png\", SKIN64N: \"img/night-skin64.png\", SKIN65D: \"img/day-skin65.png\", SKIN65N: \"img/night-skin65.png\", SKIN66D: \"img/day-skin66.png\", SKIN66N: \"img/night-skin66.png\", SKIN67D: \"img/day-skin67.png\", SKIN67N: \"img/night-skin67.png\", SKIN68D: \"img/day-skin68.png\", SKIN68N: \"img/night-skin68.png\", SKIN69D: \"img/day-skin69.png\", SKIN69N: \"img/night-skin69.png\", SKIN70D: \"img/day-skin70.png\", SKIN70N: \"img/night-skin70.png\", SKIN71D: \"img/day-skin71.png\", SKIN71N: \"img/night-skin71.png\", SKIN72D: \"img/day-skin72.png\", SKIN72N: \"img/night-skin72.png\", SKIN73D: \"img/day-skin73.png\", SKIN73N: \"img/night-skin73.png\", SKIN74D: \"img/day-skin74.png\", SKIN74N: \"img/night-skin74.png\", SKIN75D: \"img/day-skin75.png\", SKIN75N: \"img/night-skin75.png\", SKIN76D: \"img/day-skin76.png\", SKIN76N: \"img/night-skin76.png\", SKIN77D: \"img/day-skin77.png\", SKIN77N: \"img/night-skin77.png\", SKIN78D: \"img/day-skin78.png\", SKIN78N: \"img/night-skin78.png\", SKIN79D: \"img/day-skin79.png\", SKIN79N: \"img/night-skin79.png\", SKIN80D: \"img/day-skin80.png\", SKIN80N: \"img/night-skin80.png\", SKIN81D: \"img/day-skin81.png\", SKIN81N: \"img/night-skin81.png\", SKIN82D: \"img/day-skin82.png\", SKIN82N: \"img/night-skin82.png\", SKIN83D: \"img/day-skin83.png\", SKIN83N: \"img/night-skin83.png\", SKIN84D: \"img/day-skin84.png\", SKIN84N: \"img/night-skin84.png\", SKIN85D: \"img/day-skin85.png\", SKIN85N: \"img/night-skin85.png\", SKIN86D: \"img/day-skin86.png\", SKIN86N: \"img/night-skin86.png\", SKIN87D: \"img/day-skin87.png\", SKIN87N: \"img/night-skin87.png\", SKIN88D: \"img/day-skin88.png\", SKIN88N: \"img/night-skin88.png\", SKIN89D: \"img/day-skin89.png\", SKIN89N: \"img/night-skin89.png\", SKIN90D: \"img/day-skin90.png\", SKIN90N: \"img/night-skin90.png\", SKIN91D: \"img/day-skin91.png\", SKIN91N: \"img/night-skin91.png\", SKIN92D: \"img/day-skin92.png\", SKIN92N: \"img/night-skin92.png\", SKIN93D: \"img/day-skin93.png\", SKIN93N: \"img/night-skin93.png\", SKIN94D: \"img/day-skin94.png\", SKIN94N: \"img/night-skin94.png\", SKIN95D: \"img/day-skin95.png\", SKIN95N: \"img/night-skin95.png\", SKIN96D: \"img/day-skin96.png\", SKIN96N: \"img/night-skin96.png\", SKIN97D: \"img/day-skin97.png\", SKIN97N: \"img/night-skin97.png\", SKIN98D: \"img/day-skin98.png\", SKIN98N: \"img/night-skin98.png\", SKIN99D: \"img/day-skin99.png\", SKIN99N: \"img/night-skin99.png\", SKIN100D: \"img/day-skin100.png\", SKIN100N: \"img/night-skin100.png\", SKIN101D: \"img/day-skin101.png\", SKIN101N: \"img/night-skin101.png\", SKIN102D: \"img/day-skin102.png\", SKIN102N: \"img/night-skin102.png\", SKIN103D: \"img/day-skin103.png\", SKIN103N: \"img/night-skin103.png\", SKIN104D: \"img/day-skin104.png\", SKIN104N: \"img/night-skin104.png\", SKIN105D: \"img/day-skin105.png\", SKIN105N: \"img/night-skin105.png\", SKIN106D: \"img/day-skin106.png\", SKIN106N: \"img/night-skin106.png\", SKIN107D: \"img/day-skin107.png\", SKIN107N: \"img/night-skin107.png\", SKIN108D: \"img/day-skin108.png\", SKIN108N: \"img/night-skin108.png\", SKIN109D: \"img/day-skin109.png\", SKIN109N: \"img/night-skin109.png\", SKIN110D: \"img/day-skin110.png\", SKIN110N: \"img/night-skin110.png\", SKIN111D: \"img/day-skin111.png\", SKIN111N: \"img/night-skin111.png\", SKIN112D: \"img/day-skin112.png\", SKIN112N: \"img/night-skin112.png\", SKIN113D: \"img/day-skin113.png\", SKIN113N: \"img/night-skin113.png\", SKIN114D: \"img/day-skin114.png\", SKIN114N: \"img/night-skin114.png\", SKIN115D: \"img/day-skin115.png\", SKIN115N: \"img/night-skin115.png\", SKIN116D: \"img/day-skin116.png\", SKIN116N: \"img/night-skin116.png\", SKIN117D: \"img/day-skin117.png\", SKIN117N: \"img/night-skin117.png\", SKIN118D: \"img/day-skin118.png\", SKIN118N: \"img/night-skin118.png\", SKIN119D: \"img/day-skin119.png\", SKIN119N: \"img/night-skin119.png\", SKIN120D: \"img/day-skin120.png\", SKIN120N: \"img/night-skin120.png\", SKIN121D: \"img/day-skin121.png\", SKIN121N: \"img/night-skin121.png\", SKIN122D: \"img/day-skin122.png\", SKIN122N: \"img/night-skin122.png\", SKIN123D: \"img/day-skin123.png\", SKIN123N: \"img/night-skin123.png\", SKIN124D: \"img/day-skin124.png\", SKIN124N: \"img/night-skin124.png\", SKIN125D: \"img/day-skin125.png\", SKIN125N: \"img/night-skin125.png\", SKIN126D: \"img/day-skin126.png\", SKIN126N: \"img/night-skin126.png\", SKIN127D: \"img/day-skin127.png\", SKIN127N: \"img/night-skin127.png\", SKIN128D: \"img/day-skin128.png\", SKIN128N: \"img/night-skin128.png\", SKIN129D: \"img/day-skin129.png\", SKIN129N: \"img/night-skin129.png\", SKIN130D: \"img/day-skin130-1.png\", SKIN130N: \"img/night-skin130-1.png\", SKIN131D: \"img/day-skin131.png\", SKIN131N: \"img/night-skin131.png\", SKIN132D: \"img/day-skin132.png\", SKIN132N: \"img/night-skin132.png\", SKIN133D: \"img/day-skin133.png\", SKIN133N: \"img/night-skin133.png\", SKIN134D: \"img/day-skin134.png\", SKIN134N: \"img/night-skin134.png\", SKIN135D: \"img/day-skin135.png\", SKIN135N: \"img/night-skin135.png\", SKIN136D: \"img/day-skin136.png\", SKIN136N: \"img/night-skin136.png\", SKIN137D: \"img/day-skin137.png\", SKIN137N: \"img/night-skin137.png\", SKIN138D: \"img/day-skin138.png\", SKIN138N: \"img/night-skin138.png\", SKIN139D: \"img/day-skin139.png\", SKIN139N: \"img/night-skin139.png\", SKIN140D: \"img/day-skin140.png\", SKIN140N: \"img/night-skin140.png\", SKIN141D: \"img/day-skin141.png\", SKIN141N: \"img/night-skin141.png\", SKIN142D: \"img/day-skin142.png\", SKIN142N: \"img/night-skin142.png\", SKIN143D: \"img/day-skin143.png\", SKIN143N: \"img/night-skin143.png\", SKIN144D: \"img/day-skin144.png\", SKIN144N: \"img/night-skin144.png\", SKIN145D: \"img/day-skin145.png\", SKIN145N: \"img/night-skin145.png\", SKIN146D: \"img/day-skin146.png\", SKIN146N: \"img/night-skin146.png\", SKIN147D: \"img/day-skin147.png\", SKIN147N: \"img/night-skin147.png\", SKIN148D: \"img/day-skin148.png\", SKIN148N: \"img/night-skin148.png\", SKIN149D: \"img/day-skin149.png\", SKIN149N: \"img/night-skin149.png\", SKIN150D: \"img/day-skin150.png\", SKIN150N: \"img/night-skin150.png\", HAND_SKIN0D: \"img/day-hand-skin0.png\", HAND_SKIN0N: \"img/night-hand-skin0.png\", HAND_SKIN1D: \"img/day-hand-skin1.png\", HAND_SKIN1N: \"img/night-hand-skin1.png\", HAND_SKIN2D: \"img/day-hand-skin2.png\", HAND_SKIN2N: \"img/night-hand-skin2.png\", HAND_SKIN3D: \"img/day-hand-skin3.png\", HAND_SKIN3N: \"img/night-hand-skin3.png\", HAND_SKIN4D: \"img/day-hand-skin4.png\", HAND_SKIN4N: \"img/night-hand-skin4.png\", HAND_SKIN5D: \"img/day-hand-skin5.png\", HAND_SKIN5N: \"img/night-hand-skin5.png\", HAND_SKIN6D: \"img/day-hand-skin6.png\", HAND_SKIN6N: \"img/night-hand-skin6.png\", HAND_SKIN7D: \"img/day-hand-skin6.png\", HAND_SKIN7N: \"img/night-hand-skin6.png\", HAND_SKIN8D: \"img/day-hand-skin8.png\", HAND_SKIN8N: \"img/night-hand-skin8.png\", HAND_SKIN9D: \"img/day-hand-skin9.png\", HAND_SKIN9N: \"img/night-hand-skin9.png\", HAND_SKIN10D: \"img/day-hand-skin10.png\", HAND_SKIN10N: \"img/night-hand-skin10.png\", HAND_SKIN11D: \"img/day-hand-skin11.png\", HAND_SKIN11N: \"img/night-hand-skin11.png\", HAND_SKIN12D: \"img/day-hand-skin12.png\", HAND_SKIN12N: \"img/night-hand-skin12.png\", HAND_SKIN13D: \"img/day-hand-skin13.png\", HAND_SKIN13N: \"img/night-hand-skin13.png\", HAND_SKIN14D: \"img/day-hand-skin14.png\", HAND_SKIN14N: \"img/night-hand-skin14.png\", HAND_SKIN15D: \"img/day-hand-skin15.png\", HAND_SKIN15N: \"img/night-hand-skin15.png\", HAND_SKIN16D: \"img/day-hand-skin16.png\", HAND_SKIN16N: \"img/night-hand-skin16.png\", HAND_SKIN17D: \"img/day-hand-skin17.png\", HAND_SKIN17N: \"img/night-hand-skin17.png\", HAND_SKIN18D: \"img/day-hand-skin18.png\", HAND_SKIN18N: \"img/night-hand-skin18.png\", HAND_SKIN19D: \"img/day-hand-skin19.png\", HAND_SKIN19N: \"img/night-hand-skin19.png\", HAND_SKIN20D: \"img/day-hand-skin20.png\", HAND_SKIN20N: \"img/night-hand-skin20.png\", HAND_SKIN21D: \"img/day-hand-skin21.png\", HAND_SKIN21N: \"img/night-hand-skin21.png\", HAND_SKIN22D: \"img/day-hand-skin22.png\", HAND_SKIN22N: \"img/night-hand-skin22.png\", HAND_SKIN23D: \"img/day-hand-skin23.png\", HAND_SKIN23N: \"img/night-hand-skin23.png\", HAND_SKIN24D: \"img/day-hand-skin24.png\", HAND_SKIN24N: \"img/night-hand-skin24.png\", HAND_SKIN25D: \"img/day-hand-skin25.png\", HAND_SKIN25N: \"img/night-hand-skin25.png\", HAND_SKIN26D: \"img/day-hand-skin26.png\", HAND_SKIN26N: \"img/night-hand-skin26.png\", HAND_SKIN27D: \"img/day-hand-skin27.png\", HAND_SKIN27N: \"img/night-hand-skin27.png\", HAND_SKIN28D: \"img/day-hand-skin28.png\", HAND_SKIN28N: \"img/night-hand-skin28.png\", HAND_SKIN29D: \"img/day-hand-skin29.png\", HAND_SKIN29N: \"img/night-hand-skin29.png\", HAND_SKIN30D: \"img/day-hand-skin30.png\", HAND_SKIN30N: \"img/night-hand-skin30.png\", HAND_SKIN31D: \"img/day-hand-skin31.png\", HAND_SKIN31N: \"img/night-hand-skin31.png\", HAND_SKIN32D: \"img/day-hand-skin32.png\", HAND_SKIN32N: \"img/night-hand-skin32.png\", HAND_SKIN33D: \"img/day-hand-skin33.png\", HAND_SKIN33N: \"img/night-hand-skin33.png\", HAND_SKIN34D: \"img/day-hand-skin34.png\", HAND_SKIN34N: \"img/night-hand-skin34.png\", HAND_SKIN35D: \"img/day-hand-skin35.png\", HAND_SKIN35N: \"img/night-hand-skin35.png\", HAND_SKIN36D: \"img/day-hand-skin36.png\", HAND_SKIN36N: \"img/night-hand-skin36.png\", HAND_SKIN37D: \"img/day-hand-skin37.png\", HAND_SKIN37N: \"img/night-hand-skin37.png\", HAND_SKIN38D: \"img/day-hand-skin38.png\", HAND_SKIN38N: \"img/night-hand-skin38.png\", HAND_SKIN39D: \"img/day-hand-skin39.png\", HAND_SKIN39N: \"img/night-hand-skin39.png\", HAND_SKIN40D: \"img/day-hand-skin40.png\", HAND_SKIN40N: \"img/night-hand-skin40.png\", HAND_SKIN41D: \"img/day-hand-skin41.png\", HAND_SKIN41N: \"img/night-hand-skin41.png\", HAND_SKIN42D: \"img/day-hand-skin42.png\", HAND_SKIN42N: \"img/night-hand-skin42.png\", HAND_SKIN43D: \"img/day-hand-skin43.png\", HAND_SKIN43N: \"img/night-hand-skin43.png\", HAND_SKIN44D: \"img/day-hand-skin16.png\", HAND_SKIN44N: \"img/night-hand-skin16.png\", HAND_SKIN45D: \"img/day-hand-skin45.png\", HAND_SKIN45N: \"img/night-hand-skin45.png\", HAND_SKIN46D: \"img/day-hand-skin46.png\", HAND_SKIN46N: \"img/night-hand-skin46.png\", HAND_SKIN47D: \"img/day-hand-skin47.png\", HAND_SKIN47N: \"img/night-hand-skin47.png\", HAND_SKIN48D: \"img/day-hand-skin48.png\", HAND_SKIN48N: \"img/night-hand-skin48.png\", HAND_SKIN49D: \"img/day-hand-skin49.png\", HAND_SKIN49N: \"img/night-hand-skin49.png\", HAND_SKIN50D: \"img/day-hand-skin49.png\", HAND_SKIN50N: \"img/night-hand-skin49.png\", HAND_SKIN51D: \"img/day-hand-skin51.png\", HAND_SKIN51N: \"img/night-hand-skin51.png\", HAND_SKIN52D: \"img/day-hand-skin52.png\", HAND_SKIN52N: \"img/night-hand-skin52.png\", HAND_SKIN53D: \"img/day-hand-skin53.png\", HAND_SKIN53N: \"img/night-hand-skin53.png\", HAND_SKIN54D: \"img/day-hand-skin53.png\", HAND_SKIN54N: \"img/night-hand-skin53.png\", HAND_SKIN55D: \"img/day-hand-skin55.png\", HAND_SKIN55N: \"img/night-hand-skin55.png\", HAND_SKIN56D: \"img/day-hand-skin56.png\", HAND_SKIN56N: \"img/night-hand-skin56.png\", HAND_SKIN57D: \"img/day-hand-skin57.png\", HAND_SKIN57N: \"img/night-hand-skin57.png\", HAND_SKIN58D: \"img/day-hand-skin58.png\", HAND_SKIN58N: \"img/night-hand-skin58.png\", HAND_SKIN59D: \"img/day-hand-skin59.png\", HAND_SKIN59N: \"img/night-hand-skin59.png\", HAND_SKIN60D: \"img/day-hand-skin61.png\", HAND_SKIN60N: \"img/night-hand-skin61.png\", HAND_SKIN61D: \"img/day-hand-skin61.png\", HAND_SKIN61N: \"img/night-hand-skin61.png\", HAND_SKIN62D: \"img/day-hand-skin62.png\", HAND_SKIN62N: \"img/night-hand-skin62.png\", HAND_SKIN63D: \"img/day-hand-skin63.png\", HAND_SKIN63N: \"img/night-hand-skin63.png\", HAND_SKIN64D: \"img/day-hand-skin64.png\", HAND_SKIN64N: \"img/night-hand-skin64.png\", HAND_SKIN65D: \"img/day-hand-skin65.png\", HAND_SKIN65N: \"img/night-hand-skin65.png\", HAND_SKIN66D: \"img/day-hand-skin66.png\", HAND_SKIN66N: \"img/night-hand-skin66.png\", HAND_SKIN67D: \"img/day-hand-skin67.png\", HAND_SKIN67N: \"img/night-hand-skin67.png\", HAND_SKIN68D: \"img/day-hand-skin68.png\", HAND_SKIN68N: \"img/night-hand-skin68.png\", HAND_SKIN69D: \"img/day-hand-skin69.png\", HAND_SKIN69N: \"img/night-hand-skin69.png\", HAND_SKIN70D: \"img/day-hand-skin70.png\", HAND_SKIN70N: \"img/night-hand-skin70.png\", HAND_SKIN71D: \"img/day-hand-skin71.png\", HAND_SKIN71N: \"img/night-hand-skin71.png\", HAND_SKIN72D: \"img/day-hand-skin72.png\", HAND_SKIN72N: \"img/night-hand-skin72.png\", HAND_SKIN73D: \"img/day-hand-skin73.png\", HAND_SKIN73N: \"img/night-hand-skin73.png\", HAND_SKIN74D: \"img/day-hand-skin74.png\", HAND_SKIN74N: \"img/night-hand-skin74.png\", HAND_SKIN75D: \"img/day-hand-skin75.png\", HAND_SKIN75N: \"img/night-hand-skin75.png\", HAND_SKIN76D: \"img/day-hand-skin76.png\", HAND_SKIN76N: \"img/night-hand-skin76.png\", HAND_SKIN77D: \"img/day-hand-skin77.png\", HAND_SKIN77N: \"img/night-hand-skin77.png\", HAND_SKIN78D: \"img/day-hand-skin78.png\", HAND_SKIN78N: \"img/night-hand-skin78.png\", HAND_SKIN79D: \"img/day-hand-skin79.png\", HAND_SKIN79N: \"img/night-hand-skin79.png\", HAND_SKIN80D: \"img/day-hand-skin80.png\", HAND_SKIN80N: \"img/night-hand-skin80.png\", HAND_SKIN81D: \"img/day-hand-skin81.png\", HAND_SKIN81N: \"img/night-hand-skin81.png\", HAND_SKIN82D: \"img/day-hand-skin82.png\", HAND_SKIN82N: \"img/night-hand-skin82.png\", HAND_SKIN83D: \"img/day-hand-skin83.png\", HAND_SKIN83N: \"img/night-hand-skin83.png\", HAND_SKIN84D: \"img/day-hand-skin84.png\", HAND_SKIN84N: \"img/night-hand-skin84.png\", HAND_SKIN85D: \"img/day-hand-skin85.png\", HAND_SKIN85N: \"img/night-hand-skin85.png\", HAND_SKIN86D: \"img/day-hand-skin86.png\", HAND_SKIN86N: \"img/night-hand-skin86.png\", HAND_SKIN87D: \"img/day-hand-skin87.png\", HAND_SKIN87N: \"img/night-hand-skin87.png\", HAND_SKIN88D: \"img/day-hand-skin88.png\", HAND_SKIN88N: \"img/night-hand-skin88.png\", HAND_SKIN89D: \"img/day-hand-skin89.png\", HAND_SKIN89N: \"img/night-hand-skin89.png\", HAND_SKIN90D: \"img/day-hand-skin90.png\", HAND_SKIN90N: \"img/night-hand-skin90.png\", HAND_SKIN91D: \"img/day-hand-skin91.png\", HAND_SKIN91N: \"img/night-hand-skin91.png\", HAND_SKIN92D: \"img/day-hand-skin92.png\", HAND_SKIN92N: \"img/night-hand-skin92.png\", HAND_SKIN93D: \"img/day-hand-skin93.png\", HAND_SKIN93N: \"img/night-hand-skin93.png\", HAND_SKIN94D: \"img/day-hand-skin94.png\", HAND_SKIN94N: \"img/night-hand-skin94.png\", HAND_SKIN95D: \"img/day-hand-skin95.png\", HAND_SKIN95N: \"img/night-hand-skin95.png\", HAND_SKIN96D: \"img/day-hand-skin96.png\", HAND_SKIN96N: \"img/night-hand-skin96.png\", HAND_SKIN97D: \"img/day-hand-skin97.png\", HAND_SKIN97N: \"img/night-hand-skin97.png\", HAND_SKIN98D: \"img/day-hand-skin98.png\", HAND_SKIN98N: \"img/night-hand-skin98.png\", HAND_SKIN99D: \"img/day-hand-skin99.png\", HAND_SKIN99N: \"img/night-hand-skin99.png\", HAND_SKIN100D: \"img/day-hand-skin100.png\", HAND_SKIN100N: \"img/night-hand-skin100.png\", HAND_SKIN101D: \"img/day-hand-skin101.png\", HAND_SKIN101N: \"img/night-hand-skin101.png\", HAND_SKIN102D: \"img/day-hand-skin102.png\", HAND_SKIN102N: \"img/night-hand-skin102.png\", HAND_SKIN103D: \"img/day-hand-skin103.png\", HAND_SKIN103N: \"img/night-hand-skin103.png\", HAND_SKIN104D: \"img/day-hand-skin104.png\", HAND_SKIN104N: \"img/night-hand-skin104.png\", HAND_SKIN105D: \"img/day-hand-skin105.png\", HAND_SKIN105N: \"img/night-hand-skin105.png\", HAND_SKIN106D: \"img/day-hand-skin106.png\", HAND_SKIN106N: \"img/night-hand-skin106.png\", HAND_SKIN107D: \"img/day-hand-skin107.png\", HAND_SKIN107N: \"img/night-hand-skin107.png\", HAND_SKIN108D: \"img/day-hand-skin108.png\", HAND_SKIN108N: \"img/night-hand-skin108.png\", HAND_SKIN109D: \"img/day-hand-skin109.png\", HAND_SKIN109N: \"img/night-hand-skin109.png\", HAND_SKIN110D: \"img/day-hand-skin110.png\", HAND_SKIN110N: \"img/night-hand-skin110.png\", HAND_SKIN111D: \"img/day-hand-skin111.png\", HAND_SKIN111N: \"img/night-hand-skin111.png\", HAND_SKIN112D: \"img/day-hand-skin112.png\", HAND_SKIN112N: \"img/night-hand-skin112.png\", HAND_SKIN113D: \"img/day-hand-skin113.png\", HAND_SKIN113N: \"img/night-hand-skin113.png\", HAND_SKIN114D: \"img/day-hand-skin114.png\", HAND_SKIN114N: \"img/night-hand-skin114.png\", HAND_SKIN115D: \"img/day-hand-skin115.png\", HAND_SKIN115N: \"img/night-hand-skin115.png\", HAND_SKIN116D: \"img/day-hand-skin116.png\", HAND_SKIN116N: \"img/night-hand-skin116.png\", HAND_SKIN117D: \"img/day-hand-skin117.png\", HAND_SKIN117N: \"img/night-hand-skin117.png\", HAND_SKIN118D: \"img/day-hand-skin118.png\", HAND_SKIN118N: \"img/night-hand-skin118.png\", HAND_SKIN119D: \"img/day-hand-skin119.png\", HAND_SKIN119N: \"img/night-hand-skin119.png\", HAND_SKIN120D: \"img/day-hand-skin120.png\", HAND_SKIN120N: \"img/night-hand-skin120.png\", HAND_SKIN121D: \"img/day-hand-skin122.png\", HAND_SKIN121N: \"img/night-hand-skin122.png\", HAND_SKIN122D: \"img/day-hand-skin122.png\", HAND_SKIN122N: \"img/night-hand-skin122.png\", HAND_SKIN123D: \"img/day-hand-skin122.png\", HAND_SKIN123N: \"img/night-hand-skin122.png\", HAND_SKIN124D: \"img/day-hand-skin124.png\", HAND_SKIN124N: \"img/night-hand-skin124.png\", HAND_SKIN125D: \"img/day-hand-skin125.png\", HAND_SKIN125N: \"img/night-hand-skin125.png\", HAND_SKIN126D: \"img/day-hand-skin126.png\", HAND_SKIN126N: \"img/night-hand-skin126.png\", HAND_SKIN127D: \"img/day-hand-skin127.png\", HAND_SKIN127N: \"img/night-hand-skin127.png\", HAND_SKIN128D: \"img/day-hand-skin128.png\", HAND_SKIN128N: \"img/night-hand-skin128.png\", HAND_SKIN129D: \"img/day-hand-skin129.png\", HAND_SKIN129N: \"img/night-hand-skin129.png\", HAND_SKIN130D: \"img/day-hand-skin130.png\", HAND_SKIN130N: \"img/night-hand-skin130.png\", HAND_SKIN131D: \"img/day-hand-skin131.png\", HAND_SKIN131N: \"img/night-hand-skin131.png\", HAND_SKIN132D: \"img/day-hand-skin130.png\", HAND_SKIN132N: \"img/night-hand-skin130.png\", HAND_SKIN133D: \"img/day-hand-skin133.png\", HAND_SKIN133N: \"img/night-hand-skin133.png\", HAND_SKIN134D: \"img/day-hand-skin134.png\", HAND_SKIN134N: \"img/night-hand-skin134.png\", HAND_SKIN135D: \"img/day-hand-skin135.png\", HAND_SKIN135N: \"img/night-hand-skin135.png\", HAND_SKIN136D: \"img/day-hand-skin136.png\", HAND_SKIN136N: \"img/night-hand-skin136.png\", HAND_SKIN137D: \"img/day-hand-skin137.png\", HAND_SKIN137N: \"img/night-hand-skin137.png\", HAND_SKIN138D: \"img/day-hand-skin138.png\", HAND_SKIN138N: \"img/night-hand-skin138.png\", HAND_SKIN139D: \"img/day-hand-skin139.png\", HAND_SKIN139N: \"img/night-hand-skin139.png\", HAND_SKIN140D: \"img/day-hand-skin140.png\", HAND_SKIN140N: \"img/night-hand-skin140.png\", HAND_SKIN141D: \"img/day-hand-skin141.png\", HAND_SKIN141N: \"img/night-hand-skin141.png\", HAND_SKIN142D: \"img/day-hand-skin142.png\", HAND_SKIN142N: \"img/night-hand-skin142.png\", HAND_SKIN143D: \"img/day-hand-skin143.png\", HAND_SKIN143N: \"img/night-hand-skin143.png\", HAND_SKIN144D: \"img/day-hand-skin144.png\", HAND_SKIN144N: \"img/night-hand-skin144.png\", HAND_SKIN145D: \"img/day-hand-skin145.png\", HAND_SKIN145N: \"img/night-hand-skin145.png\", HAND_SKIN146D: \"img/day-hand-skin146.png\", HAND_SKIN146N: \"img/night-hand-skin146.png\", HAND_SKIN147D: \"img/day-hand-skin147.png\", HAND_SKIN147N: \"img/night-hand-skin147.png\", HAND_SKIN148D: \"img/day-hand-skin148.png\", HAND_SKIN148N: \"img/night-hand-skin148.png\", HAND_SKIN149D: \"img/day-hand-skin149.png\", HAND_SKIN149N: \"img/night-hand-skin149.png\", HAND_SKIN150D: \"img/day-hand-skin150.png\", HAND_SKIN150N: \"img/night-hand-skin150.png\", BAG_STARD: \"img/day-bag-star0.png\", BAG_STARN: \"img/night-bag-star0.png\", BAG0D: \"img/day-bag0.png\", BAG0N: \"img/night-bag0.png\", BAG1D: \"img/day-bag1.png\", BAG1N: \"img/night-bag1.png\", BAG2D: \"img/day-bag2.png\", BAG2N: \"img/night-bag2.png\", BAG3D: \"img/day-bag3.png\", BAG3N: \"img/night-bag3.png\", BAG4D: \"img/day-bag4.png\", BAG4N: \"img/night-bag4.png\", BAG5D: \"img/day-bag5.png\", BAG5N: \"img/night-bag5.png\", BAG6D: \"img/day-bag6.png\", BAG6N: \"img/night-bag6.png\", BAG7D: \"img/day-bag7.png\", BAG7N: \"img/night-bag7.png\", BAG8D: \"img/day-bag8.png\", BAG8N: \"img/night-bag8.png\", BAG9D: \"img/day-bag9.png\", BAG9N: \"img/night-bag9.png\", BAG10D: \"img/day-bag10.png\", BAG10N: \"img/night-bag10.png\", BAG11D: \"img/day-bag11.png\", BAG11N: \"img/night-bag11.png\", BAG13D: \"img/day-bag13.png\", BAG13N: \"img/night-bag13.png\", BAG14D: \"img/day-bag14.png\", BAG14N: \"img/night-bag14.png\", BAG16D: \"img/day-bag16.png\", BAG16N: \"img/night-bag16.png\", BAG17D: \"img/day-bag17.png\", BAG17N: \"img/night-bag17.png\", BAG18D: \"img/day-bag18.png\", BAG18N: \"img/night-bag18.png\", BAG19D: \"img/day-bag19.png\", BAG19N: \"img/night-bag19.png\", BAG20D: \"img/day-bag20.png\", BAG20N: \"img/night-bag20.png\", BAG21D: \"img/day-bag21.png\", BAG21N: \"img/night-bag21.png\", BAG22D: \"img/day-bag22.png\", BAG22N: \"img/night-bag22.png\", BAG23D: \"img/day-bag23.png\", BAG23N: \"img/night-bag23.png\", BAG24D: \"img/day-bag24.png\", BAG24N: \"img/night-bag24.png\", BAG25D: \"img/day-bag25.png\", BAG25N: \"img/night-bag25.png\", BAG26D: \"img/day-bag26.png\", BAG26N: \"img/night-bag26.png\", BAG27D: \"img/day-bag27.png\", BAG27N: \"img/night-bag27.png\", BAG28D: \"img/day-bag28.png\", BAG28N: \"img/night-bag28.png\", BAG29D: \"img/day-bag29.png\", BAG29N: \"img/night-bag29.png\", BAG30D: \"img/day-bag30.png\", BAG30N: \"img/night-bag30.png\", BAG31D: \"img/day-bag31.png\", BAG31N: \"img/night-bag31.png\", BAG32D: \"img/day-bag32.png\", BAG32N: \"img/night-bag32.png\", BAG33D: \"img/day-bag33.png\", BAG33N: \"img/night-bag33.png\", BAG34D: \"img/day-bag34.png\", BAG34N: \"img/night-bag34.png\", BAG35D: \"img/day-bag35.png\", BAG35N: \"img/night-bag35.png\", BAG36D: \"img/day-bag36.png\", BAG36N: \"img/night-bag36.png\", BAG37D: \"img/day-bag37.png\", BAG37N: \"img/night-bag37.png\", BAG38D: \"img/day-bag38.png\", BAG38N: \"img/night-bag38.png\", BAG39D: \"img/day-bag39.png\", BAG39N: \"img/night-bag39.png\", BAG40D: \"img/day-bag40.png\", BAG40N: \"img/night-bag40.png\", BAG41D: \"img/day-bag41.png\", BAG41N: \"img/night-bag41.png\", BAG42D: \"img/day-bag42.png\", BAG42N: \"img/night-bag42.png\", BAG43D: \"img/day-bag43.png\", BAG43N: \"img/night-bag43.png\", BAG44D: \"img/day-bag44.png\", BAG44N: \"img/night-bag44.png\", BAG45D: \"img/day-bag45.png\", BAG45N: \"img/night-bag45.png\", BAG46D: \"img/day-bag46.png\", BAG46N: \"img/night-bag46.png\", BAG47D: \"img/day-bag47.png\", BAG47N: \"img/night-bag47.png\", BAG48D: \"img/day-bag48.png\", BAG48N: \"img/night-bag48.png\", BAG49D: \"img/day-bag49.png\", BAG49N: \"img/night-bag49.png\", BAG50D: \"img/day-bag50.png\", BAG50N: \"img/night-bag50.png\", BAG51D: \"img/day-bag51.png\", BAG51N: \"img/night-bag51.png\", BAG52D: \"img/day-bag52.png\", BAG52N: \"img/night-bag52.png\", BAG53D: \"img/day-bag53.png\", BAG53N: \"img/night-bag53.png\", BAG54D: \"img/day-bag54.png\", BAG54N: \"img/night-bag54.png\", BAG55D: \"img/day-bag55.png\", BAG55N: \"img/night-bag55.png\", BAG56D: \"img/day-bag56.png\", BAG56N: \"img/night-bag56.png\", BAG57D: \"img/day-bag57.png\", BAG57N: \"img/night-bag57.png\", BAG58D: \"img/day-bag58.png\", BAG58N: \"img/night-bag58.png\", BAG59D: \"img/day-bag59.png\", BAG59N: \"img/night-bag59.png\", BAG60D: \"img/day-bag60.png\", BAG60N: \"img/night-bag60.png\", BAG61D: \"img/day-bag61.png\", BAG61N: \"img/night-bag61.png\", BAG62D: \"img/day-bag62.png\", BAG62N: \"img/night-bag62.png\", BAG63D: \"img/day-bag63.png\", BAG63N: \"img/night-bag63.png\", BAG64D: \"img/day-bag64.png\", BAG64N: \"img/night-bag64.png\", BAG65D: \"img/day-bag65.png\", BAG65N: \"img/night-bag65.png\", BAG66D: \"img/day-bag66.png\", BAG66N: \"img/night-bag66.png\", BAG67D: \"img/day-bag67.png\", BAG67N: \"img/night-bag67.png\", BAG68D: \"img/day-bag68.png\", BAG68N: \"img/night-bag68.png\", ACCESSORY0D: \"img/day-accessory0.png\", ACCESSORY17D: \"img/day-accessory0-pacques.png\", ACCESSORY17N: \"img/night-accessory0-pacques.png\", ACCESSORY13D: \"img/day-accessory13.png\", ACCESSORY13N: \"img/night-accessory13.png\", ACCESSORY14D: \"img/day-accessory14.png\", ACCESSORY14N: \"img/night-accessory14.png\", ACCESSORY15D: \"img/day-accessory15.png\", ACCESSORY15N: \"img/night-accessory15.png\", ACCESSORY16D: \"img/day-accessory16.png\", ACCESSORY16N: \"img/night-accessory16.png\", ACCESSORY18D: \"img/day-accessory17.png\", ACCESSORY18N: \"img/day-accessory17.png\", ACCESSORY19D: \"img/day-accessory19.png\", ACCESSORY19N: \"img/night-accessory19.png\", ACCESSORY20D: \"img/day-accessory20.png\", ACCESSORY20N: \"img/night-accessory20.png\", ACCESSORY21D: \"img/day-accessory21.png\", ACCESSORY21N: \"img/night-accessory21.png\", ACCESSORY22D: \"img/day-accessory22.png\", ACCESSORY22N: \"img/night-accessory22.png\", ACCESSORY23D: \"img/day-accessory23.png\", ACCESSORY23N: \"img/night-accessory23.png\", ACCESSORY24D: \"img/day-accessory24.png\", ACCESSORY24N: \"img/night-accessory24.png\", ACCESSORY25D: \"img/day-accessory25.png\", ACCESSORY25N: \"img/night-accessory25.png\", ACCESSORY26D: \"img/day-accessory26.png\", ACCESSORY26N: \"img/night-accessory26.png\", ACCESSORY27D: \"img/day-accessory27.png\", ACCESSORY27N: \"img/night-accessory27.png\", ACCESSORY28D: \"img/day-accessory18.png\", ACCESSORY28N: \"img/night-accessory18.png\", ACCESSORY29D: \"img/day-accessory29.png\", ACCESSORY29N: \"img/night-accessory29.png\", ACCESSORY30D: \"img/day-accessory30.png\", ACCESSORY30N: \"img/night-accessory30.png\", ACCESSORY31D: \"img/day-accessory31.png\", ACCESSORY31N: \"img/night-accessory31.png\", ACCESSORY32D: \"img/day-accessory32.png\", ACCESSORY32N: \"img/night-accessory32.png\", ACCESSORY33D: \"img/day-accessory33.png\", ACCESSORY33N: \"img/night-accessory33.png\", ACCESSORY34D: \"img/day-accessory34.png\", ACCESSORY34N: \"img/night-accessory34.png\", ACCESSORY35D: \"img/day-accessory35.png\", ACCESSORY35N: \"img/night-accessory35.png\", ACCESSORY36D: \"img/day-accessory28.png\", ACCESSORY36N: \"img/night-accessory28.png\", ACCESSORY37D: \"img/day-accessory36.png\", ACCESSORY37N: \"img/night-accessory36.png\", ACCESSORY38D: \"img/day-accessory37.png\", ACCESSORY38N: \"img/night-accessory37.png\", ACCESSORY39D: \"img/day-accessory39.png\", ACCESSORY39N: \"img/night-accessory39.png\", ACCESSORY40D: \"img/day-accessory40.png\", ACCESSORY40N: \"img/night-accessory40.png\", ACCESSORY41D: \"img/day-accessory41.png\", ACCESSORY41N: \"img/night-accessory41.png\", ACCESSORY42D: \"img/day-accessory42.png\", ACCESSORY42N: \"img/night-accessory42.png\", ACCESSORY43D: \"img/day-accessory43.png\", ACCESSORY43N: \"img/night-accessory43.png\", ACCESSORY44D: \"img/day-accessory44.png\", ACCESSORY44N: \"img/night-accessory44.png\", ACCESSORY45D: \"img/day-accessory38.png\", ACCESSORY45N: \"img/night-accessory38.png\", ACCESSORY46D: \"img/day-accessory46.png\", ACCESSORY46N: \"img/night-accessory46.png\", ACCESSORY47D: \"img/day-accessory47.png\", ACCESSORY47N: \"img/night-accessory47.png\", ACCESSORY48D: \"img/day-accessory48.png\", ACCESSORY48N: \"img/night-accessory48.png\", ACCESSORY49D: \"img/day-accessory49.png\", ACCESSORY49N: \"img/night-accessory49.png\", ACCESSORY50D: \"img/day-accessory45.png\", ACCESSORY50N: \"img/night-accessory45.png\", ACCESSORY51D: \"img/day-accessory50.png\", ACCESSORY51N: \"img/night-accessory50.png\", ACCESSORY52D: \"img/day-accessory51.png\", ACCESSORY52N: \"img/night-accessory51.png\", ACCESSORY53D: \"img/day-accessory52.png\", ACCESSORY53N: \"img/night-accessory52.png\", ACCESSORY54D: \"img/day-accessory53.png\", ACCESSORY54N: \"img/night-accessory53.png\", ACCESSORY55D: \"img/day-accessory54.png\", ACCESSORY55N: \"img/night-accessory54.png\", ACCESSORY56D: \"img/day-accessory55.png\", ACCESSORY56N: \"img/night-accessory55.png\", ACCESSORY57D: \"img/day-accessory56.png\", ACCESSORY57N: \"img/night-accessory56.png\", ACCESSORY58D: \"img/day-accessory57.png\", ACCESSORY58N: \"img/night-accessory57.png\", ACCESSORY59D: \"img/day-accessory58.png\", ACCESSORY59N: \"img/night-accessory58.png\", ACCESSORY60D: \"img/day-accessory59.png\", ACCESSORY60N: \"img/night-accessory59.png\", ACCESSORY61D: \"img/day-accessory60.png\", ACCESSORY61N: \"img/night-accessory60.png\", ACCESSORY62D: \"img/day-accessory61.png\", ACCESSORY62N: \"img/night-accessory61.png\", ACCESSORY63D: \"img/day-accessory62.png\", ACCESSORY63N: \"img/night-accessory62.png\", ACCESSORY64D: \"img/day-accessory63.png\", ACCESSORY64N: \"img/night-accessory63.png\", ACCESSORY65D: \"img/day-accessory64.png\", ACCESSORY65N: \"img/night-accessory64.png\", ACCESSORY66D: \"img/day-accessory65.png\", ACCESSORY66N: \"img/night-accessory65.png\", ACCESSORY67D: \"img/day-accessory66.png\", ACCESSORY67N: \"img/night-accessory66.png\", ACCESSORY68D: \"img/day-accessory67.png\", ACCESSORY68N: \"img/night-accessory67.png\", ACCESSORY69D: \"img/day-accessory68.png\", ACCESSORY69N: \"img/night-accessory68.png\", ACCESSORY70D: \"img/day-accessory69.png\", ACCESSORY70N: \"img/night-accessory69.png\", ACCESSORY71D: \"img/day-accessory70.png\", ACCESSORY71N: \"img/night-accessory70.png\", ACCESSORY72D: \"img/day-accessory71.png\", ACCESSORY72N: \"img/night-accessory71.png\", ACCESSORY73D: \"img/day-accessory72.png\", ACCESSORY73N: \"img/night-accessory72.png\", ACCESSORY74D: \"img/day-accessory73.png\", ACCESSORY74N: \"img/night-accessory73.png\", ACCESSORY75D: \"img/day-accessory74.png\", ACCESSORY75N: \"img/night-accessory74.png\", ACCESSORY76D: \"img/day-accessory75.png\", ACCESSORY76N: \"img/night-accessory75.png\", ACCESSORY77D: \"img/day-accessory76.png\", ACCESSORY77N: \"img/night-accessory76.png\", ACCESSORY78D: \"img/day-accessory77.png\", ACCESSORY78N: \"img/night-accessory77.png\", ACCESSORY79D: \"img/day-accessory78.png\", ACCESSORY79N: \"img/night-accessory78.png\", ACCESSORY80D: \"img/day-accessory79.png\", ACCESSORY80N: \"img/night-accessory79.png\", ACCESSORY81D: \"img/day-accessory80.png\", ACCESSORY81N: \"img/night-accessory80.png\", ACCESSORY82D: \"img/day-accessory81.png\", ACCESSORY82N: \"img/night-accessory81.png\", BOOK0D: \"img/day-book0.png\", BOOK0N: \"img/night-book0.png\", BOOK1D: \"img/day-book1.png\", BOOK1N: \"img/night-book1.png\", BOOK2D: \"img/day-book2.png\", BOOK2N: \"img/night-book2.png\", BOOK3D: \"img/day-book3.png\", BOOK3N: \"img/night-book3.png\", BOOK4D: \"img/day-book4.png\", BOOK4N: \"img/night-book4.png\", BOOK5D: \"img/day-book5.png\", BOOK5N: \"img/night-book5.png\", BOOK6D: \"img/day-book6.png\", BOOK6N: \"img/night-book6.png\", BOOK7D: \"img/day-book7.png\", BOOK7N: \"img/night-book7.png\", BOOK8D: \"img/day-book8.png\", BOOK8N: \"img/night-book8.png\", BOOK9D: \"img/day-book9.png\", BOOK9N: \"img/night-book9.png\", BOOK10D: \"img/day-book10.png\", BOOK10N: \"img/night-book10.png\", BOOK11D: \"img/day-book11.png\", BOOK11N: \"img/night-book11.png\", BOOK12D: \"img/day-book12.png\", BOOK12N: \"img/night-book12.png\", BOOK13D: \"img/day-book13.png\", BOOK13N: \"img/night-book13.png\", BOOK14D: \"img/day-book14.png\", BOOK14N: \"img/night-book14.png\", BOOK15D: \"img/day-book15.png\", BOOK15N: \"img/night-book15.png\", BOOK16D: \"img/day-book16.png\", BOOK16N: \"img/night-book16.png\", BOOK17D: \"img/day-book17.png\", BOOK17N: \"img/night-book17.png\", BOOK18D: \"img/day-book18.png\", BOOK18N: \"img/night-book18.png\", BOOK19D: \"img/day-book19.png\", BOOK19N: \"img/night-book19.png\", BOOK20D: \"img/day-book20.png\", BOOK20N: \"img/night-book20.png\", BOOK21D: \"img/day-book21.png\", BOOK21N: \"img/night-book21.png\", BOOK22D: \"img/day-book22.png\", BOOK22N: \"img/night-book22.png\", BOOK23D: \"img/day-book23.png\", BOOK23N: \"img/night-book23.png\", BOOK24D: \"img/day-book24.png\", BOOK24N: \"img/night-book24.png\", BOOK25D: \"img/day-book25.png\", BOOK25N: \"img/night-book25.png\", BOOK26D: \"img/day-book26.png\", BOOK26N: \"img/night-book26.png\", BOOK27D: \"img/day-book27.png\", BOOK27N: \"img/night-book27.png\", BOOK28D: \"img/day-book28.png\", BOOK28N: \"img/night-book28.png\", BOOK29D: \"img/day-book29.png\", BOOK29N: \"img/night-book29.png\", BOOK30D: \"img/day-book30.png\", BOOK30N: \"img/night-book30.png\", BOOK31D: \"img/day-book31.png\", BOOK31N: \"img/night-book31.png\", BOOK32D: \"img/day-book32.png\", BOOK32N: \"img/night-book32.png\", BOOK33D: \"img/day-book33.png\", BOOK33N: \"img/night-book33.png\", BOOK34D: \"img/day-book34.png\", BOOK34N: \"img/night-book34.png\", BOOK35D: \"img/day-book35.png\", BOOK35N: \"img/night-book35.png\", BOOK36D: \"img/day-book36.png\", BOOK36N: \"img/night-book36.png\", BOOK37D: \"img/day-book37.png\", BOOK37N: \"img/night-book37.png\", BOOK38D: \"img/day-book38.png\", BOOK38N: \"img/night-book38.png\", BOOK39D: \"img/day-book39.png\", BOOK39N: \"img/night-book39.png\", BOOK40D: \"img/day-book40.png\", BOOK40N: \"img/night-book40.png\", BOOK41D: \"img/day-book41.png\", BOOK41N: \"img/night-book41.png\", BOOK42D: \"img/day-book42.png\", BOOK42N: \"img/night-book42.png\", BOOK43D: \"img/day-book43.png\", BOOK43N: \"img/night-book43.png\", BOOK44D: \"img/day-book44.png\", BOOK44N: \"img/night-book44.png\", BOOK45D: \"img/day-book45.png\", BOOK45N: \"img/night-book45.png\", CRATE1D: \"img/day-crate1.png\", CRATE1N: \"img/night-crate1.png\", CRATE2D: \"img/day-crate2.png\", CRATE2N: \"img/night-crate2.png\", CRATE3D: \"img/day-crate3.png\", CRATE3N: \"img/night-crate3.png\", CRATE4D: \"img/day-crate4.png\", CRATE4N: \"img/night-crate4.png\", CRATE5D: \"img/day-crate5.png\", CRATE5N: \"img/night-crate5.png\", CRATE6D: \"img/day-crate6.png\", CRATE6N: \"img/night-crate6.png\", CRATE7D: \"img/day-crate7.png\", CRATE7N: \"img/night-crate7.png\", CRATE8D: \"img/day-crate8.png\", CRATE8N: \"img/night-crate8.png\", CRATE9D: \"img/day-crate9.png\", CRATE9N: \"img/night-crate9.png\", CRATE10D: \"img/day-crate10.png\", CRATE10N: \"img/night-crate10.png\", CRATE11D: \"img/day-crate11.png\", CRATE11N: \"img/night-crate11.png\", CRATE12D: \"img/day-crate12.png\", CRATE12N: \"img/night-crate12.png\", CRATE13D: \"img/day-crate13.png\", CRATE13N: \"img/night-crate13.png\", CRATE14D: \"img/day-crate14.png\", CRATE14N: \"img/night-crate14.png\", CRATE15D: \"img/day-crate15.png\", CRATE15N: \"img/night-crate15.png\", CRATE16D: \"img/day-crate16.png\", CRATE16N: \"img/night-crate16.png\", CRATE17D: \"img/day-crate17.png\", CRATE17N: \"img/night-crate17.png\", CRATE18D: \"img/day-crate18.png\", CRATE18N: \"img/night-crate18.png\", CRATE19D: \"img/day-crate19.png\", CRATE19N: \"img/night-crate19.png\", CRATE20D: \"img/day-crate20.png\", CRATE20N: \"img/night-crate20.png\", CRATE21D: \"img/day-crate21.png\", CRATE21N: \"img/night-crate21.png\", CRATE22D: \"img/day-crate22.png\", CRATE22N: \"img/night-crate22.png\", CRATE23D: \"img/day-crate23.png\", CRATE23N: \"img/night-crate23.png\", CRATE24D: \"img/day-crate24.png\", CRATE24N: \"img/night-crate24.png\", CRATE25D: \"img/day-crate25.png\", CRATE25N: \"img/night-crate25.png\", CRATE26D: \"img/day-crate26.png\", CRATE26N: \"img/night-crate26.png\", CRATE27D: \"img/day-crate27.png\", CRATE27N: \"img/night-crate27.png\", CRATE28D: \"img/day-crate28.png\", CRATE28N: \"img/night-crate28.png\", CRATE29D: \"img/day-crate29.png\", CRATE29N: \"img/night-crate29.png\", CRATE30D: \"img/day-crate30.png\", CRATE30N: \"img/night-crate30.png\", CRATE31D: \"img/day-crate31.png\", CRATE31N: \"img/night-crate31.png\", CRATE32D: \"img/day-crate32.png\", CRATE32N: \"img/night-crate32.png\", CRATE33D: \"img/day-crate33.png\", CRATE33N: \"img/night-crate33.png\", CRATE34D: \"img/day-crate34.png\", CRATE34N: \"img/night-crate34.png\", CRATE35D: \"img/day-crate35.png\", CRATE35N: \"img/night-crate35.png\", CRATE36D: \"img/day-crate36.png\", CRATE36N: \"img/night-crate36.png\", CRATE37D: \"img/day-crate37.png\", CRATE37N: \"img/night-crate37.png\", CRATE38D: \"img/day-crate38.png\", CRATE38N: \"img/night-crate38.png\", CRATE39D: \"img/day-crate39.png\", CRATE39N: \"img/night-crate39.png\", CRATE40D: \"img/day-crate40.png\", CRATE40N: \"img/night-crate40.png\", CRATE41D: \"img/day-crate41.png\", CRATE41N: \"img/night-crate41.png\", CRATE42D: \"img/day-crate42.png\", CRATE42N: \"img/night-crate42.png\", CRATE43D: \"img/day-crate43.png\", CRATE43N: \"img/night-crate43.png\", CRATE44D: \"img/day-crate44.png\", CRATE44N: \"img/night-crate44.png\", CRATE45D: \"img/day-crate45.png\", CRATE45N: \"img/night-crate45.png\", CRATE46D: \"img/day-crate46.png\", CRATE46N: \"img/night-crate46.png\", CRATE47D: \"img/day-crate47.png\", CRATE47N: \"img/night-crate47.png\", CRATE48D: \"img/day-crate48.png\", CRATE48N: \"img/night-crate48.png\", CRATE49D: \"img/day-crate49.png\", CRATE49N: \"img/night-crate49.png\", CRATE50D: \"img/day-crate50.png\", CRATE50N: \"img/night-crate50.png\", CRATE51D: \"img/day-crate51.png\", CRATE51N: \"img/night-crate51.png\", CRATE52D: \"img/day-crate52.png\", CRATE52N: \"img/night-crate52.png\", CRATE53D: \"img/day-crate53.png\", CRATE53N: \"img/night-crate53.png\", CRATE54D: \"img/day-crate54.png\", CRATE54N: \"img/night-crate54.png\", CRATE55D: \"img/day-crate55.png\", CRATE55N: \"img/night-crate55.png\", CRATE56D: \"img/day-crate56.png\", CRATE56N: \"img/night-crate56.png\", CRATE57D: \"img/day-crate57.png\", CRATE57N: \"img/night-crate57.png\", CRATE58D: \"img/day-crate58.png\", CRATE58N: \"img/night-crate58.png\", CRATE59D: \"img/day-crate59.png\", CRATE59N: \"img/night-crate59.png\", CRATE60D: \"img/day-crate60.png\", CRATE60N: \"img/night-crate60.png\", CRATE61D: \"img/day-crate61.png\", CRATE61N: \"img/night-crate61.png\", CRATE62D: \"img/day-crate62.png\", CRATE62N: \"img/night-crate62.png\", CRATE63D: \"img/day-crate63.png\", CRATE63N: \"img/night-crate63.png\", CRATE64D: \"img/day-crate64.png\", CRATE64N: \"img/night-crate64.png\", CRATE65D: \"img/day-crate65.png\", CRATE65N: \"img/night-crate65.png\", CRATE66D: \"img/day-crate66.png\", CRATE66N: \"img/night-crate66.png\", CRATE67D: \"img/day-crate67.png\", CRATE67N: \"img/night-crate67.png\", CRATE68D: \"img/day-crate68.png\", CRATE68N: \"img/night-crate68.png\", CRATE69D: \"img/day-crate69.png\", CRATE69N: \"img/night-crate69.png\", CRATE70D: \"img/day-crate70.png\", CRATE70N: \"img/night-crate70.png\", CRATE71D: \"img/day-crate71.png\", CRATE71N: \"img/night-crate71.png\", CRATE72D: \"img/day-crate72.png\", CRATE72N: \"img/night-crate72.png\", DECORATION_0D: \"img/day-herb0.png\", DECORATION_1D: \"img/day-herb1.png\", DECORATION_2D: \"img/day-herb2.png\", DECORATION_3D: \"img/day-herb3.png\", DECORATION_4D: \"img/day-herb4.png\", DECORATION_5D: \"img/day-herb5.png\", DECORATION_6D: \"img/day-herb6.png\", DECORATION_7D: \"img/day-herb7.png\", DECORATION_8D: \"img/day-herb8.png\", DECORATION_9D: \"img/day-herb9.png\", DECORATION_10D: \"img/day-herb10.png\", DECORATION_11D: \"img/day-herb11.png\", DECORATION_12D: \"img/day-herb12.png\", DECORATION_13D: \"img/day-herb13.png\", DECORATION_14D: \"img/day-herb14.png\", DECORATION_15D: \"img/day-herb15.png\", DECORATION_16D: \"img/day-shell0.png\", DECORATION_17D: \"img/day-shell1.png\", DECORATION_18D: \"img/day-shell2.png\", DECORATION_19D: \"img/day-leaf1.png\", DECORATION_20D: \"img/day-leaf2.png\", DECORATION_21D: \"img/day-leaf3.png\", DECORATION_22D: \"img/day-leaf4.png\", DECORATION_23D: \"img/day-leaf5.png\", DECORATION_24D: \"img/day-leaf6.png\", DECORATION_25D: \"img/day-leaf7.png\", DECORATION_26D: \"img/day-leaf8.png\", DECORATION_27D: \"img/day-rock0.png\", DECORATION_28D: \"img/day-rock1.png\", DECORATION_29D: \"img/day-rock2.png\", DECORATION_30D: \"img/day-rock3.png\", DECORATION_31D: \"img/day-rock4.png\", DECORATION_32D: \"img/day-rock5.png\", DECORATION_33D: \"img/day-rock6.png\", DECORATION_34D: \"img/day-rock7.png\", DECORATION_35D: \"img/day-rock8.png\", DECORATION_36D: \"img/day-rock9.png\", DECORATION_37D: \"img/day-rock10.png\", DECORATION_38D: \"img/day-rock11.png\", DECORATION_39D: \"img/day-rock12.png\", DECORATION_40D: \"img/day-rock13.png\", DECORATION_41D: \"img/day-flower1.png\", DECORATION_42D: \"img/day-flower2.png\", DECORATION_43D: \"img/day-flower3.png\", DECORATION_44D: \"img/day-flower4.png\", DECORATION_45D: \"img/day-flower5.png\", DECORATION_46D: \"img/day-flower6.png\", DECORATION_47D: \"img/day-flower7.png\", DECORATION_48D: \"img/day-flower8.png\", DECORATION_49D: \"img/day-flower9.png\", DECORATION_50D: \"img/day-herb16.png\", DECORATION_51D: \"img/day-herb17.png\", DECORATION_52D: \"img/day-herb18.png\", DECORATION_53D: \"img/day-herb19.png\", DECORATION_54D: \"img/day-herb20.png\", DECORATION_55D: \"img/day-herb21.png\", DECORATION_0N: \"img/night-herb0.png\", DECORATION_1N: \"img/night-herb1.png\", DECORATION_2N: \"img/night-herb2.png\", DECORATION_3N: \"img/night-herb3.png\", DECORATION_4N: \"img/night-herb4.png\", DECORATION_5N: \"img/night-herb5.png\", DECORATION_6N: \"img/night-herb6.png\", DECORATION_7N: \"img/night-herb7.png\", DECORATION_8N: \"img/night-herb8.png\", DECORATION_9N: \"img/night-herb9.png\", DECORATION_10N: \"img/night-herb10.png\", DECORATION_11N: \"img/night-herb11.png\", DECORATION_12N: \"img/night-herb12.png\", DECORATION_13N: \"img/night-herb13.png\", DECORATION_14N: \"img/night-herb14.png\", DECORATION_15N: \"img/night-herb15.png\", DECORATION_16N: \"img/night-shell0.png\", DECORATION_17N: \"img/night-shell1.png\", DECORATION_18N: \"img/night-shell2.png\", DECORATION_19N: \"img/night-leaf1.png\", DECORATION_20N: \"img/night-leaf2.png\", DECORATION_21N: \"img/night-leaf3.png\", DECORATION_22N: \"img/night-leaf4.png\", DECORATION_23N: \"img/night-leaf5.png\", DECORATION_24N: \"img/night-leaf6.png\", DECORATION_25N: \"img/night-leaf7.png\", DECORATION_26N: \"img/night-leaf8.png\", DECORATION_27N: \"img/night-rock0.png\", DECORATION_28N: \"img/night-rock1.png\", DECORATION_29N: \"img/night-rock2.png\", DECORATION_30N: \"img/night-rock3.png\", DECORATION_31N: \"img/night-rock4.png\", DECORATION_32N: \"img/night-rock5.png\", DECORATION_33N: \"img/night-rock6.png\", DECORATION_34N: \"img/night-rock7.png\", DECORATION_35N: \"img/night-rock8.png\", DECORATION_36N: \"img/night-rock9.png\", DECORATION_37N: \"img/night-rock10.png\", DECORATION_38N: \"img/night-rock11.png\", DECORATION_39N: \"img/night-rock12.png\", DECORATION_40N: \"img/night-rock13.png\", DECORATION_41N: \"img/night-flower1.png\", DECORATION_42N: \"img/night-flower2.png\", DECORATION_43N: \"img/night-flower3.png\", DECORATION_44N: \"img/night-flower4.png\", DECORATION_45N: \"img/night-flower5.png\", DECORATION_46N: \"img/night-flower6.png\", DECORATION_47N: \"img/night-flower7.png\", DECORATION_48N: \"img/night-flower8.png\", DECORATION_49N: \"img/night-flower9.png\", DECORATION_50N: \"img/night-herb16.png\", DECORATION_51N: \"img/night-herb17.png\", DECORATION_52N: \"img/night-herb18.png\", DECORATION_53N: \"img/night-herb19.png\", DECORATION_54N: \"img/night-herb20.png\", DECORATION_55N: \"img/night-herb21.png\", DAY_RIVER_000_010_000: \"img/day-river000-010-000.png\", DAY_RIVER_000_010_010: \"img/day-river000-010-010.png\", DAY_RIVER_000_011_000: \"img/day-river000-011-000.png\", DAY_RIVER_000_011_010: \"img/day-river000-011-010.png\", DAY_RIVER_000_011_011: \"img/day-river000-011-011.png\", DAY_RIVER_000_110_000: \"img/day-river000-110-000.png\", DAY_RIVER_000_110_010: \"img/day-river000-110-010.png\", DAY_RIVER_000_110_110: \"img/day-river000-110-110.png\", DAY_RIVER_000_111_000: \"img/day-river000-111-000.png\", DAY_RIVER_000_111_010: \"img/day-river000-111-010.png\", DAY_RIVER_000_111_011: \"img/day-river000-111-011.png\", DAY_RIVER_000_111_110: \"img/day-river000-111-110.png\", DAY_RIVER_000_111_111: \"img/day-river000-111-111.png\", DAY_RIVER_010_010_000: \"img/day-river010-010-000.png\", DAY_RIVER_010_010_010: \"img/day-river010-010-010.png\", DAY_RIVER_010_011_000: \"img/day-river010-011-000.png\", DAY_RIVER_010_011_010: \"img/day-river010-011-010.png\", DAY_RIVER_010_011_011: \"img/day-river010-011-011.png\", DAY_RIVER_010_110_000: \"img/day-river010-110-000.png\", DAY_RIVER_010_110_010: \"img/day-river010-110-010.png\", DAY_RIVER_010_110_110: \"img/day-river010-110-110.png\", DAY_RIVER_010_111_000: \"img/day-river010-111-000.png\", DAY_RIVER_010_111_010: \"img/day-river010-111-010.png\", DAY_RIVER_010_111_011: \"img/day-river010-111-011.png\", DAY_RIVER_010_111_110: \"img/day-river010-111-110.png\", DAY_RIVER_010_111_111: \"img/day-river010-111-111.png\", DAY_RIVER_011_011_000: \"img/day-river011-011-000.png\", DAY_RIVER_011_011_010: \"img/day-river011-011-010.png\", DAY_RIVER_011_011_011: \"img/day-river011-011-011.png\", DAY_RIVER_011_111_000: \"img/day-river011-111-000.png\", DAY_RIVER_011_111_010: \"img/day-river011-111-010.png\", DAY_RIVER_011_111_011: \"img/day-river011-111-011.png\", DAY_RIVER_011_111_110: \"img/day-river011-111-110.png\", DAY_RIVER_011_111_111: \"img/day-river011-111-111.png\", DAY_RIVER_110_110_000: \"img/day-river110-110-000.png\", DAY_RIVER_110_110_010: \"img/day-river110-110-010.png\", DAY_RIVER_110_110_110: \"img/day-river110-110-110.png\", DAY_RIVER_110_111_000: \"img/day-river110-111-000.png\", DAY_RIVER_110_111_010: \"img/day-river110-111-010.png\", DAY_RIVER_110_111_011: \"img/day-river110-111-011.png\", DAY_RIVER_110_111_110: \"img/day-river110-111-110.png\", DAY_RIVER_110_111_111: \"img/day-river110-111-111.png\", DAY_RIVER_111_111_011: \"img/day-river111-111-011.png\", DAY_RIVER_111_111_110: \"img/day-river111-111-110.png\", DAY_RIVER_111_111_011: \"img/day-river111-111-011.png\", DAY_RIVER_111_111_000: \"img/day-river111-111-000.png\", DAY_RIVER_111_111_111: \"img/day-river111-111-111.png\", DAY_RIVER_111_111_010: \"img/day-river111-111-010.png\", NIGHT_RIVER_000_010_000: \"img/night-river000-010-000.png\", NIGHT_RIVER_000_010_010: \"img/night-river000-010-010.png\", NIGHT_RIVER_000_011_000: \"img/night-river000-011-000.png\", NIGHT_RIVER_000_011_010: \"img/night-river000-011-010.png\", NIGHT_RIVER_000_011_011: \"img/night-river000-011-011.png\", NIGHT_RIVER_000_110_000: \"img/night-river000-110-000.png\", NIGHT_RIVER_000_110_010: \"img/night-river000-110-010.png\", NIGHT_RIVER_000_110_110: \"img/night-river000-110-110.png\", NIGHT_RIVER_000_111_000: \"img/night-river000-111-000.png\", NIGHT_RIVER_000_111_010: \"img/night-river000-111-010.png\", NIGHT_RIVER_000_111_011: \"img/night-river000-111-011.png\", NIGHT_RIVER_000_111_110: \"img/night-river000-111-110.png\", NIGHT_RIVER_000_111_111: \"img/night-river000-111-111.png\", NIGHT_RIVER_010_010_000: \"img/night-river010-010-000.png\", NIGHT_RIVER_010_010_010: \"img/night-river010-010-010.png\", NIGHT_RIVER_010_011_000: \"img/night-river010-011-000.png\", NIGHT_RIVER_010_011_010: \"img/night-river010-011-010.png\", NIGHT_RIVER_010_011_011: \"img/night-river010-011-011.png\", NIGHT_RIVER_010_110_000: \"img/night-river010-110-000.png\", NIGHT_RIVER_010_110_010: \"img/night-river010-110-010.png\", NIGHT_RIVER_010_110_110: \"img/night-river010-110-110.png\", NIGHT_RIVER_010_111_000: \"img/night-river010-111-000.png\", NIGHT_RIVER_010_111_010: \"img/night-river010-111-010.png\", NIGHT_RIVER_010_111_011: \"img/night-river010-111-011.png\", NIGHT_RIVER_010_111_110: \"img/night-river010-111-110.png\", NIGHT_RIVER_010_111_111: \"img/night-river010-111-111.png\", NIGHT_RIVER_011_011_000: \"img/night-river011-011-000.png\", NIGHT_RIVER_011_011_010: \"img/night-river011-011-010.png\", NIGHT_RIVER_011_011_011: \"img/night-river011-011-011.png\", NIGHT_RIVER_011_111_000: \"img/night-river011-111-000.png\", NIGHT_RIVER_011_111_010: \"img/night-river011-111-010.png\", NIGHT_RIVER_011_111_011: \"img/night-river011-111-011.png\", NIGHT_RIVER_011_111_110: \"img/night-river011-111-110.png\", NIGHT_RIVER_011_111_111: \"img/night-river011-111-111.png\", NIGHT_RIVER_110_110_000: \"img/night-river110-110-000.png\", NIGHT_RIVER_110_110_010: \"img/night-river110-110-010.png\", NIGHT_RIVER_110_110_110: \"img/night-river110-110-110.png\", NIGHT_RIVER_110_111_000: \"img/night-river110-111-000.png\", NIGHT_RIVER_110_111_010: \"img/night-river110-111-010.png\", NIGHT_RIVER_110_111_011: \"img/night-river110-111-011.png\", NIGHT_RIVER_110_111_110: \"img/night-river110-111-110.png\", NIGHT_RIVER_110_111_111: \"img/night-river110-111-111.png\", NIGHT_RIVER_111_111_011: \"img/night-river111-111-011.png\", NIGHT_RIVER_111_111_110: \"img/night-river111-111-110.png\", NIGHT_RIVER_111_111_011: \"img/night-river111-111-011.png\", NIGHT_RIVER_111_111_000: \"img/night-river111-111-000.png\", NIGHT_RIVER_111_111_111: \"img/night-river111-111-111.png\", NIGHT_RIVER_111_111_010: \"img/night-river111-111-010.png\", DAY_RIVER_COMPO1: \"img/day-pebblecompo1.png\", DAY_RIVER_COMPO2: \"img/day-pebblecompo2.png\", DAY_RIVER_COMPO3: \"img/day-pebblecompo3.png\", DAY_RIVER_COMPO4: \"img/day-pebblecompo4.png\", DAY_RIVER_COMPO5: \"img/day-pebblecompo5.png\", DAY_RIVER_COMPO6: \"img/day-pebblecompo6.png\", DAY_RIVER_COMPO7: \"img/day-pebblecompo7.png\", DAY_RIVER_COMPO8: \"img/day-pebblecompo8.png\", DAY_RIVER_COMPO9: \"img/day-pebblecompo9.png\", DAY_RIVER_COMPO10: \"img/day-pebblecompo10.png\", DAY_RIVER_COMPO11: \"img/day-pebblecompo11.png\", DAY_RIVER_COMPO12: \"img/day-pebblecompo12.png\", DAY_RIVER_COMPO13: \"img/day-pebblecompo13.png\", DAY_RIVER_COMPO14: \"img/day-pebblecompo14.png\", DAY_RIVER_COMPO15: \"img/day-pebblecompo15.png\", DAY_RIVER_COMPO16: \"img/day-pebblecompo16.png\", DAY_RIVER_COMPO17: \"img/day-pebblecompo17.png\", DAY_RIVER_COMPO18: \"img/day-pebblecompo18.png\", DAY_RIVER_COMPO19: \"img/day-pebblecompo19.png\", DAY_RIVER_COMPO20: \"img/day-pebblecompo20.png\", DAY_RIVER_COMPO21: \"img/day-pebblecompo21.png\", DAY_RIVER_COMPO22: \"img/day-pebblecompo22.png\", DAY_RIVER_COMPO23: \"img/day-pebblecompo23.png\", DAY_RIVER_COMPO24: \"img/day-pebblecompo24.png\", DAY_RIVER_COMPO25: \"img/day-pebblecompo25.png\", DAY_RIVER_COMPO26: \"img/day-pebblecompo26.png\", DAY_RIVER_COMPO27: \"img/day-pebblecompo27.png\", DAY_RIVER_COMPO28: \"img/day-pebblecompo28.png\", NIGHT_RIVER_COMPO1: \"img/night-pebblecompo1.png\", NIGHT_RIVER_COMPO2: \"img/night-pebblecompo2.png\", NIGHT_RIVER_COMPO3: \"img/night-pebblecompo3.png\", NIGHT_RIVER_COMPO4: \"img/night-pebblecompo4.png\", NIGHT_RIVER_COMPO5: \"img/night-pebblecompo5.png\", NIGHT_RIVER_COMPO6: \"img/night-pebblecompo6.png\", NIGHT_RIVER_COMPO7: \"img/night-pebblecompo7.png\", NIGHT_RIVER_COMPO8: \"img/night-pebblecompo8.png\", NIGHT_RIVER_COMPO9: \"img/night-pebblecompo9.png\", NIGHT_RIVER_COMPO10: \"img/night-pebblecompo10.png\", NIGHT_RIVER_COMPO11: \"img/night-pebblecompo11.png\", NIGHT_RIVER_COMPO12: \"img/night-pebblecompo12.png\", NIGHT_RIVER_COMPO13: \"img/night-pebblecompo13.png\", NIGHT_RIVER_COMPO14: \"img/night-pebblecompo14.png\", NIGHT_RIVER_COMPO15: \"img/night-pebblecompo15.png\", NIGHT_RIVER_COMPO16: \"img/night-pebblecompo16.png\", NIGHT_RIVER_COMPO17: \"img/night-pebblecompo17.png\", NIGHT_RIVER_COMPO18: \"img/night-pebblecompo18.png\", NIGHT_RIVER_COMPO19: \"img/night-pebblecompo19.png\", NIGHT_RIVER_COMPO20: \"img/night-pebblecompo20.png\", NIGHT_RIVER_COMPO21: \"img/night-pebblecompo21.png\", NIGHT_RIVER_COMPO22: \"img/night-pebblecompo22.png\", NIGHT_RIVER_COMPO23: \"img/night-pebblecompo23.png\", NIGHT_RIVER_COMPO24: \"img/night-pebblecompo24.png\", NIGHT_RIVER_COMPO25: \"img/night-pebblecompo25.png\", NIGHT_RIVER_COMPO26: \"img/night-pebblecompo26.png\", NIGHT_RIVER_COMPO27: \"img/night-pebblecompo27.png\", NIGHT_RIVER_COMPO28: \"img/night-pebblecompo28.png\", BABY_MAMMOTHD: \"img/day-baby-mammoth.png\", BABY_MAMMOTH_TAMEDD: \"img/day-baby-mammoth-tamed.png\", BABY_MAMMOTH_ATTACKD: \"img/day-baby-mammoth-angry.png\", BABY_MAMMOTHN: \"img/night-baby-mammoth.png\", BABY_MAMMOTH_TAMEDN: \"img/night-baby-mammoth-tamed.png\", BABY_MAMMOTH_ATTACKN: \"img/night-baby-mammoth-angry.png\", INV_BABY_MAMMOTH_OUT: \"img/inv-mammoth-out.png\", INV_BABY_MAMMOTH_IN: \"img/inv-mammoth-in.png\", INV_BABY_MAMMOTH_CLICK: \"img/inv-mammoth-click.png\", HURT_BABY_MAMMOTH: \"img/hurt-baby-mammoth.png\", BABY_MAMMOTH_STEP: \"img/baby-mammoth-step.png\", FLOWER_HATD: \"img/day-flower-hat.png\", FLOWER_HATN: \"img/night-flower-hat.png\", INV_FLOWER_HAT_OUT: \"img/inv-flower-hat-out.png\", INV_FLOWER_HAT_IN: \"img/inv-flower-hat-in.png\", INV_FLOWER_HAT_CLICK: \"img/inv-flower-hat-click.png\", FUR_HATD: \"img/day-fur-hat.png\", FUR_HATN: \"img/night-fur-hat.png\", INV_FUR_HAT_OUT: \"img/inv-fur-hat-out.png\", INV_FUR_HAT_IN: \"img/inv-fur-hat-in.png\", INV_FUR_HAT_CLICK: \"img/inv-fur-hat-click.png\", MAMMOTHD: \"img/day-mammoth.png\", MAMMOTHN: \"img/night-mammoth.png\", HURT_MAMMOTH: \"img/hurt-mammoth.png\", INV_FUR_MAMMOTH_OUT: \"img/inv-mammoth-fur-out.png\", INV_FUR_MAMMOTH_IN: \"img/inv-mammoth-fur-in.png\", INV_FUR_MAMMOTH_CLICK: \"img/inv-mammoth-fur-click.png\", INV_WOOD_BOW_OUT: \"img/inv-wood-bow-out.png\", INV_WOOD_BOW_IN: \"img/inv-wood-bow-in.png\", INV_WOOD_BOW_CLICK: \"img/inv-wood-bow-click.png\", INV_WOOD_ARROW_OUT: \"img/inv-wood-arrow-out.png\", INV_WOOD_ARROW_IN: \"img/inv-wood-arrow-in.png\", INV_WOOD_ARROW_CLICK: \"img/inv-wood-arrow-click.png\", WOOD_BOWD: \"img/day-wood-bow2.png\", WOOD_BOWN: \"img/night-wood-bow2.png\", WOOD_ARROWD: \"img/day-wood-arrow.png\", WOOD_ARROWN: \"img/night-wood-arrow.png\", INV_STONE_BOW_OUT: \"img/inv-stone-bow-out.png\", INV_STONE_BOW_IN: \"img/inv-stone-bow-in.png\", INV_STONE_BOW_CLICK: \"img/inv-stone-bow-click.png\", INV_STONE_ARROW_OUT: \"img/inv-stone-arrow-out.png\", INV_STONE_ARROW_IN: \"img/inv-stone-arrow-in.png\", INV_STONE_ARROW_CLICK: \"img/inv-stone-arrow-click.png\", STONE_BOWD: \"img/day-stone-bow.png\", STONE_BOWN: \"img/night-stone-bow.png\", STONE_ARROWD: \"img/day-stone-arrow.png\", STONE_ARROWN: \"img/night-stone-arrow.png\", INV_GOLD_BOW_OUT: \"img/inv-gold-bow-out.png\", INV_GOLD_BOW_IN: \"img/inv-gold-bow-in.png\", INV_GOLD_BOW_CLICK: \"img/inv-gold-bow-click.png\", INV_GOLD_ARROW_OUT: \"img/inv-gold-arrow-out.png\", INV_GOLD_ARROW_IN: \"img/inv-gold-arrow-in.png\", INV_GOLD_ARROW_CLICK: \"img/inv-gold-arrow-click.png\", GOLD_BOWD: \"img/day-gold-bow.png\", GOLD_BOWN: \"img/night-gold-bow.png\", GOLD_ARROWD: \"img/day-gold-arrow.png\", GOLD_ARROWN: \"img/night-gold-arrow.png\", INV_DIAMOND_BOW_OUT: \"img/inv-diamond-bow-out.png\", INV_DIAMOND_BOW_IN: \"img/inv-diamond-bow-in.png\", INV_DIAMOND_BOW_CLICK: \"img/inv-diamond-bow-click.png\", INV_DIAMOND_ARROW_OUT: \"img/inv-diamond-arrow-out.png\", INV_DIAMOND_ARROW_IN: \"img/inv-diamond-arrow-in.png\", INV_DIAMOND_ARROW_CLICK: \"img/inv-diamond-arrow-click.png\", DIAMOND_BOWD: \"img/day-diamond-bow.png\", DIAMOND_BOWN: \"img/night-diamond-bow.png\", DIAMOND_ARROWD: \"img/day-diamond-arrow.png\", DIAMOND_ARROWN: \"img/night-diamond-arrow.png\", INV_AMETHYST_BOW_OUT: \"img/inv-amethyst-bow-out.png\", INV_AMETHYST_BOW_IN: \"img/inv-amethyst-bow-in.png\", INV_AMETHYST_BOW_CLICK: \"img/inv-amethyst-bow-click.png\", INV_AMETHYST_ARROW_OUT: \"img/inv-amethyst-arrow-out.png\", INV_AMETHYST_ARROW_IN: \"img/inv-amethyst-arrow-in.png\", INV_AMETHYST_ARROW_CLICK: \"img/inv-amethyst-arrow-click.png\", AMETHYST_BOWD: \"img/day-amethyst-bow.png\", AMETHYST_BOWN: \"img/night-amethyst-bow.png\", AMETHYST_ARROWD: \"img/day-amethyst-arrow.png\", AMETHYST_ARROWN: \"img/night-amethyst-arrow.png\", INV_DRAGON_BOW_OUT: \"img/inv-dragon-bow-out.png\", INV_DRAGON_BOW_IN: \"img/inv-dragon-bow-in.png\", INV_DRAGON_BOW_CLICK: \"img/inv-dragon-bow-click.png\", INV_DRAGON_ARROW_OUT: \"img/inv-dragon-arrow-out.png\", INV_DRAGON_ARROW_IN: \"img/inv-dragon-arrow-in.png\", INV_DRAGON_ARROW_CLICK: \"img/inv-dragon-arrow-click.png\", DRAGON_BOWD: \"img/day-dragon-bow.png\", DRAGON_BOWN: \"img/night-dragon-bow.png\", DRAGON_ARROWD: \"img/day-dragon-arrow.png\", DRAGON_ARROWN: \"img/night-dragon-arrow.png\", INV_REIDITE_BOW_OUT: \"img/inv-reidite-bow-out.png\", INV_REIDITE_BOW_IN: \"img/inv-reidite-bow-in.png\", INV_REIDITE_BOW_CLICK: \"img/inv-reidite-bow-click.png\", INV_REIDITE_ARROW_OUT: \"img/inv-reidite-arrow-out.png\", INV_REIDITE_ARROW_IN: \"img/inv-reidite-arrow-in.png\", INV_REIDITE_ARROW_CLICK: \"img/inv-reidite-arrow-click.png\", REIDITE_BOWD: \"img/day-reidite-bow.png\", REIDITE_BOWN: \"img/night-reidite-bow.png\", REIDITE_ARROWD: \"img/day-reidite-arrow.png\", REIDITE_ARROWN: \"img/night-reidite-arrow.png\", BANDAGE_ACTIVATED: \"img/bandage-activated.png\", AUTO_FEED: \"img/auto-feed.png\", STOP_REGENERATION_BLIZZARD: \"img/stop-regeneration.png\", STOP_REGENERATION: \"img/stop-regeneration2.png\", WOOD_TOWERD: \"img/day-wood-platform.png\", WOOD_TOWERN: \"img/night-wood-platform.png\", INV_WOOD_TOWER_IN: \"img/inv-wood-platform-in.png\", INV_WOOD_TOWER_OUT: \"img/inv-wood-platform-out.png\", INV_WOOD_TOWER_CLICK: \"img/inv-wood-platform-click.png\", WOOD_SHIELDD: \"img/day-wood-shield.png\", WOOD_SHIELDN: \"img/night-wood-shield.png\", STONE_SHIELDD: \"img/day-stone-shield.png\", STONE_SHIELDN: \"img/night-stone-shield.png\", GOLD_SHIELDD: \"img/day-gold-shield.png\", GOLD_SHIELDN: \"img/night-gold-shield.png\", DIAMOND_SHIELDD: \"img/day-diamond-shield.png\", DIAMOND_SHIELDN: \"img/night-diamond-shield.png\", AMETHYST_SHIELDD: \"img/day-amethyst-shield.png\", AMETHYST_SHIELDN: \"img/night-amethyst-shield.png\", REIDITE_SHIELDD: \"img/day-reidite-shield.png\", REIDITE_SHIELDN: \"img/night-reidite-shield.png\", INV_WOOD_SHIELD_IN: \"img/inv-wood-shield-in.png\", INV_WOOD_SHIELD_OUT: \"img/inv-wood-shield-out.png\", INV_WOOD_SHIELD_CLICK: \"img/inv-wood-shield-click.png\", INV_STONE_SHIELD_IN: \"img/inv-stone-shield-in.png\", INV_STONE_SHIELD_OUT: \"img/inv-stone-shield-out.png\", INV_STONE_SHIELD_CLICK: \"img/inv-stone-shield-click.png\", INV_GOLD_SHIELD_IN: \"img/inv-gold-shield-in.png\", INV_GOLD_SHIELD_OUT: \"img/inv-gold-shield-out.png\", INV_GOLD_SHIELD_CLICK: \"img/inv-gold-shield-click.png\", INV_DIAMOND_SHIELD_IN: \"img/inv-diamond-shield-in.png\", INV_DIAMOND_SHIELD_OUT: \"img/inv-diamond-shield-out.png\", INV_DIAMOND_SHIELD_CLICK: \"img/inv-diamond-shield-click.png\", INV_AMETHYST_SHIELD_IN: \"img/inv-amethyst-shield-in.png\", INV_AMETHYST_SHIELD_OUT: \"img/inv-amethyst-shield-out.png\", INV_AMETHYST_SHIELD_CLICK: \"img/inv-amethyst-shield-click.png\", INV_REIDITE_SHIELD_IN: \"img/inv-reidite-shield-in.png\", INV_REIDITE_SHIELD_OUT: \"img/inv-reidite-shield-out.png\", INV_REIDITE_SHIELD_CLICK: \"img/inv-reidite-shield-click.png\", MACHETED: \"img/day-machete.png\", MACHETEN: \"img/night-machete.png\", INV_MACHETE_IN: \"img/inv-machete-in.png\", INV_MACHETE_OUT: \"img/inv-machete-out.png\", INV_MACHETE_CLICK: \"img/inv-machete-click.png\"};\r\nWINDOW12 = [{}];\r\nWINDOW12[0].stringify = function (_data) {\r\n    var _a = new Uint8Array(new ArrayBuffer(_data.length));\r\n    for (var i = 0; i < _data.length; i++) _a[i] = _data[i];\r\n    return _a;\r\n};\r\nDUMP_IMAGES = {};\r\nPREPROC_IMAGES = {};\r\nfor (var i in IMAGES) DUMP_IMAGES[i] = IMAGES[i];\r\nsprite = [];\r\nRARITY = {};\r\nRARITY.FREE = 0;\r\nRARITY.WOOD = 1;\r\nRARITY.STONE = 2;\r\nRARITY.GOLD = 3;\r\nRARITY.DIAMOND = 4;\r\nRARITY.AMETHYST = 5;\r\nRARITY.REIDITE = 6;\r\nRARITY.SPECIAL = 7;\r\nRARITY.LEVEL = 8;\r\nCOSMETICS = {};\r\nMINIMAP_UTILS = [];\r\nfind_cosmetics_per_id = function (cosmetics, id) {\r\n    for (var i = 0; i < cosmetics.length; i++) {\r\n        if (cosmetics[i].id === id) return i;\r\n    }\r\n    return -1;\r\n};\r\nvar MINIMAP_LIST = [];\r\nfunction render_type_resources_minimap(type, gap) {\r\n    for (var i = 0; i < MINIMAP_LIST.length; i += gap) {\r\n        var r = MINIMAP_LIST[i];\r\n        if (r[0] === type) render_resource_minimap(r[0], r[1], r[2], r[3]);\r\n    }\r\n}\r\n;\r\n;\r\nfunction render_all_resources_minimap() {\r\n    render_type_resources_minimap(\"isl\", 1);\r\n    render_type_resources_minimap(\"wtb\", 20);\r\n    render_type_resources_minimap(\"la\", 1);\r\n    render_type_resources_minimap(\"c\", 1);\r\n    render_type_resources_minimap(\"s\", 1);\r\n    render_type_resources_minimap(\"f\", 1);\r\n    render_type_resources_minimap(\"p\", 1);\r\n    render_type_resources_minimap(\"g\", 1);\r\n    render_type_resources_minimap(\"d\", 1);\r\n    render_type_resources_minimap(\"a\", 1);\r\n    render_type_resources_minimap(\"re\", 1);\r\n    render_type_resources_minimap(\"m\", 1);\r\n    MINIMAP_LIST = [];\r\n}\r\n;\r\n;\r\nfunction add_resource_minimap(type, subtype, i, j) {\r\n    MINIMAP_LIST.push([type, subtype, i, j]);\r\n}\r\n;\r\n;\r\nfunction render_resource_minimap(type, subtype, i, j) {\r\n    var resource = MINIMAP_UTILS[type];\r\n    if (resource === undefined) return;\r\n    for (var k = 0; k < 2; k++) {\r\n        var img = resource[subtype][k];\r\n        var x = 193 * j / world.nw;\r\n        var y = 193 * i / world.nh;\r\n        var w = img.width / 3.5;\r\n        var h = img.height / 3.5;\r\n        sprite[SPRITE.MINIMAP_CTX][k].drawImage(img, x - w / 2, y - h / 2, w, h);\r\n        x = 600 * j / world.nw;\r\n        y = 600 * i / world.nh;\r\n        w = img.width / 1.5;\r\n        h = img.height / 1.5;\r\n        sprite[SPRITE.BIGMAP_CTX][k].drawImage(img, x - w / 2, y - h / 2, w, h);\r\n    }\r\n}\r\n;\r\nrender_minimap = function () {\r\n    for (var i = 0; i < 2; i++) {\r\n        sprite[SPRITE.MINIMAP_CTX][i].clearRect(0, 0, 193, 193);\r\n        sprite[SPRITE.MINIMAP_CTX][i].drawImage(MINIMAP_UTILS.MAP[i], 0, 0, 193, 193);\r\n        sprite[SPRITE.BIGMAP_CTX][i].clearRect(0, 0, 600, 600);\r\n        sprite[SPRITE.BIGMAP_CTX][i].drawImage(MINIMAP_UTILS.MAP[i], 0, 0, 600, 600);\r\n        for (var j = world.biomes.length - 1; j >= 0; j--) {\r\n            var biome = world.biomes[j];\r\n            var x = 193 * biome.x1 / (100 * world.nw);\r\n            var y = 193 * biome.y1 / (100 * world.nh);\r\n            var w = 193 * biome.w / (100 * world.nw);\r\n            var h = 193 * biome.h / (100 * world.nh);\r\n            var bx = 600 * biome.x1 / (100 * world.nw);\r\n            var by = 600 * biome.y1 / (100 * world.nh);\r\n            var bw = 600 * biome.w / (100 * world.nw);\r\n            var bh = 600 * biome.h / (100 * world.nh);\r\n            if (biome.t === world.BIOME_FOREST) {\r\n                sprite[SPRITE.MINIMAP_CTX][i].drawImage(MINIMAP_UTILS.FOREST[i], x, y, w, h);\r\n                sprite[SPRITE.BIGMAP_CTX][i].drawImage(MINIMAP_UTILS.FOREST[i], bx, by, bw, bh);\r\n            }\r\n            if (biome.t === world.BIOME_WINTER) {\r\n                sprite[SPRITE.MINIMAP_CTX][i].drawImage(MINIMAP_UTILS.WINTER[i], x, y, w, h);\r\n                sprite[SPRITE.BIGMAP_CTX][i].drawImage(MINIMAP_UTILS.WINTER[i], bx, by, bw, bh);\r\n            }\r\n            if (biome.t === world.BIOME_LAVA) {\r\n                sprite[SPRITE.MINIMAP_CTX][i].drawImage(MINIMAP_UTILS.LAVA[i], x, y, w, h);\r\n                sprite[SPRITE.BIGMAP_CTX][i].drawImage(MINIMAP_UTILS.LAVA[i], bx, by, bw, bh);\r\n            }\r\n            if (biome.t === world.BIOME_DRAGON) {\r\n                sprite[SPRITE.MINIMAP_CTX][i].drawImage(MINIMAP_UTILS.CAVE[i], x, y, w, h);\r\n                sprite[SPRITE.BIGMAP_CTX][i].drawImage(MINIMAP_UTILS.CAVE[i], bx, by, bw, bh);\r\n            }\r\n            if (biome.t === world.BIOME_DESERT) {\r\n                sprite[SPRITE.MINIMAP_CTX][i].drawImage(MINIMAP_UTILS.DESERT[i], x, y, w, h);\r\n                sprite[SPRITE.BIGMAP_CTX][i].drawImage(MINIMAP_UTILS.DESERT[i], bx, by, bw, bh);\r\n            }\r\n        }\r\n    }\r\n};\r\nrender_cosmetics = function () {\r\n    COSMETICS = {SKIN: [{id: 0, day: IMAGES.PLAYER0D, night: IMAGES.PLAYER0N, dayHand: IMAGES.HAND0D, nightHand: IMAGES.HAND0N, rarity: RARITY.FREE, author: \"Starve.io\", name: \"Starver\"}, {id: 3, day: IMAGES.PLAYER3D, night: IMAGES.PLAYER3N, dayHand: IMAGES.HAND3D, nightHand: IMAGES.HAND3N, rarity: RARITY.FREE, author: \"Starve.io\", name: \"Angry\"}, {id: 2, day: IMAGES.PLAYER2D, night: IMAGES.PLAYER2N, dayHand: IMAGES.HAND2D, nightHand: IMAGES.HAND2N, rarity: RARITY.FREE, author: \"Starve.io\", name: \"Sad\"}, {id: 9, day: IMAGES.PLAYER9D, night: IMAGES.PLAYER9N, dayHand: IMAGES.HAND9D, nightHand: IMAGES.HAND9N, rarity: RARITY.FREE, author: \"Starve.io\", name: \"Happy 1\"}, {id: 1, day: IMAGES.PLAYER1D, night: IMAGES.PLAYER1N, dayHand: IMAGES.HAND1D, nightHand: IMAGES.HAND1N, rarity: RARITY.WOOD, author: \"Starve.io\", name: \"What?\"}, {id: 4, day: IMAGES.PLAYER4D, night: IMAGES.PLAYER4N, dayHand: IMAGES.HAND4D, nightHand: IMAGES.HAND4N, rarity: RARITY.WOOD, author: \"Starve.io\", name: \"Suspicious\"}, {id: 5, day: IMAGES.PLAYER5D, night: IMAGES.PLAYER5N, dayHand: IMAGES.HAND5D, nightHand: IMAGES.HAND5N, rarity: RARITY.WOOD, author: \"Starve.io\", name: \"Scar\"}, {id: 6, day: IMAGES.PLAYER6D, night: IMAGES.PLAYER6N, dayHand: IMAGES.HAND6D, nightHand: IMAGES.HAND6N, rarity: RARITY.WOOD, author: \"Starve.io\", name: \"In Trouble\"}, {id: 7, day: IMAGES.PLAYER7D, night: IMAGES.PLAYER7N, dayHand: IMAGES.HAND7D, nightHand: IMAGES.HAND7N, rarity: RARITY.WOOD, author: \"Starve.io\", name: \"Cute\"}, {id: 8, day: IMAGES.PLAYER8D, night: IMAGES.PLAYER8N, dayHand: IMAGES.HAND8D, nightHand: IMAGES.HAND8N, rarity: RARITY.WOOD, author: \"Starve.io\", name: \"Bored 1\"}, {id: 10, day: IMAGES.PLAYER10D, night: IMAGES.PLAYER10N, dayHand: IMAGES.HAND10D, nightHand: IMAGES.HAND10N, rarity: RARITY.WOOD, author: \"Starve.io\", name: \"Happy 2\"}, {id: 11, day: IMAGES.PLAYER11D, night: IMAGES.PLAYER11N, dayHand: IMAGES.HAND11D, nightHand: IMAGES.HAND11N, rarity: RARITY.WOOD, author: \"Starve.io\", name: \"Crazy\"}, {id: 12, day: IMAGES.PLAYER12D, night: IMAGES.PLAYER12N, dayHand: IMAGES.HAND12D, nightHand: IMAGES.HAND12N, rarity: RARITY.WOOD, author: \"Starve.io\", name: \"Happy 3\"}, {id: 13, day: IMAGES.PLAYER13D, night: IMAGES.PLAYER13N, dayHand: IMAGES.HAND13D, nightHand: IMAGES.HAND13N, rarity: RARITY.WOOD, author: \"Starve.io\", name: \"Very Cute\"}, {id: 14, day: IMAGES.PLAYER14D, night: IMAGES.PLAYER14N, dayHand: IMAGES.HAND14D, nightHand: IMAGES.HAND14N, rarity: RARITY.WOOD, author: \"Starve.io\", name: \"Curious\"}, {id: 15, day: IMAGES.PLAYER15D, night: IMAGES.PLAYER15N, dayHand: IMAGES.HAND15D, nightHand: IMAGES.HAND15N, rarity: RARITY.WOOD, author: \"Starve.io\", name: \"Bored 2\"}, {id: 16, day: IMAGES.PLAYER16D, night: IMAGES.PLAYER16N, dayHand: IMAGES.HAND16D, nightHand: IMAGES.HAND16N, rarity: RARITY.WOOD, author: \"Starve.io\", name: \"Happy 4\"}, {id: 17, day: IMAGES.PLAYER17D, night: IMAGES.PLAYER17N, dayHand: IMAGES.HAND17D, nightHand: IMAGES.HAND17N, rarity: RARITY.WOOD, author: \"Starve.io\", name: \"Scar 2\"}, {id: 18, day: IMAGES.PLAYER18D, night: IMAGES.PLAYER18N, dayHand: IMAGES.HAND18D, nightHand: IMAGES.HAND18N, rarity: RARITY.WOOD, author: \"Starve.io\", name: \"Sick\"}, {id: 19, day: IMAGES.PLAYER19D, night: IMAGES.PLAYER19N, dayHand: IMAGES.HAND19D, nightHand: IMAGES.HAND19N, rarity: RARITY.WOOD, author: \"Starve.io\", name: \"Somnambule\"}, {id: 24, day: IMAGES.SKIN7D, night: IMAGES.SKIN7N, dayHand: IMAGES.HAND_SKIN7D, nightHand: IMAGES.HAND_SKIN7N, rarity: RARITY.WOOD, author: \"Pixelbitie\", name: \"Feel Bad\"}, {id: 23, day: IMAGES.SKIN0D, night: IMAGES.SKIN0N, dayHand: IMAGES.HAND_SKIN0D, nightHand: IMAGES.HAND_SKIN0N, rarity: RARITY.WOOD, author: \"Pixelbitie\", name: \"Mmmh.\"}, {id: 103, day: IMAGES.SKIN78D, night: IMAGES.SKIN78N, dayHand: IMAGES.HAND_SKIN78D, nightHand: IMAGES.HAND_SKIN78N, rarity: RARITY.WOOD, author: \"pizza wa\", name: \"Panic\"}, {id: 105, day: IMAGES.SKIN80D, night: IMAGES.SKIN80N, dayHand: IMAGES.HAND_SKIN80D, nightHand: IMAGES.HAND_SKIN80N, rarity: RARITY.WOOD, author: \"pizza wa\", name: \"Hypnotic\"}, {id: 106, day: IMAGES.SKIN81D, night: IMAGES.SKIN81N, dayHand: IMAGES.HAND_SKIN81D, nightHand: IMAGES.HAND_SKIN81N, rarity: RARITY.WOOD, author: \"pizza wa\", name: \"Stars in the eyes\"}, {id: 104, day: IMAGES.SKIN79D, night: IMAGES.SKIN79N, dayHand: IMAGES.HAND_SKIN79D, nightHand: IMAGES.HAND_SKIN79N, rarity: RARITY.STONE, author: \"pizza wa\", name: \"Scared at night\"}, {id: 20, day: IMAGES.SKIN_VAMPIRED, night: IMAGES.SKIN_VAMPIREN, dayHand: IMAGES.HAND_VAMPIRED, nightHand: IMAGES.HAND_VAMPIREN, rarity: RARITY.STONE, author: \"Starve.io\", name: \"Vampire\"}, {id: 21, day: IMAGES.SKIN_ZOMBIED, night: IMAGES.SKIN_ZOMBIEN, dayHand: IMAGES.HAND_ZOMBIED, nightHand: IMAGES.HAND_ZOMBIEN, rarity: RARITY.STONE, author: \"Starve.io\", name: \"Zombie\"}, {id: 22, day: IMAGES.SKIN_DEVASTD, night: IMAGES.SKIN_DEVASTN, dayHand: IMAGES.HAND_DEVASTD, nightHand: IMAGES.HAND_DEVASTN, rarity: RARITY.STONE, author: \"Pixelbitie\", name: \"Devaster\"}, {id: 116, day: IMAGES.SKIN91D, night: IMAGES.SKIN91N, dayHand: IMAGES.HAND_SKIN91D, nightHand: IMAGES.HAND_SKIN91N, rarity: RARITY.STONE, author: \"Fukss\", name: \"Dead Devaster\"}, {id: 27, day: IMAGES.SKIN19D, night: IMAGES.SKIN19N, dayHand: IMAGES.HAND_SKIN19D, nightHand: IMAGES.HAND_SKIN19N, rarity: RARITY.STONE, author: \"Winter\", name: \"Cactus\"}, {id: 28, day: IMAGES.SKIN20D, night: IMAGES.SKIN20N, dayHand: IMAGES.HAND_SKIN20D, nightHand: IMAGES.HAND_SKIN20N, rarity: RARITY.STONE, author: \"pizza wa\", name: \"Bee\"}, {id: 49, day: IMAGES.SKIN24D, night: IMAGES.SKIN24N, dayHand: IMAGES.HAND_SKIN24D, nightHand: IMAGES.HAND_SKIN24N, rarity: RARITY.STONE, author: \"Taco4Life\", name: \"Camo Skin\"}, {id: 58, day: IMAGES.SKIN34D, night: IMAGES.SKIN34N, dayHand: IMAGES.HAND_SKIN34D, nightHand: IMAGES.HAND_SKIN34N, rarity: RARITY.STONE, author: \"Starve.io\", name: \"Blue Limax Skin\"}, {id: 59, day: IMAGES.SKIN33D, night: IMAGES.SKIN33N, dayHand: IMAGES.HAND_SKIN33D, nightHand: IMAGES.HAND_SKIN33N, rarity: RARITY.STONE, author: \"Starve.io\", name: \"Red Limax Skin\"}, {id: 94, day: IMAGES.SKIN69D, night: IMAGES.SKIN69N, dayHand: IMAGES.HAND_SKIN69D, nightHand: IMAGES.HAND_SKIN69N, rarity: RARITY.STONE, author: \"Taco4Life\", name: \"Mr. Pumpkin\"}, {id: 109, day: IMAGES.SKIN84D, night: IMAGES.SKIN84N, dayHand: IMAGES.HAND_SKIN84D, nightHand: IMAGES.HAND_SKIN84N, rarity: RARITY.STONE, author: \"pizza wa\", name: \"Wood\"}, {id: 114, day: IMAGES.SKIN89D, night: IMAGES.SKIN89N, dayHand: IMAGES.HAND_SKIN89D, nightHand: IMAGES.HAND_SKIN89N, rarity: RARITY.STONE, author: \"pizza wa\", name: \"Zebra\"}, {id: 120, day: IMAGES.SKIN95D, night: IMAGES.SKIN95N, dayHand: IMAGES.HAND_SKIN95D, nightHand: IMAGES.HAND_SKIN95N, rarity: RARITY.STONE, author: \"CrysTal\", name: \"Tiger\"}, {id: 134, day: IMAGES.SKIN109D, night: IMAGES.SKIN109N, dayHand: IMAGES.HAND_SKIN109D, nightHand: IMAGES.HAND_SKIN109N, rarity: RARITY.STONE, author: \"Franchestcreator\", name: \"Day or Night\"}, {id: 135, day: IMAGES.SKIN110D, night: IMAGES.SKIN110N, dayHand: IMAGES.HAND_SKIN110D, nightHand: IMAGES.HAND_SKIN110N, rarity: RARITY.STONE, author: \"Poinet\", name: \"Square Starver\"}, {id: 136, day: IMAGES.SKIN111D, night: IMAGES.SKIN111N, dayHand: IMAGES.HAND_SKIN111D, nightHand: IMAGES.HAND_SKIN111N, rarity: RARITY.STONE, author: \"Starve.io\", name: \"Voodoo Doll\"}, {id: 137, day: IMAGES.SKIN112D, night: IMAGES.SKIN112N, dayHand: IMAGES.HAND_SKIN112D, nightHand: IMAGES.HAND_SKIN112N, rarity: RARITY.STONE, author: \"Starve.io\", name: \"Frankenstein\"}, {id: 138, day: IMAGES.SKIN114D, night: IMAGES.SKIN114N, dayHand: IMAGES.HAND_SKIN114D, nightHand: IMAGES.HAND_SKIN114N, rarity: RARITY.STONE, author: \"Starve.io\", name: \"Old Mummy\"}, {id: 139, day: IMAGES.SKIN115D, night: IMAGES.SKIN115N, dayHand: IMAGES.HAND_SKIN115D, nightHand: IMAGES.HAND_SKIN115N, rarity: RARITY.STONE, author: \"Starve.io\", name: \"Werewolf\"}, {id: 140, day: IMAGES.SKIN116D, night: IMAGES.SKIN116N, dayHand: IMAGES.HAND_SKIN116D, nightHand: IMAGES.HAND_SKIN116N, rarity: RARITY.STONE, author: \"Starve.io\", name: \"Old Cthulhu\"}, {id: 141, day: IMAGES.SKIN117D, night: IMAGES.SKIN117N, dayHand: IMAGES.HAND_SKIN117D, nightHand: IMAGES.HAND_SKIN117N, rarity: RARITY.STONE, author: \"Starve.io\", name: \"Sea Man\"}, {id: 142, day: IMAGES.SKIN118D, night: IMAGES.SKIN118N, dayHand: IMAGES.HAND_SKIN118D, nightHand: IMAGES.HAND_SKIN118N, rarity: RARITY.STONE, author: \"Starve.io\", name: \"Old Pumpkin\"}, {id: 148, day: IMAGES.SKIN124D, night: IMAGES.SKIN124N, dayHand: IMAGES.HAND_SKIN124D, nightHand: IMAGES.HAND_SKIN124N, rarity: RARITY.STONE, author: \"Starve.io\", name: \"Old Snowman\"}, {id: 149, day: IMAGES.SKIN125D, night: IMAGES.SKIN125N, dayHand: IMAGES.HAND_SKIN125D, nightHand: IMAGES.HAND_SKIN125N, rarity: RARITY.STONE, author: \"Starve.io\", name: \"Old Christmas Tree Man\"}, {id: 150, day: IMAGES.SKIN126D, night: IMAGES.SKIN126N, dayHand: IMAGES.HAND_SKIN126D, nightHand: IMAGES.HAND_SKIN126N, rarity: RARITY.STONE, author: \"Starve.io\", name: \"Old Mrs Bell\"}, {id: 151, day: IMAGES.SKIN127D, night: IMAGES.SKIN127N, dayHand: IMAGES.HAND_SKIN127D, nightHand: IMAGES.HAND_SKIN127N, rarity: RARITY.STONE, author: \"Starve.io\", name: \"Old Elfy\"}, {id: 152, day: IMAGES.SKIN128D, night: IMAGES.SKIN128N, dayHand: IMAGES.HAND_SKIN128D, nightHand: IMAGES.HAND_SKIN128N, rarity: RARITY.STONE, author: \"Starve.io\", name: \"Old Mr Present\"}, {id: 153, day: IMAGES.SKIN129D, night: IMAGES.SKIN129N, dayHand: IMAGES.HAND_SKIN129D, nightHand: IMAGES.HAND_SKIN129N, rarity: RARITY.STONE, author: \"Starve.io\", name: \"My Dear Old Deer\"}, {id: 154, day: IMAGES.SKIN130D, night: IMAGES.SKIN130N, dayHand: IMAGES.HAND_SKIN130D, nightHand: IMAGES.HAND_SKIN130N, rarity: RARITY.STONE, author: \"Starve.io\", name: \"Mr Angel\"}, {id: 155, day: IMAGES.SKIN131D, night: IMAGES.SKIN131N, dayHand: IMAGES.HAND_SKIN131D, nightHand: IMAGES.HAND_SKIN131N, rarity: RARITY.STONE, author: \"Starve.io\", name: \"Mr Ice Cube\"}, {id: 156, day: IMAGES.SKIN132D, night: IMAGES.SKIN132N, dayHand: IMAGES.HAND_SKIN132D, nightHand: IMAGES.HAND_SKIN132N, rarity: RARITY.STONE, author: \"Starve.io\", name: \"Mr Snowman\"}, {id: 159, day: IMAGES.SKIN135D, night: IMAGES.SKIN135N, dayHand: IMAGES.HAND_SKIN135D, nightHand: IMAGES.HAND_SKIN135N, rarity: RARITY.STONE, author: \"CrysTal\", name: \"Crystal Sky Skin\"}, {id: 167, day: IMAGES.SKIN143D, night: IMAGES.SKIN143N, dayHand: IMAGES.HAND_SKIN143D, nightHand: IMAGES.HAND_SKIN143N, rarity: RARITY.STONE, author: \"Franchestcreator\", name: \"Radioactive Starver\"}, {id: 169, day: IMAGES.SKIN146D, night: IMAGES.SKIN146N, dayHand: IMAGES.HAND_SKIN146D, nightHand: IMAGES.HAND_SKIN146N, rarity: RARITY.STONE, author: \"TheScaryBlaze\", name: \"Eaten Cookie\"}, {id: 170, day: IMAGES.SKIN147D, night: IMAGES.SKIN147N, dayHand: IMAGES.HAND_SKIN147D, nightHand: IMAGES.HAND_SKIN147N, rarity: RARITY.STONE, author: \"aloner\", name: \"Blob Thing\"}, {id: 172, day: IMAGES.SKIN149D, night: IMAGES.SKIN149N, dayHand: IMAGES.HAND_SKIN149D, nightHand: IMAGES.HAND_SKIN149N, rarity: RARITY.STONE, author: \"aloner\", name: \"Machine Mask\"}, {id: 29, day: IMAGES.SKIN2D, night: IMAGES.SKIN2N, dayHand: IMAGES.HAND_SKIN2D, nightHand: IMAGES.HAND_SKIN2N, rarity: RARITY.GOLD, author: \"Pixelbitie\", name: \"Lollipop 1\"}, {id: 30, day: IMAGES.SKIN3D, night: IMAGES.SKIN3N, dayHand: IMAGES.HAND_SKIN3D, nightHand: IMAGES.HAND_SKIN3N, rarity: RARITY.GOLD, author: \"Starve.io\", name: \"Lollipop 2\"}, {id: 31, day: IMAGES.SKIN4D, night: IMAGES.SKIN4N, dayHand: IMAGES.HAND_SKIN4D, nightHand: IMAGES.HAND_SKIN4N, rarity: RARITY.GOLD, author: \"Starve.io\", name: \"Lollipop 3\"}, {id: 32, day: IMAGES.SKIN5D, night: IMAGES.SKIN5N, dayHand: IMAGES.HAND_SKIN5D, nightHand: IMAGES.HAND_SKIN5N, rarity: RARITY.GOLD, author: \"Starve.io\", name: \"Lollipop 4\"}, {id: 33, day: IMAGES.SKIN8D, night: IMAGES.SKIN8N, dayHand: IMAGES.HAND_SKIN8D, nightHand: IMAGES.HAND_SKIN8N, rarity: RARITY.GOLD, author: \"Sushui\", name: \"Yellow Bird\"}, {id: 34, day: IMAGES.SKIN9D, night: IMAGES.SKIN9N, dayHand: IMAGES.HAND_SKIN9D, nightHand: IMAGES.HAND_SKIN9N, rarity: RARITY.GOLD, author: \"Sushui\", name: \"Red Bird\"}, {id: 35, day: IMAGES.SKIN10D, night: IMAGES.SKIN10N, dayHand: IMAGES.HAND_SKIN10D, nightHand: IMAGES.HAND_SKIN10N, rarity: RARITY.GOLD, author: \"Sushui\", name: \"Blue Bird\"}, {id: 37, day: IMAGES.SKIN17D, night: IMAGES.SKIN17N, dayHand: IMAGES.HAND_SKIN17D, nightHand: IMAGES.HAND_SKIN17N, rarity: RARITY.GOLD, author: \"Winter\", name: \"Owl\"}, {id: 52, day: IMAGES.SKIN27D, night: IMAGES.SKIN27N, dayHand: IMAGES.HAND_SKIN27D, nightHand: IMAGES.HAND_SKIN27N, rarity: RARITY.GOLD, author: \"Starve.io\", name: \"Nemo\"}, {id: 53, day: IMAGES.SKIN28D, night: IMAGES.SKIN28N, dayHand: IMAGES.HAND_SKIN28D, nightHand: IMAGES.HAND_SKIN28N, rarity: RARITY.GOLD, author: \"Starve.io\", name: \"Mr. Bread\"}, {id: 74, day: IMAGES.SKIN49D, night: IMAGES.SKIN49N, dayHand: IMAGES.HAND_SKIN49D, nightHand: IMAGES.HAND_SKIN49N, rarity: RARITY.GOLD, author: \"Communist & Taco4Life\", name: \"Mr. Bread 2\"}, {id: 75, day: IMAGES.SKIN50D, night: IMAGES.SKIN50N, dayHand: IMAGES.HAND_SKIN50D, nightHand: IMAGES.HAND_SKIN50N, rarity: RARITY.GOLD, author: \"Communist & Taco4Life\", name: \"Mr. Bread 3\"}, {id: 60, day: IMAGES.SKIN35D, night: IMAGES.SKIN35N, dayHand: IMAGES.HAND_SKIN35D, nightHand: IMAGES.HAND_SKIN35N, rarity: RARITY.GOLD, author: \"Starve.io\", name: \"Red Berry\"}, {id: 61, day: IMAGES.SKIN36D, night: IMAGES.SKIN36N, dayHand: IMAGES.HAND_SKIN36D, nightHand: IMAGES.HAND_SKIN36N, rarity: RARITY.GOLD, author: \"Starve.io\", name: \"Old Berry\"}, {id: 70, day: IMAGES.SKIN45D, night: IMAGES.SKIN45N, dayHand: IMAGES.HAND_SKIN45D, nightHand: IMAGES.HAND_SKIN45N, rarity: RARITY.GOLD, author: \"eogito\", name: \"Cake\"}, {id: 71, day: IMAGES.SKIN46D, night: IMAGES.SKIN46N, dayHand: IMAGES.HAND_SKIN46D, nightHand: IMAGES.HAND_SKIN46N, rarity: RARITY.GOLD, author: \"eogito\", name: \"Christmas Cake\"}, {id: 77, day: IMAGES.SKIN52D, night: IMAGES.SKIN52N, dayHand: IMAGES.HAND_SKIN52D, nightHand: IMAGES.HAND_SKIN52N, rarity: RARITY.GOLD, author: \"Pancakez\", name: \"Mr. Pancake\"}, {id: 87, day: IMAGES.SKIN62D, night: IMAGES.SKIN62N, dayHand: IMAGES.HAND_SKIN62D, nightHand: IMAGES.HAND_SKIN62N, rarity: RARITY.GOLD, author: \"Taco4Life\", name: \"Mr. Taco\"}, {id: 78, day: IMAGES.SKIN53D, night: IMAGES.SKIN53N, dayHand: IMAGES.HAND_SKIN53D, nightHand: IMAGES.HAND_SKIN53N, rarity: RARITY.GOLD, author: \"Taco4Life\", name: \"Mr. Bottle\"}, {id: 79, day: IMAGES.SKIN54D, night: IMAGES.SKIN54N, dayHand: IMAGES.HAND_SKIN54D, nightHand: IMAGES.HAND_SKIN54N, rarity: RARITY.GOLD, author: \"Taco4Life\", name: \"Mr. Bottle 2\"}, {id: 97, day: IMAGES.SKIN71D, night: IMAGES.SKIN71N, dayHand: IMAGES.HAND_SKIN71D, nightHand: IMAGES.HAND_SKIN71N, rarity: RARITY.GOLD, author: \"eogito\", name: \"Pink Rabbit\"}, {id: 102, day: IMAGES.SKIN77D, night: IMAGES.SKIN77N, dayHand: IMAGES.HAND_SKIN77D, nightHand: IMAGES.HAND_SKIN77N, rarity: RARITY.GOLD, author: \"pizza wa\", name: \"Marshmallow\"}, {id: 107, day: IMAGES.SKIN82D, night: IMAGES.SKIN82N, dayHand: IMAGES.HAND_SKIN82D, nightHand: IMAGES.HAND_SKIN82N, rarity: RARITY.GOLD, author: \"eogito\", name: \"Fox\"}, {id: 132, day: IMAGES.SKIN107D, night: IMAGES.SKIN107N, dayHand: IMAGES.HAND_SKIN107D, nightHand: IMAGES.HAND_SKIN107N, rarity: RARITY.GOLD, author: \"eogito\", name: \"Raccoon\"}, {id: 111, day: IMAGES.SKIN86D, night: IMAGES.SKIN86N, dayHand: IMAGES.HAND_SKIN86D, nightHand: IMAGES.HAND_SKIN86N, rarity: RARITY.GOLD, author: \"pizza wa\", name: \"Cloud\"}, {id: 113, day: IMAGES.SKIN88D, night: IMAGES.SKIN88N, dayHand: IMAGES.HAND_SKIN88D, nightHand: IMAGES.HAND_SKIN88N, rarity: RARITY.GOLD, author: \"pizza wa\", name: \"Moon\"}, {id: 117, day: IMAGES.SKIN92D, night: IMAGES.SKIN92N, dayHand: IMAGES.HAND_SKIN92D, nightHand: IMAGES.HAND_SKIN92N, rarity: RARITY.GOLD, author: \"eogito\", name: \"Mr. Panda\"}, {id: 118, day: IMAGES.SKIN93D, night: IMAGES.SKIN93N, dayHand: IMAGES.HAND_SKIN93D, nightHand: IMAGES.HAND_SKIN93N, rarity: RARITY.GOLD, author: \"eogito\", name: \"Mr. Strawberry\"}, {id: 119, day: IMAGES.SKIN94D, night: IMAGES.SKIN94N, dayHand: IMAGES.HAND_SKIN94D, nightHand: IMAGES.HAND_SKIN94N, rarity: RARITY.GOLD, author: \"eogito & Sushuui\", name: \"Mummy\"}, {id: 122, day: IMAGES.SKIN97D, night: IMAGES.SKIN97N, dayHand: IMAGES.HAND_SKIN97D, nightHand: IMAGES.HAND_SKIN97N, rarity: RARITY.GOLD, author: \"Taco4Life\", name: \"Dino\"}, {id: 127, day: IMAGES.SKIN102D, night: IMAGES.SKIN102N, dayHand: IMAGES.HAND_SKIN102D, nightHand: IMAGES.HAND_SKIN102N, rarity: RARITY.GOLD, author: \"MADBalgouthi\", name: \"Mr. Koala\"}, {id: 160, day: IMAGES.SKIN136D, night: IMAGES.SKIN136N, dayHand: IMAGES.HAND_SKIN136D, nightHand: IMAGES.HAND_SKIN136N, rarity: RARITY.GOLD, author: \"Starve.io\", name: \"Bottle Protection\"}, {id: 162, day: IMAGES.SKIN138D, night: IMAGES.SKIN138N, dayHand: IMAGES.HAND_SKIN138D, nightHand: IMAGES.HAND_SKIN138N, rarity: RARITY.GOLD, author: \"CrysTal\", name: \"Leaf Man\"}, {id: 166, day: IMAGES.SKIN142D, night: IMAGES.SKIN142N, dayHand: IMAGES.HAND_SKIN142D, nightHand: IMAGES.HAND_SKIN142N, rarity: RARITY.GOLD, author: \"pizza wa\", name: \"Bubble\"}, {id: 174, day: IMAGES.SKIN145D, night: IMAGES.SKIN145N, dayHand: IMAGES.HAND_SKIN145D, nightHand: IMAGES.HAND_SKIN145N, rarity: RARITY.GOLD, author: \"upfiz\", name: \"Potato\"}, {id: 171, day: IMAGES.SKIN148D, night: IMAGES.SKIN148N, dayHand: IMAGES.HAND_SKIN148D, nightHand: IMAGES.HAND_SKIN148N, rarity: RARITY.GOLD, author: \"aloner\", name: \"Axolotl\"}, {id: 25, day: IMAGES.SKIN6D, night: IMAGES.SKIN6N, dayHand: IMAGES.HAND_SKIN6D, nightHand: IMAGES.HAND_SKIN0N, rarity: RARITY.DIAMOND, author: \"Pixelbitie\", name: \"Test Dummy\"}, {id: 41, day: IMAGES.SKIN_STARD, night: IMAGES.SKIN_STARN, dayHand: IMAGES.HAND_STARD, nightHand: IMAGES.HAND_STARN, rarity: RARITY.DIAMOND, author: \"pizza wa\", name: \"Star-ver\"}, {id: 43, day: IMAGES.SKIN11D, night: IMAGES.SKIN11N, dayHand: IMAGES.HAND_SKIN11D, nightHand: IMAGES.HAND_SKIN11N, rarity: RARITY.DIAMOND, author: \"Communist\", name: \"Starver Chest\"}, {id: 88, day: IMAGES.SKIN63D, night: IMAGES.SKIN63N, dayHand: IMAGES.HAND_SKIN63D, nightHand: IMAGES.HAND_SKIN63N, rarity: RARITY.DIAMOND, author: \"Communist\", name: \"Starver Workbench\"}, {id: 121, day: IMAGES.SKIN96D, night: IMAGES.SKIN96N, dayHand: IMAGES.HAND_SKIN96D, nightHand: IMAGES.HAND_SKIN96N, rarity: RARITY.DIAMOND, author: \"MADBalgouthi\", name: \"Fish\"}, {id: 39, day: IMAGES.SKIN22D, night: IMAGES.SKIN22N, dayHand: IMAGES.HAND_SKIN22D, nightHand: IMAGES.HAND_SKIN22N, rarity: RARITY.DIAMOND, author: \"Negligent4Dia\", name: \"Crab\"}, {id: 40, day: IMAGES.SKIN23D, night: IMAGES.SKIN23N, dayHand: IMAGES.HAND_SKIN23D, nightHand: IMAGES.HAND_SKIN23N, rarity: RARITY.DIAMOND, author: \"Negligent4Dia\", name: \"Piranha\"}, {id: 36, day: IMAGES.SKIN16D, night: IMAGES.SKIN16N, dayHand: IMAGES.HAND_SKIN16D, nightHand: IMAGES.HAND_SKIN16N, rarity: RARITY.DIAMOND, author: \"eogito\", name: \"Winter Fox\"}, {id: 69, day: IMAGES.SKIN44D, night: IMAGES.SKIN44N, dayHand: IMAGES.HAND_SKIN44D, nightHand: IMAGES.HAND_SKIN44N, rarity: RARITY.DIAMOND, author: \"Zed\", name: \"Baby Foxy\"}, {id: 51, day: IMAGES.SKIN26D, night: IMAGES.SKIN26N, dayHand: IMAGES.HAND_SKIN26D, nightHand: IMAGES.HAND_SKIN26N, rarity: RARITY.DIAMOND, author: \"HOWI\", name: \"Winter Bear\"}, {id: 133, day: IMAGES.SKIN108D, night: IMAGES.SKIN108N, dayHand: IMAGES.HAND_SKIN108D, nightHand: IMAGES.HAND_SKIN108N, rarity: RARITY.DIAMOND, author: \"eogito\", name: \"Hawk\"}, {id: 55, day: IMAGES.SKIN30D, night: IMAGES.SKIN30N, dayHand: IMAGES.HAND_SKIN30D, nightHand: IMAGES.HAND_SKIN30N, rarity: RARITY.DIAMOND, author: \"Starve.io\", name: \"Nice Little Yuki\"}, {id: 68, day: IMAGES.SKIN43D, night: IMAGES.SKIN43N, dayHand: IMAGES.HAND_SKIN43D, nightHand: IMAGES.HAND_SKIN43N, rarity: RARITY.DIAMOND, author: \"Taco4Life\", name: \"Baby Yuki\"}, {id: 62, day: IMAGES.SKIN37D, night: IMAGES.SKIN37N, dayHand: IMAGES.HAND_SKIN37D, nightHand: IMAGES.HAND_SKIN37N, rarity: RARITY.DIAMOND, author: \"Starve.io\", name: \"Mr. Carrot\"}, {id: 56, day: IMAGES.SKIN31D, night: IMAGES.SKIN31N, dayHand: IMAGES.HAND_SKIN31D, nightHand: IMAGES.HAND_SKIN31N, rarity: RARITY.DIAMOND, author: \"Starve.io\", name: \"Bat Limax\"}, {id: 72, day: IMAGES.SKIN47D, night: IMAGES.SKIN47N, dayHand: IMAGES.HAND_SKIN47D, nightHand: IMAGES.HAND_SKIN47N, rarity: RARITY.DIAMOND, author: \"eogito\", name: \"Mr. Crate\"}, {id: 73, day: IMAGES.SKIN48D, night: IMAGES.SKIN48N, dayHand: IMAGES.HAND_SKIN48D, nightHand: IMAGES.HAND_SKIN48N, rarity: RARITY.DIAMOND, author: \"Taco4Life & eogito\", name: \"Mr. Spider\"}, {id: 93, day: IMAGES.SKIN68D, night: IMAGES.SKIN68N, dayHand: IMAGES.HAND_SKIN68D, nightHand: IMAGES.HAND_SKIN68N, rarity: RARITY.DIAMOND, author: \"Anyone want to play?\", name: \"Mr. Spider 2\"}, {id: 82, day: IMAGES.SKIN57D, night: IMAGES.SKIN57N, dayHand: IMAGES.HAND_SKIN57D, nightHand: IMAGES.HAND_SKIN57N, rarity: RARITY.DIAMOND, author: \"Starve.io\", name: \"Mr. Blue Starfish\"}, {id: 83, day: IMAGES.SKIN58D, night: IMAGES.SKIN58N, dayHand: IMAGES.HAND_SKIN58D, nightHand: IMAGES.HAND_SKIN58N, rarity: RARITY.DIAMOND, author: \"Starve.io\", name: \"Mr. Orange Starfish\"}, {id: 84, day: IMAGES.SKIN59D, night: IMAGES.SKIN59N, dayHand: IMAGES.HAND_SKIN59D, nightHand: IMAGES.HAND_SKIN59N, rarity: RARITY.DIAMOND, author: \"Starve.io\", name: \"Mr. Pink Starfish\"}, {id: 85, day: IMAGES.SKIN60D, night: IMAGES.SKIN60N, dayHand: IMAGES.HAND_SKIN60D, nightHand: IMAGES.HAND_SKIN60N, rarity: RARITY.DIAMOND, author: \"Starve.io\", name: \"Mr. ShellMauve\"}, {id: 86, day: IMAGES.SKIN61D, night: IMAGES.SKIN61N, dayHand: IMAGES.HAND_SKIN61D, nightHand: IMAGES.HAND_SKIN61N, rarity: RARITY.DIAMOND, author: \"Starve.io\", name: \"Mr. Shell Bead\"}, {id: 96, day: IMAGES.SKIN72D, night: IMAGES.SKIN72N, dayHand: IMAGES.HAND_SKIN72D, nightHand: IMAGES.HAND_SKIN72N, rarity: RARITY.DIAMOND, author: \"Fukss\", name: \"Angry Crab\"}, {id: 98, day: IMAGES.SKIN73D, night: IMAGES.SKIN73N, dayHand: IMAGES.HAND_SKIN73D, nightHand: IMAGES.HAND_SKIN73N, rarity: RARITY.DIAMOND, author: \"Starve.io\", name: \"Penguin\"}, {id: 126, day: IMAGES.SKIN101D, night: IMAGES.SKIN101N, dayHand: IMAGES.HAND_SKIN101D, nightHand: IMAGES.HAND_SKIN101N, rarity: RARITY.DIAMOND, author: \"Anyone want to play?\", name: \"Mr. Boar\"}, {id: 145, day: IMAGES.SKIN121D, night: IMAGES.SKIN121N, dayHand: IMAGES.HAND_SKIN121D, nightHand: IMAGES.HAND_SKIN121N, rarity: RARITY.DIAMOND, author: \"Starve.io\", name: \"I saw you\"}, {id: 146, day: IMAGES.SKIN122D, night: IMAGES.SKIN122N, dayHand: IMAGES.HAND_SKIN122D, nightHand: IMAGES.HAND_SKIN122N, rarity: RARITY.DIAMOND, author: \"Starve.io\", name: \"It was funny\"}, {id: 147, day: IMAGES.SKIN123D, night: IMAGES.SKIN123N, dayHand: IMAGES.HAND_SKIN123D, nightHand: IMAGES.HAND_SKIN123N, rarity: RARITY.DIAMOND, author: \"Starve.io\", name: \"You can scream\"}, {id: 158, day: IMAGES.SKIN134D, night: IMAGES.SKIN134N, dayHand: IMAGES.HAND_SKIN134D, nightHand: IMAGES.HAND_SKIN134N, rarity: RARITY.DIAMOND, author: \"eogito\", name: \"Mr. Book\"}, {id: 163, day: IMAGES.SKIN139D, night: IMAGES.SKIN139N, dayHand: IMAGES.HAND_SKIN139D, nightHand: IMAGES.HAND_SKIN139N, rarity: RARITY.DIAMOND, author: \"Anyone want to play?\", name: \"Mr. Mammoth\"}, {id: 164, day: IMAGES.SKIN140D, night: IMAGES.SKIN140N, dayHand: IMAGES.HAND_SKIN140D, nightHand: IMAGES.HAND_SKIN140N, rarity: RARITY.DIAMOND, author: \"SoOw\", name: \"Mr. Mammoth 2\"}, {id: 161, day: IMAGES.SKIN137D, night: IMAGES.SKIN137N, dayHand: IMAGES.HAND_SKIN137D, nightHand: IMAGES.HAND_SKIN137N, rarity: RARITY.DIAMOND, author: \"eogito\", name: \"Nightmare\"}, {id: 168, day: IMAGES.SKIN144D, night: IMAGES.SKIN144N, dayHand: IMAGES.HAND_SKIN144D, nightHand: IMAGES.HAND_SKIN144N, rarity: RARITY.DIAMOND, author: \"pizza wa\", name: \"Shiny Crystal\"}, {id: 173, day: IMAGES.SKIN150D, night: IMAGES.SKIN150N, dayHand: IMAGES.HAND_SKIN150D, nightHand: IMAGES.HAND_SKIN150N, rarity: RARITY.DIAMOND, author: \"pizza wa\", name: \"Water skin\"}, {id: 42, day: IMAGES.SKIN14D, night: IMAGES.SKIN14N, dayHand: IMAGES.HAND_SKIN14D, nightHand: IMAGES.HAND_SKIN14N, rarity: RARITY.AMETHYST, author: \"Winter\", name: \"Will-O'-The-Wisp\"}, {id: 91, day: IMAGES.SKIN66D, night: IMAGES.SKIN66N, dayHand: IMAGES.HAND_SKIN66D, nightHand: IMAGES.HAND_SKIN66N, rarity: RARITY.AMETHYST, author: \"ExpertyAnimations\", name: \"Flame\"}, {id: 26, day: IMAGES.SKIN15D, night: IMAGES.SKIN15N, dayHand: IMAGES.HAND_SKIN15D, nightHand: IMAGES.HAND_SKIN15N, rarity: RARITY.AMETHYST, author: \"Starve.io\", name: \"Be a Tree\"}, {id: 38, day: IMAGES.SKIN18D, night: IMAGES.SKIN18N, dayHand: IMAGES.HAND_SKIN18D, nightHand: IMAGES.HAND_SKIN18N, rarity: RARITY.AMETHYST, author: \"Winter\", name: \"Toxic Mutant\"}, {id: 50, day: IMAGES.SKIN25D, night: IMAGES.SKIN25N, dayHand: IMAGES.HAND_SKIN25D, nightHand: IMAGES.HAND_SKIN25N, rarity: RARITY.AMETHYST, author: \"Communist\", name: \"Mr. Tomato\"}, {id: 54, day: IMAGES.SKIN29D, night: IMAGES.SKIN29N, dayHand: IMAGES.HAND_SKIN29D, nightHand: IMAGES.HAND_SKIN29N, rarity: RARITY.AMETHYST, author: \"Starve.io\", name: \"Mr. Mauve, the Lapa\"}, {id: 57, day: IMAGES.SKIN32D, night: IMAGES.SKIN32N, dayHand: IMAGES.HAND_SKIN32D, nightHand: IMAGES.HAND_SKIN32N, rarity: RARITY.AMETHYST, author: \"Starve.io\", name: \"Golden Fish\"}, {id: 64, day: IMAGES.SKIN39D, night: IMAGES.SKIN39N, dayHand: IMAGES.HAND_SKIN39D, nightHand: IMAGES.HAND_SKIN39N, rarity: RARITY.AMETHYST, author: \"Starve.io\", name: \"LapaMauve\"}, {id: 65, day: IMAGES.SKIN40D, night: IMAGES.SKIN40N, dayHand: IMAGES.HAND_SKIN40D, nightHand: IMAGES.HAND_SKIN40N, rarity: RARITY.AMETHYST, author: \"Starve.io\", name: \"LapaMauve \"}, {id: 92, day: IMAGES.SKIN67D, night: IMAGES.SKIN67N, dayHand: IMAGES.HAND_SKIN67D, nightHand: IMAGES.HAND_SKIN67N, rarity: RARITY.AMETHYST, author: \"Starve.io\", name: \"Mr. Burger\"}, {id: 66, day: IMAGES.SKIN41D, night: IMAGES.SKIN41N, dayHand: IMAGES.HAND_SKIN41D, nightHand: IMAGES.HAND_SKIN41N, rarity: RARITY.AMETHYST, author: \"pizza wa\", name: \"Tropical Starver\"}, {id: 80, day: IMAGES.SKIN55D, night: IMAGES.SKIN55N, dayHand: IMAGES.HAND_SKIN55D, nightHand: IMAGES.HAND_SKIN55N, rarity: RARITY.AMETHYST, author: \"Starve.io\", name: \"Mr. ShellPink\"}, {id: 81, day: IMAGES.SKIN56D, night: IMAGES.SKIN56N, dayHand: IMAGES.HAND_SKIN56D, nightHand: IMAGES.HAND_SKIN56N, rarity: RARITY.AMETHYST, author: \"Starve.io\", name: \"Mr. OranShell\"}, {id: 99, day: IMAGES.SKIN74D, night: IMAGES.SKIN74N, dayHand: IMAGES.HAND_SKIN74D, nightHand: IMAGES.HAND_SKIN74N, rarity: RARITY.AMETHYST, author: \"eogito\", name: \"Pepe\"}, {id: 100, day: IMAGES.SKIN75D, night: IMAGES.SKIN75N, dayHand: IMAGES.HAND_SKIN75D, nightHand: IMAGES.HAND_SKIN75N, rarity: RARITY.AMETHYST, author: \"fatant\", name: \"Mr. Ant\"}, {id: 115, day: IMAGES.SKIN90D, night: IMAGES.SKIN90N, dayHand: IMAGES.HAND_SKIN90D, nightHand: IMAGES.HAND_SKIN90N, rarity: RARITY.AMETHYST, author: \"MADBalgouthi\", name: \"Mr. Watermelon\"}, {id: 101, day: IMAGES.SKIN76D, night: IMAGES.SKIN76N, dayHand: IMAGES.HAND_SKIN76D, nightHand: IMAGES.HAND_SKIN76N, rarity: RARITY.AMETHYST, author: \"Taco4Life\", name: \"Mr. Thornbush\"}, {id: 131, day: IMAGES.SKIN106D, night: IMAGES.SKIN106N, dayHand: IMAGES.HAND_SKIN106D, nightHand: IMAGES.HAND_SKIN106N, rarity: RARITY.AMETHYST, author: \"Taco4Life\", name: \"Cthulhu\"}, {id: 143, day: IMAGES.SKIN119D, night: IMAGES.SKIN119N, dayHand: IMAGES.HAND_SKIN119D, nightHand: IMAGES.HAND_SKIN119N, rarity: RARITY.AMETHYST, author: \"eogito\", name: \"Mr. Cactus\"}, {id: 144, day: IMAGES.SKIN120D, night: IMAGES.SKIN120N, dayHand: IMAGES.HAND_SKIN120D, nightHand: IMAGES.HAND_SKIN120N, rarity: RARITY.AMETHYST, author: \"Starve.io\", name: \"Momo\"}, {id: 95, day: IMAGES.SKIN70D, night: IMAGES.SKIN70N, dayHand: IMAGES.HAND_SKIN70D, nightHand: IMAGES.HAND_SKIN70N, rarity: RARITY.REIDITE, author: \"Taco4Life\", name: \"Mr. Garlic\"}, {id: 76, day: IMAGES.SKIN51D, night: IMAGES.SKIN51N, dayHand: IMAGES.HAND_SKIN51D, nightHand: IMAGES.HAND_SKIN51N, rarity: RARITY.REIDITE, author: \"Winter\", name: \"Robot Dragon\"}, {id: 44, day: IMAGES.SKIN1D, night: IMAGES.SKIN1N, dayHand: IMAGES.HAND_SKIN1D, nightHand: IMAGES.HAND_SKIN1N, rarity: RARITY.REIDITE, author: \"Winter\", name: \"Lava Dragon Version 1\"}, {id: 90, day: IMAGES.SKIN65D, night: IMAGES.SKIN65N, dayHand: IMAGES.HAND_SKIN65D, nightHand: IMAGES.HAND_SKIN65N, rarity: RARITY.REIDITE, author: \"ExpertyAnimations\", name: \"Lava Dragon Version 2\"}, {id: 124, day: IMAGES.SKIN99D, night: IMAGES.SKIN99N, dayHand: IMAGES.HAND_SKIN99D, nightHand: IMAGES.HAND_SKIN99N, rarity: RARITY.REIDITE, author: \"eogito\", name: \"Lava Dragon Version 3\"}, {id: 45, day: IMAGES.SKIN12D, night: IMAGES.SKIN12N, dayHand: IMAGES.HAND_SKIN12D, nightHand: IMAGES.HAND_SKIN12N, rarity: RARITY.REIDITE, author: \"Sushui\", name: \"Ice Dragon Version 1\"}, {id: 46, day: IMAGES.SKIN13D, night: IMAGES.SKIN13N, dayHand: IMAGES.HAND_SKIN13D, nightHand: IMAGES.HAND_SKIN13N, rarity: RARITY.REIDITE, author: \"Winter\", name: \"Ice Dragon Version 2\"}, {id: 108, day: IMAGES.SKIN83D, night: IMAGES.SKIN83N, dayHand: IMAGES.HAND_SKIN83D, nightHand: IMAGES.HAND_SKIN83N, rarity: RARITY.REIDITE, author: \"eogito\", name: \"Ice Dragon Version 3\"}, {id: 123, day: IMAGES.SKIN98D, night: IMAGES.SKIN98N, dayHand: IMAGES.HAND_SKIN98D, nightHand: IMAGES.HAND_SKIN98N, rarity: RARITY.REIDITE, author: \"eogito\", name: \"Baby Dragon Version 1\"}, {id: 128, day: IMAGES.SKIN103D, night: IMAGES.SKIN103N, dayHand: IMAGES.HAND_SKIN103D, nightHand: IMAGES.HAND_SKIN103N, rarity: RARITY.REIDITE, author: \"MADBalgouthi\", name: \"Baby Dragon Version 2\"}, {id: 125, day: IMAGES.SKIN100D, night: IMAGES.SKIN100N, dayHand: IMAGES.HAND_SKIN100D, nightHand: IMAGES.HAND_SKIN100N, rarity: RARITY.REIDITE, author: \"eogito\", name: \"Baby Lava\"}, {id: 47, day: IMAGES.SKIN21D, night: IMAGES.SKIN21N, dayHand: IMAGES.HAND_SKIN21D, nightHand: IMAGES.HAND_SKIN21N, rarity: RARITY.REIDITE, author: \"Taco4Life\", name: \"Kraken\"}, {id: 129, day: IMAGES.SKIN104D, night: IMAGES.SKIN104N, dayHand: IMAGES.HAND_SKIN104D, nightHand: IMAGES.HAND_SKIN104N, rarity: RARITY.REIDITE, author: \"Taco4Life\", name: \"Sandworm\"}, {id: 63, day: IMAGES.SKIN38D, night: IMAGES.SKIN38N, dayHand: IMAGES.HAND_SKIN38D, nightHand: IMAGES.HAND_SKIN38N, rarity: RARITY.REIDITE, author: \"Starve.io\", name: \"Mr. Golden Bread\"}, {id: 67, day: IMAGES.SKIN42D, night: IMAGES.SKIN42N, dayHand: IMAGES.HAND_SKIN42D, nightHand: IMAGES.HAND_SKIN42N, rarity: RARITY.REIDITE, author: \"ForgottenHeroe\", name: \"Starver Ores\"}, {id: 130, day: IMAGES.SKIN105D, night: IMAGES.SKIN105N, dayHand: IMAGES.HAND_SKIN105D, nightHand: IMAGES.HAND_SKIN105N, rarity: RARITY.REIDITE, author: \"Taco4Life\", name: \"Poo\"}, {id: 89, day: IMAGES.SKIN64D, night: IMAGES.SKIN64N, dayHand: IMAGES.HAND_SKIN64D, nightHand: IMAGES.HAND_SKIN64N, rarity: RARITY.REIDITE, author: \"Poinet\", name: \"Volcano Starver\"}, {id: 112, day: IMAGES.SKIN87D, night: IMAGES.SKIN87N, dayHand: IMAGES.HAND_SKIN87D, nightHand: IMAGES.HAND_SKIN87N, rarity: RARITY.REIDITE, author: \"eogito\", name: \"Lava Starver\"}, {id: 48, day: IMAGES.SKIN_ROBOTD, night: IMAGES.SKIN_ROBOTN, dayHand: IMAGES.HAND_ROBOTD, nightHand: IMAGES.HAND_ROBOTN, rarity: RARITY.SPECIAL, author: \"eogito\", name: \"Robot\"}, {id: 110, day: IMAGES.SKIN85D, night: IMAGES.SKIN85N, dayHand: IMAGES.HAND_SKIN85D, nightHand: IMAGES.HAND_SKIN85N, rarity: RARITY.SPECIAL, author: \"pizza wa\", name: \"Blue Butterfly\"}, {id: 157, day: IMAGES.SKIN133D, night: IMAGES.SKIN133N, dayHand: IMAGES.HAND_SKIN133D, nightHand: IMAGES.HAND_SKIN133N, rarity: RARITY.SPECIAL, author: \"eogito\", name: \"Yrifox\"}, {id: 165, day: IMAGES.SKIN141D, night: IMAGES.SKIN141N, dayHand: IMAGES.HAND_SKIN141D, nightHand: IMAGES.HAND_SKIN141N, rarity: RARITY.SPECIAL, author: \"OmarJr13\", name: \"Blob Skin\"}], BAG: [{id: 0, day: IMAGES.BAGD, night: IMAGES.BAGN, rarity: RARITY.FREE, author: \"Starve.io\", name: \"Bag 1\"}, {id: 1, day: IMAGES.BAG0D, night: IMAGES.BAG0N, rarity: RARITY.FREE, author: \"Starve.io\", name: \"Old Bag\"}, {id: 2, day: IMAGES.BAG4D, night: IMAGES.BAG4N, rarity: RARITY.WOOD, author: \"Starve.io\", name: \"Bag 2\"}, {id: 3, day: IMAGES.BAG5D, night: IMAGES.BAG5N, rarity: RARITY.WOOD, author: \"Starve.io\", name: \"Bag 3\"}, {id: 4, day: IMAGES.BAG6D, night: IMAGES.BAG6N, rarity: RARITY.WOOD, author: \"Starve.io\", name: \"Bag 4\"}, {id: 5, day: IMAGES.BAG7D, night: IMAGES.BAG7N, rarity: RARITY.WOOD, author: \"Starve.io\", name: \"Bag 5\"}, {id: 11, day: IMAGES.BAG23D, night: IMAGES.BAG23N, rarity: RARITY.WOOD, author: \"eogito\", name: \"Wood Pickaxe Bag\"}, {id: 19, day: IMAGES.BAG16D, night: IMAGES.BAG16N, rarity: RARITY.WOOD, author: \"Starve.io \", name: \"Wood Carrier\"}, {id: 37, day: IMAGES.BAG36D, night: IMAGES.BAG36N, rarity: RARITY.WOOD, author: \"eogito\", name: \"Bag 6\"}, {id: 39, day: IMAGES.BAG38D, night: IMAGES.BAG38N, rarity: RARITY.WOOD, author: \"eogito\", name: \"Bag with Wooden Swords\"}, {id: 44, day: IMAGES.BAG43D, night: IMAGES.BAG43N, rarity: RARITY.WOOD, author: \"Communist\", name: \"Big Bag\"}, {id: 7, day: IMAGES.BAG14D, night: IMAGES.BAG14N, rarity: RARITY.STONE, author: \"Communist\", name: \"Bag 6\"}, {id: 8, day: IMAGES.BAG_EASTERD, night: IMAGES.BAG_EASTERN, rarity: RARITY.STONE, author: \"Starve.io\", name: \"Easter Bag\"}, {id: 9, day: IMAGES.BAG_STARD, night: IMAGES.BAG_STARN, rarity: RARITY.STONE, author: \"pizza wa\", name: \"Star Bag\"}, {id: 10, day: IMAGES.BAG9D, night: IMAGES.BAG9N, rarity: RARITY.STONE, author: \"eogito\", name: \"Winter Bag\"}, {id: 20, day: IMAGES.BAG17D, night: IMAGES.BAG17N, rarity: RARITY.STONE, author: \"Starve.io \", name: \"Stone Carrier\"}, {id: 24, day: IMAGES.BAG24D, night: IMAGES.BAG24N, rarity: RARITY.STONE, author: \"eogito\", name: \"Stone Pickaxe Bag\"}, {id: 6, day: IMAGES.BAG13D, night: IMAGES.BAG13N, rarity: RARITY.STONE, author: \"Communist\", name: \"Bag Camouflage\"}, {id: 38, day: IMAGES.BAG37D, night: IMAGES.BAG37N, rarity: RARITY.STONE, author: \"eogito\", name: \"Bag with Stone Swords\"}, {id: 54, day: IMAGES.BAG53D, night: IMAGES.BAG53N, rarity: RARITY.STONE, author: \"eogito\", name: \"Cow Bag\"}, {id: 59, day: IMAGES.BAG58D, night: IMAGES.BAG58N, rarity: RARITY.STONE, author: \"CrysTal\", name: \"Starver Bag\"}, {id: 62, day: IMAGES.BAG61D, night: IMAGES.BAG61N, rarity: RARITY.STONE, author: \"CrysTal\", name: \"Crystal Sky Bag\"}, {id: 13, day: IMAGES.BAG10D, night: IMAGES.BAG10N, rarity: RARITY.GOLD, author: \"pizza wa\", name: \"Honey Pot\"}, {id: 21, day: IMAGES.BAG18D, night: IMAGES.BAG18N, rarity: RARITY.GOLD, author: \"Starve.io \", name: \"Gold Carrier\"}, {id: 30, day: IMAGES.BAG25D, night: IMAGES.BAG25N, rarity: RARITY.GOLD, author: \"eogito\", name: \"Gold Pickaxe Bag\"}, {id: 29, day: IMAGES.BAG31D, night: IMAGES.BAG31N, rarity: RARITY.GOLD, author: \"Ariel\", name: \"Mr and Mrs Bakers\"}, {id: 41, day: IMAGES.BAG40D, night: IMAGES.BAG40N, rarity: RARITY.GOLD, author: \"eogito\", name: \"Bag with Golden Swords\"}, {id: 47, day: IMAGES.BAG46D, night: IMAGES.BAG46N, rarity: RARITY.GOLD, author: \"eogito\", name: \"Explorer Bag\"}, {id: 51, day: IMAGES.BAG50D, night: IMAGES.BAG50N, rarity: RARITY.GOLD, author: \"pizza wa\", name: \"Bamboo Bag\"}, {id: 53, day: IMAGES.BAG52D, night: IMAGES.BAG52N, rarity: RARITY.GOLD, author: \"eogito\", name: \"Mummy Bag\"}, {id: 58, day: IMAGES.BAG57D, night: IMAGES.BAG57N, rarity: RARITY.GOLD, author: \"MADBalgouthi\", name: \"Watermelon Bag\"}, {id: 60, day: IMAGES.BAG59D, night: IMAGES.BAG60N, rarity: RARITY.GOLD, author: \"Taco4Life\", name: \"Garlic Bag\"}, {id: 61, day: IMAGES.BAG60D, night: IMAGES.BAG59N, rarity: RARITY.GOLD, author: \"Taco4Life\", name: \"Pumpkin Bag\"}, {id: 64, day: IMAGES.BAG63D, night: IMAGES.BAG63N, rarity: RARITY.GOLD, author: \"upfiz\", name: \"Oil Barel bag\"}, {id: 67, day: IMAGES.BAG68D, night: IMAGES.BAG68N, rarity: RARITY.GOLD, author: \"pizza wa\", name: \"Tree Bag\"}, {id: 14, day: IMAGES.BAG1D, night: IMAGES.BAG1N, rarity: RARITY.DIAMOND, author: \"Starve.io\", name: \"a Rabbit in my Bag\"}, {id: 15, day: IMAGES.BAG2D, night: IMAGES.BAG2N, rarity: RARITY.DIAMOND, author: \"Starve.io\", name: \"Bird's nest\"}, {id: 16, day: IMAGES.BAG3D, night: IMAGES.BAG3N, rarity: RARITY.DIAMOND, author: \"Starve.io\", name: \"a Fish on your Back\"}, {id: 17, day: IMAGES.BAG8D, night: IMAGES.BAG8N, rarity: RARITY.DIAMOND, author: \"Starve.io\", name: \"a Squirrel in my Bag\"}, {id: 22, day: IMAGES.BAG19D, night: IMAGES.BAG19N, rarity: RARITY.DIAMOND, author: \"Starve.io \", name: \"Diamond Carrier\"}, {id: 12, day: IMAGES.BAG22D, night: IMAGES.BAG22N, rarity: RARITY.DIAMOND, author: \"eogito\", name: \"Resources Bag\"}, {id: 32, day: IMAGES.BAG26D, night: IMAGES.BAG26N, rarity: RARITY.DIAMOND, author: \"eogito\", name: \"Diamond Pickaxe Bag\"}, {id: 40, day: IMAGES.BAG39D, night: IMAGES.BAG39N, rarity: RARITY.DIAMOND, author: \"eogito\", name: \"Bag with Diamond Swords\"}, {id: 45, day: IMAGES.BAG44D, night: IMAGES.BAG44N, rarity: RARITY.DIAMOND, author: \"eogito\", name: \"My Cake Bag\"}, {id: 46, day: IMAGES.BAG45D, night: IMAGES.BAG45N, rarity: RARITY.DIAMOND, author: \"eogito\", name: \"My Christmas Cake Bag\"}, {id: 52, day: IMAGES.BAG51D, night: IMAGES.BAG51N, rarity: RARITY.DIAMOND, author: \"MADBalgouthi\", name: \"Fish Bag\"}, {id: 65, day: IMAGES.BAG64D, night: IMAGES.BAG64N, rarity: RARITY.DIAMOND, author: \"pizza wa\", name: \"Cloud Bag\"}, {id: 68, day: IMAGES.BAG66D, night: IMAGES.BAG66N, rarity: RARITY.DIAMOND, author: \"pizza wa\", name: \"Bee Bag\"}, {id: 48, day: IMAGES.BAG47D, night: IMAGES.BAG47N, rarity: RARITY.AMETHYST, author: \"fatant\", name: \"Natural Bag\"}, {id: 23, day: IMAGES.BAG20D, night: IMAGES.BAG20N, rarity: RARITY.AMETHYST, author: \"Starve.io \", name: \"Amethyst Carrier\"}, {id: 25, day: IMAGES.BAG27D, night: IMAGES.BAG27N, rarity: RARITY.AMETHYST, author: \"eogito\", name: \"Amethyst Pickaxe Bag\"}, {id: 28, day: IMAGES.BAG30D, night: IMAGES.BAG30N, rarity: RARITY.AMETHYST, author: \"Starve.io\", name: \"Your Baby\"}, {id: 33, day: IMAGES.BAG32D, night: IMAGES.BAG32N, rarity: RARITY.AMETHYST, author: \"pizza wa\", name: \"Tropical Bag\"}, {id: 43, day: IMAGES.BAG42D, night: IMAGES.BAG42N, rarity: RARITY.AMETHYST, author: \"eogito\", name: \"Bag with Amethyst Swords\"}, {id: 35, day: IMAGES.BAG34D, night: IMAGES.BAG34N, rarity: RARITY.AMETHYST, author: \"eogito\", name: \"Ice Bag\"}, {id: 50, day: IMAGES.BAG49D, night: IMAGES.BAG49N, rarity: RARITY.AMETHYST, author: \"Taco4Life\", name: \"Thornbush Bag\"}, {id: 56, day: IMAGES.BAG55D, night: IMAGES.BAG55N, rarity: RARITY.AMETHYST, author: \"eogito\", name: \"Autumn Bag\"}, {id: 57, day: IMAGES.BAG56D, night: IMAGES.BAG56N, rarity: RARITY.AMETHYST, author: \"Taco4Life\", name: \"Dino Egg Bag\"}, {id: 66, day: IMAGES.BAG65D, night: IMAGES.BAG65N, rarity: RARITY.AMETHYST, author: \"pizza wa\", name: \"Magic Cloud Bag\"}, {id: 69, day: IMAGES.BAG67D, night: IMAGES.BAG67N, rarity: RARITY.AMETHYST, author: \"pizza wa\", name: \"Chest Bag\"}, {id: 31, day: IMAGES.BAG21D, night: IMAGES.BAG21N, rarity: RARITY.REIDITE, author: \"Starve.io \", name: \"Reidite Carrier\"}, {id: 18, day: IMAGES.BAG11D, night: IMAGES.BAG11N, rarity: RARITY.REIDITE, author: \"Winter\", name: \"Lava Bag\"}, {id: 49, day: IMAGES.BAG48D, night: IMAGES.BAG48N, rarity: RARITY.REIDITE, author: \"eogito\", name: \"Lava Bag 2\"}, {id: 36, day: IMAGES.BAG35D, night: IMAGES.BAG35N, rarity: RARITY.REIDITE, author: \"eogito\", name: \"Dragon Bag\"}, {id: 55, day: IMAGES.BAG54D, night: IMAGES.BAG54N, rarity: RARITY.REIDITE, author: \"eogito\", name: \"Winter Ice Bag\"}, {id: 26, day: IMAGES.BAG28D, night: IMAGES.BAG28N, rarity: RARITY.REIDITE, author: \"eogito\", name: \"Reidite Pickaxe Bag\"}, {id: 27, day: IMAGES.BAG29D, night: IMAGES.BAG29N, rarity: RARITY.REIDITE, author: \"Starve.io\", name: \"Octopus Bowl\"}, {id: 34, day: IMAGES.BAG33D, night: IMAGES.BAG33N, rarity: RARITY.REIDITE, author: \"Taco4Life\", name: \"Cave Bag\"}, {id: 42, day: IMAGES.BAG41D, night: IMAGES.BAG41N, rarity: RARITY.REIDITE, author: \"eogito\", name: \"Bag with Reidite Swords\"}, {id: 63, day: IMAGES.BAG62D, night: IMAGES.BAG62N, rarity: RARITY.REIDITE, author: \"eogito\", name: \"Engineer Bag\"}], CRATE: [{id: 0, day: IMAGES.CRATE7D, night: IMAGES.CRATE7N, rarity: RARITY.FREE, author: \"eogito\", name: \"Wooden Dead Box\"}, {id: 1, day: IMAGES.CRATE6D, night: IMAGES.CRATE6N, rarity: RARITY.FREE, author: \"eogito\", name: \"Hidden item\"}, {id: 2, day: IMAGES.CRATE1D, night: IMAGES.CRATE1N, rarity: RARITY.WOOD, author: \"eogito\", name: \"Wooden Box 1\"}, {id: 3, day: IMAGES.CRATE2D, night: IMAGES.CRATE2N, rarity: RARITY.WOOD, author: \"eogito\", name: \"Wooden Box 2\"}, {id: 4, day: IMAGES.CRATE3D, night: IMAGES.CRATE3N, rarity: RARITY.WOOD, author: \"eogito\", name: \"Wooden Box 3\"}, {id: 5, day: IMAGES.CRATE4D, night: IMAGES.CRATE4N, rarity: RARITY.WOOD, author: \"eogito\", name: \"Broken Wooden Box\"}, {id: 6, day: IMAGES.CRATE5D, night: IMAGES.CRATE5N, rarity: RARITY.WOOD, author: \"eogito\", name: \"Wooden Box\"}, {id: 7, day: IMAGES.CRATE8D, night: IMAGES.CRATE8N, rarity: RARITY.WOOD, author: \"eogito\", name: \"Wooden Battle Box\"}, {id: 8, day: IMAGES.CRATE9D, night: IMAGES.CRATE9N, rarity: RARITY.WOOD, author: \"eogito\", name: \"Wooden Box with a Cross\"}, {id: 9, day: IMAGES.CRATE10D, night: IMAGES.CRATE10N, rarity: RARITY.WOOD, author: \"eogito\", name: \"Wooden Box with Bubbles\"}, {id: 10, day: IMAGES.CRATE11D, night: IMAGES.CRATE11N, rarity: RARITY.WOOD, author: \"eogito\", name: \"Wooden Box with Eyes\"}, {id: 11, day: IMAGES.CRATE12D, night: IMAGES.CRATE12N, rarity: RARITY.WOOD, author: \"eogito\", name: \"Dark Wooden Box\"}, {id: 38, day: IMAGES.CRATE39D, night: IMAGES.CRATE39N, rarity: RARITY.WOOD, author: \"Weddlz\", name: \"Noob Box\"}, {id: 12, day: IMAGES.CRATE13D, night: IMAGES.CRATE13N, rarity: RARITY.STONE, author: \"eogito\", name: \"Wooden and Stone Box\"}, {id: 14, day: IMAGES.CRATE19D, night: IMAGES.CRATE19N, rarity: RARITY.STONE, author: \"pizza wa\", name: \"Star Box 1\"}, {id: 15, day: IMAGES.CRATE20D, night: IMAGES.CRATE20N, rarity: RARITY.STONE, author: \"pizza wa\", name: \"Star Box 2\"}, {id: 27, day: IMAGES.CRATE29D, night: IMAGES.CRATE29N, rarity: RARITY.STONE, author: \"eogito\", name: \"Flower Box\"}, {id: 46, day: IMAGES.CRATE47D, night: IMAGES.CRATE47N, rarity: RARITY.STONE, author: \"MADBalgouthi\", name: \"Blue Box\"}, {id: 19, day: IMAGES.CRATE21D, night: IMAGES.CRATE21N, rarity: RARITY.GOLD, author: \"Starve.io\", name: \"Beehive\"}, {id: 13, day: IMAGES.CRATE14D, night: IMAGES.CRATE14N, rarity: RARITY.GOLD, author: \"eogito\", name: \"Wooden and Golden Box\"}, {id: 21, day: IMAGES.CRATE22D, night: IMAGES.CRATE22N, rarity: RARITY.GOLD, author: \"Starve.io\", name: \"Gravestone\"}, {id: 25, day: IMAGES.CRATE26D, night: IMAGES.CRATE26N, rarity: RARITY.GOLD, author: \"Communist\", name: \"Sky Box\"}, {id: 29, day: IMAGES.CRATE30D, night: IMAGES.CRATE30N, rarity: RARITY.GOLD, author: \"Winter\", name: \"Golden Box\"}, {id: 34, day: IMAGES.CRATE35D, night: IMAGES.CRATE35N, rarity: RARITY.GOLD, author: \"Communist\", name: \"Water Crate\"}, {id: 35, day: IMAGES.CRATE36D, night: IMAGES.CRATE36N, rarity: RARITY.GOLD, author: \"Communist\", name: \"Glass Crate\"}, {id: 16, day: IMAGES.CRATE15D, night: IMAGES.CRATE15N, rarity: RARITY.DIAMOND, author: \"eogito\", name: \"Wooden and Diamond Box\"}, {id: 18, day: IMAGES.CRATE18D, night: IMAGES.CRATE18N, rarity: RARITY.DIAMOND, author: \"Starve.io\", name: \"Don't Hit Me\"}, {id: 26, day: IMAGES.CRATE27D, night: IMAGES.CRATE27N, rarity: RARITY.DIAMOND, author: \"Starve.io\", name: \"Underwater Box\"}, {id: 31, day: IMAGES.CRATE32D, night: IMAGES.CRATE32N, rarity: RARITY.DIAMOND, author: \"Communist\", name: \"Items Pile\"}, {id: 32, day: IMAGES.CRATE33D, night: IMAGES.CRATE33N, rarity: RARITY.DIAMOND, author: \"eogito\", name: \"Cake Box\"}, {id: 33, day: IMAGES.CRATE34D, night: IMAGES.CRATE34N, rarity: RARITY.DIAMOND, author: \"eogito\", name: \"Christmas Cake Box\"}, {id: 36, day: IMAGES.CRATE37D, night: IMAGES.CRATE37N, rarity: RARITY.DIAMOND, author: \"Fukss\", name: \"Crab Box\"}, {id: 42, day: IMAGES.CRATE43D, night: IMAGES.CRATE43N, rarity: RARITY.DIAMOND, author: \"MADBalgouthi\", name: \"Fishing Box\"}, {id: 22, day: IMAGES.CRATE23D, night: IMAGES.CRATE23N, rarity: RARITY.AMETHYST, author: \"Starve.io\", name: \"Let me out of here\"}, {id: 17, day: IMAGES.CRATE16D, night: IMAGES.CRATE16N, rarity: RARITY.AMETHYST, author: \"eogito\", name: \"Wooden and Amethyst Box\"}, {id: 24, day: IMAGES.CRATE25D, night: IMAGES.CRATE25N, rarity: RARITY.AMETHYST, author: \"Starve.io\", name: \"Aquarium\"}, {id: 28, day: IMAGES.CRATE28D, night: IMAGES.CRATE28N, rarity: RARITY.AMETHYST, author: \"eogito\", name: \"Gift Box\"}, {id: 40, day: IMAGES.CRATE41D, night: IMAGES.CRATE41N, rarity: RARITY.AMETHYST, author: \"MADBalgouthi\", name: \"Open Watermelon Box\"}, {id: 41, day: IMAGES.CRATE42D, night: IMAGES.CRATE42N, rarity: RARITY.AMETHYST, author: \"MADBalgouthi\", name: \"Watermelon Box\"}, {id: 39, day: IMAGES.CRATE40D, night: IMAGES.CRATE40N, rarity: RARITY.AMETHYST, author: \"Taco4Life\", name: \"Thornbush Box\"}, {id: 43, day: IMAGES.CRATE44D, night: IMAGES.CRATE44N, rarity: RARITY.AMETHYST, author: \"eogito\", name: \"Rabbit in the Box\"}, {id: 47, day: IMAGES.CRATE48D, night: IMAGES.CRATE48N, rarity: RARITY.AMETHYST, author: \"Taco4Life\", name: \"Garlic Plot\"}, {id: 48, day: IMAGES.CRATE49D, night: IMAGES.CRATE49N, rarity: RARITY.AMETHYST, author: \"Taco4Life\", name: \"Pumpkin Plot\"}, {id: 45, day: IMAGES.CRATE46D, night: IMAGES.CRATE46N, rarity: RARITY.REIDITE, author: \"eogito\", name: \"Autumn Box\"}, {id: 44, day: IMAGES.CRATE45D, night: IMAGES.CRATE45N, rarity: RARITY.REIDITE, author: \"eogito\", name: \"Winter Box\"}, {id: 20, day: IMAGES.CRATE17D, night: IMAGES.CRATE17N, rarity: RARITY.REIDITE, author: \"eogito\", name: \"Metal and Reidite Box\"}, {id: 23, day: IMAGES.CRATE24D, night: IMAGES.CRATE24N, rarity: RARITY.REIDITE, author: \"Starve.io\", name: \"Kraken Box\"}, {id: 30, day: IMAGES.CRATE31D, night: IMAGES.CRATE31N, rarity: RARITY.REIDITE, author: \"Winter\", name: \"Lava Box\"}, {id: 37, day: IMAGES.CRATE38D, night: IMAGES.CRATE38N, rarity: RARITY.REIDITE, author: \"eogito\", name: \"Lava Box 2\"}, {id: 49, day: IMAGES.CRATE50D, night: IMAGES.CRATE50N, rarity: RARITY.REIDITE, author: \"Starve.io\", name: \"Box of the Rabbit\"}, {id: 50, day: IMAGES.CRATE51D, night: IMAGES.CRATE51N, rarity: RARITY.REIDITE, author: \"Starve.io\", name: \"Box of the Wolf\"}, {id: 51, day: IMAGES.CRATE52D, night: IMAGES.CRATE52N, rarity: RARITY.REIDITE, author: \"Starve.io\", name: \"Box of the Spider\"}, {id: 52, day: IMAGES.CRATE53D, night: IMAGES.CRATE53N, rarity: RARITY.REIDITE, author: \"Starve.io\", name: \"Box of the Hawk\"}, {id: 53, day: IMAGES.CRATE54D, night: IMAGES.CRATE54N, rarity: RARITY.REIDITE, author: \"Starve.io\", name: \"Box of the Bear\"}, {id: 54, day: IMAGES.CRATE55D, night: IMAGES.CRATE55N, rarity: RARITY.REIDITE, author: \"Starve.io\", name: \"Box of the Fox\"}, {id: 55, day: IMAGES.CRATE56D, night: IMAGES.CRATE56N, rarity: RARITY.REIDITE, author: \"Starve.io\", name: \"Box of the Baby Mammoth\"}, {id: 56, day: IMAGES.CRATE57D, night: IMAGES.CRATE57N, rarity: RARITY.REIDITE, author: \"Starve.io\", name: \"Box of the Mammoth\"}, {id: 57, day: IMAGES.CRATE58D, night: IMAGES.CRATE58N, rarity: RARITY.REIDITE, author: \"Starve.io\", name: \"Box of the Sandworm\"}, {id: 58, day: IMAGES.CRATE59D, night: IMAGES.CRATE59N, rarity: RARITY.REIDITE, author: \"Starve.io\", name: \"Box of the Vulture\"}, {id: 59, day: IMAGES.CRATE60D, night: IMAGES.CRATE60N, rarity: RARITY.REIDITE, author: \"Starve.io\", name: \"Box of the Kraken\"}, {id: 60, day: IMAGES.CRATE61D, night: IMAGES.CRATE61N, rarity: RARITY.REIDITE, author: \"Starve.io\", name: \"Box of the Piranha\"}, {id: 61, day: IMAGES.CRATE62D, night: IMAGES.CRATE62N, rarity: RARITY.REIDITE, author: \"Starve.io\", name: \"Box of the Baby Dragon\"}, {id: 62, day: IMAGES.CRATE63D, night: IMAGES.CRATE63N, rarity: RARITY.REIDITE, author: \"Starve.io\", name: \"Box of the Baby Lava\"}, {id: 63, day: IMAGES.CRATE64D, night: IMAGES.CRATE64N, rarity: RARITY.REIDITE, author: \"Starve.io\", name: \"Box of the Dragon\"}, {id: 64, day: IMAGES.CRATE65D, night: IMAGES.CRATE65N, rarity: RARITY.REIDITE, author: \"Starve.io\", name: \"Box of the Penguin\"}, {id: 65, day: IMAGES.CRATE66D, night: IMAGES.CRATE66N, rarity: RARITY.REIDITE, author: \"Starve.io\", name: \"Box of the Lava Dragon\"}, {id: 66, day: IMAGES.CRATE67D, night: IMAGES.CRATE67N, rarity: RARITY.REIDITE, author: \"Starve.io\", name: \"Box of the Boar\"}, {id: 67, day: IMAGES.CRATE68D, night: IMAGES.CRATE68N, rarity: RARITY.REIDITE, author: \"Starve.io\", name: \"Box of the Fire mob\"}, {id: 68, day: IMAGES.CRATE69D, night: IMAGES.CRATE69N, rarity: RARITY.REIDITE, author: \"Starve.io\", name: \"Box of the Crab\"}, {id: 69, day: IMAGES.CRATE70D, night: IMAGES.CRATE70N, rarity: RARITY.REIDITE, author: \"Starve.io\", name: \"Box of the King Crab\"}, {id: 70, day: IMAGES.CRATE71D, night: IMAGES.CRATE71N, rarity: RARITY.GOLD, author: \"CrysTal\", name: \"Crystal Sky Box\"}, {id: 71, day: IMAGES.CRATE72D, night: IMAGES.CRATE72N, rarity: RARITY.REIDITE, author: \"eogito\", name: \"Dragon Box\"}], BOOK: [{id: 0, day: IMAGES.BOOK0D, night: IMAGES.BOOK0N, rarity: RARITY.FREE, author: \"Starve.io\", name: \"Book 1\"}, {id: 1, day: IMAGES.BOOK3D, night: IMAGES.BOOK3N, rarity: RARITY.WOOD, author: \"eogito\", name: \"Book 2\"}, {id: 2, day: IMAGES.BOOK4D, night: IMAGES.BOOK4N, rarity: RARITY.WOOD, author: \"eogito\", name: \"Book 3\"}, {id: 3, day: IMAGES.BOOK5D, night: IMAGES.BOOK5N, rarity: RARITY.WOOD, author: \"eogito\", name: \"Book 4\"}, {id: 4, day: IMAGES.BOOK6D, night: IMAGES.BOOK6N, rarity: RARITY.WOOD, author: \"eogito\", name: \"Damaged Book 1\"}, {id: 18, day: IMAGES.BOOK18D, night: IMAGES.BOOK18N, rarity: RARITY.WOOD, author: \"SeveR\", name: \"Damaged Book 2\"}, {id: 5, day: IMAGES.BOOK1D, night: IMAGES.BOOK1N, rarity: RARITY.STONE, author: \"Doctorpus\", name: \"Scroll\"}, {id: 6, day: IMAGES.BOOK2D, night: IMAGES.BOOK2N, rarity: RARITY.STONE, author: \"Doctorpus\", name: \"Clipboard\"}, {id: 7, day: IMAGES.BOOK7D, night: IMAGES.BOOK7N, rarity: RARITY.STONE, author: \"eogito\", name: \"Seed Book\"}, {id: 20, day: IMAGES.BOOK20D, night: IMAGES.BOOK20N, rarity: RARITY.STONE, author: \"Taco4Life\", name: \"Camo Book\"}, {id: 24, day: IMAGES.BOOK24D, night: IMAGES.BOOK24N, rarity: RARITY.STONE, author: \"Communist\", name: \"Stone Tablet\"}, {id: 10, day: IMAGES.BOOK13D, night: IMAGES.BOOK13N, rarity: RARITY.GOLD, author: \"pizza wa\", name: \"Star Book\"}, {id: 8, day: IMAGES.BOOK9D, night: IMAGES.BOOK9N, rarity: RARITY.GOLD, author: \"eogito\", name: \"Gold Book\"}, {id: 15, day: IMAGES.BOOK15D, night: IMAGES.BOOK15N, rarity: RARITY.GOLD, author: \"Starve.io\", name: \"Old Mysterious Paper\"}, {id: 17, day: IMAGES.BOOK17D, night: IMAGES.BOOK17N, rarity: RARITY.GOLD, author: \"Starve.io\", name: \"Gold Engraving\"}, {id: 25, day: IMAGES.BOOK25D, night: IMAGES.BOOK25N, rarity: RARITY.GOLD, author: \"fatant\", name: \"Ant Book\"}, {id: 32, day: IMAGES.BOOK32D, night: IMAGES.BOOK32N, rarity: RARITY.GOLD, author: \"eogito\", name: \"Mummy Book\"}, {id: 37, day: IMAGES.BOOK39D, night: IMAGES.BOOK39N, rarity: RARITY.GOLD, author: \"Taco4Life\", name: \"Garlic Book\"}, {id: 38, day: IMAGES.BOOK38D, night: IMAGES.BOOK38N, rarity: RARITY.GOLD, author: \"Taco4Life\", name: \"Pumpkin Book\"}, {id: 39, day: IMAGES.BOOK40D, night: IMAGES.BOOK40N, rarity: RARITY.GOLD, author: \"Starve.io\", name: \"Christmas Tree Book\"}, {id: 11, day: IMAGES.BOOK10D, night: IMAGES.BOOK10N, rarity: RARITY.DIAMOND, author: \"eogito\", name: \"Diamond Book\"}, {id: 9, day: IMAGES.BOOK8D, night: IMAGES.BOOK8N, rarity: RARITY.DIAMOND, author: \"eogito\", name: \"Obscure Book\"}, {id: 16, day: IMAGES.BOOK16D, night: IMAGES.BOOK16N, rarity: RARITY.DIAMOND, author: \"Starve.io\", name: \"Rolled Parchment\"}, {id: 22, day: IMAGES.BOOK22D, night: IMAGES.BOOK22N, rarity: RARITY.DIAMOND, author: \"eogito\", name: \"Cake Book\"}, {id: 23, day: IMAGES.BOOK23D, night: IMAGES.BOOK23N, rarity: RARITY.DIAMOND, author: \"eogito\", name: \"Christmas Cake Book\"}, {id: 30, day: IMAGES.BOOK30D, night: IMAGES.BOOK30N, rarity: RARITY.DIAMOND, author: \"MADBalgouthi\", name: \"Fish Book\"}, {id: 31, day: IMAGES.BOOK31D, night: IMAGES.BOOK31N, rarity: RARITY.DIAMOND, author: \"CrysTal\", name: \"Once upon a time\"}, {id: 13, day: IMAGES.BOOK11D, night: IMAGES.BOOK11N, rarity: RARITY.AMETHYST, author: \"eogito\", name: \"Amethyst Book\"}, {id: 28, day: IMAGES.BOOK28D, night: IMAGES.BOOK28N, rarity: RARITY.AMETHYST, author: \"eogito\", name: \"Paint Pallet\"}, {id: 29, day: IMAGES.BOOK29D, night: IMAGES.BOOK29N, rarity: RARITY.AMETHYST, author: \"CrysTal\", name: \"Watermelon Book\"}, {id: 27, day: IMAGES.BOOK27D, night: IMAGES.BOOK27N, rarity: RARITY.AMETHYST, author: \"Taco4Life\", name: \"Thornbush Book\"}, {id: 35, day: IMAGES.BOOK35D, night: IMAGES.BOOK35N, rarity: RARITY.AMETHYST, author: \"Taco4Life\", name: \"Menu\"}, {id: 36, day: IMAGES.BOOK36D, night: IMAGES.BOOK36N, rarity: RARITY.AMETHYST, author: \"CrysTal\", name: \"Lover Letter\"}, {id: 40, day: IMAGES.BOOK41D, night: IMAGES.BOOK41N, rarity: RARITY.AMETHYST, author: \"Starve.io\", name: \"Fresh-Baked Cookies\"}, {id: 41, day: IMAGES.BOOK42D, night: IMAGES.BOOK42N, rarity: RARITY.AMETHYST, author: \"Starve.io\", name: \"Inside, there is just a book.\"}, {id: 33, day: IMAGES.BOOK33D, night: IMAGES.BOOK33N, rarity: RARITY.REIDITE, author: \"eogito\", name: \"Winter Book\"}, {id: 34, day: IMAGES.BOOK34D, night: IMAGES.BOOK34N, rarity: RARITY.REIDITE, author: \"eogito\", name: \"Autumn Book\"}, {id: 14, day: IMAGES.BOOK12D, night: IMAGES.BOOK12N, rarity: RARITY.REIDITE, author: \"eogito\", name: \"Reidite Book\"}, {id: 12, day: IMAGES.BOOK14D, night: IMAGES.BOOK14N, rarity: RARITY.REIDITE, author: \"Winter\", name: \"Lava Book\"}, {id: 26, day: IMAGES.BOOK26D, night: IMAGES.BOOK26N, rarity: RARITY.REIDITE, author: \"eogito\", name: \"Lava Book 2\"}, {id: 19, day: IMAGES.BOOK19D, night: IMAGES.BOOK19N, rarity: RARITY.REIDITE, author: \"Winter\", name: \"Ocean Mystery\"}, {id: 21, day: IMAGES.BOOK21D, night: IMAGES.BOOK21N, rarity: RARITY.REIDITE, author: \"eogito\", name: \"Dragon Book\"}, {id: 42, day: IMAGES.BOOK43D, night: IMAGES.BOOK43N, rarity: RARITY.REIDITE, author: \"eogito\", name: \"Engineer Book\"}, {id: 43, day: IMAGES.BOOK44D, night: IMAGES.BOOK44N, rarity: RARITY.REIDITE, author: \"eogito\", name: \"Nightmare Book\"}, {id: 44, day: IMAGES.BOOK45D, night: IMAGES.BOOK45N, rarity: RARITY.REIDITE, author: \"aloner\", name: \"Mystery Book\"}], ACCESSORY: [{id: 0, day: IMAGES.ACCESSORY0D, night: IMAGES.ACCESSORY0D, rarity: RARITY.FREE, author: \"Starve.io\", name: \"Nothing\"}, {id: 2, day: IMAGES.ACCESSORY4D, night: IMAGES.ACCESSORY4N, rarity: RARITY.FREE, author: \"Starve.io\", name: \"Pink Cheeks\"}, {id: 3, day: IMAGES.ACCESSORY5D, night: IMAGES.ACCESSORY5N, rarity: RARITY.FREE, author: \"Starve.io\", name: \"Heart\"}, {id: 1, day: IMAGES.ACCESSORY3D, night: IMAGES.ACCESSORY3N, rarity: RARITY.FREE, author: \"Starve.io\", name: \"Bandage 1\"}, {id: 4, day: IMAGES.ACCESSORY6D, night: IMAGES.ACCESSORY6N, rarity: RARITY.FREE, author: \"Starve.io\", name: \"Flower 1\"}, {id: 5, day: IMAGES.ACCESSORY8D, night: IMAGES.ACCESSORY8N, rarity: RARITY.WOOD, author: \"Starve.io\", name: \"Bow 1\"}, {id: 6, day: IMAGES.ACCESSORY9D, night: IMAGES.ACCESSORY9N, rarity: RARITY.WOOD, author: \"eogito\", name: \"Bandage 2\"}, {id: 7, day: IMAGES.ACCESSORY15D, night: IMAGES.ACCESSORY15N, rarity: RARITY.WOOD, author: \"Starve.io\", name: \"Flower 2\"}, {id: 8, day: IMAGES.ACCESSORY10D, night: IMAGES.ACCESSORY10N, rarity: RARITY.WOOD, author: \"eogito\", name: \"Bandage 3\"}, {id: 36, day: IMAGES.ACCESSORY36D, night: IMAGES.ACCESSORY36N, rarity: RARITY.WOOD, author: \"eogito\", name: \"Foliage\"}, {id: 59, day: IMAGES.ACCESSORY47D, night: IMAGES.ACCESSORY47N, rarity: RARITY.WOOD, author: \"eogito\", name: \"Peaceful\"}, {id: 67, day: IMAGES.ACCESSORY55D, night: IMAGES.ACCESSORY55N, rarity: RARITY.WOOD, author: \"pizza wa\", name: \"Sparkles\"}, {id: 68, day: IMAGES.ACCESSORY56D, night: IMAGES.ACCESSORY56N, rarity: RARITY.WOOD, author: \"pizza wa\", name: \"Luxury\"}, {id: 69, day: IMAGES.ACCESSORY57D, night: IMAGES.ACCESSORY57N, rarity: RARITY.WOOD, author: \"pizza wa\", name: \"Snow Flakes Crown\"}, {id: 17, day: IMAGES.ACCESSORY17D, night: IMAGES.ACCESSORY17N, rarity: RARITY.STONE, author: \"Starve.io\", name: \"Glasses 1\"}, {id: 10, day: IMAGES.ACCESSORY7D, night: IMAGES.ACCESSORY7N, rarity: RARITY.STONE, author: \"Starve.io\", name: \"Bow 2\"}, {id: 11, day: IMAGES.ACCESSORY13D, night: IMAGES.ACCESSORY13N, rarity: RARITY.STONE, author: \"pizza wa\", name: \"Little Stars\"}, {id: 12, day: IMAGES.ACCESSORY11D, night: IMAGES.ACCESSORY11N, rarity: RARITY.STONE, author: \"eogito\", name: \"Pirate Eye Patch 1\"}, {id: 44, day: IMAGES.ACCESSORY44D, night: IMAGES.ACCESSORY44N, rarity: RARITY.STONE, author: \"Taco4Life\", name: \"Pirate Eye Patch 2\"}, {id: 23, day: IMAGES.ACCESSORY23D, night: IMAGES.ACCESSORY23N, rarity: RARITY.STONE, author: \"Starve.io\", name: \"Clown nose\"}, {id: 16, day: IMAGES.ACCESSORY2D, night: IMAGES.ACCESSORY2N, rarity: RARITY.STONE, author: \"Starve.io\", name: \"Eye Patch\"}, {id: 30, day: IMAGES.ACCESSORY30D, night: IMAGES.ACCESSORY30N, rarity: RARITY.STONE, author: \"eogito\", name: \"Flower 3\"}, {id: 38, day: IMAGES.ACCESSORY38D, night: IMAGES.ACCESSORY38N, rarity: RARITY.STONE, author: \"Winter\", name: \"False Nose\"}, {id: 74, day: IMAGES.ACCESSORY62D, night: IMAGES.ACCESSORY62N, rarity: RARITY.STONE, author: \"Starve.io\", name: \"Red Cloth\"}, {id: 75, day: IMAGES.ACCESSORY63D, night: IMAGES.ACCESSORY63N, rarity: RARITY.STONE, author: \"Starve.io\", name: \"Blue Cloth\"}, {id: 79, day: IMAGES.ACCESSORY67D, night: IMAGES.ACCESSORY67N, rarity: RARITY.STONE, author: \"Starve.io\", name: \"Transparent Mask\"}, {id: 89, day: IMAGES.ACCESSORY77D, night: IMAGES.ACCESSORY77N, rarity: RARITY.STONE, author: \"Anyone want to play?\", name: \"Starve.io Anime\"}, {id: 94, day: IMAGES.ACCESSORY78D, night: IMAGES.ACCESSORY78N, rarity: RARITY.STONE, author: \"Ant\", name: \"Hero Mask\"}, {id: 15, day: IMAGES.ACCESSORY16D, night: IMAGES.ACCESSORY16N, rarity: RARITY.GOLD, author: \"Starve.io\", name: \"Star Glasses\"}, {id: 21, day: IMAGES.ACCESSORY21D, night: IMAGES.ACCESSORY21N, rarity: RARITY.GOLD, author: \"Starve.io\", name: \"Great-aunt's Glasses\"}, {id: 24, day: IMAGES.ACCESSORY24D, night: IMAGES.ACCESSORY24N, rarity: RARITY.GOLD, author: \"Starve.io\", name: \"Little Starver\"}, {id: 22, day: IMAGES.ACCESSORY22D, night: IMAGES.ACCESSORY22N, rarity: RARITY.GOLD, author: \"Starve.io\", name: \"Little Glasses\"}, {id: 13, day: IMAGES.ACCESSORY14D, night: IMAGES.ACCESSORY14N, rarity: RARITY.GOLD, author: \"Starve.io\", name: \"Flower Chain\"}, {id: 29, day: IMAGES.ACCESSORY29D, night: IMAGES.ACCESSORY29N, rarity: RARITY.GOLD, author: \"eogito\", name: \"Horns\"}, {id: 31, day: IMAGES.ACCESSORY31D, night: IMAGES.ACCESSORY31N, rarity: RARITY.GOLD, author: \"eogito\", name: \"Golden Flower\"}, {id: 40, day: IMAGES.ACCESSORY40D, night: IMAGES.ACCESSORY40N, rarity: RARITY.GOLD, author: \"pizza wa\", name: \"Sleeping Mask\"}, {id: 57, day: IMAGES.ACCESSORY50D, night: IMAGES.ACCESSORY50N, rarity: RARITY.GOLD, author: \"Taco4Life\", name: \"Fish on your head\"}, {id: 58, day: IMAGES.ACCESSORY46D, night: IMAGES.ACCESSORY46N, rarity: RARITY.GOLD, author: \"eogito\", name: \"Rose\"}, {id: 91, day: IMAGES.ACCESSORY80D, night: IMAGES.ACCESSORY80N, rarity: RARITY.GOLD, author: \"upfiz\", name: \"Grey Scarf\"}, {id: 92, day: IMAGES.ACCESSORY81D, night: IMAGES.ACCESSORY81N, rarity: RARITY.GOLD, author: \"upfiz\", name: \"Black Scarf\"}, {id: 93, day: IMAGES.ACCESSORY82D, night: IMAGES.ACCESSORY82N, rarity: RARITY.GOLD, author: \"upfiz\", name: \"Skull Mask\"}, {id: 9, day: IMAGES.ACCESSORY1D, night: IMAGES.ACCESSORY1N, rarity: RARITY.DIAMOND, author: \"Starve.io\", name: \"Fancy Glasses\"}, {id: 25, day: IMAGES.ACCESSORY25D, night: IMAGES.ACCESSORY25N, rarity: RARITY.DIAMOND, author: \"Starve.io\", name: \"Medecin Mask\"}, {id: 14, day: IMAGES.ACCESSORY12D, night: IMAGES.ACCESSORY12N, rarity: RARITY.DIAMOND, author: \"Starve.io\", name: \"Mr. Mayor\"}, {id: 19, day: IMAGES.ACCESSORY19D, night: IMAGES.ACCESSORY19N, rarity: RARITY.DIAMOND, author: \"Starve.io\", name: \"Sunglasses 2\"}, {id: 28, day: IMAGES.ACCESSORY28D, night: IMAGES.ACCESSORY28N, rarity: RARITY.DIAMOND, author: \"pizza wa\", name: \"Starfish\"}, {id: 37, day: IMAGES.ACCESSORY37D, night: IMAGES.ACCESSORY37N, rarity: RARITY.DIAMOND, author: \"eogito\", name: \"Berry\"}, {id: 39, day: IMAGES.ACCESSORY39D, night: IMAGES.ACCESSORY39N, rarity: RARITY.DIAMOND, author: \"eogito\", name: \"Flake\"}, {id: 43, day: IMAGES.ACCESSORY43D, night: IMAGES.ACCESSORY43N, rarity: RARITY.DIAMOND, author: \"eogito\", name: \"Leaf \"}, {id: 61, day: IMAGES.ACCESSORY49D, night: IMAGES.ACCESSORY49N, rarity: RARITY.DIAMOND, author: \"Starve.io\", name: \"A sword in your head\"}, {id: 62, day: IMAGES.ACCESSORY51D, night: IMAGES.ACCESSORY51N, rarity: RARITY.DIAMOND, author: \"Starve.io\", name: \"Winter Scarf\"}, {id: 64, day: IMAGES.ACCESSORY53D, night: IMAGES.ACCESSORY53N, rarity: RARITY.DIAMOND, author: \"eogito\", name: \"Winter Scarf 2\"}, {id: 66, day: IMAGES.ACCESSORY54D, night: IMAGES.ACCESSORY54N, rarity: RARITY.DIAMOND, author: \"eogito\", name: \"Winter Scarf 3\"}, {id: 70, day: IMAGES.ACCESSORY58D, night: IMAGES.ACCESSORY58N, rarity: RARITY.DIAMOND, author: \"Starve.io\", name: \"Mask with animal tracks\"}, {id: 71, day: IMAGES.ACCESSORY59D, night: IMAGES.ACCESSORY59N, rarity: RARITY.DIAMOND, author: \"Starve.io\", name: \"Spring Mask\"}, {id: 72, day: IMAGES.ACCESSORY60D, night: IMAGES.ACCESSORY60N, rarity: RARITY.DIAMOND, author: \"Starve.io\", name: \"Pink Mask\"}, {id: 73, day: IMAGES.ACCESSORY61D, night: IMAGES.ACCESSORY61N, rarity: RARITY.DIAMOND, author: \"Starve.io\", name: \"Blue Mask\"}, {id: 76, day: IMAGES.ACCESSORY64D, night: IMAGES.ACCESSORY64N, rarity: RARITY.DIAMOND, author: \"Starve.io\", name: \"Military Mask\"}, {id: 77, day: IMAGES.ACCESSORY65D, night: IMAGES.ACCESSORY65N, rarity: RARITY.DIAMOND, author: \"Starve.io\", name: \"Orange Mask\"}, {id: 78, day: IMAGES.ACCESSORY66D, night: IMAGES.ACCESSORY66N, rarity: RARITY.DIAMOND, author: \"Starve.io\", name: \"White and Red Points Mask\"}, {id: 80, day: IMAGES.ACCESSORY68D, night: IMAGES.ACCESSORY68N, rarity: RARITY.DIAMOND, author: \"Starve.io\", name: \"Stick out your tongue Mask\"}, {id: 81, day: IMAGES.ACCESSORY69D, night: IMAGES.ACCESSORY69N, rarity: RARITY.DIAMOND, author: \"Starve.io\", name: \"Two Teeth Mask\"}, {id: 82, day: IMAGES.ACCESSORY70D, night: IMAGES.ACCESSORY70N, rarity: RARITY.DIAMOND, author: \"Starve.io\", name: \"Make-up Mask\"}, {id: 83, day: IMAGES.ACCESSORY71D, night: IMAGES.ACCESSORY71N, rarity: RARITY.DIAMOND, author: \"Starve.io\", name: \"Sad Mask\"}, {id: 84, day: IMAGES.ACCESSORY72D, night: IMAGES.ACCESSORY72N, rarity: RARITY.DIAMOND, author: \"Starve.io\", name: \"Happy Mask\"}, {id: 90, day: IMAGES.ACCESSORY79D, night: IMAGES.ACCESSORY79N, rarity: RARITY.DIAMOND, author: \"aloner\", name: \"Blood\"}, {id: 27, day: IMAGES.ACCESSORY27D, night: IMAGES.ACCESSORY27N, rarity: RARITY.AMETHYST, author: \"Starve.io\", name: \"Clown Face\"}, {id: 20, day: IMAGES.ACCESSORY20D, night: IMAGES.ACCESSORY20N, rarity: RARITY.AMETHYST, author: \"Starve.io\", name: \"Sunglasses 3\"}, {id: 32, day: IMAGES.ACCESSORY32D, night: IMAGES.ACCESSORY32N, rarity: RARITY.AMETHYST, author: \"eogito\", name: \"Engineer's Glasses\"}, {id: 33, day: IMAGES.ACCESSORY33D, night: IMAGES.ACCESSORY33N, rarity: RARITY.AMETHYST, author: \"eogito\", name: \"Engineer's Monocle\"}, {id: 34, day: IMAGES.ACCESSORY34D, night: IMAGES.ACCESSORY34N, rarity: RARITY.AMETHYST, author: \"Starve.io\", name: \"Mauve's butt\"}, {id: 41, day: IMAGES.ACCESSORY41D, night: IMAGES.ACCESSORY41N, rarity: RARITY.AMETHYST, author: \"eogito\", name: \"Lapa Head\"}, {id: 42, day: IMAGES.ACCESSORY42D, night: IMAGES.ACCESSORY42N, rarity: RARITY.AMETHYST, author: \"eogito\", name: \"Lapa Head \"}, {id: 85, day: IMAGES.ACCESSORY73D, night: IMAGES.ACCESSORY73N, rarity: RARITY.AMETHYST, author: \"Starve.io\", name: \"Mask and Glasses\"}, {id: 60, day: IMAGES.ACCESSORY48D, night: IMAGES.ACCESSORY48N, rarity: RARITY.REIDITE, author: \"Starve.io\", name: \"Jason\"}, {id: 26, day: IMAGES.ACCESSORY26D, night: IMAGES.ACCESSORY26N, rarity: RARITY.REIDITE, author: \"Starve.io\", name: \"Devil Horns\"}, {id: 18, day: IMAGES.ACCESSORY18D, night: IMAGES.ACCESSORY18N, rarity: RARITY.REIDITE, author: \"Starve.io\", name: \"Big Boss\"}, {id: 35, day: IMAGES.ACCESSORY35D, night: IMAGES.ACCESSORY35N, rarity: RARITY.REIDITE, author: \"Starve.io\", name: \"Baby Kraken\"}, {id: 63, day: IMAGES.ACCESSORY52D, night: IMAGES.ACCESSORY52N, rarity: RARITY.REIDITE, author: \"eogito\", name: \"Deer Antlers\"}, {id: 65, day: IMAGES.ACCESSORY45D, night: IMAGES.ACCESSORY45N, rarity: RARITY.REIDITE, author: \"eogito\", name: \"Baby Dragon on your head\"}, {id: 86, day: IMAGES.ACCESSORY74D, night: IMAGES.ACCESSORY74N, rarity: RARITY.REIDITE, author: \"Starve.io\", name: \"Gaz Mask and Glasses\"}, {id: 87, day: IMAGES.ACCESSORY75D, night: IMAGES.ACCESSORY75N, rarity: RARITY.REIDITE, author: \"Starve.io\", name: \"Pink Gaz Mask and Glasses\"}, {id: 88, day: IMAGES.ACCESSORY76D, night: IMAGES.ACCESSORY76N, rarity: RARITY.REIDITE, author: \"eogito\", name: \"Engineer Glasses\"}, {id: 45, day: IMAGES.LEVEL5D, night: IMAGES.LEVEL5N, rarity: RARITY.LEVEL, author: \"Starve.io\", name: \"More than Level 5\", level: 5}, {id: 46, day: IMAGES.LEVEL10D, night: IMAGES.LEVEL10N, rarity: RARITY.LEVEL, author: \"Starve.io\", name: \"More than Level 10\", level: 10}, {id: 47, day: IMAGES.LEVEL15D, night: IMAGES.LEVEL15N, rarity: RARITY.LEVEL, author: \"Starve.io\", name: \"More than Level 15\", level: 15}, {id: 48, day: IMAGES.LEVEL20D, night: IMAGES.LEVEL20N, rarity: RARITY.LEVEL, author: \"Starve.io\", name: \"More than Level 20\", level: 20}, {id: 49, day: IMAGES.LEVEL25D, night: IMAGES.LEVEL25N, rarity: RARITY.LEVEL, author: \"Starve.io\", name: \"More than Level 25\", level: 25}, {id: 50, day: IMAGES.LEVEL30D, night: IMAGES.LEVEL30N, rarity: RARITY.LEVEL, author: \"Starve.io\", name: \"More than Level 30\", level: 30}, {id: 51, day: IMAGES.LEVEL35D, night: IMAGES.LEVEL35N, rarity: RARITY.LEVEL, author: \"Starve.io\", name: \"More than Level 35\", level: 35}, {id: 52, day: IMAGES.LEVEL40D, night: IMAGES.LEVEL40N, rarity: RARITY.LEVEL, author: \"Starve.io\", name: \"More than Level 40\", level: 40}, {id: 53, day: IMAGES.LEVEL45D, night: IMAGES.LEVEL45N, rarity: RARITY.LEVEL, author: \"Starve.io\", name: \"More than Level 45\", level: 45}, {id: 54, day: IMAGES.LEVEL50D, night: IMAGES.LEVEL50N, rarity: RARITY.LEVEL, author: \"Starve.io\", name: \"More than Level 50\", level: 50}, {id: 55, day: IMAGES.LEVEL55D, night: IMAGES.LEVEL55N, rarity: RARITY.LEVEL, author: \"Starve.io\", name: \"More than Level 55\", level: 55}, {id: 56, day: IMAGES.LEVEL60D, night: IMAGES.LEVEL60N, rarity: RARITY.LEVEL, author: \"Starve.io\", name: \"More than Level 60\", level: 60}]};\r\n    WORLD.ZOMBIE_SKIN = find_cosmetics_per_id(COSMETICS.SKIN, 21);\r\n    WORLD.VAMPIRE_SKIN = find_cosmetics_per_id(COSMETICS.SKIN, 20);\r\n    sprite[SPRITE.BODY] = [];\r\n    sprite[SPRITE.HAND] = [];\r\n    sprite[SPRITE.CRATE] = [];\r\n    sprite[SPRITE.BOOK] = [];\r\n    sprite[SPRITE.BAG] = [];\r\n    sprite[SPRITE.ACCESSORY] = [];\r\n    for (var i = 0; i < COSMETICS.SKIN.length; i++) {\r\n        sprite[SPRITE.BODY][i] = [COSMETICS.SKIN[i].day, COSMETICS.SKIN[i].night];\r\n        sprite[SPRITE.HAND][i] = [COSMETICS.SKIN[i].dayHand, COSMETICS.SKIN[i].nightHand];\r\n    }\r\n    for (var i = 0; i < COSMETICS.BOOK.length; i++) sprite[SPRITE.BOOK][i] = [COSMETICS.BOOK[i].day, COSMETICS.BOOK[i].night];\r\n    for (var i = 0; i < COSMETICS.CRATE.length; i++) sprite[SPRITE.CRATE][i] = [COSMETICS.CRATE[i].day, COSMETICS.CRATE[i].night];\r\n    for (var i = 0; i < COSMETICS.BAG.length; i++) sprite[SPRITE.BAG][i] = [COSMETICS.BAG[i].day, COSMETICS.BAG[i].night];\r\n    for (var i = 0; i < COSMETICS.ACCESSORY.length; i++) sprite[SPRITE.ACCESSORY][i] = [COSMETICS.ACCESSORY[i].day, COSMETICS.ACCESSORY[i].night];\r\n};\r\nfunction fill_path(ctx, fill, stroke, width) {\r\n    if (fill) {\r\n        ctx.fillStyle = fill;\r\n        ctx.fill();\r\n    }\r\n    if (stroke) {\r\n        ctx.lineWidth = width;\r\n        ctx.strokeStyle = stroke;\r\n        ctx.stroke();\r\n    }\r\n}\r\n;\r\nfunction round_rect(ctx, a, b, d, c, e) {\r\n    d < 2 * e && (e = d / 2);\r\n    c < 2 * e && (e = c / 2);\r\n    0 > e && (e = 0);\r\n    ctx.beginPath();\r\n    ctx.moveTo(a + e, b);\r\n    ctx.arcTo(a + d, b, a + d, b + c, e);\r\n    ctx.arcTo(a + d, b + c, a, b + c, e);\r\n    ctx.arcTo(a, b + c, a, b, e);\r\n    ctx.arcTo(a, b, a + d, b, e);\r\n    ctx.closePath();\r\n}\r\n;\r\nfunction semi_round_rect(ctx, a, b, d, c, e) {\r\n    d < 2 * e && (e = d / 2);\r\n    c < 2 * e && (e = c / 2);\r\n    0 > e && (e = 0);\r\n    ctx.beginPath();\r\n    ctx.moveTo(a + e, b);\r\n    ctx.arcTo(a + d, b, a + d, b + c, 0);\r\n    ctx.arcTo(a + d, b + c, a, b + c, e);\r\n    ctx.arcTo(a, b + c, a, b, 0);\r\n    ctx.arcTo(a, b, a + d, b, e);\r\n    ctx.closePath();\r\n}\r\n;\r\nfunction circle(ctx, x, y, r) {\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, r, 0, Math.PI * 2);\r\n}\r\n;\r\nfunction circle_angle(ctx, x, y, r, a) {\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.arc(x, y, r, 0, Math.PI * 2 * a);\r\n}\r\n;\r\nfunction round_regular_polygon(ctx, n, r, round) {\r\n    var a = Math.PI * 2 / n;\r\n    ctx.beginPath();\r\n    var vertex = [{x: r, y: 0}];\r\n    var middle = [];\r\n    for (var i = 1; i < n; i++) {\r\n        vertex.push({x: Math.cos(i * a) * r, y: Math.sin(i * a) * r});\r\n        var len = vertex.length;\r\n        middle.push(Utils.middle_point(vertex[len - 2], vertex[len - 1]));\r\n    }\r\n    middle.push(Utils.middle_point(vertex[vertex.length - 1], vertex[0]));\r\n    var v = middle[middle.length - 1];\r\n    ctx.moveTo(v.x, v.y);\r\n    for (var i = 0; i < n; i++) ctx.arcTo(vertex[i].x, vertex[i].y, middle[i].x, middle[i].y, round);\r\n    ctx.closePath();\r\n}\r\n;\r\nfunction create_rotated_img(r, img) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    var d = Math.sqrt(img.width * img.width + img.height * img.height);\r\n    d2 = d / 2;\r\n    can.width = d;\r\n    can.height = d;\r\n    ctx.translate(d2, d2);\r\n    ctx.rotate(r);\r\n    ctx.drawImage(img, -img.width / 2, -img.height / 2);\r\n    return can;\r\n}\r\n;\r\nfunction create_message(scale, msg) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    var h = Math.floor(scale * 28);\r\n    var hf = Math.floor(scale * 20);\r\n    ctx.font = hf + \"px Baloo Paaji\";\r\n    var gap = 8 * scale;\r\n    var w = ctx.measureText(msg).width + gap * 2;\r\n    can.width = w;\r\n    can.height = h;\r\n    round_rect(ctx, 0, 0, w, h, 10 * scale);\r\n    ctx.globalAlpha = 0.5;\r\n    fill_path(ctx, \"#000\");\r\n    ctx.globalAlpha = 1;\r\n    ctx.textBaseline = \"middle\", ctx.font = hf + \"px Baloo Paaji\";\r\n    ctx.beginPath();\r\n    ctx.fillStyle = \"#FFF\";\r\n    ctx.fillText(msg, gap, h / 2);\r\n    return can;\r\n}\r\n;\r\nfunction create_accessory(scale, color, i) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 120 * scale;\r\n    can.height = 110 * scale;\r\n    if (i == 1) {\r\n        circle(ctx, 35 * scale, 75 * scale, 19.72308292331602 * scale);\r\n        fill_path(ctx, color[1], color[0], 4 * scale);\r\n        ctx.save();\r\n        ctx.translate(11 * scale, 77 * scale);\r\n        round_rect(ctx, -4 * scale, -4 * scale, 8 * scale, 8 * scale, 10 * scale);\r\n        ctx.restore();\r\n        fill_path(ctx, undefined, color[0], 4 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(11 * scale, 81 * scale);\r\n        ctx.bezierCurveTo(13 * scale, 105 * scale, 9 * scale, 106 * scale, 8 * scale, 91 * scale);\r\n        fill_path(ctx, undefined, color[0], 4 * scale);\r\n    } else if (i == 2) {\r\n        circle(ctx, 85 * scale, 75 * scale, 16 * scale);\r\n        fill_path(ctx, color[0], color[0], 4 * scale);\r\n        ctx.scale(-1.7 * scale, 1.7 * scale);\r\n        ctx.translate(-120 * scale, 0 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(20 * scale, 95 * scale);\r\n        ctx.bezierCurveTo(56.5 * scale, 54 * scale, 56.5 * scale, 54 * scale, 93 * scale, 13 * scale);\r\n        ctx.bezierCurveTo(89 * scale, 13 * scale, 89 * scale, 13 * scale, 85 * scale, 13 * scale);\r\n        ctx.bezierCurveTo(49.5 * scale, 53 * scale, 49.5 * scale, 53 * scale, 14 * scale, 93 * scale);\r\n        ctx.bezierCurveTo(15 * scale, 94 * scale, 15 * scale, 94 * scale, 19 * scale, 95 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0], color[0], 4 * scale);\r\n    } else if (i == 3) {\r\n        ctx.translate(-52 * scale, 0);\r\n        ctx.save();\r\n        ctx.translate(84.5 * scale, 36.5 * scale);\r\n        ctx.rotate(-0.96);\r\n        round_rect(ctx, -5.5 * scale, -15.5 * scale, 11 * scale, 31 * scale, 4 * scale);\r\n        ctx.restore();\r\n        fill_path(ctx, color[0], color[1], 4 * scale);\r\n        ctx.save();\r\n        ctx.translate(84 * scale, 36 * scale);\r\n        ctx.rotate(0.64);\r\n        round_rect(ctx, -5 * scale, -16 * scale, 10 * scale, 32 * scale, 4 * scale);\r\n        ctx.restore();\r\n        fill_path(ctx, color[0], color[1], 4 * scale);\r\n        ctx.save();\r\n        ctx.translate(83.5 * scale, 36.5 * scale);\r\n        ctx.rotate(0.68);\r\n        round_rect(ctx, -2.5 * scale, -6.5 * scale, 5 * scale, 13 * scale, 4 * scale);\r\n        ctx.restore();\r\n        fill_path(ctx, color[1]);\r\n    } else if (i == 4) {\r\n        circle(ctx, 35 * scale, 85 * scale, 17 * scale);\r\n        fill_path(ctx, color[1], color[0], 3 * scale);\r\n        circle(ctx, 85 * scale, 85 * scale, 17 * scale);\r\n        fill_path(ctx, color[1], color[0], 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(53 * scale, 86 * scale);\r\n        ctx.bezierCurveTo(59 * scale, 83 * scale, 63 * scale, 83 * scale, 67 * scale, 86 * scale);\r\n        fill_path(ctx, undefined, color[0], 4 * scale);\r\n    } else if (i == 5) {\r\n        ctx.scale(1.2, 1.2);\r\n        ctx.translate(-27 * scale, -8 * scale);\r\n        ctx.scale(1.2, 1.2);\r\n        ctx.translate(-10 * scale, 0);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(97 * scale, 23 * scale);\r\n        ctx.bezierCurveTo(105 * scale, 24 * scale, 107 * scale, 37 * scale, 97 * scale, 39 * scale);\r\n        ctx.bezierCurveTo(85 * scale, 40 * scale, 84 * scale, 22 * scale, 97 * scale, 23 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, undefined, color[0], 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(96 * scale, 24 * scale);\r\n        ctx.bezierCurveTo(96 * scale, 30.5 * scale, 96 * scale, 30.5 * scale, 96 * scale, 37 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, undefined, color[0], 3 * scale);\r\n        ctx.translate(0, -2 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(88 * scale, 37 * scale);\r\n        ctx.bezierCurveTo(93 * scale, 33 * scale, 91.5 * scale, 34.5 * scale, 95 * scale, 32 * scale);\r\n        ctx.bezierCurveTo(98.5 * scale, 34 * scale, 98.5 * scale, 34 * scale, 102 * scale, 36 * scale);\r\n        fill_path(ctx, undefined, color[0], 3 * scale);\r\n    } else if (i == 6) {\r\n        circle(ctx, 13 * scale, 79 * scale, 5 * scale);\r\n        fill_path(ctx, color[0]);\r\n        circle(ctx, 106 * scale, 79 * scale, 5 * scale);\r\n        fill_path(ctx, color[0]);\r\n    } else if (i == 7) {\r\n        ctx.translate(0 * scale, 5 * scale);\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(27 * scale, 14.399993896484375 * scale);\r\n        ctx.bezierCurveTo(29 * scale, 4.399993896484375 * scale, 44 * scale, 16.399993896484375 * scale, 37 * scale, 21.399993896484375 * scale);\r\n        ctx.bezierCurveTo(47 * scale, 17.399993896484375 * scale, 45 * scale, 36.399993896484375 * scale, 37 * scale, 32.399993896484375 * scale);\r\n        ctx.bezierCurveTo(44 * scale, 40.399993896484375 * scale, 28 * scale, 47.399993896484375 * scale, 26 * scale, 37.399993896484375 * scale);\r\n        ctx.bezierCurveTo(22 * scale, 46.399993896484375 * scale, 9 * scale, 37.399993896484375 * scale, 16 * scale, 30.399993896484375 * scale);\r\n        ctx.bezierCurveTo(6 * scale, 34.399993896484375 * scale, 9 * scale, 15.399993896484375 * scale, 18 * scale, 19.399993896484375 * scale);\r\n        ctx.bezierCurveTo(10 * scale, 12.399993896484375 * scale, 26 * scale, 7.399993896484375 * scale, 26 * scale, 14.399993896484375 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[3]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.translate(0 * scale, -5 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(27 * scale, 14.399993896484375 * scale);\r\n        ctx.bezierCurveTo(29 * scale, 4.399993896484375 * scale, 44 * scale, 16.399993896484375 * scale, 37 * scale, 21.399993896484375 * scale);\r\n        ctx.bezierCurveTo(47 * scale, 17.399993896484375 * scale, 45 * scale, 36.399993896484375 * scale, 37 * scale, 32.399993896484375 * scale);\r\n        ctx.bezierCurveTo(44 * scale, 40.399993896484375 * scale, 28 * scale, 47.399993896484375 * scale, 26 * scale, 37.399993896484375 * scale);\r\n        ctx.bezierCurveTo(22 * scale, 46.399993896484375 * scale, 9 * scale, 37.399993896484375 * scale, 16 * scale, 30.399993896484375 * scale);\r\n        ctx.bezierCurveTo(6 * scale, 34.399993896484375 * scale, 9 * scale, 15.399993896484375 * scale, 18 * scale, 19.399993896484375 * scale);\r\n        ctx.bezierCurveTo(10 * scale, 12.399993896484375 * scale, 26 * scale, 7.399993896484375 * scale, 26 * scale, 14.399993896484375 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1], color[2], 2 * scale);\r\n        circle(ctx, 27 * scale, 26.800003051757812 * scale, 5 * scale);\r\n        fill_path(ctx, color[0]);\r\n    } else if (i == 8) {\r\n        ctx.translate(-32 * scale, -19 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(123 * scale, 46 * scale);\r\n        ctx.bezierCurveTo(132 * scale, 46 * scale, 135 * scale, 39 * scale, 134 * scale, 33 * scale);\r\n        ctx.bezierCurveTo(145 * scale, 43 * scale, 142 * scale, 65 * scale, 127 * scale, 66 * scale);\r\n        ctx.bezierCurveTo(118 * scale, 61 * scale, 119 * scale, 51 * scale, 123 * scale, 46 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0], color[1], 4 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(49 * scale, 32 * scale);\r\n        ctx.bezierCurveTo(49 * scale, 44 * scale, 56 * scale, 44 * scale, 61 * scale, 46 * scale);\r\n        ctx.bezierCurveTo(67 * scale, 52 * scale, 65 * scale, 65 * scale, 55 * scale, 66 * scale);\r\n        ctx.bezierCurveTo(37 * scale, 60 * scale, 42 * scale, 38 * scale, 49 * scale, 32 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0], color[1], 4 * scale);\r\n    }\r\n    return can;\r\n}\r\n;\r\nfunction create_hurt_player(scale, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    var w = scale * 120;\r\n    var h = scale * 110;\r\n    var w2 = w / 2;\r\n    var h2 = h / 2;\r\n    var round = scale * 20;\r\n    var wp = scale * 112;\r\n    var hp = scale * 82;\r\n    var wp2 = wp / 2;\r\n    var hp2 = hp / 2;\r\n    var width = scale * 4;\r\n    can.width = w;\r\n    can.height = h;\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(w2, h2);\r\n    round_rect(ctx, -wp2, -hp2, wp, hp, round);\r\n    fill_path(ctx, color, color, width);\r\n    return can;\r\n}\r\n;\r\nfunction create_player(scale, color, i) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 176 * scale;\r\n    can.height = 127 * scale;\r\n    if (i == 8) {\r\n        ctx.globalAlpha = 0.3;\r\n        ctx.save();\r\n        ctx.translate(87 * scale, 64.5 * scale);\r\n        round_rect(ctx, -56 * scale, -41.5 * scale, 112 * scale, 83 * scale, 18 * scale);\r\n        ctx.restore();\r\n        fill_path(ctx, color[0], color[1], 4 * scale);\r\n        ctx.save();\r\n        ctx.translate(82 * scale, 69.5 * scale);\r\n        round_rect(ctx, -51 * scale, -36.5 * scale, 102 * scale, 73 * scale, 18 * scale);\r\n        ctx.restore();\r\n        fill_path(ctx, color[2], color[1], 4 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(55 * scale, 41 * scale);\r\n        ctx.bezierCurveTo(38 * scale, 41 * scale, 37 * scale, 50 * scale, 38 * scale, 61 * scale);\r\n        ctx.bezierCurveTo(42 * scale, 50 * scale, 46 * scale, 46 * scale, 55 * scale, 42 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[3]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.translate(26 * scale, 10 * scale);\r\n        circle(ctx, 35 * scale, 75 * scale, 15 * scale);\r\n        fill_path(ctx, color[4]);\r\n        circle(ctx, 85 * scale, 75 * scale, 15 * scale);\r\n        fill_path(ctx, color[4]);\r\n        circle(ctx, 32 * scale, 67 * scale, 5 * scale);\r\n        fill_path(ctx, color[5]);\r\n        circle(ctx, 82 * scale, 67 * scale, 5 * scale);\r\n        fill_path(ctx, color[5]);\r\n    } else if (i == 9) {\r\n        var can = document.createElement(\"canvas\");\r\n        var ctx = can.getContext(\"2d\");\r\n        can.width = 332 * scale;\r\n        can.height = 127 * scale;\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(0, -36 * scale);\r\n        ctx.save();\r\n        ctx.translate(165.25 * scale, 106.84375 * scale);\r\n        round_rect(ctx, -56.5 * scale, -41.5 * scale, 113 * scale, 83 * scale, 18 * scale);\r\n        ctx.restore();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.translate(0, 20 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(210.75 * scale, 72.84375 * scale);\r\n        ctx.bezierCurveTo(238.75 * scale, 74.84375 * scale, 270.75 * scale, 85.84375 * scale, 269.75 * scale, 90.84375 * scale);\r\n        ctx.bezierCurveTo(268.75 * scale, 94.84375 * scale, 221.75 * scale, 81.84375 * scale, 206.75 * scale, 85.84375 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1], color[2], 4 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(208.75 * scale, 69.84375 * scale);\r\n        ctx.bezierCurveTo(241.75 * scale, 61.84375 * scale, 265.75 * scale, 65.84375 * scale, 286.75 * scale, 69.84375 * scale);\r\n        ctx.bezierCurveTo(290.75 * scale, 75.84375 * scale, 225.75 * scale, 69.84375 * scale, 215.75 * scale, 80.84375 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1], color[2], 4 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(209.75 * scale, 69.84375 * scale);\r\n        ctx.bezierCurveTo(228.75 * scale, 51.84375 * scale, 265.75 * scale, 46.84375 * scale, 294.75 * scale, 51.84375 * scale);\r\n        ctx.bezierCurveTo(301.75 * scale, 55.84375 * scale, 224.75 * scale, 60.84375 * scale, 216.75 * scale, 80.84375 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1], color[2], 4 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(193.75 * scale, 72.84375 * scale);\r\n        ctx.bezierCurveTo(206.75 * scale, 47.84375 * scale, 221.75 * scale, 37.84375 * scale, 249.75 * scale, 35.84375 * scale);\r\n        ctx.bezierCurveTo(264.75 * scale, 34.84375 * scale, 305.75 * scale, 16.84375 * scale, 300.75 * scale, 24.84375 * scale);\r\n        ctx.bezierCurveTo(273.75 * scale, 45.84375 * scale, 245.75 * scale, 46.84375 * scale, 235.75 * scale, 62.84375 * scale);\r\n        ctx.bezierCurveTo(218.75 * scale, 82.84375 * scale, 215.75 * scale, 87.84375 * scale, 199.75 * scale, 84.84375 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1], color[2], 4 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(126.75 * scale, 80.34375 * scale);\r\n        ctx.bezierCurveTo(94.75 * scale, 88.34375 * scale, 83.75 * scale, 88.34375 * scale, 65.75 * scale, 90.34375 * scale);\r\n        ctx.bezierCurveTo(61.75 * scale, 87.34375 * scale, 86.75 * scale, 77.34375 * scale, 129.75 * scale, 70.34375 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1], color[2], 4 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(120.75 * scale, 72.34375 * scale);\r\n        ctx.bezierCurveTo(128.75 * scale, 62.34375 * scale, 98.75 * scale, 64.34375 * scale, 49.75 * scale, 68.34375 * scale);\r\n        ctx.bezierCurveTo(34.75 * scale, 75.34375 * scale, 101.75 * scale, 72.34375 * scale, 124.75 * scale, 78.34375 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1], color[2], 4 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(128.75 * scale, 76.34375 * scale);\r\n        ctx.bezierCurveTo(111.75 * scale, 54.34375 * scale, 69.75 * scale, 48.34375 * scale, 39.75 * scale, 50.34375 * scale);\r\n        ctx.bezierCurveTo(26.75 * scale, 53.34375 * scale, 86.75 * scale, 59.34375 * scale, 123.75 * scale, 78.34375 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1], color[2], 4 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(143.75 * scale, 74.34375 * scale);\r\n        ctx.bezierCurveTo(128.75 * scale, 48.34375 * scale, 108.75 * scale, 35.34375 * scale, 81.75 * scale, 35.34375 * scale);\r\n        ctx.bezierCurveTo(63.75 * scale, 33.34375 * scale, 26.75 * scale, 15.34375 * scale, 29.75 * scale, 25.34375 * scale);\r\n        ctx.bezierCurveTo(33.75 * scale, 30.34375 * scale, 49.75 * scale, 40.34375 * scale, 70.75 * scale, 49.34375 * scale);\r\n        ctx.bezierCurveTo(94.75 * scale, 54.34375 * scale, 104.75 * scale, 72.34375 * scale, 128.75 * scale, 88.34375 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1], color[2], 4 * scale);\r\n        ctx.translate(0, -28 * scale);\r\n        ctx.save();\r\n        ctx.translate(165.25 * scale, 106.84375 * scale);\r\n        round_rect(ctx, -56.5 * scale, -41.5 * scale, 113 * scale, 83 * scale, 18 * scale);\r\n        ctx.restore();\r\n        fill_path(ctx, color[1], color[2], 4 * scale);\r\n        ctx.translate(28 * scale, 15 * scale);\r\n        ctx.translate(0, 8 * scale);\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(83 * scale, 52 * scale);\r\n        ctx.bezierCurveTo(78 * scale, 65 * scale, 110 * scale, 72 * scale, 139 * scale, 71 * scale);\r\n        ctx.bezierCurveTo(176 * scale, 71 * scale, 193 * scale, 61 * scale, 191 * scale, 54 * scale);\r\n        ctx.bezierCurveTo(202 * scale, 58 * scale, 198 * scale, 72 * scale, 187 * scale, 75 * scale);\r\n        ctx.bezierCurveTo(143 * scale, 87 * scale, 107 * scale, 79 * scale, 89 * scale, 75 * scale);\r\n        ctx.bezierCurveTo(72 * scale, 69 * scale, 74 * scale, 58 * scale, 83 * scale, 52 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.translate(0 * scale, -8 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(83 * scale, 52 * scale);\r\n        ctx.bezierCurveTo(78 * scale, 65 * scale, 110 * scale, 72 * scale, 139 * scale, 71 * scale);\r\n        ctx.bezierCurveTo(176 * scale, 71 * scale, 193 * scale, 61 * scale, 191 * scale, 54 * scale);\r\n        ctx.bezierCurveTo(202 * scale, 58 * scale, 198 * scale, 72 * scale, 187 * scale, 75 * scale);\r\n        ctx.bezierCurveTo(143 * scale, 87 * scale, 107 * scale, 79 * scale, 89 * scale, 75 * scale);\r\n        ctx.bezierCurveTo(72 * scale, 69 * scale, 74 * scale, 58 * scale, 83 * scale, 52 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[5], color[6], 4 * scale);\r\n        ctx.translate(-28 * scale, -15 * scale);\r\n        circle(ctx, 141.75 * scale, 127.34375 * scale, 15 * scale);\r\n        fill_path(ctx, color[3]);\r\n        circle(ctx, 191.75 * scale, 127.09375 * scale, 15 * scale);\r\n        fill_path(ctx, color[3]);\r\n        circle(ctx, 138.75 * scale, 119.34375 * scale, 5 * scale);\r\n        fill_path(ctx, color[4]);\r\n        circle(ctx, 188.75 * scale, 119.34375 * scale, 5 * scale);\r\n        fill_path(ctx, color[4]);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(125.75 * scale, 139.34375 * scale);\r\n        ctx.bezierCurveTo(134.75 * scale, 134.34375 * scale, 143.75 * scale, 134.34375 * scale, 156.75 * scale, 139.34375 * scale);\r\n        ctx.bezierCurveTo(153.25 * scale, 141.84375 * scale, 153.25 * scale, 141.84375 * scale, 149.75 * scale, 144.34375 * scale);\r\n        ctx.bezierCurveTo(140.25 * scale, 144.34375 * scale, 140.25 * scale, 144.34375 * scale, 130.75 * scale, 144.34375 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(176.75 * scale, 139.34375 * scale);\r\n        ctx.bezierCurveTo(183.75 * scale, 135.34375 * scale, 199.75 * scale, 135.34375 * scale, 205.75 * scale, 139.34375 * scale);\r\n        ctx.bezierCurveTo(203.25 * scale, 141.34375 * scale, 203.25 * scale, 141.34375 * scale, 200.75 * scale, 143.34375 * scale);\r\n        ctx.bezierCurveTo(190.75 * scale, 143.84375 * scale, 190.75 * scale, 143.84375 * scale, 180.75 * scale, 144.34375 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n    } else {\r\n        ctx.globalAlpha = 0.75;\r\n        ctx.translate(0, 8 * scale);\r\n        ctx.save();\r\n        ctx.translate(87 * scale, 64.5 * scale);\r\n        round_rect(ctx, -56 * scale, -41.5 * scale, 112 * scale, 83 * scale, 18 * scale);\r\n        ctx.restore();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.translate(0, -8 * scale);\r\n        ctx.save();\r\n        ctx.translate(87 * scale, 64.5 * scale);\r\n        round_rect(ctx, -56 * scale, -41.5 * scale, 112 * scale, 83 * scale, 18 * scale);\r\n        ctx.restore();\r\n        fill_path(ctx, color[1], color[2], 4 * scale);\r\n        if (i == 0) {\r\n            ctx.translate(27 * scale, 10 * scale);\r\n            circle(ctx, 35 * scale, 75 * scale, 15 * scale);\r\n            fill_path(ctx, color[3]);\r\n            circle(ctx, 85 * scale, 75 * scale, 15 * scale);\r\n            fill_path(ctx, color[3]);\r\n            circle(ctx, 32 * scale, 67 * scale, 5 * scale);\r\n            fill_path(ctx, color[4]);\r\n            circle(ctx, 82 * scale, 67 * scale, 5 * scale);\r\n            fill_path(ctx, color[4]);\r\n        } else if (i == 1) {\r\n            ctx.beginPath();\r\n            ctx.lineCap = \"round\";\r\n            ctx.lineJoin = \"round\";\r\n            ctx.moveTo(35 * scale, 73 * scale);\r\n            ctx.bezierCurveTo(40 * scale, 72 * scale, 38 * scale, 68 * scale, 35 * scale, 67 * scale);\r\n            ctx.bezierCurveTo(25 * scale, 67 * scale, 21 * scale, 65 * scale, 16 * scale, 61 * scale);\r\n            ctx.bezierCurveTo(10 * scale, 60 * scale, 16 * scale, 64 * scale, 20 * scale, 67 * scale);\r\n            ctx.bezierCurveTo(3 * scale, 70 * scale, 12 * scale, 68.5 * scale, 4 * scale, 70 * scale);\r\n            ctx.bezierCurveTo(2 * scale, 71 * scale, 6 * scale, 72 * scale, 13 * scale, 73 * scale);\r\n            ctx.bezierCurveTo(12.5 * scale, 76.5 * scale, 12.5 * scale, 76.5 * scale, 12 * scale, 80 * scale);\r\n            ctx.bezierCurveTo(12 * scale, 83 * scale, 15 * scale, 80 * scale, 18 * scale, 73 * scale);\r\n            ctx.bezierCurveTo(26.5 * scale, 73.5 * scale, 26.5 * scale, 73.5 * scale, 35 * scale, 74 * scale);\r\n            ctx.closePath();\r\n            fill_path(ctx, color[5], color[6], 4 * scale);\r\n            ctx.beginPath();\r\n            ctx.lineCap = \"round\";\r\n            ctx.lineJoin = \"round\";\r\n            ctx.moveTo(134 * scale, 64 * scale);\r\n            ctx.bezierCurveTo(141.5 * scale, 64 * scale, 141.5 * scale, 64 * scale, 149 * scale, 64 * scale);\r\n            ctx.bezierCurveTo(153 * scale, 59 * scale, 156 * scale, 56 * scale, 159 * scale, 56 * scale);\r\n            ctx.bezierCurveTo(161 * scale, 57 * scale, 160 * scale, 60 * scale, 155 * scale, 65 * scale);\r\n            ctx.bezierCurveTo(165 * scale, 71 * scale, 168 * scale, 72 * scale, 169 * scale, 74 * scale);\r\n            ctx.bezierCurveTo(169 * scale, 76 * scale, 159 * scale, 71 * scale, 156 * scale, 72 * scale);\r\n            ctx.bezierCurveTo(154 * scale, 72 * scale, 155 * scale, 75 * scale, 156 * scale, 79 * scale);\r\n            ctx.bezierCurveTo(155 * scale, 81 * scale, 153 * scale, 78 * scale, 150 * scale, 72 * scale);\r\n            ctx.bezierCurveTo(142 * scale, 71.5 * scale, 142 * scale, 71.5 * scale, 134 * scale, 71 * scale);\r\n            ctx.bezierCurveTo(130 * scale, 69 * scale, 131 * scale, 65 * scale, 135 * scale, 64 * scale);\r\n            ctx.closePath();\r\n            fill_path(ctx, color[5], color[6], 4 * scale);\r\n            ctx.beginPath();\r\n            ctx.lineCap = \"round\";\r\n            ctx.lineJoin = \"round\";\r\n            ctx.moveTo(80 * scale, 95 * scale);\r\n            ctx.bezierCurveTo(83 * scale, 88 * scale, 89 * scale, 88 * scale, 92 * scale, 95 * scale);\r\n            ctx.bezierCurveTo(92 * scale, 105 * scale, 88 * scale, 110 * scale, 86 * scale, 110 * scale);\r\n            ctx.bezierCurveTo(83 * scale, 107 * scale, 82 * scale, 104 * scale, 80 * scale, 96 * scale);\r\n            ctx.closePath();\r\n            fill_path(ctx, color[7], color[8], 3 * scale);\r\n            ctx.beginPath();\r\n            ctx.lineCap = \"round\";\r\n            ctx.lineJoin = \"round\";\r\n            ctx.moveTo(81 * scale, 100 * scale);\r\n            ctx.bezierCurveTo(82 * scale, 97 * scale, 83 * scale, 96 * scale, 85 * scale, 96 * scale);\r\n            ctx.bezierCurveTo(82 * scale, 100 * scale, 82 * scale, 101 * scale, 83 * scale, 103 * scale);\r\n            ctx.closePath();\r\n            fill_path(ctx, color[8]);\r\n            ctx.beginPath();\r\n            ctx.lineCap = \"round\";\r\n            ctx.lineJoin = \"round\";\r\n            ctx.moveTo(83 * scale, 103 * scale);\r\n            ctx.bezierCurveTo(83 * scale, 102 * scale, 84 * scale, 100 * scale, 86 * scale, 100 * scale);\r\n            ctx.bezierCurveTo(84 * scale, 103 * scale, 84 * scale, 105 * scale, 84 * scale, 106 * scale);\r\n            ctx.closePath();\r\n            fill_path(ctx, color[8]);\r\n            ctx.translate(27 * scale, 10 * scale);\r\n            circle(ctx, 35 * scale, 75 * scale, 15 * scale);\r\n            fill_path(ctx, color[3]);\r\n            circle(ctx, 85 * scale, 75 * scale, 15 * scale);\r\n            fill_path(ctx, color[3]);\r\n            circle(ctx, 32 * scale, 67 * scale, 5 * scale);\r\n            fill_path(ctx, color[4]);\r\n            circle(ctx, 82 * scale, 67 * scale, 5 * scale);\r\n            fill_path(ctx, color[4]);\r\n        } else if (i == 2) {\r\n            ctx.beginPath();\r\n            ctx.lineCap = \"round\";\r\n            ctx.lineJoin = \"round\";\r\n            ctx.moveTo(48 * scale, 22 * scale);\r\n            ctx.bezierCurveTo(85.5 * scale, 22 * scale, 85.5 * scale, 22 * scale, 123 * scale, 22 * scale);\r\n            ctx.bezierCurveTo(138 * scale, 23 * scale, 147 * scale, 34 * scale, 143 * scale, 62 * scale);\r\n            ctx.bezierCurveTo(142 * scale, 67 * scale, 144 * scale, 70 * scale, 149 * scale, 73 * scale);\r\n            ctx.bezierCurveTo(147 * scale, 77 * scale, 145 * scale, 77 * scale, 143 * scale, 77 * scale);\r\n            ctx.bezierCurveTo(141 * scale, 85 * scale, 145 * scale, 92 * scale, 148 * scale, 97 * scale);\r\n            ctx.bezierCurveTo(142 * scale, 103 * scale, 134 * scale, 105 * scale, 121 * scale, 106 * scale);\r\n            ctx.bezierCurveTo(85 * scale, 106 * scale, 85 * scale, 106 * scale, 49 * scale, 106 * scale);\r\n            ctx.bezierCurveTo(32 * scale, 104 * scale, 29 * scale, 101 * scale, 24 * scale, 95 * scale);\r\n            ctx.bezierCurveTo(30 * scale, 86 * scale, 31 * scale, 85 * scale, 30 * scale, 78 * scale);\r\n            ctx.bezierCurveTo(27.5 * scale, 76 * scale, 27.5 * scale, 76 * scale, 25 * scale, 74 * scale);\r\n            ctx.bezierCurveTo(31 * scale, 68 * scale, 31 * scale, 60 * scale, 30 * scale, 46 * scale);\r\n            ctx.bezierCurveTo(31 * scale, 31 * scale, 37 * scale, 23 * scale, 47 * scale, 22 * scale);\r\n            ctx.closePath();\r\n            fill_path(ctx, color[1], color[2], 4 * scale);\r\n            ctx.beginPath();\r\n            ctx.lineCap = \"round\";\r\n            ctx.lineJoin = \"round\";\r\n            ctx.moveTo(30 * scale, 44 * scale);\r\n            ctx.bezierCurveTo(66 * scale, 48 * scale, 99 * scale, 45 * scale, 141 * scale, 39 * scale);\r\n            fill_path(ctx, undefined, color[3], 4 * scale);\r\n            ctx.beginPath();\r\n            ctx.lineCap = \"round\";\r\n            ctx.lineJoin = \"round\";\r\n            ctx.moveTo(30 * scale, 67 * scale);\r\n            ctx.bezierCurveTo(80 * scale, 44 * scale, 118 * scale, 43 * scale, 141 * scale, 60 * scale);\r\n            fill_path(ctx, undefined, color[3], 4 * scale);\r\n            ctx.globalAlpha = 0.4;\r\n            circle(ctx, 31 * scale, 44 * scale, 9 * scale);\r\n            fill_path(ctx, color[4]);\r\n            circle(ctx, 42 * scale, 47 * scale, 9 * scale);\r\n            fill_path(ctx, color[5]);\r\n            circle(ctx, 70 * scale, 42 * scale, 9 * scale);\r\n            fill_path(ctx, color[6]);\r\n            circle(ctx, 53 * scale, 45 * scale, 9 * scale);\r\n            fill_path(ctx, color[7]);\r\n            circle(ctx, 103 * scale, 40 * scale, 9 * scale);\r\n            fill_path(ctx, color[8]);\r\n            circle(ctx, 116 * scale, 41 * scale, 9 * scale);\r\n            fill_path(ctx, color[5]);\r\n            circle(ctx, 131 * scale, 41 * scale, 9 * scale);\r\n            fill_path(ctx, color[4]);\r\n            circle(ctx, 39 * scale, 64 * scale, 9 * scale);\r\n            fill_path(ctx, color[7]);\r\n            circle(ctx, 51 * scale, 60 * scale, 9 * scale);\r\n            fill_path(ctx, color[6]);\r\n            circle(ctx, 74 * scale, 53 * scale, 9 * scale);\r\n            fill_path(ctx, color[4]);\r\n            circle(ctx, 83 * scale, 51 * scale, 9 * scale);\r\n            fill_path(ctx, color[8]);\r\n            circle(ctx, 95 * scale, 51 * scale, 9 * scale);\r\n            fill_path(ctx, color[6]);\r\n            circle(ctx, 107 * scale, 49 * scale, 9 * scale);\r\n            fill_path(ctx, color[7]);\r\n            circle(ctx, 120 * scale, 50 * scale, 9 * scale);\r\n            fill_path(ctx, color[4]);\r\n            circle(ctx, 137 * scale, 57 * scale, 9 * scale);\r\n            fill_path(ctx, color[5]);\r\n            ctx.globalAlpha = 1;\r\n            circle(ctx, 31 * scale, 44 * scale, 4 * scale);\r\n            fill_path(ctx, color[4]);\r\n            circle(ctx, 42 * scale, 47 * scale, 4 * scale);\r\n            fill_path(ctx, color[5]);\r\n            circle(ctx, 53 * scale, 45 * scale, 4 * scale);\r\n            fill_path(ctx, color[7]);\r\n            circle(ctx, 70 * scale, 43 * scale, 4 * scale);\r\n            fill_path(ctx, color[6]);\r\n            circle(ctx, 50 * scale, 59 * scale, 4 * scale);\r\n            fill_path(ctx, color[6]);\r\n            circle(ctx, 39 * scale, 64 * scale, 4 * scale);\r\n            fill_path(ctx, color[7]);\r\n            circle(ctx, 83 * scale, 51 * scale, 4 * scale);\r\n            fill_path(ctx, color[4]);\r\n            circle(ctx, 74 * scale, 53 * scale, 4 * scale);\r\n            fill_path(ctx, color[8]);\r\n            circle(ctx, 95 * scale, 51 * scale, 4 * scale);\r\n            fill_path(ctx, color[6]);\r\n            circle(ctx, 103 * scale, 41 * scale, 4 * scale);\r\n            fill_path(ctx, color[8]);\r\n            circle(ctx, 107 * scale, 49 * scale, 4 * scale);\r\n            fill_path(ctx, color[7]);\r\n            circle(ctx, 116 * scale, 41 * scale, 4 * scale);\r\n            fill_path(ctx, color[5]);\r\n            circle(ctx, 131 * scale, 41 * scale, 4 * scale);\r\n            fill_path(ctx, color[4]);\r\n            circle(ctx, 137 * scale, 57 * scale, 4 * scale);\r\n            fill_path(ctx, color[5]);\r\n            circle(ctx, 120 * scale, 50 * scale, 4 * scale);\r\n            fill_path(ctx, color[4]);\r\n            ctx.translate(27 * scale, 10 * scale);\r\n            circle(ctx, 35 * scale, 75 * scale, 15 * scale);\r\n            fill_path(ctx, color[9]);\r\n            circle(ctx, 85 * scale, 75 * scale, 15 * scale);\r\n            fill_path(ctx, color[9]);\r\n            circle(ctx, 32 * scale, 67 * scale, 5 * scale);\r\n            fill_path(ctx, color[10]);\r\n            circle(ctx, 82 * scale, 67 * scale, 5 * scale);\r\n            fill_path(ctx, color[10]);\r\n        } else if (i == 3) {\r\n            ctx.beginPath();\r\n            ctx.lineCap = \"round\";\r\n            ctx.lineJoin = \"round\";\r\n            ctx.moveTo(23 * scale, 95 * scale);\r\n            ctx.bezierCurveTo(30 * scale, 85 * scale, 30 * scale, 83 * scale, 30 * scale, 72 * scale);\r\n            ctx.bezierCurveTo(30 * scale, 61.5 * scale, 30 * scale, 61.5 * scale, 30 * scale, 51 * scale);\r\n            ctx.bezierCurveTo(29 * scale, 33 * scale, 42 * scale, 23 * scale, 54 * scale, 24 * scale);\r\n            ctx.bezierCurveTo(86.5 * scale, 24 * scale, 86.5 * scale, 24 * scale, 119 * scale, 24 * scale);\r\n            ctx.bezierCurveTo(135 * scale, 24 * scale, 143 * scale, 33 * scale, 143 * scale, 47 * scale);\r\n            ctx.bezierCurveTo(143 * scale, 63.5 * scale, 143 * scale, 63.5 * scale, 143 * scale, 80 * scale);\r\n            ctx.bezierCurveTo(142 * scale, 86 * scale, 147 * scale, 93 * scale, 150 * scale, 96 * scale);\r\n            ctx.bezierCurveTo(144 * scale, 107 * scale, 113 * scale, 112 * scale, 84 * scale, 111 * scale);\r\n            ctx.bezierCurveTo(52 * scale, 112 * scale, 34 * scale, 106 * scale, 23 * scale, 96 * scale);\r\n            ctx.closePath();\r\n            fill_path(ctx, color[1], color[2], 4 * scale);\r\n            ctx.beginPath();\r\n            ctx.lineCap = \"round\";\r\n            ctx.lineJoin = \"round\";\r\n            ctx.moveTo(30 * scale, 81 * scale);\r\n            ctx.bezierCurveTo(56 * scale, 99 * scale, 104 * scale, 98 * scale, 142 * scale, 84 * scale);\r\n            ctx.bezierCurveTo(145.5 * scale, 89.5 * scale, 145.5 * scale, 89.5 * scale, 149 * scale, 95 * scale);\r\n            ctx.bezierCurveTo(142 * scale, 106 * scale, 127 * scale, 110 * scale, 81 * scale, 110 * scale);\r\n            ctx.bezierCurveTo(36 * scale, 112 * scale, 28 * scale, 99 * scale, 23 * scale, 95 * scale);\r\n            ctx.bezierCurveTo(31 * scale, 87 * scale, 31 * scale, 82 * scale, 30 * scale, 81 * scale);\r\n            ctx.closePath();\r\n            fill_path(ctx, color[3], color[2], 4 * scale);\r\n            ctx.beginPath();\r\n            ctx.lineCap = \"round\";\r\n            ctx.lineJoin = \"round\";\r\n            ctx.moveTo(23 * scale, 95 * scale);\r\n            ctx.bezierCurveTo(30 * scale, 85 * scale, 30 * scale, 83 * scale, 30 * scale, 72 * scale);\r\n            ctx.bezierCurveTo(30 * scale, 61.5 * scale, 30 * scale, 61.5 * scale, 30 * scale, 51 * scale);\r\n            ctx.bezierCurveTo(29 * scale, 33 * scale, 42 * scale, 23 * scale, 54 * scale, 24 * scale);\r\n            ctx.bezierCurveTo(86.5 * scale, 24 * scale, 86.5 * scale, 24 * scale, 119 * scale, 24 * scale);\r\n            ctx.bezierCurveTo(135 * scale, 24 * scale, 143 * scale, 33 * scale, 143 * scale, 47 * scale);\r\n            ctx.bezierCurveTo(143 * scale, 63.5 * scale, 143 * scale, 63.5 * scale, 143 * scale, 80 * scale);\r\n            ctx.bezierCurveTo(142 * scale, 86 * scale, 147 * scale, 93 * scale, 150 * scale, 96 * scale);\r\n            ctx.bezierCurveTo(144 * scale, 107 * scale, 113 * scale, 112 * scale, 84 * scale, 111 * scale);\r\n            ctx.bezierCurveTo(52 * scale, 112 * scale, 34 * scale, 106 * scale, 23 * scale, 96 * scale);\r\n            ctx.closePath();\r\n            fill_path(ctx, undefined, color[2], 4 * scale);\r\n            ctx.translate(27 * scale, 10 * scale);\r\n            circle(ctx, 35 * scale, 75 * scale, 15 * scale);\r\n            fill_path(ctx, color[6]);\r\n            circle(ctx, 85 * scale, 75 * scale, 15 * scale);\r\n            fill_path(ctx, color[6]);\r\n            circle(ctx, 32 * scale, 67 * scale, 5 * scale);\r\n            fill_path(ctx, color[7]);\r\n            circle(ctx, 82 * scale, 67 * scale, 5 * scale);\r\n            fill_path(ctx, color[7]);\r\n            ctx.translate(-96 * scale, -25 * scale);\r\n            ctx.scale(1.8, 1.8);\r\n            ctx.beginPath();\r\n            ctx.lineCap = \"round\";\r\n            ctx.lineJoin = \"round\";\r\n            ctx.moveTo(85 * scale, 21 * scale);\r\n            ctx.bezierCurveTo(73 * scale, 16 * scale, 70 * scale, 16 * scale, 70 * scale, 26 * scale);\r\n            ctx.bezierCurveTo(72 * scale, 34 * scale, 75 * scale, 37 * scale, 85 * scale, 26 * scale);\r\n            ctx.closePath();\r\n            fill_path(ctx, color[4], color[5], 3 * scale);\r\n            ctx.beginPath();\r\n            ctx.lineCap = \"round\";\r\n            ctx.lineJoin = \"round\";\r\n            ctx.moveTo(89 * scale, 21 * scale);\r\n            ctx.bezierCurveTo(104 * scale, 16 * scale, 105 * scale, 19 * scale, 106 * scale, 24 * scale);\r\n            ctx.bezierCurveTo(105 * scale, 36 * scale, 97 * scale, 36 * scale, 90 * scale, 28 * scale);\r\n            ctx.closePath();\r\n            fill_path(ctx, color[4], color[5], 3 * scale);\r\n            circle(ctx, 87 * scale, 23 * scale, 6.324555320336759 * scale);\r\n            fill_path(ctx, color[4], color[5], 3 * scale);\r\n        } else if (i == 4) {\r\n            ctx.translate(27 * scale, 8 * scale);\r\n            circle(ctx, 15 * scale, 76 * scale, 9.219544457292887 * scale);\r\n            fill_path(ctx, color[3]);\r\n            circle(ctx, 106 * scale, 76 * scale, 9.219544457292887 * scale);\r\n            fill_path(ctx, color[3]);\r\n            ctx.translate(-27 * scale, -8 * scale);\r\n            ctx.translate(27 * scale, 10 * scale);\r\n            circle(ctx, 35 * scale, 75 * scale, 15 * scale);\r\n            fill_path(ctx, color[5]);\r\n            circle(ctx, 85 * scale, 75 * scale, 15 * scale);\r\n            fill_path(ctx, color[5]);\r\n            circle(ctx, 32 * scale, 67 * scale, 5 * scale);\r\n            fill_path(ctx, color[6]);\r\n            circle(ctx, 82 * scale, 67 * scale, 5 * scale);\r\n            fill_path(ctx, color[6]);\r\n            ctx.translate(-27 * scale, -10 * scale);\r\n            ctx.translate(27 * scale, 8 * scale);\r\n            ctx.beginPath();\r\n            ctx.lineCap = \"round\";\r\n            ctx.lineJoin = \"round\";\r\n            ctx.moveTo(52 * scale, 86 * scale);\r\n            ctx.bezierCurveTo(54 * scale, 78 * scale, 65 * scale, 80 * scale, 67 * scale, 85 * scale);\r\n            ctx.bezierCurveTo(69 * scale, 89 * scale, 64 * scale, 99 * scale, 71 * scale, 106 * scale);\r\n            ctx.bezierCurveTo(75 * scale, 109 * scale, 61 * scale, 108 * scale, 58 * scale, 102 * scale);\r\n            ctx.bezierCurveTo(53 * scale, 97 * scale, 52 * scale, 91 * scale, 52 * scale, 86 * scale);\r\n            ctx.closePath();\r\n            fill_path(ctx, color[4]);\r\n        } else if (i == 6) {\r\n            ctx.beginPath();\r\n            ctx.lineCap = \"round\";\r\n            ctx.lineJoin = \"round\";\r\n            ctx.translate(2 * scale, 0);\r\n            ctx.moveTo(28 * scale, 69 * scale);\r\n            ctx.bezierCurveTo(26 * scale, 39 * scale, 31 * scale, 25 * scale, 52 * scale, 24 * scale);\r\n            ctx.bezierCurveTo(86 * scale, 23.5 * scale, 86 * scale, 23.5 * scale, 120 * scale, 23 * scale);\r\n            ctx.bezierCurveTo(137 * scale, 23 * scale, 145 * scale, 33 * scale, 144 * scale, 53 * scale);\r\n            ctx.bezierCurveTo(144.5 * scale, 63 * scale, 144.5 * scale, 63 * scale, 145 * scale, 73 * scale);\r\n            ctx.bezierCurveTo(141 * scale, 41 * scale, 106 * scale, 41 * scale, 98 * scale, 59 * scale);\r\n            ctx.bezierCurveTo(92 * scale, 69 * scale, 94 * scale, 98 * scale, 90 * scale, 95 * scale);\r\n            ctx.bezierCurveTo(86 * scale, 95 * scale, 86 * scale, 95 * scale, 82 * scale, 95 * scale);\r\n            ctx.bezierCurveTo(79 * scale, 94 * scale, 87 * scale, 33 * scale, 48 * scale, 47 * scale);\r\n            ctx.bezierCurveTo(31 * scale, 57 * scale, 30 * scale, 65 * scale, 28 * scale, 72 * scale);\r\n            ctx.closePath();\r\n            fill_path(ctx, color[3]);\r\n            ctx.save();\r\n            ctx.translate(87 * scale, 64.5 * scale);\r\n            round_rect(ctx, -56 * scale, -41.5 * scale, 112 * scale, 83 * scale, 18 * scale);\r\n            ctx.restore();\r\n            fill_path(ctx, undefined, color[2], 4 * scale);\r\n            ctx.translate(27 * scale, 10 * scale);\r\n            circle(ctx, 35 * scale, 75 * scale, 15 * scale);\r\n            fill_path(ctx, color[3]);\r\n            circle(ctx, 85 * scale, 75 * scale, 15 * scale);\r\n            fill_path(ctx, color[3]);\r\n            circle(ctx, 32 * scale, 67 * scale, 5 * scale);\r\n            fill_path(ctx, color[4]);\r\n            circle(ctx, 82 * scale, 67 * scale, 5 * scale);\r\n            fill_path(ctx, color[4]);\r\n            ctx.scale(1.4, 1.4);\r\n            ctx.translate(-43.5 * scale, -32 * scale);\r\n            ctx.beginPath();\r\n            ctx.lineCap = \"round\";\r\n            ctx.lineJoin = \"round\";\r\n            ctx.moveTo(86 * scale, 105 * scale);\r\n            ctx.bezierCurveTo(89 * scale, 103 * scale, 90 * scale, 100 * scale, 92 * scale, 97 * scale);\r\n            ctx.bezierCurveTo(93 * scale, 91 * scale, 85 * scale, 90 * scale, 81 * scale, 95 * scale);\r\n            ctx.bezierCurveTo(80 * scale, 97 * scale, 83 * scale, 101 * scale, 85 * scale, 105 * scale);\r\n            ctx.closePath();\r\n            fill_path(ctx, color[5], color[6], 3 * scale);\r\n        } else if (i == 7) {\r\n            ctx.save();\r\n            ctx.translate(86 * scale, 64.5 * scale);\r\n            round_rect(ctx, -16 * scale, -43.5 * scale, 32 * scale, 87 * scale, 5 * scale);\r\n            ctx.restore();\r\n            fill_path(ctx, color[3], color[4], 4 * scale);\r\n            ctx.translate(0, 6 * scale);\r\n            ctx.globalAlpha = 0.5;\r\n            ctx.save();\r\n            ctx.translate(85.5 * scale, 47 * scale);\r\n            round_rect(ctx, -58.5 * scale, -8 * scale, 117 * scale, 16 * scale, 5 * scale);\r\n            ctx.restore();\r\n            fill_path(ctx, color[0]);\r\n            ctx.translate(0, -6 * scale);\r\n            ctx.globalAlpha = 1;\r\n            ctx.save();\r\n            ctx.translate(85.5 * scale, 47 * scale);\r\n            round_rect(ctx, -58.5 * scale, -8 * scale, 117 * scale, 16 * scale, 5 * scale);\r\n            ctx.restore();\r\n            fill_path(ctx, color[3], color[4], 4 * scale);\r\n            ctx.translate(0, 7 * scale);\r\n            ctx.globalAlpha = 0.5;\r\n            ctx.beginPath();\r\n            ctx.lineCap = \"round\";\r\n            ctx.lineJoin = \"round\";\r\n            ctx.moveTo(84 * scale, 44 * scale);\r\n            ctx.bezierCurveTo(85 * scale, 26 * scale, 96 * scale, 23 * scale, 103 * scale, 30 * scale);\r\n            ctx.bezierCurveTo(110 * scale, 36 * scale, 110 * scale, 47 * scale, 92 * scale, 50 * scale);\r\n            ctx.closePath();\r\n            fill_path(ctx, color[0]);\r\n            ctx.beginPath();\r\n            ctx.lineCap = \"round\";\r\n            ctx.lineJoin = \"round\";\r\n            ctx.moveTo(87 * scale, 44 * scale);\r\n            ctx.bezierCurveTo(108 * scale, 47 * scale, 109 * scale, 54 * scale, 102 * scale, 63 * scale);\r\n            ctx.bezierCurveTo(92 * scale, 77 * scale, 80 * scale, 61 * scale, 84 * scale, 49 * scale);\r\n            ctx.closePath();\r\n            fill_path(ctx, color[0]);\r\n            ctx.beginPath();\r\n            ctx.lineCap = \"round\";\r\n            ctx.lineJoin = \"round\";\r\n            ctx.moveTo(84 * scale, 43 * scale);\r\n            ctx.bezierCurveTo(86 * scale, 24 * scale, 72 * scale, 23 * scale, 68 * scale, 31 * scale);\r\n            ctx.bezierCurveTo(56 * scale, 42 * scale, 70 * scale, 49 * scale, 81 * scale, 47 * scale);\r\n            ctx.closePath();\r\n            fill_path(ctx, color[0]);\r\n            ctx.beginPath();\r\n            ctx.lineCap = \"round\";\r\n            ctx.lineJoin = \"round\";\r\n            ctx.moveTo(78 * scale, 45 * scale);\r\n            ctx.bezierCurveTo(61 * scale, 49 * scale, 60 * scale, 58 * scale, 68 * scale, 64 * scale);\r\n            ctx.bezierCurveTo(78 * scale, 75 * scale, 84 * scale, 65 * scale, 89 * scale, 54 * scale);\r\n            ctx.closePath();\r\n            fill_path(ctx, color[0]);\r\n            ctx.translate(0, -7 * scale);\r\n            ctx.globalAlpha = 1;\r\n            ctx.beginPath();\r\n            ctx.lineCap = \"round\";\r\n            ctx.lineJoin = \"round\";\r\n            ctx.moveTo(84 * scale, 44 * scale);\r\n            ctx.bezierCurveTo(85 * scale, 26 * scale, 96 * scale, 23 * scale, 103 * scale, 30 * scale);\r\n            ctx.bezierCurveTo(110 * scale, 36 * scale, 110 * scale, 47 * scale, 92 * scale, 50 * scale);\r\n            ctx.closePath();\r\n            fill_path(ctx, color[3], color[4], 4 * scale);\r\n            ctx.beginPath();\r\n            ctx.lineCap = \"round\";\r\n            ctx.lineJoin = \"round\";\r\n            ctx.moveTo(87 * scale, 44 * scale);\r\n            ctx.bezierCurveTo(108 * scale, 47 * scale, 109 * scale, 54 * scale, 102 * scale, 63 * scale);\r\n            ctx.bezierCurveTo(92 * scale, 77 * scale, 80 * scale, 61 * scale, 84 * scale, 49 * scale);\r\n            ctx.closePath();\r\n            fill_path(ctx, color[3], color[4], 4 * scale);\r\n            ctx.beginPath();\r\n            ctx.lineCap = \"round\";\r\n            ctx.lineJoin = \"round\";\r\n            ctx.moveTo(84 * scale, 43 * scale);\r\n            ctx.bezierCurveTo(86 * scale, 24 * scale, 72 * scale, 23 * scale, 68 * scale, 31 * scale);\r\n            ctx.bezierCurveTo(56 * scale, 42 * scale, 70 * scale, 49 * scale, 81 * scale, 47 * scale);\r\n            ctx.closePath();\r\n            fill_path(ctx, color[3], color[4], 4 * scale);\r\n            ctx.beginPath();\r\n            ctx.lineCap = \"round\";\r\n            ctx.lineJoin = \"round\";\r\n            ctx.moveTo(78 * scale, 45 * scale);\r\n            ctx.bezierCurveTo(61 * scale, 49 * scale, 60 * scale, 58 * scale, 68 * scale, 64 * scale);\r\n            ctx.bezierCurveTo(78 * scale, 75 * scale, 84 * scale, 65 * scale, 89 * scale, 54 * scale);\r\n            ctx.closePath();\r\n            fill_path(ctx, color[3], color[4], 4 * scale);\r\n            ctx.translate(0, 6 * scale);\r\n            ctx.globalAlpha = 0.5;\r\n            ctx.save();\r\n            ctx.translate(85 * scale, 47.5 * scale);\r\n            ctx.rotate(0);\r\n            round_rect(ctx, -10 * scale, -10.5 * scale, 20 * scale, 21 * scale, 5 * scale);\r\n            ctx.restore();\r\n            fill_path(ctx, color[0]);\r\n            ctx.translate(0, -6 * scale);\r\n            ctx.globalAlpha = 1;\r\n            ctx.save();\r\n            ctx.translate(85 * scale, 47.5 * scale);\r\n            ctx.rotate(0);\r\n            round_rect(ctx, -10 * scale, -10.5 * scale, 20 * scale, 21 * scale, 5 * scale);\r\n            ctx.restore();\r\n            fill_path(ctx, color[3], color[4], 4 * scale);\r\n            ctx.translate(27 * scale, 10 * scale);\r\n            circle(ctx, 35 * scale, 75 * scale, 15 * scale);\r\n            fill_path(ctx, color[5]);\r\n            circle(ctx, 85 * scale, 75 * scale, 15 * scale);\r\n            fill_path(ctx, color[5]);\r\n            circle(ctx, 32 * scale, 67 * scale, 5 * scale);\r\n            fill_path(ctx, color[6]);\r\n            circle(ctx, 82 * scale, 67 * scale, 5 * scale);\r\n            fill_path(ctx, color[6]);\r\n        } else if (i == 5) {\r\n            can.width = 211 * scale;\r\n            can.height = 152 * scale;\r\n            ctx.globalAlpha = 0.5;\r\n            ctx.translate(0, 8 * scale);\r\n            ctx.save();\r\n            ctx.translate(105.5 * scale, 76.5 * scale);\r\n            round_rect(ctx, -56 * scale, -41.5 * scale, 112 * scale, 83 * scale, 18 * scale);\r\n            ctx.restore();\r\n            fill_path(ctx, color[0]);\r\n            ctx.globalAlpha = 1;\r\n            ctx.translate(0, -8 * scale);\r\n            ctx.save();\r\n            ctx.translate(105.5 * scale, 76.5 * scale);\r\n            round_rect(ctx, -56 * scale, -41.5 * scale, 112 * scale, 83 * scale, 18 * scale);\r\n            ctx.restore();\r\n            fill_path(ctx, color[1], color[2], 4 * scale);\r\n            ctx.beginPath();\r\n            ctx.lineCap = \"round\";\r\n            ctx.lineJoin = \"round\";\r\n            ctx.moveTo(68 * scale, 39 * scale);\r\n            ctx.bezierCurveTo(48 * scale, 37 * scale, 43 * scale, 27 * scale, 40 * scale, 12 * scale);\r\n            ctx.bezierCurveTo(31 * scale, 25 * scale, 20 * scale, 17 * scale, 11 * scale, 9 * scale);\r\n            ctx.bezierCurveTo(9 * scale, 41 * scale, 40 * scale, 44 * scale, 62 * scale, 45 * scale);\r\n            ctx.closePath();\r\n            fill_path(ctx, color[3], color[2], 4 * scale);\r\n            ctx.beginPath();\r\n            ctx.lineCap = \"round\";\r\n            ctx.lineJoin = \"round\";\r\n            ctx.moveTo(143 * scale, 38 * scale);\r\n            ctx.bezierCurveTo(161 * scale, 40 * scale, 169 * scale, 24 * scale, 171 * scale, 13 * scale);\r\n            ctx.bezierCurveTo(181 * scale, 23 * scale, 188 * scale, 20 * scale, 199 * scale, 9 * scale);\r\n            ctx.bezierCurveTo(204 * scale, 35 * scale, 182 * scale, 44 * scale, 152 * scale, 45 * scale);\r\n            ctx.closePath();\r\n            fill_path(ctx, color[3], color[2], 4 * scale);\r\n            ctx.save();\r\n            ctx.translate(105.5 * scale, 76.5 * scale);\r\n            round_rect(ctx, -55 * scale, -40.5 * scale, 106 * scale, 77 * scale, 18 * scale);\r\n            ctx.restore();\r\n            fill_path(ctx, color[1]);\r\n            ctx.beginPath();\r\n            ctx.lineCap = \"round\";\r\n            ctx.lineJoin = \"round\";\r\n            ctx.moveTo(149 * scale, 45 * scale);\r\n            ctx.bezierCurveTo(155 * scale, 37 * scale, 158 * scale, 37 * scale, 161 * scale, 52 * scale);\r\n            ctx.bezierCurveTo(164 * scale, 60 * scale, 161 * scale, 65 * scale, 152 * scale, 58 * scale);\r\n            ctx.bezierCurveTo(145 * scale, 51 * scale, 143 * scale, 49 * scale, 149 * scale, 45 * scale);\r\n            ctx.closePath();\r\n            fill_path(ctx, color[4], color[2], 4 * scale);\r\n            ctx.beginPath();\r\n            ctx.lineCap = \"round\";\r\n            ctx.lineJoin = \"round\";\r\n            ctx.moveTo(60 * scale, 43 * scale);\r\n            ctx.bezierCurveTo(67 * scale, 47 * scale, 67 * scale, 51 * scale, 57 * scale, 59 * scale);\r\n            ctx.bezierCurveTo(50 * scale, 64 * scale, 47 * scale, 64 * scale, 49 * scale, 55 * scale);\r\n            ctx.bezierCurveTo(49 * scale, 42 * scale, 51 * scale, 38 * scale, 59 * scale, 42 * scale);\r\n            ctx.closePath();\r\n            fill_path(ctx, color[4], color[2], 4 * scale);\r\n            circle(ctx, 105 * scale, 107 * scale, 10.63014581273465 * scale);\r\n            fill_path(ctx, color[5], color[6], 4 * scale);\r\n            ctx.beginPath();\r\n            ctx.lineCap = \"round\";\r\n            ctx.lineJoin = \"round\";\r\n            ctx.moveTo(105 * scale, 100 * scale);\r\n            ctx.bezierCurveTo(111 * scale, 101 * scale, 113 * scale, 104 * scale, 112 * scale, 109 * scale);\r\n            ctx.closePath();\r\n            fill_path(ctx, color[7]);\r\n            ctx.translate(44.5 * scale, 22 * scale);\r\n            circle(ctx, 35 * scale, 75 * scale, 15 * scale);\r\n            fill_path(ctx, color[8]);\r\n            circle(ctx, 85 * scale, 75 * scale, 15 * scale);\r\n            fill_path(ctx, color[8]);\r\n            circle(ctx, 32 * scale, 67 * scale, 5 * scale);\r\n            fill_path(ctx, color[9]);\r\n            circle(ctx, 82 * scale, 67 * scale, 5 * scale);\r\n            fill_path(ctx, color[9]);\r\n        } else if (i == 9) {\r\n            ctx.save();\r\n            ctx.translate(110 * scale, 22 * scale);\r\n            round_rect(ctx, -16 * scale, -5 * scale, 32 * scale, 10 * scale, 10 * scale);\r\n            ctx.restore();\r\n            fill_path(ctx, color[1], color[2], 3 * scale);\r\n            ctx.save();\r\n            ctx.translate(109.5 * scale, 17 * scale);\r\n            round_rect(ctx, -18.5 * scale, -3 * scale, 37 * scale, 6 * scale, 10 * scale);\r\n            ctx.restore();\r\n            fill_path(ctx, color[3], color[4], 3 * scale);\r\n            ctx.globalAlpha = 0.5;\r\n            ctx.translate(0, 5 * scale);\r\n            ctx.save();\r\n            ctx.translate(86 * scale, 40 * scale);\r\n            round_rect(ctx, -58 * scale, -9 * scale, 116 * scale, 18 * scale, 6 * scale);\r\n            ctx.restore();\r\n            fill_path(ctx, color[0]);\r\n            ctx.globalAlpha = 1;\r\n            ctx.translate(0, -5 * scale);\r\n            ctx.save();\r\n            ctx.translate(86 * scale, 40 * scale);\r\n            round_rect(ctx, -58 * scale, -9 * scale, 116 * scale, 18 * scale, 6 * scale);\r\n            ctx.restore();\r\n            fill_path(ctx, color[3], color[4], 3 * scale);\r\n            ctx.globalAlpha = 0.75;\r\n            ctx.translate(0, 5 * scale);\r\n            ctx.beginPath();\r\n            ctx.lineCap = \"round\";\r\n            ctx.lineJoin = \"round\";\r\n            ctx.moveTo(109 * scale, 47 * scale);\r\n            ctx.bezierCurveTo(110.5 * scale, 45 * scale, 110.5 * scale, 45 * scale, 112 * scale, 43 * scale);\r\n            ctx.bezierCurveTo(114 * scale, 44 * scale, 114 * scale, 44 * scale, 116 * scale, 45 * scale);\r\n            ctx.bezierCurveTo(117.5 * scale, 43 * scale, 117.5 * scale, 43 * scale, 119 * scale, 41 * scale);\r\n            ctx.bezierCurveTo(121 * scale, 41.5 * scale, 121 * scale, 41.5 * scale, 123 * scale, 42 * scale);\r\n            ctx.closePath();\r\n            fill_path(ctx, color[0]);\r\n            ctx.beginPath();\r\n            ctx.translate(0, 5 * scale);\r\n            ctx.lineCap = \"round\";\r\n            ctx.lineJoin = \"round\";\r\n            ctx.moveTo(54 * scale, 35 * scale);\r\n            ctx.bezierCurveTo(61.5 * scale, 35 * scale, 61.5 * scale, 35 * scale, 69 * scale, 35 * scale);\r\n            ctx.bezierCurveTo(70 * scale, 48 * scale, 70 * scale, 60 * scale, 60 * scale, 59 * scale);\r\n            ctx.bezierCurveTo(45 * scale, 61 * scale, 44 * scale, 60 * scale, 43 * scale, 53 * scale);\r\n            ctx.bezierCurveTo(42 * scale, 49 * scale, 55 * scale, 51 * scale, 55 * scale, 44 * scale);\r\n            ctx.closePath();\r\n            fill_path(ctx, color[0]);\r\n            ctx.globalAlpha = 1;\r\n            ctx.translate(0, -5 * scale);\r\n            ctx.beginPath();\r\n            ctx.lineCap = \"round\";\r\n            ctx.lineJoin = \"round\";\r\n            ctx.moveTo(105 * scale, 38 * scale);\r\n            ctx.bezierCurveTo(110 * scale, 48 * scale, 110 * scale, 50 * scale, 105 * scale, 53 * scale);\r\n            ctx.bezierCurveTo(98 * scale, 62 * scale, 107 * scale, 66 * scale, 117 * scale, 60 * scale);\r\n            ctx.bezierCurveTo(128 * scale, 56 * scale, 130 * scale, 56 * scale, 126 * scale, 49 * scale);\r\n            ctx.bezierCurveTo(123.5 * scale, 41.5 * scale, 123.5 * scale, 41.5 * scale, 121 * scale, 34 * scale);\r\n            ctx.closePath();\r\n            fill_path(ctx, color[7], color[8], 3 * scale);\r\n            ctx.beginPath();\r\n            ctx.lineCap = \"round\";\r\n            ctx.lineJoin = \"round\";\r\n            ctx.moveTo(109 * scale, 47 * scale);\r\n            ctx.bezierCurveTo(110.5 * scale, 45 * scale, 110.5 * scale, 45 * scale, 112 * scale, 43 * scale);\r\n            ctx.bezierCurveTo(114 * scale, 44 * scale, 114 * scale, 44 * scale, 116 * scale, 45 * scale);\r\n            ctx.bezierCurveTo(117.5 * scale, 43 * scale, 117.5 * scale, 43 * scale, 119 * scale, 41 * scale);\r\n            ctx.bezierCurveTo(121 * scale, 41.5 * scale, 121 * scale, 41.5 * scale, 123 * scale, 42 * scale);\r\n            ctx.closePath();\r\n            fill_path(ctx, undefined, color[6], 3 * scale);\r\n            ctx.beginPath();\r\n            ctx.lineCap = \"round\";\r\n            ctx.lineJoin = \"round\";\r\n            ctx.moveTo(84 * scale, 33 * scale);\r\n            ctx.bezierCurveTo(88.5 * scale, 34.5 * scale, 88.5 * scale, 34.5 * scale, 93 * scale, 36 * scale);\r\n            ctx.bezierCurveTo(87 * scale, 43 * scale, 88 * scale, 45 * scale, 91 * scale, 46 * scale);\r\n            ctx.bezierCurveTo(98 * scale, 56 * scale, 91 * scale, 57 * scale, 85 * scale, 53 * scale);\r\n            ctx.bezierCurveTo(80 * scale, 50 * scale, 78 * scale, 49 * scale, 82 * scale, 43 * scale);\r\n            ctx.bezierCurveTo(83.5 * scale, 38 * scale, 83.5 * scale, 38 * scale, 85 * scale, 33 * scale);\r\n            ctx.closePath();\r\n            fill_path(ctx, color[5], color[6], 3 * scale);\r\n            ctx.beginPath();\r\n            ctx.lineCap = \"round\";\r\n            ctx.lineJoin = \"round\";\r\n            ctx.moveTo(54 * scale, 35 * scale);\r\n            ctx.bezierCurveTo(61.5 * scale, 35 * scale, 61.5 * scale, 35 * scale, 69 * scale, 35 * scale);\r\n            ctx.bezierCurveTo(70 * scale, 48 * scale, 70 * scale, 60 * scale, 60 * scale, 59 * scale);\r\n            ctx.bezierCurveTo(45 * scale, 61 * scale, 44 * scale, 60 * scale, 43 * scale, 53 * scale);\r\n            ctx.bezierCurveTo(42 * scale, 49 * scale, 55 * scale, 51 * scale, 55 * scale, 44 * scale);\r\n            ctx.closePath();\r\n            fill_path(ctx, color[7], color[8], 3 * scale);\r\n            ctx.beginPath();\r\n            ctx.lineCap = \"round\";\r\n            ctx.lineJoin = \"round\";\r\n            ctx.moveTo(48 * scale, 49 * scale);\r\n            ctx.bezierCurveTo(50 * scale, 50 * scale, 50 * scale, 50 * scale, 52 * scale, 51 * scale);\r\n            ctx.bezierCurveTo(50.5 * scale, 52 * scale, 50.5 * scale, 52 * scale, 49 * scale, 53 * scale);\r\n            ctx.bezierCurveTo(51 * scale, 54.5 * scale, 51 * scale, 54.5 * scale, 53 * scale, 56 * scale);\r\n            ctx.bezierCurveTo(51 * scale, 57.5 * scale, 51 * scale, 57.5 * scale, 49 * scale, 59 * scale);\r\n            ctx.closePath();\r\n            fill_path(ctx, undefined, color[6], 3 * scale);\r\n            ctx.beginPath();\r\n            ctx.lineCap = \"round\";\r\n            ctx.lineJoin = \"round\";\r\n            ctx.moveTo(54 * scale, 39 * scale);\r\n            ctx.bezierCurveTo(61.5 * scale, 39.5 * scale, 61.5 * scale, 39.5 * scale, 69 * scale, 40 * scale);\r\n            ctx.closePath();\r\n            fill_path(ctx, undefined, color[6], 3 * scale);\r\n            ctx.beginPath();\r\n            ctx.lineCap = \"round\";\r\n            ctx.lineJoin = \"round\";\r\n            ctx.moveTo(55 * scale, 43 * scale);\r\n            ctx.bezierCurveTo(61.5 * scale, 43.5 * scale, 61.5 * scale, 43.5 * scale, 68 * scale, 44 * scale);\r\n            ctx.closePath();\r\n            fill_path(ctx, undefined, color[6], 3 * scale);\r\n            ctx.translate(27 * scale, 5 * scale);\r\n            circle(ctx, 35 * scale, 75 * scale, 15 * scale);\r\n            fill_path(ctx, color[9]);\r\n            circle(ctx, 85 * scale, 75 * scale, 15 * scale);\r\n            fill_path(ctx, color[9]);\r\n            circle(ctx, 32 * scale, 67 * scale, 5 * scale);\r\n            fill_path(ctx, color[10]);\r\n            circle(ctx, 82 * scale, 67 * scale, 5 * scale);\r\n            fill_path(ctx, color[10]);\r\n        }\r\n    }\r\n    return can;\r\n}\r\n;\r\nfunction create_robotskin(scale, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 350 * scale;\r\n    can.height = 350 * scale;\r\n    ctx.translate(0, 15 * scale);\r\n    ctx.globalAlpha = 0.5;\r\n    ctx.save();\r\n    ctx.translate(174 * scale, 172 * scale);\r\n    round_rect(ctx, -81 * scale, -60 * scale, 162 * scale, 120 * scale, 26 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0]);\r\n    ctx.translate(0, -15 * scale);\r\n    ctx.globalAlpha = 1;\r\n    ctx.save();\r\n    ctx.translate(174 * scale, 172 * scale);\r\n    round_rect(ctx, -81 * scale, -60 * scale, 162 * scale, 120 * scale, 26 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[1], color[2], 7 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(179 * scale, 211 * scale);\r\n    ctx.bezierCurveTo(183 * scale, 204.5 * scale, 183 * scale, 204.5 * scale, 187 * scale, 198 * scale);\r\n    ctx.bezierCurveTo(198.5 * scale, 191.5 * scale, 198.5 * scale, 191.5 * scale, 210 * scale, 185 * scale);\r\n    ctx.bezierCurveTo(215 * scale, 176.5 * scale, 215 * scale, 176.5 * scale, 220 * scale, 168 * scale);\r\n    ctx.bezierCurveTo(213 * scale, 173.5 * scale, 213 * scale, 173.5 * scale, 206 * scale, 179 * scale);\r\n    ctx.bezierCurveTo(195 * scale, 184 * scale, 195 * scale, 184 * scale, 184 * scale, 189 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(167 * scale, 233 * scale);\r\n    ctx.bezierCurveTo(167 * scale, 207 * scale, 167 * scale, 207 * scale, 167 * scale, 181 * scale);\r\n    ctx.bezierCurveTo(167 * scale, 166 * scale, 157 * scale, 164 * scale, 148 * scale, 165 * scale);\r\n    ctx.bezierCurveTo(120 * scale, 165 * scale, 120 * scale, 165 * scale, 92 * scale, 165 * scale);\r\n    ctx.bezierCurveTo(92 * scale, 186.5 * scale, 92 * scale, 186.5 * scale, 92 * scale, 208 * scale);\r\n    ctx.bezierCurveTo(93 * scale, 222 * scale, 102 * scale, 234 * scale, 119 * scale, 233 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 7 * scale);\r\n    circle(ctx, 152 * scale, 179 * scale, 6 * scale);\r\n    fill_path(ctx, color[4]);\r\n    circle(ctx, 107 * scale, 179 * scale, 6 * scale);\r\n    fill_path(ctx, color[4]);\r\n    ctx.save();\r\n    ctx.translate(210 * scale, 200 * scale);\r\n    ctx.rotate(0.2);\r\n    round_regular_polygon(ctx, 6, 32 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[5], color[2], 7 * scale);\r\n    ctx.save();\r\n    ctx.translate(210 * scale, 200 * scale);\r\n    ctx.rotate(1.0471975511965976);\r\n    round_regular_polygon(ctx, 6, 19 * scale, 6 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[6], color[7], 7 * scale);\r\n    ctx.save();\r\n    ctx.translate(205 * scale, 193 * scale);\r\n    ctx.rotate(0);\r\n    round_regular_polygon(ctx, 6, 10 * scale, 3 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[8]);\r\n    ctx.save();\r\n    ctx.translate(137 * scale, 200 * scale);\r\n    ctx.rotate(-0.5235987755982988);\r\n    round_regular_polygon(ctx, 6, 20 * scale, 5 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[6], color[7], 7 * scale);\r\n    ctx.save();\r\n    ctx.translate(131 * scale, 194 * scale);\r\n    round_regular_polygon(ctx, 6, 10 * scale, 3 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[8]);\r\n    ctx.save();\r\n    ctx.translate(150.5 * scale, 120 * scale);\r\n    ctx.rotate(0);\r\n    round_rect(ctx, -19.5 * scale, -8 * scale, 39 * scale, 16 * scale, 0 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, undefined, color[2], 7 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_skins(scale, color, i) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 175 * scale;\r\n    can.height = 150 * scale;\r\n    if (i == 0) {\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(-88 * scale, -95 * scale);\r\n        ctx.save();\r\n        ctx.translate(174 * scale, 195.5 * scale);\r\n        round_rect(ctx, -82 * scale, -46.5 * scale, 164 * scale, 93 * scale, 30 * scale);\r\n        ctx.restore();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.save();\r\n        ctx.translate(174 * scale, 170.5 * scale);\r\n        round_rect(ctx, -81 * scale, -59.5 * scale, 162 * scale, 119 * scale, 28 * scale);\r\n        ctx.restore();\r\n        fill_path(ctx, color[1], color[2], 6.5 * scale);\r\n        circle(ctx, 137 * scale, 200 * scale, 22.090722034374522 * scale);\r\n        fill_path(ctx, color[3]);\r\n        circle(ctx, 210 * scale, 200 * scale, 22.20360331117452 * scale);\r\n        fill_path(ctx, color[3]);\r\n        circle(ctx, 131 * scale, 194 * scale, 7 * scale);\r\n        fill_path(ctx, color[4]);\r\n        circle(ctx, 206 * scale, 194 * scale, 7 * scale);\r\n        fill_path(ctx, color[4]);\r\n        ctx.translate(0, 1 * scale);\r\n        ctx.save();\r\n        ctx.translate(138.5 * scale, 180.5 * scale);\r\n        round_rect(ctx, -22.5 * scale, -11.5 * scale, 45 * scale, 23 * scale, 0 * scale);\r\n        ctx.restore();\r\n        fill_path(ctx, color[1]);\r\n        ctx.save();\r\n        ctx.translate(207 * scale, 177.5 * scale);\r\n        round_rect(ctx, -31 * scale, -9.5 * scale, 62 * scale, 19 * scale, 0 * scale);\r\n        ctx.restore();\r\n        fill_path(ctx, color[1]);\r\n        ctx.save();\r\n        ctx.translate(171.5 * scale, 220 * scale);\r\n        round_rect(ctx, -52.5 * scale, -2 * scale, 105 * scale, 4 * scale, 0 * scale);\r\n        ctx.restore();\r\n        fill_path(ctx, color[1]);\r\n    } else if (i == 1) {\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(-88 * scale, -95 * scale);\r\n        ctx.save();\r\n        ctx.translate(174 * scale, 195.5 * scale);\r\n        round_rect(ctx, -82 * scale, -46.5 * scale, 164 * scale, 93 * scale, 30 * scale);\r\n        ctx.restore();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.save();\r\n        ctx.translate(174 * scale, 170.5 * scale);\r\n        round_rect(ctx, -81 * scale, -59.5 * scale, 162 * scale, 119 * scale, 28 * scale);\r\n        ctx.restore();\r\n        fill_path(ctx, color[1], color[2], 6.5 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(183 * scale, 223 * scale);\r\n        ctx.bezierCurveTo(193 * scale, 187 * scale, 215 * scale, 193 * scale, 227 * scale, 159 * scale);\r\n        ctx.bezierCurveTo(227 * scale, 194 * scale, 209 * scale, 187 * scale, 183 * scale, 223 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[5]);\r\n        circle(ctx, 137 * scale, 200 * scale, 22.090722034374522 * scale);\r\n        fill_path(ctx, color[3]);\r\n        circle(ctx, 210 * scale, 200 * scale, 22.20360331117452 * scale);\r\n        fill_path(ctx, color[3]);\r\n        circle(ctx, 131 * scale, 190 * scale, 7 * scale);\r\n        fill_path(ctx, color[4]);\r\n        circle(ctx, 204 * scale, 190 * scale, 7 * scale);\r\n        fill_path(ctx, color[4]);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(120 * scale, 154 * scale);\r\n        ctx.bezierCurveTo(125 * scale, 146 * scale, 131 * scale, 143 * scale, 147 * scale, 137 * scale);\r\n        ctx.bezierCurveTo(139 * scale, 147 * scale, 129 * scale, 152 * scale, 121 * scale, 154 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[5]);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(120 * scale, 162 * scale);\r\n        ctx.bezierCurveTo(134 * scale, 153 * scale, 139 * scale, 149 * scale, 150 * scale, 144 * scale);\r\n        ctx.bezierCurveTo(143 * scale, 155 * scale, 128 * scale, 163 * scale, 121 * scale, 161 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[5]);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(127 * scale, 142 * scale);\r\n        ctx.bezierCurveTo(129 * scale, 151 * scale, 132 * scale, 157 * scale, 137 * scale, 162 * scale);\r\n        ctx.bezierCurveTo(134 * scale, 152 * scale, 132 * scale, 146 * scale, 127 * scale, 142 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[5]);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(135 * scale, 140 * scale);\r\n        ctx.bezierCurveTo(141 * scale, 144 * scale, 143 * scale, 150 * scale, 143 * scale, 157 * scale);\r\n        ctx.bezierCurveTo(138 * scale, 150 * scale, 136 * scale, 145 * scale, 135 * scale, 140 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[5]);\r\n    } else if (i == 2) {\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(-88 * scale, -95 * scale);\r\n        ctx.save();\r\n        ctx.translate(174 * scale, 195.5 * scale);\r\n        round_rect(ctx, -82 * scale, -46.5 * scale, 164 * scale, 93 * scale, 30 * scale);\r\n        ctx.restore();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.save();\r\n        ctx.translate(174 * scale, 170.5 * scale);\r\n        round_rect(ctx, -81 * scale, -59.5 * scale, 162 * scale, 119 * scale, 28 * scale);\r\n        ctx.restore();\r\n        fill_path(ctx, color[1], color[2], 6.5 * scale);\r\n        circle(ctx, 137 * scale, 200 * scale, 22.090722034374522 * scale);\r\n        fill_path(ctx, color[3]);\r\n        circle(ctx, 210 * scale, 200 * scale, 22.20360331117452 * scale);\r\n        fill_path(ctx, color[3]);\r\n        circle(ctx, 130 * scale, 192 * scale, 7 * scale);\r\n        fill_path(ctx, color[4]);\r\n        circle(ctx, 203 * scale, 192 * scale, 7 * scale);\r\n        fill_path(ctx, color[4]);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(115 * scale, 224 * scale);\r\n        ctx.bezierCurveTo(173 * scale, 223.5 * scale, 173 * scale, 223.5 * scale, 231 * scale, 223 * scale);\r\n        ctx.bezierCurveTo(230 * scale, 222 * scale, 198 * scale, 223 * scale, 186 * scale, 209 * scale);\r\n        ctx.bezierCurveTo(173.5 * scale, 209 * scale, 173.5 * scale, 209 * scale, 161 * scale, 209 * scale);\r\n        ctx.bezierCurveTo(146 * scale, 224 * scale, 114 * scale, 223 * scale, 116 * scale, 224 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(112 * scale, 193 * scale);\r\n        ctx.bezierCurveTo(154 * scale, 182 * scale, 194 * scale, 183 * scale, 234 * scale, 192 * scale);\r\n        ctx.bezierCurveTo(217 * scale, 154 * scale, 148 * scale, 127 * scale, 112 * scale, 192 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n    } else if (i == 3) {\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(-88 * scale, -95 * scale);\r\n        ctx.save();\r\n        ctx.translate(174 * scale, 195.5 * scale);\r\n        round_rect(ctx, -82 * scale, -46.5 * scale, 164 * scale, 93 * scale, 30 * scale);\r\n        ctx.restore();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.save();\r\n        ctx.translate(174 * scale, 170.5 * scale);\r\n        round_rect(ctx, -81 * scale, -59.5 * scale, 162 * scale, 119 * scale, 28 * scale);\r\n        ctx.restore();\r\n        fill_path(ctx, color[1], color[2], 6.5 * scale);\r\n        circle(ctx, 137 * scale, 200 * scale, 22.090722034374522 * scale);\r\n        fill_path(ctx, color[3]);\r\n        circle(ctx, 210 * scale, 200 * scale, 22.20360331117452 * scale);\r\n        fill_path(ctx, color[3]);\r\n        circle(ctx, 130 * scale, 192 * scale, 7 * scale);\r\n        fill_path(ctx, color[4]);\r\n        circle(ctx, 203 * scale, 192 * scale, 7 * scale);\r\n        fill_path(ctx, color[4]);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(120 * scale, 176 * scale);\r\n        ctx.bezierCurveTo(175 * scale, 193 * scale, 147.5 * scale, 184.5 * scale, 175 * scale, 193 * scale);\r\n        ctx.bezierCurveTo(200 * scale, 184.5 * scale, 200 * scale, 184.5 * scale, 225 * scale, 176 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(226 * scale, 223 * scale);\r\n        ctx.bezierCurveTo(173.5 * scale, 223 * scale, 173.5 * scale, 223 * scale, 121 * scale, 223 * scale);\r\n        ctx.bezierCurveTo(148 * scale, 218 * scale, 148 * scale, 218 * scale, 175 * scale, 213 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n    } else if (i == 4) {\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(-88 * scale, -95 * scale);\r\n        ctx.save();\r\n        ctx.translate(174 * scale, 195.5 * scale);\r\n        round_rect(ctx, -82 * scale, -46.5 * scale, 164 * scale, 93 * scale, 30 * scale);\r\n        ctx.restore();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.save();\r\n        ctx.translate(174 * scale, 170.5 * scale);\r\n        ctx.rotate(0);\r\n        round_rect(ctx, -81 * scale, -59.5 * scale, 162 * scale, 119 * scale, 28 * scale);\r\n        ctx.restore();\r\n        fill_path(ctx, color[1], color[2], 6.5 * scale);\r\n        circle(ctx, 137 * scale, 200 * scale, 22.090722034374522 * scale);\r\n        fill_path(ctx, color[3]);\r\n        circle(ctx, 210 * scale, 200 * scale, 22.20360331117452 * scale);\r\n        fill_path(ctx, color[3]);\r\n        circle(ctx, 137 * scale, 203 * scale, 8 * scale);\r\n        fill_path(ctx, color[4]);\r\n        circle(ctx, 209 * scale, 203 * scale, 8 * scale);\r\n        fill_path(ctx, color[4]);\r\n        ctx.save();\r\n        ctx.translate(174.5 * scale, 218 * scale);\r\n        ctx.rotate(0);\r\n        round_rect(ctx, -60.5 * scale, -5 * scale, 121 * scale, 10 * scale, 28 * scale);\r\n        ctx.restore();\r\n        fill_path(ctx, color[1]);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(113 * scale, 190 * scale);\r\n        ctx.bezierCurveTo(144 * scale, 181.5 * scale, 144 * scale, 181.5 * scale, 175 * scale, 173 * scale);\r\n        ctx.bezierCurveTo(205 * scale, 182 * scale, 205 * scale, 182 * scale, 235 * scale, 191 * scale);\r\n        ctx.bezierCurveTo(242 * scale, 141 * scale, 106 * scale, 119 * scale, 112 * scale, 189 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n    } else if (i == 5) {\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(-88 * scale, -95 * scale);\r\n        ctx.save();\r\n        ctx.translate(174 * scale, 195.5 * scale);\r\n        round_rect(ctx, -82 * scale, -46.5 * scale, 164 * scale, 93 * scale, 30 * scale);\r\n        ctx.restore();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.save();\r\n        ctx.translate(174 * scale, 170.5 * scale);\r\n        ctx.rotate(0);\r\n        round_rect(ctx, -81 * scale, -59.5 * scale, 162 * scale, 119 * scale, 28 * scale);\r\n        ctx.restore();\r\n        fill_path(ctx, color[1], color[2], 6.5 * scale);\r\n        circle(ctx, 137 * scale, 200 * scale, 22.090722034374522 * scale);\r\n        fill_path(ctx, color[3]);\r\n        circle(ctx, 210 * scale, 200 * scale, 22.20360331117452 * scale);\r\n        fill_path(ctx, color[3]);\r\n        circle(ctx, 140 * scale, 196 * scale, 7 * scale);\r\n        fill_path(ctx, color[4]);\r\n        circle(ctx, 213 * scale, 196 * scale, 7 * scale);\r\n        fill_path(ctx, color[4]);\r\n        circle(ctx, 131 * scale, 206 * scale, 3 * scale);\r\n        fill_path(ctx, color[4]);\r\n        circle(ctx, 204 * scale, 206 * scale, 3 * scale);\r\n        fill_path(ctx, color[4]);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(113 * scale, 181 * scale);\r\n        ctx.bezierCurveTo(159 * scale, 204 * scale, 190 * scale, 202 * scale, 235 * scale, 181 * scale);\r\n        ctx.bezierCurveTo(241 * scale, 137 * scale, 109 * scale, 130 * scale, 112 * scale, 180 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n        ctx.save();\r\n        ctx.translate(174 * scale, 220 * scale);\r\n        ctx.rotate(0);\r\n        round_rect(ctx, -56 * scale, -5 * scale, 112 * scale, 10 * scale, 1 * scale);\r\n        ctx.restore();\r\n        fill_path(ctx, color[1]);\r\n    } else if (i == 6) {\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(-88 * scale, -95 * scale);\r\n        ctx.save();\r\n        ctx.translate(174 * scale, 195.5 * scale);\r\n        round_rect(ctx, -82 * scale, -46.5 * scale, 164 * scale, 93 * scale, 30 * scale);\r\n        ctx.restore();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.save();\r\n        ctx.translate(174 * scale, 170.5 * scale);\r\n        round_rect(ctx, -81 * scale, -59.5 * scale, 162 * scale, 119 * scale, 28 * scale);\r\n        ctx.restore();\r\n        fill_path(ctx, color[1], color[2], 6.5 * scale);\r\n        circle(ctx, 137 * scale, 200 * scale, 22.090722034374522 * scale);\r\n        fill_path(ctx, color[3]);\r\n        circle(ctx, 210 * scale, 200 * scale, 22.20360331117452 * scale);\r\n        fill_path(ctx, color[3]);\r\n        circle(ctx, 133 * scale, 188 * scale, 7 * scale);\r\n        fill_path(ctx, color[4]);\r\n        circle(ctx, 206 * scale, 188 * scale, 7 * scale);\r\n        fill_path(ctx, color[4]);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(110 * scale, 193 * scale);\r\n        ctx.bezierCurveTo(130 * scale, 182 * scale, 142 * scale, 183 * scale, 162 * scale, 193 * scale);\r\n        ctx.bezierCurveTo(164 * scale, 176.5 * scale, 164 * scale, 176.5 * scale, 166 * scale, 160 * scale);\r\n        ctx.bezierCurveTo(137 * scale, 159 * scale, 137 * scale, 159 * scale, 108 * scale, 158 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(184 * scale, 192 * scale);\r\n        ctx.bezierCurveTo(205 * scale, 183 * scale, 216 * scale, 183 * scale, 234 * scale, 192 * scale);\r\n        ctx.bezierCurveTo(233.5 * scale, 177 * scale, 233.5 * scale, 177 * scale, 233 * scale, 162 * scale);\r\n        ctx.bezierCurveTo(209 * scale, 161.5 * scale, 186 * scale, 162 * scale, 185 * scale, 161 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n    } else if (i == 7) {\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(-88 * scale, -95 * scale);\r\n        ctx.save();\r\n        ctx.translate(174 * scale, 195.5 * scale);\r\n        round_rect(ctx, -82 * scale, -46.5 * scale, 164 * scale, 93 * scale, 30 * scale);\r\n        ctx.restore();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.save();\r\n        ctx.translate(174 * scale, 170.5 * scale);\r\n        round_rect(ctx, -81 * scale, -59.5 * scale, 162 * scale, 119 * scale, 28 * scale);\r\n        ctx.restore();\r\n        fill_path(ctx, color[1], color[2], 6.5 * scale);\r\n        circle(ctx, 137 * scale, 200 * scale, 22.090722034374522 * scale);\r\n        fill_path(ctx, color[3]);\r\n        circle(ctx, 210 * scale, 200 * scale, 22.20360331117452 * scale);\r\n        fill_path(ctx, color[3]);\r\n        circle(ctx, 130 * scale, 206 * scale, 7 * scale);\r\n        fill_path(ctx, color[4]);\r\n        circle(ctx, 203 * scale, 206 * scale, 7 * scale);\r\n        fill_path(ctx, color[4]);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(108 * scale, 191 * scale);\r\n        ctx.bezierCurveTo(141 * scale, 184 * scale, 141 * scale, 184 * scale, 174 * scale, 177 * scale);\r\n        ctx.bezierCurveTo(207 * scale, 184 * scale, 207 * scale, 184 * scale, 240 * scale, 191 * scale);\r\n        ctx.bezierCurveTo(244 * scale, 140 * scale, 113 * scale, 121 * scale, 108 * scale, 191 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n    } else if (i == 8) {\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(-88 * scale, -95 * scale);\r\n        ctx.save();\r\n        ctx.translate(174 * scale, 195.5 * scale);\r\n        round_rect(ctx, -82 * scale, -46.5 * scale, 164 * scale, 93 * scale, 30 * scale);\r\n        ctx.restore();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.save();\r\n        ctx.translate(174 * scale, 170.5 * scale);\r\n        round_rect(ctx, -81 * scale, -59.5 * scale, 162 * scale, 119 * scale, 28 * scale);\r\n        ctx.restore();\r\n        fill_path(ctx, color[1], color[2], 6.5 * scale);\r\n        circle(ctx, 137 * scale, 200 * scale, 22.090722034374522 * scale);\r\n        fill_path(ctx, color[3]);\r\n        circle(ctx, 210 * scale, 200 * scale, 22.20360331117452 * scale);\r\n        fill_path(ctx, color[3]);\r\n        circle(ctx, 127 * scale, 198 * scale, 7 * scale);\r\n        fill_path(ctx, color[4]);\r\n        circle(ctx, 200 * scale, 198 * scale, 7 * scale);\r\n        fill_path(ctx, color[4]);\r\n        ctx.save();\r\n        ctx.translate(175 * scale, 175.5 * scale);\r\n        round_rect(ctx, -67 * scale, -13.5 * scale, 134 * scale, 27 * scale, 0 * scale);\r\n        ctx.restore();\r\n        fill_path(ctx, color[1]);\r\n        ctx.save();\r\n        ctx.translate(172 * scale, 219 * scale);\r\n        round_rect(ctx, -60 * scale, -4 * scale, 120 * scale, 8 * scale, 0 * scale);\r\n        ctx.restore();\r\n        fill_path(ctx, color[1]);\r\n    } else if (i == 9) {\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(-88 * scale, -95 * scale);\r\n        ctx.save();\r\n        ctx.translate(174 * scale, 195.5 * scale);\r\n        round_rect(ctx, -82 * scale, -46.5 * scale, 164 * scale, 93 * scale, 30 * scale);\r\n        ctx.restore();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.save();\r\n        ctx.translate(174 * scale, 170.5 * scale);\r\n        round_rect(ctx, -81 * scale, -59.5 * scale, 162 * scale, 119 * scale, 28 * scale);\r\n        ctx.restore();\r\n        fill_path(ctx, color[1], color[2], 6.5 * scale);\r\n        circle(ctx, 137 * scale, 200 * scale, 22.090722034374522 * scale);\r\n        fill_path(ctx, color[3]);\r\n        circle(ctx, 210 * scale, 200 * scale, 22.090722034374522 * scale);\r\n        fill_path(ctx, color[3]);\r\n        circle(ctx, 143 * scale, 200 * scale, 7 * scale);\r\n        fill_path(ctx, color[4]);\r\n        circle(ctx, 204 * scale, 200 * scale, 7 * scale);\r\n        fill_path(ctx, color[4]);\r\n    }\r\n    return can;\r\n}\r\n;\r\nfunction create_garlic(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 264 * scale;\r\n    can.height = 246 * scale;\r\n    ctx.translate(0, 10 * scale);\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(75 * scale, 54 * scale);\r\n    ctx.bezierCurveTo(79 * scale, 21 * scale, 131 * scale, 13 * scale, 153 * scale, 36 * scale);\r\n    ctx.bezierCurveTo(204 * scale, 27 * scale, 221 * scale, 52 * scale, 216 * scale, 83 * scale);\r\n    ctx.bezierCurveTo(241 * scale, 103 * scale, 232 * scale, 138 * scale, 214 * scale, 147 * scale);\r\n    ctx.bezierCurveTo(223 * scale, 184 * scale, 201 * scale, 200 * scale, 175 * scale, 199 * scale);\r\n    ctx.bezierCurveTo(156 * scale, 218 * scale, 135 * scale, 222 * scale, 114 * scale, 203 * scale);\r\n    ctx.bezierCurveTo(62 * scale, 213 * scale, 66 * scale, 189 * scale, 59 * scale, 170 * scale);\r\n    ctx.bezierCurveTo(27 * scale, 164 * scale, 31 * scale, 134 * scale, 38 * scale, 123 * scale);\r\n    ctx.bezierCurveTo(11 * scale, 80 * scale, 51 * scale, 52 * scale, 75 * scale, 54 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.translate(0, -10 * scale);\r\n    ctx.globalAlpha = 1;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(75 * scale, 54 * scale);\r\n    ctx.bezierCurveTo(79 * scale, 21 * scale, 131 * scale, 13 * scale, 153 * scale, 36 * scale);\r\n    ctx.bezierCurveTo(204 * scale, 27 * scale, 221 * scale, 52 * scale, 216 * scale, 83 * scale);\r\n    ctx.bezierCurveTo(241 * scale, 103 * scale, 232 * scale, 138 * scale, 214 * scale, 147 * scale);\r\n    ctx.bezierCurveTo(223 * scale, 184 * scale, 201 * scale, 200 * scale, 175 * scale, 199 * scale);\r\n    ctx.bezierCurveTo(156 * scale, 218 * scale, 135 * scale, 222 * scale, 114 * scale, 203 * scale);\r\n    ctx.bezierCurveTo(62 * scale, 213 * scale, 66 * scale, 189 * scale, 59 * scale, 170 * scale);\r\n    ctx.bezierCurveTo(27 * scale, 164 * scale, 31 * scale, 134 * scale, 38 * scale, 123 * scale);\r\n    ctx.bezierCurveTo(11 * scale, 80 * scale, 51 * scale, 52 * scale, 75 * scale, 54 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(121 * scale, 102 * scale);\r\n    ctx.bezierCurveTo(111 * scale, 80 * scale, 110 * scale, 66 * scale, 108 * scale, 51 * scale);\r\n    ctx.bezierCurveTo(119 * scale, 65 * scale, 129 * scale, 85 * scale, 135 * scale, 99 * scale);\r\n    ctx.bezierCurveTo(142 * scale, 67 * scale, 146 * scale, 60 * scale, 152 * scale, 50 * scale);\r\n    ctx.bezierCurveTo(154 * scale, 71 * scale, 152 * scale, 85 * scale, 149 * scale, 104 * scale);\r\n    ctx.bezierCurveTo(166 * scale, 88 * scale, 175 * scale, 83 * scale, 188 * scale, 78 * scale);\r\n    ctx.bezierCurveTo(179 * scale, 91 * scale, 170 * scale, 103 * scale, 160 * scale, 112 * scale);\r\n    ctx.bezierCurveTo(186 * scale, 107 * scale, 191 * scale, 107 * scale, 204 * scale, 108 * scale);\r\n    ctx.bezierCurveTo(195 * scale, 114 * scale, 179 * scale, 120 * scale, 163 * scale, 123 * scale);\r\n    ctx.bezierCurveTo(183 * scale, 130 * scale, 186 * scale, 135 * scale, 192 * scale, 140 * scale);\r\n    ctx.bezierCurveTo(179 * scale, 141 * scale, 164 * scale, 139 * scale, 153 * scale, 135 * scale);\r\n    ctx.bezierCurveTo(158 * scale, 145 * scale, 163 * scale, 159 * scale, 165 * scale, 177 * scale);\r\n    ctx.bezierCurveTo(154 * scale, 166 * scale, 145 * scale, 153 * scale, 138 * scale, 139 * scale);\r\n    ctx.bezierCurveTo(133 * scale, 155 * scale, 125 * scale, 170 * scale, 117 * scale, 182 * scale);\r\n    ctx.bezierCurveTo(116 * scale, 160 * scale, 119 * scale, 151 * scale, 124 * scale, 138 * scale);\r\n    ctx.bezierCurveTo(107 * scale, 150 * scale, 95 * scale, 156 * scale, 82 * scale, 159 * scale);\r\n    ctx.bezierCurveTo(94 * scale, 140 * scale, 101 * scale, 136 * scale, 113 * scale, 128 * scale);\r\n    ctx.bezierCurveTo(78 * scale, 123 * scale, 75 * scale, 121 * scale, 67 * scale, 118 * scale);\r\n    ctx.bezierCurveTo(85 * scale, 112 * scale, 94 * scale, 112 * scale, 111 * scale, 113 * scale);\r\n    ctx.bezierCurveTo(89 * scale, 97 * scale, 85 * scale, 93 * scale, 78 * scale, 82 * scale);\r\n    ctx.bezierCurveTo(92 * scale, 85 * scale, 101 * scale, 90 * scale, 121 * scale, 102 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(128 * scale, 103 * scale);\r\n    ctx.bezierCurveTo(111 * scale, 112 * scale, 117 * scale, 136 * scale, 140 * scale, 130 * scale);\r\n    ctx.bezierCurveTo(151 * scale, 126 * scale, 156 * scale, 115 * scale, 155 * scale, 107 * scale);\r\n    ctx.bezierCurveTo(155 * scale, 96 * scale, 154 * scale, 94 * scale, 148 * scale, 94 * scale);\r\n    ctx.bezierCurveTo(141 * scale, 94 * scale, 146 * scale, 104 * scale, 136 * scale, 104 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[4], 4 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_garland_inv(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 70 * scale;\r\n    can.height = 70 * scale;\r\n    ctx.globalAlpha = 0.5;\r\n    circle(ctx, 26 * scale, 26 * scale, 9 * scale);\r\n    fill_path(ctx, color[0]);\r\n    circle(ctx, 56 * scale, 36 * scale, 9 * scale);\r\n    fill_path(ctx, color[1]);\r\n    circle(ctx, 40 * scale, 50 * scale, 9 * scale);\r\n    fill_path(ctx, color[2]);\r\n    ctx.globalAlpha = 1;\r\n    circle(ctx, 26 * scale, 26 * scale, 5 * scale);\r\n    fill_path(ctx, color[0]);\r\n    circle(ctx, 56 * scale, 36 * scale, 5 * scale);\r\n    fill_path(ctx, color[1]);\r\n    circle(ctx, 40 * scale, 50 * scale, 5 * scale);\r\n    fill_path(ctx, color[2]);\r\n    return can;\r\n}\r\n;\r\nfunction create_garland(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 22 * scale;\r\n    can.height = 22 * scale;\r\n    ctx.globalAlpha = 0.4;\r\n    circle(ctx, 11 * scale, 11 * scale, 10 * scale);\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 0.7;\r\n    circle(ctx, 11 * scale, 11 * scale, 7 * scale);\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    circle(ctx, 11 * scale, 11 * scale, 4 * scale);\r\n    fill_path(ctx, color[0]);\r\n    return can;\r\n}\r\n;\r\nfunction create_garland_light(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 20 * scale;\r\n    can.height = 20 * scale;\r\n    ctx.globalAlpha = 0.5;\r\n    circle(ctx, 10 * scale, 10 * scale, 9 * scale);\r\n    fill_path(ctx, color[0]);\r\n    return can;\r\n}\r\n;\r\nfunction create_roof(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 248 * scale;\r\n    can.height = 247 * scale;\r\n    ctx.save();\r\n    ctx.translate(69.5 * scale, 145 * scale);\r\n    round_rect(ctx, -8.5 * scale, -63 * scale, 17 * scale, 127 * scale, 1 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0]);\r\n    ctx.save();\r\n    ctx.translate(183 * scale, 145 * scale);\r\n    round_rect(ctx, -8 * scale, -63 * scale, 16 * scale, 126 * scale, 1 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0]);\r\n    ctx.save();\r\n    ctx.translate(123.5 * scale, 62.5 * scale);\r\n    ctx.rotate(6.28);\r\n    round_rect(ctx, -84.5 * scale, -25.5 * scale, 169 * scale, 51 * scale, 5 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[2], color[1], 6 * scale);\r\n    ctx.save();\r\n    ctx.translate(123.5 * scale, 118 * scale);\r\n    ctx.rotate(6.24);\r\n    round_rect(ctx, -85.5 * scale, -24 * scale, 169 * scale, 48 * scale, 5 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[3], color[1], 6 * scale);\r\n    ctx.save();\r\n    ctx.translate(122 * scale, 177.5 * scale);\r\n    ctx.rotate(6.32);\r\n    round_rect(ctx, -84 * scale, -23.5 * scale, 169 * scale, 47 * scale, 5 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[2], color[1], 6 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(37 * scale, 157 * scale);\r\n    ctx.bezierCurveTo(49 * scale, 160 * scale, 49 * scale, 160 * scale, 61 * scale, 163 * scale);\r\n    ctx.bezierCurveTo(49.5 * scale, 165.5 * scale, 49.5 * scale, 165.5 * scale, 38 * scale, 168 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(205 * scale, 175 * scale);\r\n    ctx.bezierCurveTo(192.5 * scale, 180 * scale, 192.5 * scale, 180 * scale, 180 * scale, 185 * scale);\r\n    ctx.bezierCurveTo(193 * scale, 188 * scale, 193 * scale, 188 * scale, 206 * scale, 191 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1]);\r\n    return can;\r\n}\r\n;\r\nfunction create_roof1(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 248 * scale;\r\n    can.height = 247 * scale;\r\n    ctx.save();\r\n    ctx.translate(182 * scale, 120 * scale);\r\n    round_rect(ctx, -8 * scale, -67 * scale, 16 * scale, 134 * scale, 1 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0]);\r\n    ctx.save();\r\n    ctx.translate(68.5 * scale, 127.5 * scale);\r\n    round_rect(ctx, -8.5 * scale, -70.5 * scale, 17 * scale, 141 * scale, 1 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0]);\r\n    ctx.save();\r\n    ctx.translate(123.5 * scale, 68 * scale);\r\n    round_rect(ctx, -82.5 * scale, -24 * scale, 165 * scale, 48 * scale, 4 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[2], color[1], 6 * scale);\r\n    ctx.save();\r\n    ctx.translate(123 * scale, 179.5 * scale);\r\n    round_rect(ctx, -83 * scale, -24.5 * scale, 166 * scale, 49 * scale, 4 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[2], color[1], 6 * scale);\r\n    ctx.save();\r\n    ctx.translate(123.5 * scale, 123.5 * scale);\r\n    ctx.rotate(6.24);\r\n    round_rect(ctx, -82.5 * scale, -24.5 * scale, 165 * scale, 49 * scale, 4 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[3], color[1], 6 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(204 * scale, 112 * scale);\r\n    ctx.bezierCurveTo(149 * scale, 121.5 * scale, 96 * scale, 130 * scale, 94 * scale, 131 * scale);\r\n    ctx.bezierCurveTo(149.5 * scale, 127.5 * scale, 149.5 * scale, 127.5 * scale, 205 * scale, 124 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1]);\r\n    return can;\r\n}\r\n;\r\nfunction create_roof2(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 248 * scale;\r\n    can.height = 247 * scale;\r\n    ctx.save();\r\n    ctx.translate(183 * scale, 107 * scale);\r\n    round_rect(ctx, -8 * scale, -70.5 * scale, 16 * scale, 141 * scale, 1 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0]);\r\n    ctx.save();\r\n    ctx.translate(69.5 * scale, 110 * scale);\r\n    round_rect(ctx, -8.5 * scale, -71 * scale, 17 * scale, 143 * scale, 1 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0]);\r\n    ctx.save();\r\n    ctx.translate(123.5 * scale, 181 * scale);\r\n    round_rect(ctx, -84.5 * scale, -26 * scale, 169 * scale, 52 * scale, 5 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[2], color[1], 6 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(41 * scale, 95 * scale);\r\n    ctx.bezierCurveTo(105 * scale, 96 * scale, 113 * scale, 99 * scale, 134 * scale, 102 * scale);\r\n    ctx.bezierCurveTo(147 * scale, 106 * scale, 173 * scale, 100 * scale, 207 * scale, 105 * scale);\r\n    ctx.bezierCurveTo(210 * scale, 105 * scale, 207 * scale, 140 * scale, 207 * scale, 154 * scale);\r\n    ctx.bezierCurveTo(123.5 * scale, 151.5 * scale, 123.5 * scale, 151.5 * scale, 40 * scale, 149 * scale);\r\n    ctx.bezierCurveTo(37 * scale, 145 * scale, 39 * scale, 95 * scale, 41 * scale, 96 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2], color[1], 6 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(68 * scale, 75 * scale);\r\n    ctx.bezierCurveTo(54 * scale, 72.5 * scale, 54 * scale, 72.5 * scale, 40 * scale, 70 * scale);\r\n    ctx.bezierCurveTo(38 * scale, 46 * scale, 40 * scale, 46 * scale, 53 * scale, 46 * scale);\r\n    ctx.bezierCurveTo(201 * scale, 41 * scale, 201 * scale, 41 * scale, 201 * scale, 42 * scale);\r\n    ctx.bezierCurveTo(211 * scale, 40 * scale, 208 * scale, 53 * scale, 208 * scale, 72 * scale);\r\n    ctx.bezierCurveTo(209 * scale, 91 * scale, 210 * scale, 96 * scale, 194 * scale, 94 * scale);\r\n    ctx.bezierCurveTo(119 * scale, 97 * scale, 119 * scale, 97 * scale, 44 * scale, 100 * scale);\r\n    ctx.bezierCurveTo(39 * scale, 99 * scale, 40 * scale, 96 * scale, 40 * scale, 80 * scale);\r\n    ctx.bezierCurveTo(54 * scale, 77.5 * scale, 54 * scale, 77.5 * scale, 68 * scale, 75 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[1], 6 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_zombie_head(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 191 * scale;\r\n    can.height = 153 * scale;\r\n    ctx.globalAlpha = 0.5;\r\n    ctx.translate(0, 10 * scale);\r\n    ctx.save();\r\n    ctx.translate(97.49996948242188 * scale, 95.12844848632812 * scale);\r\n    round_rect(ctx, -62.5 * scale, -41.5 * scale, 125 * scale, 83 * scale, 20 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0], color[0], 4 * scale);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(0, -10 * scale);\r\n    ctx.save();\r\n    ctx.translate(97.49996948242188 * scale, 95.12844848632812 * scale);\r\n    round_rect(ctx, -62.5 * scale, -41.5 * scale, 125 * scale, 83 * scale, 20 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[1], color[2], 4 * scale);\r\n    ctx.globalCompositeOperation = \"destination-out\";\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(26.999969482421875 * scale, 50.850677490234375 * scale);\r\n    ctx.bezierCurveTo(46.499969482421875 * scale, 64.85067749023438 * scale, 46.499969482421875 * scale, 64.85067749023438 * scale, 65.99996948242188 * scale, 78.85067749023438 * scale);\r\n    ctx.bezierCurveTo(80.99996948242188 * scale, 87.85067749023438 * scale, 105.99996948242188 * scale, 82.85067749023438 * scale, 114.99996948242188 * scale, 80.85067749023438 * scale);\r\n    ctx.bezierCurveTo(130.99996948242188 * scale, 69.85067749023438 * scale, 152.99996948242188 * scale, 70.85067749023438 * scale, 166.99996948242188 * scale, 67.85067749023438 * scale);\r\n    ctx.bezierCurveTo(156.99996948242188 * scale, 52.850677490234375 * scale, 156.99996948242188 * scale, 52.850677490234375 * scale, 146.99996948242188 * scale, 37.850677490234375 * scale);\r\n    ctx.bezierCurveTo(101.49996948242188 * scale, 37.350677490234375 * scale, 101.49996948242188 * scale, 37.350677490234375 * scale, 55.999969482421875 * scale, 36.850677490234375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2], color[3], 4 * scale);\r\n    ctx.globalCompositeOperation = \"source-over\";\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(40.999969482421875 * scale, 59.850677490234375 * scale);\r\n    ctx.bezierCurveTo(41.999969482421875 * scale, 50.850677490234375 * scale, 47.999969482421875 * scale, 47.850677490234375 * scale, 56.999969482421875 * scale, 49.850677490234375 * scale);\r\n    ctx.bezierCurveTo(65.99996948242188 * scale, 41.850677490234375 * scale, 76.99996948242188 * scale, 42.850677490234375 * scale, 90.99996948242188 * scale, 47.850677490234375 * scale);\r\n    ctx.bezierCurveTo(94.99996948242188 * scale, 42.850677490234375 * scale, 104.99996948242188 * scale, 42.850677490234375 * scale, 114.99996948242188 * scale, 47.850677490234375 * scale);\r\n    ctx.bezierCurveTo(131.99996948242188 * scale, 42.850677490234375 * scale, 142.99996948242188 * scale, 48.850677490234375 * scale, 145.99996948242188 * scale, 56.850677490234375 * scale);\r\n    ctx.bezierCurveTo(160.99996948242188 * scale, 63.850677490234375 * scale, 154.99996948242188 * scale, 69.85067749023438 * scale, 155.99996948242188 * scale, 70.85067749023438 * scale);\r\n    ctx.bezierCurveTo(141.99996948242188 * scale, 71.85067749023438 * scale, 141.99996948242188 * scale, 71.85067749023438 * scale, 127.99996948242188 * scale, 72.85067749023438 * scale);\r\n    ctx.bezierCurveTo(110.99996948242188 * scale, 83.85067749023438 * scale, 107.99996948242188 * scale, 82.85067749023438 * scale, 90.99996948242188 * scale, 85.85067749023438 * scale);\r\n    ctx.bezierCurveTo(70.99996948242188 * scale, 83.85067749023438 * scale, 64.99996948242188 * scale, 79.85067749023438 * scale, 53.999969482421875 * scale, 70.85067749023438 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[4], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(33.999969482421875 * scale, 65.85067749023438 * scale);\r\n    ctx.bezierCurveTo(36.999969482421875 * scale, 59.850677490234375 * scale, 34.999969482421875 * scale, 60.850677490234375 * scale, 39.999969482421875 * scale, 59.850677490234375 * scale);\r\n    ctx.bezierCurveTo(47.999969482421875 * scale, 61.850677490234375 * scale, 62.999969482421875 * scale, 76.85067749023438 * scale, 74.99996948242188 * scale, 79.85067749023438 * scale);\r\n    ctx.bezierCurveTo(93.99996948242188 * scale, 85.85067749023438 * scale, 111.99996948242188 * scale, 83.85067749023438 * scale, 124.99996948242188 * scale, 70.85067749023438 * scale);\r\n    ctx.bezierCurveTo(129.99996948242188 * scale, 67.85067749023438 * scale, 145.99996948242188 * scale, 65.85067749023438 * scale, 159.99996948242188 * scale, 67.85067749023438 * scale);\r\n    ctx.bezierCurveTo(159.99996948242188 * scale, 71.85067749023438 * scale, 159.99996948242188 * scale, 71.85067749023438 * scale, 159.99996948242188 * scale, 75.85067749023438 * scale);\r\n    ctx.bezierCurveTo(146.99996948242188 * scale, 72.85067749023438 * scale, 144.99996948242188 * scale, 75.85067749023438 * scale, 143.99996948242188 * scale, 82.85067749023438 * scale);\r\n    ctx.bezierCurveTo(144.99996948242188 * scale, 86.85067749023438 * scale, 140.99996948242188 * scale, 90.85067749023438 * scale, 137.99996948242188 * scale, 86.85067749023438 * scale);\r\n    ctx.bezierCurveTo(139.99996948242188 * scale, 72.85067749023438 * scale, 135.99996948242188 * scale, 72.85067749023438 * scale, 133.99996948242188 * scale, 82.85067749023438 * scale);\r\n    ctx.bezierCurveTo(127.99996948242188 * scale, 88.85067749023438 * scale, 124.99996948242188 * scale, 70.85067749023438 * scale, 116.99996948242188 * scale, 86.85067749023438 * scale);\r\n    ctx.bezierCurveTo(110.99996948242188 * scale, 91.85067749023438 * scale, 96.99996948242188 * scale, 81.85067749023438 * scale, 89.99996948242188 * scale, 90.85067749023438 * scale);\r\n    ctx.bezierCurveTo(85.99996948242188 * scale, 92.85067749023438 * scale, 81.99996948242188 * scale, 95.85067749023438 * scale, 76.99996948242188 * scale, 86.85067749023438 * scale);\r\n    ctx.bezierCurveTo(67.99996948242188 * scale, 93.85067749023438 * scale, 67.99996948242188 * scale, 91.85067749023438 * scale, 60.999969482421875 * scale, 79.85067749023438 * scale);\r\n    ctx.bezierCurveTo(53.999969482421875 * scale, 71.85067749023438 * scale, 52.999969482421875 * scale, 72.85067749023438 * scale, 46.999969482421875 * scale, 77.85067749023438 * scale);\r\n    ctx.bezierCurveTo(41.999969482421875 * scale, 78.85067749023438 * scale, 42.999969482421875 * scale, 69.85067749023438 * scale, 33.999969482421875 * scale, 65.85067749023438 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[5], color[6], 4 * scale);\r\n    circle(ctx, 68 * scale, 111.29513549804688 * scale, 15 * scale);\r\n    fill_path(ctx, color[7], color[8], 4 * scale);\r\n    circle(ctx, 123 * scale, 111.29510498046875 * scale, 15 * scale);\r\n    fill_path(ctx, color[7], color[8], 4 * scale);\r\n    circle(ctx, 63 * scale, 106 * scale, 5 * scale);\r\n    fill_path(ctx, color[9]);\r\n    circle(ctx, 118 * scale, 106 * scale, 5 * scale);\r\n    fill_path(ctx, color[9]);\r\n    return can;\r\n}\r\n;\r\nfunction create_zombie_boss(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 191 * scale;\r\n    can.height = 153 * scale;\r\n    ctx.globalAlpha = 0.5;\r\n    ctx.translate(0, 10 * scale);\r\n    ctx.save();\r\n    ctx.translate(96.49996948242188 * scale, 66.79510498046875 * scale);\r\n    ctx.rotate(0);\r\n    round_rect(ctx, -79.5 * scale, -48.5 * scale, 159 * scale, 97 * scale, 22 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0], color[0], 4 * scale);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(0, -10 * scale);\r\n    ctx.save();\r\n    ctx.translate(96.49996948242188 * scale, 66.79510498046875 * scale);\r\n    ctx.rotate(0);\r\n    round_rect(ctx, -79.5 * scale, -48.5 * scale, 159 * scale, 97 * scale, 22 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[1], color[2], 4 * scale);\r\n    ctx.translate(2 * scale, 0);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(119 * scale, 28 * scale);\r\n    ctx.bezierCurveTo(119 * scale, 22 * scale, 119 * scale, 20 * scale, 122 * scale, 16 * scale);\r\n    ctx.bezierCurveTo(149 * scale, 39 * scale, 149 * scale, 39 * scale, 176 * scale, 63 * scale);\r\n    ctx.bezierCurveTo(176 * scale, 75 * scale, 176 * scale, 75 * scale, 175 * scale, 88 * scale);\r\n    ctx.bezierCurveTo(174 * scale, 90 * scale, 174 * scale, 90 * scale, 172 * scale, 93 * scale);\r\n    ctx.bezierCurveTo(171 * scale, 101 * scale, 169 * scale, 109 * scale, 164 * scale, 113 * scale);\r\n    ctx.bezierCurveTo(163 * scale, 104 * scale, 163 * scale, 104 * scale, 162 * scale, 95 * scale);\r\n    ctx.bezierCurveTo(155 * scale, 105 * scale, 155 * scale, 105 * scale, 147 * scale, 116 * scale);\r\n    ctx.bezierCurveTo(87 * scale, 114 * scale, 87 * scale, 114 * scale, 26 * scale, 112 * scale);\r\n    ctx.bezierCurveTo(27 * scale, 106 * scale, 27 * scale, 106 * scale, 27 * scale, 101 * scale);\r\n    ctx.bezierCurveTo(24 * scale, 104 * scale, 24 * scale, 104 * scale, 20 * scale, 108 * scale);\r\n    ctx.bezierCurveTo(17 * scale, 103 * scale, 20 * scale, 86 * scale, 23 * scale, 72 * scale);\r\n    ctx.bezierCurveTo(15 * scale, 74 * scale, 14 * scale, 78 * scale, 12 * scale, 83 * scale);\r\n    ctx.bezierCurveTo(12 * scale, 65 * scale, 12 * scale, 54 * scale, 16 * scale, 42 * scale);\r\n    ctx.bezierCurveTo(14 * scale, 39 * scale, 14 * scale, 39 * scale, 12 * scale, 36 * scale);\r\n    ctx.bezierCurveTo(16 * scale, 33 * scale, 16 * scale, 33 * scale, 19 * scale, 30 * scale);\r\n    ctx.bezierCurveTo(18 * scale, 27 * scale, 18 * scale, 27 * scale, 17 * scale, 25 * scale);\r\n    ctx.bezierCurveTo(24 * scale, 24 * scale, 31 * scale, 21 * scale, 29 * scale, 19 * scale);\r\n    ctx.bezierCurveTo(37 * scale, 25 * scale, 37 * scale, 25 * scale, 45 * scale, 31 * scale);\r\n    ctx.bezierCurveTo(40 * scale, 23 * scale, 40 * scale, 21 * scale, 42 * scale, 16 * scale);\r\n    ctx.bezierCurveTo(74 * scale, 16 * scale, 74 * scale, 16 * scale, 106 * scale, 16 * scale);\r\n    ctx.bezierCurveTo(113 * scale, 21 * scale, 113 * scale, 21 * scale, 119 * scale, 26 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[4], 4 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_zombie_hurt(scale, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 191 * scale;\r\n    can.height = 153 * scale;\r\n    ctx.save();\r\n    ctx.translate(96.49996948242188 * scale, 66.79510498046875 * scale);\r\n    round_rect(ctx, -79.5 * scale, -48.5 * scale, 159 * scale, 97 * scale, 22 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0], color[0], 4 * scale);\r\n    ctx.translate(2 * scale, 0);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(119 * scale, 28 * scale);\r\n    ctx.bezierCurveTo(119 * scale, 22 * scale, 119 * scale, 20 * scale, 122 * scale, 16 * scale);\r\n    ctx.bezierCurveTo(149 * scale, 39 * scale, 149 * scale, 39 * scale, 176 * scale, 63 * scale);\r\n    ctx.bezierCurveTo(176 * scale, 75 * scale, 176 * scale, 75 * scale, 175 * scale, 88 * scale);\r\n    ctx.bezierCurveTo(174 * scale, 90 * scale, 174 * scale, 90 * scale, 172 * scale, 93 * scale);\r\n    ctx.bezierCurveTo(171 * scale, 101 * scale, 169 * scale, 109 * scale, 164 * scale, 113 * scale);\r\n    ctx.bezierCurveTo(163 * scale, 104 * scale, 163 * scale, 104 * scale, 162 * scale, 95 * scale);\r\n    ctx.bezierCurveTo(155 * scale, 105 * scale, 155 * scale, 105 * scale, 147 * scale, 116 * scale);\r\n    ctx.bezierCurveTo(87 * scale, 114 * scale, 87 * scale, 114 * scale, 26 * scale, 112 * scale);\r\n    ctx.bezierCurveTo(27 * scale, 106 * scale, 27 * scale, 106 * scale, 27 * scale, 101 * scale);\r\n    ctx.bezierCurveTo(24 * scale, 104 * scale, 24 * scale, 104 * scale, 20 * scale, 108 * scale);\r\n    ctx.bezierCurveTo(17 * scale, 103 * scale, 20 * scale, 86 * scale, 23 * scale, 72 * scale);\r\n    ctx.bezierCurveTo(15 * scale, 74 * scale, 14 * scale, 78 * scale, 12 * scale, 83 * scale);\r\n    ctx.bezierCurveTo(12 * scale, 65 * scale, 12 * scale, 54 * scale, 16 * scale, 42 * scale);\r\n    ctx.bezierCurveTo(14 * scale, 39 * scale, 14 * scale, 39 * scale, 12 * scale, 36 * scale);\r\n    ctx.bezierCurveTo(16 * scale, 33 * scale, 16 * scale, 33 * scale, 19 * scale, 30 * scale);\r\n    ctx.bezierCurveTo(18 * scale, 27 * scale, 18 * scale, 27 * scale, 17 * scale, 25 * scale);\r\n    ctx.bezierCurveTo(24 * scale, 24 * scale, 31 * scale, 21 * scale, 29 * scale, 19 * scale);\r\n    ctx.bezierCurveTo(37 * scale, 25 * scale, 37 * scale, 25 * scale, 45 * scale, 31 * scale);\r\n    ctx.bezierCurveTo(40 * scale, 23 * scale, 40 * scale, 21 * scale, 42 * scale, 16 * scale);\r\n    ctx.bezierCurveTo(74 * scale, 16 * scale, 74 * scale, 16 * scale, 106 * scale, 16 * scale);\r\n    ctx.bezierCurveTo(113 * scale, 21 * scale, 113 * scale, 21 * scale, 119 * scale, 26 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[0], 4 * scale);\r\n    ctx.save();\r\n    ctx.translate(97.49996948242188 * scale, 95.12844848632812 * scale);\r\n    round_rect(ctx, -62.5 * scale, -41.5 * scale, 125 * scale, 83 * scale, 20 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0], color[0], 4 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_plant_seed(scale, useless, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    var w = scale * 40;\r\n    var h = scale * 40;\r\n    can.width = w;\r\n    can.height = h;\r\n    var x = scale * w / 2;\r\n    var y = scale * h / 2;\r\n    var r = scale * 15;\r\n    ctx.save();\r\n    ctx.translate(x, y);\r\n    ctx.globalAlpha = 1;\r\n    circle(ctx, 0, 0, r);\r\n    fill_path(ctx, color[0]);\r\n    var r = 5 * scale;\r\n    var x = 2 * scale;\r\n    var y = 1 * scale;\r\n    ctx.translate(x, y);\r\n    ctx.globalAlpha = 1;\r\n    circle(ctx, 0, 0, r);\r\n    fill_path(ctx, color[1]);\r\n    ctx.restore();\r\n    return can;\r\n}\r\n;\r\nfunction create_fish1(scale, useless, color, i) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 185 * scale;\r\n    can.height = 240 * scale;\r\n    ctx.globalAlpha = 0.5;\r\n    ctx.translate(0, 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(44 * scale, 137 * scale);\r\n    ctx.bezierCurveTo(60 * scale, 87 * scale, 68 * scale, 66 * scale, 92 * scale, 67 * scale);\r\n    ctx.bezierCurveTo(115 * scale, 64 * scale, 129 * scale, 97 * scale, 137 * scale, 136 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(53 * scale, 181 * scale);\r\n    ctx.bezierCurveTo(30 * scale, 164 * scale, 19 * scale, 150 * scale, 11 * scale, 136 * scale);\r\n    ctx.bezierCurveTo(28 * scale, 121 * scale, 38 * scale, 132 * scale, 48 * scale, 150 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(63 * scale, 208 * scale);\r\n    ctx.bezierCurveTo(75 * scale, 224 * scale, 86 * scale, 228 * scale, 93 * scale, 228 * scale);\r\n    ctx.bezierCurveTo(104 * scale, 229 * scale, 116 * scale, 219 * scale, 122 * scale, 205 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(130 * scale, 170 * scale);\r\n    ctx.bezierCurveTo(146 * scale, 125 * scale, 156 * scale, 126 * scale, 173 * scale, 137 * scale);\r\n    ctx.bezierCurveTo(167 * scale, 151 * scale, 143 * scale, 174 * scale, 131 * scale, 183 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(39 * scale, 140 * scale);\r\n    ctx.bezierCurveTo(75 * scale, 126 * scale, 113 * scale, 127 * scale, 143 * scale, 137 * scale);\r\n    ctx.bezierCurveTo(141 * scale, 186 * scale, 130 * scale, 202 * scale, 113 * scale, 214 * scale);\r\n    ctx.bezierCurveTo(85 * scale, 228 * scale, 56 * scale, 219 * scale, 48 * scale, 173 * scale);\r\n    ctx.bezierCurveTo(40 * scale, 148 * scale, 43 * scale, 145 * scale, 39 * scale, 140 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(0, -10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(44 * scale, 137 * scale);\r\n    ctx.bezierCurveTo(60 * scale, 87 * scale, 68 * scale, 66 * scale, 92 * scale, 67 * scale);\r\n    ctx.bezierCurveTo(115 * scale, 64 * scale, 129 * scale, 97 * scale, 137 * scale, 136 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(53 * scale, 181 * scale);\r\n    ctx.bezierCurveTo(30 * scale, 164 * scale, 19 * scale, 150 * scale, 11 * scale, 136 * scale);\r\n    ctx.bezierCurveTo(28 * scale, 121 * scale, 38 * scale, 132 * scale, 48 * scale, 150 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(63 * scale, 208 * scale);\r\n    ctx.bezierCurveTo(75 * scale, 224 * scale, 86 * scale, 228 * scale, 93 * scale, 228 * scale);\r\n    ctx.bezierCurveTo(104 * scale, 229 * scale, 116 * scale, 219 * scale, 122 * scale, 205 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(130 * scale, 170 * scale);\r\n    ctx.bezierCurveTo(146 * scale, 125 * scale, 156 * scale, 126 * scale, 173 * scale, 137 * scale);\r\n    ctx.bezierCurveTo(167 * scale, 151 * scale, 143 * scale, 174 * scale, 131 * scale, 183 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(39 * scale, 140 * scale);\r\n    ctx.bezierCurveTo(75 * scale, 126 * scale, 113 * scale, 127 * scale, 143 * scale, 137 * scale);\r\n    ctx.bezierCurveTo(141 * scale, 186 * scale, 130 * scale, 202 * scale, 113 * scale, 214 * scale);\r\n    ctx.bezierCurveTo(85 * scale, 228 * scale, 56 * scale, 219 * scale, 48 * scale, 173 * scale);\r\n    ctx.bezierCurveTo(40 * scale, 148 * scale, 43 * scale, 145 * scale, 39 * scale, 140 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(59 * scale, 99 * scale);\r\n    ctx.bezierCurveTo(71 * scale, 68 * scale, 81 * scale, 68 * scale, 94 * scale, 67 * scale);\r\n    ctx.bezierCurveTo(105 * scale, 66 * scale, 119 * scale, 75 * scale, 123 * scale, 96 * scale);\r\n    ctx.bezierCurveTo(104 * scale, 91 * scale, 101 * scale, 94 * scale, 94 * scale, 97 * scale);\r\n    ctx.bezierCurveTo(76 * scale, 92 * scale, 73 * scale, 93 * scale, 60 * scale, 99 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[2], 4 * scale);\r\n    if (i === 0) {\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(47 * scale, 149 * scale);\r\n        ctx.bezierCurveTo(43 * scale, 140 * scale, 48 * scale, 130 * scale, 59 * scale, 127 * scale);\r\n        ctx.bezierCurveTo(77 * scale, 126 * scale, 90 * scale, 131 * scale, 131 * scale, 127 * scale);\r\n        ctx.bezierCurveTo(143 * scale, 130 * scale, 144 * scale, 143 * scale, 132 * scale, 154 * scale);\r\n        ctx.bezierCurveTo(90 * scale, 152 * scale, 90 * scale, 152 * scale, 48 * scale, 150 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(40 * scale, 139 * scale);\r\n        ctx.bezierCurveTo(48 * scale, 113 * scale, 76 * scale, 119 * scale, 91 * scale, 126 * scale);\r\n        ctx.bezierCurveTo(117 * scale, 113 * scale, 135 * scale, 117 * scale, 144 * scale, 134 * scale);\r\n        ctx.bezierCurveTo(144 * scale, 138 * scale, 144 * scale, 138 * scale, 144 * scale, 142 * scale);\r\n        ctx.bezierCurveTo(128 * scale, 124 * scale, 108 * scale, 124 * scale, 91 * scale, 136 * scale);\r\n        ctx.bezierCurveTo(59 * scale, 124 * scale, 50 * scale, 137 * scale, 42 * scale, 148 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[3], color[2], 4 * scale);\r\n    } else {\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(41 * scale, 139 * scale);\r\n        ctx.bezierCurveTo(53 * scale, 117 * scale, 69 * scale, 118 * scale, 92 * scale, 127 * scale);\r\n        ctx.bezierCurveTo(124 * scale, 111 * scale, 136 * scale, 121 * scale, 143 * scale, 136 * scale);\r\n        ctx.bezierCurveTo(142 * scale, 144 * scale, 142 * scale, 144 * scale, 141 * scale, 152 * scale);\r\n        ctx.bezierCurveTo(128 * scale, 131 * scale, 113 * scale, 138 * scale, 92 * scale, 145 * scale);\r\n        ctx.bezierCurveTo(57 * scale, 133 * scale, 57 * scale, 147 * scale, 44 * scale, 154 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[3], color[2], 4 * scale);\r\n    }\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(90 * scale, 95 * scale);\r\n    ctx.bezierCurveTo(99 * scale, 82 * scale, 98 * scale, 58 * scale, 99 * scale, 40 * scale);\r\n    ctx.bezierCurveTo(90 * scale, 38 * scale, 89 * scale, 34 * scale, 92 * scale, 17 * scale);\r\n    ctx.bezierCurveTo(92 * scale, 5 * scale, 83 * scale, 16 * scale, 78 * scale, 29 * scale);\r\n    ctx.bezierCurveTo(72 * scale, 59 * scale, 87 * scale, 81 * scale, 89 * scale, 87 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(90 * scale, 86 * scale);\r\n    ctx.bezierCurveTo(95 * scale, 74 * scale, 95 * scale, 62 * scale, 95 * scale, 43 * scale);\r\n    ctx.bezierCurveTo(84 * scale, 37 * scale, 86 * scale, 34 * scale, 89 * scale, 16 * scale);\r\n    ctx.bezierCurveTo(75 * scale, 29 * scale, 80 * scale, 58 * scale, 90 * scale, 85 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[3], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(92 * scale, 117 * scale);\r\n    ctx.bezierCurveTo(98 * scale, 87 * scale, 93 * scale, 78 * scale, 85 * scale, 76 * scale);\r\n    ctx.bezierCurveTo(85.5 * scale, 79.5 * scale, 85.5 * scale, 79.5 * scale, 86 * scale, 83 * scale);\r\n    ctx.bezierCurveTo(84 * scale, 85.5 * scale, 84 * scale, 85.5 * scale, 82 * scale, 88 * scale);\r\n    ctx.bezierCurveTo(90 * scale, 93 * scale, 89 * scale, 100 * scale, 92 * scale, 117 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[3], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(92 * scale, 175 * scale);\r\n    ctx.bezierCurveTo(95 * scale, 135 * scale, 98 * scale, 125 * scale, 109 * scale, 121 * scale);\r\n    ctx.bezierCurveTo(106 * scale, 114 * scale, 104 * scale, 114 * scale, 102 * scale, 113 * scale);\r\n    ctx.bezierCurveTo(103 * scale, 106 * scale, 104 * scale, 103 * scale, 107 * scale, 96 * scale);\r\n    ctx.bezierCurveTo(74 * scale, 108 * scale, 86 * scale, 157 * scale, 92 * scale, 174 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[3], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(48 * scale, 169 * scale);\r\n    ctx.bezierCurveTo(42 * scale, 187 * scale, 50 * scale, 193 * scale, 59 * scale, 198 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[2], 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(136 * scale, 171 * scale);\r\n    ctx.bezierCurveTo(139 * scale, 186 * scale, 138 * scale, 191 * scale, 124 * scale, 199 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[2], 4 * scale);\r\n    circle(ctx, 63 * scale, 180 * scale, 15.231546211727817 * scale);\r\n    fill_path(ctx, color[4]);\r\n    circle(ctx, 121 * scale, 181 * scale, 15.652475842498529 * scale);\r\n    fill_path(ctx, color[4]);\r\n    circle(ctx, 58 * scale, 175 * scale, 5.656854249492381 * scale);\r\n    fill_path(ctx, color[2]);\r\n    circle(ctx, 116 * scale, 175 * scale, 5.656854249492381 * scale);\r\n    fill_path(ctx, color[2]);\r\n    return can;\r\n}\r\n;\r\nfunction create_hurt_fish1(scale, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 185 * scale;\r\n    can.height = 240 * scale;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(44 * scale, 137 * scale);\r\n    ctx.bezierCurveTo(60 * scale, 87 * scale, 68 * scale, 66 * scale, 92 * scale, 67 * scale);\r\n    ctx.bezierCurveTo(115 * scale, 64 * scale, 129 * scale, 97 * scale, 137 * scale, 136 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(53 * scale, 181 * scale);\r\n    ctx.bezierCurveTo(30 * scale, 164 * scale, 19 * scale, 150 * scale, 11 * scale, 136 * scale);\r\n    ctx.bezierCurveTo(28 * scale, 121 * scale, 38 * scale, 132 * scale, 48 * scale, 150 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(63 * scale, 208 * scale);\r\n    ctx.bezierCurveTo(75 * scale, 224 * scale, 86 * scale, 228 * scale, 93 * scale, 228 * scale);\r\n    ctx.bezierCurveTo(104 * scale, 229 * scale, 116 * scale, 219 * scale, 122 * scale, 205 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(130 * scale, 170 * scale);\r\n    ctx.bezierCurveTo(146 * scale, 125 * scale, 156 * scale, 126 * scale, 173 * scale, 137 * scale);\r\n    ctx.bezierCurveTo(167 * scale, 151 * scale, 143 * scale, 174 * scale, 131 * scale, 183 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(39 * scale, 140 * scale);\r\n    ctx.bezierCurveTo(75 * scale, 126 * scale, 113 * scale, 127 * scale, 143 * scale, 137 * scale);\r\n    ctx.bezierCurveTo(141 * scale, 186 * scale, 130 * scale, 202 * scale, 113 * scale, 214 * scale);\r\n    ctx.bezierCurveTo(85 * scale, 228 * scale, 56 * scale, 219 * scale, 48 * scale, 173 * scale);\r\n    ctx.bezierCurveTo(40 * scale, 148 * scale, 43 * scale, 145 * scale, 39 * scale, 140 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(90 * scale, 95 * scale);\r\n    ctx.bezierCurveTo(99 * scale, 82 * scale, 98 * scale, 58 * scale, 99 * scale, 40 * scale);\r\n    ctx.bezierCurveTo(90 * scale, 38 * scale, 89 * scale, 34 * scale, 92 * scale, 17 * scale);\r\n    ctx.bezierCurveTo(92 * scale, 5 * scale, 83 * scale, 16 * scale, 78 * scale, 29 * scale);\r\n    ctx.bezierCurveTo(72 * scale, 59 * scale, 87 * scale, 81 * scale, 89 * scale, 87 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(90 * scale, 86 * scale);\r\n    ctx.bezierCurveTo(95 * scale, 74 * scale, 95 * scale, 62 * scale, 95 * scale, 43 * scale);\r\n    ctx.bezierCurveTo(84 * scale, 37 * scale, 86 * scale, 34 * scale, 89 * scale, 16 * scale);\r\n    ctx.bezierCurveTo(75 * scale, 29 * scale, 80 * scale, 58 * scale, 90 * scale, 85 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(92 * scale, 117 * scale);\r\n    ctx.bezierCurveTo(98 * scale, 87 * scale, 93 * scale, 78 * scale, 85 * scale, 76 * scale);\r\n    ctx.bezierCurveTo(85.5 * scale, 79.5 * scale, 85.5 * scale, 79.5 * scale, 86 * scale, 83 * scale);\r\n    ctx.bezierCurveTo(84 * scale, 85.5 * scale, 84 * scale, 85.5 * scale, 82 * scale, 88 * scale);\r\n    ctx.bezierCurveTo(90 * scale, 93 * scale, 89 * scale, 100 * scale, 92 * scale, 117 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(92 * scale, 175 * scale);\r\n    ctx.bezierCurveTo(95 * scale, 135 * scale, 98 * scale, 125 * scale, 109 * scale, 121 * scale);\r\n    ctx.bezierCurveTo(106 * scale, 114 * scale, 104 * scale, 114 * scale, 102 * scale, 113 * scale);\r\n    ctx.bezierCurveTo(103 * scale, 106 * scale, 104 * scale, 103 * scale, 107 * scale, 96 * scale);\r\n    ctx.bezierCurveTo(74 * scale, 108 * scale, 86 * scale, 157 * scale, 92 * scale, 174 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    return can;\r\n}\r\n;\r\nfunction create_fish2(scale, useless, color, i) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 185 * scale;\r\n    can.height = 240 * scale;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(58 * scale, 205 * scale);\r\n    ctx.bezierCurveTo(74 * scale, 227 * scale, 83 * scale, 230 * scale, 92 * scale, 230 * scale);\r\n    ctx.bezierCurveTo(101 * scale, 232 * scale, 119 * scale, 219 * scale, 122 * scale, 205 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(46 * scale, 151 * scale);\r\n    ctx.bezierCurveTo(34 * scale, 126 * scale, 21 * scale, 130 * scale, 10 * scale, 139 * scale);\r\n    ctx.bezierCurveTo(27 * scale, 168 * scale, 48 * scale, 180 * scale, 53 * scale, 184 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[2], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(122 * scale, 165 * scale);\r\n    ctx.bezierCurveTo(143 * scale, 140 * scale, 154 * scale, 123 * scale, 172 * scale, 139 * scale);\r\n    ctx.bezierCurveTo(169 * scale, 149 * scale, 147 * scale, 173 * scale, 126 * scale, 192 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[2], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(47 * scale, 129 * scale);\r\n    ctx.bezierCurveTo(55 * scale, 90 * scale, 71 * scale, 66 * scale, 93 * scale, 69 * scale);\r\n    ctx.bezierCurveTo(116 * scale, 70 * scale, 122 * scale, 88 * scale, 136 * scale, 127 * scale);\r\n    ctx.bezierCurveTo(143 * scale, 137 * scale, 144 * scale, 137 * scale, 144 * scale, 142 * scale);\r\n    ctx.bezierCurveTo(138 * scale, 199 * scale, 128 * scale, 206 * scale, 108 * scale, 219 * scale);\r\n    ctx.bezierCurveTo(84 * scale, 228 * scale, 65 * scale, 224 * scale, 50 * scale, 191 * scale);\r\n    ctx.bezierCurveTo(41 * scale, 161 * scale, 41 * scale, 157 * scale, 39 * scale, 144 * scale);\r\n    ctx.bezierCurveTo(40 * scale, 140 * scale, 42 * scale, 137 * scale, 47 * scale, 129 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(47 * scale, 133 * scale);\r\n    ctx.bezierCurveTo(65 * scale, 143 * scale, 74 * scale, 162 * scale, 70 * scale, 186 * scale);\r\n    ctx.bezierCurveTo(71 * scale, 188.5 * scale, 71 * scale, 188.5 * scale, 72 * scale, 191 * scale);\r\n    ctx.bezierCurveTo(81 * scale, 185.5 * scale, 81 * scale, 185.5 * scale, 90 * scale, 180 * scale);\r\n    ctx.bezierCurveTo(99 * scale, 185 * scale, 99 * scale, 185 * scale, 108 * scale, 190 * scale);\r\n    ctx.bezierCurveTo(110.5 * scale, 184.5 * scale, 110.5 * scale, 184.5 * scale, 113 * scale, 179 * scale);\r\n    ctx.bezierCurveTo(110 * scale, 156 * scale, 121 * scale, 156 * scale, 142 * scale, 141 * scale);\r\n    ctx.bezierCurveTo(137.5 * scale, 133 * scale, 137.5 * scale, 133 * scale, 133 * scale, 125 * scale);\r\n    ctx.bezierCurveTo(116 * scale, 78 * scale, 112 * scale, 70 * scale, 91 * scale, 71 * scale);\r\n    ctx.bezierCurveTo(62 * scale, 69 * scale, 59 * scale, 107 * scale, 48 * scale, 132 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(93 * scale, 86 * scale);\r\n    ctx.bezierCurveTo(101 * scale, 79 * scale, 99 * scale, 56 * scale, 100 * scale, 37 * scale);\r\n    ctx.bezierCurveTo(90 * scale, 34 * scale, 90 * scale, 27 * scale, 93 * scale, 13 * scale);\r\n    ctx.bezierCurveTo(96 * scale, 0 * scale, 85 * scale, 13 * scale, 82 * scale, 26 * scale);\r\n    ctx.bezierCurveTo(78 * scale, 43 * scale, 89 * scale, 74 * scale, 93 * scale, 85 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[2], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(94 * scale, 86 * scale);\r\n    ctx.bezierCurveTo(120 * scale, 88 * scale, 132 * scale, 109 * scale, 122 * scale, 128 * scale);\r\n    ctx.bezierCurveTo(118 * scale, 139 * scale, 101 * scale, 146 * scale, 90 * scale, 143 * scale);\r\n    ctx.bezierCurveTo(57 * scale, 141 * scale, 49 * scale, 109 * scale, 68 * scale, 94 * scale);\r\n    ctx.bezierCurveTo(78 * scale, 85 * scale, 90 * scale, 86 * scale, 95 * scale, 86 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(91 * scale, 178 * scale);\r\n    ctx.bezierCurveTo(78 * scale, 136 * scale, 81 * scale, 88 * scale, 93 * scale, 87 * scale);\r\n    ctx.bezierCurveTo(101 * scale, 84 * scale, 94 * scale, 97 * scale, 94 * scale, 107 * scale);\r\n    ctx.bezierCurveTo(91 * scale, 112 * scale, 92 * scale, 117 * scale, 94 * scale, 121 * scale);\r\n    ctx.bezierCurveTo(98 * scale, 126 * scale, 102 * scale, 128 * scale, 97 * scale, 135 * scale);\r\n    ctx.bezierCurveTo(92 * scale, 140 * scale, 93 * scale, 160 * scale, 91 * scale, 179 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[5], color[1], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(20 * scale, 151 * scale);\r\n    ctx.bezierCurveTo(22 * scale, 147 * scale, 22 * scale, 147 * scale, 24 * scale, 143 * scale);\r\n    ctx.bezierCurveTo(27 * scale, 144.5 * scale, 27 * scale, 144.5 * scale, 30 * scale, 146 * scale);\r\n    ctx.bezierCurveTo(31 * scale, 143 * scale, 31 * scale, 143 * scale, 32 * scale, 140 * scale);\r\n    ctx.bezierCurveTo(35 * scale, 140.5 * scale, 35 * scale, 140.5 * scale, 38 * scale, 141 * scale);\r\n    ctx.bezierCurveTo(31 * scale, 132 * scale, 29 * scale, 131 * scale, 22 * scale, 132 * scale);\r\n    ctx.bezierCurveTo(14 * scale, 135 * scale, 13 * scale, 135 * scale, 11 * scale, 138 * scale);\r\n    ctx.bezierCurveTo(15.5 * scale, 144.5 * scale, 15.5 * scale, 144.5 * scale, 20 * scale, 151 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[6]);\r\n    circle(ctx, 61 * scale, 183 * scale, 16.15549442140351 * scale);\r\n    fill_path(ctx, color[7]);\r\n    circle(ctx, 121 * scale, 184 * scale, 14.866068747318506 * scale);\r\n    fill_path(ctx, color[7]);\r\n    circle(ctx, 57 * scale, 178 * scale, 5.656854249492381 * scale);\r\n    fill_path(ctx, color[2]);\r\n    circle(ctx, 116 * scale, 177 * scale, 5.830951894845301 * scale);\r\n    fill_path(ctx, color[2]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(162 * scale, 152 * scale);\r\n    ctx.bezierCurveTo(161.5 * scale, 148 * scale, 161.5 * scale, 148 * scale, 161 * scale, 144 * scale);\r\n    ctx.bezierCurveTo(157.5 * scale, 145 * scale, 157.5 * scale, 145 * scale, 154 * scale, 146 * scale);\r\n    ctx.bezierCurveTo(153.5 * scale, 143 * scale, 153.5 * scale, 143 * scale, 153 * scale, 140 * scale);\r\n    ctx.bezierCurveTo(149 * scale, 140.5 * scale, 149 * scale, 140.5 * scale, 145 * scale, 141 * scale);\r\n    ctx.bezierCurveTo(150 * scale, 132 * scale, 161 * scale, 131 * scale, 170 * scale, 138 * scale);\r\n    ctx.bezierCurveTo(173 * scale, 141 * scale, 165 * scale, 150 * scale, 162 * scale, 150 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[6]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(106 * scale, 110 * scale);\r\n    ctx.bezierCurveTo(104 * scale, 98 * scale, 112 * scale, 91 * scale, 118 * scale, 101 * scale);\r\n    ctx.bezierCurveTo(122 * scale, 115 * scale, 121 * scale, 119 * scale, 117 * scale, 124 * scale);\r\n    ctx.bezierCurveTo(112 * scale, 129 * scale, 107 * scale, 124 * scale, 106 * scale, 112 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(64 * scale, 106 * scale);\r\n    ctx.bezierCurveTo(66 * scale, 97 * scale, 72 * scale, 89 * scale, 76 * scale, 98 * scale);\r\n    ctx.bezierCurveTo(78 * scale, 106 * scale, 79 * scale, 118 * scale, 72 * scale, 126 * scale);\r\n    ctx.bezierCurveTo(65 * scale, 130 * scale, 63 * scale, 117 * scale, 64 * scale, 108 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1]);\r\n    return can;\r\n}\r\n;\r\nfunction create_food_plant(scale) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    var w = scale * 200;\r\n    var h = scale * 200;\r\n    can.width = w;\r\n    can.height = h;\r\n    var img = create_plant(0.35, false, [\"#0e3022\", \"#0b8052\", \"#077b49\"]);\r\n    ctx.drawImage(img, 10, 10);\r\n    var img = create_fruit(0.9, false, [\"#3d2a6e\", \"#8255b5\"]);\r\n    ctx.drawImage(img, 21, 20);\r\n    var img = create_fruit(0.9, false, [\"#3d2a6e\", \"#8255b5\"]);\r\n    ctx.drawImage(img, 38, 28);\r\n    var img = create_fruit(0.9, false, [\"#3d2a6e\", \"#8255b5\"]);\r\n    ctx.drawImage(img, 15, 37);\r\n    var img = create_fruit(0.9, false, [\"#3d2a6e\", \"#8255b5\"]);\r\n    ctx.drawImage(img, 32, 45);\r\n    return can;\r\n}\r\n;\r\nfunction create_gear(scale, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    var w = scale * 100;\r\n    var h = scale * 100;\r\n    var x = w / 2;\r\n    var y = h / 2;\r\n    can.width = w;\r\n    can.height = h;\r\n    var wr = scale * 5;\r\n    var hr = scale * 28;\r\n    var wr2 = wr / 2;\r\n    var hr2 = hr / 2;\r\n    ctx.translate(x, y);\r\n    for (var i = 0; i < 4; i++) {\r\n        round_rect(ctx, -wr2, -hr2, wr, hr, scale * 2);\r\n        ctx.rotate(Math.PI / 4);\r\n        fill_path(ctx, color);\r\n    }\r\n    ctx.arc(0, 0, 10 * scale, 0, Math.PI * 2);\r\n    fill_path(ctx, color);\r\n    ctx.globalCompositeOperation = \"destination-out\";\r\n    circle(ctx, 0, 0, scale * 4);\r\n    ctx.fill();\r\n    return can;\r\n}\r\n;\r\nfunction create_gear_option(scale, color, t) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    var w = scale * 32;\r\n    var h = scale * 32;\r\n    var x = w / 2;\r\n    var y = h / 2;\r\n    can.width = w;\r\n    can.height = h;\r\n    var wr = scale * 5;\r\n    var hr = scale * 28;\r\n    var wr2 = wr / 2;\r\n    var hr2 = hr / 2;\r\n    ctx.translate(0 * scale, 0 * scale);\r\n    ctx.translate(x, y);\r\n    if (t == 1) {\r\n        circle(ctx, 0, 0, 10 * scale, 0);\r\n        fill_path(ctx, color[2], color[2], 3 * scale);\r\n        for (var i = 0; i < 4; i++) {\r\n            round_rect(ctx, -wr2, -hr2, wr, hr, scale * 2);\r\n            ctx.rotate(Math.PI / 4);\r\n            fill_path(ctx, color[2], color[2], 4 * scale);\r\n        }\r\n    }\r\n    circle(ctx, 0, 0, 10 * scale, 0);\r\n    fill_path(ctx, color[0], color[1], 1.5 * scale);\r\n    for (var i = 0; i < 4; i++) {\r\n        round_rect(ctx, -wr2, -hr2, wr, hr, scale * 2);\r\n        ctx.rotate(Math.PI / 4);\r\n        fill_path(ctx, color[0], color[1], 1.5 * scale);\r\n    }\r\n    circle(ctx, 0, 0, 10 * scale, 0);\r\n    fill_path(ctx, color[0]);\r\n    circle(ctx, 0, 0, 4 * scale, 0);\r\n    fill_path(ctx, color[2], color[1], 1.5 * scale);\r\n    ctx.globalCompositeOperation = \"destination-out\";\r\n    circle(ctx, 0, 0, 4 * scale, 0);\r\n    fill_path(ctx, color[0], color[1], 2 * scale);\r\n    ctx.globalCompositeOperation = \"source-over\";\r\n    circle(ctx, 0, 0, 4 * scale, 0);\r\n    fill_path(ctx, undefined, color[1], 2 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_minimap_object(ctx, scale, color, t, r, max, min) {\r\n    if (min === undefined) min = 0;\r\n    for (var k = max == -1 ? 0 : max; k >= min; k--) {\r\n        for (var i = 0; i < 200; i++) {\r\n            for (var j = 0; j < 200; j++) {\r\n                var tile = MAP.tiles[j][i];\r\n                if (!tile || !tile[t]) continue;\r\n                if (max == -1) var o = tile[t]; else var o = tile[t][k];\r\n                for (var l = 0; o && l < o.length; l++) {\r\n                    var object = o[l];\r\n                    ctx.fillStyle = color;\r\n                    circle(ctx, object.x * scale * 0.0095, object.y * scale * 0.0095, r * scale);\r\n                    ctx.fill();\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n;\r\nfunction create_minimap(scale, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 200 * scale;\r\n    can.height = 200 * scale;\r\n    ctx.translate(9 * scale, 12 * scale);\r\n    ctx.fillStyle = color[0];\r\n    ctx.fillRect(-2, -3, can.width, can.height);\r\n    ctx.fillStyle = color[9];\r\n    ctx.fillRect(0, 0, can.width, can.height);\r\n    ctx.fillStyle = color[17];\r\n    ctx.fillRect(0, 0, can.width, can.height / 2.1);\r\n    ctx.fillStyle = color[26];\r\n    ctx.fillRect(can.width / 1.77, can.height / 2.1, can.width / 2.1, can.height / 2.1);\r\n    ctx.fillStyle = color[28];\r\n    ctx.fillRect(can.width / 1.77, can.height / 2.1, 5, can.height / 2.1);\r\n    create_minimap_object(ctx, scale, color[17], \"so\", 3, 6, 0);\r\n    create_minimap_object(ctx, scale, color[28], \"isl\", 6, 2, 2);\r\n    create_minimap_object(ctx, scale, color[28], \"isl\", 6, 1, 1);\r\n    create_minimap_object(ctx, scale, color[28], \"isl\", 6, 0, 0);\r\n    create_minimap_object(ctx, scale, color[5], \"plm\", 2, 2, 2);\r\n    create_minimap_object(ctx, scale, color[5], \"plm\", 2, 1, 1);\r\n    create_minimap_object(ctx, scale, color[5], \"plm\", 2, 0, 0);\r\n    create_minimap_object(ctx, scale, color[5], \"t\", 2, 5, 4);\r\n    create_minimap_object(ctx, scale, color[6], \"t\", 3, 3, 2);\r\n    create_minimap_object(ctx, scale, color[7], \"t\", 4, 1, 0);\r\n    create_minimap_object(ctx, scale, color[8], \"b\", 3, 3, 2);\r\n    create_minimap_object(ctx, scale, color[9], \"b\", 4, 1, 0);\r\n    create_minimap_object(ctx, scale, color[2], \"s\", 2, 2, 2);\r\n    create_minimap_object(ctx, scale, color[3], \"s\", 3, 1, 1);\r\n    create_minimap_object(ctx, scale, color[4], \"s\", 4, 0, 0);\r\n    create_minimap_object(ctx, scale, color[10], \"g\", 2, 2, 2);\r\n    create_minimap_object(ctx, scale, color[11], \"g\", 3, 1, 1);\r\n    create_minimap_object(ctx, scale, color[12], \"g\", 4, 0, 0);\r\n    create_minimap_object(ctx, scale, color[1], \"p\", 4, -1);\r\n    create_minimap_object(ctx, scale, color[25], \"dg\", 3, 6, 0);\r\n    create_minimap_object(ctx, scale, color[27], \"cs\", 2, 2, 2);\r\n    create_minimap_object(ctx, scale, color[27], \"cs\", 2, 1, 1);\r\n    create_minimap_object(ctx, scale, color[27], \"cs\", 2, 0, 0);\r\n    create_minimap_object(ctx, scale, color[19], \"f\", 2, 2, 2);\r\n    create_minimap_object(ctx, scale, color[20], \"f\", 3, 1, 1);\r\n    create_minimap_object(ctx, scale, color[21], \"f\", 4, 0, 0);\r\n    create_minimap_object(ctx, scale, color[22], \"gw\", 2, 2, 2);\r\n    create_minimap_object(ctx, scale, color[22], \"gw\", 3, 1, 1);\r\n    create_minimap_object(ctx, scale, color[22], \"gw\", 4, 0, 0);\r\n    create_minimap_object(ctx, scale, color[23], \"dw\", 3, 1, 1);\r\n    create_minimap_object(ctx, scale, color[23], \"dw\", 4, 0, 0);\r\n    create_minimap_object(ctx, scale, color[23], \"dw\", 2, 2, 2);\r\n    create_minimap_object(ctx, scale, color[23], \"d\", 3, 1, 1);\r\n    create_minimap_object(ctx, scale, color[23], \"d\", 4, 0, 0);\r\n    create_minimap_object(ctx, scale, color[23], \"d\", 2, 2, 2);\r\n    create_minimap_object(ctx, scale, color[24], \"a\", 2, 2, 2);\r\n    create_minimap_object(ctx, scale, color[24], \"a\", 3, 1, 1);\r\n    create_minimap_object(ctx, scale, color[24], \"a\", 4, 0, 0);\r\n    create_minimap_object(ctx, scale, color[30], \"l\", 4, 2, 2);\r\n    create_minimap_object(ctx, scale, color[30], \"l\", 4, 1, 1);\r\n    create_minimap_object(ctx, scale, color[30], \"l\", 4, 0, 0);\r\n    circle(ctx, 0, 0, 0);\r\n    ctx.globalCompositeOperation = \"destination-out\";\r\n    ctx.translate(-9 * scale, -4 * scale);\r\n    ctx.rect(5 * scale, 0, can.width * scale, can.height * scale, 10 * scale);\r\n    ctx.lineWidth = 7 * scale;\r\n    ctx.strokeStyle = color[16];\r\n    ctx.stroke();\r\n    return can;\r\n}\r\n;\r\nfunction create_workbench(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    var w = scale * 125;\r\n    var h = scale * 95;\r\n    var w2 = w / 2;\r\n    var h2 = h / 2;\r\n    var round = scale * 10;\r\n    var shadow = scale * 8;\r\n    var ww = scale * 112;\r\n    var hw = scale * 82;\r\n    var ww2 = ww / 2;\r\n    var hw2 = hw / 2;\r\n    var width = scale * 4;\r\n    can.width = w;\r\n    can.height = h;\r\n    ctx.translate(w2 - 4 * scale, h2 + 4 * scale);\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    round_rect(ctx, -ww2, -hw2, ww, hw, round);\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(0, -shadow);\r\n    round_rect(ctx, -ww2, -hw2, ww, hw, round);\r\n    fill_path(ctx, color[1], color[2], width);\r\n    var w = 55 * scale;\r\n    var h = 45 * scale;\r\n    var round = 5;\r\n    ctx.translate(-40 * scale, -30 * scale);\r\n    round_rect(ctx, 0, 0, w, h, round);\r\n    fill_path(ctx, color[3]);\r\n    var img = create_gear(0.7 * scale, color[3]);\r\n    ctx.drawImage(img, 45 * scale, -25 * scale);\r\n    var img = create_gear(0.7 * scale, color[3]);\r\n    ctx.drawImage(img, 45 * scale, 15 * scale);\r\n    var img = create_gear(1.2 * scale, color[3]);\r\n    ctx.drawImage(img, 28 * scale, -30 * scale);\r\n    var w = 15 * scale;\r\n    var h = 70 * scale;\r\n    var round = 5 * scale;\r\n    ctx.translate(78 * scale, -5 * scale);\r\n    round_rect(ctx, 0, 0, w, h, round);\r\n    fill_path(ctx, color[4]);\r\n    var w = 9 * scale;\r\n    var h = 50 * scale;\r\n    var round = 3 * scale;\r\n    ctx.translate(-20 * scale, 20 * scale);\r\n    ctx.rotate(Math.PI / 5);\r\n    ctx.globalAlpha = 0.6;\r\n    round_rect(ctx, 0, 0, w, h, round);\r\n    fill_path(ctx, color[5]);\r\n    ctx.translate(-20 * scale, 29 * scale);\r\n    ctx.rotate(Math.PI / 5);\r\n    ctx.globalAlpha = 0.6;\r\n    ctx.beginPath();\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(0, 0);\r\n    ctx.lineTo(0, 30 * scale);\r\n    ctx.lineTo(30 * scale, 30 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, null, color[5], 8 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_rabbit(scale, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    var w = scale * 85;\r\n    var h = scale * 115;\r\n    var shadow = scale * 6;\r\n    var width = scale * 4;\r\n    can.width = w;\r\n    can.height = h;\r\n    ctx.translate(-130 * scale, -60 * scale + shadow);\r\n    ctx.globalAlpha = 0.5;\r\n    ctx.beginPath();\r\n    ctx.bezierCurveTo(190 * scale, 87 * scale, 201 * scale, 59 * scale, 208 * scale, 64 * scale);\r\n    ctx.bezierCurveTo(213 * scale, 68 * scale, 204 * scale, 93 * scale, 195 * scale, 109 * scale);\r\n    ctx.bezierCurveTo(195 * scale, 109 * scale, 202 * scale, 124 * scale, 191 * scale, 141 * scale);\r\n    ctx.bezierCurveTo(182 * scale, 151 * scale, 164 * scale, 155 * scale, 148 * scale, 144 * scale);\r\n    ctx.bezierCurveTo(136 * scale, 135 * scale, 138 * scale, 111 * scale, 145 * scale, 104 * scale);\r\n    ctx.bezierCurveTo(140 * scale, 92 * scale, 131 * scale, 67 * scale, 138 * scale, 63 * scale);\r\n    ctx.bezierCurveTo(145 * scale, 61 * scale, 153 * scale, 82 * scale, 155 * scale, 96 * scale);\r\n    ctx.bezierCurveTo(167 * scale, 91 * scale, 178 * scale, 92 * scale, 187 * scale, 98 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.translate(0, -shadow);\r\n    ctx.globalAlpha = 1;\r\n    ctx.beginPath();\r\n    ctx.bezierCurveTo(190 * scale, 87 * scale, 201 * scale, 59 * scale, 208 * scale, 64 * scale);\r\n    ctx.bezierCurveTo(213 * scale, 68 * scale, 204 * scale, 93 * scale, 195 * scale, 109 * scale);\r\n    ctx.bezierCurveTo(195 * scale, 109 * scale, 202 * scale, 124 * scale, 191 * scale, 141 * scale);\r\n    ctx.bezierCurveTo(182 * scale, 151 * scale, 164 * scale, 155 * scale, 148 * scale, 144 * scale);\r\n    ctx.bezierCurveTo(136 * scale, 135 * scale, 138 * scale, 111 * scale, 145 * scale, 104 * scale);\r\n    ctx.bezierCurveTo(140 * scale, 92 * scale, 131 * scale, 67 * scale, 138 * scale, 63 * scale);\r\n    ctx.bezierCurveTo(145 * scale, 61 * scale, 153 * scale, 82 * scale, 155 * scale, 96 * scale);\r\n    ctx.bezierCurveTo(167 * scale, 91 * scale, 178 * scale, 92 * scale, 187 * scale, 98 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 4);\r\n    var x_eye = scale * 155;\r\n    var y_eye = scale * 133;\r\n    var r_eye = scale * 10;\r\n    var r_pupil1 = scale * 3;\r\n    var x_pupil = x_eye + scale * -3;\r\n    var y_pupil = y_eye + scale * -5;\r\n    ctx.save();\r\n    ctx.translate(x_eye, y_eye);\r\n    ctx.globalAlpha = 1;\r\n    circle(ctx, 0, 0, r_eye);\r\n    fill_path(ctx, color[3]);\r\n    ctx.restore();\r\n    ctx.save();\r\n    ctx.translate(x_pupil, y_pupil);\r\n    ctx.globalAlpha = 1;\r\n    circle(ctx, 0, 0, r_pupil1);\r\n    fill_path(ctx, color[4]);\r\n    ctx.restore();\r\n    ctx.save();\r\n    ctx.translate(x_eye + 27 * scale, y_eye);\r\n    ctx.globalAlpha = 1;\r\n    circle(ctx, 0, 0, r_eye);\r\n    fill_path(ctx, color[3]);\r\n    ctx.restore();\r\n    ctx.save();\r\n    ctx.translate(27 * scale + x_pupil, y_pupil);\r\n    ctx.globalAlpha = 1;\r\n    circle(ctx, 0, 0, r_pupil1);\r\n    fill_path(ctx, color[4]);\r\n    return can;\r\n}\r\n;\r\nfunction create_hurt_rabbit(scale, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    var w = scale * 85;\r\n    var h = scale * 115;\r\n    var shadow = scale * 6;\r\n    var width = scale * 4;\r\n    can.width = w;\r\n    can.height = h;\r\n    ctx.translate(-130 * scale, -60 * scale);\r\n    ctx.globalAlpha = 1;\r\n    ctx.beginPath();\r\n    ctx.bezierCurveTo(190 * scale, 87 * scale, 201 * scale, 59 * scale, 208 * scale, 64 * scale);\r\n    ctx.bezierCurveTo(213 * scale, 68 * scale, 204 * scale, 93 * scale, 195 * scale, 109 * scale);\r\n    ctx.bezierCurveTo(195 * scale, 109 * scale, 202 * scale, 124 * scale, 191 * scale, 141 * scale);\r\n    ctx.bezierCurveTo(182 * scale, 151 * scale, 164 * scale, 155 * scale, 148 * scale, 144 * scale);\r\n    ctx.bezierCurveTo(136 * scale, 135 * scale, 138 * scale, 111 * scale, 145 * scale, 104 * scale);\r\n    ctx.bezierCurveTo(140 * scale, 92 * scale, 131 * scale, 67 * scale, 138 * scale, 63 * scale);\r\n    ctx.bezierCurveTo(145 * scale, 61 * scale, 153 * scale, 82 * scale, 155 * scale, 96 * scale);\r\n    ctx.bezierCurveTo(167 * scale, 91 * scale, 178 * scale, 92 * scale, 187 * scale, 98 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color, color, width);\r\n    return can;\r\n}\r\n;\r\nfunction create_hurt_wolf(scale, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 188 * scale;\r\n    can.height = 190 * scale;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(33.00567626953125 * scale, 95.44320678710938 * scale);\r\n    ctx.bezierCurveTo(42.00567626953125 * scale, 87.44320678710938 * scale, 48.00567626953125 * scale, 51.443206787109375 * scale, 74.00567626953125 * scale, 47.443206787109375 * scale);\r\n    ctx.bezierCurveTo(100.00567626953125 * scale, 42.443206787109375 * scale, 118.00567626953125 * scale, 49.443206787109375 * scale, 131.00567626953125 * scale, 55.443206787109375 * scale);\r\n    ctx.bezierCurveTo(140.00567626953125 * scale, 70.44320678710938 * scale, 145.00567626953125 * scale, 87.44320678710938 * scale, 152.00567626953125 * scale, 94.44320678710938 * scale);\r\n    ctx.bezierCurveTo(149.00567626953125 * scale, 99.44320678710938 * scale, 147.00567626953125 * scale, 98.44320678710938 * scale, 141.00567626953125 * scale, 101.44320678710938 * scale);\r\n    ctx.bezierCurveTo(147.00567626953125 * scale, 108.44320678710938 * scale, 147.00567626953125 * scale, 111.44320678710938 * scale, 147.00567626953125 * scale, 112.44320678710938 * scale);\r\n    ctx.bezierCurveTo(143.00567626953125 * scale, 112.44320678710938 * scale, 141.00567626953125 * scale, 112.44320678710938 * scale, 137.00567626953125 * scale, 111.44320678710938 * scale);\r\n    ctx.bezierCurveTo(138.00567626953125 * scale, 117.44320678710938 * scale, 138.00567626953125 * scale, 120.44320678710938 * scale, 138.00567626953125 * scale, 124.44320678710938 * scale);\r\n    ctx.bezierCurveTo(125.00567626953125 * scale, 107.44320678710938 * scale, 121.00567626953125 * scale, 124.44320678710938 * scale, 110.00567626953125 * scale, 141.44320678710938 * scale);\r\n    ctx.bezierCurveTo(102.00567626953125 * scale, 158.44320678710938 * scale, 89.00567626953125 * scale, 158.44320678710938 * scale, 80.00567626953125 * scale, 144.44320678710938 * scale);\r\n    ctx.bezierCurveTo(61.00567626953125 * scale, 111.44320678710938 * scale, 56.00567626953125 * scale, 117.44320678710938 * scale, 48.00567626953125 * scale, 120.44320678710938 * scale);\r\n    ctx.bezierCurveTo(46.00567626953125 * scale, 118.44320678710938 * scale, 47.00567626953125 * scale, 112.44320678710938 * scale, 48.00567626953125 * scale, 107.44320678710938 * scale);\r\n    ctx.bezierCurveTo(43.00567626953125 * scale, 111.44320678710938 * scale, 40.00567626953125 * scale, 111.44320678710938 * scale, 37.00567626953125 * scale, 110.44320678710938 * scale);\r\n    ctx.bezierCurveTo(39.50567626953125 * scale, 104.94320678710938 * scale, 39.50567626953125 * scale, 104.94320678710938 * scale, 42.00567626953125 * scale, 99.44320678710938 * scale);\r\n    ctx.bezierCurveTo(33.00567626953125 * scale, 99.44320678710938 * scale, 33.00567626953125 * scale, 98.44320678710938 * scale, 33.00567626953125 * scale, 96.44320678710938 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[0], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(51.00567626953125 * scale, 72.53409576416016 * scale);\r\n    ctx.bezierCurveTo(48.00567626953125 * scale, 56.534095764160156 * scale, 48.00567626953125 * scale, 49.534095764160156 * scale, 54.00567626953125 * scale, 35.534095764160156 * scale);\r\n    ctx.bezierCurveTo(58.00567626953125 * scale, 26.534095764160156 * scale, 65.00567626953125 * scale, 27.534095764160156 * scale, 73.00567626953125 * scale, 40.534095764160156 * scale);\r\n    ctx.bezierCurveTo(81.00567626953125 * scale, 49.534095764160156 * scale, 82.00567626953125 * scale, 50.534095764160156 * scale, 83.00567626953125 * scale, 51.534095764160156 * scale);\r\n    ctx.bezierCurveTo(77.00567626953125 * scale, 71.53409576416016 * scale, 64.00567626953125 * scale, 75.53409576416016 * scale, 51.00567626953125 * scale, 72.53409576416016 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[0], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(105.00567626953125 * scale, 50.53410339355469 * scale);\r\n    ctx.bezierCurveTo(112.00567626953125 * scale, 48.53410339355469 * scale, 125.00567626953125 * scale, 21.534103393554688 * scale, 132.00567626953125 * scale, 33.53410339355469 * scale);\r\n    ctx.bezierCurveTo(138.00567626953125 * scale, 42.53410339355469 * scale, 140.00567626953125 * scale, 64.53410339355469 * scale, 136.00567626953125 * scale, 75.53410339355469 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[0], 2 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_wolf(scale, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 188 * scale;\r\n    can.height = 190 * scale;\r\n    ctx.globalAlpha = 0.5;\r\n    ctx.translate(0, 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(33.00567626953125 * scale, 95.44320678710938 * scale);\r\n    ctx.bezierCurveTo(42.00567626953125 * scale, 87.44320678710938 * scale, 48.00567626953125 * scale, 51.443206787109375 * scale, 74.00567626953125 * scale, 47.443206787109375 * scale);\r\n    ctx.bezierCurveTo(100.00567626953125 * scale, 42.443206787109375 * scale, 118.00567626953125 * scale, 49.443206787109375 * scale, 131.00567626953125 * scale, 55.443206787109375 * scale);\r\n    ctx.bezierCurveTo(140.00567626953125 * scale, 70.44320678710938 * scale, 145.00567626953125 * scale, 87.44320678710938 * scale, 152.00567626953125 * scale, 94.44320678710938 * scale);\r\n    ctx.bezierCurveTo(149.00567626953125 * scale, 99.44320678710938 * scale, 147.00567626953125 * scale, 98.44320678710938 * scale, 141.00567626953125 * scale, 101.44320678710938 * scale);\r\n    ctx.bezierCurveTo(147.00567626953125 * scale, 108.44320678710938 * scale, 147.00567626953125 * scale, 111.44320678710938 * scale, 147.00567626953125 * scale, 112.44320678710938 * scale);\r\n    ctx.bezierCurveTo(143.00567626953125 * scale, 112.44320678710938 * scale, 141.00567626953125 * scale, 112.44320678710938 * scale, 137.00567626953125 * scale, 111.44320678710938 * scale);\r\n    ctx.bezierCurveTo(138.00567626953125 * scale, 117.44320678710938 * scale, 138.00567626953125 * scale, 120.44320678710938 * scale, 138.00567626953125 * scale, 124.44320678710938 * scale);\r\n    ctx.bezierCurveTo(125.00567626953125 * scale, 107.44320678710938 * scale, 121.00567626953125 * scale, 124.44320678710938 * scale, 110.00567626953125 * scale, 141.44320678710938 * scale);\r\n    ctx.bezierCurveTo(102.00567626953125 * scale, 158.44320678710938 * scale, 89.00567626953125 * scale, 158.44320678710938 * scale, 80.00567626953125 * scale, 144.44320678710938 * scale);\r\n    ctx.bezierCurveTo(61.00567626953125 * scale, 111.44320678710938 * scale, 56.00567626953125 * scale, 117.44320678710938 * scale, 48.00567626953125 * scale, 120.44320678710938 * scale);\r\n    ctx.bezierCurveTo(46.00567626953125 * scale, 118.44320678710938 * scale, 47.00567626953125 * scale, 112.44320678710938 * scale, 48.00567626953125 * scale, 107.44320678710938 * scale);\r\n    ctx.bezierCurveTo(43.00567626953125 * scale, 111.44320678710938 * scale, 40.00567626953125 * scale, 111.44320678710938 * scale, 37.00567626953125 * scale, 110.44320678710938 * scale);\r\n    ctx.bezierCurveTo(39.50567626953125 * scale, 104.94320678710938 * scale, 39.50567626953125 * scale, 104.94320678710938 * scale, 42.00567626953125 * scale, 99.44320678710938 * scale);\r\n    ctx.bezierCurveTo(33.00567626953125 * scale, 99.44320678710938 * scale, 33.00567626953125 * scale, 98.44320678710938 * scale, 33.00567626953125 * scale, 96.44320678710938 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[0], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(60.00567626953125 * scale, 99.35227966308594 * scale);\r\n    ctx.bezierCurveTo(70.00567626953125 * scale, 82.35227966308594 * scale, 85.00567626953125 * scale, 86.35227966308594 * scale, 87.00567626953125 * scale, 97.35227966308594 * scale);\r\n    ctx.bezierCurveTo(89.00567626953125 * scale, 101.35227966308594 * scale, 88.00567626953125 * scale, 105.35227966308594 * scale, 87.00567626953125 * scale, 110.35227966308594 * scale);\r\n    ctx.bezierCurveTo(89.00567626953125 * scale, 111.35227966308594 * scale, 91.00567626953125 * scale, 112.35227966308594 * scale, 93.00567626953125 * scale, 115.35227966308594 * scale);\r\n    ctx.bezierCurveTo(96.00567626953125 * scale, 111.35227966308594 * scale, 99.00567626953125 * scale, 111.35227966308594 * scale, 100.00567626953125 * scale, 110.35227966308594 * scale);\r\n    ctx.bezierCurveTo(98.00567626953125 * scale, 92.35227966308594 * scale, 103.00567626953125 * scale, 86.35227966308594 * scale, 113.00567626953125 * scale, 89.35227966308594 * scale);\r\n    ctx.bezierCurveTo(122.00567626953125 * scale, 92.35227966308594 * scale, 123.00567626953125 * scale, 94.35227966308594 * scale, 126.00567626953125 * scale, 98.35227966308594 * scale);\r\n    ctx.bezierCurveTo(124.00567626953125 * scale, 102.35227966308594 * scale, 123.00567626953125 * scale, 103.35227966308594 * scale, 121.00567626953125 * scale, 104.35227966308594 * scale);\r\n    ctx.bezierCurveTo(124.00567626953125 * scale, 105.35227966308594 * scale, 126.00567626953125 * scale, 107.35227966308594 * scale, 129.00567626953125 * scale, 111.35227966308594 * scale);\r\n    ctx.bezierCurveTo(115.00567626953125 * scale, 122.35227966308594 * scale, 113.00567626953125 * scale, 145.35227966308594 * scale, 100.00567626953125 * scale, 152.35227966308594 * scale);\r\n    ctx.bezierCurveTo(91.00567626953125 * scale, 158.35227966308594 * scale, 83.00567626953125 * scale, 149.35227966308594 * scale, 76.00567626953125 * scale, 138.35227966308594 * scale);\r\n    ctx.bezierCurveTo(67.00567626953125 * scale, 114.35227966308594 * scale, 63.00567626953125 * scale, 113.35227966308594 * scale, 59.00567626953125 * scale, 111.35227966308594 * scale);\r\n    ctx.bezierCurveTo(62.00567626953125 * scale, 107.35227966308594 * scale, 64.00567626953125 * scale, 105.35227966308594 * scale, 66.00567626953125 * scale, 104.35227966308594 * scale);\r\n    ctx.bezierCurveTo(63.00567626953125 * scale, 100.35227966308594 * scale, 62.00567626953125 * scale, 100.35227966308594 * scale, 60.00567626953125 * scale, 99.35227966308594 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[0], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(51.00567626953125 * scale, 72.53409576416016 * scale);\r\n    ctx.bezierCurveTo(48.00567626953125 * scale, 56.534095764160156 * scale, 48.00567626953125 * scale, 49.534095764160156 * scale, 54.00567626953125 * scale, 35.534095764160156 * scale);\r\n    ctx.bezierCurveTo(58.00567626953125 * scale, 26.534095764160156 * scale, 65.00567626953125 * scale, 27.534095764160156 * scale, 73.00567626953125 * scale, 40.534095764160156 * scale);\r\n    ctx.bezierCurveTo(81.00567626953125 * scale, 49.534095764160156 * scale, 82.00567626953125 * scale, 50.534095764160156 * scale, 83.00567626953125 * scale, 51.534095764160156 * scale);\r\n    ctx.bezierCurveTo(77.00567626953125 * scale, 71.53409576416016 * scale, 64.00567626953125 * scale, 75.53409576416016 * scale, 51.00567626953125 * scale, 72.53409576416016 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[0], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(105.00567626953125 * scale, 50.53410339355469 * scale);\r\n    ctx.bezierCurveTo(112.00567626953125 * scale, 48.53410339355469 * scale, 125.00567626953125 * scale, 21.534103393554688 * scale, 132.00567626953125 * scale, 33.53410339355469 * scale);\r\n    ctx.bezierCurveTo(138.00567626953125 * scale, 42.53410339355469 * scale, 140.00567626953125 * scale, 64.53410339355469 * scale, 136.00567626953125 * scale, 75.53410339355469 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[0], 2 * scale);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(0, -5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(33.00567626953125 * scale, 95.44320678710938 * scale);\r\n    ctx.bezierCurveTo(42.00567626953125 * scale, 87.44320678710938 * scale, 48.00567626953125 * scale, 51.443206787109375 * scale, 74.00567626953125 * scale, 47.443206787109375 * scale);\r\n    ctx.bezierCurveTo(100.00567626953125 * scale, 42.443206787109375 * scale, 118.00567626953125 * scale, 49.443206787109375 * scale, 131.00567626953125 * scale, 55.443206787109375 * scale);\r\n    ctx.bezierCurveTo(140.00567626953125 * scale, 70.44320678710938 * scale, 145.00567626953125 * scale, 87.44320678710938 * scale, 152.00567626953125 * scale, 94.44320678710938 * scale);\r\n    ctx.bezierCurveTo(149.00567626953125 * scale, 99.44320678710938 * scale, 147.00567626953125 * scale, 98.44320678710938 * scale, 141.00567626953125 * scale, 101.44320678710938 * scale);\r\n    ctx.bezierCurveTo(147.00567626953125 * scale, 108.44320678710938 * scale, 147.00567626953125 * scale, 111.44320678710938 * scale, 147.00567626953125 * scale, 112.44320678710938 * scale);\r\n    ctx.bezierCurveTo(143.00567626953125 * scale, 112.44320678710938 * scale, 141.00567626953125 * scale, 112.44320678710938 * scale, 137.00567626953125 * scale, 111.44320678710938 * scale);\r\n    ctx.bezierCurveTo(138.00567626953125 * scale, 117.44320678710938 * scale, 138.00567626953125 * scale, 120.44320678710938 * scale, 138.00567626953125 * scale, 124.44320678710938 * scale);\r\n    ctx.bezierCurveTo(125.00567626953125 * scale, 107.44320678710938 * scale, 121.00567626953125 * scale, 124.44320678710938 * scale, 110.00567626953125 * scale, 141.44320678710938 * scale);\r\n    ctx.bezierCurveTo(102.00567626953125 * scale, 158.44320678710938 * scale, 89.00567626953125 * scale, 158.44320678710938 * scale, 80.00567626953125 * scale, 144.44320678710938 * scale);\r\n    ctx.bezierCurveTo(61.00567626953125 * scale, 111.44320678710938 * scale, 56.00567626953125 * scale, 117.44320678710938 * scale, 48.00567626953125 * scale, 120.44320678710938 * scale);\r\n    ctx.bezierCurveTo(46.00567626953125 * scale, 118.44320678710938 * scale, 47.00567626953125 * scale, 112.44320678710938 * scale, 48.00567626953125 * scale, 107.44320678710938 * scale);\r\n    ctx.bezierCurveTo(43.00567626953125 * scale, 111.44320678710938 * scale, 40.00567626953125 * scale, 111.44320678710938 * scale, 37.00567626953125 * scale, 110.44320678710938 * scale);\r\n    ctx.bezierCurveTo(39.50567626953125 * scale, 104.94320678710938 * scale, 39.50567626953125 * scale, 104.94320678710938 * scale, 42.00567626953125 * scale, 99.44320678710938 * scale);\r\n    ctx.bezierCurveTo(33.00567626953125 * scale, 99.44320678710938 * scale, 33.00567626953125 * scale, 98.44320678710938 * scale, 33.00567626953125 * scale, 96.44320678710938 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 3 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(60.00567626953125 * scale, 99.35227966308594 * scale);\r\n    ctx.bezierCurveTo(70.00567626953125 * scale, 82.35227966308594 * scale, 85.00567626953125 * scale, 86.35227966308594 * scale, 87.00567626953125 * scale, 97.35227966308594 * scale);\r\n    ctx.bezierCurveTo(89.00567626953125 * scale, 101.35227966308594 * scale, 88.00567626953125 * scale, 105.35227966308594 * scale, 87.00567626953125 * scale, 110.35227966308594 * scale);\r\n    ctx.bezierCurveTo(89.00567626953125 * scale, 111.35227966308594 * scale, 91.00567626953125 * scale, 112.35227966308594 * scale, 93.00567626953125 * scale, 115.35227966308594 * scale);\r\n    ctx.bezierCurveTo(96.00567626953125 * scale, 111.35227966308594 * scale, 99.00567626953125 * scale, 111.35227966308594 * scale, 100.00567626953125 * scale, 110.35227966308594 * scale);\r\n    ctx.bezierCurveTo(98.00567626953125 * scale, 92.35227966308594 * scale, 103.00567626953125 * scale, 86.35227966308594 * scale, 113.00567626953125 * scale, 89.35227966308594 * scale);\r\n    ctx.bezierCurveTo(122.00567626953125 * scale, 92.35227966308594 * scale, 123.00567626953125 * scale, 94.35227966308594 * scale, 126.00567626953125 * scale, 98.35227966308594 * scale);\r\n    ctx.bezierCurveTo(124.00567626953125 * scale, 102.35227966308594 * scale, 123.00567626953125 * scale, 103.35227966308594 * scale, 121.00567626953125 * scale, 104.35227966308594 * scale);\r\n    ctx.bezierCurveTo(124.00567626953125 * scale, 105.35227966308594 * scale, 126.00567626953125 * scale, 107.35227966308594 * scale, 129.00567626953125 * scale, 111.35227966308594 * scale);\r\n    ctx.bezierCurveTo(115.00567626953125 * scale, 122.35227966308594 * scale, 113.00567626953125 * scale, 145.35227966308594 * scale, 100.00567626953125 * scale, 152.35227966308594 * scale);\r\n    ctx.bezierCurveTo(91.00567626953125 * scale, 158.35227966308594 * scale, 83.00567626953125 * scale, 149.35227966308594 * scale, 76.00567626953125 * scale, 138.35227966308594 * scale);\r\n    ctx.bezierCurveTo(67.00567626953125 * scale, 114.35227966308594 * scale, 63.00567626953125 * scale, 113.35227966308594 * scale, 59.00567626953125 * scale, 111.35227966308594 * scale);\r\n    ctx.bezierCurveTo(62.00567626953125 * scale, 107.35227966308594 * scale, 64.00567626953125 * scale, 105.35227966308594 * scale, 66.00567626953125 * scale, 104.35227966308594 * scale);\r\n    ctx.bezierCurveTo(63.00567626953125 * scale, 100.35227966308594 * scale, 62.00567626953125 * scale, 100.35227966308594 * scale, 60.00567626953125 * scale, 99.35227966308594 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(33.00567626953125 * scale, 95.44320678710938 * scale);\r\n    ctx.bezierCurveTo(42.00567626953125 * scale, 87.44320678710938 * scale, 48.00567626953125 * scale, 51.443206787109375 * scale, 74.00567626953125 * scale, 47.443206787109375 * scale);\r\n    ctx.bezierCurveTo(100.00567626953125 * scale, 42.443206787109375 * scale, 118.00567626953125 * scale, 49.443206787109375 * scale, 131.00567626953125 * scale, 55.443206787109375 * scale);\r\n    ctx.bezierCurveTo(140.00567626953125 * scale, 70.44320678710938 * scale, 145.00567626953125 * scale, 87.44320678710938 * scale, 152.00567626953125 * scale, 94.44320678710938 * scale);\r\n    ctx.bezierCurveTo(149.00567626953125 * scale, 99.44320678710938 * scale, 147.00567626953125 * scale, 98.44320678710938 * scale, 141.00567626953125 * scale, 101.44320678710938 * scale);\r\n    ctx.bezierCurveTo(147.00567626953125 * scale, 108.44320678710938 * scale, 147.00567626953125 * scale, 111.44320678710938 * scale, 147.00567626953125 * scale, 112.44320678710938 * scale);\r\n    ctx.bezierCurveTo(143.00567626953125 * scale, 112.44320678710938 * scale, 141.00567626953125 * scale, 112.44320678710938 * scale, 137.00567626953125 * scale, 111.44320678710938 * scale);\r\n    ctx.bezierCurveTo(138.00567626953125 * scale, 117.44320678710938 * scale, 138.00567626953125 * scale, 120.44320678710938 * scale, 138.00567626953125 * scale, 124.44320678710938 * scale);\r\n    ctx.bezierCurveTo(125.00567626953125 * scale, 107.44320678710938 * scale, 121.00567626953125 * scale, 124.44320678710938 * scale, 110.00567626953125 * scale, 141.44320678710938 * scale);\r\n    ctx.bezierCurveTo(102.00567626953125 * scale, 158.44320678710938 * scale, 89.00567626953125 * scale, 158.44320678710938 * scale, 80.00567626953125 * scale, 144.44320678710938 * scale);\r\n    ctx.bezierCurveTo(61.00567626953125 * scale, 111.44320678710938 * scale, 56.00567626953125 * scale, 117.44320678710938 * scale, 48.00567626953125 * scale, 120.44320678710938 * scale);\r\n    ctx.bezierCurveTo(46.00567626953125 * scale, 118.44320678710938 * scale, 47.00567626953125 * scale, 112.44320678710938 * scale, 48.00567626953125 * scale, 107.44320678710938 * scale);\r\n    ctx.bezierCurveTo(43.00567626953125 * scale, 111.44320678710938 * scale, 40.00567626953125 * scale, 111.44320678710938 * scale, 37.00567626953125 * scale, 110.44320678710938 * scale);\r\n    ctx.bezierCurveTo(39.50567626953125 * scale, 104.94320678710938 * scale, 39.50567626953125 * scale, 104.94320678710938 * scale, 42.00567626953125 * scale, 99.44320678710938 * scale);\r\n    ctx.bezierCurveTo(33.00567626953125 * scale, 99.44320678710938 * scale, 33.00567626953125 * scale, 98.44320678710938 * scale, 33.00567626953125 * scale, 96.44320678710938 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[2], 3 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(51.00567626953125 * scale, 72.53409576416016 * scale);\r\n    ctx.bezierCurveTo(48.00567626953125 * scale, 56.534095764160156 * scale, 48.00567626953125 * scale, 49.534095764160156 * scale, 54.00567626953125 * scale, 35.534095764160156 * scale);\r\n    ctx.bezierCurveTo(58.00567626953125 * scale, 26.534095764160156 * scale, 65.00567626953125 * scale, 27.534095764160156 * scale, 73.00567626953125 * scale, 40.534095764160156 * scale);\r\n    ctx.bezierCurveTo(81.00567626953125 * scale, 49.534095764160156 * scale, 82.00567626953125 * scale, 50.534095764160156 * scale, 83.00567626953125 * scale, 51.534095764160156 * scale);\r\n    fill_path(ctx, color[1], color[2], 3 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(105.00567626953125 * scale, 50.53410339355469 * scale);\r\n    ctx.bezierCurveTo(112.00567626953125 * scale, 48.53410339355469 * scale, 125.00567626953125 * scale, 21.534103393554688 * scale, 132.00567626953125 * scale, 33.53410339355469 * scale);\r\n    ctx.bezierCurveTo(138.00567626953125 * scale, 42.53410339355469 * scale, 140.00567626953125 * scale, 64.53410339355469 * scale, 136.00567626953125 * scale, 75.53410339355469 * scale);\r\n    fill_path(ctx, color[1], color[2], 3 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(57.00567626953125 * scale, 68.53410339355469 * scale);\r\n    ctx.bezierCurveTo(63.00567626953125 * scale, 69.53410339355469 * scale, 69.00567626953125 * scale, 66.53410339355469 * scale, 73.00567626953125 * scale, 60.53410339355469 * scale);\r\n    ctx.bezierCurveTo(66.00567626953125 * scale, 47.53410339355469 * scale, 61.00567626953125 * scale, 42.53410339355469 * scale, 58.00567626953125 * scale, 49.53410339355469 * scale);\r\n    ctx.bezierCurveTo(56.00567626953125 * scale, 59.53410339355469 * scale, 56.00567626953125 * scale, 64.53410339355469 * scale, 57.00567626953125 * scale, 67.53410339355469 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(115.00567626953125 * scale, 59.715911865234375 * scale);\r\n    ctx.bezierCurveTo(119.00567626953125 * scale, 48.715911865234375 * scale, 126.00567626953125 * scale, 41.715911865234375 * scale, 129.00567626953125 * scale, 48.715911865234375 * scale);\r\n    ctx.bezierCurveTo(131.00567626953125 * scale, 56.715911865234375 * scale, 133.00567626953125 * scale, 71.71591186523438 * scale, 127.00567626953125 * scale, 68.71591186523438 * scale);\r\n    ctx.bezierCurveTo(120.00567626953125 * scale, 67.71591186523438 * scale, 114.00567626953125 * scale, 59.715911865234375 * scale, 116.00567626953125 * scale, 58.715911865234375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3]);\r\n    circle(ctx, 77 * scale, 107 * scale, 6 * scale);\r\n    fill_path(ctx, color[2]);\r\n    circle(ctx, 110 * scale, 107 * scale, 6 * scale);\r\n    fill_path(ctx, color[2]);\r\n    circle(ctx, 75 * scale, 105 * scale, 3 * scale);\r\n    fill_path(ctx, color[4]);\r\n    circle(ctx, 108 * scale, 105 * scale, 3 * scale);\r\n    fill_path(ctx, color[4]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(88.00567626953125 * scale, 141.4431915283203 * scale);\r\n    ctx.bezierCurveTo(93.00567626953125 * scale, 137.4431915283203 * scale, 96.00567626953125 * scale, 138.4431915283203 * scale, 100.00567626953125 * scale, 141.4431915283203 * scale);\r\n    ctx.bezierCurveTo(103.00567626953125 * scale, 143.4431915283203 * scale, 101.00567626953125 * scale, 149.4431915283203 * scale, 95.00567626953125 * scale, 148.4431915283203 * scale);\r\n    ctx.bezierCurveTo(85.00567626953125 * scale, 148.4431915283203 * scale, 86.00567626953125 * scale, 145.4431915283203 * scale, 88.00567626953125 * scale, 142.4431915283203 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1]);\r\n    return can;\r\n}\r\n;\r\nfunction create_meat(scale, useless, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    var w = scale * 55;\r\n    var h = scale * 55;\r\n    var shadow = scale * 8;\r\n    var width = scale * 4;\r\n    can.width = w;\r\n    can.height = h;\r\n    ctx.translate(-65 * scale, -55 * scale + shadow);\r\n    ctx.globalAlpha = 1;\r\n    ctx.beginPath();\r\n    ctx.moveTo(95 * scale, 60 * scale);\r\n    ctx.bezierCurveTo(107 * scale, 62 * scale, 110 * scale, 73 * scale, 107 * scale, 79 * scale);\r\n    ctx.bezierCurveTo(104 * scale, 85 * scale, 85 * scale, 93 * scale, 81 * scale, 88 * scale);\r\n    ctx.bezierCurveTo(74 * scale, 80 * scale, 85 * scale, 60 * scale, 95 * scale, 60 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[1], 3);\r\n    ctx.globalAlpha = 1;\r\n    ctx.beginPath();\r\n    ctx.moveTo(91 * scale, 70 * scale);\r\n    ctx.bezierCurveTo(91 * scale, 75 * scale, 100 * scale, 76 * scale, 100 * scale, 73 * scale);\r\n    ctx.bezierCurveTo(100 * scale, 69 * scale, 89 * scale, 65 * scale, 91 * scale, 70 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2], color[3], 3);\r\n    return can;\r\n}\r\n;\r\nfunction create_hurt_spider(scale, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 238 * scale;\r\n    can.height = 230 * scale;\r\n    ctx.translate(-93 * scale, -110 * scale);\r\n    circle(ctx, 213.5 * scale, 256.75 * scale, 75 * scale);\r\n    fill_path(ctx, color);\r\n    circle(ctx, 213.5 * scale, 175.75 * scale, 25 * scale);\r\n    fill_path(ctx, color);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(156.5 * scale, 137.75 * scale);\r\n    ctx.bezierCurveTo(170.5 * scale, 173.75 * scale, 195.5 * scale, 177.75 * scale, 209.5 * scale, 177.75 * scale);\r\n    ctx.lineWidth = 17 * scale;\r\n    ctx.strokeStyle = color;\r\n    ctx.stroke();\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(217.5 * scale, 178.75 * scale);\r\n    ctx.bezierCurveTo(251.5 * scale, 177.75 * scale, 263.5 * scale, 153.75 * scale, 270.5 * scale, 140.75 * scale);\r\n    ctx.lineWidth = 17 * scale;\r\n    ctx.strokeStyle = color;\r\n    ctx.stroke();\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(130.5 * scale, 124.75 * scale);\r\n    ctx.bezierCurveTo(153.5 * scale, 185.75 * scale, 198.5 * scale, 185.75 * scale, 213.5 * scale, 185.75 * scale);\r\n    ctx.lineWidth = 17 * scale;\r\n    ctx.strokeStyle = color;\r\n    ctx.stroke();\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(214.5 * scale, 183.75 * scale);\r\n    ctx.bezierCurveTo(265.5 * scale, 192.75 * scale, 293.5 * scale, 141.75 * scale, 297.5 * scale, 124.75 * scale);\r\n    ctx.lineWidth = 17 * scale;\r\n    ctx.strokeStyle = color;\r\n    ctx.stroke();\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(107.5 * scale, 213.75 * scale);\r\n    ctx.bezierCurveTo(151.5 * scale, 190.75 * scale, 198.5 * scale, 184.75 * scale, 210.5 * scale, 184.75 * scale);\r\n    ctx.lineWidth = 17 * scale;\r\n    ctx.strokeStyle = color;\r\n    ctx.stroke();\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(212.5 * scale, 187.75 * scale);\r\n    ctx.bezierCurveTo(258.5 * scale, 182.75 * scale, 286.5 * scale, 194.75 * scale, 314.5 * scale, 206.75 * scale);\r\n    ctx.lineWidth = 17 * scale;\r\n    ctx.strokeStyle = color;\r\n    ctx.stroke();\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(102.5 * scale, 258.75 * scale);\r\n    ctx.bezierCurveTo(142.5 * scale, 200.75 * scale, 193.5 * scale, 194.75 * scale, 211.5 * scale, 185.75 * scale);\r\n    ctx.lineWidth = 17 * scale;\r\n    ctx.strokeStyle = color;\r\n    ctx.stroke();\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(214.5 * scale, 192.75 * scale);\r\n    ctx.bezierCurveTo(276.5 * scale, 194.75 * scale, 306.5 * scale, 233.75 * scale, 316.5 * scale, 246.75 * scale);\r\n    ctx.lineWidth = 17 * scale;\r\n    ctx.strokeStyle = color;\r\n    ctx.stroke();\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(219.5 * scale, 158.75 * scale);\r\n    ctx.bezierCurveTo(226.5 * scale, 159.75 * scale, 227.5 * scale, 147.75 * scale, 219.5 * scale, 145.75 * scale);\r\n    ctx.closePath();\r\n    ctx.lineWidth = 10 * scale;\r\n    ctx.strokeStyle = color;\r\n    ctx.stroke();\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(210.5 * scale, 160.75 * scale);\r\n    ctx.bezierCurveTo(203.5 * scale, 159.75 * scale, 199.5 * scale, 146.75 * scale, 210.5 * scale, 145.75 * scale);\r\n    ctx.closePath();\r\n    ctx.lineWidth = 10 * scale;\r\n    ctx.strokeStyle = color;\r\n    ctx.stroke();\r\n    return can;\r\n}\r\n;\r\nfunction create_spider(scale, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 238 * scale;\r\n    can.height = 230 * scale;\r\n    ctx.translate(-93 * scale, -110 * scale + 5 * scale);\r\n    ctx.globalAlpha = 0.3;\r\n    circle(ctx, 213.5 * scale, 256.75 * scale, 75 * scale);\r\n    fill_path(ctx, color[5]);\r\n    circle(ctx, 213.5 * scale, 175.75 * scale, 25 * scale);\r\n    fill_path(ctx, color[5]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(156.5 * scale, 137.75 * scale);\r\n    ctx.bezierCurveTo(170.5 * scale, 173.75 * scale, 195.5 * scale, 177.75 * scale, 209.5 * scale, 177.75 * scale);\r\n    ctx.lineWidth = 17 * scale;\r\n    ctx.strokeStyle = color[5];\r\n    ctx.stroke();\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(217.5 * scale, 178.75 * scale);\r\n    ctx.bezierCurveTo(251.5 * scale, 177.75 * scale, 263.5 * scale, 153.75 * scale, 270.5 * scale, 140.75 * scale);\r\n    ctx.lineWidth = 17 * scale;\r\n    ctx.strokeStyle = color[5];\r\n    ctx.stroke();\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(130.5 * scale, 124.75 * scale);\r\n    ctx.bezierCurveTo(153.5 * scale, 185.75 * scale, 198.5 * scale, 185.75 * scale, 213.5 * scale, 185.75 * scale);\r\n    ctx.lineWidth = 17 * scale;\r\n    ctx.strokeStyle = color[5];\r\n    ctx.stroke();\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(214.5 * scale, 183.75 * scale);\r\n    ctx.bezierCurveTo(265.5 * scale, 192.75 * scale, 293.5 * scale, 141.75 * scale, 297.5 * scale, 124.75 * scale);\r\n    ctx.lineWidth = 17 * scale;\r\n    ctx.strokeStyle = color[5];\r\n    ctx.stroke();\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(107.5 * scale, 213.75 * scale);\r\n    ctx.bezierCurveTo(151.5 * scale, 190.75 * scale, 198.5 * scale, 184.75 * scale, 210.5 * scale, 184.75 * scale);\r\n    ctx.lineWidth = 17 * scale;\r\n    ctx.strokeStyle = color[5];\r\n    ctx.stroke();\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(212.5 * scale, 187.75 * scale);\r\n    ctx.bezierCurveTo(258.5 * scale, 182.75 * scale, 286.5 * scale, 194.75 * scale, 314.5 * scale, 206.75 * scale);\r\n    ctx.lineWidth = 17 * scale;\r\n    ctx.strokeStyle = color[5];\r\n    ctx.stroke();\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(102.5 * scale, 258.75 * scale);\r\n    ctx.bezierCurveTo(142.5 * scale, 200.75 * scale, 193.5 * scale, 194.75 * scale, 211.5 * scale, 185.75 * scale);\r\n    ctx.lineWidth = 17 * scale;\r\n    ctx.strokeStyle = color[5];\r\n    ctx.stroke();\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(214.5 * scale, 192.75 * scale);\r\n    ctx.bezierCurveTo(276.5 * scale, 194.75 * scale, 306.5 * scale, 233.75 * scale, 316.5 * scale, 246.75 * scale);\r\n    ctx.lineWidth = 17 * scale;\r\n    ctx.strokeStyle = color[5];\r\n    ctx.stroke();\r\n    ctx.translate(0, -5);\r\n    ctx.globalAlpha = 1;\r\n    circle(ctx, 213.5 * scale, 256.75 * scale, 75 * scale);\r\n    fill_path(ctx, color[3]);\r\n    circle(ctx, 213.5 * scale, 175.75 * scale, 25 * scale);\r\n    fill_path(ctx, color[3]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(219.5 * scale, 158.75 * scale);\r\n    ctx.bezierCurveTo(226.5 * scale, 159.75 * scale, 227.5 * scale, 147.75 * scale, 219.5 * scale, 145.75 * scale);\r\n    ctx.closePath();\r\n    ctx.lineWidth = 10 * scale;\r\n    ctx.strokeStyle = color[3];\r\n    ctx.stroke();\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(210.5 * scale, 160.75 * scale);\r\n    ctx.bezierCurveTo(203.5 * scale, 159.75 * scale, 199.5 * scale, 146.75 * scale, 210.5 * scale, 145.75 * scale);\r\n    ctx.closePath();\r\n    ctx.lineWidth = 10 * scale;\r\n    ctx.strokeStyle = color[3];\r\n    ctx.stroke();\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(219.5 * scale, 158.75 * scale);\r\n    ctx.bezierCurveTo(226.5 * scale, 159.75 * scale, 227.5 * scale, 147.75 * scale, 219.5 * scale, 145.75 * scale);\r\n    ctx.closePath();\r\n    ctx.fillStyle = color[0];\r\n    ctx.fill();\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(210.5 * scale, 160.75 * scale);\r\n    ctx.bezierCurveTo(203.5 * scale, 159.75 * scale, 199.5 * scale, 146.75 * scale, 210.5 * scale, 145.75 * scale);\r\n    ctx.closePath();\r\n    ctx.fillStyle = color[0];\r\n    ctx.fill();\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(156.5 * scale, 137.75 * scale);\r\n    ctx.bezierCurveTo(170.5 * scale, 173.75 * scale, 195.5 * scale, 177.75 * scale, 209.5 * scale, 177.75 * scale);\r\n    ctx.lineWidth = 17 * scale;\r\n    ctx.strokeStyle = color[3];\r\n    ctx.stroke();\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(217.5 * scale, 178.75 * scale);\r\n    ctx.bezierCurveTo(251.5 * scale, 177.75 * scale, 263.5 * scale, 153.75 * scale, 270.5 * scale, 140.75 * scale);\r\n    ctx.lineWidth = 17 * scale;\r\n    ctx.strokeStyle = color[3];\r\n    ctx.stroke();\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(130.5 * scale, 124.75 * scale);\r\n    ctx.bezierCurveTo(153.5 * scale, 185.75 * scale, 198.5 * scale, 185.75 * scale, 213.5 * scale, 185.75 * scale);\r\n    ctx.lineWidth = 17 * scale;\r\n    ctx.strokeStyle = color[3];\r\n    ctx.stroke();\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(214.5 * scale, 183.75 * scale);\r\n    ctx.bezierCurveTo(265.5 * scale, 192.75 * scale, 293.5 * scale, 141.75 * scale, 297.5 * scale, 124.75 * scale);\r\n    ctx.lineWidth = 17 * scale;\r\n    ctx.strokeStyle = color[3];\r\n    ctx.stroke();\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(107.5 * scale, 213.75 * scale);\r\n    ctx.bezierCurveTo(151.5 * scale, 190.75 * scale, 198.5 * scale, 184.75 * scale, 210.5 * scale, 184.75 * scale);\r\n    ctx.lineWidth = 17 * scale;\r\n    ctx.strokeStyle = color[3];\r\n    ctx.stroke();\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(212.5 * scale, 187.75 * scale);\r\n    ctx.bezierCurveTo(258.5 * scale, 182.75 * scale, 286.5 * scale, 194.75 * scale, 314.5 * scale, 206.75 * scale);\r\n    ctx.lineWidth = 17 * scale;\r\n    ctx.strokeStyle = color[3];\r\n    ctx.stroke();\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(102.5 * scale, 258.75 * scale);\r\n    ctx.bezierCurveTo(142.5 * scale, 200.75 * scale, 193.5 * scale, 194.75 * scale, 211.5 * scale, 185.75 * scale);\r\n    ctx.lineWidth = 17 * scale;\r\n    ctx.strokeStyle = color[3];\r\n    ctx.stroke();\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(214.5 * scale, 192.75 * scale);\r\n    ctx.bezierCurveTo(276.5 * scale, 194.75 * scale, 306.5 * scale, 233.75 * scale, 316.5 * scale, 246.75 * scale);\r\n    ctx.lineWidth = 17 * scale;\r\n    ctx.strokeStyle = color[3];\r\n    ctx.stroke();\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(156.5 * scale, 137.75 * scale);\r\n    ctx.bezierCurveTo(170.5 * scale, 173.75 * scale, 195.5 * scale, 177.75 * scale, 209.5 * scale, 177.75 * scale);\r\n    ctx.lineWidth = 8 * scale;\r\n    ctx.strokeStyle = color[0];\r\n    ctx.stroke();\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(217.5 * scale, 178.75 * scale);\r\n    ctx.bezierCurveTo(251.5 * scale, 177.75 * scale, 263.5 * scale, 153.75 * scale, 270.5 * scale, 140.75 * scale);\r\n    ctx.lineWidth = 8 * scale;\r\n    ctx.strokeStyle = color[0];\r\n    ctx.stroke();\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(130.5 * scale, 124.75 * scale);\r\n    ctx.bezierCurveTo(153.5 * scale, 185.75 * scale, 198.5 * scale, 185.75 * scale, 213.5 * scale, 185.75 * scale);\r\n    ctx.lineWidth = 8 * scale;\r\n    ctx.strokeStyle = color[0];\r\n    ctx.stroke();\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(214.5 * scale, 183.75 * scale);\r\n    ctx.bezierCurveTo(265.5 * scale, 192.75 * scale, 293.5 * scale, 141.75 * scale, 297.5 * scale, 124.75 * scale);\r\n    ctx.lineWidth = 8 * scale;\r\n    ctx.strokeStyle = color[0];\r\n    ctx.stroke();\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(107.5 * scale, 213.75 * scale);\r\n    ctx.bezierCurveTo(151.5 * scale, 190.75 * scale, 198.5 * scale, 184.75 * scale, 210.5 * scale, 184.75 * scale);\r\n    ctx.lineWidth = 8 * scale;\r\n    ctx.strokeStyle = color[0];\r\n    ctx.stroke();\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(212.5 * scale, 187.75 * scale);\r\n    ctx.bezierCurveTo(258.5 * scale, 182.75 * scale, 286.5 * scale, 194.75 * scale, 314.5 * scale, 206.75 * scale);\r\n    ctx.lineWidth = 8 * scale;\r\n    ctx.strokeStyle = color[0];\r\n    ctx.stroke();\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(102.5 * scale, 258.75 * scale);\r\n    ctx.bezierCurveTo(142.5 * scale, 200.75 * scale, 193.5 * scale, 194.75 * scale, 211.5 * scale, 185.75 * scale);\r\n    ctx.lineWidth = 8 * scale;\r\n    ctx.strokeStyle = color[0];\r\n    ctx.stroke();\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(214.5 * scale, 192.75 * scale);\r\n    ctx.bezierCurveTo(276.5 * scale, 194.75 * scale, 306.5 * scale, 233.75 * scale, 316.5 * scale, 246.75 * scale);\r\n    ctx.lineWidth = 8 * scale;\r\n    ctx.strokeStyle = color[0];\r\n    ctx.stroke();\r\n    circle(ctx, 213.5 * scale, 256.75 * scale, 70 * scale);\r\n    fill_path(ctx, color[0]);\r\n    circle(ctx, 213.5 * scale, 175.75 * scale, 20 * scale);\r\n    fill_path(ctx, color[0]);\r\n    circle(ctx, 222 * scale, 166 * scale, 5 * scale);\r\n    ctx.fillStyle = color[2];\r\n    ctx.fill();\r\n    circle(ctx, 205 * scale, 166 * scale, 5 * scale);\r\n    ctx.fillStyle = color[2];\r\n    ctx.fill();\r\n    circle(ctx, 206.2 * scale, 167 * scale, 2.5 * scale);\r\n    ctx.fillStyle = color[4];\r\n    ctx.fill();\r\n    circle(ctx, 223.2 * scale, 167 * scale, 2.5 * scale);\r\n    ctx.fillStyle = color[4];\r\n    ctx.fill();\r\n    ctx.save();\r\n    ctx.translate(213.5 * scale, 293.75 * scale);\r\n    ctx.rotate(0.76);\r\n    round_rect(ctx, -22 * scale, -21 * scale, 44 * scale, 42 * scale, 6 * scale);\r\n    ctx.restore();\r\n    ctx.fillStyle = color[1];\r\n    ctx.fill();\r\n    ctx.save();\r\n    ctx.translate(212.5 * scale, 258.25 * scale);\r\n    ctx.rotate(0.8);\r\n    round_rect(ctx, -15 * scale, -14.5 * scale, 30 * scale, 29 * scale, 6 * scale);\r\n    ctx.restore();\r\n    ctx.fillStyle = color[1];\r\n    ctx.fill();\r\n    return can;\r\n}\r\n;\r\nfunction create_web(scale, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 450 * scale;\r\n    can.height = 470 * scale;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(226.5 * scale, 91.546875 * scale);\r\n    ctx.bezierCurveTo(254.5 * scale, 115.546875 * scale, 261.5 * scale, 115.546875 * scale, 294.5 * scale, 109.546875 * scale);\r\n    ctx.bezierCurveTo(299.5 * scale, 141.546875 * scale, 315.5 * scale, 151.546875 * scale, 344.5 * scale, 158.546875 * scale);\r\n    ctx.bezierCurveTo(330.5 * scale, 195.546875 * scale, 341.5 * scale, 207.546875 * scale, 361.5 * scale, 226.546875 * scale);\r\n    ctx.bezierCurveTo(331.5 * scale, 251.546875 * scale, 335.5 * scale, 270.546875 * scale, 342.5 * scale, 295.546875 * scale);\r\n    ctx.bezierCurveTo(300.5 * scale, 296.546875 * scale, 293.5 * scale, 325.546875 * scale, 292.5 * scale, 344.546875 * scale);\r\n    ctx.bezierCurveTo(257.5 * scale, 326.546875 * scale, 242.5 * scale, 338.546875 * scale, 224.5 * scale, 361.546875 * scale);\r\n    ctx.bezierCurveTo(200.5 * scale, 329.546875 * scale, 180.5 * scale, 334.546875 * scale, 155.5 * scale, 341.546875 * scale);\r\n    ctx.bezierCurveTo(146.5 * scale, 307.546875 * scale, 140.5 * scale, 302.546875 * scale, 107.5 * scale, 292.546875 * scale);\r\n    ctx.bezierCurveTo(117.5 * scale, 253.546875 * scale, 109.5 * scale, 244.546875 * scale, 89.5 * scale, 224.546875 * scale);\r\n    ctx.bezierCurveTo(118.5 * scale, 191.546875 * scale, 114.5 * scale, 182.546875 * scale, 108.5 * scale, 156.546875 * scale);\r\n    ctx.bezierCurveTo(143.5 * scale, 149.546875 * scale, 150.5 * scale, 136.546875 * scale, 157.5 * scale, 106.546875 * scale);\r\n    ctx.bezierCurveTo(202.5 * scale, 120.546875 * scale, 211.5 * scale, 103.546875 * scale, 228.5 * scale, 91.546875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[0], 4);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(224.5 * scale, 129.546875 * scale);\r\n    ctx.bezierCurveTo(247.5 * scale, 147.546875 * scale, 252.5 * scale, 143.546875 * scale, 274.5 * scale, 141.546875 * scale);\r\n    ctx.bezierCurveTo(279.5 * scale, 163.546875 * scale, 289.5 * scale, 168.546875 * scale, 311.5 * scale, 178.546875 * scale);\r\n    ctx.bezierCurveTo(301.5 * scale, 199.546875 * scale, 307.5 * scale, 213.546875 * scale, 323.5 * scale, 226.546875 * scale);\r\n    ctx.bezierCurveTo(303.5 * scale, 240.546875 * scale, 303.5 * scale, 255.546875 * scale, 312.5 * scale, 275.546875 * scale);\r\n    ctx.bezierCurveTo(281.5 * scale, 278.546875 * scale, 276.5 * scale, 291.546875 * scale, 272.5 * scale, 313.546875 * scale);\r\n    ctx.bezierCurveTo(248.5 * scale, 301.546875 * scale, 239.5 * scale, 310.546875 * scale, 224.5 * scale, 324.546875 * scale);\r\n    ctx.bezierCurveTo(211.5 * scale, 304.546875 * scale, 199.5 * scale, 301.546875 * scale, 176.5 * scale, 309.546875 * scale);\r\n    ctx.bezierCurveTo(165.5 * scale, 276.546875 * scale, 159.5 * scale, 275.546875 * scale, 138.5 * scale, 274.546875 * scale);\r\n    ctx.bezierCurveTo(148.5 * scale, 248.546875 * scale, 140.5 * scale, 237.546875 * scale, 125.5 * scale, 225.546875 * scale);\r\n    ctx.bezierCurveTo(145.5 * scale, 205.546875 * scale, 146.5 * scale, 195.546875 * scale, 142.5 * scale, 176.546875 * scale);\r\n    ctx.bezierCurveTo(173.5 * scale, 164.546875 * scale, 173.5 * scale, 155.546875 * scale, 178.5 * scale, 140.546875 * scale);\r\n    ctx.bezierCurveTo(214.5 * scale, 143.546875 * scale, 214.5 * scale, 135.546875 * scale, 226.5 * scale, 129.546875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[0], 4);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(224.5 * scale, 160.546875 * scale);\r\n    ctx.bezierCurveTo(236.5 * scale, 168.546875 * scale, 239.5 * scale, 168.546875 * scale, 258.5 * scale, 168.546875 * scale);\r\n    ctx.bezierCurveTo(261.5 * scale, 185.546875 * scale, 268.5 * scale, 187.546875 * scale, 282.5 * scale, 192.546875 * scale);\r\n    ctx.bezierCurveTo(277.5 * scale, 208.546875 * scale, 283.5 * scale, 216.546875 * scale, 289.5 * scale, 228.546875 * scale);\r\n    ctx.bezierCurveTo(277.5 * scale, 243.546875 * scale, 280.5 * scale, 253.546875 * scale, 281.5 * scale, 260.546875 * scale);\r\n    ctx.bezierCurveTo(264.5 * scale, 260.546875 * scale, 259.5 * scale, 269.546875 * scale, 256.5 * scale, 283.546875 * scale);\r\n    ctx.bezierCurveTo(244.5 * scale, 276.546875 * scale, 232.5 * scale, 283.546875 * scale, 223.5 * scale, 291.546875 * scale);\r\n    ctx.bezierCurveTo(213.5 * scale, 276.546875 * scale, 205.5 * scale, 278.546875 * scale, 190.5 * scale, 281.546875 * scale);\r\n    ctx.bezierCurveTo(181.5 * scale, 262.546875 * scale, 173.5 * scale, 259.546875 * scale, 165.5 * scale, 258.546875 * scale);\r\n    ctx.bezierCurveTo(169.5 * scale, 239.546875 * scale, 167.5 * scale, 233.546875 * scale, 157.5 * scale, 225.546875 * scale);\r\n    ctx.bezierCurveTo(169.5 * scale, 208.546875 * scale, 170.5 * scale, 203.546875 * scale, 168.5 * scale, 192.546875 * scale);\r\n    ctx.bezierCurveTo(181.5 * scale, 187.546875 * scale, 188.5 * scale, 179.546875 * scale, 192.5 * scale, 168.546875 * scale);\r\n    ctx.bezierCurveTo(216.5 * scale, 170.546875 * scale, 218.5 * scale, 163.546875 * scale, 225.5 * scale, 160.546875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[0], 4);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(205.5 * scale, 194.546875 * scale);\r\n    ctx.bezierCurveTo(216.5 * scale, 192.546875 * scale, 219.5 * scale, 191.546875 * scale, 225.5 * scale, 185.546875 * scale);\r\n    ctx.bezierCurveTo(232.5 * scale, 193.546875 * scale, 237.5 * scale, 191.546875 * scale, 246.5 * scale, 192.546875 * scale);\r\n    ctx.bezierCurveTo(249.5 * scale, 202.546875 * scale, 253.5 * scale, 205.546875 * scale, 258.5 * scale, 207.546875 * scale);\r\n    ctx.bezierCurveTo(259.5 * scale, 222.546875 * scale, 256.5 * scale, 223.546875 * scale, 265.5 * scale, 226.546875 * scale);\r\n    ctx.bezierCurveTo(256.5 * scale, 231.546875 * scale, 255.5 * scale, 241.546875 * scale, 259.5 * scale, 248.546875 * scale);\r\n    ctx.bezierCurveTo(250.5 * scale, 245.546875 * scale, 245.5 * scale, 252.546875 * scale, 243.5 * scale, 260.546875 * scale);\r\n    ctx.bezierCurveTo(234.5 * scale, 256.546875 * scale, 229.5 * scale, 258.546875 * scale, 223.5 * scale, 265.546875 * scale);\r\n    ctx.bezierCurveTo(218.5 * scale, 255.546875 * scale, 213.5 * scale, 257.546875 * scale, 204.5 * scale, 261.546875 * scale);\r\n    ctx.bezierCurveTo(203.5 * scale, 251.546875 * scale, 198.5 * scale, 248.546875 * scale, 189.5 * scale, 244.546875 * scale);\r\n    ctx.bezierCurveTo(194.5 * scale, 237.546875 * scale, 192.5 * scale, 231.546875 * scale, 184.5 * scale, 225.546875 * scale);\r\n    ctx.bezierCurveTo(191.5 * scale, 211.546875 * scale, 192.5 * scale, 209.546875 * scale, 190.5 * scale, 204.546875 * scale);\r\n    ctx.bezierCurveTo(200.5 * scale, 204.546875 * scale, 204.5 * scale, 198.546875 * scale, 207.5 * scale, 194.546875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[0], 4);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(149.5 * scale, 93.546875 * scale);\r\n    ctx.bezierCurveTo(287.5 * scale, 332.546875 * scale, 226 * scale, 225.546875 * scale, 302.5 * scale, 357.546875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[0], 4);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(224.5 * scale, 66.546875 * scale);\r\n    ctx.bezierCurveTo(224.5 * scale, 223.546875 * scale, 224.5 * scale, 223.546875 * scale, 224.5 * scale, 380.546875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[0], 4);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(302.5 * scale, 88.546875 * scale);\r\n    ctx.bezierCurveTo(222.5 * scale, 227.546875 * scale, 222.5 * scale, 227.546875 * scale, 142.5 * scale, 366.546875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[0], 4);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(361.5 * scale, 147.546875 * scale);\r\n    ctx.bezierCurveTo(223 * scale, 226.546875 * scale, 223 * scale, 226.546875 * scale, 84.5 * scale, 305.546875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[0], 4);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(379.5 * scale, 225.546875 * scale);\r\n    ctx.bezierCurveTo(221 * scale, 225.546875 * scale, 221 * scale, 225.546875 * scale, 62.5 * scale, 225.546875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[0], 4);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(90.5 * scale, 147.546875 * scale);\r\n    ctx.bezierCurveTo(226.5 * scale, 226.546875 * scale, 226.5 * scale, 226.546875 * scale, 362.5 * scale, 305.546875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[0], 4);\r\n    return can;\r\n}\r\n;\r\nfunction create_dead_box(scale, color, i) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 400 * scale;\r\n    can.height = 400 * scale;\r\n    ctx.save();\r\n    ctx.translate(202.5 * scale, 147.5 * scale);\r\n    round_rect(ctx, -96.5 * scale, -21.5 * scale, 193 * scale, 193 * scale, 0 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0], color[1], 12 * scale);\r\n    ctx.save();\r\n    ctx.translate(202.5 * scale, 190.5 * scale);\r\n    round_rect(ctx, 96.5 * scale, -21.5 * scale, -193 * scale, 43 * scale, 0 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[2], color[1], 12 * scale);\r\n    ctx.save();\r\n    ctx.save();\r\n    ctx.translate(202.5 * scale, 233.5 * scale);\r\n    round_rect(ctx, -96.5 * scale, -20.5 * scale, 193 * scale, 41 * scale, 0 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[3], color[1], 12 * scale);\r\n    ctx.save();\r\n    ctx.translate(202.5 * scale, 275 * scale);\r\n    round_rect(ctx, 96.5 * scale, -21 * scale, -193 * scale, 42 * scale, 0 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0], color[1], 12 * scale);\r\n    ctx.save();\r\n    ctx.translate(201 * scale, 212 * scale);\r\n    ctx.rotate(8.64);\r\n    round_rect(ctx, -116 * scale, -22 * scale, 232 * scale, 44 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[3], color[1], 12 * scale);\r\n    ctx.save();\r\n    ctx.translate(203.5 * scale, 121.5 * scale);\r\n    round_rect(ctx, -115.5 * scale, -20.5 * scale, 231 * scale, 41 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[3], color[1], 12 * scale);\r\n    ctx.save();\r\n    ctx.translate(203.5 * scale, 299 * scale);\r\n    round_rect(ctx, -115.5 * scale, -20 * scale, 231 * scale, 40 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[3], color[1], 12 * scale);\r\n    ctx.save();\r\n    ctx.translate(298.5 * scale, 210 * scale);\r\n    round_rect(ctx, -20.5 * scale, -109 * scale, 41 * scale, 218 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[3], color[1], 12 * scale);\r\n    ctx.save();\r\n    ctx.translate(108.5 * scale, 210 * scale);\r\n    round_rect(ctx, -20.5 * scale, -109 * scale, 41 * scale, 218 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[3], color[1], 12 * scale);\r\n    ctx.save();\r\n    ctx.translate(204 * scale, 121.5 * scale);\r\n    round_rect(ctx, -92 * scale, -9.5 * scale, 184 * scale, 19 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[3], color[3], 10 * scale);\r\n    ctx.save();\r\n    ctx.translate(197 * scale, 299 * scale);\r\n    round_rect(ctx, 85 * scale, -9 * scale, -170 * scale, 18 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[3], color[3], 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(94 * scale, 317 * scale);\r\n    ctx.bezierCurveTo(110.5 * scale, 299.5 * scale, 110.5 * scale, 299.5 * scale, 127 * scale, 282 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[1], 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(279 * scale, 142 * scale);\r\n    ctx.bezierCurveTo(296.5 * scale, 125.5 * scale, 296.5 * scale, 125.5 * scale, 314 * scale, 109 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[1], 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(93 * scale, 106 * scale);\r\n    ctx.bezierCurveTo(110.5 * scale, 124 * scale, 110.5 * scale, 124 * scale, 128 * scale, 142 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[1], 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(281 * scale, 282 * scale);\r\n    ctx.bezierCurveTo(296 * scale, 297.5 * scale, 296 * scale, 297.5 * scale, 311 * scale, 313 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[1], 12 * scale);\r\n    if (i == 0) {\r\n        ctx.scale(2, 2);\r\n        ctx.translate(-7 * scale, 55 * scale);\r\n        ctx.rotate(-0.5);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(60 * scale, 47 * scale);\r\n        ctx.bezierCurveTo(81 * scale, 46 * scale, 85 * scale, 47 * scale, 83 * scale, 63 * scale);\r\n        ctx.bezierCurveTo(83 * scale, 72 * scale, 83 * scale, 75 * scale, 72 * scale, 73 * scale);\r\n        ctx.bezierCurveTo(68 * scale, 80 * scale, 69 * scale, 82 * scale, 66 * scale, 73 * scale);\r\n        ctx.bezierCurveTo(62 * scale, 81 * scale, 61 * scale, 82 * scale, 59 * scale, 73 * scale);\r\n        ctx.bezierCurveTo(54 * scale, 81 * scale, 55 * scale, 81 * scale, 52 * scale, 74 * scale);\r\n        ctx.bezierCurveTo(38 * scale, 76 * scale, 41 * scale, 74 * scale, 40 * scale, 66 * scale);\r\n        ctx.bezierCurveTo(38 * scale, 45 * scale, 39 * scale, 49 * scale, 59 * scale, 47 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[4], color[4], 5 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(68 * scale, 54 * scale);\r\n        ctx.bezierCurveTo(75 * scale, 54 * scale, 77 * scale, 62 * scale, 71 * scale, 64 * scale);\r\n        ctx.bezierCurveTo(62 * scale, 65 * scale, 63 * scale, 54 * scale, 68 * scale, 54 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[3]);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(50 * scale, 55 * scale);\r\n        ctx.bezierCurveTo(57 * scale, 55 * scale, 58 * scale, 65 * scale, 52 * scale, 65 * scale);\r\n        ctx.bezierCurveTo(44 * scale, 66 * scale, 44 * scale, 54 * scale, 50 * scale, 55 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[3]);\r\n    } else if (i == 1) {\r\n        ctx.scale(0.6, 0.6);\r\n        ctx.translate(185 * scale, 165 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(108 * scale, 56 * scale);\r\n        ctx.bezierCurveTo(136 * scale, 58 * scale, 203 * scale, 69 * scale, 234 * scale, 75 * scale);\r\n        ctx.bezierCurveTo(246 * scale, 77 * scale, 247 * scale, 78 * scale, 245 * scale, 90 * scale);\r\n        ctx.bezierCurveTo(238 * scale, 143 * scale, 228 * scale, 197 * scale, 214 * scale, 259 * scale);\r\n        ctx.bezierCurveTo(212 * scale, 267 * scale, 209 * scale, 270 * scale, 189 * scale, 268 * scale);\r\n        ctx.bezierCurveTo(142 * scale, 264 * scale, 106 * scale, 260 * scale, 75 * scale, 253 * scale);\r\n        ctx.bezierCurveTo(60 * scale, 250 * scale, 64 * scale, 250 * scale, 66 * scale, 221 * scale);\r\n        ctx.bezierCurveTo(71 * scale, 168 * scale, 87 * scale, 95 * scale, 98 * scale, 67 * scale);\r\n        ctx.bezierCurveTo(101 * scale, 57 * scale, 103 * scale, 56 * scale, 106 * scale, 56 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[4], color[4], 20 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(112 * scale, 72 * scale);\r\n        ctx.bezierCurveTo(132 * scale, 73 * scale, 227 * scale, 85 * scale, 226 * scale, 91 * scale);\r\n        ctx.bezierCurveTo(231 * scale, 89 * scale, 217 * scale, 196 * scale, 200 * scale, 250 * scale);\r\n        ctx.bezierCurveTo(196 * scale, 254 * scale, 175 * scale, 249 * scale, 166 * scale, 249 * scale);\r\n        ctx.bezierCurveTo(91 * scale, 241 * scale, 82 * scale, 236 * scale, 83 * scale, 232 * scale);\r\n        ctx.bezierCurveTo(90 * scale, 144 * scale, 108 * scale, 71 * scale, 111 * scale, 72 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, undefined, color[0], 13 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(132 * scale, 117 * scale);\r\n        ctx.bezierCurveTo(171 * scale, 86 * scale, 191 * scale, 101 * scale, 188 * scale, 134 * scale);\r\n        ctx.bezierCurveTo(185 * scale, 154 * scale, 170 * scale, 158 * scale, 153 * scale, 158 * scale);\r\n        ctx.bezierCurveTo(143 * scale, 172 * scale, 146 * scale, 180 * scale, 147 * scale, 193 * scale);\r\n        fill_path(ctx, undefined, color[0], 20 * scale);\r\n        circle(ctx, 142 * scale, 221 * scale, 16.1245154965971 * scale);\r\n        fill_path(ctx, color[0]);\r\n    }\r\n    return can;\r\n}\r\n;\r\nfunction create_hurt_dead_box(scale, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 400 * scale;\r\n    can.height = 400 * scale;\r\n    ctx.save();\r\n    ctx.translate(202.5 * scale, 147.5 * scale);\r\n    round_rect(ctx, -96.5 * scale, -21.5 * scale, 193 * scale, 43 * scale, 0 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0], color[0], 12 * scale);\r\n    ctx.save();\r\n    ctx.translate(202.5 * scale, 190.5 * scale);\r\n    round_rect(ctx, 96.5 * scale, -21.5 * scale, -193 * scale, 43 * scale, 0 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0], color[0], 12 * scale);\r\n    ctx.save();\r\n    ctx.translate(202.5 * scale, 233.5 * scale);\r\n    round_rect(ctx, -96.5 * scale, -20.5 * scale, 193 * scale, 41 * scale, 0 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0], color[0], 12 * scale);\r\n    ctx.save();\r\n    ctx.translate(202.5 * scale, 275 * scale);\r\n    round_rect(ctx, 96.5 * scale, -21 * scale, -193 * scale, 42 * scale, 0 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0], color[0], 12 * scale);\r\n    ctx.save();\r\n    ctx.translate(203.5 * scale, 121.5 * scale);\r\n    round_rect(ctx, -115.5 * scale, -20.5 * scale, 231 * scale, 41 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0], color[0], 12 * scale);\r\n    ctx.save();\r\n    ctx.translate(203.5 * scale, 299 * scale);\r\n    round_rect(ctx, -115.5 * scale, -20 * scale, 231 * scale, 40 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0], color[0], 12 * scale);\r\n    ctx.save();\r\n    ctx.translate(298.5 * scale, 210 * scale);\r\n    round_rect(ctx, -20.5 * scale, -109 * scale, 41 * scale, 218 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0], color[0], 12 * scale);\r\n    ctx.save();\r\n    ctx.translate(108.5 * scale, 210 * scale);\r\n    round_rect(ctx, -20.5 * scale, -109 * scale, 41 * scale, 218 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0], color[0], 12 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_dead_box_ui(scale, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 650 * scale;\r\n    can.height = 650 * scale;\r\n    ctx.scale(1.9, 1.9);\r\n    ctx.save();\r\n    ctx.translate(202.5 * scale, 147.5 * scale);\r\n    round_rect(ctx, -96.5 * scale, -21.5 * scale, 193 * scale, 193 * scale, 0 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[4], color[1], 12 * scale);\r\n    ctx.save();\r\n    ctx.translate(203.5 * scale, 121.5 * scale);\r\n    round_rect(ctx, -115.5 * scale, -20.5 * scale, 231 * scale, 41 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[3], color[1], 12 * scale);\r\n    ctx.save();\r\n    ctx.translate(203.5 * scale, 299 * scale);\r\n    round_rect(ctx, -115.5 * scale, -20 * scale, 231 * scale, 40 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[3], color[1], 12 * scale);\r\n    ctx.save();\r\n    ctx.translate(298.5 * scale, 210 * scale);\r\n    round_rect(ctx, -20.5 * scale, -109 * scale, 41 * scale, 218 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[3], color[1], 12 * scale);\r\n    ctx.save();\r\n    ctx.translate(108.5 * scale, 210 * scale);\r\n    round_rect(ctx, -20.5 * scale, -109 * scale, 41 * scale, 218 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[3], color[1], 12 * scale);\r\n    ctx.save();\r\n    ctx.translate(204 * scale, 121.5 * scale);\r\n    round_rect(ctx, -92 * scale, -9.5 * scale, 184 * scale, 19 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[3], color[3], 10 * scale);\r\n    ctx.save();\r\n    ctx.translate(197 * scale, 299 * scale);\r\n    round_rect(ctx, 85 * scale, -9 * scale, -170 * scale, 18 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[3], color[3], 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(94 * scale, 317 * scale);\r\n    ctx.bezierCurveTo(110.5 * scale, 299.5 * scale, 110.5 * scale, 299.5 * scale, 127 * scale, 282 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[1], 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(279 * scale, 142 * scale);\r\n    ctx.bezierCurveTo(296.5 * scale, 125.5 * scale, 296.5 * scale, 125.5 * scale, 314 * scale, 109 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[1], 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(93 * scale, 106 * scale);\r\n    ctx.bezierCurveTo(110.5 * scale, 124 * scale, 110.5 * scale, 124 * scale, 128 * scale, 142 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[1], 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(281 * scale, 282 * scale);\r\n    ctx.bezierCurveTo(296 * scale, 297.5 * scale, 296 * scale, 297.5 * scale, 311 * scale, 313 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[1], 12 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_SANDWICH(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 400 * scale;\r\n    can.height = 400 * scale;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(101 * scale, 255 * scale);\r\n    ctx.bezierCurveTo(113 * scale, 243 * scale, 179 * scale, 210 * scale, 219 * scale, 196 * scale);\r\n    ctx.bezierCurveTo(252 * scale, 203 * scale, 288 * scale, 215 * scale, 318 * scale, 233 * scale);\r\n    ctx.bezierCurveTo(304 * scale, 254 * scale, 258 * scale, 273 * scale, 215 * scale, 296 * scale);\r\n    ctx.bezierCurveTo(161 * scale, 287 * scale, 119 * scale, 270 * scale, 102 * scale, 257 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[1], 14 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(99 * scale, 258 * scale);\r\n    ctx.bezierCurveTo(99 * scale, 272.5 * scale, 99 * scale, 272.5 * scale, 99 * scale, 287 * scale);\r\n    ctx.bezierCurveTo(166 * scale, 319 * scale, 193 * scale, 320 * scale, 212 * scale, 324 * scale);\r\n    ctx.bezierCurveTo(292 * scale, 286 * scale, 312 * scale, 271 * scale, 319 * scale, 263 * scale);\r\n    ctx.bezierCurveTo(320 * scale, 249 * scale, 320 * scale, 241 * scale, 318 * scale, 234 * scale);\r\n    ctx.bezierCurveTo(300 * scale, 254 * scale, 254 * scale, 277 * scale, 216 * scale, 294 * scale);\r\n    ctx.bezierCurveTo(190 * scale, 296 * scale, 135 * scale, 276 * scale, 102 * scale, 258 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2], color[1], 14 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(212 * scale, 323 * scale);\r\n    ctx.bezierCurveTo(211.5 * scale, 310.5 * scale, 211.5 * scale, 310.5 * scale, 211 * scale, 298 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[1], 14 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(212 * scale, 210 * scale);\r\n    ctx.bezierCurveTo(286 * scale, 210 * scale, 331 * scale, 254 * scale, 212 * scale, 276 * scale);\r\n    ctx.bezierCurveTo(108 * scale, 276 * scale, 112 * scale, 222 * scale, 213 * scale, 208 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[4], 14 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(98 * scale, 200 * scale);\r\n    ctx.bezierCurveTo(126 * scale, 216 * scale, 177 * scale, 232 * scale, 213 * scale, 237 * scale);\r\n    ctx.bezierCurveTo(266 * scale, 218 * scale, 288 * scale, 209 * scale, 318 * scale, 190 * scale);\r\n    ctx.bezierCurveTo(269 * scale, 164 * scale, 239 * scale, 158 * scale, 214 * scale, 153 * scale);\r\n    ctx.bezierCurveTo(148 * scale, 172 * scale, 131 * scale, 182 * scale, 98 * scale, 200 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[1], 14 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(97 * scale, 204 * scale);\r\n    ctx.bezierCurveTo(97 * scale, 215.5 * scale, 97 * scale, 215.5 * scale, 97 * scale, 227 * scale);\r\n    ctx.bezierCurveTo(148 * scale, 250 * scale, 179 * scale, 256 * scale, 212 * scale, 262 * scale);\r\n    ctx.bezierCurveTo(268 * scale, 244 * scale, 281 * scale, 233 * scale, 318 * scale, 214 * scale);\r\n    ctx.bezierCurveTo(318 * scale, 203 * scale, 318 * scale, 203 * scale, 318 * scale, 192 * scale);\r\n    ctx.bezierCurveTo(250 * scale, 225 * scale, 236 * scale, 231 * scale, 214 * scale, 239 * scale);\r\n    ctx.bezierCurveTo(158 * scale, 228 * scale, 126 * scale, 215 * scale, 99 * scale, 201 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2], color[1], 14 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(212 * scale, 260 * scale);\r\n    ctx.bezierCurveTo(212 * scale, 251.5 * scale, 212 * scale, 251.5 * scale, 212 * scale, 243 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[1], 14 * scale);\r\n    circle(ctx, 161 * scale, 201 * scale, 13 * scale);\r\n    fill_path(ctx, color[5]);\r\n    circle(ctx, 216 * scale, 205 * scale, 8.06225774829855 * scale);\r\n    fill_path(ctx, color[5]);\r\n    circle(ctx, 216 * scale, 175 * scale, 6.708203932499369 * scale);\r\n    fill_path(ctx, color[5]);\r\n    circle(ctx, 271 * scale, 191 * scale, 5.0990195135927845 * scale);\r\n    fill_path(ctx, color[5]);\r\n    circle(ctx, 206 * scale, 180 * scale, 11.180339887498949 * scale);\r\n    fill_path(ctx, color[5]);\r\n    return can;\r\n}\r\n;\r\nfunction create_scales(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 400 * scale;\r\n    can.height = 400 * scale;\r\n    ctx.save();\r\n    ctx.translate(85 * scale, 237 * scale);\r\n    ctx.rotate(1.5707963267948966);\r\n    round_regular_polygon(ctx, 6, 54.585977194239184 * scale, 1 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[1], color[2], 12 * scale);\r\n    ctx.save();\r\n    ctx.translate(178 * scale, 238 * scale);\r\n    ctx.rotate(1.5707963267948966);\r\n    round_regular_polygon(ctx, 6, 52.53573932334064 * scale, 1 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[1], color[2], 12 * scale);\r\n    ctx.save();\r\n    ctx.translate(270 * scale, 239 * scale);\r\n    ctx.rotate(1.5707963267948966);\r\n    round_regular_polygon(ctx, 6, 53.58058329516393 * scale, 1 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[1], color[2], 12 * scale);\r\n    ctx.save();\r\n    ctx.translate(222 * scale, 312 * scale);\r\n    ctx.rotate(1.5707963267948966);\r\n    round_regular_polygon(ctx, 6, 52.53573932334064 * scale, 1 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[1], color[2], 12 * scale);\r\n    ctx.save();\r\n    ctx.translate(317 * scale, 159 * scale);\r\n    ctx.rotate(1.5707963267948966);\r\n    round_regular_polygon(ctx, 6, 57.63465889766331 * scale, 1 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[1], color[2], 12 * scale);\r\n    ctx.save();\r\n    ctx.translate(223.5 * scale, 139.0625 * scale);\r\n    ctx.rotate(1.5707963267948966);\r\n    round_regular_polygon(ctx, 6, 51.66236541235796 * scale, 1 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[1], color[2], 12 * scale);\r\n    ctx.save();\r\n    ctx.translate(132.5 * scale, 137.0625 * scale);\r\n    ctx.rotate(1.5707963267948966);\r\n    round_regular_polygon(ctx, 6, 52.009614495783374 * scale, 1 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[1], color[2], 12 * scale);\r\n    ctx.save();\r\n    ctx.translate(178.5 * scale, 58.0625 * scale);\r\n    ctx.rotate(1.5707963267948966);\r\n    round_regular_polygon(ctx, 6, 53.16013544000805 * scale, 1 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[1], color[2], 12 * scale);\r\n    ctx.save();\r\n    ctx.translate(177.5 * scale, 216.0625 * scale);\r\n    ctx.rotate(1.5707963267948966);\r\n    round_regular_polygon(ctx, 6, 50 * scale, 1 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[1], color[2], 12 * scale);\r\n    ctx.save();\r\n    ctx.translate(84.5 * scale, 215.0625 * scale);\r\n    ctx.rotate(1.5707963267948966);\r\n    round_regular_polygon(ctx, 6, 54 * scale, 1 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[1], color[2], 12 * scale);\r\n    ctx.save();\r\n    ctx.translate(319.5 * scale, 138.0625 * scale);\r\n    ctx.rotate(1.5707963267948966);\r\n    round_regular_polygon(ctx, 6, 55.08175741568164 * scale, 1 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[1], color[2], 12 * scale);\r\n    ctx.save();\r\n    ctx.translate(269.5 * scale, 216.0625 * scale);\r\n    ctx.rotate(1.5707963267948966);\r\n    round_regular_polygon(ctx, 6, 54.589376255824725 * scale, 1 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[1], color[2], 12 * scale);\r\n    ctx.save();\r\n    ctx.translate(221.5 * scale, 293.0625 * scale);\r\n    ctx.rotate(0.5235987755982988);\r\n    round_regular_polygon(ctx, 6, 49.49747468305833 * scale, 1 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[1], color[2], 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(221.5 * scale, 342.0625 * scale);\r\n    ctx.bezierCurveTo(221.5 * scale, 350.5625 * scale, 221.5 * scale, 350.5625 * scale, 221.5 * scale, 359.0625 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[2], 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(84.5 * scale, 270.0625 * scale);\r\n    ctx.bezierCurveTo(84.5 * scale, 277.0625 * scale, 84.5 * scale, 277.0625 * scale, 84.5 * scale, 284.0625 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[2], 12 * scale);\r\n    ctx.save();\r\n    ctx.translate(84.5 * scale, 215.0625 * scale);\r\n    ctx.rotate(0.5235987755982988);\r\n    round_regular_polygon(ctx, 6, 30 * scale, 15 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[3]);\r\n    ctx.save();\r\n    ctx.translate(177.5 * scale, 215.0625 * scale);\r\n    ctx.rotate(0.5235987755982988);\r\n    round_regular_polygon(ctx, 6, 30 * scale, 15 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[3]);\r\n    ctx.save();\r\n    ctx.translate(222.5 * scale, 294.0625 * scale);\r\n    ctx.rotate(0.5235987755982988);\r\n    round_regular_polygon(ctx, 6, 30 * scale, 15 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[3]);\r\n    ctx.save();\r\n    ctx.translate(270.5 * scale, 216.0625 * scale);\r\n    ctx.rotate(0.5235987755982988);\r\n    round_regular_polygon(ctx, 6, 30 * scale, 15 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[3]);\r\n    ctx.save();\r\n    ctx.translate(320.5 * scale, 134.0625 * scale);\r\n    ctx.rotate(0.5235987755982988);\r\n    round_regular_polygon(ctx, 6, 30 * scale, 15 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[3]);\r\n    ctx.save();\r\n    ctx.translate(224.5 * scale, 138.0625 * scale);\r\n    ctx.rotate(0.5235987755982988);\r\n    round_regular_polygon(ctx, 6, 30 * scale, 15 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[3]);\r\n    ctx.save();\r\n    ctx.translate(133.5 * scale, 137.0625 * scale);\r\n    ctx.rotate(0.5235987755982988);\r\n    round_regular_polygon(ctx, 6, 30 * scale, 15 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[3]);\r\n    ctx.save();\r\n    ctx.translate(178.5 * scale, 56.0625 * scale);\r\n    ctx.rotate(0.5235987755982988);\r\n    round_regular_polygon(ctx, 6, 30 * scale, 15 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[3]);\r\n    return can;\r\n}\r\n;\r\nfunction create_wheat(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 52 * scale;\r\n    can.height = 65 * scale;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(9.833328247070312 * scale, 12.078125 * scale);\r\n    ctx.bezierCurveTo(15.333328247070312 * scale, 28.078125 * scale, 15.333328247070312 * scale, 28.078125 * scale, 20.833328247070312 * scale, 44.078125 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[1], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(7.8333282470703125 * scale, 20.078125 * scale);\r\n    ctx.bezierCurveTo(16.833328247070312 * scale, 32.578125 * scale, 16.833328247070312 * scale, 32.578125 * scale, 25.833328247070312 * scale, 45.078125 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[1], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(23.833328247070312 * scale, 26.078125 * scale);\r\n    ctx.bezierCurveTo(25.833328247070312 * scale, 11.078125 * scale, 16.833328247070312 * scale, 8.078125 * scale, 14.833328247070312 * scale, 7.078125 * scale);\r\n    ctx.bezierCurveTo(11.833328247070312 * scale, 17.078125 * scale, 13.833328247070312 * scale, 22.078125 * scale, 23.833328247070312 * scale, 27.078125 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[1], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(35.83332824707031 * scale, 8.078125 * scale);\r\n    ctx.bezierCurveTo(34.83332824707031 * scale, 27.078125 * scale, 28.833328247070312 * scale, 27.078125 * scale, 23.833328247070312 * scale, 28.078125 * scale);\r\n    ctx.bezierCurveTo(21.833328247070312 * scale, 14.078125 * scale, 26.833328247070312 * scale, 11.078125 * scale, 35.83332824707031 * scale, 8.078125 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[1], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(25.833328247070312 * scale, 39.078125 * scale);\r\n    ctx.bezierCurveTo(20.833328247070312 * scale, 29.078125 * scale, 14.833328247070312 * scale, 27.078125 * scale, 5.8333282470703125 * scale, 29.078125 * scale);\r\n    ctx.bezierCurveTo(9.833328247070312 * scale, 39.078125 * scale, 16.833328247070312 * scale, 42.078125 * scale, 25.833328247070312 * scale, 40.078125 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[1], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(42.83332824707031 * scale, 23.078125 * scale);\r\n    ctx.bezierCurveTo(35.83332824707031 * scale, 35.078125 * scale, 31.833328247070312 * scale, 37.078125 * scale, 25.833328247070312 * scale, 36.078125 * scale);\r\n    ctx.bezierCurveTo(25.833328247070312 * scale, 24.078125 * scale, 33.83332824707031 * scale, 21.078125 * scale, 42.83332824707031 * scale, 23.078125 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[1], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(23.833328247070312 * scale, 24.078125 * scale);\r\n    ctx.bezierCurveTo(20.833328247070312 * scale, 34.078125 * scale, 23.833328247070312 * scale, 40.078125 * scale, 27.833328247070312 * scale, 43.078125 * scale);\r\n    ctx.bezierCurveTo(37.33332824707031 * scale, 28.078125 * scale, 37.33332824707031 * scale, 28.078125 * scale, 46.83332824707031 * scale, 13.078125 * scale);\r\n    fill_path(ctx, undefined, color[1], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(38.83332824707031 * scale, 14.078125 * scale);\r\n    ctx.bezierCurveTo(34.83332824707031 * scale, 24.078125 * scale, 34.83332824707031 * scale, 24.078125 * scale, 30.833328247070312 * scale, 34.078125 * scale);\r\n    fill_path(ctx, undefined, color[1], 2 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_windmill(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 170 * scale;\r\n    can.height = 173 * scale;\r\n    ctx.translate(5 * scale, 5 * scale);\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.save();\r\n    ctx.translate(86.25 * scale, 84.953125 * scale);\r\n    ctx.rotate(0.32);\r\n    round_regular_polygon(ctx, 7, 42.15447781671598 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(-5 * scale, -5 * scale);\r\n    ctx.save();\r\n    ctx.translate(86.25 * scale, 84.953125 * scale);\r\n    ctx.rotate(0.32);\r\n    round_regular_polygon(ctx, 7, 42.15447781671598 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[1], color[2], 4 * scale);\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(5 * scale, 5 * scale);\r\n    ctx.save();\r\n    ctx.translate(86.25 * scale, 84.953125 * scale);\r\n    ctx.rotate(0.28);\r\n    round_regular_polygon(ctx, 7, 30.463092423455635 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(-5 * scale, -5 * scale);\r\n    ctx.save();\r\n    ctx.translate(86.25 * scale, 84.953125 * scale);\r\n    ctx.rotate(0.28);\r\n    round_regular_polygon(ctx, 7, 30.463092423455635 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[3], color[4], 4 * scale);\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(5 * scale, 5 * scale);\r\n    circle(ctx, 86.25 * scale, 84.953125 * scale, 18.867962264113206 * scale);\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(-5 * scale, -5 * scale);\r\n    circle(ctx, 86.25 * scale, 84.953125 * scale, 18.867962264113206 * scale);\r\n    fill_path(ctx, color[5], color[6], 4 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_windmill_wing(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 170 * scale;\r\n    can.height = 173 * scale;\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(5 * scale, 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(85.25 * scale, 82.953125 * scale);\r\n    ctx.bezierCurveTo(98.25 * scale, 46.453125 * scale, 98.25 * scale, 46.453125 * scale, 111.25 * scale, 9.953125 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[0], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(111.25 * scale, 8.953125 * scale);\r\n    ctx.bezierCurveTo(117.75 * scale, 12.453125 * scale, 117.75 * scale, 12.453125 * scale, 124.25 * scale, 15.953125 * scale);\r\n    ctx.bezierCurveTo(113.75 * scale, 39.953125 * scale, 113.75 * scale, 39.953125 * scale, 103.25 * scale, 63.953125 * scale);\r\n    ctx.bezierCurveTo(97.75 * scale, 64.953125 * scale, 97.75 * scale, 64.953125 * scale, 92.25 * scale, 65.953125 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(-5 * scale, -5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(111.25 * scale, 8.953125 * scale);\r\n    ctx.bezierCurveTo(117.75 * scale, 12.453125 * scale, 117.75 * scale, 12.453125 * scale, 124.25 * scale, 15.953125 * scale);\r\n    ctx.bezierCurveTo(113.75 * scale, 39.953125 * scale, 113.75 * scale, 39.953125 * scale, 103.25 * scale, 63.953125 * scale);\r\n    ctx.bezierCurveTo(97.75 * scale, 64.953125 * scale, 97.75 * scale, 64.953125 * scale, 92.25 * scale, 65.953125 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[7]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(85.25 * scale, 82.953125 * scale);\r\n    ctx.bezierCurveTo(98.25 * scale, 46.453125 * scale, 98.25 * scale, 46.453125 * scale, 111.25 * scale, 9.953125 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[6], 4 * scale);\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(5 * scale, 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(87.25 * scale, 84.953125 * scale);\r\n    ctx.bezierCurveTo(123.75 * scale, 100.453125 * scale, 123.75 * scale, 100.453125 * scale, 160.25 * scale, 115.953125 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[0], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(160.25 * scale, 114.953125 * scale);\r\n    ctx.bezierCurveTo(156.25 * scale, 122.453125 * scale, 156.25 * scale, 122.453125 * scale, 152.25 * scale, 129.953125 * scale);\r\n    ctx.bezierCurveTo(130.25 * scale, 117.953125 * scale, 130.25 * scale, 117.953125 * scale, 108.25 * scale, 105.953125 * scale);\r\n    ctx.bezierCurveTo(107.25 * scale, 98.953125 * scale, 107.25 * scale, 98.953125 * scale, 106.25 * scale, 91.953125 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(-5 * scale, -5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(160.25 * scale, 114.953125 * scale);\r\n    ctx.bezierCurveTo(156.25 * scale, 122.453125 * scale, 156.25 * scale, 122.453125 * scale, 152.25 * scale, 129.953125 * scale);\r\n    ctx.bezierCurveTo(130.25 * scale, 117.953125 * scale, 130.25 * scale, 117.953125 * scale, 108.25 * scale, 105.953125 * scale);\r\n    ctx.bezierCurveTo(107.25 * scale, 98.953125 * scale, 107.25 * scale, 98.953125 * scale, 106.25 * scale, 91.953125 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[7]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(87.25 * scale, 84.953125 * scale);\r\n    ctx.bezierCurveTo(123.75 * scale, 100.453125 * scale, 123.75 * scale, 100.453125 * scale, 160.25 * scale, 115.953125 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[6], 4 * scale);\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(5 * scale, 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(83.25 * scale, 83.953125 * scale);\r\n    ctx.bezierCurveTo(47.75 * scale, 68.453125 * scale, 47.75 * scale, 68.453125 * scale, 12.25 * scale, 52.953125 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[0], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(13.25 * scale, 53.953125 * scale);\r\n    ctx.bezierCurveTo(17.25 * scale, 46.953125 * scale, 17.25 * scale, 46.953125 * scale, 21.25 * scale, 39.953125 * scale);\r\n    ctx.bezierCurveTo(42.75 * scale, 52.453125 * scale, 42.75 * scale, 52.453125 * scale, 64.25 * scale, 64.953125 * scale);\r\n    ctx.bezierCurveTo(64.25 * scale, 70.953125 * scale, 64.25 * scale, 70.953125 * scale, 64.25 * scale, 76.953125 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(-5 * scale, -5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(13.25 * scale, 53.953125 * scale);\r\n    ctx.bezierCurveTo(17.25 * scale, 46.953125 * scale, 17.25 * scale, 46.953125 * scale, 21.25 * scale, 39.953125 * scale);\r\n    ctx.bezierCurveTo(42.75 * scale, 52.453125 * scale, 42.75 * scale, 52.453125 * scale, 64.25 * scale, 64.953125 * scale);\r\n    ctx.bezierCurveTo(64.25 * scale, 70.953125 * scale, 64.25 * scale, 70.953125 * scale, 64.25 * scale, 76.953125 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[7]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(83.25 * scale, 83.953125 * scale);\r\n    ctx.bezierCurveTo(47.75 * scale, 68.453125 * scale, 47.75 * scale, 68.453125 * scale, 12.25 * scale, 52.953125 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[6], 4 * scale);\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(5 * scale, 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(84.25 * scale, 86.953125 * scale);\r\n    ctx.bezierCurveTo(70.25 * scale, 123.953125 * scale, 70.25 * scale, 123.953125 * scale, 56.25 * scale, 160.953125 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[0], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(56.25 * scale, 159.953125 * scale);\r\n    ctx.bezierCurveTo(49.25 * scale, 155.453125 * scale, 49.25 * scale, 155.453125 * scale, 42.25 * scale, 150.953125 * scale);\r\n    ctx.bezierCurveTo(54.25 * scale, 127.953125 * scale, 54.25 * scale, 127.953125 * scale, 66.25 * scale, 104.953125 * scale);\r\n    ctx.bezierCurveTo(71.25 * scale, 104.953125 * scale, 71.25 * scale, 104.953125 * scale, 76.25 * scale, 104.953125 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(-5 * scale, -5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(56.25 * scale, 159.953125 * scale);\r\n    ctx.bezierCurveTo(49.25 * scale, 155.453125 * scale, 49.25 * scale, 155.453125 * scale, 42.25 * scale, 150.953125 * scale);\r\n    ctx.bezierCurveTo(54.25 * scale, 127.953125 * scale, 54.25 * scale, 127.953125 * scale, 66.25 * scale, 104.953125 * scale);\r\n    ctx.bezierCurveTo(71.25 * scale, 104.953125 * scale, 71.25 * scale, 104.953125 * scale, 76.25 * scale, 104.953125 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[7]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(84.25 * scale, 86.953125 * scale);\r\n    ctx.bezierCurveTo(70.25 * scale, 123.953125 * scale, 70.25 * scale, 123.953125 * scale, 56.25 * scale, 160.953125 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[6], 4 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_windmill_head(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 170 * scale;\r\n    can.height = 173 * scale;\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(5 * scale, 5 * scale);\r\n    ctx.save();\r\n    ctx.translate(86.25 * scale, 84.953125 * scale);\r\n    round_regular_polygon(ctx, 7, 9.848857801796104 * scale, 5 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(-5 * scale, -5 * scale);\r\n    ctx.save();\r\n    ctx.translate(86.25 * scale, 84.953125 * scale);\r\n    round_regular_polygon(ctx, 7, 9.848857801796104 * scale, 5 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[8], color[9], 4 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_cord(scale, useless, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    var w = scale * 75;\r\n    var h = scale * 55;\r\n    var width = scale * 4;\r\n    can.width = w;\r\n    can.height = h;\r\n    ctx.translate(-30 * scale, -40 * scale);\r\n    ctx.globalAlpha = 1;\r\n    ctx.beginPath();\r\n    ctx.bezierCurveTo(67 * scale, 56 * scale, 72 * scale, 71 * scale, 72 * scale, 71 * scale);\r\n    ctx.bezierCurveTo(72 * scale, 71 * scale, 84 * scale, 70 * scale, 75 * scale, 82 * scale);\r\n    ctx.bezierCurveTo(70 * scale, 88 * scale, 61 * scale, 89 * scale, 58 * scale, 89 * scale);\r\n    ctx.bezierCurveTo(55 * scale, 89 * scale, 40 * scale, 89 * scale, 46 * scale, 77 * scale);\r\n    ctx.bezierCurveTo(46 * scale, 77 * scale, 43 * scale, 63 * scale, 43 * scale, 63 * scale);\r\n    ctx.bezierCurveTo(35 * scale, 61 * scale, 35 * scale, 53 * scale, 42 * scale, 47 * scale);\r\n    ctx.bezierCurveTo(48 * scale, 42 * scale, 62 * scale, 41 * scale, 66 * scale, 43 * scale);\r\n    ctx.bezierCurveTo(70 * scale, 45 * scale, 72 * scale, 48 * scale, 67 * scale, 56 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.bezierCurveTo(68 * scale, 61 * scale, 72 * scale, 76 * scale, 72 * scale, 76 * scale);\r\n    ctx.bezierCurveTo(65 * scale, 85 * scale, 61 * scale, 85 * scale, 49 * scale, 83 * scale);\r\n    ctx.bezierCurveTo(49 * scale, 83 * scale, 44 * scale, 63 * scale, 44 * scale, 63 * scale);\r\n    ctx.bezierCurveTo(54 * scale, 63 * scale, 60 * scale, 63 * scale, 67 * scale, 55 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1]);\r\n    ctx.beginPath();\r\n    ctx.moveTo(69 * scale, 65 * scale);\r\n    ctx.bezierCurveTo(70 * scale, 61 * scale, 81 * scale, 66 * scale, 86 * scale, 66 * scale);\r\n    ctx.bezierCurveTo(90 * scale, 66 * scale, 97 * scale, 63 * scale, 97 * scale, 56 * scale);\r\n    ctx.bezierCurveTo(97 * scale, 50 * scale, 93 * scale, 47 * scale, 88 * scale, 44 * scale);\r\n    fill_path(ctx, false, color[1], 2);\r\n    ctx.beginPath();\r\n    ctx.moveTo(50 * scale, 48 * scale);\r\n    ctx.bezierCurveTo(43 * scale, 52 * scale, 50 * scale, 54 * scale, 51 * scale, 54 * scale);\r\n    ctx.bezierCurveTo(54 * scale, 54 * scale, 59 * scale, 52 * scale, 59 * scale, 49 * scale);\r\n    ctx.bezierCurveTo(59 * scale, 48 * scale, 55 * scale, 46 * scale, 50 * scale, 48 * scale);\r\n    fill_path(ctx, color[2]);\r\n    return can;\r\n}\r\n;\r\nfunction create_bandage(scale, useless, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    var w = scale * 195;\r\n    var h = scale * 190;\r\n    var x = w / 2;\r\n    var y = h / 2;\r\n    can.width = w;\r\n    can.height = h;\r\n    var round = scale * 10;\r\n    var wf = scale * 35;\r\n    var hf = scale * 150;\r\n    var wf2 = wf / 2;\r\n    var hf2 = hf / 2;\r\n    var width = scale * 4;\r\n    ctx.translate(x - 5 * scale, y - 5 * scale);\r\n    ctx.rotate(-Math.PI / 1.25);\r\n    ctx.globalAlpha = 1;\r\n    round_rect(ctx, -wf2, -hf2, wf, hf, round);\r\n    fill_path(ctx, color[0], color[1], width);\r\n    ctx.translate(0, 0);\r\n    ctx.rotate(Math.PI / 3);\r\n    ctx.globalAlpha = 1;\r\n    round_rect(ctx, -wf2, -hf2, wf, hf, round);\r\n    fill_path(ctx, color[0], color[1], width);\r\n    ctx.translate(0, 5);\r\n    round_rect(ctx, -wf2 / 2, -hf2 / 2, wf / 2, hf / 3, round - 2);\r\n    fill_path(ctx, color[1]);\r\n    return can;\r\n}\r\n;\r\nfunction create_craft_button(scale, funs, subscale, color, alpha) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    var w = scale * 70;\r\n    var h = scale * 70;\r\n    var r = scale * 10;\r\n    var shadow = scale * 5;\r\n    can.width = w;\r\n    can.height = h + shadow;\r\n    for (var i = 0; i < funs.length; i++) {\r\n        var f = funs[i];\r\n        ctx.globalAlpha = f.a;\r\n        var img = f.f(subscale, false, f.c);\r\n        ctx.save();\r\n        ctx.translate(w / 2 + f.x * scale, h / 2 + f.y * scale);\r\n        ctx.rotate(f.r);\r\n        ctx.drawImage(img, -img.width / 2, -img.height / 2);\r\n        ctx.restore();\r\n    }\r\n    var buttons = [];\r\n    for (var i = 0; i < color.length; i++) {\r\n        var tmpcan = document.createElement(\"canvas\");\r\n        var tmpctx = tmpcan.getContext(\"2d\");\r\n        tmpcan.width = w;\r\n        tmpcan.height = h + shadow;\r\n        tmpctx.globalAlpha = alpha / 2;\r\n        if (i == 2) round_rect(tmpctx, 0, shadow, w, h, r); else round_rect(tmpctx, 0, 0, w, h + shadow, r);\r\n        fill_path(tmpctx, \"#081a19\");\r\n        tmpctx.globalAlpha = alpha;\r\n        if (i == 2) round_rect(tmpctx, 0, shadow, w, h, r); else round_rect(tmpctx, 0, 0, w, h, r);\r\n        fill_path(tmpctx, color[i]);\r\n        tmpctx.globalAlpha = 1;\r\n        if (i == 2) tmpctx.drawImage(can, 0, shadow); else tmpctx.drawImage(can, 0, 0);\r\n        buttons.push(CTI(tmpcan));\r\n    }\r\n    return buttons;\r\n}\r\n;\r\nfunction create_bread_oven_ui(scale, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 149 * scale;\r\n    can.height = 356 * scale;\r\n    ctx.save();\r\n    ctx.translate(74.5 * scale, 177.5 * scale);\r\n    round_rect(ctx, -57.5 * scale, -161.5 * scale, 100 * scale, 323 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0], color[1], 4 * scale);\r\n    ctx.save();\r\n    ctx.translate(74.5 * scale, 177.5 * scale);\r\n    round_rect(ctx, -57.5 * scale, 50.5 * scale, 100 * scale, 105 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[6], color[1], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(16 * scale, 125 * scale);\r\n    ctx.bezierCurveTo(74.5 * scale, 125 * scale, 118 * scale, 125 * scale, 118 * scale, 125 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2], color[2], 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(16 * scale, 120 * scale);\r\n    ctx.bezierCurveTo(74.5 * scale, 120 * scale, 74.5 * scale, 120 * scale, 118 * scale, 120 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[3], 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(16 * scale, 228 * scale);\r\n    ctx.bezierCurveTo(75 * scale, 228.5 * scale, 118 * scale, 228.5 * scale, 118 * scale, 229 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2], color[2], 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(16 * scale, 224 * scale);\r\n    ctx.bezierCurveTo(75 * scale, 224 * scale, 118 * scale, 224 * scale, 118 * scale, 224 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[3], 10 * scale);\r\n    ctx.save();\r\n    ctx.translate(72 * scale, 68.5 * scale);\r\n    round_rect(ctx, -41.5 * scale, -36.5 * scale, 73 * scale, 73 * scale, 13 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[4]);\r\n    ctx.save();\r\n    ctx.translate(72 * scale, 175.5 * scale);\r\n    round_rect(ctx, -41.5 * scale, -38.5 * scale, 73 * scale, 73 * scale, 13 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[4]);\r\n    ctx.save();\r\n    ctx.translate(72 * scale, 279.5 * scale);\r\n    round_rect(ctx, -41.5 * scale, -40.5 * scale, 73 * scale, 73 * scale, 13 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[4]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(16 * scale, 338 * scale);\r\n    ctx.bezierCurveTo(75 * scale, 338 * scale, 118 * scale, 338 * scale, 118 * scale, 338 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2], color[2], 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(16 * scale, 333 * scale);\r\n    ctx.bezierCurveTo(75 * scale, 333 * scale, 118 * scale, 333 * scale, 118 * scale, 333 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[3], 10 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_big_fire_wood(scale, useless, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    var w = scale * 193;\r\n    var h = scale * 198;\r\n    var x = 140 * scale;\r\n    var y = 90 * scale;\r\n    can.width = w;\r\n    can.height = h;\r\n    var round = scale * 10;\r\n    var wf = scale * 25;\r\n    var hf = scale * 180;\r\n    var wf2 = wf / 2;\r\n    var hf2 = hf / 2;\r\n    var width = scale * 4;\r\n    ctx.translate(-25 * scale, 1 * scale);\r\n    ctx.translate(x, y);\r\n    ctx.rotate(-Math.PI / 5);\r\n    round_rect(ctx, -wf2, -hf2, wf, hf, round);\r\n    fill_path(ctx, color[0], color[1], width);\r\n    ctx.translate(-30 * scale, -25 * scale);\r\n    ctx.rotate(Math.PI / 3);\r\n    round_rect(ctx, -wf2, -hf2, wf, hf, round);\r\n    fill_path(ctx, color[0], color[1], width);\r\n    ctx.translate(35 * scale, 30 * scale);\r\n    ctx.rotate(Math.PI / 3);\r\n    round_rect(ctx, -wf2, -hf2, wf, hf, round);\r\n    fill_path(ctx, color[0], color[1], width);\r\n    return can;\r\n}\r\n;\r\nfunction create_fire(scale, useless, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    var w = scale * 145;\r\n    var h = scale * 145;\r\n    var x = w / 2;\r\n    var y = h / 2;\r\n    can.width = w;\r\n    can.height = h;\r\n    var r = scale * 70;\r\n    ctx.translate(x, y);\r\n    ctx.globalAlpha = 0.4;\r\n    circle(ctx, 0, 0, r);\r\n    fill_path(ctx, color[0]);\r\n    var r = scale * 50;\r\n    ctx.translate(0, 0);\r\n    ctx.globalAlpha = 0.8;\r\n    circle(ctx, 0, 0, r);\r\n    fill_path(ctx, color[0]);\r\n    var r = scale * 35;\r\n    ctx.translate(0, 0);\r\n    ctx.globalAlpha = 0.8;\r\n    circle(ctx, 0, 0, r);\r\n    fill_path(ctx, color[1]);\r\n    var r = scale * 20;\r\n    ctx.translate(0, 0);\r\n    ctx.globalAlpha = 0.8;\r\n    circle(ctx, 0, 0, r);\r\n    fill_path(ctx, color[2]);\r\n    return can;\r\n}\r\n;\r\nfunction create_wood_fire(scale, useless, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    var w = scale * 135;\r\n    var h = scale * 190;\r\n    var x = w / 2;\r\n    var y = h / 2;\r\n    can.width = w;\r\n    can.height = h;\r\n    var round = scale * 10;\r\n    var wf = scale * 25;\r\n    var hf = scale * 180;\r\n    var wf2 = wf / 2;\r\n    var hf2 = hf / 2;\r\n    var width = scale * 4;\r\n    ctx.translate(x, y);\r\n    ctx.rotate(-Math.PI / 5);\r\n    ctx.globalAlpha = 1;\r\n    round_rect(ctx, -wf2, -hf2, wf, hf, round);\r\n    fill_path(ctx, color[0], color[1], width);\r\n    ctx.translate(0, 0);\r\n    ctx.rotate(Math.PI / 5);\r\n    ctx.globalAlpha = 1;\r\n    round_rect(ctx, -wf2, -hf2, wf, hf, round);\r\n    fill_path(ctx, color[0], color[1], width);\r\n    return can;\r\n}\r\n;\r\nfunction create_ground_fire(scale, useless, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    var w = scale * 205;\r\n    var h = scale * 205;\r\n    var x = w / 2;\r\n    var y = h / 2;\r\n    can.width = w;\r\n    can.height = h;\r\n    var r = scale * 100;\r\n    ctx.translate(x, y);\r\n    ctx.globalAlpha = 1;\r\n    circle(ctx, 0, 0, r);\r\n    fill_path(ctx, color[0]);\r\n    return can;\r\n}\r\n;\r\nfunction create_halo_fire(scale, useless, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    var w = scale * 370;\r\n    var h = scale * 370;\r\n    var x = w / 2;\r\n    var y = h / 2;\r\n    can.width = w;\r\n    can.height = h;\r\n    var r = scale * 180;\r\n    ctx.globalAlpha = 0.2;\r\n    circle(ctx, x, y, r);\r\n    fill_path(ctx, color[0]);\r\n    return can;\r\n}\r\n;\r\nfunction create_elf_hat(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 155 * scale;\r\n    can.height = 127 * scale;\r\n    ctx.globalAlpha = 0.5;\r\n    ctx.translate(0, 8 * scale);\r\n    ctx.translate(-7 * scale, -20 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(55 * scale, 68 * scale);\r\n    ctx.bezierCurveTo(86 * scale, 64 * scale, 117 * scale, 66 * scale, 134 * scale, 68 * scale);\r\n    ctx.bezierCurveTo(152 * scale, 69 * scale, 165 * scale, 86 * scale, 152 * scale, 104 * scale);\r\n    ctx.bezierCurveTo(146 * scale, 87 * scale, 122 * scale, 89 * scale, 98 * scale, 90 * scale);\r\n    ctx.bezierCurveTo(64 * scale, 89 * scale, 41 * scale, 91 * scale, 36 * scale, 106 * scale);\r\n    ctx.bezierCurveTo(19 * scale, 92 * scale, 31 * scale, 71 * scale, 54 * scale, 69 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(0, -8 * scale);\r\n    ctx.translate(7 * scale, 20 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(24 * scale, 28 * scale);\r\n    ctx.bezierCurveTo(39 * scale, 30 * scale, 37 * scale, 31 * scale, 40 * scale, 32 * scale);\r\n    ctx.bezierCurveTo(22 * scale, 45 * scale, 26 * scale, 58 * scale, 29 * scale, 66 * scale);\r\n    ctx.bezierCurveTo(86.5 * scale, 65 * scale, 86.5 * scale, 65 * scale, 144 * scale, 64 * scale);\r\n    ctx.bezierCurveTo(151 * scale, 42 * scale, 132 * scale, 20 * scale, 120 * scale, 16 * scale);\r\n    ctx.bezierCurveTo(106 * scale, 12 * scale, 89 * scale, 0 * scale, 73 * scale, 3 * scale);\r\n    ctx.bezierCurveTo(51 * scale, 5 * scale, 36 * scale, 20 * scale, 25 * scale, 28 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(30 * scale, 41 * scale);\r\n    ctx.bezierCurveTo(49 * scale, 31 * scale, 53 * scale, 29 * scale, 62 * scale, 27 * scale);\r\n    ctx.bezierCurveTo(59 * scale, 24 * scale, 56 * scale, 25 * scale, 53 * scale, 24 * scale);\r\n    ctx.bezierCurveTo(67 * scale, 15 * scale, 84 * scale, 12 * scale, 120 * scale, 16 * scale);\r\n    ctx.bezierCurveTo(107 * scale, 11 * scale, 96 * scale, 6 * scale, 85 * scale, 2 * scale);\r\n    ctx.bezierCurveTo(59 * scale, 3 * scale, 54 * scale, 7 * scale, 40 * scale, 17 * scale);\r\n    ctx.bezierCurveTo(32.5 * scale, 22.5 * scale, 32.5 * scale, 22.5 * scale, 25 * scale, 28 * scale);\r\n    ctx.bezierCurveTo(32 * scale, 30 * scale, 32 * scale, 30 * scale, 39 * scale, 32 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(24 * scale, 28 * scale);\r\n    ctx.bezierCurveTo(39 * scale, 30 * scale, 37 * scale, 31 * scale, 40 * scale, 32 * scale);\r\n    ctx.bezierCurveTo(22 * scale, 45 * scale, 26 * scale, 58 * scale, 29 * scale, 66 * scale);\r\n    ctx.bezierCurveTo(86.5 * scale, 65 * scale, 86.5 * scale, 65 * scale, 144 * scale, 64 * scale);\r\n    ctx.bezierCurveTo(151 * scale, 42 * scale, 132 * scale, 20 * scale, 120 * scale, 16 * scale);\r\n    ctx.bezierCurveTo(106 * scale, 12 * scale, 89 * scale, 0 * scale, 73 * scale, 3 * scale);\r\n    ctx.bezierCurveTo(51 * scale, 5 * scale, 36 * scale, 20 * scale, 25 * scale, 28 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[2], 4 * scale);\r\n    circle(ctx, 18 * scale, 38 * scale, 14.866068747318506 * scale);\r\n    fill_path(ctx, color[4], color[5], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(39 * scale, 30 * scale);\r\n    ctx.bezierCurveTo(27 * scale, 38 * scale, 25 * scale, 50 * scale, 26 * scale, 60 * scale);\r\n    ctx.bezierCurveTo(36.5 * scale, 58.5 * scale, 36.5 * scale, 58.5 * scale, 47 * scale, 57 * scale);\r\n    fill_path(ctx, color[1], color[2], 4 * scale);\r\n    ctx.translate(-7 * scale, -20 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(27 * scale, 74 * scale);\r\n    ctx.bezierCurveTo(38 * scale, 77.5 * scale, 38 * scale, 77.5 * scale, 49 * scale, 81 * scale);\r\n    ctx.bezierCurveTo(54.5 * scale, 75.5 * scale, 54.5 * scale, 75.5 * scale, 60 * scale, 70 * scale);\r\n    ctx.bezierCurveTo(64 * scale, 72 * scale, 64 * scale, 72 * scale, 68 * scale, 74 * scale);\r\n    ctx.bezierCurveTo(80.5 * scale, 67.5 * scale, 80.5 * scale, 67.5 * scale, 93 * scale, 61 * scale);\r\n    ctx.bezierCurveTo(104.5 * scale, 68 * scale, 104.5 * scale, 68 * scale, 116 * scale, 75 * scale);\r\n    ctx.bezierCurveTo(120.5 * scale, 72.5 * scale, 120.5 * scale, 72.5 * scale, 125 * scale, 70 * scale);\r\n    ctx.bezierCurveTo(129 * scale, 75 * scale, 129 * scale, 75 * scale, 133 * scale, 80 * scale);\r\n    ctx.bezierCurveTo(145.5 * scale, 76.5 * scale, 145.5 * scale, 76.5 * scale, 158 * scale, 73 * scale);\r\n    ctx.bezierCurveTo(158 * scale, 87 * scale, 158 * scale, 93 * scale, 155 * scale, 95 * scale);\r\n    ctx.bezierCurveTo(152.5 * scale, 96 * scale, 152.5 * scale, 96 * scale, 150 * scale, 97 * scale);\r\n    ctx.bezierCurveTo(121 * scale, 85 * scale, 108 * scale, 86 * scale, 93 * scale, 85 * scale);\r\n    ctx.bezierCurveTo(64 * scale, 85 * scale, 52 * scale, 95 * scale, 38 * scale, 99 * scale);\r\n    ctx.bezierCurveTo(36 * scale, 98.5 * scale, 36 * scale, 98.5 * scale, 34 * scale, 98 * scale);\r\n    ctx.bezierCurveTo(25 * scale, 98 * scale, 27 * scale, 91 * scale, 27 * scale, 76 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[6], color[7], 6 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_christmas_hat(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 155 * scale;\r\n    can.height = 127 * scale;\r\n    ctx.globalAlpha = 0.5;\r\n    ctx.translate(0, 8 * scale);\r\n    ctx.translate(-7 * scale, -20 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(55 * scale, 68 * scale);\r\n    ctx.bezierCurveTo(86 * scale, 64 * scale, 117 * scale, 66 * scale, 134 * scale, 68 * scale);\r\n    ctx.bezierCurveTo(152 * scale, 69 * scale, 165 * scale, 86 * scale, 152 * scale, 104 * scale);\r\n    ctx.bezierCurveTo(146 * scale, 87 * scale, 122 * scale, 89 * scale, 98 * scale, 90 * scale);\r\n    ctx.bezierCurveTo(64 * scale, 89 * scale, 41 * scale, 91 * scale, 36 * scale, 106 * scale);\r\n    ctx.bezierCurveTo(19 * scale, 92 * scale, 31 * scale, 71 * scale, 54 * scale, 69 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(0, -8 * scale);\r\n    ctx.translate(7 * scale, 20 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(24 * scale, 28 * scale);\r\n    ctx.bezierCurveTo(39 * scale, 30 * scale, 37 * scale, 31 * scale, 40 * scale, 32 * scale);\r\n    ctx.bezierCurveTo(22 * scale, 45 * scale, 26 * scale, 58 * scale, 29 * scale, 66 * scale);\r\n    ctx.bezierCurveTo(86.5 * scale, 65 * scale, 86.5 * scale, 65 * scale, 144 * scale, 64 * scale);\r\n    ctx.bezierCurveTo(151 * scale, 42 * scale, 132 * scale, 20 * scale, 120 * scale, 16 * scale);\r\n    ctx.bezierCurveTo(106 * scale, 12 * scale, 89 * scale, 0 * scale, 73 * scale, 3 * scale);\r\n    ctx.bezierCurveTo(51 * scale, 5 * scale, 36 * scale, 20 * scale, 25 * scale, 28 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(30 * scale, 41 * scale);\r\n    ctx.bezierCurveTo(49 * scale, 31 * scale, 53 * scale, 29 * scale, 62 * scale, 27 * scale);\r\n    ctx.bezierCurveTo(59 * scale, 24 * scale, 56 * scale, 25 * scale, 53 * scale, 24 * scale);\r\n    ctx.bezierCurveTo(67 * scale, 15 * scale, 84 * scale, 12 * scale, 120 * scale, 16 * scale);\r\n    ctx.bezierCurveTo(107 * scale, 11 * scale, 96 * scale, 6 * scale, 85 * scale, 2 * scale);\r\n    ctx.bezierCurveTo(59 * scale, 3 * scale, 54 * scale, 7 * scale, 40 * scale, 17 * scale);\r\n    ctx.bezierCurveTo(32.5 * scale, 22.5 * scale, 32.5 * scale, 22.5 * scale, 25 * scale, 28 * scale);\r\n    ctx.bezierCurveTo(32 * scale, 30 * scale, 32 * scale, 30 * scale, 39 * scale, 32 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(24 * scale, 28 * scale);\r\n    ctx.bezierCurveTo(39 * scale, 30 * scale, 37 * scale, 31 * scale, 40 * scale, 32 * scale);\r\n    ctx.bezierCurveTo(22 * scale, 45 * scale, 26 * scale, 58 * scale, 29 * scale, 66 * scale);\r\n    ctx.bezierCurveTo(86.5 * scale, 65 * scale, 86.5 * scale, 65 * scale, 144 * scale, 64 * scale);\r\n    ctx.bezierCurveTo(151 * scale, 42 * scale, 132 * scale, 20 * scale, 120 * scale, 16 * scale);\r\n    ctx.bezierCurveTo(106 * scale, 12 * scale, 89 * scale, 0 * scale, 73 * scale, 3 * scale);\r\n    ctx.bezierCurveTo(51 * scale, 5 * scale, 36 * scale, 20 * scale, 25 * scale, 28 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[2], 4 * scale);\r\n    circle(ctx, 18 * scale, 38 * scale, 14.866068747318506 * scale);\r\n    fill_path(ctx, color[4], color[5], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(39 * scale, 30 * scale);\r\n    ctx.bezierCurveTo(27 * scale, 38 * scale, 25 * scale, 50 * scale, 26 * scale, 60 * scale);\r\n    ctx.bezierCurveTo(36.5 * scale, 58.5 * scale, 36.5 * scale, 58.5 * scale, 47 * scale, 57 * scale);\r\n    fill_path(ctx, color[1], color[2], 4 * scale);\r\n    ctx.translate(-7 * scale, -20 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(55 * scale, 68 * scale);\r\n    ctx.bezierCurveTo(86 * scale, 64 * scale, 117 * scale, 66 * scale, 134 * scale, 68 * scale);\r\n    ctx.bezierCurveTo(152 * scale, 69 * scale, 165 * scale, 86 * scale, 152 * scale, 104 * scale);\r\n    ctx.bezierCurveTo(146 * scale, 87 * scale, 122 * scale, 89 * scale, 98 * scale, 90 * scale);\r\n    ctx.bezierCurveTo(64 * scale, 89 * scale, 41 * scale, 91 * scale, 36 * scale, 106 * scale);\r\n    ctx.bezierCurveTo(19 * scale, 92 * scale, 31 * scale, 71 * scale, 54 * scale, 69 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[5], 4 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_zombie_hand(scale, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    var w = scale * 220;\r\n    var h = scale * 220;\r\n    var r = scale * 32;\r\n    var width = scale * 4;\r\n    can.width = w;\r\n    can.height = h;\r\n    ctx.translate(w / 2, h / 2 + 10 * scale);\r\n    ctx.globalAlpha = 0.5;\r\n    circle(ctx, 0, 0, r);\r\n    fill_path(ctx, color[0], color[0]);\r\n    ctx.translate(0, -8 * scale);\r\n    ctx.globalAlpha = 1;\r\n    circle(ctx, 0, 0, r);\r\n    fill_path(ctx, color[1], color[2], width);\r\n    return can;\r\n}\r\n;\r\nfunction create_hand(scale, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    var w = scale * 40;\r\n    var h = scale * 40;\r\n    var r = scale * 16;\r\n    var width = scale * 4;\r\n    can.width = w;\r\n    can.height = h;\r\n    ctx.translate(w / 2, h / 2);\r\n    ctx.globalAlpha = 1;\r\n    circle(ctx, 0, 0, r);\r\n    fill_path(ctx, color[0], color[1], width);\r\n    return can;\r\n}\r\n;\r\nfunction create_hand_shadow(scale, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    var w = scale * 220;\r\n    var h = scale * 220;\r\n    var r = scale * 16;\r\n    can.width = w;\r\n    can.height = h;\r\n    ctx.translate(w / 2, h / 2);\r\n    ctx.globalAlpha = 0.5;\r\n    circle(ctx, 0, 0, r);\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    return can;\r\n}\r\n;\r\nfunction create_apricot_tree(scale, color, rotate, i) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    var w = scale * 210;\r\n    var h = scale * 205;\r\n    var w2 = w / 2;\r\n    var h2 = h / 2;\r\n    var round = scale * 30;\r\n    var shadow = scale * 20;\r\n    var wt = scale * 200;\r\n    var ht = scale * 180;\r\n    var r = scale * 80;\r\n    var wt2 = wt / 2;\r\n    var ht2 = ht / 2;\r\n    var width = 4;\r\n    can.width = w;\r\n    can.height = h;\r\n    can.width = 419 * scale;\r\n    can.height = 412 * scale;\r\n    if (i == 1) {\r\n        ctx.save();\r\n        ctx.translate(10 * scale, 0 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(117.99996948242188 * scale, 216.40621948242188 * scale);\r\n        ctx.bezierCurveTo(86.99996948242188 * scale, 221.40621948242188 * scale, 74.99996948242188 * scale, 217.40621948242188 * scale, 60.999969482421875 * scale, 205.40621948242188 * scale);\r\n        fill_path(ctx, undefined, color[4], 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(114.99996948242188 * scale, 227.40621948242188 * scale);\r\n        ctx.bezierCurveTo(90.99996948242188 * scale, 233.40621948242188 * scale, 66.99996948242188 * scale, 228.40621948242188 * scale, 43.999969482421875 * scale, 225.40621948242188 * scale);\r\n        fill_path(ctx, undefined, color[4], 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(110.99996948242188 * scale, 236.40621948242188 * scale);\r\n        ctx.bezierCurveTo(94.99996948242188 * scale, 244.40621948242188 * scale, 79.99996948242188 * scale, 249.40621948242188 * scale, 60.999969482421875 * scale, 249.40621948242188 * scale);\r\n        fill_path(ctx, undefined, color[4], 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(111.99996948242188 * scale, 206.29513549804688 * scale);\r\n        ctx.bezierCurveTo(91.99996948242188 * scale, 206.29513549804688 * scale, 87.99996948242188 * scale, 201.29513549804688 * scale, 79.99996948242188 * scale, 192.29513549804688 * scale);\r\n        fill_path(ctx, undefined, color[4], 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(109.99996948242188 * scale, 249.18402099609375 * scale);\r\n        ctx.bezierCurveTo(97.99996948242188 * scale, 263.18402099609375 * scale, 85.99996948242188 * scale, 271.18402099609375 * scale, 65.99996948242188 * scale, 277.18402099609375 * scale);\r\n        fill_path(ctx, undefined, color[4], 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(105.99996948242188 * scale, 192.18402099609375 * scale);\r\n        ctx.bezierCurveTo(99.49996948242188 * scale, 197.68402099609375 * scale, 99.49996948242188 * scale, 197.68402099609375 * scale, 92.99996948242188 * scale, 203.18402099609375 * scale);\r\n        ctx.bezierCurveTo(95.99996948242188 * scale, 213.18402099609375 * scale, 95.99996948242188 * scale, 215.18402099609375 * scale, 89.99996948242188 * scale, 219.18402099609375 * scale);\r\n        ctx.bezierCurveTo(91.99996948242188 * scale, 223.18402099609375 * scale, 91.99996948242188 * scale, 226.18402099609375 * scale, 87.99996948242188 * scale, 230.18402099609375 * scale);\r\n        ctx.bezierCurveTo(89.99996948242188 * scale, 234.18402099609375 * scale, 91.99996948242188 * scale, 237.18402099609375 * scale, 90.99996948242188 * scale, 244.18402099609375 * scale);\r\n        ctx.bezierCurveTo(96.99996948242188 * scale, 252.18402099609375 * scale, 96.99996948242188 * scale, 256.18402099609375 * scale, 95.99996948242188 * scale, 262.18402099609375 * scale);\r\n        ctx.bezierCurveTo(106.49996948242188 * scale, 264.18402099609375 * scale, 106.49996948242188 * scale, 264.18402099609375 * scale, 116.99996948242188 * scale, 266.18402099609375 * scale);\r\n        fill_path(ctx, undefined, color[4], 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(104.99996948242188 * scale, 183.29513549804688 * scale);\r\n        ctx.bezierCurveTo(99.99996948242188 * scale, 193.29513549804688 * scale, 93.99996948242188 * scale, 195.29513549804688 * scale, 89.99996948242188 * scale, 201.29513549804688 * scale);\r\n        ctx.bezierCurveTo(86.99996948242188 * scale, 212.29513549804688 * scale, 85.99996948242188 * scale, 214.29513549804688 * scale, 81.99996948242188 * scale, 215.29513549804688 * scale);\r\n        ctx.bezierCurveTo(83.99996948242188 * scale, 223.29513549804688 * scale, 83.99996948242188 * scale, 227.29513549804688 * scale, 79.99996948242188 * scale, 230.29513549804688 * scale);\r\n        ctx.bezierCurveTo(83.99996948242188 * scale, 235.29513549804688 * scale, 84.99996948242188 * scale, 240.29513549804688 * scale, 79.99996948242188 * scale, 246.29513549804688 * scale);\r\n        ctx.bezierCurveTo(86.99996948242188 * scale, 251.29513549804688 * scale, 91.99996948242188 * scale, 256.2951354980469 * scale, 89.99996948242188 * scale, 266.2951354980469 * scale);\r\n        ctx.bezierCurveTo(102.99996948242188 * scale, 269.2951354980469 * scale, 102.99996948242188 * scale, 269.2951354980469 * scale, 115.99996948242188 * scale, 272.2951354980469 * scale);\r\n        fill_path(ctx, undefined, color[4], 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(107.99996948242188 * scale, 177.85067749023438 * scale);\r\n        ctx.bezierCurveTo(95.99996948242188 * scale, 187.35067749023438 * scale, 95.99996948242188 * scale, 187.35067749023438 * scale, 83.99996948242188 * scale, 196.85067749023438 * scale);\r\n        ctx.bezierCurveTo(82.99996948242188 * scale, 203.85067749023438 * scale, 80.99996948242188 * scale, 209.85067749023438 * scale, 72.99996948242188 * scale, 210.85067749023438 * scale);\r\n        ctx.bezierCurveTo(73.99996948242188 * scale, 220.85067749023438 * scale, 73.99996948242188 * scale, 221.85067749023438 * scale, 66.99996948242188 * scale, 227.85067749023438 * scale);\r\n        ctx.bezierCurveTo(71.99996948242188 * scale, 235.85067749023438 * scale, 73.99996948242188 * scale, 239.85067749023438 * scale, 71.99996948242188 * scale, 247.85067749023438 * scale);\r\n        ctx.bezierCurveTo(80.99996948242188 * scale, 257.8506774902344 * scale, 81.99996948242188 * scale, 263.8506774902344 * scale, 77.99996948242188 * scale, 271.8506774902344 * scale);\r\n        ctx.bezierCurveTo(95.49996948242188 * scale, 272.8506774902344 * scale, 95.49996948242188 * scale, 272.8506774902344 * scale, 112.99996948242188 * scale, 273.8506774902344 * scale);\r\n        fill_path(ctx, undefined, color[4], 3 * scale);\r\n        ctx.restore();\r\n    } else if (i == 2) {\r\n        ctx.save();\r\n        ctx.translate(130 * scale, 35 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(170.99996948242188 * scale, 133.85067749023438 * scale);\r\n        ctx.bezierCurveTo(195.99996948242188 * scale, 129.85067749023438 * scale, 196.99996948242188 * scale, 111.85067749023438 * scale, 200.99996948242188 * scale, 88.85067749023438 * scale);\r\n        fill_path(ctx, undefined, color[4], 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(169.99996948242188 * scale, 143.85067749023438 * scale);\r\n        ctx.bezierCurveTo(189.99996948242188 * scale, 145.85067749023438 * scale, 207.99996948242188 * scale, 126.85067749023438 * scale, 222.99996948242188 * scale, 100.85067749023438 * scale);\r\n        fill_path(ctx, undefined, color[4], 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(170.99996948242188 * scale, 157.85067749023438 * scale);\r\n        ctx.bezierCurveTo(193.99996948242188 * scale, 160.85067749023438 * scale, 210.99996948242188 * scale, 151.85067749023438 * scale, 232.99996948242188 * scale, 139.85067749023438 * scale);\r\n        fill_path(ctx, undefined, color[4], 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(169.99996948242188 * scale, 168.85067749023438 * scale);\r\n        ctx.bezierCurveTo(192.99996948242188 * scale, 175.85067749023438 * scale, 203.99996948242188 * scale, 177.85067749023438 * scale, 245.99996948242188 * scale, 168.85067749023438 * scale);\r\n        fill_path(ctx, undefined, color[4], 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(167.99996948242188 * scale, 168.85067749023438 * scale);\r\n        ctx.bezierCurveTo(183.99996948242188 * scale, 189.85067749023438 * scale, 191.99996948242188 * scale, 193.85067749023438 * scale, 220.99996948242188 * scale, 196.85067749023438 * scale);\r\n        fill_path(ctx, undefined, color[4], 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(176.99996948242188 * scale, 117.85067749023438 * scale);\r\n        ctx.bezierCurveTo(181.99996948242188 * scale, 120.85067749023438 * scale, 181.99996948242188 * scale, 120.85067749023438 * scale, 186.99996948242188 * scale, 123.85067749023438 * scale);\r\n        ctx.bezierCurveTo(183.99996948242188 * scale, 137.85067749023438 * scale, 185.99996948242188 * scale, 136.85067749023438 * scale, 190.99996948242188 * scale, 136.85067749023438 * scale);\r\n        ctx.bezierCurveTo(186.99996948242188 * scale, 147.85067749023438 * scale, 189.99996948242188 * scale, 152.85067749023438 * scale, 193.99996948242188 * scale, 155.85067749023438 * scale);\r\n        ctx.bezierCurveTo(187.99996948242188 * scale, 165.85067749023438 * scale, 190.99996948242188 * scale, 169.85067749023438 * scale, 190.99996948242188 * scale, 172.85067749023438 * scale);\r\n        ctx.bezierCurveTo(186.99996948242188 * scale, 183.85067749023438 * scale, 186.99996948242188 * scale, 185.85067749023438 * scale, 189.99996948242188 * scale, 188.85067749023438 * scale);\r\n        ctx.bezierCurveTo(182.49996948242188 * scale, 195.35067749023438 * scale, 182.49996948242188 * scale, 195.35067749023438 * scale, 174.99996948242188 * scale, 201.85067749023438 * scale);\r\n        fill_path(ctx, undefined, color[4], 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(176.99996948242188 * scale, 112.18402099609375 * scale);\r\n        ctx.bezierCurveTo(183.99996948242188 * scale, 119.18402099609375 * scale, 186.99996948242188 * scale, 117.18402099609375 * scale, 192.99996948242188 * scale, 116.18402099609375 * scale);\r\n        ctx.bezierCurveTo(191.99996948242188 * scale, 126.18402099609375 * scale, 193.99996948242188 * scale, 130.18402099609375 * scale, 199.99996948242188 * scale, 130.18402099609375 * scale);\r\n        ctx.bezierCurveTo(194.99996948242188 * scale, 145.18402099609375 * scale, 197.99996948242188 * scale, 147.18402099609375 * scale, 201.99996948242188 * scale, 153.18402099609375 * scale);\r\n        ctx.bezierCurveTo(196.99996948242188 * scale, 164.18402099609375 * scale, 197.99996948242188 * scale, 169.18402099609375 * scale, 201.99996948242188 * scale, 174.18402099609375 * scale);\r\n        ctx.bezierCurveTo(194.99996948242188 * scale, 184.18402099609375 * scale, 196.99996948242188 * scale, 187.18402099609375 * scale, 200.99996948242188 * scale, 193.18402099609375 * scale);\r\n        ctx.bezierCurveTo(185.99996948242188 * scale, 195.18402099609375 * scale, 181.99996948242188 * scale, 201.18402099609375 * scale, 174.99996948242188 * scale, 210.18402099609375 * scale);\r\n        fill_path(ctx, undefined, color[4], 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(176.99996948242188 * scale, 101.29513549804688 * scale);\r\n        ctx.bezierCurveTo(181.99996948242188 * scale, 108.29513549804688 * scale, 189.99996948242188 * scale, 110.29513549804688 * scale, 195.99996948242188 * scale, 107.29513549804688 * scale);\r\n        ctx.bezierCurveTo(197.99996948242188 * scale, 121.29513549804688 * scale, 200.99996948242188 * scale, 122.29513549804688 * scale, 206.99996948242188 * scale, 122.29513549804688 * scale);\r\n        ctx.bezierCurveTo(201.99996948242188 * scale, 138.29513549804688 * scale, 204.99996948242188 * scale, 142.29513549804688 * scale, 211.99996948242188 * scale, 148.29513549804688 * scale);\r\n        ctx.bezierCurveTo(201.99996948242188 * scale, 156.29513549804688 * scale, 205.99996948242188 * scale, 167.29513549804688 * scale, 213.99996948242188 * scale, 173.29513549804688 * scale);\r\n        ctx.bezierCurveTo(204.99996948242188 * scale, 181.29513549804688 * scale, 204.99996948242188 * scale, 187.29513549804688 * scale, 205.99996948242188 * scale, 193.29513549804688 * scale);\r\n        ctx.bezierCurveTo(190.99996948242188 * scale, 198.29513549804688 * scale, 181.99996948242188 * scale, 205.29513549804688 * scale, 174.99996948242188 * scale, 214.29513549804688 * scale);\r\n        fill_path(ctx, undefined, color[4], 3 * scale);\r\n        ctx.restore();\r\n    }\r\n    ctx.translate(can.width / 2, can.height / 2);\r\n    if (!i) {\r\n        ctx.globalAlpha = 0.5;\r\n        round_rect(ctx, -wt2, -ht2, wt, ht + shadow, round);\r\n        fill_path(ctx, color[0]);\r\n        if (rotate) ctx.rotate(Math.PI);\r\n        ctx.globalAlpha = 1;\r\n        round_rect(ctx, -wt2, -ht2, wt, ht, round);\r\n        fill_path(ctx, color[1], color[2], width);\r\n        ctx.globalAlpha = 1;\r\n        round_rect(ctx, -wt2 + 35 * scale, -ht2 + 20 * scale, wt - 50 * scale, ht - 50 * scale, round - 10 * scale);\r\n        fill_path(ctx, color[3]);\r\n    }\r\n    if (i == 3) {\r\n        ctx.translate(-can.width / 2, -can.height / 2);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(121 * scale, 190 * scale);\r\n        ctx.bezierCurveTo(129 * scale, 186 * scale, 137 * scale, 183 * scale, 135 * scale, 163 * scale);\r\n        ctx.bezierCurveTo(131 * scale, 135 * scale, 153 * scale, 127 * scale, 177 * scale, 124 * scale);\r\n        ctx.bezierCurveTo(198 * scale, 120 * scale, 208 * scale, 122 * scale, 226 * scale, 128 * scale);\r\n        ctx.bezierCurveTo(261 * scale, 112 * scale, 271 * scale, 126 * scale, 287 * scale, 147 * scale);\r\n        ctx.bezierCurveTo(310 * scale, 163 * scale, 304 * scale, 183 * scale, 283 * scale, 196 * scale);\r\n        ctx.bezierCurveTo(296 * scale, 249 * scale, 278 * scale, 262 * scale, 253 * scale, 263 * scale);\r\n        ctx.bezierCurveTo(210 * scale, 264 * scale, 188 * scale, 252 * scale, 177 * scale, 234 * scale);\r\n        ctx.bezierCurveTo(133 * scale, 242 * scale, 123 * scale, 241 * scale, 115 * scale, 225 * scale);\r\n        ctx.bezierCurveTo(109 * scale, 206 * scale, 115 * scale, 193 * scale, 121 * scale, 190 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[4]);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(219 * scale, 144 * scale);\r\n        ctx.bezierCurveTo(251 * scale, 121 * scale, 277 * scale, 136 * scale, 276 * scale, 159 * scale);\r\n        ctx.bezierCurveTo(276 * scale, 176 * scale, 273 * scale, 191 * scale, 242 * scale, 193 * scale);\r\n        ctx.bezierCurveTo(226 * scale, 228 * scale, 155 * scale, 219 * scale, 150 * scale, 183 * scale);\r\n        ctx.bezierCurveTo(142 * scale, 144 * scale, 174 * scale, 127 * scale, 219 * scale, 144 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[5]);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(123 * scale, 214 * scale);\r\n        ctx.bezierCurveTo(119 * scale, 198 * scale, 129 * scale, 189 * scale, 146 * scale, 194 * scale);\r\n        ctx.bezierCurveTo(158 * scale, 201 * scale, 165 * scale, 218 * scale, 147 * scale, 226 * scale);\r\n        ctx.bezierCurveTo(135 * scale, 230 * scale, 125 * scale, 222 * scale, 123 * scale, 214 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[5]);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(257 * scale, 199 * scale);\r\n        ctx.bezierCurveTo(264 * scale, 199 * scale, 275 * scale, 213 * scale, 261 * scale, 220 * scale);\r\n        ctx.bezierCurveTo(246 * scale, 225 * scale, 235 * scale, 200 * scale, 257 * scale, 199 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[5]);\r\n        ctx.translate(-5 * scale, 55 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(186 * scale, 123 * scale);\r\n        ctx.bezierCurveTo(198 * scale, 115 * scale, 219 * scale, 110 * scale, 219 * scale, 123 * scale);\r\n        ctx.bezierCurveTo(216 * scale, 135 * scale, 171 * scale, 143 * scale, 186 * scale, 123 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[5]);\r\n        ctx.translate(5 * scale, -55 * scale);\r\n        ctx.translate(-5 * scale, 15 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(171 * scale, 241 * scale);\r\n        ctx.bezierCurveTo(189 * scale, 234 * scale, 200 * scale, 248 * scale, 189 * scale, 254 * scale);\r\n        ctx.bezierCurveTo(179 * scale, 260 * scale, 158 * scale, 246 * scale, 171 * scale, 241 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[5]);\r\n    } else if (i == 4) {\r\n        ctx.translate(-can.width / 2, -can.height / 2);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(30 * scale, 167 * scale);\r\n        ctx.bezierCurveTo(47 * scale, 144 * scale, 64 * scale, 140 * scale, 80 * scale, 147 * scale);\r\n        ctx.bezierCurveTo(95 * scale, 154 * scale, 95 * scale, 159 * scale, 100 * scale, 179 * scale);\r\n        ctx.bezierCurveTo(105 * scale, 202 * scale, 95 * scale, 218 * scale, 69 * scale, 218 * scale);\r\n        ctx.bezierCurveTo(48 * scale, 236 * scale, 26 * scale, 223 * scale, 28 * scale, 213 * scale);\r\n        ctx.bezierCurveTo(28 * scale, 205 * scale, 29 * scale, 199 * scale, 32 * scale, 195 * scale);\r\n        ctx.bezierCurveTo(21 * scale, 183 * scale, 27 * scale, 173 * scale, 30 * scale, 167 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[4]);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(26 * scale, 145 * scale);\r\n        ctx.bezierCurveTo(32 * scale, 138 * scale, 37 * scale, 137 * scale, 40 * scale, 139 * scale);\r\n        ctx.bezierCurveTo(43 * scale, 140 * scale, 41 * scale, 150 * scale, 31 * scale, 159 * scale);\r\n        ctx.bezierCurveTo(23 * scale, 166 * scale, 17 * scale, 158 * scale, 26 * scale, 145 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[4]);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(13 * scale, 193 * scale);\r\n        ctx.bezierCurveTo(21 * scale, 187 * scale, 30 * scale, 190 * scale, 20 * scale, 202 * scale);\r\n        ctx.bezierCurveTo(13 * scale, 208 * scale, 7 * scale, 202 * scale, 13 * scale, 193 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[4]);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(121 * scale, 190 * scale);\r\n        ctx.bezierCurveTo(129 * scale, 186 * scale, 137 * scale, 183 * scale, 135 * scale, 163 * scale);\r\n        ctx.bezierCurveTo(131 * scale, 135 * scale, 153 * scale, 127 * scale, 177 * scale, 124 * scale);\r\n        ctx.bezierCurveTo(198 * scale, 120 * scale, 208 * scale, 122 * scale, 226 * scale, 128 * scale);\r\n        ctx.bezierCurveTo(261 * scale, 112 * scale, 271 * scale, 126 * scale, 287 * scale, 147 * scale);\r\n        ctx.bezierCurveTo(310 * scale, 163 * scale, 304 * scale, 183 * scale, 283 * scale, 196 * scale);\r\n        ctx.bezierCurveTo(296 * scale, 249 * scale, 278 * scale, 262 * scale, 253 * scale, 263 * scale);\r\n        ctx.bezierCurveTo(210 * scale, 264 * scale, 188 * scale, 252 * scale, 177 * scale, 234 * scale);\r\n        ctx.bezierCurveTo(133 * scale, 242 * scale, 123 * scale, 241 * scale, 115 * scale, 225 * scale);\r\n        ctx.bezierCurveTo(109 * scale, 206 * scale, 115 * scale, 193 * scale, 121 * scale, 190 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[4]);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(335 * scale, 196 * scale);\r\n        ctx.bezierCurveTo(312 * scale, 208 * scale, 300 * scale, 185 * scale, 309 * scale, 167 * scale);\r\n        ctx.bezierCurveTo(314 * scale, 141 * scale, 339 * scale, 127 * scale, 359 * scale, 144 * scale);\r\n        ctx.bezierCurveTo(363 * scale, 148 * scale, 364 * scale, 150 * scale, 364 * scale, 150 * scale);\r\n        ctx.bezierCurveTo(392 * scale, 143 * scale, 396 * scale, 183 * scale, 378 * scale, 204 * scale);\r\n        ctx.bezierCurveTo(367 * scale, 215 * scale, 339 * scale, 208 * scale, 335 * scale, 196 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[4]);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(349 * scale, 212 * scale);\r\n        ctx.bezierCurveTo(339 * scale, 216 * scale, 334 * scale, 208 * scale, 341 * scale, 203 * scale);\r\n        ctx.bezierCurveTo(353 * scale, 198 * scale, 361 * scale, 205 * scale, 349 * scale, 212 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[4]);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(46 * scale, 165 * scale);\r\n        ctx.bezierCurveTo(55 * scale, 148 * scale, 85 * scale, 157 * scale, 83 * scale, 175 * scale);\r\n        ctx.bezierCurveTo(99 * scale, 185 * scale, 89 * scale, 212 * scale, 66 * scale, 204 * scale);\r\n        ctx.bezierCurveTo(55 * scale, 212 * scale, 43 * scale, 212 * scale, 41 * scale, 202 * scale);\r\n        ctx.bezierCurveTo(39 * scale, 194 * scale, 42 * scale, 187 * scale, 49 * scale, 185 * scale);\r\n        ctx.bezierCurveTo(44 * scale, 175 * scale, 45 * scale, 172 * scale, 46 * scale, 165 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[4]);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(219 * scale, 144 * scale);\r\n        ctx.bezierCurveTo(251 * scale, 121 * scale, 277 * scale, 136 * scale, 276 * scale, 159 * scale);\r\n        ctx.bezierCurveTo(276 * scale, 176 * scale, 273 * scale, 191 * scale, 242 * scale, 193 * scale);\r\n        ctx.bezierCurveTo(226 * scale, 228 * scale, 155 * scale, 219 * scale, 150 * scale, 183 * scale);\r\n        ctx.bezierCurveTo(142 * scale, 144 * scale, 174 * scale, 127 * scale, 219 * scale, 144 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[5]);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(123 * scale, 214 * scale);\r\n        ctx.bezierCurveTo(119 * scale, 198 * scale, 129 * scale, 189 * scale, 146 * scale, 194 * scale);\r\n        ctx.bezierCurveTo(158 * scale, 201 * scale, 165 * scale, 218 * scale, 147 * scale, 226 * scale);\r\n        ctx.bezierCurveTo(135 * scale, 230 * scale, 125 * scale, 222 * scale, 123 * scale, 214 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[5]);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(257 * scale, 199 * scale);\r\n        ctx.bezierCurveTo(264 * scale, 199 * scale, 275 * scale, 213 * scale, 261 * scale, 220 * scale);\r\n        ctx.bezierCurveTo(246 * scale, 225 * scale, 235 * scale, 200 * scale, 257 * scale, 199 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[5]);\r\n        ctx.translate(-5 * scale, 55 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(186 * scale, 123 * scale);\r\n        ctx.bezierCurveTo(198 * scale, 115 * scale, 219 * scale, 110 * scale, 219 * scale, 123 * scale);\r\n        ctx.bezierCurveTo(216 * scale, 135 * scale, 171 * scale, 143 * scale, 186 * scale, 123 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[5]);\r\n        ctx.translate(5 * scale, -55 * scale);\r\n        ctx.translate(-5 * scale, 15 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(171 * scale, 241 * scale);\r\n        ctx.bezierCurveTo(189 * scale, 234 * scale, 200 * scale, 248 * scale, 189 * scale, 254 * scale);\r\n        ctx.bezierCurveTo(179 * scale, 260 * scale, 158 * scale, 246 * scale, 171 * scale, 241 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[5]);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(367 * scale, 164 * scale);\r\n        ctx.bezierCurveTo(380 * scale, 160 * scale, 391 * scale, 185 * scale, 371 * scale, 189 * scale);\r\n        ctx.bezierCurveTo(362 * scale, 192 * scale, 354 * scale, 191 * scale, 350 * scale, 185 * scale);\r\n        ctx.bezierCurveTo(326 * scale, 205 * scale, 314 * scale, 182 * scale, 316 * scale, 171 * scale);\r\n        ctx.bezierCurveTo(317 * scale, 150 * scale, 332 * scale, 143 * scale, 347 * scale, 147 * scale);\r\n        ctx.bezierCurveTo(361 * scale, 151 * scale, 366 * scale, 158 * scale, 367 * scale, 164 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[4]);\r\n    }\r\n    return can;\r\n}\r\n;\r\nfunction create_music_button(scale, color, i, on) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 121 * scale;\r\n    can.height = 130 * scale;\r\n    ctx.translate(0, 20 * scale);\r\n    if (i == 1) {\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(6 * scale, 23 * scale);\r\n        ctx.bezierCurveTo(6 * scale, 46 * scale, 6 * scale, 46 * scale, 6 * scale, 69 * scale);\r\n        ctx.bezierCurveTo(21 * scale, 69 * scale, 21 * scale, 69 * scale, 36 * scale, 69 * scale);\r\n        ctx.bezierCurveTo(45.5 * scale, 78.5 * scale, 45.5 * scale, 78.5 * scale, 55 * scale, 88 * scale);\r\n        ctx.bezierCurveTo(55.5 * scale, 45.5 * scale, 55.5 * scale, 45.5 * scale, 56 * scale, 3 * scale);\r\n        ctx.bezierCurveTo(47 * scale, 14 * scale, 47 * scale, 14 * scale, 38 * scale, 25 * scale);\r\n        ctx.bezierCurveTo(23 * scale, 25 * scale, 23 * scale, 25 * scale, 6 * scale, 23 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, undefined, color[3], 13 * scale);\r\n    }\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(6 * scale, 23 * scale);\r\n    ctx.bezierCurveTo(6 * scale, 46 * scale, 6 * scale, 46 * scale, 6 * scale, 69 * scale);\r\n    ctx.bezierCurveTo(21 * scale, 69 * scale, 21 * scale, 69 * scale, 36 * scale, 69 * scale);\r\n    ctx.bezierCurveTo(45.5 * scale, 78.5 * scale, 45.5 * scale, 78.5 * scale, 55 * scale, 88 * scale);\r\n    ctx.bezierCurveTo(55.5 * scale, 45.5 * scale, 55.5 * scale, 45.5 * scale, 56 * scale, 3 * scale);\r\n    ctx.bezierCurveTo(47 * scale, 14 * scale, 47 * scale, 14 * scale, 38 * scale, 25 * scale);\r\n    ctx.bezierCurveTo(23 * scale, 25 * scale, 23 * scale, 25 * scale, 6 * scale, 23 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 4 * scale);\r\n    if (on == 1) {\r\n        ctx.translate(0, 5 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(67 * scale, 30 * scale);\r\n        ctx.bezierCurveTo(73 * scale, 47 * scale, 69 * scale, 45 * scale, 67 * scale, 58 * scale);\r\n        fill_path(ctx, undefined, color[0], 10 * scale);\r\n        ctx.translate(3, 0 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(70 * scale, 17 * scale);\r\n        ctx.bezierCurveTo(83 * scale, 45 * scale, 76 * scale, 55 * scale, 70 * scale, 69 * scale);\r\n        fill_path(ctx, undefined, color[0], 10 * scale);\r\n        ctx.translate(3, 0 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(76 * scale, 8 * scale);\r\n        ctx.bezierCurveTo(88 * scale, 31 * scale, 89 * scale, 55 * scale, 76 * scale, 79 * scale);\r\n        fill_path(ctx, undefined, color[0], 10 * scale);\r\n        if (i == 1) {\r\n            ctx.translate(-6 * scale, -5 * scale);\r\n            ctx.beginPath();\r\n            ctx.lineCap = \"round\";\r\n            ctx.lineJoin = \"round\";\r\n            ctx.moveTo(67 * scale, 30 * scale);\r\n            ctx.bezierCurveTo(73 * scale, 47 * scale, 69 * scale, 45 * scale, 67 * scale, 58 * scale);\r\n            fill_path(ctx, undefined, color[3], 18 * scale);\r\n            ctx.translate(3, 0 * scale);\r\n            ctx.beginPath();\r\n            ctx.lineCap = \"round\";\r\n            ctx.lineJoin = \"round\";\r\n            ctx.moveTo(70 * scale, 17 * scale);\r\n            ctx.bezierCurveTo(83 * scale, 45 * scale, 76 * scale, 55 * scale, 70 * scale, 69 * scale);\r\n            fill_path(ctx, undefined, color[3], 18 * scale);\r\n            ctx.translate(3, 0 * scale);\r\n            ctx.beginPath();\r\n            ctx.lineCap = \"round\";\r\n            ctx.lineJoin = \"round\";\r\n            ctx.moveTo(76 * scale, 8 * scale);\r\n            ctx.bezierCurveTo(88 * scale, 31 * scale, 89 * scale, 55 * scale, 76 * scale, 79 * scale);\r\n            fill_path(ctx, undefined, color[3], 18 * scale);\r\n            ctx.translate(-6, 0 * scale);\r\n        } else {\r\n            ctx.translate(-6 * scale, -5 * scale);\r\n        }\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(67 * scale, 30 * scale);\r\n        ctx.bezierCurveTo(73 * scale, 47 * scale, 69 * scale, 45 * scale, 67 * scale, 58 * scale);\r\n        fill_path(ctx, undefined, color[2], 10 * scale);\r\n        ctx.translate(3, 0 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(70 * scale, 17 * scale);\r\n        ctx.bezierCurveTo(83 * scale, 45 * scale, 76 * scale, 55 * scale, 70 * scale, 69 * scale);\r\n        fill_path(ctx, undefined, color[2], 10 * scale);\r\n        ctx.translate(3, 0 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(76 * scale, 8 * scale);\r\n        ctx.bezierCurveTo(88 * scale, 31 * scale, 89 * scale, 55 * scale, 76 * scale, 79 * scale);\r\n        fill_path(ctx, undefined, color[2], 10 * scale);\r\n    } else {\r\n        if (i == 1) {\r\n            ctx.beginPath();\r\n            ctx.lineCap = \"round\";\r\n            ctx.lineJoin = \"round\";\r\n            ctx.moveTo(108 * scale, 27 * scale);\r\n            ctx.bezierCurveTo(94 * scale, 45.5 * scale, 94 * scale, 45.5 * scale, 80 * scale, 64 * scale);\r\n            ctx.closePath();\r\n            fill_path(ctx, undefined, color[3], 18 * scale);\r\n            ctx.beginPath();\r\n            ctx.lineCap = \"round\";\r\n            ctx.lineJoin = \"round\";\r\n            ctx.moveTo(79 * scale, 30 * scale);\r\n            ctx.bezierCurveTo(93 * scale, 47 * scale, 93 * scale, 47 * scale, 107 * scale, 64 * scale);\r\n            ctx.closePath();\r\n            fill_path(ctx, undefined, color[3], 18 * scale);\r\n        } else {\r\n            ctx.translate(0, -5 * scale);\r\n            ctx.beginPath();\r\n            ctx.lineCap = \"round\";\r\n            ctx.lineJoin = \"round\";\r\n            ctx.moveTo(108 * scale, 27 * scale);\r\n            ctx.bezierCurveTo(94 * scale, 45.5 * scale, 94 * scale, 45.5 * scale, 80 * scale, 64 * scale);\r\n            ctx.closePath();\r\n            fill_path(ctx, undefined, color[0], 7 * scale);\r\n            ctx.beginPath();\r\n            ctx.lineCap = \"round\";\r\n            ctx.lineJoin = \"round\";\r\n            ctx.moveTo(79 * scale, 30 * scale);\r\n            ctx.bezierCurveTo(93 * scale, 47 * scale, 93 * scale, 47 * scale, 107 * scale, 64 * scale);\r\n            ctx.closePath();\r\n            fill_path(ctx, undefined, color[0], 7 * scale);\r\n            ctx.translate(0, 5 * scale);\r\n        }\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(108 * scale, 27 * scale);\r\n        ctx.bezierCurveTo(94 * scale, 45.5 * scale, 94 * scale, 45.5 * scale, 80 * scale, 64 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, undefined, color[2], 7 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(79 * scale, 30 * scale);\r\n        ctx.bezierCurveTo(93 * scale, 47 * scale, 93 * scale, 47 * scale, 107 * scale, 64 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, undefined, color[2], 7 * scale);\r\n    }\r\n    return can;\r\n}\r\n;\r\nfunction create_tree_snow(scale, color, rotate) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    ctx.rotate(Math.PI / 2);\r\n}\r\n;\r\nfunction create_tree_branch(scale, color, rotate) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    var w = scale * 450;\r\n    var h = scale * 145;\r\n    var w2 = w / 2;\r\n    var h2 = h / 2;\r\n    var round = scale * 10;\r\n    var shadow = scale * 20;\r\n    var wt = scale * 300;\r\n    var ht = scale * 30;\r\n    var r = scale * 80;\r\n    var wt2 = wt / 2;\r\n    var ht2 = ht / 2;\r\n    var width = 4;\r\n    if (rotate) {\r\n        var w = scale * 145;\r\n        var h = scale * 450;\r\n        can.width = w;\r\n        can.height = h;\r\n        ctx.rotate(Math.PI / 2);\r\n        ctx.save();\r\n        ctx.globalAlpha = 0.5;\r\n        round_rect(ctx, 100 * scale, -110 * scale, wt, ht, round);\r\n        fill_path(ctx, color[0]);\r\n        ctx.translate(178 * scale, -98 * scale);\r\n        round_rect(ctx, -wt2, -ht2 - 6 * scale, 100 * scale, 100 * scale, round);\r\n        fill_path(ctx, color[0]);\r\n        ctx.translate(-50 * scale, 5 * scale);\r\n        round_rect(ctx, 220 * scale, -15 * scale, 90 * scale, 90 * scale, round);\r\n        fill_path(ctx, color[0]);\r\n        ctx.restore();\r\n        ctx.save();\r\n        ctx.globalAlpha = 1;\r\n        ctx.translate(250 * scale, -63 * scale);\r\n        round_rect(ctx, -wt2 - 20 * scale, -ht2, wt, ht, round);\r\n        fill_path(ctx, color[1], color[2], width);\r\n        ctx.translate(-70 * scale, -40 * scale);\r\n        round_rect(ctx, -wt2 - 20 * scale, -ht2, 100 * scale, 100 * scale, round);\r\n        fill_path(ctx, color[3], color[4], width);\r\n        ctx.translate(-70 * scale, 15 * scale);\r\n        round_rect(ctx, 220 * scale, -22 * scale, 90 * scale, 90 * scale, round);\r\n        fill_path(ctx, color[3], color[4], width);\r\n        round_rect(ctx, 230 * scale, -12 * scale, 55 * scale, 55 * scale, round);\r\n        fill_path(ctx, color[5]);\r\n        ctx.translate(-70 * scale, 0);\r\n        round_rect(ctx, -15 * scale, -2 * scale, 60 * scale, 60 * scale, round);\r\n        fill_path(ctx, color[5]);\r\n        ctx.restore();\r\n    } else {\r\n        can.width = w;\r\n        can.height = h;\r\n        ctx.save();\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(w2, h2 + 10 * scale);\r\n        round_rect(ctx, -wt2, -ht2, wt, ht, round);\r\n        fill_path(ctx, color[0]);\r\n        ctx.translate(-65 * scale, -25 * scale);\r\n        round_rect(ctx, -wt2, -ht2 - 6 * scale, 100 * scale, 100 * scale, 15 * scale);\r\n        fill_path(ctx, color[0]);\r\n        ctx.translate(-35 * scale, -5 * scale);\r\n        round_rect(ctx, 220 * scale, -15 * scale, 90 * scale, 90 * scale, 15 * scale);\r\n        fill_path(ctx, color[0]);\r\n        ctx.restore();\r\n        ctx.save();\r\n        ctx.globalAlpha = 1;\r\n        ctx.translate(240 * scale, 70 * scale);\r\n        round_rect(ctx, -wt2, -ht2, wt, ht, round);\r\n        fill_path(ctx, color[1], color[2], width);\r\n        ctx.translate(-60 * scale, -40 * scale);\r\n        round_rect(ctx, -wt2 - 20 * scale, -ht2, 100 * scale, 100 * scale, 15 * scale);\r\n        fill_path(ctx, color[3], color[4], width);\r\n        ctx.translate(-55 * scale, 10 * scale);\r\n        round_rect(ctx, 220 * scale, -22 * scale, 90 * scale, 90 * scale, 15 * scale);\r\n        fill_path(ctx, color[3], color[4], width);\r\n        round_rect(ctx, 240 * scale, -12 * scale, 55 * scale, 55 * scale, 12 * scale);\r\n        fill_path(ctx, color[5]);\r\n        ctx.translate(45 * scale, 0 * scale);\r\n        round_rect(ctx, -145 * scale, -2 * scale, 60 * scale, 60 * scale, 12 * scale);\r\n        fill_path(ctx, color[5]);\r\n        ctx.restore();\r\n    }\r\n    return can;\r\n}\r\n;\r\nfunction create_apricot_forest(branch, tree) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    var w = Math.max(tree.width, branch.width);\r\n    var h = Math.max(tree.height, branch.height);\r\n    can.width = w;\r\n    can.height = h;\r\n    ctx.drawImage(branch, (w - branch.width) / 2, (h - branch.height) / 2);\r\n    ctx.drawImage(tree, (w - tree.width) / 2, (h - tree.height) / 2);\r\n    return can;\r\n}\r\n;\r\nfunction create_pickaxe(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    var w = scale * 105;\r\n    var h = scale * 125;\r\n    var width = scale * 4;\r\n    var w2 = w / 2;\r\n    var h2 = h / 2;\r\n    var round = scale * 10;\r\n    var shadow = scale * 5;\r\n    var wa = scale * 10;\r\n    var ha = scale * 110;\r\n    var wa2 = wa / 2;\r\n    var ha2 = ha / 2;\r\n    can.width = w;\r\n    can.height = h;\r\n    ctx.save();\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(w / 2 + 8 * scale, h / 2 + shadow);\r\n    round_rect(ctx, -wa2, -ha2, wa, ha, round);\r\n    if (draw_shadow) {\r\n        fill_path(ctx, color[0]);\r\n    } else {\r\n        fill_path(ctx, color[1]);\r\n    }\r\n    ;\r\n    ctx.translate(-130 * scale + shadow, -128 * scale + shadow);\r\n    ctx.beginPath();\r\n    ctx.bezierCurveTo(159 * scale, 93 * scale, 156 * scale, 99 * scale, 154 * scale, 102 * scale);\r\n    ctx.bezierCurveTo(128 * scale, 92 * scale, 90 * scale, 93 * scale, 72 * scale, 96 * scale);\r\n    ctx.bezierCurveTo(68 * scale, 84 * scale, 143 * scale, 73 * scale, 162 * scale, 86 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2]);\r\n    ctx.restore();\r\n    ctx.translate(w / 2 + 8, h / 2);\r\n    ctx.globalAlpha = 1;\r\n    round_rect(ctx, -wa2, -ha2, wa, ha, round);\r\n    fill_path(ctx, color[3], color[4], width);\r\n    ctx.translate(-130 * scale, -125 * scale);\r\n    ctx.beginPath();\r\n    ctx.bezierCurveTo(159 * scale, 93 * scale, 156 * scale, 99 * scale, 154 * scale, 102 * scale);\r\n    ctx.bezierCurveTo(128 * scale, 92 * scale, 90 * scale, 93 * scale, 72 * scale, 96 * scale);\r\n    ctx.bezierCurveTo(68 * scale, 84 * scale, 143 * scale, 73 * scale, 162 * scale, 86 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[5], color[6], width);\r\n    return can;\r\n}\r\n;\r\nfunction create_sword_wood(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 170 * scale;\r\n    can.height = 469 * scale;\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(20 * scale, 20 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(88 * scale, 30 * scale);\r\n    ctx.bezierCurveTo(96 * scale, 49.5 * scale, 96 * scale, 49.5 * scale, 104 * scale, 69 * scale);\r\n    ctx.bezierCurveTo(105.5 * scale, 41.5 * scale, 105.5 * scale, 41.5 * scale, 107 * scale, 14 * scale);\r\n    ctx.bezierCurveTo(114 * scale, 9.5 * scale, 114 * scale, 9.5 * scale, 121 * scale, 5 * scale);\r\n    ctx.bezierCurveTo(135.5 * scale, 27.5 * scale, 135.5 * scale, 27.5 * scale, 150 * scale, 50 * scale);\r\n    ctx.bezierCurveTo(110.5 * scale, 286 * scale, 110.5 * scale, 286 * scale, 103 * scale, 331 * scale);\r\n    ctx.bezierCurveTo(69.5 * scale, 325 * scale, 69.5 * scale, 325 * scale, 36 * scale, 319 * scale);\r\n    ctx.bezierCurveTo(56.5 * scale, 180 * scale, 56.5 * scale, 180 * scale, 77 * scale, 41 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(118 * scale, 31 * scale);\r\n    ctx.bezierCurveTo(125 * scale, 43 * scale, 125 * scale, 43 * scale, 132 * scale, 55 * scale);\r\n    ctx.bezierCurveTo(109.5 * scale, 185.5 * scale, 109.5 * scale, 185.5 * scale, 87 * scale, 316 * scale);\r\n    ctx.bezierCurveTo(72 * scale, 313.5 * scale, 72 * scale, 313.5 * scale, 57 * scale, 311 * scale);\r\n    ctx.bezierCurveTo(76.5 * scale, 181 * scale, 76.5 * scale, 181 * scale, 96 * scale, 51 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(56 * scale, 328 * scale);\r\n    ctx.bezierCurveTo(47 * scale, 385.5 * scale, 47 * scale, 385.5 * scale, 38 * scale, 443 * scale);\r\n    ctx.bezierCurveTo(52 * scale, 446 * scale, 52 * scale, 446 * scale, 66 * scale, 449 * scale);\r\n    ctx.bezierCurveTo(76.5 * scale, 388.5 * scale, 76.5 * scale, 388.5 * scale, 87 * scale, 328 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(74 * scale, 302 * scale);\r\n    ctx.bezierCurveTo(104 * scale, 316.5 * scale, 104 * scale, 316.5 * scale, 134 * scale, 331 * scale);\r\n    ctx.bezierCurveTo(133 * scale, 341 * scale, 133 * scale, 341 * scale, 132 * scale, 351 * scale);\r\n    ctx.bezierCurveTo(69.5 * scale, 342 * scale, 69.5 * scale, 342 * scale, 7 * scale, 333 * scale);\r\n    ctx.bezierCurveTo(8 * scale, 323 * scale, 8 * scale, 323 * scale, 9 * scale, 313 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.save();\r\n    ctx.translate(51.5 * scale, 440.5 * scale);\r\n    ctx.rotate(0.2);\r\n    round_rect(ctx, -20.5 * scale, -18.5 * scale, 41 * scale, 37 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(73 * scale, 316 * scale);\r\n    ctx.bezierCurveTo(90 * scale, 324.5 * scale, 90 * scale, 324.5 * scale, 107 * scale, 333 * scale);\r\n    ctx.bezierCurveTo(70 * scale, 327.5 * scale, 70 * scale, 327.5 * scale, 33 * scale, 322 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(-20 * scale, -20 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(88 * scale, 30 * scale);\r\n    ctx.bezierCurveTo(96 * scale, 49.5 * scale, 96 * scale, 49.5 * scale, 104 * scale, 69 * scale);\r\n    ctx.bezierCurveTo(105.5 * scale, 41.5 * scale, 105.5 * scale, 41.5 * scale, 107 * scale, 14 * scale);\r\n    ctx.bezierCurveTo(114 * scale, 9.5 * scale, 114 * scale, 9.5 * scale, 121 * scale, 5 * scale);\r\n    ctx.bezierCurveTo(135.5 * scale, 27.5 * scale, 135.5 * scale, 27.5 * scale, 150 * scale, 50 * scale);\r\n    ctx.bezierCurveTo(110.5 * scale, 286 * scale, 110.5 * scale, 286 * scale, 103 * scale, 331 * scale);\r\n    ctx.bezierCurveTo(69.5 * scale, 325 * scale, 69.5 * scale, 325 * scale, 36 * scale, 319 * scale);\r\n    ctx.bezierCurveTo(56.5 * scale, 180 * scale, 56.5 * scale, 180 * scale, 77 * scale, 41 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 7 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(118 * scale, 31 * scale);\r\n    ctx.bezierCurveTo(125 * scale, 43 * scale, 125 * scale, 43 * scale, 132 * scale, 55 * scale);\r\n    ctx.bezierCurveTo(109.5 * scale, 185.5 * scale, 109.5 * scale, 185.5 * scale, 87 * scale, 316 * scale);\r\n    ctx.bezierCurveTo(72 * scale, 313.5 * scale, 72 * scale, 313.5 * scale, 57 * scale, 311 * scale);\r\n    ctx.bezierCurveTo(76.5 * scale, 181 * scale, 76.5 * scale, 181 * scale, 96 * scale, 51 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(88 * scale, 30 * scale);\r\n    ctx.bezierCurveTo(96 * scale, 49.5 * scale, 96 * scale, 49.5 * scale, 104 * scale, 69 * scale);\r\n    ctx.bezierCurveTo(105.5 * scale, 41.5 * scale, 105.5 * scale, 41.5 * scale, 107 * scale, 14 * scale);\r\n    ctx.bezierCurveTo(114 * scale, 9.5 * scale, 114 * scale, 9.5 * scale, 121 * scale, 5 * scale);\r\n    ctx.bezierCurveTo(135.5 * scale, 27.5 * scale, 135.5 * scale, 27.5 * scale, 150 * scale, 50 * scale);\r\n    ctx.bezierCurveTo(110.5 * scale, 286 * scale, 110.5 * scale, 286 * scale, 103 * scale, 331 * scale);\r\n    ctx.bezierCurveTo(69.5 * scale, 325 * scale, 69.5 * scale, 325 * scale, 36 * scale, 319 * scale);\r\n    ctx.bezierCurveTo(56.5 * scale, 180 * scale, 56.5 * scale, 180 * scale, 77 * scale, 41 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[2], 7 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(56 * scale, 328 * scale);\r\n    ctx.bezierCurveTo(47 * scale, 385.5 * scale, 47 * scale, 385.5 * scale, 38 * scale, 443 * scale);\r\n    ctx.bezierCurveTo(52 * scale, 446 * scale, 52 * scale, 446 * scale, 66 * scale, 449 * scale);\r\n    ctx.bezierCurveTo(76.5 * scale, 388.5 * scale, 76.5 * scale, 388.5 * scale, 87 * scale, 328 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[5], 7 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(74 * scale, 302 * scale);\r\n    ctx.bezierCurveTo(104 * scale, 316.5 * scale, 104 * scale, 316.5 * scale, 134 * scale, 331 * scale);\r\n    ctx.bezierCurveTo(133 * scale, 341 * scale, 133 * scale, 341 * scale, 132 * scale, 351 * scale);\r\n    ctx.bezierCurveTo(69.5 * scale, 342 * scale, 69.5 * scale, 342 * scale, 7 * scale, 333 * scale);\r\n    ctx.bezierCurveTo(8 * scale, 323 * scale, 8 * scale, 323 * scale, 9 * scale, 313 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[5], 7 * scale);\r\n    ctx.save();\r\n    ctx.translate(51.5 * scale, 440.5 * scale);\r\n    ctx.rotate(0.2);\r\n    round_rect(ctx, -20.5 * scale, -18.5 * scale, 41 * scale, 37 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[4], color[5], 7 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(73 * scale, 316 * scale);\r\n    ctx.bezierCurveTo(90 * scale, 324.5 * scale, 90 * scale, 324.5 * scale, 107 * scale, 333 * scale);\r\n    ctx.bezierCurveTo(70 * scale, 327.5 * scale, 70 * scale, 327.5 * scale, 33 * scale, 322 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[6]);\r\n    return can;\r\n}\r\n;\r\nfunction create_pirate_sword(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 424 * scale;\r\n    can.height = 788 * scale;\r\n    ctx.translate(25 * scale, 25 * scale);\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.save();\r\n    ctx.translate(193.5 * scale, 602.5 * scale);\r\n    ctx.rotate(-0.12);\r\n    round_rect(ctx, -26.5 * scale, -97.5 * scale, 53 * scale, 195 * scale, 25 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(137 * scale, 519 * scale);\r\n    ctx.bezierCurveTo(182 * scale, 513 * scale, 182 * scale, 513 * scale, 227 * scale, 507 * scale);\r\n    ctx.bezierCurveTo(214 * scale, 417 * scale, 189 * scale, 304 * scale, 221 * scale, 180 * scale);\r\n    ctx.bezierCurveTo(191 * scale, 126 * scale, 192 * scale, 105 * scale, 198 * scale, 64 * scale);\r\n    ctx.bezierCurveTo(123 * scale, 102 * scale, 99 * scale, 285 * scale, 137 * scale, 517 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(175 * scale, 119 * scale);\r\n    ctx.bezierCurveTo(176 * scale, 142 * scale, 184 * scale, 165 * scale, 197 * scale, 183 * scale);\r\n    ctx.bezierCurveTo(167 * scale, 325 * scale, 191 * scale, 405 * scale, 202 * scale, 502 * scale);\r\n    ctx.bezierCurveTo(180 * scale, 503 * scale, 180 * scale, 503 * scale, 158 * scale, 504 * scale);\r\n    ctx.bezierCurveTo(135 * scale, 396 * scale, 134 * scale, 185 * scale, 175 * scale, 119 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(110 * scale, 518 * scale);\r\n    ctx.bezierCurveTo(111.5 * scale, 533 * scale, 111.5 * scale, 533 * scale, 113 * scale, 548 * scale);\r\n    ctx.bezierCurveTo(162.5 * scale, 544 * scale, 162.5 * scale, 544 * scale, 212 * scale, 540 * scale);\r\n    ctx.bezierCurveTo(312 * scale, 535 * scale, 281 * scale, 665 * scale, 225 * scale, 665 * scale);\r\n    ctx.bezierCurveTo(227 * scale, 686.5 * scale, 227 * scale, 686.5 * scale, 229 * scale, 708 * scale);\r\n    ctx.bezierCurveTo(343 * scale, 684 * scale, 354 * scale, 496 * scale, 222 * scale, 498 * scale);\r\n    ctx.bezierCurveTo(165.5 * scale, 503 * scale, 165.5 * scale, 503 * scale, 109 * scale, 508 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    circle(ctx, 204 * scale, 693 * scale, 36.013886210738214 * scale);\r\n    fill_path(ctx, color[0]);\r\n    circle(ctx, 105 * scale, 518 * scale, 30 * scale);\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(171 * scale, 535 * scale);\r\n    ctx.bezierCurveTo(139.5 * scale, 537.5 * scale, 139.5 * scale, 537.5 * scale, 108 * scale, 540 * scale);\r\n    ctx.bezierCurveTo(110 * scale, 527.5 * scale, 110 * scale, 527.5 * scale, 112 * scale, 515 * scale);\r\n    ctx.bezierCurveTo(148 * scale, 513 * scale, 148 * scale, 513 * scale, 184 * scale, 511 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(244 * scale, 669 * scale);\r\n    ctx.bezierCurveTo(248.5 * scale, 680 * scale, 248.5 * scale, 680 * scale, 253 * scale, 691 * scale);\r\n    ctx.bezierCurveTo(239.5 * scale, 697 * scale, 239.5 * scale, 697 * scale, 226 * scale, 703 * scale);\r\n    ctx.bezierCurveTo(223 * scale, 691.5 * scale, 223 * scale, 691.5 * scale, 220 * scale, 680 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.translate(-25 * scale, -25 * scale);\r\n    ctx.globalAlpha = 1;\r\n    ctx.save();\r\n    ctx.translate(193.5 * scale, 602.5 * scale);\r\n    ctx.rotate(-0.12);\r\n    round_rect(ctx, -26.5 * scale, -97.5 * scale, 53 * scale, 195 * scale, 25 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[1], color[2], 16 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(137 * scale, 519 * scale);\r\n    ctx.bezierCurveTo(182 * scale, 513 * scale, 182 * scale, 513 * scale, 227 * scale, 507 * scale);\r\n    ctx.bezierCurveTo(214 * scale, 417 * scale, 189 * scale, 304 * scale, 221 * scale, 180 * scale);\r\n    ctx.bezierCurveTo(191 * scale, 126 * scale, 192 * scale, 105 * scale, 198 * scale, 64 * scale);\r\n    ctx.bezierCurveTo(123 * scale, 102 * scale, 99 * scale, 285 * scale, 137 * scale, 517 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[4], 16 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(175 * scale, 119 * scale);\r\n    ctx.bezierCurveTo(176 * scale, 142 * scale, 184 * scale, 165 * scale, 197 * scale, 183 * scale);\r\n    ctx.bezierCurveTo(167 * scale, 325 * scale, 191 * scale, 405 * scale, 202 * scale, 502 * scale);\r\n    ctx.bezierCurveTo(180 * scale, 503 * scale, 180 * scale, 503 * scale, 158 * scale, 504 * scale);\r\n    ctx.bezierCurveTo(135 * scale, 396 * scale, 134 * scale, 185 * scale, 175 * scale, 119 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[5]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(110 * scale, 518 * scale);\r\n    ctx.bezierCurveTo(111.5 * scale, 533 * scale, 111.5 * scale, 533 * scale, 113 * scale, 548 * scale);\r\n    ctx.bezierCurveTo(162.5 * scale, 544 * scale, 162.5 * scale, 544 * scale, 212 * scale, 540 * scale);\r\n    ctx.bezierCurveTo(312 * scale, 535 * scale, 281 * scale, 665 * scale, 225 * scale, 665 * scale);\r\n    ctx.bezierCurveTo(227 * scale, 686.5 * scale, 227 * scale, 686.5 * scale, 229 * scale, 708 * scale);\r\n    ctx.bezierCurveTo(343 * scale, 684 * scale, 354 * scale, 496 * scale, 222 * scale, 498 * scale);\r\n    ctx.bezierCurveTo(165.5 * scale, 503 * scale, 165.5 * scale, 503 * scale, 109 * scale, 508 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[6], color[4], 16 * scale);\r\n    circle(ctx, 204 * scale, 693 * scale, 36.013886210738214 * scale);\r\n    fill_path(ctx, color[6], color[4], 16 * scale);\r\n    circle(ctx, 105 * scale, 518 * scale, 30 * scale);\r\n    fill_path(ctx, color[6], color[4], 16 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(171 * scale, 535 * scale);\r\n    ctx.bezierCurveTo(139.5 * scale, 537.5 * scale, 139.5 * scale, 537.5 * scale, 108 * scale, 540 * scale);\r\n    ctx.bezierCurveTo(110 * scale, 527.5 * scale, 110 * scale, 527.5 * scale, 112 * scale, 515 * scale);\r\n    ctx.bezierCurveTo(148 * scale, 513 * scale, 148 * scale, 513 * scale, 184 * scale, 511 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[6]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(244 * scale, 669 * scale);\r\n    ctx.bezierCurveTo(248.5 * scale, 680 * scale, 248.5 * scale, 680 * scale, 253 * scale, 691 * scale);\r\n    ctx.bezierCurveTo(239.5 * scale, 697 * scale, 239.5 * scale, 697 * scale, 226 * scale, 703 * scale);\r\n    ctx.bezierCurveTo(223 * scale, 691.5 * scale, 223 * scale, 691.5 * scale, 220 * scale, 680 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[6]);\r\n    circle(ctx, 204 * scale, 693 * scale, 17.029386365926403 * scale);\r\n    fill_path(ctx, color[7]);\r\n    circle(ctx, 106 * scale, 518 * scale, 12 * scale);\r\n    fill_path(ctx, color[7]);\r\n    return can;\r\n}\r\n;\r\nfunction create_sword(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 100 * scale;\r\n    can.height = 250 * scale;\r\n    ctx.translate(-135 * scale, -75 * scale);\r\n    ctx.globalAlpha = draw_shadow ? 0.8 : 1;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(178.5 * scale, 238.03125 * scale);\r\n    ctx.bezierCurveTo(177 * scale, 175.03125 * scale, 177 * scale, 175.03125 * scale, 175.5 * scale, 112.03125 * scale);\r\n    ctx.bezierCurveTo(184.5 * scale, 100.53125 * scale, 184.5 * scale, 100.53125 * scale, 193.5 * scale, 89.03125 * scale);\r\n    ctx.bezierCurveTo(202 * scale, 100.03125 * scale, 202 * scale, 100.03125 * scale, 210.5 * scale, 111.03125 * scale);\r\n    ctx.bezierCurveTo(209.5 * scale, 174.03125 * scale, 209.5 * scale, 174.03125 * scale, 208.5 * scale, 237.03125 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(155.5 * scale, 239.03125 * scale);\r\n    ctx.bezierCurveTo(194 * scale, 238.53125 * scale, 194 * scale, 238.53125 * scale, 232.5 * scale, 238.03125 * scale);\r\n    ctx.bezierCurveTo(232.5 * scale, 243.03125 * scale, 232.5 * scale, 243.03125 * scale, 232.5 * scale, 248.03125 * scale);\r\n    ctx.bezierCurveTo(194 * scale, 248.53125 * scale, 194 * scale, 248.53125 * scale, 155.5 * scale, 249.03125 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    circle(ctx, 160.5 * scale, 243.03125 * scale, 7 * scale);\r\n    fill_path(ctx, color[0]);\r\n    circle(ctx, 227.5 * scale, 242.03125 * scale, 7 * scale);\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(185.5 * scale, 253.03125 * scale);\r\n    ctx.bezierCurveTo(193.5 * scale, 253.03125 * scale, 193.5 * scale, 253.03125 * scale, 201.5 * scale, 253.03125 * scale);\r\n    ctx.bezierCurveTo(201.5 * scale, 276.03125 * scale, 201.5 * scale, 276.03125 * scale, 201.5 * scale, 299.03125 * scale);\r\n    ctx.bezierCurveTo(194.5 * scale, 299.03125 * scale, 194.5 * scale, 299.03125 * scale, 187.5 * scale, 299.03125 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[0], 5 * scale);\r\n    circle(ctx, 194 * scale, 298 * scale, 9 * scale);\r\n    fill_path(ctx, color[0], color[0], 5 * scale);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(-10 * scale, 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(178.5 * scale, 238.03125 * scale);\r\n    ctx.bezierCurveTo(177 * scale, 175.03125 * scale, 177 * scale, 175.03125 * scale, 175.5 * scale, 112.03125 * scale);\r\n    ctx.bezierCurveTo(184.5 * scale, 100.53125 * scale, 184.5 * scale, 100.53125 * scale, 193.5 * scale, 89.03125 * scale);\r\n    ctx.bezierCurveTo(202 * scale, 100.03125 * scale, 202 * scale, 100.03125 * scale, 210.5 * scale, 111.03125 * scale);\r\n    ctx.bezierCurveTo(209.5 * scale, 174.03125 * scale, 209.5 * scale, 174.03125 * scale, 208.5 * scale, 237.03125 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[4], 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(155.5 * scale, 239.03125 * scale);\r\n    ctx.bezierCurveTo(194 * scale, 238.53125 * scale, 194 * scale, 238.53125 * scale, 232.5 * scale, 238.03125 * scale);\r\n    ctx.bezierCurveTo(232.5 * scale, 243.03125 * scale, 232.5 * scale, 243.03125 * scale, 232.5 * scale, 248.03125 * scale);\r\n    ctx.bezierCurveTo(194 * scale, 248.53125 * scale, 194 * scale, 248.53125 * scale, 155.5 * scale, 249.03125 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 5 * scale);\r\n    circle(ctx, 160.5 * scale, 243.03125 * scale, 7 * scale);\r\n    fill_path(ctx, color[1], color[2], 5 * scale);\r\n    circle(ctx, 227.5 * scale, 242.03125 * scale, 7 * scale);\r\n    fill_path(ctx, color[1], color[2], 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(185.5 * scale, 253.03125 * scale);\r\n    ctx.bezierCurveTo(193.5 * scale, 253.03125 * scale, 193.5 * scale, 253.03125 * scale, 201.5 * scale, 253.03125 * scale);\r\n    ctx.bezierCurveTo(201.5 * scale, 276.03125 * scale, 201.5 * scale, 276.03125 * scale, 201.5 * scale, 299.03125 * scale);\r\n    ctx.bezierCurveTo(194.5 * scale, 299.03125 * scale, 194.5 * scale, 299.03125 * scale, 187.5 * scale, 299.03125 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 7 * scale);\r\n    circle(ctx, 194 * scale, 298 * scale, 9 * scale);\r\n    fill_path(ctx, color[1], color[2], 7 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_stonesword(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 290 * scale;\r\n    can.height = 525 * scale;\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(20 * scale, 20 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(111 * scale, 351 * scale);\r\n    ctx.bezierCurveTo(129 * scale, 218 * scale, 129 * scale, 218 * scale, 147 * scale, 85 * scale);\r\n    ctx.bezierCurveTo(167 * scale, 65.5 * scale, 167 * scale, 65.5 * scale, 187 * scale, 46 * scale);\r\n    ctx.bezierCurveTo(201.5 * scale, 70.5 * scale, 201.5 * scale, 70.5 * scale, 216 * scale, 95 * scale);\r\n    ctx.bezierCurveTo(194.5 * scale, 227.5 * scale, 194.5 * scale, 227.5 * scale, 173 * scale, 360 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.save();\r\n    ctx.translate(131 * scale, 425.5 * scale);\r\n    ctx.rotate(0.16);\r\n    round_rect(ctx, -14 * scale, -56.5 * scale, 28 * scale, 113 * scale, 8 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0]);\r\n    circle(ctx, 122 * scale, 480 * scale, 18.439088914585774 * scale);\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(79 * scale, 371 * scale);\r\n    ctx.bezierCurveTo(131 * scale, 373 * scale, 145 * scale, 378 * scale, 197 * scale, 388 * scale);\r\n    ctx.bezierCurveTo(205 * scale, 382.5 * scale, 205 * scale, 382.5 * scale, 213 * scale, 377 * scale);\r\n    ctx.bezierCurveTo(167 * scale, 352 * scale, 117 * scale, 345 * scale, 69 * scale, 355 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(-20 * scale, -20 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(111 * scale, 351 * scale);\r\n    ctx.bezierCurveTo(129 * scale, 218 * scale, 129 * scale, 218 * scale, 147 * scale, 85 * scale);\r\n    ctx.bezierCurveTo(167 * scale, 65.5 * scale, 167 * scale, 65.5 * scale, 187 * scale, 46 * scale);\r\n    ctx.bezierCurveTo(201.5 * scale, 70.5 * scale, 201.5 * scale, 70.5 * scale, 216 * scale, 95 * scale);\r\n    ctx.bezierCurveTo(194.5 * scale, 227.5 * scale, 194.5 * scale, 227.5 * scale, 173 * scale, 360 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 12.5 * scale);\r\n    ctx.save();\r\n    ctx.translate(131 * scale, 425.5 * scale);\r\n    ctx.rotate(0.16);\r\n    round_rect(ctx, -14 * scale, -56.5 * scale, 28 * scale, 113 * scale, 8 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[4], color[5], 12.5 * scale);\r\n    circle(ctx, 122 * scale, 480 * scale, 18.439088914585774 * scale);\r\n    fill_path(ctx, color[4], color[5], 12.5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(79 * scale, 371 * scale);\r\n    ctx.bezierCurveTo(131 * scale, 373 * scale, 145 * scale, 378 * scale, 197 * scale, 388 * scale);\r\n    ctx.bezierCurveTo(205 * scale, 382.5 * scale, 205 * scale, 382.5 * scale, 213 * scale, 377 * scale);\r\n    ctx.bezierCurveTo(167 * scale, 352 * scale, 117 * scale, 345 * scale, 69 * scale, 355 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[5], 12.5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(128 * scale, 345 * scale);\r\n    ctx.bezierCurveTo(142 * scale, 345 * scale, 147 * scale, 346 * scale, 158 * scale, 349 * scale);\r\n    ctx.bezierCurveTo(177.5 * scale, 224.5 * scale, 177.5 * scale, 224.5 * scale, 197 * scale, 100 * scale);\r\n    ctx.bezierCurveTo(190.5 * scale, 84.5 * scale, 190.5 * scale, 84.5 * scale, 184 * scale, 69 * scale);\r\n    ctx.bezierCurveTo(173.5 * scale, 82 * scale, 173.5 * scale, 82 * scale, 163 * scale, 95 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3]);\r\n    return can;\r\n}\r\n;\r\nfunction create_crab(scale, useless, color, i) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 283 * scale;\r\n    can.height = 224 * scale;\r\n    ctx.translate(0, 15 * scale);\r\n    ctx.globalAlpha = 0.5;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(93 * scale, 55 * scale);\r\n    ctx.bezierCurveTo(127 * scale, 27 * scale, 195 * scale, 42 * scale, 213 * scale, 78 * scale);\r\n    ctx.bezierCurveTo(254 * scale, 134 * scale, 226 * scale, 198 * scale, 153 * scale, 197 * scale);\r\n    ctx.bezierCurveTo(59 * scale, 204 * scale, 56 * scale, 158 * scale, 51 * scale, 115 * scale);\r\n    ctx.bezierCurveTo(50 * scale, 93 * scale, 81 * scale, 62 * scale, 90 * scale, 57 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(100 * scale, 33 * scale);\r\n    ctx.bezierCurveTo(85 * scale, 62 * scale, 102 * scale, 66 * scale, 110 * scale, 83 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(181 * scale, 32 * scale);\r\n    ctx.bezierCurveTo(196 * scale, 62 * scale, 181 * scale, 68 * scale, 178 * scale, 69 * scale);\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(225 * scale, 52 * scale);\r\n    ctx.bezierCurveTo(228 * scale, 78 * scale, 207 * scale, 77 * scale, 192 * scale, 88 * scale);\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(34 * scale, 134 * scale);\r\n    ctx.bezierCurveTo(46 * scale, 111 * scale, 57 * scale, 111 * scale, 79 * scale, 109 * scale);\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(249 * scale, 135 * scale);\r\n    ctx.bezierCurveTo(233 * scale, 107 * scale, 212 * scale, 112 * scale, 202 * scale, 115 * scale);\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(56 * scale, 50 * scale);\r\n    ctx.bezierCurveTo(56 * scale, 82 * scale, 73 * scale, 82 * scale, 93 * scale, 89 * scale);\r\n    fill_path(ctx, color[0]);\r\n    ctx.translate(0, -15 * scale);\r\n    ctx.globalAlpha = 1;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(100 * scale, 33 * scale);\r\n    ctx.bezierCurveTo(85 * scale, 62 * scale, 102 * scale, 66 * scale, 110 * scale, 83 * scale);\r\n    fill_path(ctx, undefined, color[2], 40 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(181 * scale, 32 * scale);\r\n    ctx.bezierCurveTo(196 * scale, 62 * scale, 181 * scale, 68 * scale, 178 * scale, 69 * scale);\r\n    fill_path(ctx, undefined, color[2], 40 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(225 * scale, 52 * scale);\r\n    ctx.bezierCurveTo(228 * scale, 78 * scale, 207 * scale, 77 * scale, 192 * scale, 88 * scale);\r\n    fill_path(ctx, undefined, color[2], 40 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(34 * scale, 134 * scale);\r\n    ctx.bezierCurveTo(46 * scale, 111 * scale, 57 * scale, 111 * scale, 79 * scale, 109 * scale);\r\n    fill_path(ctx, undefined, color[2], 40 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(249 * scale, 135 * scale);\r\n    ctx.bezierCurveTo(233 * scale, 107 * scale, 212 * scale, 112 * scale, 202 * scale, 115 * scale);\r\n    fill_path(ctx, undefined, color[2], 40 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(56 * scale, 50 * scale);\r\n    ctx.bezierCurveTo(56 * scale, 82 * scale, 73 * scale, 82 * scale, 93 * scale, 89 * scale);\r\n    fill_path(ctx, undefined, color[2], 40 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(93 * scale, 55 * scale);\r\n    ctx.bezierCurveTo(127 * scale, 27 * scale, 195 * scale, 42 * scale, 213 * scale, 78 * scale);\r\n    ctx.bezierCurveTo(254 * scale, 134 * scale, 226 * scale, 198 * scale, 153 * scale, 197 * scale);\r\n    ctx.bezierCurveTo(59 * scale, 204 * scale, 56 * scale, 158 * scale, 51 * scale, 115 * scale);\r\n    ctx.bezierCurveTo(50 * scale, 93 * scale, 81 * scale, 62 * scale, 90 * scale, 57 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(100 * scale, 33 * scale);\r\n    ctx.bezierCurveTo(85 * scale, 62 * scale, 102 * scale, 66 * scale, 110 * scale, 83 * scale);\r\n    fill_path(ctx, undefined, color[1], 20 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(181 * scale, 32 * scale);\r\n    ctx.bezierCurveTo(196 * scale, 62 * scale, 181 * scale, 68 * scale, 178 * scale, 69 * scale);\r\n    fill_path(ctx, undefined, color[1], 20 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(225 * scale, 52 * scale);\r\n    ctx.bezierCurveTo(228 * scale, 78 * scale, 207 * scale, 77 * scale, 192 * scale, 88 * scale);\r\n    fill_path(ctx, undefined, color[1], 20 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(34 * scale, 134 * scale);\r\n    ctx.bezierCurveTo(46 * scale, 111 * scale, 57 * scale, 111 * scale, 79 * scale, 109 * scale);\r\n    fill_path(ctx, undefined, color[1], 20 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(249 * scale, 135 * scale);\r\n    ctx.bezierCurveTo(233 * scale, 107 * scale, 212 * scale, 112 * scale, 202 * scale, 115 * scale);\r\n    fill_path(ctx, undefined, color[1], 20 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(56 * scale, 50 * scale);\r\n    ctx.bezierCurveTo(56 * scale, 82 * scale, 73 * scale, 82 * scale, 93 * scale, 89 * scale);\r\n    fill_path(ctx, undefined, color[1], 20 * scale);\r\n    circle(ctx, 101 * scale, 155 * scale, 20.591260281974 * scale);\r\n    fill_path(ctx, color[3]);\r\n    circle(ctx, 180 * scale, 155 * scale, 20.591260281974 * scale);\r\n    fill_path(ctx, color[3]);\r\n    circle(ctx, 95 * scale, 148 * scale, 7.211102550927978 * scale);\r\n    fill_path(ctx, color[4]);\r\n    circle(ctx, 173 * scale, 148 * scale, 7.211102550927978 * scale);\r\n    fill_path(ctx, color[4]);\r\n    if (i === 1) {\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(191 * scale, 107 * scale);\r\n        ctx.bezierCurveTo(180 * scale, 104 * scale, 175 * scale, 101 * scale, 180 * scale, 95 * scale);\r\n        ctx.bezierCurveTo(180 * scale, 95 * scale, 181 * scale, 99 * scale, 188 * scale, 103 * scale);\r\n        ctx.bezierCurveTo(191 * scale, 101 * scale, 191 * scale, 95 * scale, 190 * scale, 91 * scale);\r\n        ctx.bezierCurveTo(190 * scale, 91 * scale, 196 * scale, 89 * scale, 195 * scale, 99 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[2]);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(206 * scale, 98 * scale);\r\n        ctx.bezierCurveTo(203 * scale, 95 * scale, 200 * scale, 93 * scale, 198 * scale, 101 * scale);\r\n        ctx.bezierCurveTo(194 * scale, 109 * scale, 193 * scale, 109 * scale, 196 * scale, 110 * scale);\r\n        ctx.bezierCurveTo(206 * scale, 115 * scale, 209 * scale, 114 * scale, 211 * scale, 111 * scale);\r\n        ctx.bezierCurveTo(211 * scale, 106 * scale, 208 * scale, 108 * scale, 203 * scale, 108 * scale);\r\n        ctx.bezierCurveTo(193 * scale, 107 * scale, 204 * scale, 101 * scale, 206 * scale, 99 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[2]);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(172 * scale, 111 * scale);\r\n        ctx.bezierCurveTo(172 * scale, 106 * scale, 174 * scale, 105 * scale, 185 * scale, 109 * scale);\r\n        ctx.bezierCurveTo(190 * scale, 109 * scale, 189 * scale, 114 * scale, 185 * scale, 120 * scale);\r\n        ctx.bezierCurveTo(181 * scale, 125 * scale, 180 * scale, 126 * scale, 176 * scale, 122 * scale);\r\n        ctx.bezierCurveTo(182 * scale, 119 * scale, 187 * scale, 110 * scale, 182 * scale, 112 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[2]);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(202 * scale, 125 * scale);\r\n        ctx.bezierCurveTo(197 * scale, 117 * scale, 193 * scale, 116 * scale, 193 * scale, 120 * scale);\r\n        ctx.bezierCurveTo(192.5 * scale, 124.5 * scale, 192.5 * scale, 124.5 * scale, 192 * scale, 129 * scale);\r\n        ctx.bezierCurveTo(188 * scale, 129 * scale, 187 * scale, 124 * scale, 189 * scale, 120 * scale);\r\n        ctx.bezierCurveTo(191 * scale, 110 * scale, 192 * scale, 110 * scale, 200 * scale, 116 * scale);\r\n        ctx.bezierCurveTo(208 * scale, 120 * scale, 207 * scale, 123 * scale, 202 * scale, 125 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[2]);\r\n    }\r\n    return can;\r\n}\r\n;\r\nfunction create_hurt_crab(scale, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 283 * scale;\r\n    can.height = 224 * scale;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(100 * scale, 33 * scale);\r\n    ctx.bezierCurveTo(85 * scale, 62 * scale, 102 * scale, 66 * scale, 110 * scale, 83 * scale);\r\n    fill_path(ctx, undefined, color[0], 40 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(181 * scale, 32 * scale);\r\n    ctx.bezierCurveTo(196 * scale, 62 * scale, 181 * scale, 68 * scale, 178 * scale, 69 * scale);\r\n    fill_path(ctx, undefined, color[0], 40 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(225 * scale, 52 * scale);\r\n    ctx.bezierCurveTo(228 * scale, 78 * scale, 207 * scale, 77 * scale, 192 * scale, 88 * scale);\r\n    fill_path(ctx, undefined, color[0], 40 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(34 * scale, 134 * scale);\r\n    ctx.bezierCurveTo(46 * scale, 111 * scale, 57 * scale, 111 * scale, 79 * scale, 109 * scale);\r\n    fill_path(ctx, undefined, color[0], 40 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(249 * scale, 135 * scale);\r\n    ctx.bezierCurveTo(233 * scale, 107 * scale, 212 * scale, 112 * scale, 202 * scale, 115 * scale);\r\n    fill_path(ctx, undefined, color[0], 40 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(56 * scale, 50 * scale);\r\n    ctx.bezierCurveTo(56 * scale, 82 * scale, 73 * scale, 82 * scale, 93 * scale, 89 * scale);\r\n    fill_path(ctx, undefined, color[0], 40 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(93 * scale, 55 * scale);\r\n    ctx.bezierCurveTo(124 * scale, 29 * scale, 179 * scale, 44 * scale, 188 * scale, 52 * scale);\r\n    ctx.bezierCurveTo(207 * scale, 64 * scale, 226 * scale, 94 * scale, 231 * scale, 118 * scale);\r\n    ctx.bezierCurveTo(236 * scale, 145 * scale, 222 * scale, 184 * scale, 193 * scale, 192 * scale);\r\n    ctx.bezierCurveTo(147 * scale, 201 * scale, 116 * scale, 200 * scale, 93 * scale, 193 * scale);\r\n    ctx.bezierCurveTo(61 * scale, 180 * scale, 48 * scale, 147 * scale, 50 * scale, 123 * scale);\r\n    ctx.bezierCurveTo(50 * scale, 93 * scale, 76 * scale, 66 * scale, 92 * scale, 56 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    return can;\r\n}\r\n;\r\nfunction create_crab_claw_left(scale, useless, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 131 * scale;\r\n    can.height = 121 * scale;\r\n    ctx.translate(0, 20 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(110 * scale, 59 * scale);\r\n    ctx.bezierCurveTo(93 * scale, 61.5 * scale, 93 * scale, 61.5 * scale, 76 * scale, 64 * scale);\r\n    ctx.bezierCurveTo(84.5 * scale, 78.5 * scale, 84.5 * scale, 78.5 * scale, 93 * scale, 93 * scale);\r\n    ctx.bezierCurveTo(70 * scale, 111 * scale, 43 * scale, 103 * scale, 30 * scale, 82 * scale);\r\n    ctx.bezierCurveTo(17 * scale, 61 * scale, 25 * scale, 30 * scale, 51 * scale, 21 * scale);\r\n    ctx.bezierCurveTo(66 * scale, 15 * scale, 83 * scale, 18 * scale, 96 * scale, 29 * scale);\r\n    ctx.bezierCurveTo(104 * scale, 35 * scale, 109 * scale, 47 * scale, 110 * scale, 58 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(0, -20 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(110 * scale, 59 * scale);\r\n    ctx.bezierCurveTo(93 * scale, 61.5 * scale, 93 * scale, 61.5 * scale, 76 * scale, 64 * scale);\r\n    ctx.bezierCurveTo(84.5 * scale, 78.5 * scale, 84.5 * scale, 78.5 * scale, 93 * scale, 93 * scale);\r\n    ctx.bezierCurveTo(70 * scale, 111 * scale, 43 * scale, 103 * scale, 30 * scale, 82 * scale);\r\n    ctx.bezierCurveTo(17 * scale, 61 * scale, 25 * scale, 30 * scale, 51 * scale, 21 * scale);\r\n    ctx.bezierCurveTo(66 * scale, 15 * scale, 83 * scale, 18 * scale, 96 * scale, 29 * scale);\r\n    ctx.bezierCurveTo(104 * scale, 35 * scale, 109 * scale, 47 * scale, 110 * scale, 58 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 10 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_crab_claw_right(scale, useless, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 104 * scale;\r\n    can.height = 112 * scale;\r\n    ctx.translate(0, 15 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(16 * scale, 44 * scale);\r\n    ctx.bezierCurveTo(30.5 * scale, 48 * scale, 30.5 * scale, 48 * scale, 45 * scale, 52 * scale);\r\n    ctx.bezierCurveTo(36.5 * scale, 63 * scale, 36.5 * scale, 63 * scale, 28 * scale, 74 * scale);\r\n    ctx.bezierCurveTo(32 * scale, 86 * scale, 61 * scale, 92 * scale, 78 * scale, 76 * scale);\r\n    ctx.bezierCurveTo(93 * scale, 62 * scale, 92 * scale, 40 * scale, 80 * scale, 26 * scale);\r\n    ctx.bezierCurveTo(65 * scale, 11 * scale, 42 * scale, 16 * scale, 34 * scale, 21 * scale);\r\n    ctx.bezierCurveTo(22 * scale, 27 * scale, 16 * scale, 39 * scale, 16 * scale, 44 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(0, -15 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(16 * scale, 44 * scale);\r\n    ctx.bezierCurveTo(30.5 * scale, 48 * scale, 30.5 * scale, 48 * scale, 45 * scale, 52 * scale);\r\n    ctx.bezierCurveTo(36.5 * scale, 63 * scale, 36.5 * scale, 63 * scale, 28 * scale, 74 * scale);\r\n    ctx.bezierCurveTo(32 * scale, 86 * scale, 61 * scale, 92 * scale, 78 * scale, 76 * scale);\r\n    ctx.bezierCurveTo(93 * scale, 62 * scale, 92 * scale, 40 * scale, 80 * scale, 26 * scale);\r\n    ctx.bezierCurveTo(65 * scale, 11 * scale, 42 * scale, 16 * scale, 34 * scale, 21 * scale);\r\n    ctx.bezierCurveTo(22 * scale, 27 * scale, 16 * scale, 39 * scale, 16 * scale, 44 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 8 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_crab_stick(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 321 * scale;\r\n    can.height = 284 * scale;\r\n    ctx.translate(100 * scale, 30 * scale);\r\n    ctx.translate(5 * scale, 10 * scale);\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(58 * scale, 33 * scale);\r\n    ctx.bezierCurveTo(81 * scale, 22 * scale, 93 * scale, 26 * scale, 123 * scale, 47 * scale);\r\n    ctx.bezierCurveTo(160 * scale, 73 * scale, 169 * scale, 80 * scale, 191 * scale, 99 * scale);\r\n    ctx.bezierCurveTo(202 * scale, 107 * scale, 211 * scale, 118 * scale, 195 * scale, 151 * scale);\r\n    ctx.bezierCurveTo(181 * scale, 183 * scale, 157 * scale, 192 * scale, 129 * scale, 174 * scale);\r\n    ctx.bezierCurveTo(78 * scale, 140 * scale, 68 * scale, 129 * scale, 37 * scale, 94 * scale);\r\n    ctx.bezierCurveTo(15 * scale, 68 * scale, 25 * scale, 52 * scale, 56 * scale, 34 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(-5 * scale, -10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(58 * scale, 33 * scale);\r\n    ctx.bezierCurveTo(81 * scale, 22 * scale, 93 * scale, 26 * scale, 123 * scale, 47 * scale);\r\n    ctx.bezierCurveTo(160 * scale, 73 * scale, 169 * scale, 80 * scale, 191 * scale, 99 * scale);\r\n    ctx.bezierCurveTo(202 * scale, 107 * scale, 211 * scale, 118 * scale, 195 * scale, 151 * scale);\r\n    ctx.bezierCurveTo(181 * scale, 183 * scale, 157 * scale, 192 * scale, 129 * scale, 174 * scale);\r\n    ctx.bezierCurveTo(78 * scale, 140 * scale, 68 * scale, 129 * scale, 37 * scale, 94 * scale);\r\n    ctx.bezierCurveTo(15 * scale, 68 * scale, 25 * scale, 52 * scale, 56 * scale, 34 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(167 * scale, 120 * scale);\r\n    ctx.bezierCurveTo(196 * scale, 106 * scale, 207 * scale, 111 * scale, 199 * scale, 135 * scale);\r\n    ctx.bezierCurveTo(185 * scale, 172 * scale, 166 * scale, 187 * scale, 145 * scale, 179 * scale);\r\n    ctx.bezierCurveTo(118 * scale, 166 * scale, 127 * scale, 139 * scale, 166 * scale, 121 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(25 * scale, 64 * scale);\r\n    ctx.bezierCurveTo(59 * scale, 96 * scale, 97 * scale, 128 * scale, 129 * scale, 151 * scale);\r\n    ctx.bezierCurveTo(126 * scale, 163 * scale, 134 * scale, 174 * scale, 142 * scale, 180 * scale);\r\n    ctx.bezierCurveTo(114 * scale, 170 * scale, 68 * scale, 134 * scale, 31 * scale, 85 * scale);\r\n    ctx.bezierCurveTo(24 * scale, 71 * scale, 24 * scale, 70 * scale, 25 * scale, 65 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(161 * scale, 141 * scale);\r\n    ctx.bezierCurveTo(181 * scale, 131 * scale, 186 * scale, 135 * scale, 173 * scale, 152 * scale);\r\n    ctx.bezierCurveTo(163 * scale, 163 * scale, 155 * scale, 161 * scale, 151 * scale, 150 * scale);\r\n    ctx.bezierCurveTo(147 * scale, 140 * scale, 155 * scale, 131 * scale, 175 * scale, 125 * scale);\r\n    ctx.bezierCurveTo(190 * scale, 120 * scale, 196 * scale, 121 * scale, 189 * scale, 143 * scale);\r\n    ctx.bezierCurveTo(182 * scale, 167 * scale, 169 * scale, 174 * scale, 157 * scale, 174 * scale);\r\n    ctx.bezierCurveTo(138 * scale, 172 * scale, 139 * scale, 162 * scale, 140 * scale, 156 * scale);\r\n    fill_path(ctx, undefined, color[4], 4 * scale);\r\n    ctx.translate(-100 * scale, -30 * scale);\r\n    ctx.translate(10 * scale, 70 * scale);\r\n    ctx.translate(5 * scale, 10 * scale);\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(58 * scale, 33 * scale);\r\n    ctx.bezierCurveTo(81 * scale, 22 * scale, 93 * scale, 26 * scale, 123 * scale, 47 * scale);\r\n    ctx.bezierCurveTo(160 * scale, 73 * scale, 169 * scale, 80 * scale, 191 * scale, 99 * scale);\r\n    ctx.bezierCurveTo(202 * scale, 107 * scale, 211 * scale, 118 * scale, 195 * scale, 151 * scale);\r\n    ctx.bezierCurveTo(181 * scale, 183 * scale, 157 * scale, 192 * scale, 129 * scale, 174 * scale);\r\n    ctx.bezierCurveTo(78 * scale, 140 * scale, 68 * scale, 129 * scale, 37 * scale, 94 * scale);\r\n    ctx.bezierCurveTo(15 * scale, 68 * scale, 25 * scale, 52 * scale, 56 * scale, 34 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(-5 * scale, -10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(58 * scale, 33 * scale);\r\n    ctx.bezierCurveTo(81 * scale, 22 * scale, 93 * scale, 26 * scale, 123 * scale, 47 * scale);\r\n    ctx.bezierCurveTo(160 * scale, 73 * scale, 169 * scale, 80 * scale, 191 * scale, 99 * scale);\r\n    ctx.bezierCurveTo(202 * scale, 107 * scale, 211 * scale, 118 * scale, 195 * scale, 151 * scale);\r\n    ctx.bezierCurveTo(181 * scale, 183 * scale, 157 * scale, 192 * scale, 129 * scale, 174 * scale);\r\n    ctx.bezierCurveTo(78 * scale, 140 * scale, 68 * scale, 129 * scale, 37 * scale, 94 * scale);\r\n    ctx.bezierCurveTo(15 * scale, 68 * scale, 25 * scale, 52 * scale, 56 * scale, 34 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(167 * scale, 120 * scale);\r\n    ctx.bezierCurveTo(196 * scale, 106 * scale, 207 * scale, 111 * scale, 199 * scale, 135 * scale);\r\n    ctx.bezierCurveTo(185 * scale, 172 * scale, 166 * scale, 187 * scale, 145 * scale, 179 * scale);\r\n    ctx.bezierCurveTo(118 * scale, 166 * scale, 127 * scale, 139 * scale, 166 * scale, 121 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(25 * scale, 64 * scale);\r\n    ctx.bezierCurveTo(59 * scale, 96 * scale, 97 * scale, 128 * scale, 129 * scale, 151 * scale);\r\n    ctx.bezierCurveTo(126 * scale, 163 * scale, 134 * scale, 174 * scale, 142 * scale, 180 * scale);\r\n    ctx.bezierCurveTo(114 * scale, 170 * scale, 68 * scale, 134 * scale, 31 * scale, 85 * scale);\r\n    ctx.bezierCurveTo(24 * scale, 71 * scale, 24 * scale, 70 * scale, 25 * scale, 65 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(161 * scale, 141 * scale);\r\n    ctx.bezierCurveTo(181 * scale, 131 * scale, 186 * scale, 135 * scale, 173 * scale, 152 * scale);\r\n    ctx.bezierCurveTo(163 * scale, 163 * scale, 155 * scale, 161 * scale, 151 * scale, 150 * scale);\r\n    ctx.bezierCurveTo(147 * scale, 140 * scale, 155 * scale, 131 * scale, 175 * scale, 125 * scale);\r\n    ctx.bezierCurveTo(190 * scale, 120 * scale, 196 * scale, 121 * scale, 189 * scale, 143 * scale);\r\n    ctx.bezierCurveTo(182 * scale, 167 * scale, 169 * scale, 174 * scale, 157 * scale, 174 * scale);\r\n    ctx.bezierCurveTo(138 * scale, 172 * scale, 139 * scale, 162 * scale, 140 * scale, 156 * scale);\r\n    fill_path(ctx, undefined, color[4], 4 * scale);\r\n    ctx.translate(20 * scale, -80 * scale);\r\n    ctx.translate(5 * scale, 10 * scale);\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(58 * scale, 33 * scale);\r\n    ctx.bezierCurveTo(81 * scale, 22 * scale, 93 * scale, 26 * scale, 123 * scale, 47 * scale);\r\n    ctx.bezierCurveTo(160 * scale, 73 * scale, 169 * scale, 80 * scale, 191 * scale, 99 * scale);\r\n    ctx.bezierCurveTo(202 * scale, 107 * scale, 211 * scale, 118 * scale, 195 * scale, 151 * scale);\r\n    ctx.bezierCurveTo(181 * scale, 183 * scale, 157 * scale, 192 * scale, 129 * scale, 174 * scale);\r\n    ctx.bezierCurveTo(78 * scale, 140 * scale, 68 * scale, 129 * scale, 37 * scale, 94 * scale);\r\n    ctx.bezierCurveTo(15 * scale, 68 * scale, 25 * scale, 52 * scale, 56 * scale, 34 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(-5 * scale, -10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(58 * scale, 33 * scale);\r\n    ctx.bezierCurveTo(81 * scale, 22 * scale, 93 * scale, 26 * scale, 123 * scale, 47 * scale);\r\n    ctx.bezierCurveTo(160 * scale, 73 * scale, 169 * scale, 80 * scale, 191 * scale, 99 * scale);\r\n    ctx.bezierCurveTo(202 * scale, 107 * scale, 211 * scale, 118 * scale, 195 * scale, 151 * scale);\r\n    ctx.bezierCurveTo(181 * scale, 183 * scale, 157 * scale, 192 * scale, 129 * scale, 174 * scale);\r\n    ctx.bezierCurveTo(78 * scale, 140 * scale, 68 * scale, 129 * scale, 37 * scale, 94 * scale);\r\n    ctx.bezierCurveTo(15 * scale, 68 * scale, 25 * scale, 52 * scale, 56 * scale, 34 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(167 * scale, 120 * scale);\r\n    ctx.bezierCurveTo(196 * scale, 106 * scale, 207 * scale, 111 * scale, 199 * scale, 135 * scale);\r\n    ctx.bezierCurveTo(185 * scale, 172 * scale, 166 * scale, 187 * scale, 145 * scale, 179 * scale);\r\n    ctx.bezierCurveTo(118 * scale, 166 * scale, 127 * scale, 139 * scale, 166 * scale, 121 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(25 * scale, 64 * scale);\r\n    ctx.bezierCurveTo(59 * scale, 96 * scale, 97 * scale, 128 * scale, 129 * scale, 151 * scale);\r\n    ctx.bezierCurveTo(126 * scale, 163 * scale, 134 * scale, 174 * scale, 142 * scale, 180 * scale);\r\n    ctx.bezierCurveTo(114 * scale, 170 * scale, 68 * scale, 134 * scale, 31 * scale, 85 * scale);\r\n    ctx.bezierCurveTo(24 * scale, 71 * scale, 24 * scale, 70 * scale, 25 * scale, 65 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(161 * scale, 141 * scale);\r\n    ctx.bezierCurveTo(181 * scale, 131 * scale, 186 * scale, 135 * scale, 173 * scale, 152 * scale);\r\n    ctx.bezierCurveTo(163 * scale, 163 * scale, 155 * scale, 161 * scale, 151 * scale, 150 * scale);\r\n    ctx.bezierCurveTo(147 * scale, 140 * scale, 155 * scale, 131 * scale, 175 * scale, 125 * scale);\r\n    ctx.bezierCurveTo(190 * scale, 120 * scale, 196 * scale, 121 * scale, 189 * scale, 143 * scale);\r\n    ctx.bezierCurveTo(182 * scale, 167 * scale, 169 * scale, 174 * scale, 157 * scale, 174 * scale);\r\n    ctx.bezierCurveTo(138 * scale, 172 * scale, 139 * scale, 162 * scale, 140 * scale, 156 * scale);\r\n    fill_path(ctx, undefined, color[4], 4 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_goldsword(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 290 * scale;\r\n    can.height = 525 * scale;\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(20 * scale, 20 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(111 * scale, 351 * scale);\r\n    ctx.bezierCurveTo(128.5 * scale, 218.5 * scale, 128.5 * scale, 218.5 * scale, 146 * scale, 86 * scale);\r\n    ctx.bezierCurveTo(166.5 * scale, 66.5 * scale, 166.5 * scale, 66.5 * scale, 187 * scale, 47 * scale);\r\n    ctx.bezierCurveTo(201 * scale, 71.5 * scale, 201 * scale, 71.5 * scale, 215 * scale, 96 * scale);\r\n    ctx.bezierCurveTo(193 * scale, 228.5 * scale, 193 * scale, 228.5 * scale, 171 * scale, 361 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.save();\r\n    ctx.translate(129.5 * scale, 424 * scale);\r\n    ctx.rotate(0.16);\r\n    round_rect(ctx, -15.5 * scale, -63 * scale, 31 * scale, 126 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0]);\r\n    circle(ctx, 121 * scale, 480 * scale, 20.396078054371138 * scale);\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(90 * scale, 311 * scale);\r\n    ctx.bezierCurveTo(95 * scale, 324 * scale, 95 * scale, 324 * scale, 100 * scale, 337 * scale);\r\n    ctx.bezierCurveTo(141.5 * scale, 345.5 * scale, 141.5 * scale, 345.5 * scale, 183 * scale, 354 * scale);\r\n    ctx.bezierCurveTo(193.5 * scale, 342.5 * scale, 193.5 * scale, 342.5 * scale, 204 * scale, 331 * scale);\r\n    ctx.bezierCurveTo(202 * scale, 354 * scale, 202 * scale, 354 * scale, 200 * scale, 377 * scale);\r\n    ctx.bezierCurveTo(147 * scale, 388 * scale, 106 * scale, 371 * scale, 79 * scale, 356 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(-20 * scale, -20 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(111 * scale, 351 * scale);\r\n    ctx.bezierCurveTo(128.5 * scale, 218.5 * scale, 128.5 * scale, 218.5 * scale, 146 * scale, 86 * scale);\r\n    ctx.bezierCurveTo(166.5 * scale, 66.5 * scale, 166.5 * scale, 66.5 * scale, 187 * scale, 47 * scale);\r\n    ctx.bezierCurveTo(201 * scale, 71.5 * scale, 201 * scale, 71.5 * scale, 215 * scale, 96 * scale);\r\n    ctx.bezierCurveTo(193 * scale, 228.5 * scale, 193 * scale, 228.5 * scale, 171 * scale, 361 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 12.5 * scale);\r\n    ctx.save();\r\n    ctx.translate(129.5 * scale, 424 * scale);\r\n    ctx.rotate(0.16);\r\n    round_rect(ctx, -15.5 * scale, -63 * scale, 31 * scale, 126 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[4], color[5], 12.5 * scale);\r\n    circle(ctx, 121 * scale, 480 * scale, 20.396078054371138 * scale);\r\n    fill_path(ctx, color[4], color[5], 12.5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(90 * scale, 311 * scale);\r\n    ctx.bezierCurveTo(95 * scale, 324 * scale, 95 * scale, 324 * scale, 100 * scale, 337 * scale);\r\n    ctx.bezierCurveTo(141.5 * scale, 345.5 * scale, 141.5 * scale, 345.5 * scale, 183 * scale, 354 * scale);\r\n    ctx.bezierCurveTo(193.5 * scale, 342.5 * scale, 193.5 * scale, 342.5 * scale, 204 * scale, 331 * scale);\r\n    ctx.bezierCurveTo(202 * scale, 354 * scale, 202 * scale, 354 * scale, 200 * scale, 377 * scale);\r\n    ctx.bezierCurveTo(147 * scale, 388 * scale, 106 * scale, 371 * scale, 79 * scale, 356 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 12.5 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_diamondsword(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 290 * scale;\r\n    can.height = 525 * scale;\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(20 * scale, 20 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(112 * scale, 356 * scale);\r\n    ctx.bezierCurveTo(124 * scale, 220.5 * scale, 124 * scale, 220.5 * scale, 136 * scale, 85 * scale);\r\n    ctx.bezierCurveTo(162.5 * scale, 65.5 * scale, 162.5 * scale, 65.5 * scale, 189 * scale, 46 * scale);\r\n    ctx.bezierCurveTo(208.5 * scale, 72.5 * scale, 208.5 * scale, 72.5 * scale, 228 * scale, 99 * scale);\r\n    ctx.bezierCurveTo(200 * scale, 232 * scale, 200 * scale, 232 * scale, 172 * scale, 365 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.save();\r\n    ctx.translate(131 * scale, 423 * scale);\r\n    ctx.rotate(0.16);\r\n    round_rect(ctx, -14 * scale, -53 * scale, 28 * scale, 106 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0]);\r\n    ctx.save();\r\n    ctx.translate(122 * scale, 480 * scale);\r\n    ctx.rotate(1.72);\r\n    round_regular_polygon(ctx, 4, 26.476404589747453 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(210 * scale, 387 * scale);\r\n    ctx.bezierCurveTo(138 * scale, 376 * scale, 138 * scale, 376 * scale, 66 * scale, 365 * scale);\r\n    ctx.bezierCurveTo(76 * scale, 355 * scale, 76 * scale, 355 * scale, 86 * scale, 345 * scale);\r\n    ctx.bezierCurveTo(99 * scale, 346.5 * scale, 99 * scale, 346.5 * scale, 112 * scale, 348 * scale);\r\n    ctx.bezierCurveTo(128.5 * scale, 344 * scale, 128.5 * scale, 344 * scale, 145 * scale, 340 * scale);\r\n    ctx.bezierCurveTo(158 * scale, 348 * scale, 158 * scale, 348 * scale, 171 * scale, 356 * scale);\r\n    ctx.bezierCurveTo(184 * scale, 358 * scale, 184 * scale, 358 * scale, 197 * scale, 360 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(129 * scale, 338 * scale);\r\n    ctx.bezierCurveTo(137 * scale, 336 * scale, 137 * scale, 336 * scale, 145 * scale, 334 * scale);\r\n    ctx.bezierCurveTo(152.5 * scale, 338 * scale, 152.5 * scale, 338 * scale, 160 * scale, 342 * scale);\r\n    ctx.bezierCurveTo(184 * scale, 224 * scale, 184 * scale, 224 * scale, 208 * scale, 106 * scale);\r\n    ctx.bezierCurveTo(197 * scale, 88 * scale, 187 * scale, 70 * scale, 186 * scale, 70 * scale);\r\n    ctx.bezierCurveTo(169.5 * scale, 83 * scale, 169.5 * scale, 83 * scale, 153 * scale, 96 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(-20 * scale, -20 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(112 * scale, 356 * scale);\r\n    ctx.bezierCurveTo(124 * scale, 220.5 * scale, 124 * scale, 220.5 * scale, 136 * scale, 85 * scale);\r\n    ctx.bezierCurveTo(162.5 * scale, 65.5 * scale, 162.5 * scale, 65.5 * scale, 189 * scale, 46 * scale);\r\n    ctx.bezierCurveTo(208.5 * scale, 72.5 * scale, 208.5 * scale, 72.5 * scale, 228 * scale, 99 * scale);\r\n    ctx.bezierCurveTo(200 * scale, 232 * scale, 200 * scale, 232 * scale, 172 * scale, 365 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 12.5 * scale);\r\n    ctx.save();\r\n    ctx.translate(131 * scale, 423 * scale);\r\n    ctx.rotate(0.16);\r\n    round_rect(ctx, -14 * scale, -53 * scale, 28 * scale, 106 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[4], color[5], 12.5 * scale);\r\n    ctx.save();\r\n    ctx.translate(122 * scale, 480 * scale);\r\n    ctx.rotate(1.72);\r\n    round_regular_polygon(ctx, 4, 26.476404589747453 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[1], color[2], 12.5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(210 * scale, 387 * scale);\r\n    ctx.bezierCurveTo(138 * scale, 376 * scale, 138 * scale, 376 * scale, 66 * scale, 365 * scale);\r\n    ctx.bezierCurveTo(76 * scale, 355 * scale, 76 * scale, 355 * scale, 86 * scale, 345 * scale);\r\n    ctx.bezierCurveTo(99 * scale, 346.5 * scale, 99 * scale, 346.5 * scale, 112 * scale, 348 * scale);\r\n    ctx.bezierCurveTo(128.5 * scale, 344 * scale, 128.5 * scale, 344 * scale, 145 * scale, 340 * scale);\r\n    ctx.bezierCurveTo(158 * scale, 348 * scale, 158 * scale, 348 * scale, 171 * scale, 356 * scale);\r\n    ctx.bezierCurveTo(184 * scale, 358 * scale, 184 * scale, 358 * scale, 197 * scale, 360 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 12.5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(129 * scale, 338 * scale);\r\n    ctx.bezierCurveTo(137 * scale, 336 * scale, 137 * scale, 336 * scale, 145 * scale, 334 * scale);\r\n    ctx.bezierCurveTo(152.5 * scale, 338 * scale, 152.5 * scale, 338 * scale, 160 * scale, 342 * scale);\r\n    ctx.bezierCurveTo(184 * scale, 224 * scale, 184 * scale, 224 * scale, 208 * scale, 106 * scale);\r\n    ctx.bezierCurveTo(197 * scale, 88 * scale, 187 * scale, 70 * scale, 186 * scale, 70 * scale);\r\n    ctx.bezierCurveTo(169.5 * scale, 83 * scale, 169.5 * scale, 83 * scale, 153 * scale, 96 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3]);\r\n    return can;\r\n}\r\n;\r\nfunction create_amesword(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 290 * scale;\r\n    can.height = 525 * scale;\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(20 * scale, 20 * scale);\r\n    ctx.translate(-20 * scale, -20 * scale);\r\n    ctx.save();\r\n    ctx.translate(132 * scale, 423 * scale);\r\n    ctx.rotate(0.16);\r\n    round_rect(ctx, -14 * scale, -61 * scale, 28 * scale, 122 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(100 * scale, 344 * scale);\r\n    ctx.bezierCurveTo(123 * scale, 214 * scale, 123 * scale, 214 * scale, 146 * scale, 84 * scale);\r\n    ctx.bezierCurveTo(166.5 * scale, 65 * scale, 166.5 * scale, 65 * scale, 187 * scale, 46 * scale);\r\n    ctx.bezierCurveTo(201 * scale, 71 * scale, 201 * scale, 71 * scale, 215 * scale, 96 * scale);\r\n    ctx.bezierCurveTo(199.5 * scale, 226.5 * scale, 199.5 * scale, 226.5 * scale, 184 * scale, 357 * scale);\r\n    ctx.bezierCurveTo(162.5 * scale, 362.5 * scale, 162.5 * scale, 362.5 * scale, 141 * scale, 368 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(75 * scale, 328 * scale);\r\n    ctx.bezierCurveTo(88 * scale, 336.5 * scale, 88 * scale, 336.5 * scale, 101 * scale, 345 * scale);\r\n    ctx.bezierCurveTo(123.5 * scale, 337.5 * scale, 123.5 * scale, 337.5 * scale, 146 * scale, 330 * scale);\r\n    ctx.bezierCurveTo(165 * scale, 343.5 * scale, 165 * scale, 343.5 * scale, 184 * scale, 357 * scale);\r\n    ctx.bezierCurveTo(198.5 * scale, 353 * scale, 198.5 * scale, 353 * scale, 213 * scale, 349 * scale);\r\n    ctx.bezierCurveTo(200.5 * scale, 364.5 * scale, 200.5 * scale, 364.5 * scale, 188 * scale, 380 * scale);\r\n    ctx.bezierCurveTo(163 * scale, 380.5 * scale, 163 * scale, 380.5 * scale, 138 * scale, 381 * scale);\r\n    ctx.bezierCurveTo(112 * scale, 373.5 * scale, 112 * scale, 373.5 * scale, 86 * scale, 366 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(121 * scale, 332 * scale);\r\n    ctx.bezierCurveTo(133.5 * scale, 327.5 * scale, 133.5 * scale, 327.5 * scale, 146 * scale, 323 * scale);\r\n    ctx.bezierCurveTo(157 * scale, 330.5 * scale, 157 * scale, 330.5 * scale, 168 * scale, 338 * scale);\r\n    ctx.bezierCurveTo(182.5 * scale, 219.5 * scale, 182.5 * scale, 219.5 * scale, 197 * scale, 101 * scale);\r\n    ctx.bezierCurveTo(190 * scale, 84.5 * scale, 190 * scale, 84.5 * scale, 183 * scale, 68 * scale);\r\n    ctx.bezierCurveTo(172.5 * scale, 81 * scale, 172.5 * scale, 81 * scale, 162 * scale, 94 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(105 * scale, 463 * scale);\r\n    ctx.bezierCurveTo(124.5 * scale, 466 * scale, 124.5 * scale, 466 * scale, 144 * scale, 469 * scale);\r\n    ctx.bezierCurveTo(145.5 * scale, 478.5 * scale, 145.5 * scale, 478.5 * scale, 147 * scale, 488 * scale);\r\n    ctx.bezierCurveTo(133.5 * scale, 495.5 * scale, 133.5 * scale, 495.5 * scale, 120 * scale, 503 * scale);\r\n    ctx.bezierCurveTo(108.5 * scale, 492 * scale, 108.5 * scale, 492 * scale, 97 * scale, 481 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(-20 * scale, -20 * scale);\r\n    ctx.save();\r\n    ctx.translate(132 * scale, 423 * scale);\r\n    ctx.rotate(0.16);\r\n    round_rect(ctx, -14 * scale, -61 * scale, 28 * scale, 122 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[4], color[5], 12.5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(100 * scale, 344 * scale);\r\n    ctx.bezierCurveTo(123 * scale, 214 * scale, 123 * scale, 214 * scale, 146 * scale, 84 * scale);\r\n    ctx.bezierCurveTo(166.5 * scale, 65 * scale, 166.5 * scale, 65 * scale, 187 * scale, 46 * scale);\r\n    ctx.bezierCurveTo(201 * scale, 71 * scale, 201 * scale, 71 * scale, 215 * scale, 96 * scale);\r\n    ctx.bezierCurveTo(199.5 * scale, 226.5 * scale, 199.5 * scale, 226.5 * scale, 184 * scale, 357 * scale);\r\n    ctx.bezierCurveTo(162.5 * scale, 362.5 * scale, 162.5 * scale, 362.5 * scale, 141 * scale, 368 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 12.5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(75 * scale, 328 * scale);\r\n    ctx.bezierCurveTo(88 * scale, 336.5 * scale, 88 * scale, 336.5 * scale, 101 * scale, 345 * scale);\r\n    ctx.bezierCurveTo(123.5 * scale, 337.5 * scale, 123.5 * scale, 337.5 * scale, 146 * scale, 330 * scale);\r\n    ctx.bezierCurveTo(165 * scale, 343.5 * scale, 165 * scale, 343.5 * scale, 184 * scale, 357 * scale);\r\n    ctx.bezierCurveTo(198.5 * scale, 353 * scale, 198.5 * scale, 353 * scale, 213 * scale, 349 * scale);\r\n    ctx.bezierCurveTo(200.5 * scale, 364.5 * scale, 200.5 * scale, 364.5 * scale, 188 * scale, 380 * scale);\r\n    ctx.bezierCurveTo(163 * scale, 380.5 * scale, 163 * scale, 380.5 * scale, 138 * scale, 381 * scale);\r\n    ctx.bezierCurveTo(112 * scale, 373.5 * scale, 112 * scale, 373.5 * scale, 86 * scale, 366 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 12.5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(121 * scale, 332 * scale);\r\n    ctx.bezierCurveTo(133.5 * scale, 327.5 * scale, 133.5 * scale, 327.5 * scale, 146 * scale, 323 * scale);\r\n    ctx.bezierCurveTo(157 * scale, 330.5 * scale, 157 * scale, 330.5 * scale, 168 * scale, 338 * scale);\r\n    ctx.bezierCurveTo(182.5 * scale, 219.5 * scale, 182.5 * scale, 219.5 * scale, 197 * scale, 101 * scale);\r\n    ctx.bezierCurveTo(190 * scale, 84.5 * scale, 190 * scale, 84.5 * scale, 183 * scale, 68 * scale);\r\n    ctx.bezierCurveTo(172.5 * scale, 81 * scale, 172.5 * scale, 81 * scale, 162 * scale, 94 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(105 * scale, 463 * scale);\r\n    ctx.bezierCurveTo(124.5 * scale, 466 * scale, 124.5 * scale, 466 * scale, 144 * scale, 469 * scale);\r\n    ctx.bezierCurveTo(145.5 * scale, 478.5 * scale, 145.5 * scale, 478.5 * scale, 147 * scale, 488 * scale);\r\n    ctx.bezierCurveTo(133.5 * scale, 495.5 * scale, 133.5 * scale, 495.5 * scale, 120 * scale, 503 * scale);\r\n    ctx.bezierCurveTo(108.5 * scale, 492 * scale, 108.5 * scale, 492 * scale, 97 * scale, 481 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 12.5 * scale);\r\n    ctx.globalAlpha = 1;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(143 * scale, 346 * scale);\r\n    ctx.bezierCurveTo(125 * scale, 352 * scale, 125 * scale, 352 * scale, 107 * scale, 358 * scale);\r\n    ctx.bezierCurveTo(124 * scale, 363 * scale, 140 * scale, 368 * scale, 141 * scale, 368 * scale);\r\n    ctx.bezierCurveTo(156.5 * scale, 367 * scale, 156.5 * scale, 367 * scale, 172 * scale, 366 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3]);\r\n    return can;\r\n}\r\n;\r\nfunction create_sugar_can(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 154 * scale;\r\n    can.height = 261 * scale;\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(0, 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(125 * scale, 69 * scale);\r\n    ctx.bezierCurveTo(123.5 * scale, 141.5 * scale, 123.5 * scale, 141.5 * scale, 122 * scale, 214 * scale);\r\n    ctx.bezierCurveTo(123 * scale, 228 * scale, 119 * scale, 239 * scale, 102 * scale, 239 * scale);\r\n    ctx.bezierCurveTo(90 * scale, 238 * scale, 86 * scale, 225 * scale, 89 * scale, 197 * scale);\r\n    ctx.bezierCurveTo(92 * scale, 159 * scale, 92 * scale, 141 * scale, 94 * scale, 84 * scale);\r\n    ctx.bezierCurveTo(94 * scale, 58 * scale, 87 * scale, 50 * scale, 73 * scale, 52 * scale);\r\n    ctx.bezierCurveTo(53 * scale, 54 * scale, 54 * scale, 92 * scale, 34 * scale, 87 * scale);\r\n    ctx.bezierCurveTo(13 * scale, 85 * scale, 22 * scale, 58 * scale, 34 * scale, 40 * scale);\r\n    ctx.bezierCurveTo(44 * scale, 24 * scale, 68 * scale, 17 * scale, 86 * scale, 21 * scale);\r\n    ctx.bezierCurveTo(111 * scale, 23 * scale, 123 * scale, 39 * scale, 125 * scale, 67 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(0, -10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(125 * scale, 69 * scale);\r\n    ctx.bezierCurveTo(123.5 * scale, 141.5 * scale, 123.5 * scale, 141.5 * scale, 122 * scale, 214 * scale);\r\n    ctx.bezierCurveTo(123 * scale, 228 * scale, 119 * scale, 239 * scale, 102 * scale, 239 * scale);\r\n    ctx.bezierCurveTo(90 * scale, 238 * scale, 86 * scale, 225 * scale, 89 * scale, 197 * scale);\r\n    ctx.bezierCurveTo(92 * scale, 159 * scale, 92 * scale, 141 * scale, 94 * scale, 84 * scale);\r\n    ctx.bezierCurveTo(94 * scale, 58 * scale, 87 * scale, 50 * scale, 73 * scale, 52 * scale);\r\n    ctx.bezierCurveTo(53 * scale, 54 * scale, 54 * scale, 92 * scale, 34 * scale, 87 * scale);\r\n    ctx.bezierCurveTo(13 * scale, 85 * scale, 22 * scale, 58 * scale, 34 * scale, 40 * scale);\r\n    ctx.bezierCurveTo(44 * scale, 24 * scale, 68 * scale, 17 * scale, 86 * scale, 21 * scale);\r\n    ctx.bezierCurveTo(111 * scale, 23 * scale, 123 * scale, 39 * scale, 125 * scale, 67 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(31 * scale, 43 * scale);\r\n    ctx.bezierCurveTo(31 * scale, 61 * scale, 43 * scale, 70 * scale, 51 * scale, 75 * scale);\r\n    ctx.bezierCurveTo(48 * scale, 84 * scale, 41 * scale, 89 * scale, 33 * scale, 86 * scale);\r\n    ctx.bezierCurveTo(23 * scale, 88 * scale, 20 * scale, 76 * scale, 23 * scale, 62 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(45 * scale, 29 * scale);\r\n    ctx.bezierCurveTo(49 * scale, 45 * scale, 61 * scale, 54 * scale, 64 * scale, 55 * scale);\r\n    ctx.bezierCurveTo(67.5 * scale, 53 * scale, 67.5 * scale, 53 * scale, 71 * scale, 51 * scale);\r\n    ctx.bezierCurveTo(80 * scale, 44 * scale, 83 * scale, 33 * scale, 82 * scale, 20 * scale);\r\n    ctx.bezierCurveTo(59 * scale, 17 * scale, 51 * scale, 23 * scale, 45 * scale, 30 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(86 * scale, 56 * scale);\r\n    ctx.bezierCurveTo(90 * scale, 33 * scale, 103 * scale, 25 * scale, 105 * scale, 27 * scale);\r\n    ctx.bezierCurveTo(116 * scale, 31 * scale, 121 * scale, 45 * scale, 122 * scale, 50 * scale);\r\n    ctx.bezierCurveTo(112 * scale, 62 * scale, 103 * scale, 63 * scale, 91 * scale, 62 * scale);\r\n    ctx.bezierCurveTo(89 * scale, 59.5 * scale, 89 * scale, 59.5 * scale, 87 * scale, 57 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(93 * scale, 81 * scale);\r\n    ctx.bezierCurveTo(109 * scale, 82 * scale, 123 * scale, 70 * scale, 124 * scale, 63 * scale);\r\n    ctx.bezierCurveTo(124 * scale, 75.5 * scale, 124 * scale, 75.5 * scale, 124 * scale, 88 * scale);\r\n    ctx.bezierCurveTo(119 * scale, 99 * scale, 103 * scale, 103 * scale, 94 * scale, 103 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(93 * scale, 124 * scale);\r\n    ctx.bezierCurveTo(108 * scale, 125 * scale, 122 * scale, 113 * scale, 124 * scale, 106 * scale);\r\n    ctx.bezierCurveTo(124 * scale, 119 * scale, 124 * scale, 129 * scale, 124 * scale, 132 * scale);\r\n    ctx.bezierCurveTo(110 * scale, 147 * scale, 94 * scale, 148 * scale, 90 * scale, 147 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(90 * scale, 170 * scale);\r\n    ctx.bezierCurveTo(104 * scale, 166 * scale, 122 * scale, 158 * scale, 122 * scale, 151 * scale);\r\n    ctx.bezierCurveTo(122 * scale, 162.5 * scale, 122 * scale, 162.5 * scale, 122 * scale, 174 * scale);\r\n    ctx.bezierCurveTo(111 * scale, 191 * scale, 97 * scale, 191 * scale, 89 * scale, 191 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(88 * scale, 208 * scale);\r\n    ctx.bezierCurveTo(100 * scale, 209 * scale, 115 * scale, 205 * scale, 122 * scale, 193 * scale);\r\n    ctx.bezierCurveTo(122 * scale, 205.5 * scale, 122 * scale, 205.5 * scale, 122 * scale, 218 * scale);\r\n    ctx.bezierCurveTo(115 * scale, 229 * scale, 103 * scale, 235 * scale, 90 * scale, 228 * scale);\r\n    ctx.bezierCurveTo(88 * scale, 224 * scale, 88 * scale, 217 * scale, 88 * scale, 211 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3]);\r\n    ctx.globalAlpha = 0.4;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(22 * scale, 81 * scale);\r\n    ctx.bezierCurveTo(32 * scale, 84 * scale, 41 * scale, 81 * scale, 45 * scale, 68 * scale);\r\n    ctx.bezierCurveTo(50 * scale, 50 * scale, 62 * scale, 40 * scale, 79 * scale, 43 * scale);\r\n    ctx.bezierCurveTo(95 * scale, 45 * scale, 102 * scale, 58 * scale, 101 * scale, 81 * scale);\r\n    ctx.bezierCurveTo(99.5 * scale, 120.5 * scale, 99.5 * scale, 120.5 * scale, 98 * scale, 160 * scale);\r\n    ctx.bezierCurveTo(96.5 * scale, 191.5 * scale, 96.5 * scale, 191.5 * scale, 95 * scale, 223 * scale);\r\n    ctx.bezierCurveTo(93 * scale, 232 * scale, 101 * scale, 235 * scale, 108 * scale, 238 * scale);\r\n    ctx.bezierCurveTo(100 * scale, 240 * scale, 90 * scale, 233 * scale, 90 * scale, 224 * scale);\r\n    ctx.bezierCurveTo(92 * scale, 157 * scale, 92 * scale, 157 * scale, 94 * scale, 90 * scale);\r\n    ctx.bezierCurveTo(94 * scale, 56 * scale, 89 * scale, 53 * scale, 77 * scale, 51 * scale);\r\n    ctx.bezierCurveTo(58 * scale, 50 * scale, 54 * scale, 59 * scale, 49 * scale, 75 * scale);\r\n    ctx.bezierCurveTo(44 * scale, 91 * scale, 28 * scale, 90 * scale, 23 * scale, 81 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(82 * scale, 123 * scale);\r\n    ctx.bezierCurveTo(88 * scale, 130 * scale, 88 * scale, 127 * scale, 94 * scale, 128 * scale);\r\n    ctx.bezierCurveTo(91 * scale, 136 * scale, 94 * scale, 137 * scale, 99 * scale, 142 * scale);\r\n    ctx.bezierCurveTo(97 * scale, 149 * scale, 99 * scale, 152 * scale, 105 * scale, 155 * scale);\r\n    ctx.bezierCurveTo(107 * scale, 159 * scale, 113 * scale, 159 * scale, 120 * scale, 158 * scale);\r\n    ctx.bezierCurveTo(121 * scale, 160 * scale, 125 * scale, 163 * scale, 132 * scale, 163 * scale);\r\n    ctx.bezierCurveTo(133 * scale, 166 * scale, 136 * scale, 169 * scale, 138 * scale, 170 * scale);\r\n    ctx.bezierCurveTo(133 * scale, 171 * scale, 132 * scale, 172 * scale, 129 * scale, 174 * scale);\r\n    ctx.bezierCurveTo(122 * scale, 170 * scale, 120 * scale, 170 * scale, 116 * scale, 174 * scale);\r\n    ctx.bezierCurveTo(108 * scale, 170.5 * scale, 108 * scale, 170.5 * scale, 100 * scale, 167 * scale);\r\n    ctx.bezierCurveTo(95 * scale, 172 * scale, 94 * scale, 179 * scale, 95 * scale, 184 * scale);\r\n    ctx.bezierCurveTo(87 * scale, 185 * scale, 87 * scale, 189 * scale, 88 * scale, 194 * scale);\r\n    ctx.bezierCurveTo(82 * scale, 194 * scale, 81 * scale, 195 * scale, 79 * scale, 197 * scale);\r\n    ctx.bezierCurveTo(78 * scale, 192 * scale, 78 * scale, 191 * scale, 77 * scale, 189 * scale);\r\n    ctx.bezierCurveTo(81 * scale, 185 * scale, 82 * scale, 183 * scale, 80 * scale, 176 * scale);\r\n    ctx.bezierCurveTo(89 * scale, 170 * scale, 92 * scale, 168 * scale, 95 * scale, 163 * scale);\r\n    ctx.bezierCurveTo(91 * scale, 151 * scale, 88 * scale, 151 * scale, 82 * scale, 147 * scale);\r\n    ctx.bezierCurveTo(85 * scale, 142 * scale, 85 * scale, 137 * scale, 81 * scale, 133 * scale);\r\n    ctx.bezierCurveTo(84 * scale, 127 * scale, 84 * scale, 125 * scale, 82 * scale, 124 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[5], 4 * scale);\r\n    circle(ctx, 107 * scale, 152 * scale, 9 * scale);\r\n    fill_path(ctx, color[6]);\r\n    circle(ctx, 105 * scale, 173 * scale, 9 * scale);\r\n    fill_path(ctx, color[6]);\r\n    circle(ctx, 87 * scale, 161 * scale, 9 * scale);\r\n    fill_path(ctx, color[6]);\r\n    circle(ctx, 106 * scale, 147 * scale, 4 * scale);\r\n    fill_path(ctx, color[7]);\r\n    circle(ctx, 104 * scale, 167 * scale, 4 * scale);\r\n    fill_path(ctx, color[7]);\r\n    circle(ctx, 86 * scale, 154 * scale, 4 * scale);\r\n    fill_path(ctx, color[7]);\r\n    return can;\r\n}\r\n;\r\nfunction create_cookie(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 350 * scale;\r\n    can.height = 140 * scale;\r\n    ctx.translate(-50 * scale, -150 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(184.5 * scale, 222.0625 * scale);\r\n    ctx.bezierCurveTo(185.5 * scale, 184.0625 * scale, 302.5 * scale, 171.0625 * scale, 313.5 * scale, 222.0625 * scale);\r\n    ctx.bezierCurveTo(330.5 * scale, 263.0625 * scale, 181.5 * scale, 274.0625 * scale, 184.5 * scale, 223.0625 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[1], 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(131.5 * scale, 241.0625 * scale);\r\n    ctx.bezierCurveTo(144.5 * scale, 278.0625 * scale, 270.5 * scale, 209.0625 * scale, 228.5 * scale, 174.0625 * scale);\r\n    ctx.bezierCurveTo(196.5 * scale, 147.0625 * scale, 117.5 * scale, 196.0625 * scale, 131.5 * scale, 240.0625 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[1], 8 * scale);\r\n    circle(ctx, 270.5 * scale, 225.0625 * scale, 15.811388300841896 * scale);\r\n    fill_path(ctx, color[2]);\r\n    circle(ctx, 243.5 * scale, 225.0625 * scale, 6.082762530298219 * scale);\r\n    fill_path(ctx, color[2]);\r\n    circle(ctx, 255.5 * scale, 210.0625 * scale, 10.816653826391969 * scale);\r\n    fill_path(ctx, color[2]);\r\n    circle(ctx, 167.5 * scale, 215.0625 * scale, 15.297058540778355 * scale);\r\n    fill_path(ctx, color[2]);\r\n    circle(ctx, 176.5 * scale, 204.0625 * scale, 7.280109889280518 * scale);\r\n    fill_path(ctx, color[2]);\r\n    circle(ctx, 206.5 * scale, 189.0625 * scale, 7.280109889280518 * scale);\r\n    fill_path(ctx, color[2]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(151.5 * scale, 212.0625 * scale);\r\n    ctx.bezierCurveTo(161.5 * scale, 204.0625 * scale, 173.5 * scale, 214.0625 * scale, 158.5 * scale, 221.0625 * scale);\r\n    ctx.bezierCurveTo(145.5 * scale, 228.0625 * scale, 144.5 * scale, 216.0625 * scale, 151.5 * scale, 212.0625 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[4], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(194.5 * scale, 209.0625 * scale);\r\n    ctx.bezierCurveTo(205.5 * scale, 202.0625 * scale, 215.5 * scale, 207.0625 * scale, 199.5 * scale, 217.0625 * scale);\r\n    ctx.bezierCurveTo(187.5 * scale, 224.0625 * scale, 182.5 * scale, 217.0625 * scale, 194.5 * scale, 209.0625 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[4], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(188.5 * scale, 183.0625 * scale);\r\n    ctx.bezierCurveTo(201.5 * scale, 176.0625 * scale, 213.5 * scale, 187.0625 * scale, 193.5 * scale, 193.0625 * scale);\r\n    ctx.bezierCurveTo(185.5 * scale, 194.0625 * scale, 175.5 * scale, 189.0625 * scale, 188.5 * scale, 183.0625 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[4], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(261.5 * scale, 202.0625 * scale);\r\n    ctx.bezierCurveTo(274.5 * scale, 201.0625 * scale, 282.5 * scale, 214.0625 * scale, 261.5 * scale, 215.0625 * scale);\r\n    ctx.bezierCurveTo(246.5 * scale, 214.0625 * scale, 248.5 * scale, 203.0625 * scale, 261.5 * scale, 202.0625 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[4], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(240.5 * scale, 231.0625 * scale);\r\n    ctx.bezierCurveTo(255.5 * scale, 231.0625 * scale, 254.5 * scale, 243.0625 * scale, 240.5 * scale, 242.0625 * scale);\r\n    ctx.bezierCurveTo(225.5 * scale, 239.0625 * scale, 225.5 * scale, 232.0625 * scale, 240.5 * scale, 231.0625 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[4], 4 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_candy(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 217 * scale;\r\n    can.height = 215 * scale;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(79 * scale, 113 * scale);\r\n    ctx.bezierCurveTo(135 * scale, 98 * scale, 136 * scale, 96 * scale, 142 * scale, 97 * scale);\r\n    ctx.bezierCurveTo(167 * scale, 106 * scale, 167 * scale, 106 * scale, 171 * scale, 109 * scale);\r\n    ctx.bezierCurveTo(173 * scale, 120 * scale, 173 * scale, 134 * scale, 169 * scale, 141 * scale);\r\n    ctx.bezierCurveTo(140 * scale, 149.5 * scale, 140 * scale, 149.5 * scale, 111 * scale, 158 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(154 * scale, 103 * scale);\r\n    ctx.bezierCurveTo(167 * scale, 91 * scale, 175 * scale, 87 * scale, 176 * scale, 94 * scale);\r\n    ctx.bezierCurveTo(175 * scale, 102 * scale, 176 * scale, 102 * scale, 186 * scale, 103 * scale);\r\n    ctx.bezierCurveTo(191 * scale, 104 * scale, 192 * scale, 105 * scale, 185 * scale, 116 * scale);\r\n    ctx.bezierCurveTo(183 * scale, 120 * scale, 191 * scale, 124 * scale, 189 * scale, 129 * scale);\r\n    ctx.bezierCurveTo(185 * scale, 139 * scale, 178 * scale, 134 * scale, 166 * scale, 131 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(60 * scale, 46 * scale);\r\n    ctx.bezierCurveTo(60 * scale, 34 * scale, 60 * scale, 29 * scale, 56 * scale, 19 * scale);\r\n    ctx.bezierCurveTo(52 * scale, 12 * scale, 52 * scale, 16 * scale, 49 * scale, 24 * scale);\r\n    ctx.bezierCurveTo(48 * scale, 27 * scale, 46 * scale, 28 * scale, 39 * scale, 27 * scale);\r\n    ctx.bezierCurveTo(33 * scale, 26 * scale, 34 * scale, 31 * scale, 35 * scale, 37 * scale);\r\n    ctx.bezierCurveTo(36 * scale, 41 * scale, 27 * scale, 46 * scale, 29 * scale, 52 * scale);\r\n    ctx.bezierCurveTo(36 * scale, 55 * scale, 35 * scale, 56 * scale, 31 * scale, 59 * scale);\r\n    ctx.bezierCurveTo(27 * scale, 65 * scale, 32 * scale, 64 * scale, 35 * scale, 62 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[5], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(46 * scale, 50 * scale);\r\n    ctx.bezierCurveTo(51 * scale, 35 * scale, 70 * scale, 32 * scale, 78 * scale, 29 * scale);\r\n    ctx.bezierCurveTo(84 * scale, 27 * scale, 113 * scale, 36 * scale, 127 * scale, 41 * scale);\r\n    ctx.bezierCurveTo(140 * scale, 47 * scale, 147 * scale, 69 * scale, 137 * scale, 73 * scale);\r\n    ctx.bezierCurveTo(124 * scale, 92 * scale, 117 * scale, 92 * scale, 109 * scale, 94 * scale);\r\n    ctx.bezierCurveTo(101 * scale, 96 * scale, 89 * scale, 92 * scale, 65 * scale, 83 * scale);\r\n    ctx.bezierCurveTo(54 * scale, 80 * scale, 46 * scale, 58 * scale, 46 * scale, 51 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[5], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(51 * scale, 40 * scale);\r\n    ctx.bezierCurveTo(49 * scale, 34 * scale, 49 * scale, 34 * scale, 47 * scale, 28 * scale);\r\n    ctx.bezierCurveTo(38 * scale, 28 * scale, 34 * scale, 27 * scale, 37 * scale, 37 * scale);\r\n    ctx.bezierCurveTo(43 * scale, 40.5 * scale, 43 * scale, 40.5 * scale, 49 * scale, 44 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[7]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(29 * scale, 48 * scale);\r\n    ctx.bezierCurveTo(38 * scale, 49 * scale, 38 * scale, 49 * scale, 47 * scale, 50 * scale);\r\n    ctx.bezierCurveTo(46.5 * scale, 51.5 * scale, 46.5 * scale, 51.5 * scale, 46 * scale, 53 * scale);\r\n    ctx.bezierCurveTo(40 * scale, 53.5 * scale, 40 * scale, 53.5 * scale, 34 * scale, 54 * scale);\r\n    ctx.bezierCurveTo(29 * scale, 51 * scale, 32 * scale, 51.5 * scale, 30 * scale, 49 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[7]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(89 * scale, 61 * scale);\r\n    ctx.bezierCurveTo(101 * scale, 70 * scale, 109 * scale, 90 * scale, 102 * scale, 90 * scale);\r\n    ctx.bezierCurveTo(97 * scale, 91 * scale, 87 * scale, 91 * scale, 60 * scale, 80 * scale);\r\n    ctx.bezierCurveTo(48 * scale, 65 * scale, 46 * scale, 56 * scale, 48 * scale, 53 * scale);\r\n    ctx.bezierCurveTo(50 * scale, 52 * scale, 66 * scale, 56 * scale, 89 * scale, 61 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[7]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(99 * scale, 59 * scale);\r\n    ctx.bezierCurveTo(115 * scale, 45 * scale, 125 * scale, 42 * scale, 129 * scale, 47 * scale);\r\n    ctx.bezierCurveTo(138 * scale, 56 * scale, 140 * scale, 63 * scale, 138 * scale, 67 * scale);\r\n    ctx.bezierCurveTo(131 * scale, 80 * scale, 122 * scale, 87 * scale, 114 * scale, 90 * scale);\r\n    ctx.bezierCurveTo(105 * scale, 80 * scale, 95 * scale, 62 * scale, 98 * scale, 61 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[7]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(118 * scale, 62 * scale);\r\n    ctx.bezierCurveTo(139 * scale, 45 * scale, 153 * scale, 40 * scale, 150 * scale, 48 * scale);\r\n    ctx.bezierCurveTo(145 * scale, 57 * scale, 157 * scale, 63 * scale, 157 * scale, 70 * scale);\r\n    ctx.bezierCurveTo(157 * scale, 74 * scale, 142 * scale, 77 * scale, 142 * scale, 85 * scale);\r\n    ctx.bezierCurveTo(143 * scale, 91 * scale, 141 * scale, 92 * scale, 135 * scale, 90 * scale);\r\n    ctx.bezierCurveTo(132 * scale, 90 * scale, 132 * scale, 96 * scale, 124 * scale, 99 * scale);\r\n    ctx.bezierCurveTo(118 * scale, 93 * scale, 116 * scale, 77 * scale, 116 * scale, 64 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[5], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(90 * scale, 130 * scale);\r\n    ctx.bezierCurveTo(157 * scale, 115 * scale, 165 * scale, 111 * scale, 167 * scale, 115 * scale);\r\n    ctx.bezierCurveTo(170 * scale, 117 * scale, 171 * scale, 135 * scale, 167 * scale, 141 * scale);\r\n    ctx.bezierCurveTo(135.5 * scale, 149.5 * scale, 135.5 * scale, 149.5 * scale, 104 * scale, 158 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[8]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(53 * scale, 119 * scale);\r\n    ctx.bezierCurveTo(46 * scale, 120 * scale, 40 * scale, 118 * scale, 34 * scale, 116 * scale);\r\n    ctx.bezierCurveTo(28 * scale, 111 * scale, 41 * scale, 112 * scale, 39 * scale, 108 * scale);\r\n    ctx.bezierCurveTo(36 * scale, 100 * scale, 49 * scale, 102 * scale, 53 * scale, 95 * scale);\r\n    ctx.bezierCurveTo(57 * scale, 84 * scale, 58 * scale, 85 * scale, 63 * scale, 93 * scale);\r\n    ctx.bezierCurveTo(68 * scale, 96 * scale, 72 * scale, 94 * scale, 80 * scale, 88 * scale);\r\n    ctx.bezierCurveTo(80 * scale, 96 * scale, 78 * scale, 107 * scale, 66 * scale, 115 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[9], color[10], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(118 * scale, 64 * scale);\r\n    ctx.bezierCurveTo(133.5 * scale, 57 * scale, 133.5 * scale, 57 * scale, 149 * scale, 50 * scale);\r\n    ctx.bezierCurveTo(145 * scale, 54 * scale, 154 * scale, 65 * scale, 157 * scale, 68 * scale);\r\n    ctx.bezierCurveTo(138.5 * scale, 66.5 * scale, 138.5 * scale, 66.5 * scale, 120 * scale, 65 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[8]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(118 * scale, 65 * scale);\r\n    ctx.bezierCurveTo(129 * scale, 77 * scale, 129 * scale, 77 * scale, 140 * scale, 89 * scale);\r\n    ctx.bezierCurveTo(131 * scale, 89 * scale, 130 * scale, 92 * scale, 128 * scale, 96 * scale);\r\n    ctx.bezierCurveTo(123.5 * scale, 82 * scale, 123.5 * scale, 82 * scale, 119 * scale, 68 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[8]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(51 * scale, 112 * scale);\r\n    ctx.bezierCurveTo(63 * scale, 108 * scale, 78 * scale, 111 * scale, 88 * scale, 112 * scale);\r\n    ctx.bezierCurveTo(98 * scale, 122 * scale, 117 * scale, 136 * scale, 125 * scale, 157 * scale);\r\n    ctx.bezierCurveTo(123 * scale, 180 * scale, 123 * scale, 185 * scale, 118 * scale, 186 * scale);\r\n    ctx.bezierCurveTo(101 * scale, 190 * scale, 89 * scale, 191 * scale, 79 * scale, 187 * scale);\r\n    ctx.bezierCurveTo(53 * scale, 165 * scale, 50 * scale, 153 * scale, 47 * scale, 144 * scale);\r\n    ctx.bezierCurveTo(46 * scale, 128 * scale, 46 * scale, 124 * scale, 50 * scale, 112 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[9], color[10], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(50 * scale, 114 * scale);\r\n    ctx.bezierCurveTo(81 * scale, 149 * scale, 80 * scale, 147 * scale, 80 * scale, 149 * scale);\r\n    ctx.bezierCurveTo(82 * scale, 155 * scale, 80 * scale, 182 * scale, 74 * scale, 182 * scale);\r\n    ctx.bezierCurveTo(60 * scale, 172 * scale, 52 * scale, 157 * scale, 47 * scale, 144 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[11], color[11], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(85 * scale, 152 * scale);\r\n    ctx.bezierCurveTo(99 * scale, 150 * scale, 109 * scale, 152 * scale, 119 * scale, 156 * scale);\r\n    ctx.bezierCurveTo(122 * scale, 163 * scale, 122 * scale, 174 * scale, 117 * scale, 182 * scale);\r\n    ctx.closePath();\r\n    ctx.bezierCurveTo(93 * scale, 188 * scale, 82 * scale, 187 * scale, 83 * scale, 179 * scale);\r\n    fill_path(ctx, color[11], color[11], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(104 * scale, 166 * scale);\r\n    ctx.bezierCurveTo(133 * scale, 165 * scale, 142 * scale, 168 * scale, 137 * scale, 173 * scale);\r\n    ctx.bezierCurveTo(127 * scale, 177 * scale, 137 * scale, 195 * scale, 126 * scale, 196 * scale);\r\n    ctx.bezierCurveTo(112 * scale, 195 * scale, 112 * scale, 194 * scale, 109 * scale, 199 * scale);\r\n    ctx.bezierCurveTo(105 * scale, 205 * scale, 102 * scale, 195 * scale, 96 * scale, 197 * scale);\r\n    ctx.bezierCurveTo(84 * scale, 201 * scale, 88 * scale, 198 * scale, 90 * scale, 187 * scale);\r\n    ctx.bezierCurveTo(96 * scale, 171 * scale, 97 * scale, 170 * scale, 103 * scale, 167 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[9], color[10], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(105 * scale, 168 * scale);\r\n    ctx.bezierCurveTo(118 * scale, 172.5 * scale, 118 * scale, 172.5 * scale, 131 * scale, 177 * scale);\r\n    ctx.bezierCurveTo(133 * scale, 190 * scale, 132 * scale, 199 * scale, 116 * scale, 194 * scale);\r\n    ctx.bezierCurveTo(110 * scale, 182 * scale, 110 * scale, 182 * scale, 104 * scale, 170 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[10]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(102 * scale, 169 * scale);\r\n    ctx.bezierCurveTo(100.5 * scale, 182 * scale, 100.5 * scale, 182 * scale, 99 * scale, 195 * scale);\r\n    ctx.bezierCurveTo(93.5 * scale, 196.5 * scale, 93.5 * scale, 196.5 * scale, 88 * scale, 198 * scale);\r\n    ctx.bezierCurveTo(94 * scale, 176 * scale, 96 * scale, 174 * scale, 101 * scale, 168 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[9], color[9], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(64 * scale, 107 * scale);\r\n    ctx.bezierCurveTo(64 * scale, 101 * scale, 64 * scale, 101 * scale, 64 * scale, 95 * scale);\r\n    ctx.bezierCurveTo(57 * scale, 86 * scale, 57 * scale, 84 * scale, 53 * scale, 97 * scale);\r\n    ctx.bezierCurveTo(55 * scale, 103.5 * scale, 55 * scale, 103.5 * scale, 57 * scale, 110 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[11], color[11], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(40 * scale, 108 * scale);\r\n    ctx.bezierCurveTo(46.5 * scale, 111 * scale, 46.5 * scale, 111 * scale, 53 * scale, 114 * scale);\r\n    ctx.bezierCurveTo(50.5 * scale, 117 * scale, 50.5 * scale, 117 * scale, 48 * scale, 120 * scale);\r\n    ctx.bezierCurveTo(40.5 * scale, 117.5 * scale, 40.5 * scale, 117.5 * scale, 33 * scale, 115 * scale);\r\n    ctx.bezierCurveTo(36 * scale, 112 * scale, 36 * scale, 112 * scale, 39 * scale, 109 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[11], color[11], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(189 * scale, 106 * scale);\r\n    ctx.bezierCurveTo(178.5 * scale, 110.5 * scale, 178.5 * scale, 110.5 * scale, 168 * scale, 115 * scale);\r\n    ctx.bezierCurveTo(168.5 * scale, 119 * scale, 168.5 * scale, 119 * scale, 169 * scale, 123 * scale);\r\n    ctx.bezierCurveTo(179 * scale, 124.5 * scale, 179 * scale, 124.5 * scale, 189 * scale, 126 * scale);\r\n    ctx.bezierCurveTo(182 * scale, 118 * scale, 183 * scale, 115 * scale, 188 * scale, 106 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[8]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(69 * scale, 178 * scale);\r\n    ctx.bezierCurveTo(69 * scale, 141 * scale, 70 * scale, 136 * scale, 77 * scale, 137 * scale);\r\n    ctx.bezierCurveTo(88 * scale, 133 * scale, 101 * scale, 134 * scale, 108 * scale, 137 * scale);\r\n    fill_path(ctx, undefined, color[3], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(55 * scale, 161 * scale);\r\n    ctx.bezierCurveTo(54 * scale, 124 * scale, 55 * scale, 119 * scale, 62 * scale, 119 * scale);\r\n    ctx.bezierCurveTo(74 * scale, 117 * scale, 85 * scale, 117 * scale, 93 * scale, 119 * scale);\r\n    fill_path(ctx, undefined, color[3], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(91 * scale, 29 * scale);\r\n    ctx.bezierCurveTo(74 * scale, 33 * scale, 62 * scale, 46 * scale, 57 * scale, 54 * scale);\r\n    ctx.bezierCurveTo(57 * scale, 63 * scale, 68 * scale, 76 * scale, 77 * scale, 87 * scale);\r\n    fill_path(ctx, undefined, color[6], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(107 * scale, 33 * scale);\r\n    ctx.bezierCurveTo(82 * scale, 51 * scale, 80 * scale, 52 * scale, 79 * scale, 59 * scale);\r\n    ctx.bezierCurveTo(78 * scale, 65 * scale, 93 * scale, 86 * scale, 101 * scale, 93 * scale);\r\n    fill_path(ctx, undefined, color[6], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(130 * scale, 98 * scale);\r\n    ctx.bezierCurveTo(126.5 * scale, 103 * scale, 126.5 * scale, 103 * scale, 123 * scale, 108 * scale);\r\n    ctx.bezierCurveTo(133.5 * scale, 107 * scale, 133.5 * scale, 107 * scale, 144 * scale, 106 * scale);\r\n    ctx.bezierCurveTo(138.5 * scale, 110 * scale, 138.5 * scale, 110 * scale, 133 * scale, 114 * scale);\r\n    ctx.bezierCurveTo(142 * scale, 114 * scale, 142 * scale, 114 * scale, 151 * scale, 114 * scale);\r\n    ctx.bezierCurveTo(146.5 * scale, 119.5 * scale, 146.5 * scale, 119.5 * scale, 142 * scale, 125 * scale);\r\n    ctx.bezierCurveTo(146.5 * scale, 127 * scale, 146.5 * scale, 127 * scale, 151 * scale, 129 * scale);\r\n    ctx.bezierCurveTo(147.5 * scale, 132 * scale, 147.5 * scale, 132 * scale, 144 * scale, 135 * scale);\r\n    ctx.bezierCurveTo(148 * scale, 137 * scale, 148 * scale, 137 * scale, 152 * scale, 139 * scale);\r\n    ctx.bezierCurveTo(149 * scale, 142.5 * scale, 149 * scale, 142.5 * scale, 146 * scale, 146 * scale);\r\n    fill_path(ctx, undefined, color[3], 4 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_ferrero_rocher(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 118 * scale;\r\n    can.height = 114 * scale;\r\n    ctx.translate(0, 10 * scale);\r\n    circle(ctx, 42 * scale, 43 * scale, 24.758836806279895 * scale);\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(65 * scale, 90 * scale);\r\n    ctx.bezierCurveTo(72 * scale, 91 * scale, 75 * scale, 92 * scale, 71 * scale, 96 * scale);\r\n    ctx.bezierCurveTo(65 * scale, 98 * scale, 65 * scale, 94 * scale, 65 * scale, 91 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(87 * scale, 45 * scale);\r\n    ctx.bezierCurveTo(108 * scale, 59 * scale, 100 * scale, 86 * scale, 85 * scale, 91 * scale);\r\n    ctx.bezierCurveTo(80 * scale, 96 * scale, 68 * scale, 95 * scale, 58 * scale, 87 * scale);\r\n    ctx.bezierCurveTo(53 * scale, 80 * scale, 61 * scale, 64 * scale, 66 * scale, 58 * scale);\r\n    ctx.bezierCurveTo(73 * scale, 48 * scale, 78 * scale, 44 * scale, 87 * scale, 45 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.translate(0, -10 * scale);\r\n    circle(ctx, 42 * scale, 43 * scale, 24.758836806279895 * scale);\r\n    fill_path(ctx, color[1], color[2], 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(65 * scale, 90 * scale);\r\n    ctx.bezierCurveTo(72 * scale, 91 * scale, 75 * scale, 92 * scale, 71 * scale, 96 * scale);\r\n    ctx.bezierCurveTo(65 * scale, 98 * scale, 65 * scale, 94 * scale, 65 * scale, 91 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(87 * scale, 45 * scale);\r\n    ctx.bezierCurveTo(108 * scale, 59 * scale, 100 * scale, 86 * scale, 85 * scale, 91 * scale);\r\n    ctx.bezierCurveTo(80 * scale, 96 * scale, 68 * scale, 95 * scale, 58 * scale, 87 * scale);\r\n    ctx.bezierCurveTo(53 * scale, 80 * scale, 61 * scale, 64 * scale, 66 * scale, 58 * scale);\r\n    ctx.bezierCurveTo(73 * scale, 48 * scale, 78 * scale, 44 * scale, 87 * scale, 45 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(52 * scale, 16 * scale);\r\n    ctx.bezierCurveTo(55 * scale, 19 * scale, 54 * scale, 20 * scale, 55 * scale, 22 * scale);\r\n    ctx.bezierCurveTo(52 * scale, 24.5 * scale, 52 * scale, 24.5 * scale, 49 * scale, 27 * scale);\r\n    ctx.bezierCurveTo(45 * scale, 25 * scale, 45 * scale, 25 * scale, 41 * scale, 23 * scale);\r\n    ctx.bezierCurveTo(45 * scale, 19 * scale, 48 * scale, 16 * scale, 52 * scale, 16 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[4], 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(62 * scale, 30 * scale);\r\n    ctx.bezierCurveTo(66 * scale, 29 * scale, 64 * scale, 30 * scale, 66 * scale, 30 * scale);\r\n    ctx.bezierCurveTo(67 * scale, 31 * scale, 67 * scale, 31 * scale, 68 * scale, 32 * scale);\r\n    ctx.bezierCurveTo(66.5 * scale, 33.5 * scale, 66.5 * scale, 33.5 * scale, 65 * scale, 35 * scale);\r\n    ctx.bezierCurveTo(63.5 * scale, 32.5 * scale, 63.5 * scale, 32.5 * scale, 62 * scale, 30 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[4], 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(29 * scale, 21 * scale);\r\n    ctx.bezierCurveTo(31 * scale, 22 * scale, 31 * scale, 26 * scale, 29 * scale, 29 * scale);\r\n    ctx.bezierCurveTo(26 * scale, 28.5 * scale, 26 * scale, 28.5 * scale, 23 * scale, 28 * scale);\r\n    ctx.bezierCurveTo(23 * scale, 26.5 * scale, 23 * scale, 26.5 * scale, 23 * scale, 25 * scale);\r\n    ctx.bezierCurveTo(25 * scale, 23 * scale, 25 * scale, 23 * scale, 27 * scale, 21 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[4], 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(18 * scale, 36 * scale);\r\n    ctx.bezierCurveTo(23 * scale, 36 * scale, 24 * scale, 42 * scale, 19 * scale, 46 * scale);\r\n    ctx.bezierCurveTo(12 * scale, 39 * scale, 15 * scale, 38 * scale, 18 * scale, 37 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[4], 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(30 * scale, 34 * scale);\r\n    ctx.bezierCurveTo(35 * scale, 36 * scale, 36 * scale, 39 * scale, 32 * scale, 45 * scale);\r\n    ctx.bezierCurveTo(25 * scale, 46 * scale, 25 * scale, 44 * scale, 30 * scale, 34 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[4], 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(59 * scale, 35 * scale);\r\n    ctx.bezierCurveTo(58 * scale, 27 * scale, 57 * scale, 27 * scale, 52 * scale, 31 * scale);\r\n    ctx.bezierCurveTo(50 * scale, 36 * scale, 53 * scale, 38 * scale, 58 * scale, 36 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[4], 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(63 * scale, 46 * scale);\r\n    ctx.bezierCurveTo(64.5 * scale, 46.5 * scale, 64.5 * scale, 46.5 * scale, 66 * scale, 47 * scale);\r\n    ctx.bezierCurveTo(70 * scale, 50 * scale, 70 * scale, 53 * scale, 61 * scale, 55 * scale);\r\n    ctx.bezierCurveTo(62 * scale, 50.5 * scale, 62 * scale, 50.5 * scale, 63 * scale, 46 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[4], 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(41 * scale, 42 * scale);\r\n    ctx.bezierCurveTo(47 * scale, 41 * scale, 53 * scale, 47 * scale, 46 * scale, 51 * scale);\r\n    ctx.bezierCurveTo(38 * scale, 49 * scale, 39 * scale, 46 * scale, 41 * scale, 43 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[4], 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(44 * scale, 57 * scale);\r\n    ctx.bezierCurveTo(54 * scale, 57 * scale, 54 * scale, 58 * scale, 55 * scale, 61 * scale);\r\n    ctx.bezierCurveTo(54 * scale, 63 * scale, 52 * scale, 64 * scale, 48 * scale, 65 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[4], 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(20 * scale, 52 * scale);\r\n    ctx.bezierCurveTo(25 * scale, 51 * scale, 27 * scale, 50 * scale, 28 * scale, 54 * scale);\r\n    ctx.bezierCurveTo(27 * scale, 58 * scale, 24 * scale, 58 * scale, 22 * scale, 58 * scale);\r\n    ctx.bezierCurveTo(21 * scale, 55.5 * scale, 21 * scale, 55.5 * scale, 20 * scale, 53 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[4], 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(30 * scale, 61 * scale);\r\n    ctx.bezierCurveTo(37 * scale, 61 * scale, 39 * scale, 63 * scale, 39 * scale, 68 * scale);\r\n    ctx.bezierCurveTo(36 * scale, 68.5 * scale, 36 * scale, 68.5 * scale, 33 * scale, 69 * scale);\r\n    ctx.bezierCurveTo(30.5 * scale, 67.5 * scale, 30.5 * scale, 67.5 * scale, 28 * scale, 66 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[4], 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(88 * scale, 45 * scale);\r\n    ctx.bezierCurveTo(90 * scale, 46.5 * scale, 90 * scale, 46.5 * scale, 92 * scale, 48 * scale);\r\n    ctx.bezierCurveTo(92 * scale, 50 * scale, 92 * scale, 50 * scale, 92 * scale, 52 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[4], 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(96 * scale, 53 * scale);\r\n    ctx.bezierCurveTo(97.5 * scale, 55 * scale, 97.5 * scale, 55 * scale, 99 * scale, 57 * scale);\r\n    ctx.bezierCurveTo(97.5 * scale, 59.5 * scale, 97.5 * scale, 59.5 * scale, 96 * scale, 62 * scale);\r\n    ctx.bezierCurveTo(93.5 * scale, 60.5 * scale, 93.5 * scale, 60.5 * scale, 91 * scale, 59 * scale);\r\n    ctx.bezierCurveTo(91.5 * scale, 57 * scale, 91.5 * scale, 57 * scale, 92 * scale, 55 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[4], 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(92 * scale, 71 * scale);\r\n    ctx.bezierCurveTo(94.5 * scale, 70.5 * scale, 94.5 * scale, 70.5 * scale, 97 * scale, 70 * scale);\r\n    ctx.bezierCurveTo(98.5 * scale, 72.5 * scale, 98.5 * scale, 72.5 * scale, 100 * scale, 75 * scale);\r\n    ctx.bezierCurveTo(97 * scale, 76.5 * scale, 97 * scale, 76.5 * scale, 94 * scale, 78 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[4], 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(95 * scale, 82 * scale);\r\n    ctx.bezierCurveTo(96 * scale, 83 * scale, 96 * scale, 83 * scale, 97 * scale, 84 * scale);\r\n    ctx.bezierCurveTo(97 * scale, 85.5 * scale, 97 * scale, 85.5 * scale, 97 * scale, 87 * scale);\r\n    ctx.bezierCurveTo(93.5 * scale, 87.5 * scale, 93.5 * scale, 87.5 * scale, 90 * scale, 88 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[4], 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(86 * scale, 72 * scale);\r\n    ctx.bezierCurveTo(89 * scale, 76 * scale, 88 * scale, 81 * scale, 85 * scale, 82 * scale);\r\n    ctx.bezierCurveTo(80 * scale, 80 * scale, 82 * scale, 78 * scale, 85 * scale, 72 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[4], 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(80 * scale, 86 * scale);\r\n    ctx.bezierCurveTo(84 * scale, 88 * scale, 86 * scale, 88 * scale, 85 * scale, 93 * scale);\r\n    ctx.bezierCurveTo(80 * scale, 96 * scale, 79 * scale, 96 * scale, 76 * scale, 91 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[4], 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(84 * scale, 46 * scale);\r\n    ctx.bezierCurveTo(93 * scale, 51 * scale, 91 * scale, 62 * scale, 80 * scale, 78 * scale);\r\n    ctx.bezierCurveTo(74 * scale, 86 * scale, 66 * scale, 90 * scale, 60 * scale, 86 * scale);\r\n    ctx.bezierCurveTo(55 * scale, 79 * scale, 57 * scale, 73 * scale, 67 * scale, 57 * scale);\r\n    ctx.bezierCurveTo(71 * scale, 51 * scale, 79 * scale, 44 * scale, 84 * scale, 46 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[5], color[6], 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(76 * scale, 60 * scale);\r\n    ctx.bezierCurveTo(80 * scale, 66 * scale, 75 * scale, 74 * scale, 68 * scale, 74 * scale);\r\n    ctx.bezierCurveTo(60 * scale, 64 * scale, 68 * scale, 59 * scale, 76 * scale, 59 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[7], color[8], 5 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_seed(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    var w = scale * 70;\r\n    var h = scale * 90;\r\n    var width = scale * 4;\r\n    var shadow = scale * 5;\r\n    var w2 = w / 2;\r\n    var h2 = h / 2;\r\n    var round = scale * 10;\r\n    var wr = scale * 100;\r\n    var hr = scale * 100;\r\n    var wr2 = wr / 2;\r\n    var hr2 = hr / 2;\r\n    can.width = w;\r\n    can.height = h;\r\n    ctx.save();\r\n    ctx.translate(-80 * scale, -70 * scale + shadow);\r\n    ctx.globalAlpha = 0.5;\r\n    ctx.beginPath();\r\n    ctx.bezierCurveTo(130 * scale, 79 * scale, 132 * scale, 86 * scale, 130 * scale, 93 * scale);\r\n    ctx.bezierCurveTo(128 * scale, 100 * scale, 121 * scale, 107 * scale, 120 * scale, 107 * scale);\r\n    ctx.bezierCurveTo(120 * scale, 107 * scale, 115 * scale, 98 * scale, 115 * scale, 92 * scale);\r\n    ctx.bezierCurveTo(115 * scale, 86 * scale, 119 * scale, 76 * scale, 127 * scale, 73 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, \"#0d1b1c\");\r\n    ctx.restore();\r\n    ctx.save();\r\n    ctx.translate(-80 * scale, -70 * scale + shadow);\r\n    ctx.globalAlpha = 0.5;\r\n    ctx.beginPath();\r\n    ctx.bezierCurveTo(112 * scale, 109 * scale, 111 * scale, 100 * scale, 106 * scale, 93 * scale);\r\n    ctx.bezierCurveTo(104 * scale, 90 * scale, 91 * scale, 87 * scale, 91 * scale, 87 * scale);\r\n    ctx.bezierCurveTo(91 * scale, 88 * scale, 91 * scale, 96 * scale, 94 * scale, 102 * scale);\r\n    ctx.bezierCurveTo(97 * scale, 108 * scale, 106 * scale, 112 * scale, 113 * scale, 112 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, \"#0d1b1c\");\r\n    ctx.restore();\r\n    ctx.save();\r\n    ctx.translate(-80 * scale, -70 * scale + shadow);\r\n    ctx.globalAlpha = 0.5;\r\n    ctx.beginPath();\r\n    ctx.bezierCurveTo(108 * scale, 120 * scale, 100 * scale, 119 * scale, 91 * scale, 127 * scale);\r\n    ctx.bezierCurveTo(83 * scale, 134 * scale, 82 * scale, 146 * scale, 83 * scale, 146 * scale);\r\n    ctx.bezierCurveTo(84 * scale, 146 * scale, 98 * scale, 142 * scale, 103 * scale, 138 * scale);\r\n    ctx.bezierCurveTo(107 * scale, 135 * scale, 110 * scale, 130 * scale, 112 * scale, 121 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, \"#0d1b1c\");\r\n    ctx.restore();\r\n    ctx.save();\r\n    ctx.translate(3 * scale, -93 * scale + shadow);\r\n    ctx.rotate(Math.PI / 5);\r\n    ctx.globalAlpha = 0.5;\r\n    ctx.beginPath();\r\n    ctx.bezierCurveTo(130 * scale, 79 * scale, 132 * scale, 86 * scale, 130 * scale, 93 * scale);\r\n    ctx.bezierCurveTo(128 * scale, 100 * scale, 121 * scale, 107 * scale, 120 * scale, 107 * scale);\r\n    ctx.bezierCurveTo(120 * scale, 107 * scale, 115 * scale, 98 * scale, 115 * scale, 92 * scale);\r\n    ctx.bezierCurveTo(115 * scale, 86 * scale, 119 * scale, 76 * scale, 127 * scale, 73 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, \"#0d1b1c\");\r\n    ctx.restore();\r\n    ctx.save();\r\n    ctx.translate(-80 * scale, -70 * scale);\r\n    ctx.globalAlpha = 1;\r\n    ctx.beginPath();\r\n    ctx.bezierCurveTo(130 * scale, 79 * scale, 132 * scale, 86 * scale, 130 * scale, 93 * scale);\r\n    ctx.bezierCurveTo(128 * scale, 100 * scale, 121 * scale, 107 * scale, 120 * scale, 107 * scale);\r\n    ctx.bezierCurveTo(120 * scale, 107 * scale, 115 * scale, 98 * scale, 115 * scale, 92 * scale);\r\n    ctx.bezierCurveTo(115 * scale, 86 * scale, 119 * scale, 76 * scale, 127 * scale, 73 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[1], width);\r\n    ctx.restore();\r\n    ctx.save();\r\n    ctx.translate(-80 * scale, -70 * scale);\r\n    ctx.globalAlpha = 1;\r\n    ctx.beginPath();\r\n    ctx.bezierCurveTo(112 * scale, 109 * scale, 111 * scale, 100 * scale, 106 * scale, 93 * scale);\r\n    ctx.bezierCurveTo(104 * scale, 90 * scale, 91 * scale, 87 * scale, 91 * scale, 87 * scale);\r\n    ctx.bezierCurveTo(91 * scale, 88 * scale, 91 * scale, 96 * scale, 94 * scale, 102 * scale);\r\n    ctx.bezierCurveTo(97 * scale, 108 * scale, 106 * scale, 112 * scale, 113 * scale, 112 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[1], width);\r\n    ctx.restore();\r\n    ctx.save();\r\n    ctx.translate(-80 * scale, -70 * scale);\r\n    ctx.globalAlpha = 1;\r\n    ctx.beginPath();\r\n    ctx.bezierCurveTo(108 * scale, 120 * scale, 100 * scale, 119 * scale, 91 * scale, 127 * scale);\r\n    ctx.bezierCurveTo(83 * scale, 134 * scale, 82 * scale, 146 * scale, 83 * scale, 146 * scale);\r\n    ctx.bezierCurveTo(84 * scale, 146 * scale, 98 * scale, 142 * scale, 103 * scale, 138 * scale);\r\n    ctx.bezierCurveTo(107 * scale, 135 * scale, 110 * scale, 130 * scale, 112 * scale, 121 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[1], width);\r\n    ctx.restore();\r\n    ctx.save();\r\n    ctx.translate(3 * scale, -93 * scale);\r\n    ctx.rotate(Math.PI / 5);\r\n    ctx.globalAlpha = 1;\r\n    ctx.beginPath();\r\n    ctx.bezierCurveTo(130 * scale, 79 * scale, 132 * scale, 86 * scale, 130 * scale, 93 * scale);\r\n    ctx.bezierCurveTo(128 * scale, 100 * scale, 121 * scale, 107 * scale, 120 * scale, 107 * scale);\r\n    ctx.bezierCurveTo(120 * scale, 107 * scale, 115 * scale, 98 * scale, 115 * scale, 92 * scale);\r\n    ctx.bezierCurveTo(115 * scale, 86 * scale, 119 * scale, 76 * scale, 127 * scale, 73 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[1], width);\r\n    ctx.restore();\r\n    return can;\r\n}\r\n;\r\nfunction create_info_box(inv) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    var text = LANG[inv];\r\n    ctx.font = \"20px Baloo Paaji\";\r\n    var max_size = 0;\r\n    if (text.length >= 1) max_size = Math.max(0, ctx.measureText(text[0]).width);\r\n    ctx.font = \"17px Baloo Paaji\";\r\n    if (text.length >= 2) max_size = Math.max(max_size, ctx.measureText(text[1]).width);\r\n    ctx.font = \"14px Baloo Paaji\";\r\n    for (i = 2; i < text.length; i++) max_size = Math.max(max_size, ctx.measureText(text[i]).width);\r\n    var width = max_size + 35;\r\n    var text_height = 26;\r\n    var height = 0;\r\n    if (text.length === 1) height = 55; else if (text.length === 2) height = 85; else height = (text.length - 2) * text_height + 85;\r\n    can.width = width;\r\n    can.height = height;\r\n    round_rect(ctx, 0, 0, width, height, 10);\r\n    ctx.fillStyle = \"#000000\";\r\n    ctx.globalAlpha = 0.5;\r\n    ctx.fill();\r\n    if (text.length >= 1) {\r\n        ctx.textBaseline = \"middle\", ctx.font = \"20px Baloo Paaji\";\r\n        ctx.globalAlpha = 1;\r\n        ctx.fillStyle = \"#e2c340\";\r\n        ctx.fillText(text[0], 15, 28);\r\n    }\r\n    if (text.length >= 2) {\r\n        ctx.font = \"17px Baloo Paaji\";\r\n        ctx.fillStyle = \"#ffffff\";\r\n        ctx.fillText(text[1], 15, 55);\r\n        height = 55;\r\n    }\r\n    if (text.length >= 3) {\r\n        ctx.font = \"14px Baloo Paaji\";\r\n        ctx.globalAlpha = 0.7;\r\n        for (i = 2; i < text.length; i++) {\r\n            ctx.fillText(text[i], 15, height + 28);\r\n            height += text_height;\r\n        }\r\n    }\r\n    return can;\r\n}\r\n;\r\nfunction create_welcome_text(text) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    ctx.lineJoin = \"round\";\r\n    while (text.indexOf(\"\\\\n\") !== -1) text = text.replace(\"\\\\n\", \"\\n\");\r\n    text = text.split(\"\\n\");\r\n    color = [];\r\n    var h = 14;\r\n    var height = text.length * (h + 4) + 10;\r\n    var width = 0;\r\n    ctx.font = h + \"px Baloo Paaji\";\r\n    for (var i = 0; i < text.length; i++) {\r\n        if (text[i].charAt(0) === \"#\") {\r\n            color[i] = text[i].substring(0, 7);\r\n            text[i] = text[i].substring(8);\r\n        } else color[i] = \"#FFFFFF\";\r\n        width = Math.max(ctx.measureText(text[i]).width + 16, width);\r\n    }\r\n    can.height = height;\r\n    can.width = width;\r\n    for (var i = 0; i < text.length; i++) {\r\n        var img = create_text(1, text[i], h, color[i], null, null, null, null, null, \"#000\", 6);\r\n        ctx.drawImage(img, 8, i * (h + 4) + 5);\r\n    }\r\n    return can;\r\n}\r\n;\r\n;\r\nfunction create_text(scale, text, h, color, shadow, dist, rounded, radius, max, stroke, line) {\r\n    if (line === undefined) line = 0;\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    dist = !dist ? 0 : dist * scale;\r\n    var height = Math.floor(scale * h);\r\n    ctx.font = height + \"px Baloo Paaji\";\r\n    ctx.lineJoin = \"round\";\r\n    radius = radius * scale;\r\n    var gap = rounded ? radius * 2 : 0;\r\n    if (max) var width = Math.min(ctx.measureText(text).width + 2 * scale + gap, max); else var width = ctx.measureText(text).width + 2 * scale + gap + line * scale * 2;\r\n    var height = (height + dist + line) * scale + gap;\r\n    can.width = width;\r\n    can.height = height;\r\n    if (rounded) {\r\n        ctx.fillStyle = rounded;\r\n        round_rect(ctx, 0, 0, width, height, radius * 2);\r\n        ctx.fill();\r\n        ctx.translate(radius, radius);\r\n    }\r\n    ctx.textBaseline = \"middle\", ctx.font = h + \"px Baloo Paaji\";\r\n    ctx.lineJoin = \"round\";\r\n    if (shadow) {\r\n        ctx.beginPath();\r\n        ctx.fillStyle = shadow;\r\n        ctx.fillText(text, 0, height / 2 + dist - gap / 2, width);\r\n    }\r\n    ctx.beginPath();\r\n    if (stroke) {\r\n        ctx.strokeStyle = stroke;\r\n        ctx.lineWidth = line;\r\n        ctx.strokeText(text, line, (height - gap) / 2, width);\r\n    }\r\n    ctx.fillStyle = color;\r\n    ctx.fillText(text, line, (height - gap) / 2, width);\r\n    return can;\r\n}\r\n;\r\nfunction create_stone(scale, useless, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    var w = scale * 220;\r\n    var h = scale * 230;\r\n    var r = scale * 100;\r\n    var round = r / 4;\r\n    var shadow = scale * 20;\r\n    can.width = w;\r\n    can.height = h;\r\n    ctx.translate(w / 2, h / 2 + shadow);\r\n    ctx.globalAlpha = 0.5;\r\n    round_regular_polygon(ctx, 7, r, round);\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(0, -shadow);\r\n    round_regular_polygon(ctx, 7, r, round);\r\n    fill_path(ctx, color[1]);\r\n    round_regular_polygon(ctx, 6, r * 0.65, round * 0.65);\r\n    fill_path(ctx, color[2]);\r\n    return can;\r\n}\r\n;\r\nfunction create_cave_stone(scale, draw_shadow, color, i) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    var w = scale * 220;\r\n    var h = scale * 220;\r\n    var r = scale * 100;\r\n    var round = r / 4;\r\n    var shadow = scale * 20;\r\n    can.width = w;\r\n    can.height = h;\r\n    ctx.translate(w / 2, h / 2);\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    if (!draw_shadow) ctx.translate(0 * scale, -8 * scale);\r\n    round_regular_polygon(ctx, 7, r, round);\r\n    if (draw_shadow) {\r\n        fill_path(ctx, color[0]);\r\n    } else {\r\n        fill_path(ctx, color[1]);\r\n    }\r\n    ctx.globalAlpha = 1;\r\n    if (i == 0) {\r\n        round_regular_polygon(ctx, 6, r * 0.65, round * 0.65);\r\n        fill_path(ctx, color[2]);\r\n    } else if (i == 1) {\r\n        ctx.translate(20 * scale, 20 * scale);\r\n        round_regular_polygon(ctx, 6, r * 0.45, round * 0.4);\r\n        fill_path(ctx, color[2]);\r\n    }\r\n    return can;\r\n}\r\n;\r\nfunction create_gold(scale, useless, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    var w = scale * 120;\r\n    var h = scale * 150;\r\n    var r = scale * 60;\r\n    var round = r / 4;\r\n    var shadow = scale * 15;\r\n    can.width = w;\r\n    can.height = h;\r\n    ctx.save();\r\n    ctx.translate(w / 2 + 0 * scale, h / 2 + 0 * scale + shadow);\r\n    ctx.rotate(Math.PI / 3);\r\n    ctx.globalAlpha = 0.5;\r\n    round_regular_polygon(ctx, 8, r, round);\r\n    fill_path(ctx, color[0]);\r\n    ctx.restore();\r\n    ctx.save();\r\n    ctx.translate(w / 2 - 11 * scale, h / 2 + 12 * scale);\r\n    ctx.globalAlpha = 1;\r\n    ctx.rotate(Math.PI / 3);\r\n    ctx.translate(0, -shadow);\r\n    round_regular_polygon(ctx, 8, r, round);\r\n    fill_path(ctx, color[1]);\r\n    ctx.restore();\r\n    ctx.save();\r\n    ctx.translate(w / 2 - 9 * scale, h / 2 - 12 * scale);\r\n    ctx.rotate(Math.PI / 2.8);\r\n    round_regular_polygon(ctx, 5, r * 0.5, round * 0.4);\r\n    fill_path(ctx, color[2]);\r\n    ctx.restore();\r\n    ctx.save();\r\n    ctx.translate(w / 2 + 19 * scale, h / 2 + 5 * scale);\r\n    ctx.rotate(Math.PI / 1);\r\n    round_regular_polygon(ctx, 5, r * 0.5, round * 0.4);\r\n    fill_path(ctx, color[2]);\r\n    ctx.restore();\r\n    ctx.save();\r\n    ctx.translate(w / 2 - 8 * scale, h / 2 + 20 * scale);\r\n    ctx.rotate(Math.PI / 2.25);\r\n    round_regular_polygon(ctx, 5, r * 0.5, round * 0.4);\r\n    fill_path(ctx, color[2]);\r\n    ctx.restore();\r\n    return can;\r\n}\r\n;\r\nfunction create_diamond(scale, useless, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    var w = scale * 180;\r\n    var h = scale * 210;\r\n    var r = scale * 60;\r\n    var round = r / 4;\r\n    var shadow = scale * 20;\r\n    can.width = w;\r\n    can.height = h;\r\n    ctx.save();\r\n    ctx.translate(w / 2 - 0 * scale, h / 2 - 35 * scale + shadow);\r\n    ctx.rotate(Math.PI / -1.8);\r\n    ctx.globalAlpha = 0.5;\r\n    ctx.translate(0 * scale, -20 * scale);\r\n    round_regular_polygon(ctx, 5, r, round);\r\n    fill_path(ctx, color[0]);\r\n    ctx.restore();\r\n    ctx.save();\r\n    ctx.translate(w / 2 + 10 * scale, h / 2 + 15 * scale + shadow);\r\n    ctx.rotate(Math.PI / 2);\r\n    ctx.globalAlpha = 0.5;\r\n    ctx.translate(0 * scale, -20 * scale);\r\n    round_regular_polygon(ctx, 5, r, round);\r\n    fill_path(ctx, color[0]);\r\n    ctx.restore();\r\n    ctx.save();\r\n    ctx.translate(w / 2 - 50 * scale, h / 2 + 40 * scale + shadow);\r\n    ctx.rotate(Math.PI / 3);\r\n    ctx.globalAlpha = 0.5;\r\n    ctx.translate(0, -20 * scale);\r\n    round_regular_polygon(ctx, 5, r, round);\r\n    fill_path(ctx, color[0]);\r\n    ctx.restore();\r\n    ctx.save();\r\n    ctx.translate(w / 2 - 0 * scale, h / 2 - 35 * scale);\r\n    ctx.rotate(Math.PI / -1.8);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(0 * scale, -20 * scale);\r\n    round_regular_polygon(ctx, 5, r, round);\r\n    fill_path(ctx, color[1]);\r\n    ctx.restore();\r\n    ctx.save();\r\n    ctx.translate(w / 2 + 10 * scale, h / 2 + 15 * scale);\r\n    ctx.rotate(Math.PI / 2);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(0, -20 * scale);\r\n    round_regular_polygon(ctx, 5, r, round);\r\n    fill_path(ctx, color[1]);\r\n    ctx.restore();\r\n    ctx.save();\r\n    ctx.translate(w / 2 - 50 * scale, h / 2 + 40 * scale);\r\n    ctx.rotate(Math.PI / 3);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(0, -20 * scale);\r\n    round_regular_polygon(ctx, 5, r, round);\r\n    fill_path(ctx, color[1]);\r\n    ctx.restore();\r\n    var r = scale * 30;\r\n    var round = r / 4;\r\n    ctx.save();\r\n    ctx.translate(w / 2 + 5 * scale, h / 2 - 20 * scale);\r\n    ctx.rotate(Math.PI / -1.8);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(0, -20 * scale);\r\n    round_regular_polygon(ctx, 5, r, round);\r\n    fill_path(ctx, color[2]);\r\n    ctx.restore();\r\n    ctx.save();\r\n    ctx.translate(w / 2 + 0 * scale, h / 2 + 10 * scale);\r\n    ctx.rotate(Math.PI / 2);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(0, -20 * scale);\r\n    round_regular_polygon(ctx, 5, r, round);\r\n    fill_path(ctx, color[2]);\r\n    ctx.restore();\r\n    ctx.save();\r\n    ctx.translate(w / 2 - 45 * scale, h / 2 + 35 * scale);\r\n    ctx.rotate(Math.PI / 3);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(0, -20 * scale);\r\n    round_regular_polygon(ctx, 5, r, round);\r\n    fill_path(ctx, color[2]);\r\n    ctx.restore();\r\n    circle(ctx, w / 2 - 7 * scale, h / 2 + 7 * scale, 5);\r\n    fill_path(ctx, color[2]);\r\n    return can;\r\n}\r\n;\r\nfunction create_plant(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    var w = scale * 140;\r\n    var h = scale * 150;\r\n    var shadow = scale * 10;\r\n    var width = scale * 4;\r\n    can.width = w;\r\n    can.height = h;\r\n    ctx.translate(-50 * scale, -38 * scale + shadow);\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.beginPath();\r\n    ctx.bezierCurveTo(160 * scale, 65 * scale, 160 * scale, 85 * scale, 152 * scale, 95 * scale);\r\n    ctx.bezierCurveTo(152 * scale, 95 * scale, 173 * scale, 94 * scale, 187 * scale, 102 * scale);\r\n    ctx.bezierCurveTo(187 * scale, 102 * scale, 180 * scale, 120 * scale, 155 * scale, 126 * scale);\r\n    ctx.bezierCurveTo(154 * scale, 126 * scale, 166 * scale, 138 * scale, 169 * scale, 148 * scale);\r\n    ctx.bezierCurveTo(169 * scale, 148 * scale, 148 * scale, 152 * scale, 133 * scale, 140 * scale);\r\n    ctx.bezierCurveTo(133 * scale, 140 * scale, 134 * scale, 160 * scale, 122 * scale, 175 * scale);\r\n    ctx.bezierCurveTo(122 * scale, 175 * scale, 107 * scale, 162 * scale, 107 * scale, 144 * scale);\r\n    ctx.bezierCurveTo(107 * scale, 144 * scale, 98 * scale, 164 * scale, 73 * scale, 167 * scale);\r\n    ctx.bezierCurveTo(73 * scale, 167 * scale, 72 * scale, 134 * scale, 90 * scale, 127 * scale);\r\n    ctx.bezierCurveTo(90 * scale, 127 * scale, 70 * scale, 134 * scale, 55 * scale, 123 * scale);\r\n    ctx.bezierCurveTo(55 * scale, 123 * scale, 58 * scale, 115 * scale, 75 * scale, 104 * scale);\r\n    ctx.bezierCurveTo(75 * scale, 104 * scale, 66 * scale, 96 * scale, 61 * scale, 77 * scale);\r\n    ctx.bezierCurveTo(61 * scale, 77 * scale, 83 * scale, 74 * scale, 102 * scale, 89 * scale);\r\n    ctx.bezierCurveTo(102 * scale, 89 * scale, 92 * scale, 66 * scale, 110 * scale, 41 * scale);\r\n    ctx.bezierCurveTo(111 * scale, 40 * scale, 130 * scale, 54 * scale, 130 * scale, 82 * scale);\r\n    ctx.bezierCurveTo(130 * scale, 82 * scale, 143 * scale, 67 * scale, 159 * scale, 65 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.translate(0, 0 - shadow);\r\n    ctx.globalAlpha = 1;\r\n    ctx.beginPath();\r\n    ctx.bezierCurveTo(160 * scale, 65 * scale, 160 * scale, 85 * scale, 152 * scale, 95 * scale);\r\n    ctx.bezierCurveTo(152 * scale, 95 * scale, 173 * scale, 94 * scale, 187 * scale, 102 * scale);\r\n    ctx.bezierCurveTo(187 * scale, 102 * scale, 180 * scale, 120 * scale, 155 * scale, 126 * scale);\r\n    ctx.bezierCurveTo(154 * scale, 126 * scale, 166 * scale, 138 * scale, 169 * scale, 148 * scale);\r\n    ctx.bezierCurveTo(169 * scale, 148 * scale, 148 * scale, 152 * scale, 133 * scale, 140 * scale);\r\n    ctx.bezierCurveTo(133 * scale, 140 * scale, 134 * scale, 160 * scale, 122 * scale, 175 * scale);\r\n    ctx.bezierCurveTo(122 * scale, 175 * scale, 107 * scale, 162 * scale, 107 * scale, 144 * scale);\r\n    ctx.bezierCurveTo(107 * scale, 144 * scale, 98 * scale, 164 * scale, 73 * scale, 167 * scale);\r\n    ctx.bezierCurveTo(73 * scale, 167 * scale, 72 * scale, 134 * scale, 90 * scale, 127 * scale);\r\n    ctx.bezierCurveTo(90 * scale, 127 * scale, 70 * scale, 134 * scale, 55 * scale, 123 * scale);\r\n    ctx.bezierCurveTo(55 * scale, 123 * scale, 58 * scale, 115 * scale, 75 * scale, 104 * scale);\r\n    ctx.bezierCurveTo(75 * scale, 104 * scale, 66 * scale, 96 * scale, 61 * scale, 77 * scale);\r\n    ctx.bezierCurveTo(61 * scale, 77 * scale, 83 * scale, 74 * scale, 102 * scale, 89 * scale);\r\n    ctx.bezierCurveTo(102 * scale, 89 * scale, 92 * scale, 66 * scale, 110 * scale, 41 * scale);\r\n    ctx.bezierCurveTo(111 * scale, 40 * scale, 130 * scale, 54 * scale, 130 * scale, 82 * scale);\r\n    ctx.bezierCurveTo(130 * scale, 82 * scale, 143 * scale, 67 * scale, 159 * scale, 65 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], width);\r\n    return can;\r\n}\r\n;\r\nfunction create_fruit(scale, useless, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    var w = scale * 18;\r\n    var h = scale * 18;\r\n    can.width = w;\r\n    can.height = h;\r\n    var x = scale * 9;\r\n    var y = scale * 9;\r\n    var r = scale * 8;\r\n    ctx.save();\r\n    ctx.translate(x, y);\r\n    ctx.globalAlpha = 1;\r\n    circle(ctx, 0, 0, r);\r\n    fill_path(ctx, color[0]);\r\n    var r = 3 * scale;\r\n    var x = 0;\r\n    var y = -3 * scale;\r\n    ctx.translate(x, y);\r\n    ctx.globalAlpha = 1;\r\n    circle(ctx, 0, 0, r);\r\n    fill_path(ctx, color[1]);\r\n    ctx.restore();\r\n    return can;\r\n}\r\n;\r\nfunction create_leaf(scale, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 80 * scale;\r\n    can.height = 100 * scale;\r\n    ctx.scale(0.5, 0.5);\r\n    ctx.translate(10, 15);\r\n    ctx.globalAlpha = 0.5;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(47 * scale, 5 * scale);\r\n    ctx.bezierCurveTo(19 * scale, 30 * scale, 12 * scale, 42 * scale, 10 * scale, 55 * scale);\r\n    ctx.bezierCurveTo(11 * scale, 75 * scale, 27 * scale, 76 * scale, 36 * scale, 72 * scale);\r\n    ctx.bezierCurveTo(52 * scale, 60 * scale, 53 * scale, 46 * scale, 54 * scale, 31 * scale);\r\n    ctx.bezierCurveTo(53 * scale, 14 * scale, 50 * scale, 9 * scale, 48 * scale, 6 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(17 * scale, 70 * scale);\r\n    ctx.bezierCurveTo(18 * scale, 77 * scale, 10 * scale, 83 * scale, 4 * scale, 87 * scale);\r\n    fill_path(ctx, undefined, color[0], scale * 10);\r\n    ctx.translate(0, -10);\r\n    ctx.globalAlpha = 1;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(47 * scale, 5 * scale);\r\n    ctx.bezierCurveTo(19 * scale, 30 * scale, 12 * scale, 42 * scale, 10 * scale, 55 * scale);\r\n    ctx.bezierCurveTo(11 * scale, 75 * scale, 27 * scale, 76 * scale, 36 * scale, 72 * scale);\r\n    ctx.bezierCurveTo(52 * scale, 60 * scale, 53 * scale, 46 * scale, 54 * scale, 31 * scale);\r\n    ctx.bezierCurveTo(53 * scale, 14 * scale, 50 * scale, 9 * scale, 48 * scale, 6 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(17 * scale, 70 * scale);\r\n    ctx.bezierCurveTo(18 * scale, 77 * scale, 10 * scale, 83 * scale, 4 * scale, 87 * scale);\r\n    fill_path(ctx, undefined, color[2], 8 * scale);\r\n    ctx.globalAlpha = 0.5;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(17 * scale, 70 * scale);\r\n    ctx.bezierCurveTo(33 * scale, 52 * scale, 39 * scale, 33 * scale, 48 * scale, 7 * scale);\r\n    fill_path(ctx, undefined, color[2], 8 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_leaf(scale, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 234 * scale;\r\n    can.height = 183 * scale;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(76 * scale, 25 * scale);\r\n    ctx.bezierCurveTo(150 * scale, 3 * scale, 181 * scale, 22 * scale, 203 * scale, 41 * scale);\r\n    ctx.bezierCurveTo(225 * scale, 63 * scale, 225 * scale, 105 * scale, 198 * scale, 133 * scale);\r\n    ctx.bezierCurveTo(179 * scale, 157 * scale, 134 * scale, 178 * scale, 81 * scale, 164 * scale);\r\n    ctx.bezierCurveTo(19 * scale, 148 * scale, 6 * scale, 95 * scale, 21 * scale, 66 * scale);\r\n    ctx.bezierCurveTo(34 * scale, 39 * scale, 52 * scale, 33 * scale, 75 * scale, 25 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[0], 4 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_herb(scale, useless, color, i, a) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    if (i == 0) {\r\n        var w = scale * 270;\r\n        var h = scale * 250;\r\n        can.width = w;\r\n        can.height = h;\r\n        ctx.beginPath();\r\n        ctx.moveTo(140 * scale, 3 * scale);\r\n        ctx.translate(-25 * scale, -20 * scale);\r\n        ctx.bezierCurveTo(218 * scale, 31 * scale, 251 * scale, 61 * scale, 265 * scale, 85 * scale);\r\n        ctx.bezierCurveTo(278 * scale, 108 * scale, 295 * scale, 160 * scale, 285 * scale, 195 * scale);\r\n        ctx.bezierCurveTo(271 * scale, 242 * scale, 213 * scale, 268 * scale, 188 * scale, 266 * scale);\r\n        ctx.bezierCurveTo(139 * scale, 262 * scale, 70 * scale, 244 * scale, 47 * scale, 204 * scale);\r\n        ctx.bezierCurveTo(20 * scale, 158 * scale, 35 * scale, 78 * scale, 59 * scale, 56 * scale);\r\n        ctx.bezierCurveTo(90 * scale, 28 * scale, 124 * scale, 23 * scale, 140 * scale, 23 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n    } else if (i == 1) {\r\n        var w = scale * 430;\r\n        var h = scale * 350;\r\n        can.width = w;\r\n        can.height = h;\r\n        ctx.beginPath();\r\n        ctx.moveTo(180 * scale, 5 * scale);\r\n        ctx.translate(-30 * scale, -60 * scale);\r\n        ctx.bezierCurveTo(283 * scale, 60 * scale, 265 * scale, 163 * scale, 335 * scale, 206 * scale);\r\n        ctx.bezierCurveTo(376 * scale, 231 * scale, 492 * scale, 299 * scale, 434 * scale, 357 * scale);\r\n        ctx.bezierCurveTo(371 * scale, 421 * scale, 289 * scale, 394 * scale, 255 * scale, 386 * scale);\r\n        ctx.bezierCurveTo(218 * scale, 377 * scale, 91 * scale, 359 * scale, 50 * scale, 272 * scale);\r\n        ctx.bezierCurveTo(12 * scale, 192 * scale, 107 * scale, 75 * scale, 178 * scale, 69 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n    } else if (i == 2) {\r\n        var w = scale * 400;\r\n        var h = scale * 300;\r\n        can.width = w;\r\n        can.height = h;\r\n        ctx.beginPath();\r\n        ctx.moveTo(80 * scale, 52 * scale);\r\n        ctx.translate(-40 * scale, -30 * scale);\r\n        ctx.bezierCurveTo(124 * scale, 77 * scale, 241 * scale, 22 * scale, 311 * scale, 65 * scale);\r\n        ctx.bezierCurveTo(352 * scale, 90 * scale, 404 * scale, 176 * scale, 346 * scale, 234 * scale);\r\n        ctx.bezierCurveTo(283 * scale, 298 * scale, 179 * scale, 299 * scale, 145 * scale, 291 * scale);\r\n        ctx.bezierCurveTo(108 * scale, 282 * scale, 100 * scale, 239 * scale, 63 * scale, 205 * scale);\r\n        ctx.bezierCurveTo(37 * scale, 181 * scale, 45 * scale, 131 * scale, 80 * scale, 107 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n    }\r\n    return can;\r\n}\r\n;\r\nfunction create_flake(scale, r, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    var w = scale * r * 2;\r\n    var h = scale * r * 2;\r\n    var x = w / 2;\r\n    var y = h / 2;\r\n    can.width = w;\r\n    can.height = h;\r\n    ctx.translate(x, y);\r\n    circle(ctx, 0, 0, r * scale, 0);\r\n    fill_path(ctx, color);\r\n    return can;\r\n}\r\n;\r\nfunction create_divingmask(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 373 * scale;\r\n    can.height = 314 * scale;\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(5 * scale, 5 * scale);\r\n    ctx.save();\r\n    ctx.translate(184.048583984375 * scale, 69.1805419921875 * scale);\r\n    round_rect(ctx, -40 * scale, -28.5 * scale, 80 * scale, 57 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[1], color[2], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(185.048583984375 * scale, 61.6805419921875 * scale);\r\n    ctx.bezierCurveTo(145.048583984375 * scale, 59.6805419921875 * scale, 138.048583984375 * scale, 41.6805419921875 * scale, 148.048583984375 * scale, 33.6805419921875 * scale);\r\n    ctx.bezierCurveTo(169.048583984375 * scale, 17.6805419921875 * scale, 194.048583984375 * scale, 20.6805419921875 * scale, 210.048583984375 * scale, 27.6805419921875 * scale);\r\n    ctx.bezierCurveTo(234.048583984375 * scale, 40.6805419921875 * scale, 225.048583984375 * scale, 57.6805419921875 * scale, 186.048583984375 * scale, 61.6805419921875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[0], 6 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(224.048583984375 * scale, 56.6805419921875 * scale);\r\n    ctx.bezierCurveTo(326.048583984375 * scale, 69.6805419921875 * scale, 363.048583984375 * scale, 148.6805419921875 * scale, 349.048583984375 * scale, 206.6805419921875 * scale);\r\n    ctx.bezierCurveTo(329.048583984375 * scale, 278.6805419921875 * scale, 252.048583984375 * scale, 283.6805419921875 * scale, 206.048583984375 * scale, 275.6805419921875 * scale);\r\n    ctx.bezierCurveTo(206.548583984375 * scale, 266.6805419921875 * scale, 206.548583984375 * scale, 266.6805419921875 * scale, 207.048583984375 * scale, 257.6805419921875 * scale);\r\n    ctx.bezierCurveTo(276.048583984375 * scale, 268.6805419921875 * scale, 308.048583984375 * scale, 239.6805419921875 * scale, 323.048583984375 * scale, 208.6805419921875 * scale);\r\n    ctx.bezierCurveTo(352.048583984375 * scale, 145.6805419921875 * scale, 292.048583984375 * scale, 86.6805419921875 * scale, 223.048583984375 * scale, 74.6805419921875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[0], 6 * scale);\r\n    ctx.save();\r\n    ctx.translate(183.548583984375 * scale, 119.6805419921875 * scale);\r\n    round_rect(ctx, -121.5 * scale, -45 * scale, 243 * scale, 90 * scale, 40 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0], color[0], 6 * scale);\r\n    ctx.save();\r\n    ctx.translate(183.048583984375 * scale, 155.6805419921875 * scale);\r\n    round_rect(ctx, -121 * scale, -52 * scale, 242 * scale, 104 * scale, 40 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0], color[0], 6 * scale);\r\n    ctx.save();\r\n    ctx.translate(183.048583984375 * scale, 205.1805419921875 * scale);\r\n    round_rect(ctx, -121 * scale, -50.5 * scale, 242 * scale, 101 * scale, 40 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0], color[0], 6 * scale);\r\n    ctx.save();\r\n    ctx.translate(185.048583984375 * scale, 204.1805419921875 * scale);\r\n    round_rect(ctx, -100 * scale, -34.5 * scale, 200 * scale, 69 * scale, 40 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0], color[0], 6 * scale);\r\n    circle(ctx, 185.048583984375 * scale, 257.6805419921875 * scale, 27.018512172212592 * scale);\r\n    fill_path(ctx, color[0], color[0], 6 * scale);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(-5 * scale, -5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(224.048583984375 * scale, 56.6805419921875 * scale);\r\n    ctx.bezierCurveTo(326.048583984375 * scale, 69.6805419921875 * scale, 363.048583984375 * scale, 148.6805419921875 * scale, 349.048583984375 * scale, 206.6805419921875 * scale);\r\n    ctx.bezierCurveTo(329.048583984375 * scale, 278.6805419921875 * scale, 252.048583984375 * scale, 283.6805419921875 * scale, 206.048583984375 * scale, 275.6805419921875 * scale);\r\n    ctx.bezierCurveTo(206.548583984375 * scale, 266.6805419921875 * scale, 206.548583984375 * scale, 266.6805419921875 * scale, 207.048583984375 * scale, 257.6805419921875 * scale);\r\n    ctx.bezierCurveTo(276.048583984375 * scale, 268.6805419921875 * scale, 308.048583984375 * scale, 239.6805419921875 * scale, 323.048583984375 * scale, 208.6805419921875 * scale);\r\n    ctx.bezierCurveTo(352.048583984375 * scale, 145.6805419921875 * scale, 292.048583984375 * scale, 86.6805419921875 * scale, 223.048583984375 * scale, 74.6805419921875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[4], 6 * scale);\r\n    ctx.save();\r\n    ctx.translate(184.048583984375 * scale, 69.1805419921875 * scale);\r\n    round_rect(ctx, -40 * scale, -28.5 * scale, 80 * scale, 57 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[1], color[2], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(185.048583984375 * scale, 61.6805419921875 * scale);\r\n    ctx.bezierCurveTo(145.048583984375 * scale, 59.6805419921875 * scale, 138.048583984375 * scale, 41.6805419921875 * scale, 148.048583984375 * scale, 33.6805419921875 * scale);\r\n    ctx.bezierCurveTo(169.048583984375 * scale, 17.6805419921875 * scale, 194.048583984375 * scale, 20.6805419921875 * scale, 210.048583984375 * scale, 27.6805419921875 * scale);\r\n    ctx.bezierCurveTo(234.048583984375 * scale, 40.6805419921875 * scale, 225.048583984375 * scale, 57.6805419921875 * scale, 186.048583984375 * scale, 61.6805419921875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 6 * scale);\r\n    ctx.save();\r\n    ctx.translate(183.548583984375 * scale, 119.6805419921875 * scale);\r\n    round_rect(ctx, -121.5 * scale, -45 * scale, 243 * scale, 90 * scale, 40 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[5], color[4], 6 * scale);\r\n    ctx.save();\r\n    ctx.translate(183.048583984375 * scale, 155.6805419921875 * scale);\r\n    round_rect(ctx, -121 * scale, -52 * scale, 242 * scale, 104 * scale, 40 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[3], color[4], 6 * scale);\r\n    ctx.save();\r\n    ctx.translate(183.048583984375 * scale, 205.1805419921875 * scale);\r\n    round_rect(ctx, -121 * scale, -50.5 * scale, 242 * scale, 101 * scale, 40 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[6], color[4], 6 * scale);\r\n    ctx.globalCompositeOperation = \"destination-out\";\r\n    ctx.save();\r\n    ctx.translate(185.048583984375 * scale, 204.1805419921875 * scale);\r\n    round_rect(ctx, -100 * scale, -34.5 * scale, 200 * scale, 69 * scale, 40 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[7], color[8], 6 * scale);\r\n    ctx.globalCompositeOperation = \"source-over\";\r\n    ctx.globalAlpha = 0.5;\r\n    ctx.save();\r\n    ctx.translate(185.048583984375 * scale, 204.1805419921875 * scale);\r\n    round_rect(ctx, -100 * scale, -34.5 * scale, 200 * scale, 69 * scale, 40 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[7], color[8], 6 * scale);\r\n    ctx.globalAlpha = 1;\r\n    ctx.save();\r\n    circle(ctx, 185.048583984375 * scale, 257.6805419921875 * scale, 27.018512172212592 * scale);\r\n    fill_path(ctx, color[3], color[4], 6 * scale);\r\n    ctx.restore();\r\n    return can;\r\n}\r\n;\r\nfunction create_superdivingsuit(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 220 * scale;\r\n    can.height = 180 * scale;\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(-90 * scale, -150 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(104 * scale, 237.8000030517578 * scale);\r\n    ctx.bezierCurveTo(110 * scale, 237.8000030517578 * scale, 110 * scale, 237.8000030517578 * scale, 116 * scale, 237.8000030517578 * scale);\r\n    ctx.bezierCurveTo(116 * scale, 241.8000030517578 * scale, 116 * scale, 241.8000030517578 * scale, 116 * scale, 245.8000030517578 * scale);\r\n    ctx.bezierCurveTo(115 * scale, 245.3000030517578 * scale, 115 * scale, 245.3000030517578 * scale, 114 * scale, 244.8000030517578 * scale);\r\n    ctx.bezierCurveTo(109.5 * scale, 244.8000030517578 * scale, 109.5 * scale, 244.8000030517578 * scale, 105 * scale, 244.8000030517578 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[5], color[5], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(115 * scale, 211.20000457763672 * scale);\r\n    ctx.bezierCurveTo(106 * scale, 216.20000457763672 * scale, 101 * scale, 234.20000457763672 * scale, 102 * scale, 241.20000457763672 * scale);\r\n    ctx.bezierCurveTo(102 * scale, 260.2000045776367 * scale, 115 * scale, 269.2000045776367 * scale, 115 * scale, 269.2000045776367 * scale);\r\n    ctx.bezierCurveTo(116 * scale, 265.2000045776367 * scale, 115.5 * scale, 265.2000045776367 * scale, 116 * scale, 261.2000045776367 * scale);\r\n    ctx.bezierCurveTo(112 * scale, 264 * scale, 108 * scale, 254 * scale, 106 * scale, 242 * scale);\r\n    ctx.bezierCurveTo(105 * scale, 232 * scale, 110 * scale, 222 * scale, 115 * scale, 218 * scale);\r\n    ctx.bezierCurveTo(116 * scale, 216.75 * scale, 115.5 * scale, 217.375 * scale, 116 * scale, 216.75 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[5], color[5], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(120 * scale, 207 * scale);\r\n    ctx.bezierCurveTo(115 * scale, 206 * scale, 114 * scale, 209 * scale, 114 * scale, 211 * scale);\r\n    ctx.bezierCurveTo(114 * scale, 268 * scale, 114 * scale, 241 * scale, 114 * scale, 271 * scale);\r\n    ctx.bezierCurveTo(115 * scale, 276 * scale, 118 * scale, 276 * scale, 120 * scale, 276 * scale);\r\n    ctx.bezierCurveTo(122 * scale, 273 * scale, 120.5 * scale, 274.5 * scale, 121 * scale, 273 * scale);\r\n    ctx.bezierCurveTo(121 * scale, 241 * scale, 121 * scale, 241 * scale, 121 * scale, 209 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[4], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(284 * scale, 238 * scale);\r\n    ctx.bezierCurveTo(289.5 * scale, 238 * scale, 289.5 * scale, 238 * scale, 295 * scale, 238 * scale);\r\n    ctx.bezierCurveTo(295 * scale, 241.5 * scale, 295 * scale, 241.5 * scale, 295 * scale, 245 * scale);\r\n    ctx.bezierCurveTo(289.5 * scale, 245 * scale, 289.5 * scale, 245 * scale, 284 * scale, 245 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[4], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(283 * scale, 211 * scale);\r\n    ctx.bezierCurveTo(293 * scale, 216 * scale, 297 * scale, 231 * scale, 297 * scale, 241 * scale);\r\n    ctx.bezierCurveTo(298 * scale, 254 * scale, 290 * scale, 265 * scale, 284 * scale, 269 * scale);\r\n    ctx.bezierCurveTo(283 * scale, 266 * scale, 283.5 * scale, 266 * scale, 283 * scale, 263 * scale);\r\n    ctx.bezierCurveTo(290 * scale, 260 * scale, 292 * scale, 251 * scale, 293 * scale, 242 * scale);\r\n    ctx.bezierCurveTo(292 * scale, 223 * scale, 289 * scale, 224 * scale, 284 * scale, 218 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[4], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(280 * scale, 206 * scale);\r\n    ctx.bezierCurveTo(284 * scale, 206 * scale, 285 * scale, 208 * scale, 285 * scale, 211 * scale);\r\n    ctx.bezierCurveTo(285 * scale, 241.5 * scale, 285 * scale, 241.5 * scale, 285 * scale, 272 * scale);\r\n    ctx.bezierCurveTo(284 * scale, 275 * scale, 284 * scale, 275 * scale, 280 * scale, 275 * scale);\r\n    ctx.bezierCurveTo(279 * scale, 273.5 * scale, 279 * scale, 273.5 * scale, 278 * scale, 272 * scale);\r\n    ctx.bezierCurveTo(278 * scale, 240.5 * scale, 278 * scale, 240.5 * scale, 278 * scale, 209 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[4], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(138 * scale, 298.40000915527344 * scale);\r\n    ctx.bezierCurveTo(141 * scale, 311.40000915527344 * scale, 151 * scale, 314.40000915527344 * scale, 162 * scale, 316.40000915527344 * scale);\r\n    ctx.bezierCurveTo(224 * scale, 316.40000915527344 * scale, 200 * scale, 315.90000915527344 * scale, 238 * scale, 315.40000915527344 * scale);\r\n    ctx.bezierCurveTo(254 * scale, 316.40000915527344 * scale, 261 * scale, 306.40000915527344 * scale, 264 * scale, 298.40000915527344 * scale);\r\n    ctx.bezierCurveTo(255 * scale, 304.40000915527344 * scale, 250 * scale, 306.40000915527344 * scale, 244 * scale, 306.40000915527344 * scale);\r\n    ctx.bezierCurveTo(201 * scale, 306.90000915527344 * scale, 201 * scale, 306.90000915527344 * scale, 158 * scale, 307.40000915527344 * scale);\r\n    ctx.bezierCurveTo(150 * scale, 306.40000915527344 * scale, 148 * scale, 306.40000915527344 * scale, 139 * scale, 300.40000915527344 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[4], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(161 * scale, 177.5999984741211 * scale);\r\n    ctx.bezierCurveTo(130 * scale, 175.5999984741211 * scale, 123 * scale, 190.5999984741211 * scale, 122 * scale, 205.5999984741211 * scale);\r\n    ctx.bezierCurveTo(121 * scale, 277.5999984741211 * scale, 122 * scale, 242.5999984741211 * scale, 122 * scale, 279.5999984741211 * scale);\r\n    ctx.bezierCurveTo(128 * scale, 297.5999984741211 * scale, 137 * scale, 299.5999984741211 * scale, 143 * scale, 300.5999984741211 * scale);\r\n    ctx.bezierCurveTo(163 * scale, 301.0999984741211 * scale, 163 * scale, 301.0999984741211 * scale, 183 * scale, 301.5999984741211 * scale);\r\n    ctx.bezierCurveTo(150 * scale, 300.5999984741211 * scale, 135 * scale, 290.5999984741211 * scale, 134 * scale, 267.5999984741211 * scale);\r\n    ctx.bezierCurveTo(133 * scale, 245.5999984741211 * scale, 146 * scale, 235.5999984741211 * scale, 164 * scale, 235.5999984741211 * scale);\r\n    ctx.bezierCurveTo(206 * scale, 236.0999984741211 * scale, 206 * scale, 236.0999984741211 * scale, 248 * scale, 236.5999984741211 * scale);\r\n    ctx.bezierCurveTo(266 * scale, 243.5999984741211 * scale, 268 * scale, 259.5999984741211 * scale, 267 * scale, 266.5999984741211 * scale);\r\n    ctx.bezierCurveTo(266 * scale, 288.5999984741211 * scale, 251 * scale, 294.5999984741211 * scale, 244 * scale, 297.5999984741211 * scale);\r\n    ctx.bezierCurveTo(228.5 * scale, 299.5999984741211 * scale, 228.5 * scale, 299.5999984741211 * scale, 213 * scale, 301.5999984741211 * scale);\r\n    ctx.bezierCurveTo(236 * scale, 301.0999984741211 * scale, 236 * scale, 301.0999984741211 * scale, 259 * scale, 300.5999984741211 * scale);\r\n    ctx.bezierCurveTo(272 * scale, 295.5999984741211 * scale, 277 * scale, 288.5999984741211 * scale, 278 * scale, 271.5999984741211 * scale);\r\n    ctx.bezierCurveTo(277.5 * scale, 236.5999984741211 * scale, 277.5 * scale, 236.5999984741211 * scale, 277 * scale, 201.5999984741211 * scale);\r\n    ctx.bezierCurveTo(276 * scale, 186.5999984741211 * scale, 265 * scale, 178.5999984741211 * scale, 254 * scale, 177.5999984741211 * scale);\r\n    ctx.bezierCurveTo(247.5 * scale, 177.5999984741211 * scale, 247.5 * scale, 177.5999984741211 * scale, 241 * scale, 177.5999984741211 * scale);\r\n    ctx.bezierCurveTo(255 * scale, 202.5999984741211 * scale, 214 * scale, 217.5999984741211 * scale, 201 * scale, 215.5999984741211 * scale);\r\n    ctx.bezierCurveTo(170 * scale, 215.5999984741211 * scale, 152 * scale, 197.5999984741211 * scale, 161 * scale, 178.5999984741211 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[4], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(162 * scale, 175.5999984741211 * scale);\r\n    ctx.bezierCurveTo(153 * scale, 176.0999984741211 * scale, 153 * scale, 176.0999984741211 * scale, 144 * scale, 176.5999984741211 * scale);\r\n    ctx.bezierCurveTo(125 * scale, 178.5999984741211 * scale, 121 * scale, 196.5999984741211 * scale, 121 * scale, 207.5999984741211 * scale);\r\n    ctx.bezierCurveTo(121 * scale, 243.20000076293945 * scale, 121 * scale, 243.20000076293945 * scale, 121 * scale, 278.8000030517578 * scale);\r\n    ctx.bezierCurveTo(126 * scale, 298.8000030517578 * scale, 137 * scale, 300.8000030517578 * scale, 146 * scale, 302.8000030517578 * scale);\r\n    ctx.bezierCurveTo(200.5 * scale, 302.8000030517578 * scale, 200.5 * scale, 302.8000030517578 * scale, 255 * scale, 302.8000030517578 * scale);\r\n    ctx.bezierCurveTo(271 * scale, 301.8000030517578 * scale, 279 * scale, 288.8000030517578 * scale, 279 * scale, 273.8000030517578 * scale);\r\n    ctx.bezierCurveTo(279 * scale, 236.8000030517578 * scale, 279 * scale, 236.8000030517578 * scale, 279 * scale, 199.8000030517578 * scale);\r\n    ctx.bezierCurveTo(274 * scale, 178.8000030517578 * scale, 263 * scale, 177.8000030517578 * scale, 255 * scale, 175.8000030517578 * scale);\r\n    ctx.bezierCurveTo(248 * scale, 175.8000030517578 * scale, 248 * scale, 175.8000030517578 * scale, 241 * scale, 175.8000030517578 * scale);\r\n    ctx.bezierCurveTo(240 * scale, 175.8000030517578 * scale, 240 * scale, 175.8000030517578 * scale, 239 * scale, 175.8000030517578 * scale);\r\n    ctx.bezierCurveTo(254 * scale, 200.8000030517578 * scale, 222 * scale, 211.8000030517578 * scale, 202 * scale, 212.8000030517578 * scale);\r\n    ctx.bezierCurveTo(168 * scale, 213.8000030517578 * scale, 151 * scale, 190.8000030517578 * scale, 163 * scale, 176.8000030517578 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[4], 6 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(198 * scale, 161.4000015258789 * scale);\r\n    ctx.bezierCurveTo(198 * scale, 186.9000015258789 * scale, 198 * scale, 186.9000015258789 * scale, 198 * scale, 212.4000015258789 * scale);\r\n    ctx.bezierCurveTo(201 * scale, 212.4000015258789 * scale, 201 * scale, 212.4000015258789 * scale, 204 * scale, 212.4000015258789 * scale);\r\n    ctx.bezierCurveTo(204 * scale, 186.9000015258789 * scale, 204 * scale, 186.9000015258789 * scale, 204 * scale, 161.4000015258789 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[4], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(161 * scale, 194 * scale);\r\n    ctx.bezierCurveTo(188 * scale, 169 * scale, 231 * scale, 179 * scale, 241 * scale, 194 * scale);\r\n    ctx.bezierCurveTo(239.5 * scale, 196 * scale, 239.5 * scale, 196 * scale, 238 * scale, 198 * scale);\r\n    ctx.bezierCurveTo(221 * scale, 179 * scale, 182 * scale, 182 * scale, 165 * scale, 198 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[4], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(157 * scale, 188.80000019073486 * scale);\r\n    ctx.bezierCurveTo(162 * scale, 150.80000019073486 * scale, 241 * scale, 150.80000019073486 * scale, 245 * scale, 188.80000019073486 * scale);\r\n    ctx.bezierCurveTo(242 * scale, 224.80000019073486 * scale, 162 * scale, 228.80000019073486 * scale, 157 * scale, 188.80000019073486 * scale);\r\n    ctx.bezierCurveTo(159 * scale, 188.80000019073486 * scale, 159 * scale, 188.80000019073486 * scale, 161 * scale, 188.80000019073486 * scale);\r\n    ctx.bezierCurveTo(168 * scale, 216.80000019073486 * scale, 231 * scale, 218.80000019073486 * scale, 241 * scale, 188.80000019073486 * scale);\r\n    ctx.bezierCurveTo(236 * scale, 156.80000019073486 * scale, 169 * scale, 152.80000019073486 * scale, 161 * scale, 188.80000019073486 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[4], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(156 * scale, 188 * scale);\r\n    ctx.bezierCurveTo(160 * scale, 164 * scale, 183 * scale, 159 * scale, 201 * scale, 158 * scale);\r\n    ctx.bezierCurveTo(232 * scale, 159 * scale, 244 * scale, 174 * scale, 246 * scale, 188 * scale);\r\n    ctx.bezierCurveTo(245 * scale, 212 * scale, 213 * scale, 219 * scale, 201 * scale, 218 * scale);\r\n    ctx.bezierCurveTo(181 * scale, 221 * scale, 158 * scale, 207 * scale, 156 * scale, 190 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[4], 6 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(162 * scale, 189 * scale);\r\n    ctx.bezierCurveTo(166 * scale, 170 * scale, 185 * scale, 165 * scale, 201 * scale, 164 * scale);\r\n    ctx.bezierCurveTo(227 * scale, 165 * scale, 240 * scale, 178 * scale, 239 * scale, 188 * scale);\r\n    ctx.bezierCurveTo(239 * scale, 204 * scale, 210 * scale, 210 * scale, 201 * scale, 210 * scale);\r\n    ctx.bezierCurveTo(182 * scale, 211 * scale, 166 * scale, 200 * scale, 162 * scale, 190 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[4], 6 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(131 * scale, 262 * scale);\r\n    ctx.bezierCurveTo(136 * scale, 241 * scale, 144 * scale, 236 * scale, 158 * scale, 233 * scale);\r\n    ctx.bezierCurveTo(200.5 * scale, 233 * scale, 229 * scale, 232 * scale, 243 * scale, 233 * scale);\r\n    ctx.bezierCurveTo(259 * scale, 235 * scale, 267 * scale, 248 * scale, 269 * scale, 260 * scale);\r\n    ctx.bezierCurveTo(269 * scale, 266.5 * scale, 269 * scale, 266.5 * scale, 269 * scale, 273 * scale);\r\n    ctx.bezierCurveTo(265 * scale, 290 * scale, 251 * scale, 297 * scale, 242 * scale, 298 * scale);\r\n    ctx.bezierCurveTo(202 * scale, 298 * scale, 202 * scale, 298 * scale, 162 * scale, 298 * scale);\r\n    ctx.bezierCurveTo(148 * scale, 298 * scale, 136 * scale, 289 * scale, 132 * scale, 273 * scale);\r\n    ctx.bezierCurveTo(131.5 * scale, 268 * scale, 131.5 * scale, 268 * scale, 131 * scale, 263 * scale);\r\n    ctx.bezierCurveTo(135 * scale, 263 * scale, 135 * scale, 263 * scale, 139 * scale, 263 * scale);\r\n    ctx.bezierCurveTo(139 * scale, 281 * scale, 151 * scale, 287 * scale, 160 * scale, 290 * scale);\r\n    ctx.bezierCurveTo(200.5 * scale, 290 * scale, 200.5 * scale, 290 * scale, 241 * scale, 290 * scale);\r\n    ctx.bezierCurveTo(252 * scale, 290 * scale, 257 * scale, 281 * scale, 262 * scale, 271 * scale);\r\n    ctx.bezierCurveTo(261.5 * scale, 267 * scale, 261.5 * scale, 267 * scale, 261 * scale, 263 * scale);\r\n    ctx.bezierCurveTo(260 * scale, 249 * scale, 251 * scale, 242 * scale, 241 * scale, 241 * scale);\r\n    ctx.bezierCurveTo(240.5 * scale, 240.5 * scale, 240.5 * scale, 240.5 * scale, 240 * scale, 240 * scale);\r\n    ctx.bezierCurveTo(200 * scale, 240 * scale, 200 * scale, 240 * scale, 160 * scale, 240 * scale);\r\n    ctx.bezierCurveTo(145 * scale, 244 * scale, 142 * scale, 250 * scale, 139 * scale, 264 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[4], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(130 * scale, 264 * scale);\r\n    ctx.bezierCurveTo(132 * scale, 244 * scale, 144 * scale, 235 * scale, 157 * scale, 232 * scale);\r\n    ctx.bezierCurveTo(245 * scale, 232 * scale, 201 * scale, 232 * scale, 245 * scale, 232 * scale);\r\n    ctx.bezierCurveTo(264 * scale, 235 * scale, 269 * scale, 251 * scale, 270 * scale, 264 * scale);\r\n    ctx.bezierCurveTo(272 * scale, 291 * scale, 248 * scale, 299 * scale, 242 * scale, 299 * scale);\r\n    ctx.bezierCurveTo(200 * scale, 299 * scale, 200 * scale, 299 * scale, 158 * scale, 299 * scale);\r\n    ctx.bezierCurveTo(139 * scale, 298 * scale, 130 * scale, 276 * scale, 130 * scale, 265 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[4], 6 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(140 * scale, 265.33333587646484 * scale);\r\n    ctx.bezierCurveTo(141 * scale, 250.33333587646484 * scale, 148 * scale, 244.33333587646484 * scale, 160 * scale, 241.33333587646484 * scale);\r\n    ctx.bezierCurveTo(200 * scale, 241.33333587646484 * scale, 200 * scale, 241.33333587646484 * scale, 240 * scale, 241.33333587646484 * scale);\r\n    ctx.bezierCurveTo(256 * scale, 243.33333587646484 * scale, 260 * scale, 255.33333587646484 * scale, 260 * scale, 265.33333587646484 * scale);\r\n    ctx.bezierCurveTo(261 * scale, 281.33333587646484 * scale, 247 * scale, 289.33333587646484 * scale, 240 * scale, 289.33333587646484 * scale);\r\n    ctx.bezierCurveTo(161 * scale, 289.33333587646484 * scale, 200.5 * scale, 289.33333587646484 * scale, 161 * scale, 289.33333587646484 * scale);\r\n    ctx.bezierCurveTo(149 * scale, 288.33333587646484 * scale, 142 * scale, 278.33333587646484 * scale, 140 * scale, 266.33333587646484 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[4], 6 * scale);\r\n    ctx.globalAlpha = 0.5;\r\n    ctx.scale(1, 1);\r\n    ctx.translate(105 * scale, 155 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(59.27557373046875 * scale, 20.406280517578125 * scale);\r\n    ctx.bezierCurveTo(74.27557373046875 * scale, 5.406280517578125 * scale, 90.27557373046875 * scale, 6.406280517578125 * scale, 99.27557373046875 * scale, 5.406280517578125 * scale);\r\n    ctx.bezierCurveTo(120.27557373046875 * scale, 5.406280517578125 * scale, 126.27557373046875 * scale, 10.406280517578125 * scale, 136.27557373046875 * scale, 20.406280517578125 * scale);\r\n    ctx.bezierCurveTo(157.77557373046875 * scale, 37.906280517578125 * scale, 157.77557373046875 * scale, 37.906280517578125 * scale, 179.27557373046875 * scale, 55.406280517578125 * scale);\r\n    ctx.bezierCurveTo(190.27557373046875 * scale, 63.406280517578125 * scale, 192.27557373046875 * scale, 77.40628051757812 * scale, 189.27557373046875 * scale, 91.40628051757812 * scale);\r\n    ctx.bezierCurveTo(183.27557373046875 * scale, 108.40628051757812 * scale, 176.27557373046875 * scale, 110.40628051757812 * scale, 169.27557373046875 * scale, 118.40628051757812 * scale);\r\n    ctx.bezierCurveTo(152.27557373046875 * scale, 133.40628051757812 * scale, 152.27557373046875 * scale, 133.40628051757812 * scale, 135.27557373046875 * scale, 148.40628051757812 * scale);\r\n    ctx.bezierCurveTo(87.27557373046875 * scale, 143.40628051757812 * scale, 87.27557373046875 * scale, 143.40628051757812 * scale, 39.27557373046875 * scale, 138.40628051757812 * scale);\r\n    ctx.bezierCurveTo(26.77557373046875 * scale, 123.40628051757812 * scale, 26.77557373046875 * scale, 123.40628051757812 * scale, 14.27557373046875 * scale, 108.40628051757812 * scale);\r\n    ctx.bezierCurveTo(2.27557373046875 * scale, 95.40628051757812 * scale, 2.27557373046875 * scale, 92.40628051757812 * scale, 3.27557373046875 * scale, 83.40628051757812 * scale);\r\n    ctx.bezierCurveTo(4.27557373046875 * scale, 63.406280517578125 * scale, 12.27557373046875 * scale, 60.406280517578125 * scale, 24.27557373046875 * scale, 40.406280517578125 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[5], color[5], 4 * scale);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(-110 * scale, -155 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(104 * scale, 237.8000030517578 * scale);\r\n    ctx.bezierCurveTo(110 * scale, 237.8000030517578 * scale, 110 * scale, 237.8000030517578 * scale, 116 * scale, 237.8000030517578 * scale);\r\n    ctx.bezierCurveTo(116 * scale, 241.8000030517578 * scale, 116 * scale, 241.8000030517578 * scale, 116 * scale, 245.8000030517578 * scale);\r\n    ctx.bezierCurveTo(115 * scale, 245.3000030517578 * scale, 115 * scale, 245.3000030517578 * scale, 114 * scale, 244.8000030517578 * scale);\r\n    ctx.bezierCurveTo(109.5 * scale, 244.8000030517578 * scale, 109.5 * scale, 244.8000030517578 * scale, 105 * scale, 244.8000030517578 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[1], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(115 * scale, 211.20000457763672 * scale);\r\n    ctx.bezierCurveTo(106 * scale, 216.20000457763672 * scale, 101 * scale, 234.20000457763672 * scale, 102 * scale, 241.20000457763672 * scale);\r\n    ctx.bezierCurveTo(102 * scale, 260.2000045776367 * scale, 115 * scale, 269.2000045776367 * scale, 115 * scale, 269.2000045776367 * scale);\r\n    ctx.bezierCurveTo(116 * scale, 265.2000045776367 * scale, 115.5 * scale, 265.2000045776367 * scale, 116 * scale, 261.2000045776367 * scale);\r\n    ctx.bezierCurveTo(112 * scale, 264 * scale, 108 * scale, 254 * scale, 106 * scale, 242 * scale);\r\n    ctx.bezierCurveTo(105 * scale, 232 * scale, 110 * scale, 222 * scale, 115 * scale, 218 * scale);\r\n    ctx.bezierCurveTo(116 * scale, 216.75 * scale, 115.5 * scale, 217.375 * scale, 116 * scale, 216.75 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[1], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(120 * scale, 207 * scale);\r\n    ctx.bezierCurveTo(115 * scale, 206 * scale, 114 * scale, 209 * scale, 114 * scale, 211 * scale);\r\n    ctx.bezierCurveTo(114 * scale, 268 * scale, 114 * scale, 241 * scale, 114 * scale, 271 * scale);\r\n    ctx.bezierCurveTo(115 * scale, 276 * scale, 118 * scale, 276 * scale, 120 * scale, 276 * scale);\r\n    ctx.bezierCurveTo(122 * scale, 273 * scale, 120.5 * scale, 274.5 * scale, 121 * scale, 273 * scale);\r\n    ctx.bezierCurveTo(121 * scale, 241 * scale, 121 * scale, 241 * scale, 121 * scale, 209 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[1], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(284 * scale, 238 * scale);\r\n    ctx.bezierCurveTo(289.5 * scale, 238 * scale, 289.5 * scale, 238 * scale, 295 * scale, 238 * scale);\r\n    ctx.bezierCurveTo(295 * scale, 241.5 * scale, 295 * scale, 241.5 * scale, 295 * scale, 245 * scale);\r\n    ctx.bezierCurveTo(289.5 * scale, 245 * scale, 289.5 * scale, 245 * scale, 284 * scale, 245 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[1], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(283 * scale, 211 * scale);\r\n    ctx.bezierCurveTo(293 * scale, 216 * scale, 297 * scale, 231 * scale, 297 * scale, 241 * scale);\r\n    ctx.bezierCurveTo(298 * scale, 254 * scale, 290 * scale, 265 * scale, 284 * scale, 269 * scale);\r\n    ctx.bezierCurveTo(283 * scale, 266 * scale, 283.5 * scale, 266 * scale, 283 * scale, 263 * scale);\r\n    ctx.bezierCurveTo(290 * scale, 260 * scale, 292 * scale, 251 * scale, 293 * scale, 242 * scale);\r\n    ctx.bezierCurveTo(292 * scale, 223 * scale, 289 * scale, 224 * scale, 284 * scale, 218 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[1], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(280 * scale, 206 * scale);\r\n    ctx.bezierCurveTo(284 * scale, 206 * scale, 285 * scale, 208 * scale, 285 * scale, 211 * scale);\r\n    ctx.bezierCurveTo(285 * scale, 241.5 * scale, 285 * scale, 241.5 * scale, 285 * scale, 272 * scale);\r\n    ctx.bezierCurveTo(284 * scale, 275 * scale, 284 * scale, 275 * scale, 280 * scale, 275 * scale);\r\n    ctx.bezierCurveTo(279 * scale, 273.5 * scale, 279 * scale, 273.5 * scale, 278 * scale, 272 * scale);\r\n    ctx.bezierCurveTo(278 * scale, 240.5 * scale, 278 * scale, 240.5 * scale, 278 * scale, 209 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[1], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(138 * scale, 298.40000915527344 * scale);\r\n    ctx.bezierCurveTo(141 * scale, 311.40000915527344 * scale, 151 * scale, 314.40000915527344 * scale, 162 * scale, 316.40000915527344 * scale);\r\n    ctx.bezierCurveTo(224 * scale, 316.40000915527344 * scale, 200 * scale, 315.90000915527344 * scale, 238 * scale, 315.40000915527344 * scale);\r\n    ctx.bezierCurveTo(254 * scale, 316.40000915527344 * scale, 261 * scale, 306.40000915527344 * scale, 264 * scale, 298.40000915527344 * scale);\r\n    ctx.bezierCurveTo(255 * scale, 304.40000915527344 * scale, 250 * scale, 306.40000915527344 * scale, 244 * scale, 306.40000915527344 * scale);\r\n    ctx.bezierCurveTo(201 * scale, 306.90000915527344 * scale, 201 * scale, 306.90000915527344 * scale, 158 * scale, 307.40000915527344 * scale);\r\n    ctx.bezierCurveTo(150 * scale, 306.40000915527344 * scale, 148 * scale, 306.40000915527344 * scale, 139 * scale, 300.40000915527344 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[1], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(161 * scale, 177.5999984741211 * scale);\r\n    ctx.bezierCurveTo(130 * scale, 175.5999984741211 * scale, 123 * scale, 190.5999984741211 * scale, 122 * scale, 205.5999984741211 * scale);\r\n    ctx.bezierCurveTo(121 * scale, 277.5999984741211 * scale, 122 * scale, 242.5999984741211 * scale, 122 * scale, 279.5999984741211 * scale);\r\n    ctx.bezierCurveTo(128 * scale, 297.5999984741211 * scale, 137 * scale, 299.5999984741211 * scale, 143 * scale, 300.5999984741211 * scale);\r\n    ctx.bezierCurveTo(163 * scale, 301.0999984741211 * scale, 163 * scale, 301.0999984741211 * scale, 183 * scale, 301.5999984741211 * scale);\r\n    ctx.bezierCurveTo(150 * scale, 300.5999984741211 * scale, 135 * scale, 290.5999984741211 * scale, 134 * scale, 267.5999984741211 * scale);\r\n    ctx.bezierCurveTo(133 * scale, 245.5999984741211 * scale, 146 * scale, 235.5999984741211 * scale, 164 * scale, 235.5999984741211 * scale);\r\n    ctx.bezierCurveTo(206 * scale, 236.0999984741211 * scale, 206 * scale, 236.0999984741211 * scale, 248 * scale, 236.5999984741211 * scale);\r\n    ctx.bezierCurveTo(266 * scale, 243.5999984741211 * scale, 268 * scale, 259.5999984741211 * scale, 267 * scale, 266.5999984741211 * scale);\r\n    ctx.bezierCurveTo(266 * scale, 288.5999984741211 * scale, 251 * scale, 294.5999984741211 * scale, 244 * scale, 297.5999984741211 * scale);\r\n    ctx.bezierCurveTo(228.5 * scale, 299.5999984741211 * scale, 228.5 * scale, 299.5999984741211 * scale, 213 * scale, 301.5999984741211 * scale);\r\n    ctx.bezierCurveTo(236 * scale, 301.0999984741211 * scale, 236 * scale, 301.0999984741211 * scale, 259 * scale, 300.5999984741211 * scale);\r\n    ctx.bezierCurveTo(272 * scale, 295.5999984741211 * scale, 277 * scale, 288.5999984741211 * scale, 278 * scale, 271.5999984741211 * scale);\r\n    ctx.bezierCurveTo(277.5 * scale, 236.5999984741211 * scale, 277.5 * scale, 236.5999984741211 * scale, 277 * scale, 201.5999984741211 * scale);\r\n    ctx.bezierCurveTo(276 * scale, 186.5999984741211 * scale, 265 * scale, 178.5999984741211 * scale, 254 * scale, 177.5999984741211 * scale);\r\n    ctx.bezierCurveTo(247.5 * scale, 177.5999984741211 * scale, 247.5 * scale, 177.5999984741211 * scale, 241 * scale, 177.5999984741211 * scale);\r\n    ctx.bezierCurveTo(255 * scale, 202.5999984741211 * scale, 214 * scale, 217.5999984741211 * scale, 201 * scale, 215.5999984741211 * scale);\r\n    ctx.bezierCurveTo(170 * scale, 215.5999984741211 * scale, 152 * scale, 197.5999984741211 * scale, 161 * scale, 178.5999984741211 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2], color[2], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(162 * scale, 175.5999984741211 * scale);\r\n    ctx.bezierCurveTo(153 * scale, 176.0999984741211 * scale, 153 * scale, 176.0999984741211 * scale, 144 * scale, 176.5999984741211 * scale);\r\n    ctx.bezierCurveTo(125 * scale, 178.5999984741211 * scale, 121 * scale, 196.5999984741211 * scale, 121 * scale, 207.5999984741211 * scale);\r\n    ctx.bezierCurveTo(121 * scale, 243.20000076293945 * scale, 121 * scale, 243.20000076293945 * scale, 121 * scale, 278.8000030517578 * scale);\r\n    ctx.bezierCurveTo(126 * scale, 298.8000030517578 * scale, 137 * scale, 300.8000030517578 * scale, 146 * scale, 302.8000030517578 * scale);\r\n    ctx.bezierCurveTo(200.5 * scale, 302.8000030517578 * scale, 200.5 * scale, 302.8000030517578 * scale, 255 * scale, 302.8000030517578 * scale);\r\n    ctx.bezierCurveTo(271 * scale, 301.8000030517578 * scale, 279 * scale, 288.8000030517578 * scale, 279 * scale, 273.8000030517578 * scale);\r\n    ctx.bezierCurveTo(279 * scale, 236.8000030517578 * scale, 279 * scale, 236.8000030517578 * scale, 279 * scale, 199.8000030517578 * scale);\r\n    ctx.bezierCurveTo(274 * scale, 178.8000030517578 * scale, 263 * scale, 177.8000030517578 * scale, 255 * scale, 175.8000030517578 * scale);\r\n    ctx.bezierCurveTo(248 * scale, 175.8000030517578 * scale, 248 * scale, 175.8000030517578 * scale, 241 * scale, 175.8000030517578 * scale);\r\n    ctx.bezierCurveTo(240 * scale, 175.8000030517578 * scale, 240 * scale, 175.8000030517578 * scale, 239 * scale, 175.8000030517578 * scale);\r\n    ctx.bezierCurveTo(254 * scale, 200.8000030517578 * scale, 222 * scale, 211.8000030517578 * scale, 202 * scale, 212.8000030517578 * scale);\r\n    ctx.bezierCurveTo(168 * scale, 213.8000030517578 * scale, 151 * scale, 190.8000030517578 * scale, 163 * scale, 176.8000030517578 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[3], 6 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(198 * scale, 161.4000015258789 * scale);\r\n    ctx.bezierCurveTo(198 * scale, 186.9000015258789 * scale, 198 * scale, 186.9000015258789 * scale, 198 * scale, 212.4000015258789 * scale);\r\n    ctx.bezierCurveTo(201 * scale, 212.4000015258789 * scale, 201 * scale, 212.4000015258789 * scale, 204 * scale, 212.4000015258789 * scale);\r\n    ctx.bezierCurveTo(204 * scale, 186.9000015258789 * scale, 204 * scale, 186.9000015258789 * scale, 204 * scale, 161.4000015258789 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[1], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(161 * scale, 194 * scale);\r\n    ctx.bezierCurveTo(188 * scale, 169 * scale, 231 * scale, 179 * scale, 241 * scale, 194 * scale);\r\n    ctx.bezierCurveTo(239.5 * scale, 196 * scale, 239.5 * scale, 196 * scale, 238 * scale, 198 * scale);\r\n    ctx.bezierCurveTo(221 * scale, 179 * scale, 182 * scale, 182 * scale, 165 * scale, 198 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[1], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(157 * scale, 188.80000019073486 * scale);\r\n    ctx.bezierCurveTo(162 * scale, 150.80000019073486 * scale, 241 * scale, 150.80000019073486 * scale, 245 * scale, 188.80000019073486 * scale);\r\n    ctx.bezierCurveTo(242 * scale, 224.80000019073486 * scale, 162 * scale, 228.80000019073486 * scale, 157 * scale, 188.80000019073486 * scale);\r\n    ctx.bezierCurveTo(159 * scale, 188.80000019073486 * scale, 159 * scale, 188.80000019073486 * scale, 161 * scale, 188.80000019073486 * scale);\r\n    ctx.bezierCurveTo(168 * scale, 216.80000019073486 * scale, 231 * scale, 218.80000019073486 * scale, 241 * scale, 188.80000019073486 * scale);\r\n    ctx.bezierCurveTo(236 * scale, 156.80000019073486 * scale, 169 * scale, 152.80000019073486 * scale, 161 * scale, 188.80000019073486 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[1], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(156 * scale, 188 * scale);\r\n    ctx.bezierCurveTo(160 * scale, 164 * scale, 183 * scale, 159 * scale, 201 * scale, 158 * scale);\r\n    ctx.bezierCurveTo(232 * scale, 159 * scale, 244 * scale, 174 * scale, 246 * scale, 188 * scale);\r\n    ctx.bezierCurveTo(245 * scale, 212 * scale, 213 * scale, 219 * scale, 201 * scale, 218 * scale);\r\n    ctx.bezierCurveTo(181 * scale, 221 * scale, 158 * scale, 207 * scale, 156 * scale, 190 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[1], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(162 * scale, 189 * scale);\r\n    ctx.bezierCurveTo(166 * scale, 170 * scale, 185 * scale, 165 * scale, 201 * scale, 164 * scale);\r\n    ctx.bezierCurveTo(227 * scale, 165 * scale, 240 * scale, 178 * scale, 239 * scale, 188 * scale);\r\n    ctx.bezierCurveTo(239 * scale, 204 * scale, 210 * scale, 210 * scale, 201 * scale, 210 * scale);\r\n    ctx.bezierCurveTo(182 * scale, 211 * scale, 166 * scale, 200 * scale, 162 * scale, 190 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[1], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(131 * scale, 262 * scale);\r\n    ctx.bezierCurveTo(136 * scale, 241 * scale, 144 * scale, 236 * scale, 158 * scale, 233 * scale);\r\n    ctx.bezierCurveTo(200.5 * scale, 233 * scale, 229 * scale, 232 * scale, 243 * scale, 233 * scale);\r\n    ctx.bezierCurveTo(259 * scale, 235 * scale, 267 * scale, 248 * scale, 269 * scale, 260 * scale);\r\n    ctx.bezierCurveTo(269 * scale, 266.5 * scale, 269 * scale, 266.5 * scale, 269 * scale, 273 * scale);\r\n    ctx.bezierCurveTo(265 * scale, 290 * scale, 251 * scale, 297 * scale, 242 * scale, 298 * scale);\r\n    ctx.bezierCurveTo(202 * scale, 298 * scale, 202 * scale, 298 * scale, 162 * scale, 298 * scale);\r\n    ctx.bezierCurveTo(148 * scale, 298 * scale, 136 * scale, 289 * scale, 132 * scale, 273 * scale);\r\n    ctx.bezierCurveTo(131.5 * scale, 268 * scale, 131.5 * scale, 268 * scale, 131 * scale, 263 * scale);\r\n    ctx.bezierCurveTo(135 * scale, 263 * scale, 135 * scale, 263 * scale, 139 * scale, 263 * scale);\r\n    ctx.bezierCurveTo(139 * scale, 281 * scale, 151 * scale, 287 * scale, 160 * scale, 290 * scale);\r\n    ctx.bezierCurveTo(200.5 * scale, 290 * scale, 200.5 * scale, 290 * scale, 241 * scale, 290 * scale);\r\n    ctx.bezierCurveTo(252 * scale, 290 * scale, 257 * scale, 281 * scale, 262 * scale, 271 * scale);\r\n    ctx.bezierCurveTo(261.5 * scale, 267 * scale, 261.5 * scale, 267 * scale, 261 * scale, 263 * scale);\r\n    ctx.bezierCurveTo(260 * scale, 249 * scale, 251 * scale, 242 * scale, 241 * scale, 241 * scale);\r\n    ctx.bezierCurveTo(240.5 * scale, 240.5 * scale, 240.5 * scale, 240.5 * scale, 240 * scale, 240 * scale);\r\n    ctx.bezierCurveTo(200 * scale, 240 * scale, 200 * scale, 240 * scale, 160 * scale, 240 * scale);\r\n    ctx.bezierCurveTo(145 * scale, 244 * scale, 142 * scale, 250 * scale, 139 * scale, 264 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[0], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(130 * scale, 264 * scale);\r\n    ctx.bezierCurveTo(132 * scale, 244 * scale, 144 * scale, 235 * scale, 157 * scale, 232 * scale);\r\n    ctx.bezierCurveTo(245 * scale, 232 * scale, 201 * scale, 232 * scale, 245 * scale, 232 * scale);\r\n    ctx.bezierCurveTo(264 * scale, 235 * scale, 269 * scale, 251 * scale, 270 * scale, 264 * scale);\r\n    ctx.bezierCurveTo(272 * scale, 291 * scale, 248 * scale, 299 * scale, 242 * scale, 299 * scale);\r\n    ctx.bezierCurveTo(200 * scale, 299 * scale, 200 * scale, 299 * scale, 158 * scale, 299 * scale);\r\n    ctx.bezierCurveTo(139 * scale, 298 * scale, 130 * scale, 276 * scale, 130 * scale, 265 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[1], 2 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_windmill_chest(scale, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 243 * scale;\r\n    can.height = 172 * scale;\r\n    circle(ctx, 119.5 * scale, 140.125 * scale, 19 * scale);\r\n    fill_path(ctx, undefined, color[1], 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(36.5 * scale, 20.125 * scale);\r\n    ctx.bezierCurveTo(119.5 * scale, 20.625 * scale, 119.5 * scale, 20.625 * scale, 202.5 * scale, 21.125 * scale);\r\n    ctx.bezierCurveTo(214.5 * scale, 22.125 * scale, 216.5 * scale, 26.125 * scale, 217.5 * scale, 35.125 * scale);\r\n    ctx.bezierCurveTo(221 * scale, 76.125 * scale, 221 * scale, 76.125 * scale, 224.5 * scale, 117.125 * scale);\r\n    ctx.bezierCurveTo(225.5 * scale, 127.125 * scale, 221.5 * scale, 131.125 * scale, 210.5 * scale, 132.125 * scale);\r\n    ctx.bezierCurveTo(117.5 * scale, 132.125 * scale, 117.5 * scale, 132.125 * scale, 24.5 * scale, 132.125 * scale);\r\n    ctx.bezierCurveTo(14.5 * scale, 131.125 * scale, 13.5 * scale, 126.125 * scale, 16.5 * scale, 111.125 * scale);\r\n    ctx.bezierCurveTo(19.5 * scale, 73.125 * scale, 19.5 * scale, 73.125 * scale, 22.5 * scale, 35.125 * scale);\r\n    ctx.bezierCurveTo(23.5 * scale, 23.125 * scale, 29.5 * scale, 21.125 * scale, 36.5 * scale, 20.125 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[1], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(15.5 * scale, 138.625 * scale);\r\n    ctx.bezierCurveTo(120 * scale, 138.625 * scale, 120 * scale, 138.625 * scale, 224.5 * scale, 138.625 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[2], 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(13.5 * scale, 131.625 * scale);\r\n    ctx.bezierCurveTo(119.5 * scale, 131.625 * scale, 119.5 * scale, 131.625 * scale, 225.5 * scale, 131.625 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[3], 10 * scale);\r\n    circle(ctx, 119.5 * scale, 140.125 * scale, 14.866068747318506 * scale);\r\n    fill_path(ctx, color[4], color[5], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(106.5 * scale, 146.625 * scale);\r\n    ctx.bezierCurveTo(116.5 * scale, 137.625 * scale, 118.5 * scale, 136.625 * scale, 123.5 * scale, 138.625 * scale);\r\n    ctx.bezierCurveTo(131.5 * scale, 145.625 * scale, 133.5 * scale, 148.625 * scale, 127.5 * scale, 152.625 * scale);\r\n    ctx.bezierCurveTo(115.5 * scale, 158.625 * scale, 111.5 * scale, 153.625 * scale, 106.5 * scale, 147.625 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[6], color[7], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(105.5 * scale, 146.625 * scale);\r\n    ctx.bezierCurveTo(116.5 * scale, 159.625 * scale, 124.5 * scale, 156.625 * scale, 132.5 * scale, 146.625 * scale);\r\n    fill_path(ctx, undefined, color[8], 5 * scale);\r\n    ctx.save();\r\n    ctx.translate(75.5 * scale, 80.125 * scale);\r\n    round_rect(ctx, -39 * scale, -40 * scale, 78 * scale, 78 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[9]);\r\n    ctx.save();\r\n    ctx.translate(167 * scale, 80.125 * scale);\r\n    round_rect(ctx, -38.5 * scale, -39 * scale, 78 * scale, 78 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[9]);\r\n    return can;\r\n}\r\n;\r\nfunction create_cake(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 400 * scale;\r\n    can.height = 400 * scale;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(96.5 * scale, 277.34375 * scale);\r\n    ctx.bezierCurveTo(197.5 * scale, 259.84375 * scale, 197.5 * scale, 259.84375 * scale, 298.5 * scale, 242.34375 * scale);\r\n    ctx.bezierCurveTo(311.5 * scale, 231.34375 * scale, 307.5 * scale, 168.34375 * scale, 298.5 * scale, 150.34375 * scale);\r\n    ctx.bezierCurveTo(198 * scale, 170.34375 * scale, 198 * scale, 170.34375 * scale, 97.5 * scale, 190.34375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(98.5 * scale, 214.34375 * scale);\r\n    ctx.bezierCurveTo(199 * scale, 196.34375 * scale, 199 * scale, 196.34375 * scale, 299.5 * scale, 178.34375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[2], 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(98.5 * scale, 247.34375 * scale);\r\n    ctx.bezierCurveTo(201.5 * scale, 229.34375 * scale, 201.5 * scale, 229.34375 * scale, 304.5 * scale, 211.34375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[2], 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(97.5 * scale, 189.34375 * scale);\r\n    ctx.bezierCurveTo(97 * scale, 199.84375 * scale, 97 * scale, 199.84375 * scale, 96.5 * scale, 210.34375 * scale);\r\n    ctx.bezierCurveTo(110.5 * scale, 204.34375 * scale, 110.5 * scale, 204.34375 * scale, 124.5 * scale, 198.34375 * scale);\r\n    ctx.bezierCurveTo(137.5 * scale, 203.84375 * scale, 137.5 * scale, 203.84375 * scale, 150.5 * scale, 209.34375 * scale);\r\n    ctx.bezierCurveTo(172 * scale, 197.84375 * scale, 172 * scale, 197.84375 * scale, 193.5 * scale, 186.34375 * scale);\r\n    ctx.bezierCurveTo(211.5 * scale, 189.84375 * scale, 211.5 * scale, 189.84375 * scale, 229.5 * scale, 193.34375 * scale);\r\n    ctx.bezierCurveTo(240.5 * scale, 193.34375 * scale, 240.5 * scale, 193.34375 * scale, 251.5 * scale, 193.34375 * scale);\r\n    ctx.bezierCurveTo(261 * scale, 182.84375 * scale, 261 * scale, 182.84375 * scale, 270.5 * scale, 172.34375 * scale);\r\n    ctx.bezierCurveTo(287.5 * scale, 169.34375 * scale, 287.5 * scale, 169.34375 * scale, 304.5 * scale, 166.34375 * scale);\r\n    ctx.bezierCurveTo(304.5 * scale, 156.34375 * scale, 300.5 * scale, 145.34375 * scale, 298.5 * scale, 147.34375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[4], 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(300.5 * scale, 147.34375 * scale);\r\n    ctx.bezierCurveTo(293.5 * scale, 121.34375 * scale, 278.5 * scale, 106.34375 * scale, 256.5 * scale, 101.34375 * scale);\r\n    ctx.bezierCurveTo(176.5 * scale, 145.34375 * scale, 176.5 * scale, 145.34375 * scale, 96.5 * scale, 189.34375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[5], color[6], 12 * scale);\r\n    circle(ctx, 252.5 * scale, 129.34375 * scale, 18.027756377319946 * scale);\r\n    fill_path(ctx, color[7]);\r\n    circle(ctx, 248.5 * scale, 121.34375 * scale, 8.246211251235321 * scale);\r\n    fill_path(ctx, color[8]);\r\n    return can;\r\n}\r\n;\r\nfunction create_fishfood(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 400 * scale;\r\n    can.height = 400 * scale;\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(10 * scale, 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(100.5 * scale, 126.34375 * scale);\r\n    ctx.bezierCurveTo(151.5 * scale, 104.34375 * scale, 279.5 * scale, 188.34375 * scale, 297.5 * scale, 292.34375 * scale);\r\n    ctx.bezierCurveTo(222.5 * scale, 307.34375 * scale, 106.5 * scale, 196.34375 * scale, 100.5 * scale, 127.34375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[0], 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(106.5 * scale, 131.34375 * scale);\r\n    ctx.bezierCurveTo(140.5 * scale, 142.34375 * scale, 225.5 * scale, 184.34375 * scale, 290.5 * scale, 287.34375 * scale);\r\n    ctx.bezierCurveTo(270.5 * scale, 188.34375 * scale, 152.5 * scale, 118.34375 * scale, 107.5 * scale, 131.34375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(157.5 * scale, 137.34375 * scale);\r\n    ctx.bezierCurveTo(161.5 * scale, 138.34375 * scale, 164.5 * scale, 140.34375 * scale, 168.5 * scale, 142.34375 * scale);\r\n    ctx.bezierCurveTo(165.5 * scale, 156.34375 * scale, 141.5 * scale, 176.34375 * scale, 126.5 * scale, 179.34375 * scale);\r\n    ctx.bezierCurveTo(123.5 * scale, 173.34375 * scale, 120.5 * scale, 169.34375 * scale, 120.5 * scale, 169.34375 * scale);\r\n    ctx.bezierCurveTo(141.5 * scale, 161.34375 * scale, 156.5 * scale, 145.34375 * scale, 155.5 * scale, 136.34375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(196.5 * scale, 151.34375 * scale);\r\n    ctx.bezierCurveTo(211.5 * scale, 158.34375 * scale, 224.5 * scale, 171.34375 * scale, 229.5 * scale, 176.34375 * scale);\r\n    ctx.bezierCurveTo(246.5 * scale, 163.34375 * scale, 259.5 * scale, 166.34375 * scale, 272.5 * scale, 168.34375 * scale);\r\n    ctx.bezierCurveTo(254.5 * scale, 146.34375 * scale, 214.5 * scale, 145.34375 * scale, 198.5 * scale, 151.34375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[0], 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(154.5 * scale, 222.34375 * scale);\r\n    ctx.bezierCurveTo(164.5 * scale, 234.34375 * scale, 173.5 * scale, 242.34375 * scale, 178.5 * scale, 245.34375 * scale);\r\n    ctx.bezierCurveTo(174.5 * scale, 265.34375 * scale, 180.5 * scale, 274.34375 * scale, 186.5 * scale, 283.34375 * scale);\r\n    ctx.bezierCurveTo(165.5 * scale, 277.34375 * scale, 151.5 * scale, 245.34375 * scale, 155.5 * scale, 224.34375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[0], 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(279.5 * scale, 294.34375 * scale);\r\n    ctx.bezierCurveTo(286.5 * scale, 285.84375 * scale, 286.5 * scale, 285.84375 * scale, 293.5 * scale, 277.34375 * scale);\r\n    ctx.bezierCurveTo(315.5 * scale, 280.34375 * scale, 315.5 * scale, 280.34375 * scale, 337.5 * scale, 283.34375 * scale);\r\n    ctx.bezierCurveTo(340.5 * scale, 311.34375 * scale, 317.5 * scale, 326.34375 * scale, 307.5 * scale, 331.34375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[0], 12 * scale);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(-10 * scale, -5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(100.5 * scale, 126.34375 * scale);\r\n    ctx.bezierCurveTo(151.5 * scale, 104.34375 * scale, 279.5 * scale, 188.34375 * scale, 297.5 * scale, 292.34375 * scale);\r\n    ctx.bezierCurveTo(222.5 * scale, 307.34375 * scale, 106.5 * scale, 196.34375 * scale, 100.5 * scale, 127.34375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(106.5 * scale, 131.34375 * scale);\r\n    ctx.bezierCurveTo(140.5 * scale, 142.34375 * scale, 225.5 * scale, 184.34375 * scale, 290.5 * scale, 287.34375 * scale);\r\n    ctx.bezierCurveTo(270.5 * scale, 188.34375 * scale, 152.5 * scale, 118.34375 * scale, 107.5 * scale, 131.34375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(157.5 * scale, 137.34375 * scale);\r\n    ctx.bezierCurveTo(161.5 * scale, 138.34375 * scale, 164.5 * scale, 140.34375 * scale, 168.5 * scale, 142.34375 * scale);\r\n    ctx.bezierCurveTo(165.5 * scale, 156.34375 * scale, 141.5 * scale, 176.34375 * scale, 126.5 * scale, 179.34375 * scale);\r\n    ctx.bezierCurveTo(123.5 * scale, 173.34375 * scale, 120.5 * scale, 169.34375 * scale, 120.5 * scale, 169.34375 * scale);\r\n    ctx.bezierCurveTo(141.5 * scale, 161.34375 * scale, 156.5 * scale, 145.34375 * scale, 155.5 * scale, 136.34375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4]);\r\n    circle(ctx, 125.5 * scale, 140.34375 * scale, 11.180339887498949 * scale);\r\n    fill_path(ctx, color[5]);\r\n    circle(ctx, 122.5 * scale, 135.34375 * scale, 5.0990195135927845 * scale);\r\n    fill_path(ctx, color[6]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(196.5 * scale, 151.34375 * scale);\r\n    ctx.bezierCurveTo(211.5 * scale, 158.34375 * scale, 224.5 * scale, 171.34375 * scale, 229.5 * scale, 176.34375 * scale);\r\n    ctx.bezierCurveTo(246.5 * scale, 163.34375 * scale, 259.5 * scale, 166.34375 * scale, 272.5 * scale, 168.34375 * scale);\r\n    ctx.bezierCurveTo(254.5 * scale, 146.34375 * scale, 214.5 * scale, 145.34375 * scale, 198.5 * scale, 151.34375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[7], color[8], 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(154.5 * scale, 222.34375 * scale);\r\n    ctx.bezierCurveTo(164.5 * scale, 234.34375 * scale, 173.5 * scale, 242.34375 * scale, 178.5 * scale, 245.34375 * scale);\r\n    ctx.bezierCurveTo(174.5 * scale, 265.34375 * scale, 180.5 * scale, 274.34375 * scale, 186.5 * scale, 283.34375 * scale);\r\n    ctx.bezierCurveTo(165.5 * scale, 277.34375 * scale, 151.5 * scale, 245.34375 * scale, 155.5 * scale, 224.34375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[7], color[8], 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(279.5 * scale, 294.34375 * scale);\r\n    ctx.bezierCurveTo(286.5 * scale, 285.84375 * scale, 286.5 * scale, 285.84375 * scale, 293.5 * scale, 277.34375 * scale);\r\n    ctx.bezierCurveTo(315.5 * scale, 280.34375 * scale, 315.5 * scale, 280.34375 * scale, 337.5 * scale, 283.34375 * scale);\r\n    ctx.bezierCurveTo(340.5 * scale, 311.34375 * scale, 317.5 * scale, 326.34375 * scale, 307.5 * scale, 331.34375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[7], color[8], 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(296.5 * scale, 287.34375 * scale);\r\n    ctx.bezierCurveTo(311.5 * scale, 291.34375 * scale, 311.5 * scale, 291.34375 * scale, 326.5 * scale, 295.34375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[9], 6 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(294.5 * scale, 289.34375 * scale);\r\n    ctx.bezierCurveTo(308.5 * scale, 297.34375 * scale, 308.5 * scale, 297.34375 * scale, 322.5 * scale, 305.34375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[9], 6 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(294.5 * scale, 291.34375 * scale);\r\n    ctx.bezierCurveTo(304 * scale, 303.34375 * scale, 304 * scale, 303.34375 * scale, 313.5 * scale, 315.34375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[9], 6 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(226.5 * scale, 161.34375 * scale);\r\n    ctx.bezierCurveTo(230.5 * scale, 160.34375 * scale, 236.5 * scale, 158.34375 * scale, 238.5 * scale, 161.34375 * scale);\r\n    ctx.bezierCurveTo(238.5 * scale, 157.34375 * scale, 228.5 * scale, 159.34375 * scale, 227.5 * scale, 161.34375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[9], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(167.5 * scale, 248.34375 * scale);\r\n    ctx.bezierCurveTo(165.5 * scale, 251.34375 * scale, 168.5 * scale, 256.34375 * scale, 168.5 * scale, 253.34375 * scale);\r\n    ctx.bezierCurveTo(166.5 * scale, 252.34375 * scale, 168.5 * scale, 246.34375 * scale, 166.5 * scale, 247.34375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[9], 3 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_fishfood_cooked(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 309 * scale;\r\n    can.height = 287 * scale;\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(10 * scale, 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(34.5 * scale, 38.53125 * scale);\r\n    ctx.bezierCurveTo(91.5 * scale, 30.53125 * scale, 138.5 * scale, 68.53125 * scale, 169.5 * scale, 93.53125 * scale);\r\n    ctx.bezierCurveTo(208.5 * scale, 128.53125 * scale, 226.5 * scale, 157.53125 * scale, 233.5 * scale, 209.53125 * scale);\r\n    ctx.bezierCurveTo(195.5 * scale, 218.53125 * scale, 138.5 * scale, 191.53125 * scale, 105.5 * scale, 157.53125 * scale);\r\n    ctx.bezierCurveTo(54.5 * scale, 112.53125 * scale, 41.5 * scale, 80.53125 * scale, 33.5 * scale, 38.53125 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[0], 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(143.5 * scale, 74.53125 * scale);\r\n    ctx.bezierCurveTo(164.5 * scale, 73.53125 * scale, 159 * scale, 74.53125 * scale, 174.5 * scale, 74.53125 * scale);\r\n    ctx.bezierCurveTo(186 * scale, 86.53125 * scale, 186 * scale, 86.53125 * scale, 197.5 * scale, 98.53125 * scale);\r\n    ctx.bezierCurveTo(186 * scale, 97.03125 * scale, 186 * scale, 97.03125 * scale, 174.5 * scale, 95.53125 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[0], 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(87.5 * scale, 142.53125 * scale);\r\n    ctx.bezierCurveTo(92 * scale, 160.03125 * scale, 92 * scale, 160.03125 * scale, 96.5 * scale, 177.53125 * scale);\r\n    ctx.bezierCurveTo(108 * scale, 181.53125 * scale, 108 * scale, 181.53125 * scale, 119.5 * scale, 185.53125 * scale);\r\n    ctx.bezierCurveTo(116.5 * scale, 175.53125 * scale, 116.5 * scale, 175.53125 * scale, 113.5 * scale, 165.53125 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[0], 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(236.5 * scale, 189.53125 * scale);\r\n    ctx.bezierCurveTo(274.5 * scale, 197.53125 * scale, 255.5 * scale, 194.03125 * scale, 274.5 * scale, 198.53125 * scale);\r\n    ctx.bezierCurveTo(272.5 * scale, 236.53125 * scale, 261.5 * scale, 237.53125 * scale, 242.5 * scale, 248.53125 * scale);\r\n    ctx.bezierCurveTo(230.5 * scale, 231.03125 * scale, 230.5 * scale, 231.03125 * scale, 218.5 * scale, 213.53125 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[0], 10 * scale);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(-10 * scale, -5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(34.5 * scale, 38.53125 * scale);\r\n    ctx.bezierCurveTo(91.5 * scale, 30.53125 * scale, 138.5 * scale, 68.53125 * scale, 169.5 * scale, 93.53125 * scale);\r\n    ctx.bezierCurveTo(208.5 * scale, 128.53125 * scale, 226.5 * scale, 157.53125 * scale, 233.5 * scale, 209.53125 * scale);\r\n    ctx.bezierCurveTo(195.5 * scale, 218.53125 * scale, 138.5 * scale, 191.53125 * scale, 105.5 * scale, 157.53125 * scale);\r\n    ctx.bezierCurveTo(54.5 * scale, 112.53125 * scale, 41.5 * scale, 80.53125 * scale, 33.5 * scale, 38.53125 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(143.5 * scale, 74.53125 * scale);\r\n    ctx.bezierCurveTo(164.5 * scale, 73.53125 * scale, 159 * scale, 74.53125 * scale, 174.5 * scale, 74.53125 * scale);\r\n    ctx.bezierCurveTo(186 * scale, 86.53125 * scale, 186 * scale, 86.53125 * scale, 197.5 * scale, 98.53125 * scale);\r\n    ctx.bezierCurveTo(186 * scale, 97.03125 * scale, 186 * scale, 97.03125 * scale, 174.5 * scale, 95.53125 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(87.5 * scale, 142.53125 * scale);\r\n    ctx.bezierCurveTo(92 * scale, 160.03125 * scale, 92 * scale, 160.03125 * scale, 96.5 * scale, 177.53125 * scale);\r\n    ctx.bezierCurveTo(108 * scale, 181.53125 * scale, 108 * scale, 181.53125 * scale, 119.5 * scale, 185.53125 * scale);\r\n    ctx.bezierCurveTo(116.5 * scale, 175.53125 * scale, 116.5 * scale, 175.53125 * scale, 113.5 * scale, 165.53125 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(236.5 * scale, 189.53125 * scale);\r\n    ctx.bezierCurveTo(274.5 * scale, 197.53125 * scale, 255.5 * scale, 194.03125 * scale, 274.5 * scale, 198.53125 * scale);\r\n    ctx.bezierCurveTo(272.5 * scale, 236.53125 * scale, 261.5 * scale, 237.53125 * scale, 242.5 * scale, 248.53125 * scale);\r\n    ctx.bezierCurveTo(230.5 * scale, 231.03125 * scale, 230.5 * scale, 231.03125 * scale, 218.5 * scale, 213.53125 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(109.5 * scale, 51.53125 * scale);\r\n    ctx.bezierCurveTo(107.5 * scale, 92.53125 * scale, 91.5 * scale, 95.53125 * scale, 59.5 * scale, 101.53125 * scale);\r\n    fill_path(ctx, color[1], color[2], 7 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(72.5 * scale, 51.53125 * scale);\r\n    ctx.bezierCurveTo(71 * scale, 64.53125 * scale, 69.5 * scale, 76.53125 * scale, 69.5 * scale, 77.53125 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 7 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(84.5 * scale, 63.53125 * scale);\r\n    ctx.bezierCurveTo(70.5 * scale, 65.03125 * scale, 70.5 * scale, 65.03125 * scale, 56.5 * scale, 66.53125 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 7 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(125.5 * scale, 84.53125 * scale);\r\n    ctx.bezierCurveTo(125.5 * scale, 110.03125 * scale, 125.5 * scale, 110.03125 * scale, 125.5 * scale, 135.53125 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 7 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(149.5 * scale, 108.53125 * scale);\r\n    ctx.bezierCurveTo(150 * scale, 137.03125 * scale, 150 * scale, 137.03125 * scale, 150.5 * scale, 165.53125 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 7 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_wall(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    var w = scale * 130;\r\n    var h = scale * 142;\r\n    var x = w / 2;\r\n    var y = h / 2;\r\n    can.width = w;\r\n    can.height = h;\r\n    ctx.translate(x, y + 7 * scale);\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    circle(ctx, 0, 0, 60 * scale);\r\n    fill_path(ctx, color[0]);\r\n    ctx.translate(0, -7 * scale);\r\n    ctx.globalAlpha = 1;\r\n    circle(ctx, 0, 0, 60 * scale, 0);\r\n    fill_path(ctx, color[1], color[2], 4 * scale);\r\n    circle(ctx, 0, 0, 40 * scale);\r\n    fill_path(ctx, color[3]);\r\n    circle(ctx, 0, 0, 25 * scale);\r\n    fill_path(ctx, color[4], color[5], 8 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_delay_wall(scale, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    var w = scale * 130;\r\n    var h = scale * 142;\r\n    var x = w / 2;\r\n    var y = h / 2;\r\n    can.width = w;\r\n    can.height = h;\r\n    circle(ctx, x, y, 40 * scale, 0);\r\n    fill_path(ctx, undefined, color[0], 7 * scale);\r\n    circle(ctx, x, y, 30 * scale, 0);\r\n    fill_path(ctx, undefined, color[0], 7 * scale);\r\n    circle(ctx, x, y, 20 * scale, 0);\r\n    fill_path(ctx, color[0]);\r\n    return can;\r\n}\r\n;\r\nfunction create_wall_diamond(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 130 * scale;\r\n    can.height = 142 * scale;\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.save();\r\n    ctx.translate(65 * scale, 80 * scale);\r\n    ctx.rotate(0.2);\r\n    round_regular_polygon(ctx, 9, 60 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.save();\r\n    ctx.translate(65 * scale, 71 * scale);\r\n    ctx.rotate(0.2);\r\n    round_regular_polygon(ctx, 9, 60 * scale, 10 * scale);\r\n    fill_path(ctx, color[1], color[2], 4);\r\n    ctx.rotate(-0.32);\r\n    round_regular_polygon(ctx, 9, 38 * scale, 10 * scale);\r\n    fill_path(ctx, color[3], color[4], 4);\r\n    ctx.rotate(0.68);\r\n    round_regular_polygon(ctx, 9, 20 * scale, 8 * scale);\r\n    fill_path(ctx, color[5], color[6], 6);\r\n    ctx.restore();\r\n    return can;\r\n}\r\n;\r\nfunction create_palm(scale, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 372 * scale;\r\n    can.height = 375 * scale;\r\n    ctx.globalAlpha = 0.5;\r\n    ctx.translate(15 * scale, 15 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(313.0000305175781 * scale, 76.58523559570312 * scale);\r\n    ctx.bezierCurveTo(308.0000305175781 * scale, 130.58523559570312 * scale, 279.0000305175781 * scale, 158.58523559570312 * scale, 254.00003051757812 * scale, 175.58523559570312 * scale);\r\n    ctx.bezierCurveTo(287.0000305175781 * scale, 182.58523559570312 * scale, 274.0000305175781 * scale, 181.08523559570312 * scale, 294.0000305175781 * scale, 186.58523559570312 * scale);\r\n    ctx.bezierCurveTo(293.5000305175781 * scale, 196.08523559570312 * scale, 293.5000305175781 * scale, 196.08523559570312 * scale, 293.0000305175781 * scale, 205.58523559570312 * scale);\r\n    ctx.bezierCurveTo(304.0000305175781 * scale, 201.08523559570312 * scale, 304.0000305175781 * scale, 201.08523559570312 * scale, 315.0000305175781 * scale, 196.58523559570312 * scale);\r\n    ctx.bezierCurveTo(350.0000305175781 * scale, 219.58523559570312 * scale, 343.0000305175781 * scale, 221.58523559570312 * scale, 351.0000305175781 * scale, 230.58523559570312 * scale);\r\n    ctx.bezierCurveTo(296.0000305175781 * scale, 260.5852355957031 * scale, 264.0000305175781 * scale, 256.5852355957031 * scale, 220.00003051757812 * scale, 236.58523559570312 * scale);\r\n    ctx.bezierCurveTo(233.00003051757812 * scale, 266.5852355957031 * scale, 232.00003051757812 * scale, 279.5852355957031 * scale, 231.00003051757812 * scale, 295.5852355957031 * scale);\r\n    ctx.bezierCurveTo(222.00003051757812 * scale, 297.5852355957031 * scale, 222.00003051757812 * scale, 297.5852355957031 * scale, 213.00003051757812 * scale, 299.5852355957031 * scale);\r\n    ctx.bezierCurveTo(219.50003051757812 * scale, 308.0852355957031 * scale, 219.50003051757812 * scale, 308.0852355957031 * scale, 226.00003051757812 * scale, 316.5852355957031 * scale);\r\n    ctx.bezierCurveTo(223.00003051757812 * scale, 344.5852355957031 * scale, 216.00003051757812 * scale, 350.5852355957031 * scale, 209.00003051757812 * scale, 363.5852355957031 * scale);\r\n    ctx.bezierCurveTo(154.00003051757812 * scale, 318.5852355957031 * scale, 156.00003051757812 * scale, 268.5852355957031 * scale, 160.00003051757812 * scale, 238.58523559570312 * scale);\r\n    ctx.bezierCurveTo(135.00003051757812 * scale, 268.5852355957031 * scale, 125.00003051757812 * scale, 267.5852355957031 * scale, 112.00003051757812 * scale, 272.5852355957031 * scale);\r\n    ctx.bezierCurveTo(104.50003051757812 * scale, 266.5852355957031 * scale, 104.50003051757812 * scale, 266.5852355957031 * scale, 97.00003051757812 * scale, 260.5852355957031 * scale);\r\n    ctx.bezierCurveTo(93.00003051757812 * scale, 271.0852355957031 * scale, 93.00003051757812 * scale, 271.0852355957031 * scale, 89.00003051757812 * scale, 281.5852355957031 * scale);\r\n    ctx.bezierCurveTo(66.00003051757812 * scale, 288.5852355957031 * scale, 59.000030517578125 * scale, 288.5852355957031 * scale, 39.000030517578125 * scale, 285.5852355957031 * scale);\r\n    ctx.bezierCurveTo(56.000030517578125 * scale, 216.58523559570312 * scale, 91.00003051757812 * scale, 204.58523559570312 * scale, 129.00003051757812 * scale, 189.58523559570312 * scale);\r\n    ctx.bezierCurveTo(90.00003051757812 * scale, 176.58523559570312 * scale, 89.00003051757812 * scale, 173.58523559570312 * scale, 79.00003051757812 * scale, 166.58523559570312 * scale);\r\n    ctx.bezierCurveTo(82.00003051757812 * scale, 155.08523559570312 * scale, 82.00003051757812 * scale, 155.08523559570312 * scale, 85.00003051757812 * scale, 143.58523559570312 * scale);\r\n    ctx.bezierCurveTo(75.50003051757812 * scale, 147.58523559570312 * scale, 75.50003051757812 * scale, 147.58523559570312 * scale, 66.00003051757812 * scale, 151.58523559570312 * scale);\r\n    ctx.bezierCurveTo(44.000030517578125 * scale, 133.58523559570312 * scale, 41.000030517578125 * scale, 124.58523559570312 * scale, 34.000030517578125 * scale, 102.58523559570312 * scale);\r\n    ctx.bezierCurveTo(100.00003051757812 * scale, 81.58523559570312 * scale, 134.00003051757812 * scale, 118.58523559570312 * scale, 150.00003051757812 * scale, 128.58523559570312 * scale);\r\n    ctx.bezierCurveTo(144.00003051757812 * scale, 102.58523559570312 * scale, 147.00003051757812 * scale, 90.58523559570312 * scale, 150.00003051757812 * scale, 80.58523559570312 * scale);\r\n    ctx.bezierCurveTo(159.50003051757812 * scale, 79.08523559570312 * scale, 159.50003051757812 * scale, 79.08523559570312 * scale, 169.00003051757812 * scale, 77.58523559570312 * scale);\r\n    ctx.bezierCurveTo(163.00003051757812 * scale, 72.58523559570312 * scale, 163.00003051757812 * scale, 72.58523559570312 * scale, 157.00003051757812 * scale, 67.58523559570312 * scale);\r\n    ctx.bezierCurveTo(162.00003051757812 * scale, 42.585235595703125 * scale, 169.00003051757812 * scale, 29.585235595703125 * scale, 182.00003051757812 * scale, 14.585235595703125 * scale);\r\n    ctx.bezierCurveTo(219.00003051757812 * scale, 48.585235595703125 * scale, 222.00003051757812 * scale, 92.58523559570312 * scale, 218.00003051757812 * scale, 112.58523559570312 * scale);\r\n    ctx.bezierCurveTo(239.00003051757812 * scale, 95.58523559570312 * scale, 242.00003051757812 * scale, 97.58523559570312 * scale, 249.00003051757812 * scale, 94.58523559570312 * scale);\r\n    ctx.bezierCurveTo(255.00003051757812 * scale, 103.08523559570312 * scale, 255.00003051757812 * scale, 103.08523559570312 * scale, 261.0000305175781 * scale, 111.58523559570312 * scale);\r\n    ctx.bezierCurveTo(261.5000305175781 * scale, 99.58523559570312 * scale, 261.5000305175781 * scale, 99.58523559570312 * scale, 262.0000305175781 * scale, 87.58523559570312 * scale);\r\n    ctx.bezierCurveTo(282.0000305175781 * scale, 77.58523559570312 * scale, 301.0000305175781 * scale, 74.58523559570312 * scale, 314.0000305175781 * scale, 76.58523559570312 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(-15 * scale, -15 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(313.0000305175781 * scale, 76.58523559570312 * scale);\r\n    ctx.bezierCurveTo(308.0000305175781 * scale, 130.58523559570312 * scale, 279.0000305175781 * scale, 158.58523559570312 * scale, 254.00003051757812 * scale, 175.58523559570312 * scale);\r\n    ctx.bezierCurveTo(287.0000305175781 * scale, 182.58523559570312 * scale, 274.0000305175781 * scale, 181.08523559570312 * scale, 294.0000305175781 * scale, 186.58523559570312 * scale);\r\n    ctx.bezierCurveTo(293.5000305175781 * scale, 196.08523559570312 * scale, 293.5000305175781 * scale, 196.08523559570312 * scale, 293.0000305175781 * scale, 205.58523559570312 * scale);\r\n    ctx.bezierCurveTo(304.0000305175781 * scale, 201.08523559570312 * scale, 304.0000305175781 * scale, 201.08523559570312 * scale, 315.0000305175781 * scale, 196.58523559570312 * scale);\r\n    ctx.bezierCurveTo(350.0000305175781 * scale, 219.58523559570312 * scale, 343.0000305175781 * scale, 221.58523559570312 * scale, 351.0000305175781 * scale, 230.58523559570312 * scale);\r\n    ctx.bezierCurveTo(296.0000305175781 * scale, 260.5852355957031 * scale, 264.0000305175781 * scale, 256.5852355957031 * scale, 220.00003051757812 * scale, 236.58523559570312 * scale);\r\n    ctx.bezierCurveTo(233.00003051757812 * scale, 266.5852355957031 * scale, 232.00003051757812 * scale, 279.5852355957031 * scale, 231.00003051757812 * scale, 295.5852355957031 * scale);\r\n    ctx.bezierCurveTo(222.00003051757812 * scale, 297.5852355957031 * scale, 222.00003051757812 * scale, 297.5852355957031 * scale, 213.00003051757812 * scale, 299.5852355957031 * scale);\r\n    ctx.bezierCurveTo(219.50003051757812 * scale, 308.0852355957031 * scale, 219.50003051757812 * scale, 308.0852355957031 * scale, 226.00003051757812 * scale, 316.5852355957031 * scale);\r\n    ctx.bezierCurveTo(223.00003051757812 * scale, 344.5852355957031 * scale, 216.00003051757812 * scale, 350.5852355957031 * scale, 209.00003051757812 * scale, 363.5852355957031 * scale);\r\n    ctx.bezierCurveTo(154.00003051757812 * scale, 318.5852355957031 * scale, 156.00003051757812 * scale, 268.5852355957031 * scale, 160.00003051757812 * scale, 238.58523559570312 * scale);\r\n    ctx.bezierCurveTo(135.00003051757812 * scale, 268.5852355957031 * scale, 125.00003051757812 * scale, 267.5852355957031 * scale, 112.00003051757812 * scale, 272.5852355957031 * scale);\r\n    ctx.bezierCurveTo(104.50003051757812 * scale, 266.5852355957031 * scale, 104.50003051757812 * scale, 266.5852355957031 * scale, 97.00003051757812 * scale, 260.5852355957031 * scale);\r\n    ctx.bezierCurveTo(93.00003051757812 * scale, 271.0852355957031 * scale, 93.00003051757812 * scale, 271.0852355957031 * scale, 89.00003051757812 * scale, 281.5852355957031 * scale);\r\n    ctx.bezierCurveTo(66.00003051757812 * scale, 288.5852355957031 * scale, 59.000030517578125 * scale, 288.5852355957031 * scale, 39.000030517578125 * scale, 285.5852355957031 * scale);\r\n    ctx.bezierCurveTo(56.000030517578125 * scale, 216.58523559570312 * scale, 91.00003051757812 * scale, 204.58523559570312 * scale, 129.00003051757812 * scale, 189.58523559570312 * scale);\r\n    ctx.bezierCurveTo(90.00003051757812 * scale, 176.58523559570312 * scale, 89.00003051757812 * scale, 173.58523559570312 * scale, 79.00003051757812 * scale, 166.58523559570312 * scale);\r\n    ctx.bezierCurveTo(82.00003051757812 * scale, 155.08523559570312 * scale, 82.00003051757812 * scale, 155.08523559570312 * scale, 85.00003051757812 * scale, 143.58523559570312 * scale);\r\n    ctx.bezierCurveTo(75.50003051757812 * scale, 147.58523559570312 * scale, 75.50003051757812 * scale, 147.58523559570312 * scale, 66.00003051757812 * scale, 151.58523559570312 * scale);\r\n    ctx.bezierCurveTo(44.000030517578125 * scale, 133.58523559570312 * scale, 41.000030517578125 * scale, 124.58523559570312 * scale, 34.000030517578125 * scale, 102.58523559570312 * scale);\r\n    ctx.bezierCurveTo(100.00003051757812 * scale, 81.58523559570312 * scale, 134.00003051757812 * scale, 118.58523559570312 * scale, 150.00003051757812 * scale, 128.58523559570312 * scale);\r\n    ctx.bezierCurveTo(144.00003051757812 * scale, 102.58523559570312 * scale, 147.00003051757812 * scale, 90.58523559570312 * scale, 150.00003051757812 * scale, 80.58523559570312 * scale);\r\n    ctx.bezierCurveTo(159.50003051757812 * scale, 79.08523559570312 * scale, 159.50003051757812 * scale, 79.08523559570312 * scale, 169.00003051757812 * scale, 77.58523559570312 * scale);\r\n    ctx.bezierCurveTo(163.00003051757812 * scale, 72.58523559570312 * scale, 163.00003051757812 * scale, 72.58523559570312 * scale, 157.00003051757812 * scale, 67.58523559570312 * scale);\r\n    ctx.bezierCurveTo(162.00003051757812 * scale, 42.585235595703125 * scale, 169.00003051757812 * scale, 29.585235595703125 * scale, 182.00003051757812 * scale, 14.585235595703125 * scale);\r\n    ctx.bezierCurveTo(219.00003051757812 * scale, 48.585235595703125 * scale, 222.00003051757812 * scale, 92.58523559570312 * scale, 218.00003051757812 * scale, 112.58523559570312 * scale);\r\n    ctx.bezierCurveTo(239.00003051757812 * scale, 95.58523559570312 * scale, 242.00003051757812 * scale, 97.58523559570312 * scale, 249.00003051757812 * scale, 94.58523559570312 * scale);\r\n    ctx.bezierCurveTo(255.00003051757812 * scale, 103.08523559570312 * scale, 255.00003051757812 * scale, 103.08523559570312 * scale, 261.0000305175781 * scale, 111.58523559570312 * scale);\r\n    ctx.bezierCurveTo(261.5000305175781 * scale, 99.58523559570312 * scale, 261.5000305175781 * scale, 99.58523559570312 * scale, 262.0000305175781 * scale, 87.58523559570312 * scale);\r\n    ctx.bezierCurveTo(282.0000305175781 * scale, 77.58523559570312 * scale, 301.0000305175781 * scale, 74.58523559570312 * scale, 314.0000305175781 * scale, 76.58523559570312 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(186.00003051757812 * scale, 192.94886779785156 * scale);\r\n    ctx.bezierCurveTo(185.00003051757812 * scale, 66.94886779785156 * scale, 184.50003051757812 * scale, 104.94886779785156 * scale, 183.00003051757812 * scale, 16.948867797851562 * scale);\r\n    ctx.bezierCurveTo(216.00003051757812 * scale, 47.94886779785156 * scale, 219.00003051757812 * scale, 80.94886779785156 * scale, 218.00003051757812 * scale, 113.94886779785156 * scale);\r\n    ctx.bezierCurveTo(209.00003051757812 * scale, 165.94886779785156 * scale, 200.00003051757812 * scale, 176.94886779785156 * scale, 189.00003051757812 * scale, 192.94886779785156 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[3], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(190.00003051757812 * scale, 191.94886779785156 * scale);\r\n    ctx.bezierCurveTo(207.00003051757812 * scale, 348.94886779785156 * scale, 205.00003051757812 * scale, 323.94886779785156 * scale, 209.00003051757812 * scale, 358.94886779785156 * scale);\r\n    ctx.bezierCurveTo(171.00003051757812 * scale, 334.94886779785156 * scale, 167.00003051757812 * scale, 302.94886779785156 * scale, 161.00003051757812 * scale, 268.94886779785156 * scale);\r\n    ctx.bezierCurveTo(160.00003051757812 * scale, 218.94886779785156 * scale, 181.00003051757812 * scale, 191.94886779785156 * scale, 189.00003051757812 * scale, 186.94886779785156 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[3], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(194.00003051757812 * scale, 195.94886779785156 * scale);\r\n    ctx.bezierCurveTo(116.00003051757812 * scale, 150.94886779785156 * scale, 116.00003051757812 * scale, 150.94886779785156 * scale, 38.000030517578125 * scale, 105.94886779785156 * scale);\r\n    ctx.bezierCurveTo(67.00003051757812 * scale, 90.94886779785156 * scale, 96.00003051757812 * scale, 99.94886779785156 * scale, 123.00003051757812 * scale, 111.94886779785156 * scale);\r\n    ctx.bezierCurveTo(183.00003051757812 * scale, 152.94886779785156 * scale, 179.00003051757812 * scale, 180.94886779785156 * scale, 193.00003051757812 * scale, 194.94886779785156 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[3], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(189.00003051757812 * scale, 190.94886779785156 * scale);\r\n    ctx.bezierCurveTo(250.00003051757812 * scale, 133.94886779785156 * scale, 311.0000305175781 * scale, 78.94886779785156 * scale, 311.0000305175781 * scale, 76.94886779785156 * scale);\r\n    ctx.bezierCurveTo(306.0000305175781 * scale, 127.94886779785156 * scale, 283.0000305175781 * scale, 148.94886779785156 * scale, 261.0000305175781 * scale, 166.94886779785156 * scale);\r\n    ctx.bezierCurveTo(220.00003051757812 * scale, 197.94886779785156 * scale, 191.00003051757812 * scale, 194.94886779785156 * scale, 189.00003051757812 * scale, 195.94886779785156 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[3], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(189.00003051757812 * scale, 194.94886779785156 * scale);\r\n    ctx.bezierCurveTo(268.5000305175781 * scale, 211.94886779785156 * scale, 268.5000305175781 * scale, 211.94886779785156 * scale, 348.0000305175781 * scale, 228.94886779785156 * scale);\r\n    ctx.bezierCurveTo(316.0000305175781 * scale, 247.94886779785156 * scale, 298.0000305175781 * scale, 256.94886779785156 * scale, 250.00003051757812 * scale, 246.94886779785156 * scale);\r\n    ctx.bezierCurveTo(197.00003051757812 * scale, 229.94886779785156 * scale, 189.00003051757812 * scale, 202.94886779785156 * scale, 188.00003051757812 * scale, 199.94886779785156 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[3], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(192.00003051757812 * scale, 191.94886779785156 * scale);\r\n    ctx.bezierCurveTo(116.50003051757812 * scale, 238.44886779785156 * scale, 116.50003051757812 * scale, 238.44886779785156 * scale, 41.000030517578125 * scale, 284.94886779785156 * scale);\r\n    ctx.bezierCurveTo(49.000030517578125 * scale, 252.94886779785156 * scale, 56.000030517578125 * scale, 242.94886779785156 * scale, 80.00003051757812 * scale, 215.94886779785156 * scale);\r\n    ctx.bezierCurveTo(125.00003051757812 * scale, 181.94886779785156 * scale, 174.00003051757812 * scale, 183.94886779785156 * scale, 192.00003051757812 * scale, 191.94886779785156 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[3], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(313.0000305175781 * scale, 76.58523559570312 * scale);\r\n    ctx.bezierCurveTo(308.0000305175781 * scale, 130.58523559570312 * scale, 279.0000305175781 * scale, 158.58523559570312 * scale, 254.00003051757812 * scale, 175.58523559570312 * scale);\r\n    ctx.bezierCurveTo(287.0000305175781 * scale, 182.58523559570312 * scale, 274.0000305175781 * scale, 181.08523559570312 * scale, 294.0000305175781 * scale, 186.58523559570312 * scale);\r\n    ctx.bezierCurveTo(293.5000305175781 * scale, 196.08523559570312 * scale, 293.5000305175781 * scale, 196.08523559570312 * scale, 293.0000305175781 * scale, 205.58523559570312 * scale);\r\n    ctx.bezierCurveTo(304.0000305175781 * scale, 201.08523559570312 * scale, 304.0000305175781 * scale, 201.08523559570312 * scale, 315.0000305175781 * scale, 196.58523559570312 * scale);\r\n    ctx.bezierCurveTo(350.0000305175781 * scale, 219.58523559570312 * scale, 343.0000305175781 * scale, 221.58523559570312 * scale, 351.0000305175781 * scale, 230.58523559570312 * scale);\r\n    ctx.bezierCurveTo(296.0000305175781 * scale, 260.5852355957031 * scale, 264.0000305175781 * scale, 256.5852355957031 * scale, 220.00003051757812 * scale, 236.58523559570312 * scale);\r\n    ctx.bezierCurveTo(233.00003051757812 * scale, 266.5852355957031 * scale, 232.00003051757812 * scale, 279.5852355957031 * scale, 231.00003051757812 * scale, 295.5852355957031 * scale);\r\n    ctx.bezierCurveTo(222.00003051757812 * scale, 297.5852355957031 * scale, 222.00003051757812 * scale, 297.5852355957031 * scale, 213.00003051757812 * scale, 299.5852355957031 * scale);\r\n    ctx.bezierCurveTo(219.50003051757812 * scale, 308.0852355957031 * scale, 219.50003051757812 * scale, 308.0852355957031 * scale, 226.00003051757812 * scale, 316.5852355957031 * scale);\r\n    ctx.bezierCurveTo(223.00003051757812 * scale, 344.5852355957031 * scale, 216.00003051757812 * scale, 350.5852355957031 * scale, 209.00003051757812 * scale, 363.5852355957031 * scale);\r\n    ctx.bezierCurveTo(154.00003051757812 * scale, 318.5852355957031 * scale, 156.00003051757812 * scale, 268.5852355957031 * scale, 160.00003051757812 * scale, 238.58523559570312 * scale);\r\n    ctx.bezierCurveTo(135.00003051757812 * scale, 268.5852355957031 * scale, 125.00003051757812 * scale, 267.5852355957031 * scale, 112.00003051757812 * scale, 272.5852355957031 * scale);\r\n    ctx.bezierCurveTo(104.50003051757812 * scale, 266.5852355957031 * scale, 104.50003051757812 * scale, 266.5852355957031 * scale, 97.00003051757812 * scale, 260.5852355957031 * scale);\r\n    ctx.bezierCurveTo(93.00003051757812 * scale, 271.0852355957031 * scale, 93.00003051757812 * scale, 271.0852355957031 * scale, 89.00003051757812 * scale, 281.5852355957031 * scale);\r\n    ctx.bezierCurveTo(66.00003051757812 * scale, 288.5852355957031 * scale, 59.000030517578125 * scale, 288.5852355957031 * scale, 39.000030517578125 * scale, 285.5852355957031 * scale);\r\n    ctx.bezierCurveTo(56.000030517578125 * scale, 216.58523559570312 * scale, 91.00003051757812 * scale, 204.58523559570312 * scale, 129.00003051757812 * scale, 189.58523559570312 * scale);\r\n    ctx.bezierCurveTo(90.00003051757812 * scale, 176.58523559570312 * scale, 89.00003051757812 * scale, 173.58523559570312 * scale, 79.00003051757812 * scale, 166.58523559570312 * scale);\r\n    ctx.bezierCurveTo(82.00003051757812 * scale, 155.08523559570312 * scale, 82.00003051757812 * scale, 155.08523559570312 * scale, 85.00003051757812 * scale, 143.58523559570312 * scale);\r\n    ctx.bezierCurveTo(75.50003051757812 * scale, 147.58523559570312 * scale, 75.50003051757812 * scale, 147.58523559570312 * scale, 66.00003051757812 * scale, 151.58523559570312 * scale);\r\n    ctx.bezierCurveTo(44.000030517578125 * scale, 133.58523559570312 * scale, 41.000030517578125 * scale, 124.58523559570312 * scale, 34.000030517578125 * scale, 102.58523559570312 * scale);\r\n    ctx.bezierCurveTo(100.00003051757812 * scale, 81.58523559570312 * scale, 134.00003051757812 * scale, 118.58523559570312 * scale, 150.00003051757812 * scale, 128.58523559570312 * scale);\r\n    ctx.bezierCurveTo(144.00003051757812 * scale, 102.58523559570312 * scale, 147.00003051757812 * scale, 90.58523559570312 * scale, 150.00003051757812 * scale, 80.58523559570312 * scale);\r\n    ctx.bezierCurveTo(159.50003051757812 * scale, 79.08523559570312 * scale, 159.50003051757812 * scale, 79.08523559570312 * scale, 169.00003051757812 * scale, 77.58523559570312 * scale);\r\n    ctx.bezierCurveTo(163.00003051757812 * scale, 72.58523559570312 * scale, 163.00003051757812 * scale, 72.58523559570312 * scale, 157.00003051757812 * scale, 67.58523559570312 * scale);\r\n    ctx.bezierCurveTo(162.00003051757812 * scale, 42.585235595703125 * scale, 169.00003051757812 * scale, 29.585235595703125 * scale, 182.00003051757812 * scale, 14.585235595703125 * scale);\r\n    ctx.bezierCurveTo(219.00003051757812 * scale, 48.585235595703125 * scale, 222.00003051757812 * scale, 92.58523559570312 * scale, 218.00003051757812 * scale, 112.58523559570312 * scale);\r\n    ctx.bezierCurveTo(239.00003051757812 * scale, 95.58523559570312 * scale, 242.00003051757812 * scale, 97.58523559570312 * scale, 249.00003051757812 * scale, 94.58523559570312 * scale);\r\n    ctx.bezierCurveTo(255.00003051757812 * scale, 103.08523559570312 * scale, 255.00003051757812 * scale, 103.08523559570312 * scale, 261.0000305175781 * scale, 111.58523559570312 * scale);\r\n    ctx.bezierCurveTo(261.5000305175781 * scale, 99.58523559570312 * scale, 261.5000305175781 * scale, 99.58523559570312 * scale, 262.0000305175781 * scale, 87.58523559570312 * scale);\r\n    ctx.bezierCurveTo(282.0000305175781 * scale, 77.58523559570312 * scale, 301.0000305175781 * scale, 74.58523559570312 * scale, 314.0000305175781 * scale, 76.58523559570312 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[2], 4 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_special_fur(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 248 * scale;\r\n    can.height = 128 * scale;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(137 * scale, 7 * scale);\r\n    ctx.bezierCurveTo(169 * scale, 14 * scale, 212 * scale, 9 * scale, 241 * scale, 5 * scale);\r\n    ctx.bezierCurveTo(211 * scale, 63 * scale, 158 * scale, 92 * scale, 103 * scale, 109 * scale);\r\n    ctx.bezierCurveTo(73 * scale, 126 * scale, 54 * scale, 124 * scale, 6 * scale, 99 * scale);\r\n    ctx.bezierCurveTo(82 * scale, 63 * scale, 113 * scale, 35 * scale, 137 * scale, 8 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[1], 14 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(73 * scale, 124 * scale);\r\n    ctx.bezierCurveTo(111 * scale, 126 * scale, 162 * scale, 97 * scale, 203 * scale, 61 * scale);\r\n    ctx.bezierCurveTo(156 * scale, 98 * scale, 131 * scale, 106 * scale, 105 * scale, 109 * scale);\r\n    ctx.bezierCurveTo(99 * scale, 121 * scale, 87 * scale, 124 * scale, 72 * scale, 124 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2], color[3], 1 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_wall_stone(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 130 * scale;\r\n    can.height = 148 * scale;\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.save();\r\n    ctx.translate(65 * scale, 85 * scale);\r\n    ctx.rotate(1.4);\r\n    round_regular_polygon(ctx, 7, 60 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.save();\r\n    ctx.translate(65 * scale, 74 * scale);\r\n    ctx.rotate(1.4);\r\n    round_regular_polygon(ctx, 7, 60 * scale, 10 * scale);\r\n    fill_path(ctx, color[1], color[2], 4);\r\n    ctx.rotate(0.64);\r\n    round_regular_polygon(ctx, 7, 40 * scale, 10 * scale);\r\n    fill_path(ctx, color[3], color[4], 4);\r\n    ctx.rotate(0.12);\r\n    round_regular_polygon(ctx, 7, 23 * scale, 5 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[5]);\r\n    return can;\r\n}\r\n;\r\nfunction create_wall_gold(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = scale * 125;\r\n    can.height = scale * 139;\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.save();\r\n    ctx.translate(63 * scale, 79 * scale);\r\n    ctx.rotate(1);\r\n    round_regular_polygon(ctx, 8, 60 * scale, 10 * scale);\r\n    fill_path(ctx, color[0]);\r\n    ctx.restore();\r\n    ctx.globalAlpha = 1;\r\n    ctx.save();\r\n    ctx.translate(63 * scale, 69 * scale);\r\n    ctx.rotate(1);\r\n    round_regular_polygon(ctx, 8, 60 * scale, 10 * scale);\r\n    fill_path(ctx, color[1], color[2], 4);\r\n    ctx.rotate(0.56);\r\n    round_regular_polygon(ctx, 8, 40 * scale, 10 * scale);\r\n    fill_path(ctx, color[3], color[4], 4);\r\n    ctx.rotate(0.28);\r\n    round_regular_polygon(ctx, 8, 28 * scale, 8 * scale);\r\n    fill_path(ctx, color[5]);\r\n    ctx.restore();\r\n    return can;\r\n}\r\n;\r\nfunction create_door_wood(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 90 * scale;\r\n    can.height = 101 * scale;\r\n    ctx.translate(0 * scale, 5 * scale);\r\n    if (i === 0) {\r\n        ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n        circle(ctx, 44 * scale, 55 * scale, 41 * scale);\r\n        fill_path(ctx, color[0]);\r\n    }\r\n    ctx.globalAlpha = 1;\r\n    circle(ctx, 44 * scale, 45 * scale, 41 * scale);\r\n    fill_path(ctx, color[1], color[2], 4 * scale);\r\n    circle(ctx, 44 * scale, 45 * scale, 31 * scale);\r\n    fill_path(ctx, color[3]);\r\n    ctx.save();\r\n    ctx.translate(45 * scale, 45 * scale);\r\n    round_rect(ctx, -9 * scale, -25.5 * scale, 18 * scale, 51 * scale, 30 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[4], color[4], 2 * scale);\r\n    ctx.save();\r\n    ctx.translate(45 * scale, 45 * scale);\r\n    round_rect(ctx, -26 * scale, -9 * scale, 52 * scale, 18 * scale, 30 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[4], color[4], 2 * scale);\r\n    circle(ctx, 45 * scale, 29 * scale, 7 * scale);\r\n    fill_path(ctx, color[5]);\r\n    circle(ctx, 45 * scale, 61 * scale, 7 * scale);\r\n    fill_path(ctx, color[5]);\r\n    circle(ctx, 28 * scale, 45 * scale, 7 * scale);\r\n    fill_path(ctx, color[5]);\r\n    circle(ctx, 62 * scale, 45 * scale, 7 * scale);\r\n    fill_path(ctx, color[5]);\r\n    return can;\r\n}\r\n;\r\nfunction create_door_stone(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 90 * scale;\r\n    can.height = 98 * scale;\r\n    ctx.translate(0, 4 * scale);\r\n    if (i === 0) {\r\n        ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n        ctx.save();\r\n        ctx.translate(44 * scale, 50 * scale);\r\n        ctx.rotate(1.4);\r\n        round_regular_polygon(ctx, 7, 41 * scale, 10 * scale);\r\n        ctx.restore();\r\n        fill_path(ctx, color[0]);\r\n    }\r\n    ctx.globalAlpha = 1;\r\n    ctx.save();\r\n    ctx.translate(44 * scale, 44 * scale);\r\n    ctx.rotate(1.4);\r\n    round_regular_polygon(ctx, 7, 41 * scale, 10 * scale);\r\n    fill_path(ctx, color[1], color[2], 4 * scale);\r\n    round_regular_polygon(ctx, 7, 35 * scale, 10 * scale);\r\n    fill_path(ctx, color[3], color[4], 4 * scale);\r\n    round_regular_polygon(ctx, 7, 23 * scale, 5 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[5]);\r\n    ctx.save();\r\n    ctx.translate(45 * scale, 45 * scale);\r\n    ctx.rotate(0);\r\n    round_rect(ctx, -9 * scale, -25.5 * scale, 18 * scale, 51 * scale, 30 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[4], color[4], 2 * scale);\r\n    ctx.save();\r\n    ctx.translate(45 * scale, 45 * scale);\r\n    ctx.rotate(0);\r\n    round_rect(ctx, -26 * scale, -9 * scale, 52 * scale, 18 * scale, 30 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[4], color[4], 2 * scale);\r\n    circle(ctx, 45 * scale, 29 * scale, 7 * scale);\r\n    fill_path(ctx, color[5]);\r\n    circle(ctx, 45 * scale, 61 * scale, 7 * scale);\r\n    fill_path(ctx, color[5]);\r\n    circle(ctx, 28 * scale, 45 * scale, 7 * scale);\r\n    fill_path(ctx, color[5]);\r\n    circle(ctx, 62 * scale, 45 * scale, 7 * scale);\r\n    fill_path(ctx, color[5]);\r\n    return can;\r\n}\r\n;\r\nfunction create_door_gold(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 90 * scale;\r\n    can.height = 98 * scale;\r\n    ctx.translate(0, 4 * scale);\r\n    if (i === 0) {\r\n        ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n        ctx.save();\r\n        ctx.translate(44 * scale, 50 * scale);\r\n        ctx.rotate(1);\r\n        round_regular_polygon(ctx, 8, 41 * scale, 10 * scale);\r\n        fill_path(ctx, color[0]);\r\n        ctx.restore();\r\n    }\r\n    ctx.globalAlpha = 1;\r\n    ctx.save();\r\n    ctx.translate(44 * scale, 44 * scale);\r\n    ctx.rotate(1);\r\n    round_regular_polygon(ctx, 8, 41 * scale, 10 * scale);\r\n    fill_path(ctx, color[1], color[2], 4 * scale);\r\n    ctx.rotate(0.56);\r\n    round_regular_polygon(ctx, 8, 33 * scale, 10 * scale);\r\n    fill_path(ctx, color[3], color[4], 4 * scale);\r\n    ctx.rotate(0.28);\r\n    round_regular_polygon(ctx, 8, 24 * scale, 8 * scale);\r\n    fill_path(ctx, color[5]);\r\n    ctx.restore();\r\n    ctx.save();\r\n    ctx.translate(45 * scale, 45 * scale);\r\n    ctx.rotate(0);\r\n    round_rect(ctx, -9 * scale, -25.5 * scale, 18 * scale, 51 * scale, 30 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[4], color[4], 2 * scale);\r\n    ctx.save();\r\n    ctx.translate(45 * scale, 45 * scale);\r\n    ctx.rotate(0);\r\n    round_rect(ctx, -26 * scale, -9 * scale, 52 * scale, 18 * scale, 30 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[4], color[4], 2 * scale);\r\n    circle(ctx, 45 * scale, 29 * scale, 7 * scale);\r\n    fill_path(ctx, color[5]);\r\n    circle(ctx, 45 * scale, 61 * scale, 7 * scale);\r\n    fill_path(ctx, color[5]);\r\n    circle(ctx, 28 * scale, 45 * scale, 7 * scale);\r\n    fill_path(ctx, color[5]);\r\n    circle(ctx, 62 * scale, 45 * scale, 7 * scale);\r\n    fill_path(ctx, color[5]);\r\n    return can;\r\n}\r\n;\r\nfunction create_furnace_on(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 300 * scale;\r\n    can.height = 300 * scale;\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.save();\r\n    ctx.translate(150 * scale, 160 * scale);\r\n    ctx.rotate(6.28);\r\n    round_regular_polygon(ctx, 6, 146 * scale, 30 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.save();\r\n    ctx.translate(150 * scale, 150 * scale);\r\n    ctx.rotate(6.28);\r\n    round_regular_polygon(ctx, 6, 146 * scale, 30 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[1], color[2], 8 * scale);\r\n    ctx.save();\r\n    ctx.translate(150 * scale, 150 * scale);\r\n    ctx.rotate(0);\r\n    round_regular_polygon(ctx, 6, 105 * scale, 30 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[3], color[3], 8 * scale);\r\n    ctx.save();\r\n    ctx.translate(150 * scale, 150 * scale);\r\n    ctx.rotate(0);\r\n    round_regular_polygon(ctx, 6, 66 * scale, 30 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[4], color[2], 8 * scale);\r\n    ctx.save();\r\n    ctx.translate(150 * scale, 150 * scale);\r\n    ctx.rotate(0);\r\n    round_regular_polygon(ctx, 6, 31 * scale, 30 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[5], color[6], 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(150 * scale, 207 * scale);\r\n    ctx.bezierCurveTo(150 * scale, 151 * scale, 150 * scale, 101 * scale, 150 * scale, 94 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[2], 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(118 * scale, 100 * scale);\r\n    ctx.bezierCurveTo(118 * scale, 205 * scale, 118 * scale, 207 * scale, 118 * scale, 200 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[2], 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(183 * scale, 100 * scale);\r\n    ctx.bezierCurveTo(183 * scale, 203 * scale, 183 * scale, 203 * scale, 183 * scale, 200 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[2], 8 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_furnace_off(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 300 * scale;\r\n    can.height = 300 * scale;\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.save();\r\n    ctx.translate(150 * scale, 160 * scale);\r\n    ctx.rotate(6.28);\r\n    round_regular_polygon(ctx, 6, 146 * scale, 30 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.save();\r\n    ctx.translate(150 * scale, 150 * scale);\r\n    ctx.rotate(6.28);\r\n    round_regular_polygon(ctx, 6, 146 * scale, 30 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[1], color[2], 8 * scale);\r\n    ctx.save();\r\n    ctx.translate(150 * scale, 150 * scale);\r\n    ctx.rotate(0);\r\n    round_regular_polygon(ctx, 6, 105 * scale, 30 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[3], color[3], 8 * scale);\r\n    ctx.save();\r\n    ctx.translate(150 * scale, 150 * scale);\r\n    ctx.rotate(0);\r\n    round_regular_polygon(ctx, 6, 66 * scale, 30 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[4], color[2], 8 * scale);\r\n    ctx.save();\r\n    ctx.translate(131 * scale, 116 * scale);\r\n    round_regular_polygon(ctx, 7, 17 * scale, 8 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[6]);\r\n    ctx.save();\r\n    ctx.translate(163 * scale, 168 * scale);\r\n    round_regular_polygon(ctx, 7, 25 * scale, 8 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[6]);\r\n    ctx.save();\r\n    ctx.translate(117 * scale, 151 * scale);\r\n    round_regular_polygon(ctx, 7, 11 * scale, 8 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[6]);\r\n    ctx.save();\r\n    ctx.translate(167 * scale, 122 * scale);\r\n    round_regular_polygon(ctx, 7, 12 * scale, 8 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[6]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(150 * scale, 207 * scale);\r\n    ctx.bezierCurveTo(150 * scale, 151 * scale, 150 * scale, 101 * scale, 150 * scale, 94 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[2], 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(118 * scale, 100 * scale);\r\n    ctx.bezierCurveTo(118 * scale, 205 * scale, 118 * scale, 207 * scale, 118 * scale, 200 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[2], 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(183 * scale, 100 * scale);\r\n    ctx.bezierCurveTo(183 * scale, 203 * scale, 183 * scale, 203 * scale, 183 * scale, 200 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[2], 8 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_furnace_slot(scale, useless, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 118 * scale;\r\n    can.height = 129 * scale;\r\n    ctx.save();\r\n    ctx.translate(90 * scale, 90 * scale);\r\n    round_rect(ctx, -86.5 * scale, -86 * scale, 110 * scale, 110 * scale, 15 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0], color[1], 4);\r\n    return can;\r\n}\r\n;\r\nfunction create_door_diamond(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 90 * scale;\r\n    can.height = 98 * scale;\r\n    ctx.translate(0, 4 * scale);\r\n    if (i === 0) {\r\n        ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n        ctx.save();\r\n        ctx.translate(44 * scale, 50 * scale);\r\n        ctx.rotate(0.2);\r\n        round_regular_polygon(ctx, 9, 41 * scale, 10 * scale);\r\n        ctx.restore();\r\n        fill_path(ctx, color[0]);\r\n    }\r\n    ctx.globalAlpha = 1;\r\n    ctx.save();\r\n    ctx.translate(44 * scale, 44 * scale);\r\n    ctx.rotate(0.2);\r\n    round_regular_polygon(ctx, 9, 41 * scale, 10 * scale);\r\n    fill_path(ctx, color[1], color[2], 4 * scale);\r\n    ctx.rotate(-0.32);\r\n    round_regular_polygon(ctx, 9, 32 * scale, 10 * scale);\r\n    fill_path(ctx, color[3], color[4], 4 * scale);\r\n    ctx.rotate(0.68);\r\n    round_regular_polygon(ctx, 9, 23 * scale, 8 * scale);\r\n    fill_path(ctx, color[5], color[6], 6 * scale);\r\n    ctx.restore();\r\n    ctx.save();\r\n    ctx.translate(45 * scale, 45 * scale);\r\n    ctx.rotate(0);\r\n    round_rect(ctx, -9 * scale, -25.5 * scale, 18 * scale, 51 * scale, 30 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[4], color[4], 2 * scale);\r\n    ctx.save();\r\n    ctx.translate(45 * scale, 45 * scale);\r\n    ctx.rotate(0);\r\n    round_rect(ctx, -26 * scale, -9 * scale, 52 * scale, 18 * scale, 30 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[4], color[4], 2 * scale);\r\n    circle(ctx, 45 * scale, 29 * scale, 7 * scale);\r\n    fill_path(ctx, color[5]);\r\n    circle(ctx, 45 * scale, 61 * scale, 7 * scale);\r\n    fill_path(ctx, color[5]);\r\n    circle(ctx, 28 * scale, 45 * scale, 7 * scale);\r\n    fill_path(ctx, color[5]);\r\n    circle(ctx, 62 * scale, 45 * scale, 7 * scale);\r\n    fill_path(ctx, color[5]);\r\n    return can;\r\n}\r\n;\r\nfunction create_coat(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 135 * scale;\r\n    can.height = 120 * scale;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(3.5 * scale, 55.25 * scale);\r\n    ctx.bezierCurveTo(3.5 * scale, 114.25 * scale, 2.5 * scale, 109.25 * scale, 3.5 * scale, 112.25 * scale);\r\n    ctx.bezierCurveTo(5.5 * scale, 119.25 * scale, 8.5 * scale, 119.25 * scale, 11.5 * scale, 119.25 * scale);\r\n    ctx.bezierCurveTo(15.5 * scale, 114.25 * scale, 13.5 * scale, 95.25 * scale, 14.5 * scale, 82.25 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[1], 7 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(6.5 * scale, 43.25 * scale);\r\n    ctx.bezierCurveTo(3.5 * scale, 27.25 * scale, 7.5 * scale, 20.25 * scale, 25.5 * scale, 11.25 * scale);\r\n    ctx.bezierCurveTo(45.5 * scale, -0.75 * scale, 73.5 * scale, 1.25 * scale, 107.5 * scale, 10.25 * scale);\r\n    ctx.bezierCurveTo(131.5 * scale, 21.25 * scale, 125.5 * scale, 34.25 * scale, 125.5 * scale, 36.25 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[1], 7 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(120.5 * scale, 62.25 * scale);\r\n    ctx.bezierCurveTo(121.5 * scale, 95.25 * scale, 120.5 * scale, 80.25 * scale, 120.5 * scale, 100.25 * scale);\r\n    ctx.bezierCurveTo(118.5 * scale, 119.25 * scale, 123.5 * scale, 118.25 * scale, 129.5 * scale, 113.25 * scale);\r\n    ctx.bezierCurveTo(133.5 * scale, 107.25 * scale, 130.5 * scale, 97.25 * scale, 130.5 * scale, 87.25 * scale);\r\n    ctx.bezierCurveTo(129.5 * scale, 56.25 * scale, 130 * scale, 70.75 * scale, 129.5 * scale, 54.25 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[1], 7 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(17.5 * scale, 27 * scale);\r\n    ctx.bezierCurveTo(48.5 * scale, 5 * scale, 93.5 * scale, 14 * scale, 118.5 * scale, 26 * scale);\r\n    ctx.bezierCurveTo(132.5 * scale, 35 * scale, 133.5 * scale, 52 * scale, 132.5 * scale, 68 * scale);\r\n    ctx.bezierCurveTo(125.5 * scale, 87 * scale, 116.5 * scale, 84 * scale, 96.5 * scale, 75 * scale);\r\n    ctx.bezierCurveTo(60.5 * scale, 66 * scale, 52.5 * scale, 74 * scale, 37.5 * scale, 78 * scale);\r\n    ctx.bezierCurveTo(2.5 * scale, 86 * scale, 3.5 * scale, 78 * scale, 1.5 * scale, 61 * scale);\r\n    ctx.bezierCurveTo(1.5 * scale, 37 * scale, 9.5 * scale, 32 * scale, 15.5 * scale, 28 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2], color[3], 7 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_crab_crown(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 501 * scale;\r\n    can.height = 309 * scale;\r\n    ctx.translate(0, 6 * scale);\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(126 * scale, 184 * scale);\r\n    ctx.bezierCurveTo(169 * scale, 196 * scale, 194 * scale, 198 * scale, 227 * scale, 198 * scale);\r\n    ctx.bezierCurveTo(235 * scale, 222 * scale, 236 * scale, 223 * scale, 241 * scale, 226 * scale);\r\n    ctx.bezierCurveTo(245 * scale, 228 * scale, 257 * scale, 228 * scale, 263 * scale, 226 * scale);\r\n    ctx.bezierCurveTo(267 * scale, 225 * scale, 270 * scale, 211 * scale, 275 * scale, 198 * scale);\r\n    ctx.bezierCurveTo(332 * scale, 194 * scale, 347 * scale, 192 * scale, 372 * scale, 188 * scale);\r\n    ctx.bezierCurveTo(366 * scale, 174.5 * scale, 366 * scale, 174.5 * scale, 360 * scale, 161 * scale);\r\n    ctx.bezierCurveTo(253.5 * scale, 162 * scale, 253.5 * scale, 162 * scale, 147 * scale, 163 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(0, -6 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(100 * scale, 116 * scale);\r\n    ctx.bezierCurveTo(90 * scale, 101 * scale, 96 * scale, 89 * scale, 106 * scale, 83 * scale);\r\n    ctx.bezierCurveTo(86 * scale, 79 * scale, 86 * scale, 52 * scale, 93 * scale, 38 * scale);\r\n    ctx.bezierCurveTo(99 * scale, 51 * scale, 107 * scale, 57 * scale, 122 * scale, 63 * scale);\r\n    ctx.bezierCurveTo(130 * scale, 53 * scale, 141 * scale, 46 * scale, 161 * scale, 46 * scale);\r\n    ctx.bezierCurveTo(157 * scale, 31 * scale, 158 * scale, 20 * scale, 169 * scale, 6 * scale);\r\n    ctx.bezierCurveTo(171 * scale, 24 * scale, 186 * scale, 33 * scale, 198 * scale, 45 * scale);\r\n    ctx.bezierCurveTo(252 * scale, 45 * scale, 252 * scale, 45 * scale, 306 * scale, 45 * scale);\r\n    ctx.bezierCurveTo(323 * scale, 33 * scale, 332 * scale, 21 * scale, 335 * scale, 7 * scale);\r\n    ctx.bezierCurveTo(349 * scale, 21 * scale, 347 * scale, 36 * scale, 345 * scale, 46 * scale);\r\n    ctx.bezierCurveTo(364 * scale, 46 * scale, 369 * scale, 48 * scale, 377 * scale, 63 * scale);\r\n    ctx.bezierCurveTo(398 * scale, 58 * scale, 403 * scale, 49 * scale, 409 * scale, 40 * scale);\r\n    ctx.bezierCurveTo(419 * scale, 57 * scale, 411 * scale, 79 * scale, 398 * scale, 85 * scale);\r\n    ctx.bezierCurveTo(405 * scale, 100 * scale, 405 * scale, 106 * scale, 401 * scale, 118 * scale);\r\n    ctx.bezierCurveTo(332.5 * scale, 128.5 * scale, 332.5 * scale, 128.5 * scale, 264 * scale, 139 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(122 * scale, 191 * scale);\r\n    ctx.bezierCurveTo(123 * scale, 237 * scale, 135 * scale, 245 * scale, 153 * scale, 259 * scale);\r\n    ctx.bezierCurveTo(167 * scale, 269 * scale, 158 * scale, 281 * scale, 118 * scale, 276 * scale);\r\n    ctx.bezierCurveTo(104 * scale, 273 * scale, 98 * scale, 268 * scale, 93 * scale, 242 * scale);\r\n    ctx.bezierCurveTo(89 * scale, 220 * scale, 92 * scale, 201 * scale, 102 * scale, 179 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[2], 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(403 * scale, 182 * scale);\r\n    ctx.bezierCurveTo(414 * scale, 215 * scale, 412 * scale, 232 * scale, 403 * scale, 260 * scale);\r\n    ctx.bezierCurveTo(395 * scale, 274 * scale, 375 * scale, 272 * scale, 356 * scale, 270 * scale);\r\n    ctx.bezierCurveTo(345 * scale, 268 * scale, 339 * scale, 262 * scale, 354 * scale, 252 * scale);\r\n    ctx.bezierCurveTo(370 * scale, 242 * scale, 380 * scale, 225 * scale, 384 * scale, 184 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[2], 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(155 * scale, 157 * scale);\r\n    ctx.bezierCurveTo(146 * scale, 189 * scale, 137 * scale, 198 * scale, 114 * scale, 219 * scale);\r\n    ctx.bezierCurveTo(104 * scale, 212 * scale, 98 * scale, 203 * scale, 89 * scale, 189 * scale);\r\n    ctx.bezierCurveTo(82 * scale, 178 * scale, 91 * scale, 164 * scale, 93 * scale, 136 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[2], 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(347 * scale, 162 * scale);\r\n    ctx.bezierCurveTo(357 * scale, 195 * scale, 376 * scale, 209 * scale, 387 * scale, 217 * scale);\r\n    ctx.bezierCurveTo(409 * scale, 201 * scale, 420 * scale, 181 * scale, 416 * scale, 166 * scale);\r\n    ctx.bezierCurveTo(410 * scale, 150 * scale, 412 * scale, 149 * scale, 408 * scale, 130 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[2], 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(86 * scale, 134 * scale);\r\n    ctx.bezierCurveTo(79 * scale, 102 * scale, 92 * scale, 84 * scale, 108 * scale, 92 * scale);\r\n    ctx.bezierCurveTo(149 * scale, 108 * scale, 184 * scale, 111 * scale, 242 * scale, 111 * scale);\r\n    ctx.bezierCurveTo(294 * scale, 108 * scale, 341 * scale, 105 * scale, 386 * scale, 98 * scale);\r\n    ctx.bezierCurveTo(412 * scale, 91 * scale, 417 * scale, 86 * scale, 415 * scale, 133 * scale);\r\n    ctx.bezierCurveTo(413 * scale, 160 * scale, 413 * scale, 160 * scale, 368 * scale, 174 * scale);\r\n    ctx.bezierCurveTo(308 * scale, 184 * scale, 291 * scale, 185 * scale, 270 * scale, 186 * scale);\r\n    ctx.bezierCurveTo(264 * scale, 206 * scale, 262 * scale, 215 * scale, 253 * scale, 215 * scale);\r\n    ctx.bezierCurveTo(239 * scale, 217 * scale, 239 * scale, 211 * scale, 231 * scale, 186 * scale);\r\n    ctx.bezierCurveTo(178 * scale, 184 * scale, 156 * scale, 179 * scale, 112 * scale, 162 * scale);\r\n    ctx.bezierCurveTo(87 * scale, 151 * scale, 90 * scale, 144 * scale, 87 * scale, 137 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[2], 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(63 * scale, 98 * scale);\r\n    ctx.bezierCurveTo(84 * scale, 121 * scale, 109 * scale, 102 * scale, 124 * scale, 117 * scale);\r\n    ctx.bezierCurveTo(138 * scale, 136 * scale, 123 * scale, 165 * scale, 94 * scale, 150 * scale);\r\n    ctx.bezierCurveTo(66 * scale, 131 * scale, 64 * scale, 115 * scale, 63 * scale, 99 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[2], 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(449 * scale, 97 * scale);\r\n    ctx.bezierCurveTo(446 * scale, 143 * scale, 415 * scale, 151 * scale, 402 * scale, 155 * scale);\r\n    ctx.bezierCurveTo(386 * scale, 157 * scale, 373 * scale, 133 * scale, 391 * scale, 116 * scale);\r\n    ctx.bezierCurveTo(402 * scale, 106 * scale, 432 * scale, 124 * scale, 449 * scale, 97 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[2], 10 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_crab_loot(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 304 * scale;\r\n    can.height = 278 * scale;\r\n    ctx.translate(10 * scale, 25 * scale);\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(128 * scale, 137 * scale);\r\n    ctx.bezierCurveTo(155 * scale, 144 * scale, 223 * scale, 143 * scale, 256 * scale, 122 * scale);\r\n    ctx.bezierCurveTo(249 * scale, 180 * scale, 210 * scale, 227 * scale, 164 * scale, 242 * scale);\r\n    ctx.bezierCurveTo(74 * scale, 213 * scale, 99 * scale, 166 * scale, 127 * scale, 138 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(284 * scale, 52 * scale);\r\n    ctx.bezierCurveTo(126 * scale, 112 * scale, 89 * scale, 177 * scale, 170 * scale, 241 * scale);\r\n    ctx.bezierCurveTo(103 * scale, 275 * scale, 20 * scale, 239 * scale, 12 * scale, 159 * scale);\r\n    ctx.bezierCurveTo(5 * scale, 76 * scale, 75 * scale, 4 * scale, 165 * scale, 13 * scale);\r\n    ctx.bezierCurveTo(233 * scale, 15 * scale, 260 * scale, 33 * scale, 284 * scale, 52 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.translate(-10 * scale, -25 * scale);\r\n    ctx.globalAlpha = 1;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(128 * scale, 137 * scale);\r\n    ctx.bezierCurveTo(155 * scale, 144 * scale, 223 * scale, 143 * scale, 256 * scale, 122 * scale);\r\n    ctx.bezierCurveTo(249 * scale, 180 * scale, 210 * scale, 227 * scale, 164 * scale, 242 * scale);\r\n    ctx.bezierCurveTo(74 * scale, 213 * scale, 99 * scale, 166 * scale, 127 * scale, 138 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 15 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(284 * scale, 52 * scale);\r\n    ctx.bezierCurveTo(126 * scale, 112 * scale, 89 * scale, 177 * scale, 170 * scale, 241 * scale);\r\n    ctx.bezierCurveTo(103 * scale, 275 * scale, 20 * scale, 239 * scale, 12 * scale, 159 * scale);\r\n    ctx.bezierCurveTo(5 * scale, 76 * scale, 75 * scale, 4 * scale, 165 * scale, 13 * scale);\r\n    ctx.bezierCurveTo(233 * scale, 15 * scale, 260 * scale, 33 * scale, 284 * scale, 52 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[4], 15 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_bed(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 175 * scale;\r\n    can.height = 169 * scale;\r\n    ctx.globalAlpha = 0.5;\r\n    ctx.translate(0, 3 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(19 * scale, 139 * scale);\r\n    ctx.bezierCurveTo(18 * scale, 163 * scale, 22 * scale, 156 * scale, 53 * scale, 157 * scale);\r\n    ctx.bezierCurveTo(97.5 * scale, 157 * scale, 97.5 * scale, 157 * scale, 142 * scale, 157 * scale);\r\n    ctx.bezierCurveTo(150 * scale, 157 * scale, 153 * scale, 156 * scale, 154 * scale, 142 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(0, -3 * scale);\r\n    ctx.save();\r\n    ctx.translate(86.5 * scale, 81.5 * scale);\r\n    round_rect(ctx, -66.5 * scale, -65.5 * scale, 133 * scale, 131 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[1], color[2], 5 * scale);\r\n    ctx.save();\r\n    ctx.translate(84.5 * scale, 79 * scale);\r\n    round_rect(ctx, -50.5 * scale, -49 * scale, 101 * scale, 98 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[3], color[2], 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(42 * scale, 54 * scale);\r\n    ctx.bezierCurveTo(37 * scale, 48 * scale, 39 * scale, 44 * scale, 38 * scale, 41 * scale);\r\n    ctx.bezierCurveTo(42 * scale, 40 * scale, 45 * scale, 40 * scale, 50 * scale, 41 * scale);\r\n    ctx.bezierCurveTo(85 * scale, 36 * scale, 98 * scale, 37 * scale, 116 * scale, 42 * scale);\r\n    ctx.bezierCurveTo(132 * scale, 39 * scale, 132 * scale, 39 * scale, 133 * scale, 56 * scale);\r\n    ctx.bezierCurveTo(136 * scale, 73 * scale, 136 * scale, 84 * scale, 132 * scale, 106 * scale);\r\n    ctx.bezierCurveTo(47 * scale, 113 * scale, 85.5 * scale, 106 * scale, 39 * scale, 106 * scale);\r\n    ctx.bezierCurveTo(32 * scale, 81 * scale, 38 * scale, 60 * scale, 42 * scale, 55 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[5], 5 * scale);\r\n    ctx.save();\r\n    ctx.translate(28 * scale, 24 * scale);\r\n    ctx.rotate(0);\r\n    round_rect(ctx, -14 * scale, -14 * scale, 28 * scale, 28 * scale, 4 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[1], color[2], 5 * scale);\r\n    ctx.save();\r\n    ctx.translate(143 * scale, 23 * scale);\r\n    ctx.rotate(0);\r\n    round_rect(ctx, -14 * scale, -14 * scale, 28 * scale, 28 * scale, 4 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[1], color[2], 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(55 * scale, 80 * scale);\r\n    ctx.bezierCurveTo(73 * scale, 78 * scale, 84 * scale, 74 * scale, 100 * scale, 64 * scale);\r\n    ctx.bezierCurveTo(111 * scale, 57 * scale, 125 * scale, 67 * scale, 108 * scale, 84 * scale);\r\n    ctx.bezierCurveTo(96 * scale, 95 * scale, 86 * scale, 96 * scale, 70 * scale, 88 * scale);\r\n    ctx.bezierCurveTo(62.5 * scale, 84 * scale, 62.5 * scale, 84 * scale, 55 * scale, 80 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[5]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(17 * scale, 112 * scale);\r\n    ctx.bezierCurveTo(14 * scale, 146 * scale, 27 * scale, 152 * scale, 37 * scale, 149 * scale);\r\n    ctx.bezierCurveTo(78 * scale, 155 * scale, 128 * scale, 150 * scale, 146 * scale, 150 * scale);\r\n    ctx.bezierCurveTo(158 * scale, 144 * scale, 158 * scale, 121 * scale, 153 * scale, 114 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[8], color[9], 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(127 * scale, 111 * scale);\r\n    ctx.bezierCurveTo(133 * scale, 136 * scale, 115 * scale, 149 * scale, 88 * scale, 150 * scale);\r\n    ctx.bezierCurveTo(119.5 * scale, 151 * scale, 119.5 * scale, 151 * scale, 151 * scale, 152 * scale);\r\n    ctx.bezierCurveTo(159 * scale, 136 * scale, 155 * scale, 126 * scale, 154 * scale, 113 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[9]);\r\n    ctx.globalAlpha = 0.5;\r\n    ctx.translate(0, 3 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(15 * scale, 117 * scale);\r\n    ctx.bezierCurveTo(34 * scale, 109 * scale, 61 * scale, 106 * scale, 94 * scale, 109 * scale);\r\n    ctx.bezierCurveTo(126 * scale, 110 * scale, 142 * scale, 113 * scale, 154 * scale, 119 * scale);\r\n    ctx.bezierCurveTo(154 * scale, 123 * scale, 154 * scale, 123 * scale, 154 * scale, 127 * scale);\r\n    ctx.bezierCurveTo(127 * scale, 118 * scale, 15 * scale, 122 * scale, 18 * scale, 129 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(0, -3 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(14 * scale, 127 * scale);\r\n    ctx.bezierCurveTo(13 * scale, 117 * scale, 12 * scale, 109 * scale, 15 * scale, 103 * scale);\r\n    ctx.bezierCurveTo(16 * scale, 95 * scale, 21 * scale, 92 * scale, 60 * scale, 93 * scale);\r\n    ctx.bezierCurveTo(91 * scale, 93 * scale, 118 * scale, 93 * scale, 143 * scale, 96 * scale);\r\n    ctx.bezierCurveTo(151 * scale, 96 * scale, 155 * scale, 99 * scale, 156 * scale, 112 * scale);\r\n    ctx.bezierCurveTo(157 * scale, 124 * scale, 157 * scale, 127 * scale, 156 * scale, 128 * scale);\r\n    ctx.bezierCurveTo(138 * scale, 112 * scale, 100 * scale, 118 * scale, 84 * scale, 118 * scale);\r\n    ctx.bezierCurveTo(28 * scale, 118 * scale, 20 * scale, 120 * scale, 16 * scale, 127 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[5], 5 * scale);\r\n    ctx.save();\r\n    ctx.translate(27.5 * scale, 138.5 * scale);\r\n    round_rect(ctx, -13.5 * scale, -14.5 * scale, 27 * scale, 29 * scale, 4 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[1], color[2], 5 * scale);\r\n    ctx.save();\r\n    ctx.translate(143.5 * scale, 137 * scale);\r\n    round_rect(ctx, -13.5 * scale, -14 * scale, 27 * scale, 28 * scale, 4 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[1], color[2], 5 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_bed_top(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 175 * scale;\r\n    can.height = 169 * scale;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(17 * scale, 112 * scale);\r\n    ctx.bezierCurveTo(14 * scale, 146 * scale, 27 * scale, 152 * scale, 37 * scale, 149 * scale);\r\n    ctx.bezierCurveTo(78 * scale, 155 * scale, 128 * scale, 150 * scale, 146 * scale, 150 * scale);\r\n    ctx.bezierCurveTo(158 * scale, 144 * scale, 158 * scale, 121 * scale, 153 * scale, 114 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[8], color[9], 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(127 * scale, 111 * scale);\r\n    ctx.bezierCurveTo(133 * scale, 136 * scale, 115 * scale, 149 * scale, 88 * scale, 150 * scale);\r\n    ctx.bezierCurveTo(119.5 * scale, 151 * scale, 119.5 * scale, 151 * scale, 151 * scale, 152 * scale);\r\n    ctx.bezierCurveTo(159 * scale, 136 * scale, 155 * scale, 126 * scale, 154 * scale, 113 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[9]);\r\n    ctx.globalAlpha = 0.5;\r\n    ctx.translate(0, 3 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(15 * scale, 117 * scale);\r\n    ctx.bezierCurveTo(34 * scale, 109 * scale, 61 * scale, 106 * scale, 94 * scale, 109 * scale);\r\n    ctx.bezierCurveTo(126 * scale, 110 * scale, 142 * scale, 113 * scale, 154 * scale, 119 * scale);\r\n    ctx.bezierCurveTo(154 * scale, 123 * scale, 154 * scale, 123 * scale, 154 * scale, 127 * scale);\r\n    ctx.bezierCurveTo(127 * scale, 118 * scale, 15 * scale, 122 * scale, 18 * scale, 129 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(0, -3 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(14 * scale, 127 * scale);\r\n    ctx.bezierCurveTo(13 * scale, 117 * scale, 12 * scale, 109 * scale, 15 * scale, 103 * scale);\r\n    ctx.bezierCurveTo(16 * scale, 95 * scale, 21 * scale, 92 * scale, 60 * scale, 93 * scale);\r\n    ctx.bezierCurveTo(91 * scale, 93 * scale, 118 * scale, 93 * scale, 143 * scale, 96 * scale);\r\n    ctx.bezierCurveTo(151 * scale, 96 * scale, 155 * scale, 99 * scale, 156 * scale, 112 * scale);\r\n    ctx.bezierCurveTo(157 * scale, 124 * scale, 157 * scale, 127 * scale, 156 * scale, 128 * scale);\r\n    ctx.bezierCurveTo(138 * scale, 112 * scale, 100 * scale, 118 * scale, 84 * scale, 118 * scale);\r\n    ctx.bezierCurveTo(28 * scale, 118 * scale, 20 * scale, 120 * scale, 16 * scale, 127 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[5], 5 * scale);\r\n    ctx.save();\r\n    ctx.translate(27.5 * scale, 138.5 * scale);\r\n    round_rect(ctx, -13.5 * scale, -14.5 * scale, 27 * scale, 29 * scale, 4 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[1], color[2], 5 * scale);\r\n    ctx.save();\r\n    ctx.translate(143.5 * scale, 137 * scale);\r\n    round_rect(ctx, -13.5 * scale, -14 * scale, 27 * scale, 28 * scale, 4 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[1], color[2], 5 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_crab_spear(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 115 * scale;\r\n    can.height = 585 * scale;\r\n    ctx.scale(-1, 1);\r\n    ctx.translate(-110 * scale, 0);\r\n    ctx.translate(10 * scale, 10 * scale);\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.save();\r\n    ctx.translate(51.5 * scale, 342 * scale);\r\n    round_rect(ctx, -14.5 * scale, -225 * scale, 29 * scale, 450 * scale, 20 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(54 * scale, 83 * scale);\r\n    ctx.bezierCurveTo(70 * scale, 69 * scale, 78 * scale, 62 * scale, 82 * scale, 40 * scale);\r\n    ctx.bezierCurveTo(93 * scale, 48 * scale, 103 * scale, 64 * scale, 95 * scale, 102 * scale);\r\n    ctx.bezierCurveTo(60 * scale, 114 * scale, 53 * scale, 103 * scale, 54 * scale, 85 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(95 * scale, 97 * scale);\r\n    ctx.bezierCurveTo(56 * scale, 102 * scale, 43 * scale, 77 * scale, 71 * scale, 6 * scale);\r\n    ctx.bezierCurveTo(34 * scale, 10 * scale, 6 * scale, 43 * scale, 5 * scale, 76 * scale);\r\n    ctx.bezierCurveTo(4 * scale, 98 * scale, 15 * scale, 130 * scale, 64 * scale, 130 * scale);\r\n    ctx.bezierCurveTo(76 * scale, 129 * scale, 95 * scale, 113 * scale, 97 * scale, 97 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(55 * scale, 176 * scale);\r\n    ctx.bezierCurveTo(74 * scale, 175 * scale, 82 * scale, 169 * scale, 96 * scale, 155 * scale);\r\n    ctx.bezierCurveTo(103 * scale, 183 * scale, 95 * scale, 214 * scale, 54 * scale, 219 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(50 * scale, 176 * scale);\r\n    ctx.bezierCurveTo(25 * scale, 177 * scale, 16 * scale, 164 * scale, 7 * scale, 156 * scale);\r\n    ctx.bezierCurveTo(0 * scale, 186 * scale, 10 * scale, 201 * scale, 43 * scale, 220 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(35 * scale, 403 * scale);\r\n    ctx.bezierCurveTo(47 * scale, 412 * scale, 58 * scale, 412 * scale, 67 * scale, 403 * scale);\r\n    ctx.bezierCurveTo(66.5 * scale, 434 * scale, 66.5 * scale, 434 * scale, 66 * scale, 465 * scale);\r\n    ctx.bezierCurveTo(56 * scale, 480 * scale, 40 * scale, 472 * scale, 36 * scale, 465 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(59 * scale, 67 * scale);\r\n    ctx.bezierCurveTo(47 * scale, 97 * scale, 18 * scale, 117 * scale, 11 * scale, 110 * scale);\r\n    ctx.bezierCurveTo(11 * scale, 115 * scale, 15 * scale, 122 * scale, 23 * scale, 124 * scale);\r\n    ctx.bezierCurveTo(46 * scale, 118 * scale, 52 * scale, 113 * scale, 62 * scale, 86 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(30 * scale, 125 * scale);\r\n    ctx.bezierCurveTo(47 * scale, 136 * scale, 57 * scale, 134 * scale, 77 * scale, 127 * scale);\r\n    ctx.bezierCurveTo(71 * scale, 158 * scale, 71 * scale, 159 * scale, 66 * scale, 159 * scale);\r\n    ctx.bezierCurveTo(50.5 * scale, 156.5 * scale, 50.5 * scale, 156.5 * scale, 35 * scale, 154 * scale);\r\n    ctx.bezierCurveTo(31 * scale, 145 * scale, 31 * scale, 136 * scale, 31 * scale, 125 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(35 * scale, 171 * scale);\r\n    ctx.bezierCurveTo(32 * scale, 221 * scale, 43 * scale, 233 * scale, 70 * scale, 247 * scale);\r\n    ctx.bezierCurveTo(75 * scale, 234 * scale, 75 * scale, 230 * scale, 72 * scale, 221 * scale);\r\n    ctx.bezierCurveTo(48 * scale, 206 * scale, 54 * scale, 188 * scale, 50 * scale, 176 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(60 * scale, 68 * scale);\r\n    ctx.bezierCurveTo(63 * scale, 69 * scale, 65 * scale, 71 * scale, 67 * scale, 77 * scale);\r\n    ctx.bezierCurveTo(61 * scale, 123 * scale, 52 * scale, 137 * scale, 42 * scale, 150 * scale);\r\n    ctx.bezierCurveTo(38 * scale, 151 * scale, 38 * scale, 151 * scale, 34 * scale, 152 * scale);\r\n    ctx.bezierCurveTo(33 * scale, 146.5 * scale, 33 * scale, 146.5 * scale, 32 * scale, 141 * scale);\r\n    ctx.bezierCurveTo(49 * scale, 118 * scale, 63 * scale, 87 * scale, 59 * scale, 68 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(71 * scale, 172 * scale);\r\n    ctx.bezierCurveTo(56 * scale, 222 * scale, 49 * scale, 234 * scale, 35 * scale, 248 * scale);\r\n    ctx.bezierCurveTo(30 * scale, 236 * scale, 30 * scale, 230 * scale, 31 * scale, 217 * scale);\r\n    ctx.bezierCurveTo(44 * scale, 202 * scale, 49 * scale, 191 * scale, 52 * scale, 172 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(35 * scale, 151 * scale);\r\n    ctx.bezierCurveTo(27 * scale, 165 * scale, 31 * scale, 173 * scale, 36 * scale, 178 * scale);\r\n    ctx.bezierCurveTo(56 * scale, 185 * scale, 73 * scale, 184 * scale, 71 * scale, 170 * scale);\r\n    ctx.bezierCurveTo(72 * scale, 154 * scale, 71 * scale, 154 * scale, 63 * scale, 155 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.translate(-10 * scale, -10 * scale);\r\n    ctx.globalAlpha = 1;\r\n    ctx.save();\r\n    ctx.translate(51.5 * scale, 342 * scale);\r\n    round_rect(ctx, -14.5 * scale, -225 * scale, 29 * scale, 450 * scale, 20 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[1], color[2], 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(54 * scale, 83 * scale);\r\n    ctx.bezierCurveTo(70 * scale, 69 * scale, 78 * scale, 62 * scale, 82 * scale, 40 * scale);\r\n    ctx.bezierCurveTo(93 * scale, 48 * scale, 103 * scale, 64 * scale, 95 * scale, 102 * scale);\r\n    ctx.bezierCurveTo(60 * scale, 114 * scale, 53 * scale, 103 * scale, 54 * scale, 85 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[4], 6 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(95 * scale, 97 * scale);\r\n    ctx.bezierCurveTo(56 * scale, 102 * scale, 43 * scale, 77 * scale, 71 * scale, 6 * scale);\r\n    ctx.bezierCurveTo(34 * scale, 10 * scale, 6 * scale, 43 * scale, 5 * scale, 76 * scale);\r\n    ctx.bezierCurveTo(4 * scale, 98 * scale, 15 * scale, 130 * scale, 64 * scale, 130 * scale);\r\n    ctx.bezierCurveTo(76 * scale, 129 * scale, 95 * scale, 113 * scale, 97 * scale, 97 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[5], color[6], 6 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(35 * scale, 403 * scale);\r\n    ctx.bezierCurveTo(47 * scale, 412 * scale, 58 * scale, 412 * scale, 67 * scale, 403 * scale);\r\n    ctx.bezierCurveTo(66.5 * scale, 434 * scale, 66.5 * scale, 434 * scale, 66 * scale, 465 * scale);\r\n    ctx.bezierCurveTo(56 * scale, 480 * scale, 40 * scale, 472 * scale, 36 * scale, 465 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[7], color[8], 6 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(37 * scale, 427 * scale);\r\n    ctx.bezierCurveTo(47 * scale, 435 * scale, 55 * scale, 435 * scale, 67 * scale, 427 * scale);\r\n    fill_path(ctx, undefined, color[8], 6 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(36 * scale, 448 * scale);\r\n    ctx.bezierCurveTo(46 * scale, 454 * scale, 54 * scale, 457 * scale, 65 * scale, 449 * scale);\r\n    fill_path(ctx, undefined, color[8], 6 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(55 * scale, 176 * scale);\r\n    ctx.bezierCurveTo(74 * scale, 175 * scale, 82 * scale, 169 * scale, 96 * scale, 155 * scale);\r\n    ctx.bezierCurveTo(103 * scale, 183 * scale, 95 * scale, 214 * scale, 54 * scale, 219 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[4], 6 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(50 * scale, 176 * scale);\r\n    ctx.bezierCurveTo(25 * scale, 177 * scale, 16 * scale, 164 * scale, 7 * scale, 156 * scale);\r\n    ctx.bezierCurveTo(0 * scale, 186 * scale, 10 * scale, 201 * scale, 43 * scale, 220 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[4], 6 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(59 * scale, 67 * scale);\r\n    ctx.bezierCurveTo(47 * scale, 97 * scale, 18 * scale, 117 * scale, 11 * scale, 110 * scale);\r\n    ctx.bezierCurveTo(11 * scale, 115 * scale, 15 * scale, 122 * scale, 23 * scale, 124 * scale);\r\n    ctx.bezierCurveTo(46 * scale, 118 * scale, 52 * scale, 113 * scale, 62 * scale, 86 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[7], color[8], 6 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(30 * scale, 125 * scale);\r\n    ctx.bezierCurveTo(47 * scale, 136 * scale, 57 * scale, 134 * scale, 77 * scale, 127 * scale);\r\n    ctx.bezierCurveTo(71 * scale, 158 * scale, 71 * scale, 159 * scale, 66 * scale, 159 * scale);\r\n    ctx.bezierCurveTo(50.5 * scale, 156.5 * scale, 50.5 * scale, 156.5 * scale, 35 * scale, 154 * scale);\r\n    ctx.bezierCurveTo(31 * scale, 145 * scale, 31 * scale, 136 * scale, 31 * scale, 125 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[7], color[8], 6 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(35 * scale, 171 * scale);\r\n    ctx.bezierCurveTo(32 * scale, 221 * scale, 43 * scale, 233 * scale, 70 * scale, 247 * scale);\r\n    ctx.bezierCurveTo(75 * scale, 234 * scale, 75 * scale, 230 * scale, 72 * scale, 221 * scale);\r\n    ctx.bezierCurveTo(48 * scale, 206 * scale, 54 * scale, 188 * scale, 50 * scale, 176 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[7], color[8], 6 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(60 * scale, 68 * scale);\r\n    ctx.bezierCurveTo(63 * scale, 69 * scale, 65 * scale, 71 * scale, 67 * scale, 77 * scale);\r\n    ctx.bezierCurveTo(61 * scale, 123 * scale, 52 * scale, 137 * scale, 42 * scale, 150 * scale);\r\n    ctx.bezierCurveTo(38 * scale, 151 * scale, 38 * scale, 151 * scale, 34 * scale, 152 * scale);\r\n    ctx.bezierCurveTo(33 * scale, 146.5 * scale, 33 * scale, 146.5 * scale, 32 * scale, 141 * scale);\r\n    ctx.bezierCurveTo(49 * scale, 118 * scale, 63 * scale, 87 * scale, 59 * scale, 68 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[7], color[8], 6 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(71 * scale, 172 * scale);\r\n    ctx.bezierCurveTo(56 * scale, 222 * scale, 49 * scale, 234 * scale, 35 * scale, 248 * scale);\r\n    ctx.bezierCurveTo(30 * scale, 236 * scale, 30 * scale, 230 * scale, 31 * scale, 217 * scale);\r\n    ctx.bezierCurveTo(44 * scale, 202 * scale, 49 * scale, 191 * scale, 52 * scale, 172 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[7], color[8], 6 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(35 * scale, 151 * scale);\r\n    ctx.bezierCurveTo(27 * scale, 165 * scale, 31 * scale, 173 * scale, 36 * scale, 178 * scale);\r\n    ctx.bezierCurveTo(56 * scale, 185 * scale, 73 * scale, 184 * scale, 71 * scale, 170 * scale);\r\n    ctx.bezierCurveTo(72 * scale, 154 * scale, 71 * scale, 154 * scale, 63 * scale, 155 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[7], color[8], 6 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(53 * scale, 113 * scale);\r\n    ctx.bezierCurveTo(65 * scale, 140 * scale, 75 * scale, 166 * scale, 52 * scale, 169 * scale);\r\n    ctx.bezierCurveTo(29 * scale, 168 * scale, 41 * scale, 143 * scale, 53 * scale, 112 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[4], 6 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_wood_spear(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 81 * scale;\r\n    can.height = 626 * scale;\r\n    ctx.translate(20 * scale, 20 * scale);\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(55 * scale, 565 * scale);\r\n    ctx.bezierCurveTo(56 * scale, 586 * scale, 53 * scale, 591 * scale, 40 * scale, 592 * scale);\r\n    ctx.bezierCurveTo(28 * scale, 591 * scale, 27 * scale, 583 * scale, 28 * scale, 557 * scale);\r\n    ctx.bezierCurveTo(27.5 * scale, 346 * scale, 27.5 * scale, 346 * scale, 27 * scale, 135 * scale);\r\n    ctx.bezierCurveTo(26 * scale, 74 * scale, 36 * scale, 26 * scale, 41 * scale, 15 * scale);\r\n    ctx.bezierCurveTo(54 * scale, 51 * scale, 54 * scale, 81 * scale, 55 * scale, 128 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.translate(-20 * scale, -20 * scale);\r\n    ctx.globalAlpha = 1;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(55 * scale, 565 * scale);\r\n    ctx.bezierCurveTo(56 * scale, 586 * scale, 53 * scale, 591 * scale, 40 * scale, 592 * scale);\r\n    ctx.bezierCurveTo(28 * scale, 591 * scale, 27 * scale, 583 * scale, 28 * scale, 557 * scale);\r\n    ctx.bezierCurveTo(27.5 * scale, 346 * scale, 27.5 * scale, 346 * scale, 27 * scale, 135 * scale);\r\n    ctx.bezierCurveTo(26 * scale, 74 * scale, 36 * scale, 26 * scale, 41 * scale, 15 * scale);\r\n    ctx.bezierCurveTo(54 * scale, 51 * scale, 54 * scale, 81 * scale, 55 * scale, 128 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(27 * scale, 129 * scale);\r\n    ctx.bezierCurveTo(32 * scale, 135 * scale, 48 * scale, 136 * scale, 53 * scale, 129 * scale);\r\n    ctx.bezierCurveTo(56 * scale, 97 * scale, 53 * scale, 82 * scale, 52 * scale, 64 * scale);\r\n    ctx.bezierCurveTo(49 * scale, 33 * scale, 44 * scale, 27 * scale, 41 * scale, 21 * scale);\r\n    ctx.bezierCurveTo(31 * scale, 40 * scale, 28 * scale, 84 * scale, 27 * scale, 127 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(55 * scale, 565 * scale);\r\n    ctx.bezierCurveTo(56 * scale, 586 * scale, 53 * scale, 591 * scale, 40 * scale, 592 * scale);\r\n    ctx.bezierCurveTo(28 * scale, 591 * scale, 27 * scale, 583 * scale, 28 * scale, 557 * scale);\r\n    ctx.bezierCurveTo(27.5 * scale, 346 * scale, 27.5 * scale, 346 * scale, 27 * scale, 135 * scale);\r\n    ctx.bezierCurveTo(26 * scale, 74 * scale, 36 * scale, 26 * scale, 41 * scale, 15 * scale);\r\n    ctx.bezierCurveTo(54 * scale, 51 * scale, 54 * scale, 81 * scale, 55 * scale, 128 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[2], 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(28 * scale, 475 * scale);\r\n    ctx.bezierCurveTo(38 * scale, 482 * scale, 48 * scale, 480 * scale, 54 * scale, 474 * scale);\r\n    ctx.bezierCurveTo(54 * scale, 509.5 * scale, 54 * scale, 509.5 * scale, 54 * scale, 545 * scale);\r\n    ctx.bezierCurveTo(46 * scale, 554 * scale, 36 * scale, 552 * scale, 28 * scale, 545 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[5], 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(28 * scale, 496 * scale);\r\n    ctx.bezierCurveTo(39 * scale, 506 * scale, 49 * scale, 503 * scale, 54 * scale, 496 * scale);\r\n    fill_path(ctx, undefined, color[5], 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(28 * scale, 521 * scale);\r\n    ctx.bezierCurveTo(41 * scale, 529 * scale, 49 * scale, 524 * scale, 54 * scale, 520 * scale);\r\n    fill_path(ctx, undefined, color[5], 8 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_stonespear(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 100 * scale;\r\n    can.height = 648 * scale;\r\n    ctx.translate(20 * scale, 20 * scale);\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.save();\r\n    ctx.translate(50.5 * scale, 349.5 * scale);\r\n    round_rect(ctx, -13.5 * scale, -249.5 * scale, 27 * scale, 499 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(36 * scale, 538 * scale);\r\n    ctx.bezierCurveTo(49.5 * scale, 538 * scale, 49.5 * scale, 538 * scale, 63 * scale, 538 * scale);\r\n    ctx.bezierCurveTo(63.5 * scale, 568 * scale, 63.5 * scale, 568 * scale, 64 * scale, 598 * scale);\r\n    ctx.bezierCurveTo(50 * scale, 598 * scale, 50 * scale, 598 * scale, 36 * scale, 598 * scale);\r\n    ctx.bezierCurveTo(36 * scale, 568.5 * scale, 36 * scale, 568.5 * scale, 36 * scale, 539 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(36 * scale, 554 * scale);\r\n    ctx.bezierCurveTo(45 * scale, 561 * scale, 56 * scale, 558 * scale, 63 * scale, 554 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(32 * scale, 569 * scale);\r\n    ctx.bezierCurveTo(44 * scale, 576 * scale, 58 * scale, 574 * scale, 68 * scale, 569 * scale);\r\n    ctx.bezierCurveTo(68 * scale, 584 * scale, 68 * scale, 584 * scale, 68 * scale, 599 * scale);\r\n    ctx.bezierCurveTo(68 * scale, 608 * scale, 65 * scale, 618 * scale, 49 * scale, 617 * scale);\r\n    ctx.bezierCurveTo(34 * scale, 617 * scale, 32 * scale, 610 * scale, 32 * scale, 598 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(41 * scale, 581 * scale);\r\n    ctx.bezierCurveTo(48 * scale, 584 * scale, 55 * scale, 583 * scale, 60 * scale, 581 * scale);\r\n    ctx.bezierCurveTo(60 * scale, 589.5 * scale, 60 * scale, 589.5 * scale, 60 * scale, 598 * scale);\r\n    ctx.bezierCurveTo(60 * scale, 604 * scale, 59 * scale, 609 * scale, 48 * scale, 608 * scale);\r\n    ctx.bezierCurveTo(40 * scale, 607 * scale, 40 * scale, 606 * scale, 41 * scale, 581 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(31 * scale, 106 * scale);\r\n    ctx.bezierCurveTo(31 * scale, 124.5 * scale, 31 * scale, 124.5 * scale, 31 * scale, 143 * scale);\r\n    ctx.bezierCurveTo(31 * scale, 163 * scale, 38 * scale, 169 * scale, 48 * scale, 168 * scale);\r\n    ctx.bezierCurveTo(57 * scale, 168 * scale, 67 * scale, 165 * scale, 67 * scale, 148 * scale);\r\n    ctx.bezierCurveTo(67 * scale, 123.5 * scale, 67 * scale, 123.5 * scale, 67 * scale, 99 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(49 * scale, 27 * scale);\r\n    ctx.bezierCurveTo(64 * scale, 62.5 * scale, 64 * scale, 62.5 * scale, 79 * scale, 98 * scale);\r\n    ctx.bezierCurveTo(74 * scale, 113 * scale, 63 * scale, 121 * scale, 50 * scale, 122 * scale);\r\n    ctx.bezierCurveTo(35 * scale, 123 * scale, 22 * scale, 109 * scale, 20 * scale, 98 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(49 * scale, 43 * scale);\r\n    ctx.bezierCurveTo(61 * scale, 70 * scale, 61 * scale, 70 * scale, 73 * scale, 97 * scale);\r\n    ctx.bezierCurveTo(66 * scale, 116 * scale, 43 * scale, 122 * scale, 26 * scale, 99 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.translate(-20 * scale, -20 * scale);\r\n    ctx.globalAlpha = 1;\r\n    ctx.save();\r\n    ctx.translate(50.5 * scale, 349.5 * scale);\r\n    round_rect(ctx, -13.5 * scale, -249.5 * scale, 27 * scale, 499 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[1], color[2], 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(36 * scale, 538 * scale);\r\n    ctx.bezierCurveTo(49.5 * scale, 538 * scale, 49.5 * scale, 538 * scale, 63 * scale, 538 * scale);\r\n    ctx.bezierCurveTo(63.5 * scale, 568 * scale, 63.5 * scale, 568 * scale, 64 * scale, 598 * scale);\r\n    ctx.bezierCurveTo(50 * scale, 598 * scale, 50 * scale, 598 * scale, 36 * scale, 598 * scale);\r\n    ctx.bezierCurveTo(36 * scale, 568.5 * scale, 36 * scale, 568.5 * scale, 36 * scale, 539 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[4], 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(36 * scale, 554 * scale);\r\n    ctx.bezierCurveTo(45 * scale, 561 * scale, 56 * scale, 558 * scale, 63 * scale, 554 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[4], 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(32 * scale, 569 * scale);\r\n    ctx.bezierCurveTo(44 * scale, 576 * scale, 58 * scale, 574 * scale, 68 * scale, 569 * scale);\r\n    ctx.bezierCurveTo(68 * scale, 584 * scale, 68 * scale, 584 * scale, 68 * scale, 599 * scale);\r\n    ctx.bezierCurveTo(68 * scale, 608 * scale, 65 * scale, 618 * scale, 49 * scale, 617 * scale);\r\n    ctx.bezierCurveTo(34 * scale, 617 * scale, 32 * scale, 610 * scale, 32 * scale, 598 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[5], color[6], 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(41 * scale, 581 * scale);\r\n    ctx.bezierCurveTo(48 * scale, 584 * scale, 55 * scale, 583 * scale, 60 * scale, 581 * scale);\r\n    ctx.bezierCurveTo(60 * scale, 589.5 * scale, 60 * scale, 589.5 * scale, 60 * scale, 598 * scale);\r\n    ctx.bezierCurveTo(60 * scale, 604 * scale, 59 * scale, 609 * scale, 48 * scale, 608 * scale);\r\n    ctx.bezierCurveTo(40 * scale, 607 * scale, 40 * scale, 606 * scale, 41 * scale, 581 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[7]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(31 * scale, 106 * scale);\r\n    ctx.bezierCurveTo(31 * scale, 124.5 * scale, 31 * scale, 124.5 * scale, 31 * scale, 143 * scale);\r\n    ctx.bezierCurveTo(31 * scale, 163 * scale, 38 * scale, 169 * scale, 48 * scale, 168 * scale);\r\n    ctx.bezierCurveTo(57 * scale, 168 * scale, 67 * scale, 165 * scale, 67 * scale, 148 * scale);\r\n    ctx.bezierCurveTo(67 * scale, 123.5 * scale, 67 * scale, 123.5 * scale, 67 * scale, 99 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[5], color[6], 8 * scale);\r\n    ctx.save();\r\n    ctx.translate(-46 * scale, -50 * scale);\r\n    ctx.scale(2, 2);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(51 * scale, 80 * scale);\r\n    ctx.bezierCurveTo(51 * scale, 89.5 * scale, 51 * scale, 89.5 * scale, 51 * scale, 99 * scale);\r\n    ctx.bezierCurveTo(49 * scale, 103 * scale, 46 * scale, 105 * scale, 44 * scale, 99 * scale);\r\n    ctx.bezierCurveTo(44 * scale, 88.5 * scale, 44 * scale, 88.5 * scale, 44 * scale, 78 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[8]);\r\n    ctx.restore();\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(49 * scale, 27 * scale);\r\n    ctx.bezierCurveTo(64 * scale, 62.5 * scale, 64 * scale, 62.5 * scale, 79 * scale, 98 * scale);\r\n    ctx.bezierCurveTo(74 * scale, 113 * scale, 63 * scale, 121 * scale, 50 * scale, 122 * scale);\r\n    ctx.bezierCurveTo(35 * scale, 123 * scale, 22 * scale, 109 * scale, 20 * scale, 98 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[8], color[9], 8 * scale);\r\n    ctx.scale(2, 2);\r\n    ctx.translate(-23 * scale, -20 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(57 * scale, 69 * scale);\r\n    ctx.bezierCurveTo(50 * scale, 76 * scale, 43 * scale, 75 * scale, 38 * scale, 69 * scale);\r\n    ctx.bezierCurveTo(43 * scale, 57 * scale, 43 * scale, 57 * scale, 48 * scale, 45 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[10]);\r\n    return can;\r\n}\r\n;\r\nfunction create_goldspear(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 88 * scale;\r\n    can.height = 647 * scale;\r\n    ctx.translate(20 * scale, 20 * scale);\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.save();\r\n    ctx.translate(45 * scale, 384.5 * scale);\r\n    round_rect(ctx, -15 * scale, -216.5 * scale, 30 * scale, 433 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(27 * scale, 572 * scale);\r\n    ctx.bezierCurveTo(44 * scale, 580 * scale, 55 * scale, 576 * scale, 62 * scale, 572 * scale);\r\n    ctx.bezierCurveTo(65 * scale, 585.5 * scale, 65 * scale, 585.5 * scale, 68 * scale, 599 * scale);\r\n    ctx.bezierCurveTo(71 * scale, 612 * scale, 68 * scale, 618 * scale, 34 * scale, 616 * scale);\r\n    ctx.bezierCurveTo(14 * scale, 615 * scale, 19 * scale, 607 * scale, 27 * scale, 573 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(32 * scale, 587 * scale);\r\n    ctx.bezierCurveTo(39 * scale, 590 * scale, 48 * scale, 588 * scale, 54 * scale, 587 * scale);\r\n    ctx.bezierCurveTo(57 * scale, 604 * scale, 59 * scale, 609 * scale, 46 * scale, 609 * scale);\r\n    ctx.bezierCurveTo(27 * scale, 609 * scale, 28 * scale, 605 * scale, 33 * scale, 588 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(31 * scale, 113 * scale);\r\n    ctx.bezierCurveTo(27 * scale, 139 * scale, 27 * scale, 139 * scale, 23 * scale, 165 * scale);\r\n    ctx.bezierCurveTo(18 * scale, 187 * scale, 39 * scale, 195 * scale, 57 * scale, 186 * scale);\r\n    ctx.bezierCurveTo(68 * scale, 180 * scale, 65 * scale, 171 * scale, 62 * scale, 153 * scale);\r\n    ctx.bezierCurveTo(58.5 * scale, 131 * scale, 58.5 * scale, 131 * scale, 55 * scale, 109 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(39 * scale, 139 * scale);\r\n    ctx.bezierCurveTo(43 * scale, 139 * scale, 43 * scale, 139 * scale, 47 * scale, 139 * scale);\r\n    ctx.bezierCurveTo(51 * scale, 158 * scale, 56 * scale, 176 * scale, 44 * scale, 175 * scale);\r\n    ctx.bezierCurveTo(33 * scale, 177 * scale, 34 * scale, 167 * scale, 39 * scale, 140 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(44 * scale, 29 * scale);\r\n    ctx.bezierCurveTo(57 * scale, 63 * scale, 57 * scale, 63 * scale, 70 * scale, 97 * scale);\r\n    ctx.bezierCurveTo(60 * scale, 111 * scale, 60 * scale, 111 * scale, 50 * scale, 125 * scale);\r\n    ctx.bezierCurveTo(45 * scale, 128 * scale, 41 * scale, 128 * scale, 35 * scale, 124 * scale);\r\n    ctx.bezierCurveTo(26.5 * scale, 110 * scale, 26.5 * scale, 110 * scale, 18 * scale, 96 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(44 * scale, 54 * scale);\r\n    ctx.bezierCurveTo(50 * scale, 72 * scale, 50 * scale, 72 * scale, 56 * scale, 90 * scale);\r\n    ctx.bezierCurveTo(58 * scale, 94 * scale, 59 * scale, 98 * scale, 53 * scale, 105 * scale);\r\n    ctx.bezierCurveTo(47 * scale, 113 * scale, 43 * scale, 113 * scale, 36 * scale, 103 * scale);\r\n    ctx.bezierCurveTo(29 * scale, 96 * scale, 31 * scale, 94 * scale, 35 * scale, 83 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.translate(-20 * scale, -20 * scale);\r\n    ctx.globalAlpha = 1;\r\n    ctx.save();\r\n    ctx.translate(45 * scale, 384.5 * scale);\r\n    round_rect(ctx, -15 * scale, -216.5 * scale, 30 * scale, 433 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[1], color[2], 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(27 * scale, 572 * scale);\r\n    ctx.bezierCurveTo(44 * scale, 580 * scale, 55 * scale, 576 * scale, 62 * scale, 572 * scale);\r\n    ctx.bezierCurveTo(65 * scale, 585.5 * scale, 65 * scale, 585.5 * scale, 68 * scale, 599 * scale);\r\n    ctx.bezierCurveTo(71 * scale, 612 * scale, 68 * scale, 618 * scale, 34 * scale, 616 * scale);\r\n    ctx.bezierCurveTo(14 * scale, 615 * scale, 19 * scale, 607 * scale, 27 * scale, 573 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[4], 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(32 * scale, 587 * scale);\r\n    ctx.bezierCurveTo(39 * scale, 590 * scale, 48 * scale, 588 * scale, 54 * scale, 587 * scale);\r\n    ctx.bezierCurveTo(57 * scale, 604 * scale, 59 * scale, 609 * scale, 46 * scale, 609 * scale);\r\n    ctx.bezierCurveTo(27 * scale, 609 * scale, 28 * scale, 605 * scale, 33 * scale, 588 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[5]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(31 * scale, 113 * scale);\r\n    ctx.bezierCurveTo(27 * scale, 139 * scale, 27 * scale, 139 * scale, 23 * scale, 165 * scale);\r\n    ctx.bezierCurveTo(18 * scale, 187 * scale, 39 * scale, 195 * scale, 57 * scale, 186 * scale);\r\n    ctx.bezierCurveTo(68 * scale, 180 * scale, 65 * scale, 171 * scale, 62 * scale, 153 * scale);\r\n    ctx.bezierCurveTo(58.5 * scale, 131 * scale, 58.5 * scale, 131 * scale, 55 * scale, 109 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[4], 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(39 * scale, 139 * scale);\r\n    ctx.bezierCurveTo(43 * scale, 139 * scale, 43 * scale, 139 * scale, 47 * scale, 139 * scale);\r\n    ctx.bezierCurveTo(51 * scale, 158 * scale, 56 * scale, 176 * scale, 44 * scale, 175 * scale);\r\n    ctx.bezierCurveTo(33 * scale, 177 * scale, 34 * scale, 167 * scale, 39 * scale, 140 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[5]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(44 * scale, 29 * scale);\r\n    ctx.bezierCurveTo(57 * scale, 63 * scale, 57 * scale, 63 * scale, 70 * scale, 97 * scale);\r\n    ctx.bezierCurveTo(60 * scale, 111 * scale, 60 * scale, 111 * scale, 50 * scale, 125 * scale);\r\n    ctx.bezierCurveTo(45 * scale, 128 * scale, 41 * scale, 128 * scale, 35 * scale, 124 * scale);\r\n    ctx.bezierCurveTo(26.5 * scale, 110 * scale, 26.5 * scale, 110 * scale, 18 * scale, 96 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[6], color[7], 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(44 * scale, 54 * scale);\r\n    ctx.bezierCurveTo(50 * scale, 72 * scale, 50 * scale, 72 * scale, 56 * scale, 90 * scale);\r\n    ctx.bezierCurveTo(58 * scale, 94 * scale, 59 * scale, 98 * scale, 53 * scale, 105 * scale);\r\n    ctx.bezierCurveTo(47 * scale, 113 * scale, 43 * scale, 113 * scale, 36 * scale, 103 * scale);\r\n    ctx.bezierCurveTo(29 * scale, 96 * scale, 31 * scale, 94 * scale, 35 * scale, 83 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[8]);\r\n    return can;\r\n}\r\n;\r\nfunction create_diamondspear(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 106 * scale;\r\n    can.height = 681 * scale;\r\n    ctx.translate(20 * scale, 20 * scale);\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.save();\r\n    ctx.translate(52.5 * scale, 395 * scale);\r\n    ctx.rotate(0);\r\n    round_rect(ctx, -11.5 * scale, -226 * scale, 23 * scale, 452 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(35 * scale, 588 * scale);\r\n    ctx.bezierCurveTo(47 * scale, 596 * scale, 61 * scale, 594 * scale, 69 * scale, 588 * scale);\r\n    ctx.bezierCurveTo(79 * scale, 615 * scale, 78 * scale, 632 * scale, 59 * scale, 643 * scale);\r\n    ctx.bezierCurveTo(41 * scale, 650 * scale, 27 * scale, 632 * scale, 30 * scale, 610 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(52 * scale, 135 * scale);\r\n    ctx.bezierCurveTo(61.5 * scale, 142 * scale, 61.5 * scale, 142 * scale, 71 * scale, 149 * scale);\r\n    ctx.bezierCurveTo(69.5 * scale, 166 * scale, 69.5 * scale, 166 * scale, 68 * scale, 183 * scale);\r\n    ctx.bezierCurveTo(60.5 * scale, 187.5 * scale, 60.5 * scale, 187.5 * scale, 53 * scale, 192 * scale);\r\n    ctx.bezierCurveTo(45 * scale, 187.5 * scale, 45 * scale, 187.5 * scale, 37 * scale, 183 * scale);\r\n    ctx.bezierCurveTo(35.5 * scale, 167 * scale, 35.5 * scale, 167 * scale, 34 * scale, 151 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(64 * scale, 150 * scale);\r\n    ctx.bezierCurveTo(63 * scale, 164 * scale, 63 * scale, 164 * scale, 62 * scale, 178 * scale);\r\n    ctx.bezierCurveTo(58 * scale, 181 * scale, 58 * scale, 181 * scale, 54 * scale, 184 * scale);\r\n    ctx.bezierCurveTo(48.5 * scale, 181.5 * scale, 48.5 * scale, 181.5 * scale, 43 * scale, 179 * scale);\r\n    ctx.bezierCurveTo(42 * scale, 164.5 * scale, 42 * scale, 164.5 * scale, 41 * scale, 150 * scale);\r\n    ctx.bezierCurveTo(46 * scale, 152.5 * scale, 46 * scale, 152.5 * scale, 51 * scale, 155 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(52 * scale, 39 * scale);\r\n    ctx.bezierCurveTo(65.5 * scale, 82 * scale, 65.5 * scale, 82 * scale, 79 * scale, 125 * scale);\r\n    ctx.bezierCurveTo(66 * scale, 137.5 * scale, 66 * scale, 137.5 * scale, 53 * scale, 150 * scale);\r\n    ctx.bezierCurveTo(39 * scale, 138 * scale, 39 * scale, 138 * scale, 25 * scale, 126 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(52 * scale, 64 * scale);\r\n    ctx.bezierCurveTo(60 * scale, 92.5 * scale, 60 * scale, 92.5 * scale, 68 * scale, 121 * scale);\r\n    ctx.bezierCurveTo(61 * scale, 127.5 * scale, 61 * scale, 127.5 * scale, 54 * scale, 134 * scale);\r\n    ctx.bezierCurveTo(46.5 * scale, 127.5 * scale, 46.5 * scale, 127.5 * scale, 39 * scale, 121 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.translate(-20 * scale, -20 * scale);\r\n    ctx.globalAlpha = 1;\r\n    ctx.save();\r\n    ctx.translate(52.5 * scale, 395 * scale);\r\n    ctx.rotate(0);\r\n    round_rect(ctx, -11.5 * scale, -226 * scale, 23 * scale, 452 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[1], color[2], 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(35 * scale, 588 * scale);\r\n    ctx.bezierCurveTo(47 * scale, 596 * scale, 61 * scale, 594 * scale, 69 * scale, 588 * scale);\r\n    ctx.bezierCurveTo(79 * scale, 615 * scale, 78 * scale, 632 * scale, 59 * scale, 643 * scale);\r\n    ctx.bezierCurveTo(41 * scale, 650 * scale, 27 * scale, 632 * scale, 30 * scale, 610 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[4], 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(52 * scale, 135 * scale);\r\n    ctx.bezierCurveTo(61.5 * scale, 142 * scale, 61.5 * scale, 142 * scale, 71 * scale, 149 * scale);\r\n    ctx.bezierCurveTo(69.5 * scale, 166 * scale, 69.5 * scale, 166 * scale, 68 * scale, 183 * scale);\r\n    ctx.bezierCurveTo(60.5 * scale, 187.5 * scale, 60.5 * scale, 187.5 * scale, 53 * scale, 192 * scale);\r\n    ctx.bezierCurveTo(45 * scale, 187.5 * scale, 45 * scale, 187.5 * scale, 37 * scale, 183 * scale);\r\n    ctx.bezierCurveTo(35.5 * scale, 167 * scale, 35.5 * scale, 167 * scale, 34 * scale, 151 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[4], 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(64 * scale, 150 * scale);\r\n    ctx.bezierCurveTo(63 * scale, 164 * scale, 63 * scale, 164 * scale, 62 * scale, 178 * scale);\r\n    ctx.bezierCurveTo(58 * scale, 181 * scale, 58 * scale, 181 * scale, 54 * scale, 184 * scale);\r\n    ctx.bezierCurveTo(48.5 * scale, 181.5 * scale, 48.5 * scale, 181.5 * scale, 43 * scale, 179 * scale);\r\n    ctx.bezierCurveTo(42 * scale, 164.5 * scale, 42 * scale, 164.5 * scale, 41 * scale, 150 * scale);\r\n    ctx.bezierCurveTo(46 * scale, 152.5 * scale, 46 * scale, 152.5 * scale, 51 * scale, 155 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[5]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(52 * scale, 39 * scale);\r\n    ctx.bezierCurveTo(65.5 * scale, 82 * scale, 65.5 * scale, 82 * scale, 79 * scale, 125 * scale);\r\n    ctx.bezierCurveTo(66 * scale, 137.5 * scale, 66 * scale, 137.5 * scale, 53 * scale, 150 * scale);\r\n    ctx.bezierCurveTo(39 * scale, 138 * scale, 39 * scale, 138 * scale, 25 * scale, 126 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[6], color[7], 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(52 * scale, 64 * scale);\r\n    ctx.bezierCurveTo(60 * scale, 92.5 * scale, 60 * scale, 92.5 * scale, 68 * scale, 121 * scale);\r\n    ctx.bezierCurveTo(61 * scale, 127.5 * scale, 61 * scale, 127.5 * scale, 54 * scale, 134 * scale);\r\n    ctx.bezierCurveTo(46.5 * scale, 127.5 * scale, 46.5 * scale, 127.5 * scale, 39 * scale, 121 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[8]);\r\n    return can;\r\n}\r\n;\r\nfunction create_amespear(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 108 * scale;\r\n    can.height = 669 * scale;\r\n    ctx.translate(20 * scale, 20 * scale);\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.save();\r\n    ctx.translate(54 * scale, 389.5 * scale);\r\n    round_rect(ctx, -15 * scale, -228.5 * scale, 30 * scale, 457 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(35 * scale, 579 * scale);\r\n    ctx.bezierCurveTo(47 * scale, 587 * scale, 61 * scale, 584 * scale, 71 * scale, 579 * scale);\r\n    ctx.bezierCurveTo(75 * scale, 597.5 * scale, 75 * scale, 597.5 * scale, 79 * scale, 616 * scale);\r\n    ctx.bezierCurveTo(66.5 * scale, 628 * scale, 66.5 * scale, 628 * scale, 54 * scale, 640 * scale);\r\n    ctx.bezierCurveTo(41 * scale, 628.5 * scale, 41 * scale, 628.5 * scale, 28 * scale, 617 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(30 * scale, 141 * scale);\r\n    ctx.bezierCurveTo(40 * scale, 136 * scale, 40 * scale, 136 * scale, 50 * scale, 131 * scale);\r\n    ctx.bezierCurveTo(63 * scale, 136 * scale, 63 * scale, 136 * scale, 76 * scale, 141 * scale);\r\n    ctx.bezierCurveTo(72.5 * scale, 161.5 * scale, 72.5 * scale, 161.5 * scale, 69 * scale, 182 * scale);\r\n    ctx.bezierCurveTo(61.5 * scale, 186.5 * scale, 61.5 * scale, 186.5 * scale, 54 * scale, 191 * scale);\r\n    ctx.bezierCurveTo(45 * scale, 186.5 * scale, 45 * scale, 186.5 * scale, 36 * scale, 182 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(42 * scale, 152 * scale);\r\n    ctx.bezierCurveTo(53 * scale, 152 * scale, 53 * scale, 152 * scale, 64 * scale, 152 * scale);\r\n    ctx.bezierCurveTo(62 * scale, 171 * scale, 62 * scale, 176 * scale, 55 * scale, 177 * scale);\r\n    ctx.bezierCurveTo(42 * scale, 176 * scale, 45 * scale, 174 * scale, 42 * scale, 152 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(52 * scale, 28 * scale);\r\n    ctx.bezierCurveTo(67.5 * scale, 55 * scale, 67.5 * scale, 55 * scale, 83 * scale, 82 * scale);\r\n    ctx.bezierCurveTo(80 * scale, 106.5 * scale, 80 * scale, 106.5 * scale, 77 * scale, 131 * scale);\r\n    ctx.bezierCurveTo(58 * scale, 147 * scale, 44 * scale, 141 * scale, 29 * scale, 131 * scale);\r\n    ctx.bezierCurveTo(26.5 * scale, 106.5 * scale, 26.5 * scale, 106.5 * scale, 24 * scale, 82 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(53 * scale, 53 * scale);\r\n    ctx.bezierCurveTo(61 * scale, 70 * scale, 61 * scale, 70 * scale, 69 * scale, 87 * scale);\r\n    ctx.bezierCurveTo(67 * scale, 106 * scale, 67 * scale, 106 * scale, 65 * scale, 125 * scale);\r\n    ctx.bezierCurveTo(54 * scale, 130 * scale, 51 * scale, 130 * scale, 41 * scale, 125 * scale);\r\n    ctx.bezierCurveTo(39 * scale, 105 * scale, 39 * scale, 105 * scale, 37 * scale, 85 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.translate(-20 * scale, -20 * scale);\r\n    ctx.globalAlpha = 1;\r\n    ctx.save();\r\n    ctx.translate(54 * scale, 389.5 * scale);\r\n    ctx.rotate(0);\r\n    round_rect(ctx, -15 * scale, -228.5 * scale, 30 * scale, 457 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[1], color[2], 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(35 * scale, 579 * scale);\r\n    ctx.bezierCurveTo(47 * scale, 587 * scale, 61 * scale, 584 * scale, 71 * scale, 579 * scale);\r\n    ctx.bezierCurveTo(75 * scale, 597.5 * scale, 75 * scale, 597.5 * scale, 79 * scale, 616 * scale);\r\n    ctx.bezierCurveTo(66.5 * scale, 628 * scale, 66.5 * scale, 628 * scale, 54 * scale, 640 * scale);\r\n    ctx.bezierCurveTo(41 * scale, 628.5 * scale, 41 * scale, 628.5 * scale, 28 * scale, 617 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[4], 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(30 * scale, 141 * scale);\r\n    ctx.bezierCurveTo(40 * scale, 136 * scale, 40 * scale, 136 * scale, 50 * scale, 131 * scale);\r\n    ctx.bezierCurveTo(63 * scale, 136 * scale, 63 * scale, 136 * scale, 76 * scale, 141 * scale);\r\n    ctx.bezierCurveTo(72.5 * scale, 161.5 * scale, 72.5 * scale, 161.5 * scale, 69 * scale, 182 * scale);\r\n    ctx.bezierCurveTo(61.5 * scale, 186.5 * scale, 61.5 * scale, 186.5 * scale, 54 * scale, 191 * scale);\r\n    ctx.bezierCurveTo(45 * scale, 186.5 * scale, 45 * scale, 186.5 * scale, 36 * scale, 182 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[4], 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(42 * scale, 152 * scale);\r\n    ctx.bezierCurveTo(53 * scale, 152 * scale, 53 * scale, 152 * scale, 64 * scale, 152 * scale);\r\n    ctx.bezierCurveTo(62 * scale, 171 * scale, 62 * scale, 176 * scale, 55 * scale, 177 * scale);\r\n    ctx.bezierCurveTo(42 * scale, 176 * scale, 45 * scale, 174 * scale, 42 * scale, 152 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[5]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(52 * scale, 28 * scale);\r\n    ctx.bezierCurveTo(67.5 * scale, 55 * scale, 67.5 * scale, 55 * scale, 83 * scale, 82 * scale);\r\n    ctx.bezierCurveTo(80 * scale, 106.5 * scale, 80 * scale, 106.5 * scale, 77 * scale, 131 * scale);\r\n    ctx.bezierCurveTo(58 * scale, 147 * scale, 44 * scale, 141 * scale, 29 * scale, 131 * scale);\r\n    ctx.bezierCurveTo(26.5 * scale, 106.5 * scale, 26.5 * scale, 106.5 * scale, 24 * scale, 82 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[6], color[7], 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(53 * scale, 53 * scale);\r\n    ctx.bezierCurveTo(61 * scale, 70 * scale, 61 * scale, 70 * scale, 69 * scale, 87 * scale);\r\n    ctx.bezierCurveTo(67 * scale, 106 * scale, 67 * scale, 106 * scale, 65 * scale, 125 * scale);\r\n    ctx.bezierCurveTo(54 * scale, 130 * scale, 51 * scale, 130 * scale, 41 * scale, 125 * scale);\r\n    ctx.bezierCurveTo(39 * scale, 105 * scale, 39 * scale, 105 * scale, 37 * scale, 85 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[8]);\r\n    return can;\r\n}\r\n;\r\nfunction create_spear(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 81 * scale;\r\n    can.height = 350 * scale;\r\n    ctx.globalAlpha = draw_shadow ? 0.6 : 1;\r\n    ctx.translate(0, 5 * scale);\r\n    ctx.save();\r\n    ctx.translate(35 * scale, 160 * scale);\r\n    ctx.rotate(0);\r\n    round_rect(ctx, -6 * scale, -100.5 * scale, 12 * scale, 240 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0]);\r\n    ctx.translate(0, -5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.save();\r\n    ctx.translate(-6 * scale, 11 * scale);\r\n    ctx.moveTo(26.0714111328125 * scale, 50.9 * scale);\r\n    ctx.bezierCurveTo(32.0714111328125 * scale, 35.892852783203125 * scale, 39.0714111328125 * scale, 18.892852783203125 * scale, 45.0714111328125 * scale, 7.892852783203125 * scale);\r\n    ctx.bezierCurveTo(51.0714111328125 * scale, 13.892852783203125 * scale, 56.0714111328125 * scale, 36.892852783203125 * scale, 60.0714111328125 * scale, 50.892852783203125 * scale);\r\n    ctx.bezierCurveTo(52.5714111328125 * scale, 58.892852783203125 * scale, 52.5714111328125 * scale, 58.892852783203125 * scale, 45.0714111328125 * scale, 66.89285278320312 * scale);\r\n    ctx.bezierCurveTo(37.0714111328125 * scale, 58.892852783203125 * scale, 37.0714111328125 * scale, 58.892852783203125 * scale, 29.0714111328125 * scale, 50.892852783203125 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.restore();\r\n    ctx.globalAlpha = 1;\r\n    ctx.save();\r\n    ctx.translate(0, -10 * scale);\r\n    ctx.translate(45.0714111328125 * scale, 149.39285278320312 * scale);\r\n    ctx.rotate(0);\r\n    round_rect(ctx, -6 * scale, -94.5 * scale, 12 * scale, 250 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[1], color[2], 6 * scale);\r\n    ctx.translate(0, 0 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(29.0714111328125 * scale, 50.9 * scale);\r\n    ctx.bezierCurveTo(32.0714111328125 * scale, 35.892852783203125 * scale, 39.0714111328125 * scale, 18.892852783203125 * scale, 45.0714111328125 * scale, 7.892852783203125 * scale);\r\n    ctx.bezierCurveTo(51.0714111328125 * scale, 13.892852783203125 * scale, 56.0714111328125 * scale, 36.892852783203125 * scale, 60.0714111328125 * scale, 50.892852783203125 * scale);\r\n    ctx.bezierCurveTo(52.5714111328125 * scale, 58.892852783203125 * scale, 52.5714111328125 * scale, 58.892852783203125 * scale, 45.0714111328125 * scale, 66.89285278320312 * scale);\r\n    ctx.bezierCurveTo(37.0714111328125 * scale, 58.892852783203125 * scale, 37.0714111328125 * scale, 58.892852783203125 * scale, 29.0714111328125 * scale, 50.892852783203125 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[4], 6 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_dragon_spear(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 43 * scale;\r\n    can.height = 209 * scale;\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(0, 10 * scale);\r\n    ctx.translate(5 * scale, 5 * scale);\r\n    ctx.save();\r\n    ctx.translate(21 * scale, 102.5 * scale);\r\n    round_rect(ctx, -4 * scale, -76.5 * scale, 8 * scale, 163 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0]);\r\n    ctx.translate(0, 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(20 * scale, 10 * scale);\r\n    ctx.bezierCurveTo(25 * scale, 25.5 * scale, 25 * scale, 25.5 * scale, 30 * scale, 41 * scale);\r\n    ctx.bezierCurveTo(25.5 * scale, 38.5 * scale, 25.5 * scale, 38.5 * scale, 21 * scale, 36 * scale);\r\n    ctx.bezierCurveTo(16 * scale, 38.5 * scale, 16 * scale, 38.5 * scale, 11 * scale, 41 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(21 * scale, 1 * scale);\r\n    ctx.bezierCurveTo(28 * scale, 18 * scale, 28 * scale, 18 * scale, 35 * scale, 35 * scale);\r\n    ctx.bezierCurveTo(28.5 * scale, 32 * scale, 28.5 * scale, 32 * scale, 22 * scale, 29 * scale);\r\n    ctx.bezierCurveTo(14.5 * scale, 32.5 * scale, 14.5 * scale, 32.5 * scale, 7 * scale, 36 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(14 * scale, 146 * scale);\r\n    ctx.bezierCurveTo(21 * scale, 146 * scale, 21 * scale, 146 * scale, 28 * scale, 146 * scale);\r\n    ctx.bezierCurveTo(27.5 * scale, 147.5 * scale, 27.5 * scale, 147.5 * scale, 27 * scale, 149 * scale);\r\n    ctx.bezierCurveTo(27 * scale, 160 * scale, 27 * scale, 160 * scale, 27 * scale, 171 * scale);\r\n    ctx.bezierCurveTo(27.5 * scale, 171.5 * scale, 27.5 * scale, 171.5 * scale, 28 * scale, 172 * scale);\r\n    ctx.bezierCurveTo(21 * scale, 172 * scale, 21 * scale, 172 * scale, 14 * scale, 172 * scale);\r\n    ctx.bezierCurveTo(14 * scale, 171.5 * scale, 14 * scale, 171.5 * scale, 14 * scale, 171 * scale);\r\n    ctx.bezierCurveTo(14.5 * scale, 171.5 * scale, 14.5 * scale, 171.5 * scale, 15 * scale, 172 * scale);\r\n    ctx.bezierCurveTo(15 * scale, 160.5 * scale, 15 * scale, 160.5 * scale, 15 * scale, 149 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(21 * scale, 6 * scale);\r\n    ctx.bezierCurveTo(26.5 * scale, 18.5 * scale, 26.5 * scale, 18.5 * scale, 32 * scale, 31 * scale);\r\n    ctx.bezierCurveTo(27 * scale, 29 * scale, 27 * scale, 29 * scale, 22 * scale, 27 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.translate(0, -20 * scale);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(0, 10 * scale);\r\n    ctx.translate(-5 * scale, -5 * scale);\r\n    ctx.save();\r\n    ctx.translate(21 * scale, 102.5 * scale);\r\n    round_rect(ctx, -4 * scale, -76.5 * scale, 8 * scale, 163 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[1], color[2], 4 * scale);\r\n    ctx.translate(0, 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(20 * scale, 10 * scale);\r\n    ctx.bezierCurveTo(25 * scale, 25.5 * scale, 25 * scale, 25.5 * scale, 30 * scale, 41 * scale);\r\n    ctx.bezierCurveTo(25.5 * scale, 38.5 * scale, 25.5 * scale, 38.5 * scale, 21 * scale, 36 * scale);\r\n    ctx.bezierCurveTo(16 * scale, 38.5 * scale, 16 * scale, 38.5 * scale, 11 * scale, 41 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[4], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(21 * scale, 1 * scale);\r\n    ctx.bezierCurveTo(28 * scale, 18 * scale, 28 * scale, 18 * scale, 35 * scale, 35 * scale);\r\n    ctx.bezierCurveTo(28.5 * scale, 32 * scale, 28.5 * scale, 32 * scale, 22 * scale, 29 * scale);\r\n    ctx.bezierCurveTo(14.5 * scale, 32.5 * scale, 14.5 * scale, 32.5 * scale, 7 * scale, 36 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[5], color[6], 4 * scale);\r\n    ctx.translate(0, 0 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(14 * scale, 146 * scale);\r\n    ctx.bezierCurveTo(21 * scale, 146 * scale, 21 * scale, 146 * scale, 28 * scale, 146 * scale);\r\n    ctx.bezierCurveTo(27.5 * scale, 147.5 * scale, 27.5 * scale, 147.5 * scale, 27 * scale, 149 * scale);\r\n    ctx.bezierCurveTo(27 * scale, 160 * scale, 27 * scale, 160 * scale, 27 * scale, 171 * scale);\r\n    ctx.bezierCurveTo(27.5 * scale, 171.5 * scale, 27.5 * scale, 171.5 * scale, 28 * scale, 172 * scale);\r\n    ctx.bezierCurveTo(21 * scale, 172 * scale, 21 * scale, 172 * scale, 14 * scale, 172 * scale);\r\n    ctx.bezierCurveTo(14 * scale, 171.5 * scale, 14 * scale, 171.5 * scale, 14 * scale, 171 * scale);\r\n    ctx.bezierCurveTo(14.5 * scale, 171.5 * scale, 14.5 * scale, 171.5 * scale, 15 * scale, 172 * scale);\r\n    ctx.bezierCurveTo(15 * scale, 160.5 * scale, 15 * scale, 160.5 * scale, 15 * scale, 149 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(21 * scale, 6 * scale);\r\n    ctx.bezierCurveTo(26.5 * scale, 18.5 * scale, 26.5 * scale, 18.5 * scale, 32 * scale, 31 * scale);\r\n    ctx.bezierCurveTo(27 * scale, 29 * scale, 27 * scale, 29 * scale, 22 * scale, 27 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[8]);\r\n    return can;\r\n}\r\n;\r\nfunction create_plus_chest(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 200 * scale;\r\n    can.height = 200 * scale;\r\n    ctx.save();\r\n    ctx.translate(112 * scale, 158 * scale);\r\n    round_rect(ctx, -86.5 * scale, -86 * scale, 150 * scale, 35 * scale, 20 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0]);\r\n    ctx.save();\r\n    ctx.translate(170 * scale, 100 * scale);\r\n    round_rect(ctx, -86.5 * scale, -86 * scale, 35 * scale, 150 * scale, 20 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0]);\r\n    return can;\r\n}\r\n;\r\nfunction create_chest_slot(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 118 * scale;\r\n    can.height = 129 * scale;\r\n    ctx.save();\r\n    ctx.translate(90 * scale, 90 * scale);\r\n    round_rect(ctx, -86.5 * scale, -86 * scale, 110 * scale, 110 * scale, 15 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0], color[1], 4);\r\n    ctx.save();\r\n    round_rect(ctx, 30 * scale, 115 * scale, 60 * scale, 5 * scale, 15 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[2], color[3], 4);\r\n    ctx.save();\r\n    round_rect(ctx, 50 * scale, 117 * scale, 20 * scale, 10 * scale, 15 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[2]);\r\n    return can;\r\n}\r\n;\r\nfunction create_chest(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 165 * scale;\r\n    can.height = 123 * scale;\r\n    ctx.save();\r\n    ctx.translate(81 * scale, 65 * scale);\r\n    round_rect(ctx, -78 * scale, -54.5 * scale, 156 * scale, 109 * scale, 20 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0]);\r\n    ctx.save();\r\n    ctx.translate(81 * scale, 58 * scale);\r\n    round_rect(ctx, -78 * scale, -54.5 * scale, 156 * scale, 109 * scale, 20 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[1], color[2], 4);\r\n    ctx.save();\r\n    ctx.translate(81 * scale, 58 * scale);\r\n    round_rect(ctx, -69 * scale, -47 * scale, 138 * scale, 93 * scale, 15 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[3], color[4], 4);\r\n    ctx.save();\r\n    ctx.translate(79 * scale, 54 * scale);\r\n    round_rect(ctx, -34 * scale, -40 * scale, 68 * scale, 88 * scale, 13 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, undefined, color[5], 4);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(44 * scale, 13 * scale);\r\n    ctx.bezierCurveTo(43.5 * scale, 55 * scale, 43.5 * scale, 55 * scale, 43 * scale, 101 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[6], 4);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(115 * scale, 13 * scale);\r\n    ctx.bezierCurveTo(115 * scale, 56 * scale, 115 * scale, 56 * scale, 115 * scale, 101 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[6], 4);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(35 * scale, 6 * scale);\r\n    ctx.bezierCurveTo(35 * scale, 56 * scale, 36 * scale, 109 * scale, 35 * scale, 110 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[7], 4);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(123 * scale, 6 * scale);\r\n    ctx.bezierCurveTo(123 * scale, 56 * scale, 123 * scale, 56 * scale, 123 * scale, 110 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[7], 4);\r\n    ctx.save();\r\n    ctx.translate(79 * scale, 113 * scale);\r\n    round_rect(ctx, -18 * scale, -2 * scale, 36 * scale, 4 * scale, 20 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, undefined, color[8], 4);\r\n    ctx.save();\r\n    ctx.translate(75 * scale, 118 * scale);\r\n    round_rect(ctx, -6 * scale, -2.5 * scale, 20 * scale, 5 * scale, 20 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[8]);\r\n    return can;\r\n}\r\n;\r\nfunction create_bag(scale, useless, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 86 * scale;\r\n    can.height = 45 * scale;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(15 * scale, 15 * scale);\r\n    ctx.bezierCurveTo(16 * scale, 15 * scale, 19.5 * scale, 9 * scale, 24 * scale, 2 * scale);\r\n    ctx.bezierCurveTo(41 * scale, 2 * scale, 41 * scale, 2 * scale, 58 * scale, 2 * scale);\r\n    ctx.bezierCurveTo(64 * scale, 13 * scale, 61 * scale, 8 * scale, 65 * scale, 13 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[1], 4);\r\n    ctx.save();\r\n    ctx.translate(43 * scale, 27 * scale);\r\n    ctx.rotate(0);\r\n    round_rect(ctx, -40 * scale, -15 * scale, 80 * scale, 30 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0], color[1], 4);\r\n    ctx.save();\r\n    ctx.translate(43 * scale, 33 * scale);\r\n    ctx.rotate(0);\r\n    round_rect(ctx, -17 * scale, -4.5 * scale, 34 * scale, 9 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0], color[1], 4);\r\n    return can;\r\n}\r\n;\r\nfunction create_fur(scale, useless, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 92 * scale;\r\n    can.height = 108 * scale;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(31 * scale, 10 * scale);\r\n    ctx.bezierCurveTo(37 * scale, 2 * scale, 49 * scale, 0 * scale, 61 * scale, 15 * scale);\r\n    ctx.bezierCurveTo(81 * scale, 31 * scale, 78 * scale, 25 * scale, 79 * scale, 37 * scale);\r\n    ctx.bezierCurveTo(76 * scale, 44 * scale, 81 * scale, 56 * scale, 85 * scale, 63 * scale);\r\n    ctx.bezierCurveTo(91 * scale, 71 * scale, 90 * scale, 78 * scale, 83 * scale, 84 * scale);\r\n    ctx.bezierCurveTo(60 * scale, 98 * scale, 67 * scale, 95 * scale, 57 * scale, 102 * scale);\r\n    ctx.bezierCurveTo(47 * scale, 106 * scale, 43 * scale, 106 * scale, 31 * scale, 98 * scale);\r\n    ctx.bezierCurveTo(22 * scale, 91 * scale, 17 * scale, 89 * scale, 7 * scale, 84 * scale);\r\n    ctx.bezierCurveTo(1 * scale, 77 * scale, 4 * scale, 73 * scale, 7 * scale, 60 * scale);\r\n    ctx.bezierCurveTo(11 * scale, 50 * scale, 5 * scale, 32 * scale, 15 * scale, 27 * scale);\r\n    ctx.bezierCurveTo(26 * scale, 18 * scale, 26 * scale, 24 * scale, 31 * scale, 10 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[1], 4);\r\n    return can;\r\n}\r\n;\r\nfunction create_verified(scale, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 60 * scale;\r\n    can.height = 60 * scale;\r\n    ctx.translate(-25 * scale, -25 * scale);\r\n    ctx.translate(0, 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(24 * scale, 50 * scale);\r\n    ctx.bezierCurveTo(32.5 * scale, 54.5 * scale, 32.5 * scale, 54.5 * scale, 41 * scale, 59 * scale);\r\n    ctx.bezierCurveTo(57 * scale, 47 * scale, 57 * scale, 47 * scale, 73 * scale, 35 * scale);\r\n    ctx.bezierCurveTo(57 * scale, 53 * scale, 57 * scale, 53 * scale, 41 * scale, 71 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.translate(0, -5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(24 * scale, 50 * scale);\r\n    ctx.bezierCurveTo(32.5 * scale, 54.5 * scale, 32.5 * scale, 54.5 * scale, 41 * scale, 59 * scale);\r\n    ctx.bezierCurveTo(57 * scale, 47 * scale, 57 * scale, 47 * scale, 73 * scale, 35 * scale);\r\n    ctx.bezierCurveTo(57 * scale, 53 * scale, 57 * scale, 53 * scale, 41 * scale, 71 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1]);\r\n    return can;\r\n}\r\n;\r\nfunction create_earmuff(scale, useless, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 151 * scale;\r\n    can.height = 80 * scale;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(133 * scale, 54 * scale);\r\n    ctx.bezierCurveTo(136 * scale, 18 * scale, 129 * scale, 18 * scale, 114 * scale, 13 * scale);\r\n    ctx.bezierCurveTo(51 * scale, 0 * scale, 36 * scale, 16 * scale, 34 * scale, 16 * scale);\r\n    ctx.bezierCurveTo(8 * scale, 28 * scale, 22 * scale, 56 * scale, 21 * scale, 57 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2], color[3], 4);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(130 * scale, 40 * scale);\r\n    ctx.bezierCurveTo(132 * scale, 35 * scale, 132 * scale, 30 * scale, 132 * scale, 29 * scale);\r\n    ctx.bezierCurveTo(145 * scale, 38 * scale, 144 * scale, 43 * scale, 137 * scale, 54 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[1], 4);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(20 * scale, 33 * scale);\r\n    ctx.bezierCurveTo(24 * scale, 44 * scale, 215 * scale, 39 * scale, 23 * scale, 44 * scale);\r\n    ctx.bezierCurveTo(19 * scale, 49 * scale, 19 * scale, 49 * scale, 15 * scale, 54 * scale);\r\n    ctx.bezierCurveTo(4 * scale, 43 * scale, 10 * scale, 35 * scale, 20 * scale, 32 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[1], 4);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(18 * scale, 52 * scale);\r\n    ctx.bezierCurveTo(24 * scale, 31 * scale, 34 * scale, 25 * scale, 75 * scale, 23 * scale);\r\n    ctx.bezierCurveTo(130 * scale, 24 * scale, 129 * scale, 32 * scale, 134 * scale, 51 * scale);\r\n    ctx.bezierCurveTo(138 * scale, 70 * scale, 126 * scale, 72 * scale, 90 * scale, 73 * scale);\r\n    ctx.bezierCurveTo(18 * scale, 72 * scale, 15 * scale, 68 * scale, 18 * scale, 54 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[1], 4);\r\n    return can;\r\n}\r\n;\r\nfunction create_cap_scarf(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 138 * scale;\r\n    can.height = 133 * scale;\r\n    ctx.globalAlpha = draw_shadow ? 0.3 : 1;\r\n    ctx.translate(0, 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(26 * scale, 79.640625 * scale);\r\n    ctx.bezierCurveTo(13 * scale, 84.640625 * scale, 9 * scale, 86.640625 * scale, 7 * scale, 78.640625 * scale);\r\n    ctx.bezierCurveTo(6 * scale, 69.640625 * scale, 15 * scale, 67.640625 * scale, 31 * scale, 62.640625 * scale);\r\n    ctx.bezierCurveTo(63 * scale, 55.640625 * scale, 85 * scale, 57.640625 * scale, 104 * scale, 63.640625 * scale);\r\n    ctx.bezierCurveTo(131 * scale, 69.640625 * scale, 132 * scale, 71.640625 * scale, 131 * scale, 78.640625 * scale);\r\n    ctx.bezierCurveTo(131 * scale, 91.640625 * scale, 112 * scale, 80.640625 * scale, 91 * scale, 75.640625 * scale);\r\n    ctx.bezierCurveTo(51 * scale, 70.640625 * scale, 45 * scale, 74.640625 * scale, 28 * scale, 78.640625 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(8 * scale, 82.640625 * scale);\r\n    ctx.bezierCurveTo(40 * scale, 107.640625 * scale, 53 * scale, 104.640625 * scale, 67 * scale, 106.640625 * scale);\r\n    ctx.bezierCurveTo(101 * scale, 103.640625 * scale, 117 * scale, 93.640625 * scale, 127 * scale, 84.640625 * scale);\r\n    ctx.bezierCurveTo(135 * scale, 95.640625 * scale, 131 * scale, 107.640625 * scale, 110 * scale, 118.640625 * scale);\r\n    ctx.bezierCurveTo(78 * scale, 129.640625 * scale, 67 * scale, 130.640625 * scale, 27 * scale, 119.640625 * scale);\r\n    ctx.bezierCurveTo(0 * scale, 105.640625 * scale, 8 * scale, 83.640625 * scale, 10 * scale, 84.640625 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(0, -5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(8 * scale, 73.640625 * scale);\r\n    ctx.bezierCurveTo(7 * scale, 23.640625 * scale, 33 * scale, 19.640625 * scale, 71 * scale, 17.640625 * scale);\r\n    ctx.bezierCurveTo(129 * scale, 19.640625 * scale, 130 * scale, 45.640625 * scale, 130 * scale, 76.640625 * scale);\r\n    ctx.bezierCurveTo(90 * scale, 63.640625 * scale, 85 * scale, 63.640625 * scale, 73 * scale, 63.640625 * scale);\r\n    ctx.bezierCurveTo(38 * scale, 63.640625 * scale, 33 * scale, 66.640625 * scale, 8 * scale, 73.640625 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(72 * scale, 28.640625 * scale);\r\n    ctx.bezierCurveTo(51 * scale, 25.640625 * scale, 56 * scale, 7.640625 * scale, 70 * scale, 5.640625 * scale);\r\n    ctx.bezierCurveTo(94 * scale, 7.640625 * scale, 87 * scale, 29.640625 * scale, 72 * scale, 28.640625 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[2], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(51 * scale, 26.640625 * scale);\r\n    ctx.bezierCurveTo(42 * scale, 29.640625 * scale, 43 * scale, 31.640625 * scale, 42 * scale, 37.640625 * scale);\r\n    fill_path(ctx, undefined, color[2], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(90 * scale, 26.640625 * scale);\r\n    ctx.bezierCurveTo(100 * scale, 28.640625 * scale, 98 * scale, 34.640625 * scale, 99 * scale, 38.640625 * scale);\r\n    fill_path(ctx, undefined, color[2], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(26 * scale, 79.640625 * scale);\r\n    ctx.bezierCurveTo(13 * scale, 84.640625 * scale, 9 * scale, 86.640625 * scale, 7 * scale, 78.640625 * scale);\r\n    ctx.bezierCurveTo(6 * scale, 69.640625 * scale, 15 * scale, 67.640625 * scale, 31 * scale, 62.640625 * scale);\r\n    ctx.bezierCurveTo(63 * scale, 55.640625 * scale, 85 * scale, 57.640625 * scale, 104 * scale, 63.640625 * scale);\r\n    ctx.bezierCurveTo(131 * scale, 69.640625 * scale, 132 * scale, 71.640625 * scale, 131 * scale, 78.640625 * scale);\r\n    ctx.bezierCurveTo(131 * scale, 91.640625 * scale, 112 * scale, 80.640625 * scale, 91 * scale, 75.640625 * scale);\r\n    ctx.bezierCurveTo(51 * scale, 70.640625 * scale, 45 * scale, 74.640625 * scale, 28 * scale, 78.640625 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[4], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(8 * scale, 82.640625 * scale);\r\n    ctx.bezierCurveTo(40 * scale, 107.640625 * scale, 53 * scale, 104.640625 * scale, 67 * scale, 106.640625 * scale);\r\n    ctx.bezierCurveTo(101 * scale, 103.640625 * scale, 117 * scale, 93.640625 * scale, 127 * scale, 84.640625 * scale);\r\n    ctx.bezierCurveTo(135 * scale, 95.640625 * scale, 131 * scale, 107.640625 * scale, 110 * scale, 118.640625 * scale);\r\n    ctx.bezierCurveTo(78 * scale, 129.640625 * scale, 67 * scale, 130.640625 * scale, 27 * scale, 119.640625 * scale);\r\n    ctx.bezierCurveTo(0 * scale, 105.640625 * scale, 8 * scale, 83.640625 * scale, 10 * scale, 84.640625 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[4], 4 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_spike(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    var w = scale * 170;\r\n    var h = scale * 172;\r\n    var x = w / 2;\r\n    var y = h / 2;\r\n    can.width = w;\r\n    can.height = h;\r\n    ctx.translate(x, y + 7 * scale);\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 0;\r\n    circle(ctx, 0, 0, 60 * scale);\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(0, -7 * scale);\r\n    ctx.save();\r\n    for (var i = 0; i < 10; i++) {\r\n        ctx.rotate(Math.PI / 5);\r\n        ctx.save();\r\n        ctx.translate(65 * scale, 0);\r\n        round_regular_polygon(ctx, 3, 20 * scale, 4 * scale);\r\n        fill_path(ctx, color[1], color[2], 4 * scale);\r\n        ctx.restore();\r\n    }\r\n    ctx.restore();\r\n    circle(ctx, 0, 0, 60 * scale, 0);\r\n    fill_path(ctx, color[3], color[4], 4 * scale);\r\n    circle(ctx, 0, 0, 40 * scale);\r\n    fill_path(ctx, color[5]);\r\n    circle(ctx, 0, 0, 25 * scale);\r\n    fill_path(ctx, color[6], color[7], 8 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_spiketimer(scale, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    var w = scale * 170;\r\n    var h = scale * 172;\r\n    var x = w / 2;\r\n    var y = h / 2;\r\n    can.width = w;\r\n    can.height = h;\r\n    ctx.translate(x, y);\r\n    ctx.save();\r\n    for (var i = 0; i < 10; i++) {\r\n        ctx.rotate(Math.PI / 5);\r\n        ctx.save();\r\n        ctx.translate(65 * scale, 0);\r\n        round_regular_polygon(ctx, 3, 18 * scale, 4 * scale);\r\n        fill_path(ctx, color[0]);\r\n        ctx.restore();\r\n    }\r\n    ctx.restore();\r\n    circle(ctx, 0, 0, 40 * scale, 0);\r\n    fill_path(ctx, undefined, color[0], 6 * scale);\r\n    circle(ctx, 0, 0, 20 * scale, 0);\r\n    fill_path(ctx, color[0]);\r\n    return can;\r\n}\r\n;\r\nfunction create_spike_stone(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 170 * scale;\r\n    can.height = 170 * scale;\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(0, 5 * scale);\r\n    ctx.save();\r\n    ctx.translate(85 * scale, 88 * scale);\r\n    ctx.rotate(1.4);\r\n    round_regular_polygon(ctx, 7, 60 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(85 * scale, 80 * scale);\r\n    for (var i = 0; i < 10; i++) {\r\n        ctx.rotate(Math.PI / 5);\r\n        ctx.save();\r\n        ctx.translate(65 * scale, 0);\r\n        round_regular_polygon(ctx, 3, 21 * scale, 4 * scale);\r\n        fill_path(ctx, color[1], color[2], 4 * scale);\r\n        ctx.restore();\r\n    }\r\n    ctx.save();\r\n    ctx.translate(0 * scale, 0 * scale);\r\n    ctx.rotate(1.4);\r\n    round_regular_polygon(ctx, 7, 60 * scale, 10 * scale);\r\n    fill_path(ctx, color[3], color[4], 4 * scale);\r\n    ctx.rotate(0.64);\r\n    round_regular_polygon(ctx, 7, 40 * scale, 10 * scale);\r\n    fill_path(ctx, color[5], color[6], 4 * scale);\r\n    ctx.rotate(0.12);\r\n    round_regular_polygon(ctx, 7, 23 * scale, 5 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[7]);\r\n    return can;\r\n}\r\n;\r\nfunction create_spike_gold(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 170 * scale;\r\n    can.height = 170 * scale;\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(0, 3 * scale);\r\n    ctx.save();\r\n    ctx.translate(85 * scale, 95 * scale);\r\n    ctx.rotate(1.4);\r\n    round_regular_polygon(ctx, 7, 60 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(85 * scale, 82 * scale);\r\n    for (var i = 0; i < 10; i++) {\r\n        ctx.rotate(Math.PI / 5);\r\n        ctx.save();\r\n        ctx.translate(65 * scale, 0);\r\n        round_regular_polygon(ctx, 3, 21 * scale, 4 * scale);\r\n        fill_path(ctx, color[1], color[2], 4 * scale);\r\n        ctx.restore();\r\n    }\r\n    ctx.save();\r\n    ctx.translate(0 * scale, 0 * scale);\r\n    ctx.rotate(1);\r\n    round_regular_polygon(ctx, 8, 60 * scale, 10 * scale);\r\n    fill_path(ctx, color[3], color[4], 4 * scale);\r\n    ctx.rotate(0.56);\r\n    round_regular_polygon(ctx, 8, 40 * scale, 10 * scale);\r\n    fill_path(ctx, color[5], color[6], 4 * scale);\r\n    ctx.rotate(0.28);\r\n    round_regular_polygon(ctx, 8, 28 * scale, 8 * scale);\r\n    fill_path(ctx, color[7]);\r\n    ctx.restore();\r\n    return can;\r\n}\r\n;\r\nfunction create_spike_diamond(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 170 * scale;\r\n    can.height = 170 * scale;\r\n    ctx.translate(0, 3 * scale);\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.save();\r\n    ctx.translate(85 * scale, 95 * scale);\r\n    ctx.rotate(1.4);\r\n    round_regular_polygon(ctx, 7, 60 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(85 * scale, 82 * scale);\r\n    for (var i = 0; i < 10; i++) {\r\n        ctx.rotate(Math.PI / 5);\r\n        ctx.save();\r\n        ctx.translate(65 * scale, 0);\r\n        round_regular_polygon(ctx, 3, 21 * scale, 4 * scale);\r\n        fill_path(ctx, color[1], color[2], 4 * scale);\r\n        ctx.restore();\r\n    }\r\n    ctx.save();\r\n    ctx.translate(0 * scale, 0 * scale);\r\n    ctx.rotate(0.2);\r\n    round_regular_polygon(ctx, 9, 60 * scale, 10 * scale);\r\n    fill_path(ctx, color[3], color[4], 4 * scale);\r\n    ctx.rotate(-0.32);\r\n    round_regular_polygon(ctx, 9, 38 * scale, 10 * scale);\r\n    fill_path(ctx, color[5], color[6], 4 * scale);\r\n    ctx.rotate(0.68);\r\n    round_regular_polygon(ctx, 9, 20 * scale, 8 * scale);\r\n    fill_path(ctx, color[7], color[8], 6 * scale);\r\n    ctx.restore();\r\n    return can;\r\n}\r\n;\r\nfunction create_hammer(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 69 * scale;\r\n    can.height = 120 * scale;\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.save();\r\n    ctx.translate(30 * scale, 84 * scale);\r\n    round_rect(ctx, -6 * scale, -66.5 * scale, 8 * scale, 100 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0]);\r\n    ctx.save();\r\n    ctx.translate(30 * scale, 45 * scale);\r\n    round_rect(ctx, -9.5 * scale, -6.5 * scale, 16 * scale, 13 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0]);\r\n    ctx.save();\r\n    ctx.translate(30 * scale, 17 * scale);\r\n    round_rect(ctx, -7.5 * scale, -5.5 * scale, 12 * scale, 11 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0]);\r\n    ctx.save();\r\n    ctx.translate(30 * scale, 31 * scale);\r\n    round_rect(ctx, -26 * scale, -14.5 * scale, 52 * scale, 29 * scale, 5 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.save();\r\n    ctx.translate(36 * scale, 79.140625 * scale);\r\n    round_rect(ctx, -6 * scale, -66.5 * scale, 8 * scale, 100 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[1], color[2], 3 * scale);\r\n    ctx.save();\r\n    ctx.translate(35 * scale, 40.140625 * scale);\r\n    round_rect(ctx, -9.5 * scale, -6.5 * scale, 16 * scale, 13 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[3], color[4], 3 * scale);\r\n    ctx.save();\r\n    ctx.translate(35 * scale, 12.140625 * scale);\r\n    round_rect(ctx, -7.5 * scale, -5.5 * scale, 12 * scale, 11 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[3], color[4], 3 * scale);\r\n    ctx.save();\r\n    ctx.translate(34.5 * scale, 26.140625 * scale);\r\n    round_rect(ctx, -26 * scale, -14.5 * scale, 52 * scale, 29 * scale, 5 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[3], color[4], 3 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_clock_day(scale) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 321 * scale;\r\n    can.height = 345 * scale;\r\n    ctx.translate(0, 5 * scale);\r\n    ctx.translate(0, 20 * scale);\r\n    circle(ctx, 160.5 * scale, 159.5 * scale, 156.39595138242822 * scale);\r\n    fill_path(ctx, \"#322413\", \"#322413\", 4 * scale);\r\n    ctx.translate(0, -20 * scale);\r\n    circle(ctx, 160.5 * scale, 159.5 * scale, 156.39595138242822 * scale);\r\n    fill_path(ctx, \"#392C16\", \"#5E3E1A\", 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(31.999969482421875 * scale, 163.07290649414062 * scale);\r\n    ctx.bezierCurveTo(22.999969482421875 * scale, 67.07290649414062 * scale, 106 * scale, 20.072906494140625 * scale, 162 * scale, 23.072906494140625 * scale);\r\n    ctx.bezierCurveTo(269.9999694824219 * scale, 31.072906494140625 * scale, 292.9999694824219 * scale, 120.07290649414062 * scale, 294.9999694824219 * scale, 161.07290649414062 * scale);\r\n    ctx.bezierCurveTo(165.49996948242188 * scale, 162.07290649414062 * scale, 165.49996948242188 * scale, 162.07290649414062 * scale, 35.999969482421875 * scale, 163.07290649414062 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, \"#12432D\");\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(32.999969482421875 * scale, 165.07290649414062 * scale);\r\n    ctx.bezierCurveTo(16.999969482421875 * scale, 221.07290649414062 * scale, 85 * scale, 289.0729064941406 * scale, 156 * scale, 294.0729064941406 * scale);\r\n    ctx.bezierCurveTo(263.9999694824219 * scale, 293.0729064941406 * scale, 295.9999694824219 * scale, 199.07290649414062 * scale, 294.9999694824219 * scale, 159.07290649414062 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, \"#3A2A0D\");\r\n    circle(ctx, 161 * scale, 158.07290649414062 * scale, 133.4053971921676 * scale);\r\n    fill_path(ctx, undefined, \"#5E3E1A\", 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(31.999969482421875 * scale, 161.62844848632812 * scale);\r\n    ctx.bezierCurveTo(162.49996948242188 * scale, 161.62844848632812 * scale, 162.49996948242188 * scale, 161.62844848632812 * scale, 292.9999694824219 * scale, 161.62844848632812 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, \"#5E3E1A\", 12 * scale);\r\n    ctx.translate(0, 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(66 * scale, 158.29513549804688 * scale);\r\n    ctx.bezierCurveTo(86 * scale, 158.29513549804688 * scale, 86 * scale, 158.29513549804688 * scale, 106 * scale, 158.29513549804688 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, \"#c7a726\", 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(57.999969482421875 * scale, 117.29513549804688 * scale);\r\n    ctx.bezierCurveTo(85 * scale, 128.29513549804688 * scale, 85 * scale, 128.29513549804688 * scale, 113 * scale, 139.29513549804688 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, \"#c7a726\", 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(95 * scale, 90.29513549804688 * scale);\r\n    ctx.bezierCurveTo(112 * scale, 105.79513549804688 * scale, 112 * scale, 105.79513549804688 * scale, 129 * scale, 121.29513549804688 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, \"#c7a726\", 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(116 * scale, 52.850677490234375 * scale);\r\n    ctx.bezierCurveTo(130 * scale, 83.85067749023438 * scale, 130 * scale, 83.85067749023438 * scale, 144 * scale, 114.85067749023438 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, \"#c7a726\", 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(159 * scale, 61.295135498046875 * scale);\r\n    ctx.bezierCurveTo(160.49996948242188 * scale, 92.29513549804688 * scale, 160.49996948242188 * scale, 92.29513549804688 * scale, 160 * scale, 123.29513549804688 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, \"#c7a726\", 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(203 * scale, 51.295135498046875 * scale);\r\n    ctx.bezierCurveTo(190.49996948242188 * scale, 83.29513549804688 * scale, 190.49996948242188 * scale, 83.29513549804688 * scale, 176 * scale, 115.29513549804688 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, \"#c7a726\", 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(225 * scale, 89.29513549804688 * scale);\r\n    ctx.bezierCurveTo(210.49996948242188 * scale, 104.79513549804688 * scale, 210.49996948242188 * scale, 104.79513549804688 * scale, 194 * scale, 120.29513549804688 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, \"#c7a726\", 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(266.9999694824219 * scale, 112.29513549804688 * scale);\r\n    ctx.bezierCurveTo(233.49996948242188 * scale, 127.29513549804688 * scale, 233.49996948242188 * scale, 127.29513549804688 * scale, 199 * scale, 142.29513549804688 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, \"#c7a726\", 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(256.9999694824219 * scale, 155.29513549804688 * scale);\r\n    ctx.bezierCurveTo(238.49996948242188 * scale, 156.29513549804688 * scale, 238.49996948242188 * scale, 156.29513549804688 * scale, 219 * scale, 157.29513549804688 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, \"#c7a726\", 12 * scale);\r\n    ctx.translate(0, -8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(66 * scale, 158.29513549804688 * scale);\r\n    ctx.bezierCurveTo(86 * scale, 158.29513549804688 * scale, 86 * scale, 158.29513549804688 * scale, 106 * scale, 158.29513549804688 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, \"#EDCE4F\", 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(57.999969482421875 * scale, 117.29513549804688 * scale);\r\n    ctx.bezierCurveTo(85 * scale, 128.29513549804688 * scale, 85 * scale, 128.29513549804688 * scale, 113 * scale, 139.29513549804688 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, \"#EDCE4F\", 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(95 * scale, 90.29513549804688 * scale);\r\n    ctx.bezierCurveTo(112 * scale, 105.79513549804688 * scale, 112 * scale, 105.79513549804688 * scale, 129 * scale, 121.29513549804688 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, \"#EDCE4F\", 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(116 * scale, 52.850677490234375 * scale);\r\n    ctx.bezierCurveTo(130 * scale, 83.85067749023438 * scale, 130 * scale, 83.85067749023438 * scale, 144 * scale, 114.85067749023438 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, \"#EDCE4F\", 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(159 * scale, 61.295135498046875 * scale);\r\n    ctx.bezierCurveTo(160.49996948242188 * scale, 92.29513549804688 * scale, 160.49996948242188 * scale, 92.29513549804688 * scale, 160 * scale, 123.29513549804688 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, \"#EDCE4F\", 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(203 * scale, 51.295135498046875 * scale);\r\n    ctx.bezierCurveTo(190.49996948242188 * scale, 83.29513549804688 * scale, 190.49996948242188 * scale, 83.29513549804688 * scale, 176 * scale, 115.29513549804688 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, \"#EDCE4F\", 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(225 * scale, 89.29513549804688 * scale);\r\n    ctx.bezierCurveTo(210.49996948242188 * scale, 104.79513549804688 * scale, 210.49996948242188 * scale, 104.79513549804688 * scale, 194 * scale, 120.29513549804688 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, \"#EDCE4F\", 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(266.9999694824219 * scale, 112.29513549804688 * scale);\r\n    ctx.bezierCurveTo(233.49996948242188 * scale, 127.29513549804688 * scale, 233.49996948242188 * scale, 127.29513549804688 * scale, 199 * scale, 142.29513549804688 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, \"#EDCE4F\", 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(256.9999694824219 * scale, 155.29513549804688 * scale);\r\n    ctx.bezierCurveTo(238.49996948242188 * scale, 156.29513549804688 * scale, 238.49996948242188 * scale, 156.29513549804688 * scale, 219 * scale, 157.29513549804688 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, \"#EDCE4F\", 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(94.00003051757812 * scale, 164.40341186523438 * scale);\r\n    ctx.bezierCurveTo(162.50003051757812 * scale, 164.40341186523438 * scale, 230.00003051757812 * scale, 165.40341186523438 * scale, 231.00003051757812 * scale, 164.40341186523438 * scale);\r\n    ctx.bezierCurveTo(214.00003051757812 * scale, 267.4034118652344 * scale, 92.00003051757812 * scale, 243.40341186523438 * scale, 93.00003051757812 * scale, 165.40341186523438 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, \"#704618\", \"#5D3D1A\", 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(96 * scale, 166 * scale);\r\n    ctx.bezierCurveTo(88 * scale, 117 * scale, 129 * scale, 92 * scale, 161 * scale, 91 * scale);\r\n    ctx.bezierCurveTo(201 * scale, 90 * scale, 223 * scale, 121 * scale, 230 * scale, 161 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, \"#ECBE35\", \"#EDCE4F\", 8 * scale);\r\n    circle(ctx, 160.00003051757812 * scale, 166.49432373046875 * scale, 28.30194339616981 * scale);\r\n    fill_path(ctx, \"#392C16\", \"#5E3E1A\", 10 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_clock_night(scale) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 321 * scale;\r\n    can.height = 345 * scale;\r\n    ctx.translate(0, 5 * scale);\r\n    ctx.translate(0, 20 * scale);\r\n    circle(ctx, 160.5 * scale, 159.5 * scale, 156.39595138242822 * scale);\r\n    fill_path(ctx, \"#322413\", \"#322413\", 4 * scale);\r\n    ctx.translate(0, -20 * scale);\r\n    circle(ctx, 160.5 * scale, 159.5 * scale, 156.39595138242822 * scale);\r\n    fill_path(ctx, \"#392C16\", \"#5E3E1A\", 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(31.999969482421875 * scale, 163.07290649414062 * scale);\r\n    ctx.bezierCurveTo(22.999969482421875 * scale, 67.07290649414062 * scale, 106 * scale, 20.072906494140625 * scale, 162 * scale, 23.072906494140625 * scale);\r\n    ctx.bezierCurveTo(269.9999694824219 * scale, 31.072906494140625 * scale, 292.9999694824219 * scale, 120.07290649414062 * scale, 294.9999694824219 * scale, 161.07290649414062 * scale);\r\n    ctx.bezierCurveTo(165.49996948242188 * scale, 162.07290649414062 * scale, 165.49996948242188 * scale, 162.07290649414062 * scale, 35.999969482421875 * scale, 163.07290649414062 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, \"#3A2A0D\");\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(32.999969482421875 * scale, 165.07290649414062 * scale);\r\n    ctx.bezierCurveTo(16.999969482421875 * scale, 221.07290649414062 * scale, 85 * scale, 289.0729064941406 * scale, 156 * scale, 294.0729064941406 * scale);\r\n    ctx.bezierCurveTo(263.9999694824219 * scale, 293.0729064941406 * scale, 295.9999694824219 * scale, 199.07290649414062 * scale, 294.9999694824219 * scale, 159.07290649414062 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, \"#071A1B\");\r\n    circle(ctx, 161 * scale, 158.07290649414062 * scale, 133.4053971921676 * scale);\r\n    fill_path(ctx, undefined, \"#5E3E1A\", 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(31.999969482421875 * scale, 161.62844848632812 * scale);\r\n    ctx.bezierCurveTo(162.49996948242188 * scale, 161.62844848632812 * scale, 162.49996948242188 * scale, 161.62844848632812 * scale, 292.9999694824219 * scale, 161.62844848632812 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, \"#5E3E1A\", 12 * scale);\r\n    ctx.translate(0, 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(66 * scale, 158.29513549804688 * scale);\r\n    ctx.bezierCurveTo(86 * scale, 158.29513549804688 * scale, 86 * scale, 158.29513549804688 * scale, 106 * scale, 158.29513549804688 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, \"#281C08\", 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(57.999969482421875 * scale, 117.29513549804688 * scale);\r\n    ctx.bezierCurveTo(85 * scale, 128.29513549804688 * scale, 85 * scale, 128.29513549804688 * scale, 113 * scale, 139.29513549804688 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, \"#281C08\", 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(95 * scale, 90.29513549804688 * scale);\r\n    ctx.bezierCurveTo(112 * scale, 105.79513549804688 * scale, 112 * scale, 105.79513549804688 * scale, 129 * scale, 121.29513549804688 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, \"#281C08\", 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(116 * scale, 52.850677490234375 * scale);\r\n    ctx.bezierCurveTo(130 * scale, 83.85067749023438 * scale, 130 * scale, 83.85067749023438 * scale, 144 * scale, 114.85067749023438 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, \"#281C08\", 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(159 * scale, 61.295135498046875 * scale);\r\n    ctx.bezierCurveTo(160.49996948242188 * scale, 92.29513549804688 * scale, 160.49996948242188 * scale, 92.29513549804688 * scale, 160 * scale, 123.29513549804688 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, \"#281C08\", 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(203 * scale, 51.295135498046875 * scale);\r\n    ctx.bezierCurveTo(190.49996948242188 * scale, 83.29513549804688 * scale, 190.49996948242188 * scale, 83.29513549804688 * scale, 176 * scale, 115.29513549804688 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, \"#281C08\", 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(225 * scale, 89.29513549804688 * scale);\r\n    ctx.bezierCurveTo(210.49996948242188 * scale, 104.79513549804688 * scale, 210.49996948242188 * scale, 104.79513549804688 * scale, 194 * scale, 120.29513549804688 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, \"#281C08\", 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(266.9999694824219 * scale, 112.29513549804688 * scale);\r\n    ctx.bezierCurveTo(233.49996948242188 * scale, 127.29513549804688 * scale, 233.49996948242188 * scale, 127.29513549804688 * scale, 199 * scale, 142.29513549804688 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, \"#281C08\", 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(256.9999694824219 * scale, 155.29513549804688 * scale);\r\n    ctx.bezierCurveTo(238.49996948242188 * scale, 156.29513549804688 * scale, 238.49996948242188 * scale, 156.29513549804688 * scale, 219 * scale, 157.29513549804688 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, \"#281C08\", 12 * scale);\r\n    ctx.translate(0, -8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(66 * scale, 158.29513549804688 * scale);\r\n    ctx.bezierCurveTo(86 * scale, 158.29513549804688 * scale, 86 * scale, 158.29513549804688 * scale, 106 * scale, 158.29513549804688 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, \"#5E3C10\", 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(57.999969482421875 * scale, 117.29513549804688 * scale);\r\n    ctx.bezierCurveTo(85 * scale, 128.29513549804688 * scale, 85 * scale, 128.29513549804688 * scale, 113 * scale, 139.29513549804688 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, \"#5E3C10\", 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(95 * scale, 90.29513549804688 * scale);\r\n    ctx.bezierCurveTo(112 * scale, 105.79513549804688 * scale, 112 * scale, 105.79513549804688 * scale, 129 * scale, 121.29513549804688 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, \"#5E3C10\", 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(116 * scale, 52.850677490234375 * scale);\r\n    ctx.bezierCurveTo(130 * scale, 83.85067749023438 * scale, 130 * scale, 83.85067749023438 * scale, 144 * scale, 114.85067749023438 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, \"#5E3C10\", 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(159 * scale, 61.295135498046875 * scale);\r\n    ctx.bezierCurveTo(160.49996948242188 * scale, 92.29513549804688 * scale, 160.49996948242188 * scale, 92.29513549804688 * scale, 160 * scale, 123.29513549804688 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, \"#5E3C10\", 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(203 * scale, 51.295135498046875 * scale);\r\n    ctx.bezierCurveTo(190.49996948242188 * scale, 83.29513549804688 * scale, 190.49996948242188 * scale, 83.29513549804688 * scale, 176 * scale, 115.29513549804688 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, \"#5E3C10\", 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(225 * scale, 89.29513549804688 * scale);\r\n    ctx.bezierCurveTo(210.49996948242188 * scale, 104.79513549804688 * scale, 210.49996948242188 * scale, 104.79513549804688 * scale, 194 * scale, 120.29513549804688 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, \"#5E3C10\", 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(266.9999694824219 * scale, 112.29513549804688 * scale);\r\n    ctx.bezierCurveTo(233.49996948242188 * scale, 127.29513549804688 * scale, 233.49996948242188 * scale, 127.29513549804688 * scale, 199 * scale, 142.29513549804688 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, \"#5E3C10\", 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(256.9999694824219 * scale, 155.29513549804688 * scale);\r\n    ctx.bezierCurveTo(238.49996948242188 * scale, 156.29513549804688 * scale, 238.49996948242188 * scale, 156.29513549804688 * scale, 219 * scale, 157.29513549804688 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, \"#5E3C10\", 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(96 * scale, 166 * scale);\r\n    ctx.bezierCurveTo(88 * scale, 117 * scale, 129 * scale, 92 * scale, 161 * scale, 91 * scale);\r\n    ctx.bezierCurveTo(201 * scale, 90 * scale, 223 * scale, 121 * scale, 230 * scale, 161 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, \"#704618\", \"#5D3D1A\", 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(94.00003051757812 * scale, 164.40341186523438 * scale);\r\n    ctx.bezierCurveTo(162.50003051757812 * scale, 164.40341186523438 * scale, 230.00003051757812 * scale, 165.40341186523438 * scale, 231.00003051757812 * scale, 164.40341186523438 * scale);\r\n    ctx.bezierCurveTo(214.00003051757812 * scale, 267.4034118652344 * scale, 92.00003051757812 * scale, 243.40341186523438 * scale, 93.00003051757812 * scale, 165.40341186523438 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, \"#E1DDD5\", \"#EAE7E4\", 8 * scale);\r\n    circle(ctx, 160.00003051757812 * scale, 166.49432373046875 * scale, 28.30194339616981 * scale);\r\n    fill_path(ctx, \"#392C16\", \"#5E3E1A\", 10 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_arrow_clock(scale) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 321 * scale;\r\n    can.height = 345 * scale;\r\n    ctx.translate(0, 5 * scale);\r\n    circle(ctx, 161.00003051757812 * scale, 165.40341186523438 * scale, 20.808652046684813 * scale);\r\n    fill_path(ctx, \"#C09D6F\", \"#A37943\", 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(162.00003051757812 * scale, 48.403411865234375 * scale);\r\n    ctx.bezierCurveTo(172.50003051757812 * scale, 67.40341186523438 * scale, 172.50003051757812 * scale, 67.40341186523438 * scale, 183.00003051757812 * scale, 86.40341186523438 * scale);\r\n    ctx.bezierCurveTo(160.50003051757812 * scale, 86.40341186523438 * scale, 160.50003051757812 * scale, 86.40341186523438 * scale, 138.00003051757812 * scale, 86.40341186523438 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, \"#C09D6F\", \"#A37943\", 10 * scale);\r\n    ctx.save();\r\n    ctx.translate(161.50003051757812 * scale, 117.90341186523438 * scale);\r\n    round_rect(ctx, -5.5 * scale, -37.5 * scale, 11 * scale, 75 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, \"#C09D6F\", \"#A37943\", 10 * scale);\r\n    ctx.save();\r\n    ctx.translate(162.00003051757812 * scale, 78.90341186523438 * scale);\r\n    round_rect(ctx, -10 * scale, -5.5 * scale, 20 * scale, 11 * scale, 1 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, \"#C09D6F\");\r\n    circle(ctx, 161.00003051757812 * scale, 163.6761474609375 * scale, 17.08800749063506 * scale);\r\n    fill_path(ctx, \"#C09D6F\");\r\n    return can;\r\n}\r\n;\r\nfunction create_island(scale, color, i) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    if (i == 0) {\r\n        can.width = 566 * scale;\r\n        can.height = 429 * scale;\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(312.625 * scale, 39.046875 * scale);\r\n        ctx.bezierCurveTo(456.625 * scale, 60.046875 * scale, 521.625 * scale, 134.046875 * scale, 528.625 * scale, 199.046875 * scale);\r\n        ctx.bezierCurveTo(540.625 * scale, 298.046875 * scale, 491.625 * scale, 364.046875 * scale, 405.625 * scale, 394.046875 * scale);\r\n        ctx.bezierCurveTo(270.625 * scale, 429.046875 * scale, 182.625 * scale, 395.046875 * scale, 100.625 * scale, 344.046875 * scale);\r\n        ctx.bezierCurveTo(15.625 * scale, 283.046875 * scale, 20.625 * scale, 195.046875 * scale, 33.625 * scale, 158.046875 * scale);\r\n        ctx.bezierCurveTo(56.625 * scale, 80.046875 * scale, 102.625 * scale, 46.046875 * scale, 183.625 * scale, 33.046875 * scale);\r\n        ctx.bezierCurveTo(225.625 * scale, 25.046875 * scale, 270.625 * scale, 30.046875 * scale, 312.625 * scale, 39.046875 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n    } else if (i == 1) {\r\n        var can = document.createElement(\"canvas\");\r\n        var ctx = can.getContext(\"2d\");\r\n        can.width = 511 * scale;\r\n        can.height = 408 * scale;\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(141.625 * scale, 49.296875 * scale);\r\n        ctx.bezierCurveTo(225.625 * scale, 10.296875 * scale, 320.625 * scale, 16.296875 * scale, 390.625 * scale, 39.296875 * scale);\r\n        ctx.bezierCurveTo(476.625 * scale, 71.296875 * scale, 483.625 * scale, 142.296875 * scale, 486.625 * scale, 197.296875 * scale);\r\n        ctx.bezierCurveTo(491.625 * scale, 289.296875 * scale, 462.625 * scale, 317.296875 * scale, 417.625 * scale, 351.296875 * scale);\r\n        ctx.bezierCurveTo(367.625 * scale, 385.296875 * scale, 313.625 * scale, 404.296875 * scale, 218.625 * scale, 395.296875 * scale);\r\n        ctx.bezierCurveTo(108.625 * scale, 381.296875 * scale, 81.625 * scale, 350.296875 * scale, 52.625 * scale, 305.296875 * scale);\r\n        ctx.bezierCurveTo(16.625 * scale, 244.296875 * scale, 23.625 * scale, 171.296875 * scale, 37.625 * scale, 145.296875 * scale);\r\n        ctx.bezierCurveTo(65.625 * scale, 84.296875 * scale, 97.625 * scale, 74.296875 * scale, 141.625 * scale, 49.296875 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n    } else if (i == 2) {\r\n        var can = document.createElement(\"canvas\");\r\n        var ctx = can.getContext(\"2d\");\r\n        can.width = 504 * scale;\r\n        can.height = 408 * scale;\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(153.625 * scale, 46.296875 * scale);\r\n        ctx.bezierCurveTo(271.625 * scale, 17.296875 * scale, 345.625 * scale, 35.296875 * scale, 410.625 * scale, 71.296875 * scale);\r\n        ctx.bezierCurveTo(473.625 * scale, 109.296875 * scale, 478.625 * scale, 167.296875 * scale, 473.625 * scale, 205.296875 * scale);\r\n        ctx.bezierCurveTo(462.625 * scale, 295.296875 * scale, 438.625 * scale, 316.296875 * scale, 388.625 * scale, 345.296875 * scale);\r\n        ctx.bezierCurveTo(331.625 * scale, 374.296875 * scale, 273.625 * scale, 392.296875 * scale, 180.625 * scale, 387.296875 * scale);\r\n        ctx.bezierCurveTo(111.625 * scale, 380.296875 * scale, 86.625 * scale, 360.296875 * scale, 51.625 * scale, 309.296875 * scale);\r\n        ctx.bezierCurveTo(23.625 * scale, 267.296875 * scale, 25.625 * scale, 226.296875 * scale, 27.625 * scale, 175.296875 * scale);\r\n        ctx.bezierCurveTo(37.625 * scale, 99.296875 * scale, 88.625 * scale, 57.296875 * scale, 153.625 * scale, 46.296875 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n    }\r\n    return can;\r\n}\r\n;\r\nfunction create_sign(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 450 * scale;\r\n    can.height = 260 * scale;\r\n    ctx.translate(10 * scale, 10 * scale);\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(20 * scale, 20 * scale);\r\n    round_rect(ctx, 0, 0, 400 * scale, 220 * scale, 30 * scale);\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(-20 * scale, -20 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(9 * scale, 5 * scale);\r\n    ctx.bezierCurveTo(381 * scale, 2 * scale, 197 * scale, 4.5 * scale, 385 * scale, 4 * scale);\r\n    ctx.bezierCurveTo(397 * scale, 4 * scale, 401 * scale, 4 * scale, 399 * scale, 23 * scale);\r\n    ctx.bezierCurveTo(367 * scale, 27 * scale, 367 * scale, 27 * scale, 335 * scale, 31 * scale);\r\n    ctx.bezierCurveTo(366.5 * scale, 33.5 * scale, 366.5 * scale, 33.5 * scale, 398 * scale, 36 * scale);\r\n    ctx.bezierCurveTo(398 * scale, 41.5 * scale, 398 * scale, 41.5 * scale, 398 * scale, 47 * scale);\r\n    ctx.bezierCurveTo(398 * scale, 56 * scale, 399 * scale, 56 * scale, 386 * scale, 56 * scale);\r\n    ctx.bezierCurveTo(200.5 * scale, 56.5 * scale, 200.5 * scale, 56.5 * scale, 15 * scale, 57 * scale);\r\n    ctx.bezierCurveTo(2 * scale, 55 * scale, 4 * scale, 52 * scale, 4 * scale, 43 * scale);\r\n    ctx.bezierCurveTo(4 * scale, 30.5 * scale, 4 * scale, 30.5 * scale, 4 * scale, 18 * scale);\r\n    ctx.bezierCurveTo(16 * scale, 18.5 * scale, 16 * scale, 18.5 * scale, 28 * scale, 19 * scale);\r\n    ctx.bezierCurveTo(18.5 * scale, 12 * scale, 18.5 * scale, 12 * scale, 9 * scale, 5 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2], color[1], 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(5 * scale, 70 * scale);\r\n    ctx.bezierCurveTo(5 * scale, 58 * scale, 5 * scale, 55 * scale, 17 * scale, 57 * scale);\r\n    ctx.bezierCurveTo(203 * scale, 57 * scale, 203 * scale, 57 * scale, 389 * scale, 57 * scale);\r\n    ctx.bezierCurveTo(400 * scale, 57 * scale, 400 * scale, 59 * scale, 400 * scale, 69 * scale);\r\n    ctx.bezierCurveTo(400.5 * scale, 83.5 * scale, 400.5 * scale, 83.5 * scale, 401 * scale, 98 * scale);\r\n    ctx.bezierCurveTo(402 * scale, 108 * scale, 401 * scale, 108 * scale, 388 * scale, 108 * scale);\r\n    ctx.bezierCurveTo(201.5 * scale, 108 * scale, 201.5 * scale, 108 * scale, 15 * scale, 108 * scale);\r\n    ctx.bezierCurveTo(1 * scale, 106 * scale, 5 * scale, 106 * scale, 5 * scale, 87 * scale);\r\n    ctx.bezierCurveTo(33 * scale, 84.5 * scale, 33 * scale, 84.5 * scale, 61 * scale, 82 * scale);\r\n    ctx.bezierCurveTo(33.5 * scale, 76.5 * scale, 33.5 * scale, 76.5 * scale, 6 * scale, 71 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[1], 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(19 * scale, 158 * scale);\r\n    ctx.bezierCurveTo(2 * scale, 159 * scale, 4 * scale, 156 * scale, 5 * scale, 118 * scale);\r\n    ctx.bezierCurveTo(4 * scale, 110 * scale, 6 * scale, 107 * scale, 26 * scale, 109 * scale);\r\n    ctx.bezierCurveTo(206.5 * scale, 109 * scale, 206.5 * scale, 109 * scale, 387 * scale, 109 * scale);\r\n    ctx.bezierCurveTo(400 * scale, 108 * scale, 400 * scale, 108 * scale, 398 * scale, 127 * scale);\r\n    ctx.bezierCurveTo(384.5 * scale, 130 * scale, 384.5 * scale, 130 * scale, 371 * scale, 133 * scale);\r\n    ctx.bezierCurveTo(385.5 * scale, 138 * scale, 385.5 * scale, 138 * scale, 400 * scale, 143 * scale);\r\n    ctx.bezierCurveTo(402 * scale, 156 * scale, 402 * scale, 162 * scale, 385 * scale, 160 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2], color[1], 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(4 * scale, 183 * scale);\r\n    ctx.bezierCurveTo(1 * scale, 163 * scale, 4 * scale, 158 * scale, 28 * scale, 161 * scale);\r\n    ctx.bezierCurveTo(207.5 * scale, 161 * scale, 207.5 * scale, 161 * scale, 387 * scale, 161 * scale);\r\n    ctx.bezierCurveTo(401 * scale, 159 * scale, 400 * scale, 164 * scale, 400 * scale, 177 * scale);\r\n    ctx.bezierCurveTo(364.5 * scale, 184 * scale, 364.5 * scale, 184 * scale, 329 * scale, 191 * scale);\r\n    ctx.bezierCurveTo(364.5 * scale, 192.5 * scale, 364.5 * scale, 192.5 * scale, 400 * scale, 194 * scale);\r\n    ctx.bezierCurveTo(403 * scale, 209 * scale, 401 * scale, 214 * scale, 385 * scale, 213 * scale);\r\n    ctx.bezierCurveTo(201.5 * scale, 213 * scale, 201.5 * scale, 213 * scale, 18 * scale, 213 * scale);\r\n    ctx.bezierCurveTo(3 * scale, 213 * scale, 2 * scale, 213 * scale, 4 * scale, 198 * scale);\r\n    ctx.bezierCurveTo(12.5 * scale, 193 * scale, 12.5 * scale, 193 * scale, 21 * scale, 188 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[1], 12 * scale);\r\n    circle(ctx, 41 * scale, 30 * scale, 14.7648230602334 * scale);\r\n    fill_path(ctx, color[3], color[1], 12 * scale);\r\n    circle(ctx, 369 * scale, 30 * scale, 15.556349186104045 * scale);\r\n    fill_path(ctx, color[3], color[1], 12 * scale);\r\n    circle(ctx, 364 * scale, 190 * scale, 15.620499351813308 * scale);\r\n    fill_path(ctx, color[3], color[1], 12 * scale);\r\n    circle(ctx, 41 * scale, 186 * scale, 15.556349186104045 * scale);\r\n    fill_path(ctx, color[3], color[1], 12 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_sign_button(scale, color, i) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 450 * scale;\r\n    can.height = 260 * scale;\r\n    ctx.translate(10 * scale, 10 * scale);\r\n    if (i == 1) {\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(9 * scale, 5 * scale);\r\n        ctx.bezierCurveTo(381 * scale, 2 * scale, 197 * scale, 4.5 * scale, 385 * scale, 4 * scale);\r\n        ctx.bezierCurveTo(397 * scale, 4 * scale, 401 * scale, 4 * scale, 399 * scale, 23 * scale);\r\n        ctx.bezierCurveTo(367 * scale, 27 * scale, 367 * scale, 27 * scale, 335 * scale, 31 * scale);\r\n        ctx.bezierCurveTo(366.5 * scale, 33.5 * scale, 366.5 * scale, 33.5 * scale, 398 * scale, 36 * scale);\r\n        ctx.bezierCurveTo(398 * scale, 41.5 * scale, 398 * scale, 41.5 * scale, 398 * scale, 47 * scale);\r\n        ctx.bezierCurveTo(398 * scale, 56 * scale, 399 * scale, 56 * scale, 386 * scale, 56 * scale);\r\n        ctx.bezierCurveTo(200.5 * scale, 56.5 * scale, 200.5 * scale, 56.5 * scale, 15 * scale, 57 * scale);\r\n        ctx.bezierCurveTo(2 * scale, 55 * scale, 4 * scale, 52 * scale, 4 * scale, 43 * scale);\r\n        ctx.bezierCurveTo(4 * scale, 30.5 * scale, 4 * scale, 30.5 * scale, 4 * scale, 18 * scale);\r\n        ctx.bezierCurveTo(16 * scale, 18.5 * scale, 16 * scale, 18.5 * scale, 28 * scale, 19 * scale);\r\n        ctx.bezierCurveTo(18.5 * scale, 12 * scale, 18.5 * scale, 12 * scale, 9 * scale, 5 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[3], color[3], 32 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(5 * scale, 70 * scale);\r\n        ctx.bezierCurveTo(5 * scale, 58 * scale, 5 * scale, 55 * scale, 17 * scale, 57 * scale);\r\n        ctx.bezierCurveTo(203 * scale, 57 * scale, 203 * scale, 57 * scale, 389 * scale, 57 * scale);\r\n        ctx.bezierCurveTo(400 * scale, 57 * scale, 400 * scale, 59 * scale, 400 * scale, 69 * scale);\r\n        ctx.bezierCurveTo(400.5 * scale, 83.5 * scale, 400.5 * scale, 83.5 * scale, 401 * scale, 98 * scale);\r\n        ctx.bezierCurveTo(402 * scale, 108 * scale, 401 * scale, 108 * scale, 388 * scale, 108 * scale);\r\n        ctx.bezierCurveTo(201.5 * scale, 108 * scale, 201.5 * scale, 108 * scale, 15 * scale, 108 * scale);\r\n        ctx.bezierCurveTo(1 * scale, 106 * scale, 5 * scale, 106 * scale, 5 * scale, 87 * scale);\r\n        ctx.bezierCurveTo(33 * scale, 84.5 * scale, 33 * scale, 84.5 * scale, 61 * scale, 82 * scale);\r\n        ctx.bezierCurveTo(33.5 * scale, 76.5 * scale, 33.5 * scale, 76.5 * scale, 6 * scale, 71 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[3], color[3], 32 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(19 * scale, 158 * scale);\r\n        ctx.bezierCurveTo(2 * scale, 159 * scale, 4 * scale, 156 * scale, 5 * scale, 118 * scale);\r\n        ctx.bezierCurveTo(4 * scale, 110 * scale, 6 * scale, 107 * scale, 26 * scale, 109 * scale);\r\n        ctx.bezierCurveTo(206.5 * scale, 109 * scale, 206.5 * scale, 109 * scale, 387 * scale, 109 * scale);\r\n        ctx.bezierCurveTo(400 * scale, 108 * scale, 400 * scale, 108 * scale, 398 * scale, 127 * scale);\r\n        ctx.bezierCurveTo(384.5 * scale, 130 * scale, 384.5 * scale, 130 * scale, 371 * scale, 133 * scale);\r\n        ctx.bezierCurveTo(385.5 * scale, 138 * scale, 385.5 * scale, 138 * scale, 400 * scale, 143 * scale);\r\n        ctx.bezierCurveTo(402 * scale, 156 * scale, 402 * scale, 162 * scale, 385 * scale, 160 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[3], color[3], 32 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(4 * scale, 183 * scale);\r\n        ctx.bezierCurveTo(1 * scale, 163 * scale, 4 * scale, 158 * scale, 28 * scale, 161 * scale);\r\n        ctx.bezierCurveTo(207.5 * scale, 161 * scale, 207.5 * scale, 161 * scale, 387 * scale, 161 * scale);\r\n        ctx.bezierCurveTo(401 * scale, 159 * scale, 400 * scale, 164 * scale, 400 * scale, 177 * scale);\r\n        ctx.bezierCurveTo(364.5 * scale, 184 * scale, 364.5 * scale, 184 * scale, 329 * scale, 191 * scale);\r\n        ctx.bezierCurveTo(364.5 * scale, 192.5 * scale, 364.5 * scale, 192.5 * scale, 400 * scale, 194 * scale);\r\n        ctx.bezierCurveTo(403 * scale, 209 * scale, 401 * scale, 214 * scale, 385 * scale, 213 * scale);\r\n        ctx.bezierCurveTo(201.5 * scale, 213 * scale, 201.5 * scale, 213 * scale, 18 * scale, 213 * scale);\r\n        ctx.bezierCurveTo(3 * scale, 213 * scale, 2 * scale, 213 * scale, 4 * scale, 198 * scale);\r\n        ctx.bezierCurveTo(12.5 * scale, 193 * scale, 12.5 * scale, 193 * scale, 21 * scale, 188 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[3], color[3], 32 * scale);\r\n        circle(ctx, 41 * scale, 30 * scale, 14.7648230602334 * scale);\r\n        fill_path(ctx, color[3], color[3], 32 * scale);\r\n        circle(ctx, 369 * scale, 30 * scale, 15.556349186104045 * scale);\r\n        fill_path(ctx, color[3], color[3], 32 * scale);\r\n        circle(ctx, 364 * scale, 190 * scale, 15.620499351813308 * scale);\r\n        fill_path(ctx, color[3], color[3], 32 * scale);\r\n        circle(ctx, 41 * scale, 186 * scale, 15.556349186104045 * scale);\r\n        fill_path(ctx, color[3], color[3], 32 * scale);\r\n    } else if (i == 2) {\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(9 * scale, 5 * scale);\r\n        ctx.bezierCurveTo(381 * scale, 2 * scale, 197 * scale, 4.5 * scale, 385 * scale, 4 * scale);\r\n        ctx.bezierCurveTo(397 * scale, 4 * scale, 401 * scale, 4 * scale, 399 * scale, 23 * scale);\r\n        ctx.bezierCurveTo(367 * scale, 27 * scale, 367 * scale, 27 * scale, 335 * scale, 31 * scale);\r\n        ctx.bezierCurveTo(366.5 * scale, 33.5 * scale, 366.5 * scale, 33.5 * scale, 398 * scale, 36 * scale);\r\n        ctx.bezierCurveTo(398 * scale, 41.5 * scale, 398 * scale, 41.5 * scale, 398 * scale, 47 * scale);\r\n        ctx.bezierCurveTo(398 * scale, 56 * scale, 399 * scale, 56 * scale, 386 * scale, 56 * scale);\r\n        ctx.bezierCurveTo(200.5 * scale, 56.5 * scale, 200.5 * scale, 56.5 * scale, 15 * scale, 57 * scale);\r\n        ctx.bezierCurveTo(2 * scale, 55 * scale, 4 * scale, 52 * scale, 4 * scale, 43 * scale);\r\n        ctx.bezierCurveTo(4 * scale, 30.5 * scale, 4 * scale, 30.5 * scale, 4 * scale, 18 * scale);\r\n        ctx.bezierCurveTo(16 * scale, 18.5 * scale, 16 * scale, 18.5 * scale, 28 * scale, 19 * scale);\r\n        ctx.bezierCurveTo(18.5 * scale, 12 * scale, 18.5 * scale, 12 * scale, 9 * scale, 5 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[3], color[3], 32 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(5 * scale, 70 * scale);\r\n        ctx.bezierCurveTo(5 * scale, 58 * scale, 5 * scale, 55 * scale, 17 * scale, 57 * scale);\r\n        ctx.bezierCurveTo(203 * scale, 57 * scale, 203 * scale, 57 * scale, 389 * scale, 57 * scale);\r\n        ctx.bezierCurveTo(400 * scale, 57 * scale, 400 * scale, 59 * scale, 400 * scale, 69 * scale);\r\n        ctx.bezierCurveTo(400.5 * scale, 83.5 * scale, 400.5 * scale, 83.5 * scale, 401 * scale, 98 * scale);\r\n        ctx.bezierCurveTo(402 * scale, 108 * scale, 401 * scale, 108 * scale, 388 * scale, 108 * scale);\r\n        ctx.bezierCurveTo(201.5 * scale, 108 * scale, 201.5 * scale, 108 * scale, 15 * scale, 108 * scale);\r\n        ctx.bezierCurveTo(1 * scale, 106 * scale, 5 * scale, 106 * scale, 5 * scale, 87 * scale);\r\n        ctx.bezierCurveTo(33 * scale, 84.5 * scale, 33 * scale, 84.5 * scale, 61 * scale, 82 * scale);\r\n        ctx.bezierCurveTo(33.5 * scale, 76.5 * scale, 33.5 * scale, 76.5 * scale, 6 * scale, 71 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[3], color[3], 32 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(19 * scale, 158 * scale);\r\n        ctx.bezierCurveTo(2 * scale, 159 * scale, 4 * scale, 156 * scale, 5 * scale, 118 * scale);\r\n        ctx.bezierCurveTo(4 * scale, 110 * scale, 6 * scale, 107 * scale, 26 * scale, 109 * scale);\r\n        ctx.bezierCurveTo(206.5 * scale, 109 * scale, 206.5 * scale, 109 * scale, 387 * scale, 109 * scale);\r\n        ctx.bezierCurveTo(400 * scale, 108 * scale, 400 * scale, 108 * scale, 398 * scale, 127 * scale);\r\n        ctx.bezierCurveTo(384.5 * scale, 130 * scale, 384.5 * scale, 130 * scale, 371 * scale, 133 * scale);\r\n        ctx.bezierCurveTo(385.5 * scale, 138 * scale, 385.5 * scale, 138 * scale, 400 * scale, 143 * scale);\r\n        ctx.bezierCurveTo(402 * scale, 156 * scale, 402 * scale, 162 * scale, 385 * scale, 160 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[3], color[3], 32 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(4 * scale, 183 * scale);\r\n        ctx.bezierCurveTo(1 * scale, 163 * scale, 4 * scale, 158 * scale, 28 * scale, 161 * scale);\r\n        ctx.bezierCurveTo(207.5 * scale, 161 * scale, 207.5 * scale, 161 * scale, 387 * scale, 161 * scale);\r\n        ctx.bezierCurveTo(401 * scale, 159 * scale, 400 * scale, 164 * scale, 400 * scale, 177 * scale);\r\n        ctx.bezierCurveTo(364.5 * scale, 184 * scale, 364.5 * scale, 184 * scale, 329 * scale, 191 * scale);\r\n        ctx.bezierCurveTo(364.5 * scale, 192.5 * scale, 364.5 * scale, 192.5 * scale, 400 * scale, 194 * scale);\r\n        ctx.bezierCurveTo(403 * scale, 209 * scale, 401 * scale, 214 * scale, 385 * scale, 213 * scale);\r\n        ctx.bezierCurveTo(201.5 * scale, 213 * scale, 201.5 * scale, 213 * scale, 18 * scale, 213 * scale);\r\n        ctx.bezierCurveTo(3 * scale, 213 * scale, 2 * scale, 213 * scale, 4 * scale, 198 * scale);\r\n        ctx.bezierCurveTo(12.5 * scale, 193 * scale, 12.5 * scale, 193 * scale, 21 * scale, 188 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[3], color[3], 32 * scale);\r\n        circle(ctx, 41 * scale, 30 * scale, 14.7648230602334 * scale);\r\n        fill_path(ctx, color[3], color[3], 32 * scale);\r\n        circle(ctx, 369 * scale, 30 * scale, 15.556349186104045 * scale);\r\n        fill_path(ctx, color[3], color[3], 32 * scale);\r\n        circle(ctx, 364 * scale, 190 * scale, 15.620499351813308 * scale);\r\n        fill_path(ctx, color[3], color[3], 32 * scale);\r\n        circle(ctx, 41 * scale, 186 * scale, 15.556349186104045 * scale);\r\n        fill_path(ctx, color[3], color[3], 32 * scale);\r\n    }\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(9 * scale, 5 * scale);\r\n    ctx.bezierCurveTo(381 * scale, 2 * scale, 197 * scale, 4.5 * scale, 385 * scale, 4 * scale);\r\n    ctx.bezierCurveTo(397 * scale, 4 * scale, 401 * scale, 4 * scale, 399 * scale, 23 * scale);\r\n    ctx.bezierCurveTo(367 * scale, 27 * scale, 367 * scale, 27 * scale, 335 * scale, 31 * scale);\r\n    ctx.bezierCurveTo(366.5 * scale, 33.5 * scale, 366.5 * scale, 33.5 * scale, 398 * scale, 36 * scale);\r\n    ctx.bezierCurveTo(398 * scale, 41.5 * scale, 398 * scale, 41.5 * scale, 398 * scale, 47 * scale);\r\n    ctx.bezierCurveTo(398 * scale, 56 * scale, 399 * scale, 56 * scale, 386 * scale, 56 * scale);\r\n    ctx.bezierCurveTo(200.5 * scale, 56.5 * scale, 200.5 * scale, 56.5 * scale, 15 * scale, 57 * scale);\r\n    ctx.bezierCurveTo(2 * scale, 55 * scale, 4 * scale, 52 * scale, 4 * scale, 43 * scale);\r\n    ctx.bezierCurveTo(4 * scale, 30.5 * scale, 4 * scale, 30.5 * scale, 4 * scale, 18 * scale);\r\n    ctx.bezierCurveTo(16 * scale, 18.5 * scale, 16 * scale, 18.5 * scale, 28 * scale, 19 * scale);\r\n    ctx.bezierCurveTo(18.5 * scale, 12 * scale, 18.5 * scale, 12 * scale, 9 * scale, 5 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[0], 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(5 * scale, 70 * scale);\r\n    ctx.bezierCurveTo(5 * scale, 58 * scale, 5 * scale, 55 * scale, 17 * scale, 57 * scale);\r\n    ctx.bezierCurveTo(203 * scale, 57 * scale, 203 * scale, 57 * scale, 389 * scale, 57 * scale);\r\n    ctx.bezierCurveTo(400 * scale, 57 * scale, 400 * scale, 59 * scale, 400 * scale, 69 * scale);\r\n    ctx.bezierCurveTo(400.5 * scale, 83.5 * scale, 400.5 * scale, 83.5 * scale, 401 * scale, 98 * scale);\r\n    ctx.bezierCurveTo(402 * scale, 108 * scale, 401 * scale, 108 * scale, 388 * scale, 108 * scale);\r\n    ctx.bezierCurveTo(201.5 * scale, 108 * scale, 201.5 * scale, 108 * scale, 15 * scale, 108 * scale);\r\n    ctx.bezierCurveTo(1 * scale, 106 * scale, 5 * scale, 106 * scale, 5 * scale, 87 * scale);\r\n    ctx.bezierCurveTo(33 * scale, 84.5 * scale, 33 * scale, 84.5 * scale, 61 * scale, 82 * scale);\r\n    ctx.bezierCurveTo(33.5 * scale, 76.5 * scale, 33.5 * scale, 76.5 * scale, 6 * scale, 71 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2], color[0], 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(19 * scale, 158 * scale);\r\n    ctx.bezierCurveTo(2 * scale, 159 * scale, 4 * scale, 156 * scale, 5 * scale, 118 * scale);\r\n    ctx.bezierCurveTo(4 * scale, 110 * scale, 6 * scale, 107 * scale, 26 * scale, 109 * scale);\r\n    ctx.bezierCurveTo(206.5 * scale, 109 * scale, 206.5 * scale, 109 * scale, 387 * scale, 109 * scale);\r\n    ctx.bezierCurveTo(400 * scale, 108 * scale, 400 * scale, 108 * scale, 398 * scale, 127 * scale);\r\n    ctx.bezierCurveTo(384.5 * scale, 130 * scale, 384.5 * scale, 130 * scale, 371 * scale, 133 * scale);\r\n    ctx.bezierCurveTo(385.5 * scale, 138 * scale, 385.5 * scale, 138 * scale, 400 * scale, 143 * scale);\r\n    ctx.bezierCurveTo(402 * scale, 156 * scale, 402 * scale, 162 * scale, 385 * scale, 160 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[0], 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(4 * scale, 183 * scale);\r\n    ctx.bezierCurveTo(1 * scale, 163 * scale, 4 * scale, 158 * scale, 28 * scale, 161 * scale);\r\n    ctx.bezierCurveTo(207.5 * scale, 161 * scale, 207.5 * scale, 161 * scale, 387 * scale, 161 * scale);\r\n    ctx.bezierCurveTo(401 * scale, 159 * scale, 400 * scale, 164 * scale, 400 * scale, 177 * scale);\r\n    ctx.bezierCurveTo(364.5 * scale, 184 * scale, 364.5 * scale, 184 * scale, 329 * scale, 191 * scale);\r\n    ctx.bezierCurveTo(364.5 * scale, 192.5 * scale, 364.5 * scale, 192.5 * scale, 400 * scale, 194 * scale);\r\n    ctx.bezierCurveTo(403 * scale, 209 * scale, 401 * scale, 214 * scale, 385 * scale, 213 * scale);\r\n    ctx.bezierCurveTo(201.5 * scale, 213 * scale, 201.5 * scale, 213 * scale, 18 * scale, 213 * scale);\r\n    ctx.bezierCurveTo(3 * scale, 213 * scale, 2 * scale, 213 * scale, 4 * scale, 198 * scale);\r\n    ctx.bezierCurveTo(12.5 * scale, 193 * scale, 12.5 * scale, 193 * scale, 21 * scale, 188 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2], color[0], 12 * scale);\r\n    circle(ctx, 41 * scale, 30 * scale, 14.7648230602334 * scale);\r\n    fill_path(ctx, color[2], color[0], 12 * scale);\r\n    circle(ctx, 369 * scale, 30 * scale, 15.556349186104045 * scale);\r\n    fill_path(ctx, color[2], color[0], 12 * scale);\r\n    circle(ctx, 364 * scale, 190 * scale, 15.620499351813308 * scale);\r\n    fill_path(ctx, color[2], color[0], 12 * scale);\r\n    circle(ctx, 41 * scale, 186 * scale, 15.556349186104045 * scale);\r\n    fill_path(ctx, color[2], color[0], 12 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_symbols(scale, draw_shadow, color, i) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 450 * scale;\r\n    can.height = 260 * scale;\r\n    var img = create_sign(1 * scale, true, color);\r\n    ctx.drawImage(img, 0 * scale, 0 * scale);\r\n    if (i == 1) {\r\n        ctx.translate(100 * scale, 0 * scale);\r\n        circle(ctx, 113 * scale, 120 * scale, 66 * scale);\r\n        fill_path(ctx, undefined, color[4], 13 * scale);\r\n        var img = create_sword(0.65 * scale, true, [\"#0d1b1c\", \"#4d2d14\", \"#432516\", \"#939393\", \"#5f6061\"]);\r\n        ctx.rotate(0.7);\r\n        ctx.drawImage(img, 133 * scale, -64 * scale);\r\n        ctx.rotate(-0.7);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(70 * scale, 70 * scale);\r\n        ctx.bezierCurveTo(113 * scale, 120.5 * scale, 113 * scale, 120.5 * scale, 156 * scale, 171 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, undefined, color[4], 13 * scale);\r\n    } else if (i == 2) {\r\n        ctx.translate(100 * scale, 0 * scale);\r\n        circle(ctx, 113 * scale, 120 * scale, 66 * scale);\r\n        fill_path(ctx, undefined, color[4], 13 * scale);\r\n        ctx.translate(30 * scale, 40 * scale);\r\n        ctx.save();\r\n        ctx.translate(83.5 * scale, 66.5 * scale);\r\n        round_rect(ctx, -40.5 * scale, -29.5 * scale, 81 * scale, 59 * scale, 15 * scale);\r\n        ctx.restore();\r\n        fill_path(ctx, \"#dff2f7\", \"#187484\", 7 * scale);\r\n        circle(ctx, 22 * scale, 82 * scale, 12 * scale);\r\n        fill_path(ctx, \"#dff2f7\", \"#187484\", 7 * scale);\r\n        circle(ctx, 145 * scale, 82 * scale, 12 * scale);\r\n        fill_path(ctx, \"#dff2f7\", \"#187484\", 7 * scale);\r\n        var img = create_plant(0.5 * scale, true, [\"#80500b\", \"#7c4908\"]);\r\n        ctx.drawImage(img, 10 * scale, 85 * scale);\r\n        var img = create_plant(0.5 * scale, true, [\"#80500b\", \"#7c4908\"]);\r\n        ctx.drawImage(img, 50 * scale, 85 * scale);\r\n        var img = create_plant(0.5 * scale, true, [\"#80500b\", \"#7c4908\"]);\r\n        ctx.drawImage(img, 90 * scale, 85 * scale);\r\n        var img = create_fruit(1 * scale, true, [\"#3d2a6e\", \"#8255b5\"]);\r\n        ctx.drawImage(img, 90 * scale, 105 * scale);\r\n        var img = create_fruit(1 * scale, true, [\"#3d2a6e\", \"#8255b5\"]);\r\n        ctx.drawImage(img, 90 * scale, 105 * scale);\r\n        var img = create_fruit(1 * scale, true, [\"#3d2a6e\", \"#8255b5\"]);\r\n        ctx.drawImage(img, 30 * scale, 125 * scale);\r\n        var img = create_fruit(1 * scale, true, [\"#3d2a6e\", \"#8255b5\"]);\r\n        ctx.drawImage(img, 50 * scale, 115 * scale);\r\n        var img = create_fruit(1 * scale, true, [\"#3d2a6e\", \"#8255b5\"]);\r\n        ctx.drawImage(img, 30 * scale, 100 * scale);\r\n        var img = create_fruit(1 * scale, true, [\"#3d2a6e\", \"#8255b5\"]);\r\n        ctx.drawImage(img, 80 * scale, 120 * scale);\r\n        var img = create_fruit(1 * scale, true, [\"#3d2a6e\", \"#8255b5\"]);\r\n        ctx.drawImage(img, 110 * scale, 125 * scale);\r\n        var img = create_fruit(1 * scale, true, [\"#3d2a6e\", \"#8255b5\"]);\r\n        ctx.drawImage(img, 120 * scale, 105 * scale);\r\n    } else if (i == 3) {\r\n        ctx.translate(100 * scale, 0 * scale);\r\n        circle(ctx, 113 * scale, 120 * scale, 66 * scale);\r\n        fill_path(ctx, undefined, color[4], 13 * scale);\r\n        ctx.translate(40 * scale, 50 * scale);\r\n        ctx.save();\r\n        ctx.translate(71 * scale, 69 * scale);\r\n        round_rect(ctx, -30 * scale, -42 * scale, 60 * scale, 84 * scale, 10 * scale);\r\n        ctx.restore();\r\n        fill_path(ctx, undefined, color[5], 4 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(42 * scale, 28 * scale);\r\n        ctx.bezierCurveTo(60 * scale, 31 * scale, 60 * scale, 31 * scale, 78 * scale, 34 * scale);\r\n        ctx.bezierCurveTo(82 * scale, 34 * scale, 84 * scale, 37 * scale, 83 * scale, 45 * scale);\r\n        ctx.bezierCurveTo(83 * scale, 80 * scale, 83 * scale, 80 * scale, 83 * scale, 115 * scale);\r\n        ctx.bezierCurveTo(83 * scale, 120 * scale, 80 * scale, 122 * scale, 73 * scale, 120 * scale);\r\n        ctx.bezierCurveTo(42 * scale, 111 * scale, 43 * scale, 109 * scale, 41 * scale, 102 * scale);\r\n        ctx.bezierCurveTo(41 * scale, 71 * scale, 41 * scale, 71 * scale, 41 * scale, 40 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[5], color[5], 4 * scale);\r\n        ctx.translate(-40 * scale, -50 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(70 * scale, 70 * scale);\r\n        ctx.bezierCurveTo(113 * scale, 120.5 * scale, 113 * scale, 120.5 * scale, 156 * scale, 171 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, undefined, color[4], 13 * scale);\r\n    } else if (i == 4) {\r\n        ctx.scale(1, 1);\r\n        ctx.translate(70 * scale, 50 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(23 * scale, 6 * scale);\r\n        ctx.bezierCurveTo(25.5 * scale, 56 * scale, 25.5 * scale, 56 * scale, 28 * scale, 106 * scale);\r\n        fill_path(ctx, undefined, color[5], 14 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(59 * scale, 10 * scale);\r\n        ctx.bezierCurveTo(61 * scale, 51.5 * scale, 61 * scale, 51.5 * scale, 63 * scale, 93 * scale);\r\n        fill_path(ctx, undefined, color[5], 14 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(7 * scale, 55 * scale);\r\n        ctx.bezierCurveTo(33.5 * scale, 55 * scale, 33.5 * scale, 55 * scale, 60 * scale, 55 * scale);\r\n        fill_path(ctx, undefined, color[5], 14 * scale);\r\n        ctx.translate(10 * scale, 0 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(123 * scale, 16 * scale);\r\n        ctx.bezierCurveTo(103 * scale, 16.5 * scale, 103 * scale, 16.5 * scale, 83 * scale, 17 * scale);\r\n        ctx.bezierCurveTo(83.5 * scale, 61 * scale, 83.5 * scale, 61 * scale, 84 * scale, 105 * scale);\r\n        ctx.bezierCurveTo(106 * scale, 105 * scale, 106 * scale, 105 * scale, 128 * scale, 105 * scale);\r\n        fill_path(ctx, undefined, color[5], 14 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(72 * scale, 63 * scale);\r\n        ctx.bezierCurveTo(88.5 * scale, 62.5 * scale, 88.5 * scale, 62.5 * scale, 105 * scale, 62 * scale);\r\n        fill_path(ctx, undefined, color[5], 14 * scale);\r\n        ctx.translate(10 * scale, 10 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(141 * scale, 8 * scale);\r\n        ctx.bezierCurveTo(143 * scale, 50 * scale, 143 * scale, 50 * scale, 145 * scale, 92 * scale);\r\n        ctx.bezierCurveTo(169 * scale, 88.5 * scale, 169 * scale, 88.5 * scale, 193 * scale, 85 * scale);\r\n        fill_path(ctx, undefined, color[5], 14 * scale);\r\n        ctx.translate(10 * scale, -10 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(205 * scale, 124 * scale);\r\n        ctx.bezierCurveTo(205 * scale, 69 * scale, 205 * scale, 69 * scale, 205 * scale, 14 * scale);\r\n        ctx.bezierCurveTo(239 * scale, 15 * scale, 250 * scale, 37 * scale, 249 * scale, 49 * scale);\r\n        ctx.bezierCurveTo(251 * scale, 65 * scale, 242 * scale, 76 * scale, 206 * scale, 75 * scale);\r\n        fill_path(ctx, undefined, color[5], 14 * scale);\r\n    }\r\n    return can;\r\n}\r\n;\r\nfunction create_dragon_helmet(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 345 * scale;\r\n    can.height = 250 * scale;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(105 * scale, 58 * scale);\r\n    ctx.bezierCurveTo(100.5 * scale, 43 * scale, 100.5 * scale, 43 * scale, 96 * scale, 28 * scale);\r\n    ctx.bezierCurveTo(119.5 * scale, 33.5 * scale, 119.5 * scale, 33.5 * scale, 143 * scale, 39 * scale);\r\n    ctx.bezierCurveTo(170 * scale, 37 * scale, 177 * scale, 37 * scale, 188 * scale, 40 * scale);\r\n    ctx.bezierCurveTo(213 * scale, 33.5 * scale, 213 * scale, 33.5 * scale, 238 * scale, 27 * scale);\r\n    ctx.bezierCurveTo(231 * scale, 52 * scale, 234 * scale, 42.5 * scale, 230 * scale, 58 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(108 * scale, 51 * scale);\r\n    ctx.bezierCurveTo(91 * scale, 55 * scale, 85 * scale, 44 * scale, 86 * scale, 29 * scale);\r\n    ctx.bezierCurveTo(62 * scale, 50 * scale, 78 * scale, 69 * scale, 92 * scale, 75 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[4], 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(249 * scale, 27 * scale);\r\n    ctx.bezierCurveTo(273 * scale, 49 * scale, 262 * scale, 68 * scale, 246 * scale, 77 * scale);\r\n    ctx.bezierCurveTo(231 * scale, 59 * scale, 236 * scale, 66.5 * scale, 226 * scale, 56 * scale);\r\n    ctx.bezierCurveTo(243 * scale, 53 * scale, 252 * scale, 43 * scale, 249 * scale, 28 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[4], 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(87 * scale, 78 * scale);\r\n    ctx.bezierCurveTo(87 * scale, 59 * scale, 98 * scale, 46 * scale, 127 * scale, 48 * scale);\r\n    ctx.bezierCurveTo(176 * scale, 48.5 * scale, 176 * scale, 48.5 * scale, 225 * scale, 49 * scale);\r\n    ctx.bezierCurveTo(243 * scale, 49 * scale, 253 * scale, 59 * scale, 253 * scale, 76 * scale);\r\n    ctx.bezierCurveTo(211 * scale, 85.5 * scale, 211 * scale, 85.5 * scale, 169 * scale, 95 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[5], color[6], 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(56 * scale, 105 * scale);\r\n    ctx.bezierCurveTo(56 * scale, 92 * scale, 59 * scale, 86 * scale, 65 * scale, 73 * scale);\r\n    ctx.bezierCurveTo(62.5 * scale, 61.5 * scale, 62.5 * scale, 61.5 * scale, 60 * scale, 50 * scale);\r\n    ctx.bezierCurveTo(99.5 * scale, 64.5 * scale, 99.5 * scale, 64.5 * scale, 139 * scale, 79 * scale);\r\n    ctx.bezierCurveTo(164 * scale, 77 * scale, 177 * scale, 76 * scale, 203 * scale, 78 * scale);\r\n    ctx.bezierCurveTo(242 * scale, 63.5 * scale, 242 * scale, 63.5 * scale, 281 * scale, 49 * scale);\r\n    ctx.bezierCurveTo(279 * scale, 60.5 * scale, 279 * scale, 60.5 * scale, 277 * scale, 72 * scale);\r\n    ctx.bezierCurveTo(286 * scale, 88 * scale, 286 * scale, 96 * scale, 287 * scale, 104 * scale);\r\n    ctx.bezierCurveTo(228.5 * scale, 127 * scale, 228.5 * scale, 127 * scale, 170 * scale, 150 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(48 * scale, 130 * scale);\r\n    ctx.bezierCurveTo(61 * scale, 155 * scale, 63 * scale, 165 * scale, 56 * scale, 171 * scale);\r\n    ctx.bezierCurveTo(48 * scale, 177 * scale, 40 * scale, 171 * scale, 38 * scale, 178 * scale);\r\n    ctx.bezierCurveTo(33 * scale, 180 * scale, 37 * scale, 188 * scale, 47 * scale, 208 * scale);\r\n    ctx.bezierCurveTo(52 * scale, 221 * scale, 55 * scale, 222 * scale, 75 * scale, 229 * scale);\r\n    ctx.bezierCurveTo(91 * scale, 213 * scale, 98 * scale, 212 * scale, 112 * scale, 219 * scale);\r\n    ctx.bezierCurveTo(167 * scale, 225 * scale, 187 * scale, 224 * scale, 222 * scale, 220 * scale);\r\n    ctx.bezierCurveTo(244 * scale, 214 * scale, 247 * scale, 213 * scale, 263 * scale, 229 * scale);\r\n    ctx.bezierCurveTo(295 * scale, 220 * scale, 291 * scale, 215 * scale, 301 * scale, 194 * scale);\r\n    ctx.bezierCurveTo(308 * scale, 178 * scale, 309 * scale, 176 * scale, 302 * scale, 173 * scale);\r\n    ctx.bezierCurveTo(290 * scale, 177 * scale, 289 * scale, 177 * scale, 283 * scale, 169 * scale);\r\n    ctx.bezierCurveTo(279 * scale, 163 * scale, 279 * scale, 161 * scale, 290 * scale, 130 * scale);\r\n    ctx.bezierCurveTo(270 * scale, 127 * scale, 270 * scale, 127 * scale, 250 * scale, 124 * scale);\r\n    ctx.bezierCurveTo(209 * scale, 137.5 * scale, 209 * scale, 137.5 * scale, 168 * scale, 151 * scale);\r\n    ctx.bezierCurveTo(121 * scale, 135 * scale, 121 * scale, 135 * scale, 74 * scale, 119 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 8 * scale);\r\n    ctx.globalCompositeOperation = \"destination-out\";\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(133 * scale, 158 * scale);\r\n    ctx.bezierCurveTo(152 * scale, 193 * scale, 158 * scale, 205 * scale, 140 * scale, 203 * scale);\r\n    ctx.bezierCurveTo(99 * scale, 195 * scale, 96 * scale, 189 * scale, 86 * scale, 173 * scale);\r\n    ctx.bezierCurveTo(80 * scale, 159 * scale, 88 * scale, 145 * scale, 104 * scale, 141 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[7], color[8], 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(215 * scale, 146 * scale);\r\n    ctx.bezierCurveTo(204 * scale, 167 * scale, 204 * scale, 167 * scale, 193 * scale, 188 * scale);\r\n    ctx.bezierCurveTo(187 * scale, 201 * scale, 191 * scale, 209 * scale, 213 * scale, 201 * scale);\r\n    ctx.bezierCurveTo(247 * scale, 192 * scale, 253 * scale, 181 * scale, 257 * scale, 169 * scale);\r\n    ctx.bezierCurveTo(260 * scale, 157 * scale, 254 * scale, 149 * scale, 243 * scale, 141 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[7], color[8], 8 * scale);\r\n    ctx.globalCompositeOperation = \"source-over\";\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(133 * scale, 158 * scale);\r\n    ctx.bezierCurveTo(152 * scale, 193 * scale, 158 * scale, 205 * scale, 140 * scale, 203 * scale);\r\n    ctx.bezierCurveTo(99 * scale, 195 * scale, 96 * scale, 189 * scale, 86 * scale, 173 * scale);\r\n    ctx.bezierCurveTo(80 * scale, 159 * scale, 88 * scale, 145 * scale, 104 * scale, 141 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[8], 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(215 * scale, 146 * scale);\r\n    ctx.bezierCurveTo(204 * scale, 167 * scale, 204 * scale, 167 * scale, 193 * scale, 188 * scale);\r\n    ctx.bezierCurveTo(187 * scale, 201 * scale, 191 * scale, 209 * scale, 213 * scale, 201 * scale);\r\n    ctx.bezierCurveTo(247 * scale, 192 * scale, 253 * scale, 181 * scale, 257 * scale, 169 * scale);\r\n    ctx.bezierCurveTo(260 * scale, 157 * scale, 254 * scale, 149 * scale, 243 * scale, 141 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[8], 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(39 * scale, 66 * scale);\r\n    ctx.bezierCurveTo(57 * scale, 107 * scale, 63 * scale, 96 * scale, 120 * scale, 106 * scale);\r\n    ctx.bezierCurveTo(154 * scale, 112 * scale, 163 * scale, 116 * scale, 174 * scale, 135 * scale);\r\n    ctx.bezierCurveTo(180 * scale, 109 * scale, 191 * scale, 113 * scale, 237 * scale, 103 * scale);\r\n    ctx.bezierCurveTo(276 * scale, 100 * scale, 289 * scale, 94 * scale, 301 * scale, 67 * scale);\r\n    ctx.bezierCurveTo(317 * scale, 112 * scale, 301 * scale, 141 * scale, 274 * scale, 139 * scale);\r\n    ctx.bezierCurveTo(204 * scale, 166 * scale, 197 * scale, 169 * scale, 173 * scale, 183 * scale);\r\n    ctx.bezierCurveTo(170 * scale, 183 * scale, 170 * scale, 183 * scale, 167 * scale, 183 * scale);\r\n    ctx.bezierCurveTo(132 * scale, 160 * scale, 112 * scale, 156 * scale, 73 * scale, 141 * scale);\r\n    ctx.bezierCurveTo(43 * scale, 146 * scale, 27 * scale, 120 * scale, 39 * scale, 66 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[7], color[8], 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(115 * scale, 185 * scale);\r\n    ctx.bezierCurveTo(115 * scale, 200 * scale, 118 * scale, 206 * scale, 124 * scale, 212 * scale);\r\n    ctx.bezierCurveTo(133 * scale, 223 * scale, 132 * scale, 231 * scale, 121 * scale, 230 * scale);\r\n    ctx.bezierCurveTo(108 * scale, 226 * scale, 108 * scale, 215 * scale, 107 * scale, 209 * scale);\r\n    ctx.bezierCurveTo(106 * scale, 201 * scale, 110 * scale, 196 * scale, 114 * scale, 185 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[4], 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(226 * scale, 186 * scale);\r\n    ctx.bezierCurveTo(234 * scale, 201 * scale, 238 * scale, 209 * scale, 228 * scale, 225 * scale);\r\n    ctx.bezierCurveTo(223 * scale, 233 * scale, 213 * scale, 233 * scale, 211 * scale, 226 * scale);\r\n    ctx.bezierCurveTo(206 * scale, 219 * scale, 217 * scale, 216 * scale, 221 * scale, 207 * scale);\r\n    ctx.bezierCurveTo(225 * scale, 196 * scale, 225 * scale, 191 * scale, 226 * scale, 186 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[4], 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(172 * scale, 110 * scale);\r\n    ctx.bezierCurveTo(189 * scale, 153 * scale, 192 * scale, 160 * scale, 188 * scale, 175 * scale);\r\n    ctx.bezierCurveTo(183 * scale, 190 * scale, 176 * scale, 197 * scale, 165 * scale, 191 * scale);\r\n    ctx.bezierCurveTo(153 * scale, 181 * scale, 152 * scale, 166 * scale, 157 * scale, 151 * scale);\r\n    ctx.bezierCurveTo(164.5 * scale, 131 * scale, 164.5 * scale, 131 * scale, 172 * scale, 111 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[4], 8 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_fir_one(scale, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 149 * scale;\r\n    can.height = 153 * scale;\r\n    ctx.globalAlpha = 0.5;\r\n    circle(ctx, 74.5 * scale, 85 * scale, 66 * scale);\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    circle(ctx, 75.5 * scale, 72.5 * scale, 67 * scale);\r\n    fill_path(ctx, color[1], color[2], 4 * scale);\r\n    circle(ctx, 75.5 * scale, 73.5 * scale, 54 * scale);\r\n    fill_path(ctx, color[3]);\r\n    ctx.globalAlpha = 0.5;\r\n    circle(ctx, 74.5 * scale, 80.5 * scale, 39 * scale);\r\n    fill_path(ctx, color[4]);\r\n    ctx.globalAlpha = 1;\r\n    circle(ctx, 74.5 * scale, 74.5 * scale, 37 * scale);\r\n    fill_path(ctx, color[5]);\r\n    return can;\r\n}\r\n;\r\nfunction create_fir_two(scale, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 173 * scale;\r\n    can.height = 178 * scale;\r\n    ctx.globalAlpha = 0.5;\r\n    circle(ctx, 86.5 * scale, 98 * scale, 80 * scale);\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    circle(ctx, 86.5 * scale, 89 * scale, 81 * scale);\r\n    fill_path(ctx, color[1], color[2], 4 * scale);\r\n    circle(ctx, 86.5 * scale, 86 * scale, 59 * scale);\r\n    fill_path(ctx, color[3], color[4], 4 * scale);\r\n    ctx.globalAlpha = 0.5;\r\n    circle(ctx, 86.5 * scale, 95 * scale, 34 * scale);\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    circle(ctx, 86.5 * scale, 89 * scale, 34 * scale);\r\n    fill_path(ctx, color[5]);\r\n    return can;\r\n}\r\n;\r\nfunction create_fir_three(scale, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 253 * scale;\r\n    can.height = 260 * scale;\r\n    ctx.globalAlpha = 0.5;\r\n    circle(ctx, 126.5 * scale, 134 * scale, 119 * scale);\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    circle(ctx, 126.5 * scale, 124 * scale, 119 * scale);\r\n    fill_path(ctx, color[1], color[2], 4 * scale);\r\n    circle(ctx, 126.5 * scale, 127 * scale, 100 * scale);\r\n    fill_path(ctx, color[3]);\r\n    ctx.globalAlpha = 0.5;\r\n    circle(ctx, 126.5 * scale, 135 * scale, 81 * scale);\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    circle(ctx, 126.5 * scale, 125 * scale, 84 * scale);\r\n    fill_path(ctx, color[4], color[5], 4 * scale);\r\n    circle(ctx, 126.5 * scale, 125 * scale, 61 * scale);\r\n    fill_path(ctx, color[6], color[7], 4 * scale);\r\n    ctx.globalAlpha = 0.5;\r\n    circle(ctx, 126.5 * scale, 134 * scale, 40 * scale);\r\n    fill_path(ctx, color[8]);\r\n    ctx.globalAlpha = 1;\r\n    circle(ctx, 126.5 * scale, 125 * scale, 40 * scale);\r\n    fill_path(ctx, color[9]);\r\n    return can;\r\n}\r\n;\r\nfunction create_amethyst(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 139 * scale;\r\n    can.height = 135 * scale;\r\n    ctx.translate(0, 10 * scale);\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(32 * scale, 77 * scale);\r\n    ctx.bezierCurveTo(6 * scale, 41 * scale, 6 * scale, 33 * scale, 12 * scale, 27 * scale);\r\n    ctx.bezierCurveTo(27 * scale, 6 * scale, 28 * scale, 6 * scale, 37 * scale, 6 * scale);\r\n    ctx.bezierCurveTo(62 * scale, 3 * scale, 64 * scale, 5 * scale, 67 * scale, 13 * scale);\r\n    ctx.bezierCurveTo(80 * scale, 36 * scale, 73.5 * scale, 25 * scale, 80 * scale, 37 * scale);\r\n    ctx.bezierCurveTo(73.5 * scale, 54 * scale, 65 * scale, 74 * scale, 67 * scale, 71 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(65 * scale, 37 * scale);\r\n    ctx.bezierCurveTo(105 * scale, 40 * scale, 113 * scale, 39 * scale, 117 * scale, 48 * scale);\r\n    ctx.bezierCurveTo(126 * scale, 70 * scale, 128 * scale, 72 * scale, 124 * scale, 80 * scale);\r\n    ctx.bezierCurveTo(112 * scale, 101 * scale, 110 * scale, 104 * scale, 99 * scale, 104 * scale);\r\n    ctx.bezierCurveTo(59 * scale, 100 * scale, 55 * scale, 99 * scale, 56 * scale, 99 * scale);\r\n    ctx.bezierCurveTo(47.5 * scale, 79 * scale, 45 * scale, 66 * scale, 39 * scale, 59 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(30 * scale, 63 * scale);\r\n    ctx.bezierCurveTo(5 * scale, 99 * scale, 5 * scale, 101 * scale, 8 * scale, 103 * scale);\r\n    ctx.bezierCurveTo(19 * scale, 123 * scale, 22 * scale, 125 * scale, 28 * scale, 126 * scale);\r\n    ctx.bezierCurveTo(57 * scale, 127 * scale, 55 * scale, 127 * scale, 58 * scale, 120 * scale);\r\n    ctx.bezierCurveTo(82 * scale, 86 * scale, 83 * scale, 78 * scale, 82 * scale, 87 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.translate(0, -10 * scale);\r\n    ctx.globalAlpha = 1;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(32 * scale, 77 * scale);\r\n    ctx.bezierCurveTo(6 * scale, 41 * scale, 6 * scale, 33 * scale, 12 * scale, 27 * scale);\r\n    ctx.bezierCurveTo(27 * scale, 6 * scale, 28 * scale, 6 * scale, 37 * scale, 6 * scale);\r\n    ctx.bezierCurveTo(62 * scale, 3 * scale, 64 * scale, 5 * scale, 67 * scale, 13 * scale);\r\n    ctx.bezierCurveTo(80 * scale, 36 * scale, 73.5 * scale, 25 * scale, 80 * scale, 37 * scale);\r\n    ctx.bezierCurveTo(73.5 * scale, 54 * scale, 65 * scale, 74 * scale, 67 * scale, 71 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(65 * scale, 37 * scale);\r\n    ctx.bezierCurveTo(105 * scale, 40 * scale, 113 * scale, 39 * scale, 117 * scale, 48 * scale);\r\n    ctx.bezierCurveTo(126 * scale, 70 * scale, 128 * scale, 72 * scale, 124 * scale, 80 * scale);\r\n    ctx.bezierCurveTo(112 * scale, 101 * scale, 110 * scale, 104 * scale, 99 * scale, 104 * scale);\r\n    ctx.bezierCurveTo(59 * scale, 100 * scale, 55 * scale, 99 * scale, 56 * scale, 99 * scale);\r\n    ctx.bezierCurveTo(47.5 * scale, 79 * scale, 45 * scale, 66 * scale, 39 * scale, 59 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(30 * scale, 63 * scale);\r\n    ctx.bezierCurveTo(5 * scale, 99 * scale, 5 * scale, 101 * scale, 8 * scale, 103 * scale);\r\n    ctx.bezierCurveTo(19 * scale, 123 * scale, 22 * scale, 125 * scale, 28 * scale, 126 * scale);\r\n    ctx.bezierCurveTo(57 * scale, 127 * scale, 55 * scale, 127 * scale, 58 * scale, 120 * scale);\r\n    ctx.bezierCurveTo(82 * scale, 86 * scale, 83 * scale, 78 * scale, 82 * scale, 87 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(80 * scale, 38 * scale);\r\n    ctx.bezierCurveTo(72.5 * scale, 52 * scale, 72.5 * scale, 52 * scale, 65 * scale, 66 * scale);\r\n    ctx.bezierCurveTo(47.5 * scale, 37 * scale, 47.5 * scale, 37 * scale, 30 * scale, 7 * scale);\r\n    ctx.bezierCurveTo(48 * scale, 4 * scale, 57 * scale, 4 * scale, 64 * scale, 10 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(65 * scale, 65 * scale);\r\n    ctx.bezierCurveTo(125 * scale, 73 * scale, 95.5 * scale, 69 * scale, 126 * scale, 73 * scale);\r\n    ctx.bezierCurveTo(119 * scale, 98 * scale, 106 * scale, 104 * scale, 98 * scale, 103 * scale);\r\n    ctx.bezierCurveTo(84.5 * scale, 102 * scale, 84.5 * scale, 102 * scale, 71 * scale, 101 * scale);\r\n    ctx.bezierCurveTo(64 * scale, 86 * scale, 64 * scale, 86 * scale, 57 * scale, 70 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(27 * scale, 69 * scale);\r\n    ctx.bezierCurveTo(64 * scale, 65 * scale, 46 * scale, 67 * scale, 65 * scale, 65 * scale);\r\n    ctx.bezierCurveTo(43.5 * scale, 94 * scale, 43.5 * scale, 94 * scale, 22 * scale, 123 * scale);\r\n    ctx.bezierCurveTo(8 * scale, 103 * scale, 8 * scale, 103 * scale, 9 * scale, 103 * scale);\r\n    ctx.bezierCurveTo(5 * scale, 98 * scale, 11 * scale, 89 * scale, 26 * scale, 70 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(26 * scale, 69 * scale);\r\n    ctx.bezierCurveTo(65 * scale, 60 * scale, 45 * scale, 65 * scale, 64 * scale, 60 * scale);\r\n    ctx.bezierCurveTo(63 * scale, 65 * scale, 63 * scale, 65 * scale, 62 * scale, 70 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(80 * scale, 38 * scale);\r\n    ctx.bezierCurveTo(68 * scale, 70 * scale, 75 * scale, 53 * scale, 70 * scale, 68 * scale);\r\n    ctx.bezierCurveTo(65 * scale, 67 * scale, 65 * scale, 67 * scale, 60 * scale, 65 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2]);\r\n    return can;\r\n}\r\n;\r\nfunction create_dragon_ground(scale, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 100 * scale;\r\n    can.height = 100 * scale;\r\n    ctx.globalAlpha = 0.5;\r\n    ctx.fillStyle = color[0];\r\n    ctx.fillRect(0, 0, can.width, can.height);\r\n    return can;\r\n}\r\n;\r\nfunction create_snow_one(scale, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 120 * scale;\r\n    can.height = 300 * scale;\r\n    ctx.translate(-80 * scale, -20);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(200.5 * scale, 14.953125 * scale);\r\n    ctx.bezierCurveTo(203 * scale, 171.953125 * scale, 203 * scale, 171.953125 * scale, 205.5 * scale, 328.953125 * scale);\r\n    ctx.bezierCurveTo(188.5 * scale, 257.953125 * scale, 164.5 * scale, 216.953125 * scale, 166.5 * scale, 176.953125 * scale);\r\n    ctx.bezierCurveTo(168.5 * scale, 133.953125 * scale, 198.5 * scale, 98.953125 * scale, 200.5 * scale, 14.953125 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    return can;\r\n}\r\n;\r\nfunction create_snow_two(scale, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 120 * scale;\r\n    can.height = 300 * scale;\r\n    ctx.translate(-200 * scale, -40 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(344 * scale, 18.40625 * scale);\r\n    ctx.bezierCurveTo(345 * scale, 361.40625 * scale, 344 * scale, 191.40625 * scale, 344 * scale, 364.40625 * scale);\r\n    ctx.bezierCurveTo(261 * scale, 275.40625 * scale, 274 * scale, 259.40625 * scale, 229 * scale, 213.40625 * scale);\r\n    ctx.bezierCurveTo(199 * scale, 187.40625 * scale, 222 * scale, 133.40625 * scale, 273 * scale, 100.40625 * scale);\r\n    ctx.bezierCurveTo(321 * scale, 71.40625 * scale, 327 * scale, 34.40625 * scale, 344 * scale, 18.40625 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(335 * scale, 38.072906494140625 * scale);\r\n    ctx.bezierCurveTo(307 * scale, 62.072906494140625 * scale, 291 * scale, 60.072906494140625 * scale, 262 * scale, 68.07290649414062 * scale);\r\n    ctx.bezierCurveTo(223 * scale, 80.07290649414062 * scale, 225 * scale, 111.07290649414062 * scale, 264 * scale, 139.07290649414062 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    return can;\r\n}\r\n;\r\nfunction create_snow_three(scale, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 120 * scale;\r\n    can.height = 320 * scale;\r\n    ctx.translate(-60 * scale, -15 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(188.5 * scale, 3.953125 * scale);\r\n    ctx.bezierCurveTo(188.5 * scale, 171.453125 * scale, 188.5 * scale, 171.453125 * scale, 188.5 * scale, 338.953125 * scale);\r\n    ctx.bezierCurveTo(162.5 * scale, 268.953125 * scale, 145.5 * scale, 265.953125 * scale, 116.5 * scale, 244.953125 * scale);\r\n    ctx.bezierCurveTo(67.5 * scale, 204.953125 * scale, 87.5 * scale, 160.953125 * scale, 113.5 * scale, 125.953125 * scale);\r\n    ctx.bezierCurveTo(141.5 * scale, 90.953125 * scale, 176.5 * scale, 56.953125 * scale, 188.5 * scale, 3.953125 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    return can;\r\n}\r\n;\r\nfunction create_snow_four(scale, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 120 * scale;\r\n    can.height = 330 * scale;\r\n    ctx.translate(-60 * scale, -10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(188.5 * scale, 7.953125 * scale);\r\n    ctx.bezierCurveTo(188.5 * scale, 334.953125 * scale, 188.5 * scale, 332.953125 * scale, 188.5 * scale, 339.953125 * scale);\r\n    ctx.bezierCurveTo(166.5 * scale, 295.953125 * scale, 145.5 * scale, 295.953125 * scale, 139.5 * scale, 282.953125 * scale);\r\n    ctx.bezierCurveTo(124.5 * scale, 244.953125 * scale, 139.5 * scale, 243.953125 * scale, 131.5 * scale, 212.953125 * scale);\r\n    ctx.bezierCurveTo(118.5 * scale, 161.953125 * scale, 69.5 * scale, 156.953125 * scale, 74.5 * scale, 92.953125 * scale);\r\n    ctx.bezierCurveTo(85.5 * scale, 41.953125 * scale, 158.5 * scale, 49.953125 * scale, 188.5 * scale, 7.953125 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    return can;\r\n}\r\n;\r\nfunction create_snow_five(scale, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 48 * scale;\r\n    can.height = 47 * scale;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(7.1875 * scale, 25.434661865234375 * scale);\r\n    ctx.bezierCurveTo(11.1875 * scale, 13.434661865234375 * scale, 18.1875 * scale, 8.434661865234375 * scale, 32.1875 * scale, 10.434661865234375 * scale);\r\n    ctx.bezierCurveTo(45.1875 * scale, 14.434661865234375 * scale, 41.1875 * scale, 24.434661865234375 * scale, 36.1875 * scale, 30.434661865234375 * scale);\r\n    ctx.bezierCurveTo(22.1875 * scale, 42.434661865234375 * scale, 2.1875 * scale, 41.434661865234375 * scale, 7.1875 * scale, 25.434661865234375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    return can;\r\n}\r\n;\r\nfunction create_snow_six(scale, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 120 * scale;\r\n    can.height = 280 * scale;\r\n    ctx.translate(-100 * scale, -20 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(228.5 * scale, 331.953125 * scale);\r\n    ctx.bezierCurveTo(228.5 * scale, 12.953125 * scale, 228.5 * scale, 171.453125 * scale, 228.5 * scale, 10.953125 * scale);\r\n    ctx.bezierCurveTo(196.5 * scale, 76.953125 * scale, 206.5 * scale, 78.953125 * scale, 191.5 * scale, 114.953125 * scale);\r\n    ctx.bezierCurveTo(162.5 * scale, 170.953125 * scale, 206.5 * scale, 220.953125 * scale, 210.5 * scale, 251.953125 * scale);\r\n    ctx.bezierCurveTo(218.5 * scale, 287.953125 * scale, 220.5 * scale, 291.953125 * scale, 228.5 * scale, 331.953125 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    return can;\r\n}\r\n;\r\nfunction create_snow_sept(scale, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 33 * scale;\r\n    can.height = 35 * scale;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(12.75 * scale, 7.1328125 * scale);\r\n    ctx.bezierCurveTo(26.75 * scale, 8.1328125 * scale, 27.75 * scale, 14.1328125 * scale, 24.75 * scale, 23.1328125 * scale);\r\n    ctx.bezierCurveTo(19.75 * scale, 31.1328125 * scale, 15.75 * scale, 33.1328125 * scale, 6.75 * scale, 26.1328125 * scale);\r\n    ctx.bezierCurveTo(0.75 * scale, 19.1328125 * scale, 4.75 * scale, 8.1328125 * scale, 12.75 * scale, 7.1328125 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    return can;\r\n}\r\n;\r\nfunction create_snow_step(scale, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 20 * scale;\r\n    can.height = 35 * scale;\r\n    round_rect(ctx, 0, 0, 20, 35, 7);\r\n    fill_path(ctx, color[0]);\r\n    return can;\r\n}\r\n;\r\nfunction create_winter_fox(scale, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 161 * scale;\r\n    can.height = 190 * scale;\r\n    ctx.globalAlpha = 0.5;\r\n    ctx.translate(0, 8);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(9 * scale, 93 * scale);\r\n    ctx.bezierCurveTo(17 * scale, 95 * scale, 19 * scale, 95 * scale, 21 * scale, 95 * scale);\r\n    ctx.bezierCurveTo(9 * scale, 83 * scale, 17 * scale, 93 * scale, 4 * scale, 76 * scale);\r\n    ctx.bezierCurveTo(11 * scale, 75 * scale, 11 * scale, 75 * scale, 18 * scale, 75 * scale);\r\n    ctx.bezierCurveTo(13 * scale, 67 * scale, 13 * scale, 67 * scale, 7 * scale, 59 * scale);\r\n    ctx.bezierCurveTo(14 * scale, 59 * scale, 14 * scale, 59 * scale, 21 * scale, 59 * scale);\r\n    ctx.bezierCurveTo(46 * scale, 35 * scale, 35 * scale, 45 * scale, 49 * scale, 31 * scale);\r\n    ctx.bezierCurveTo(53 * scale, 24 * scale, 51 * scale, 21 * scale, 51 * scale, 16 * scale);\r\n    ctx.bezierCurveTo(63 * scale, 23 * scale, 63 * scale, 24 * scale, 69 * scale, 29 * scale);\r\n    ctx.bezierCurveTo(76 * scale, 7 * scale, 75 * scale, 11 * scale, 76 * scale, 6 * scale);\r\n    ctx.bezierCurveTo(81 * scale, 12 * scale, 84 * scale, 18 * scale, 89 * scale, 27 * scale);\r\n    ctx.bezierCurveTo(95 * scale, 25 * scale, 100 * scale, 16 * scale, 105 * scale, 14 * scale);\r\n    ctx.bezierCurveTo(103 * scale, 25 * scale, 111 * scale, 33 * scale, 110 * scale, 34 * scale);\r\n    ctx.bezierCurveTo(123 * scale, 48 * scale, 123 * scale, 48 * scale, 136 * scale, 62 * scale);\r\n    ctx.bezierCurveTo(142 * scale, 60 * scale, 147 * scale, 59 * scale, 155 * scale, 58 * scale);\r\n    ctx.bezierCurveTo(147 * scale, 65 * scale, 147 * scale, 65 * scale, 139 * scale, 73 * scale);\r\n    ctx.bezierCurveTo(145 * scale, 73 * scale, 145 * scale, 73 * scale, 151 * scale, 73 * scale);\r\n    ctx.bezierCurveTo(145 * scale, 80 * scale, 145 * scale, 80 * scale, 138 * scale, 87 * scale);\r\n    ctx.bezierCurveTo(144 * scale, 88 * scale, 144 * scale, 88 * scale, 150 * scale, 89 * scale);\r\n    ctx.bezierCurveTo(125 * scale, 103 * scale, 125 * scale, 125 * scale, 113 * scale, 141 * scale);\r\n    ctx.bezierCurveTo(92 * scale, 178 * scale, 85 * scale, 177 * scale, 76 * scale, 178 * scale);\r\n    ctx.bezierCurveTo(64 * scale, 179 * scale, 51 * scale, 164 * scale, 35 * scale, 131 * scale);\r\n    ctx.bezierCurveTo(18 * scale, 95 * scale, 13 * scale, 99 * scale, 8 * scale, 93 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(0, -8);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(9 * scale, 93 * scale);\r\n    ctx.bezierCurveTo(17 * scale, 95 * scale, 19 * scale, 95 * scale, 21 * scale, 95 * scale);\r\n    ctx.bezierCurveTo(9 * scale, 83 * scale, 17 * scale, 93 * scale, 4 * scale, 76 * scale);\r\n    ctx.bezierCurveTo(11 * scale, 75 * scale, 11 * scale, 75 * scale, 18 * scale, 75 * scale);\r\n    ctx.bezierCurveTo(13 * scale, 67 * scale, 13 * scale, 67 * scale, 7 * scale, 59 * scale);\r\n    ctx.bezierCurveTo(14 * scale, 59 * scale, 14 * scale, 59 * scale, 21 * scale, 59 * scale);\r\n    ctx.bezierCurveTo(46 * scale, 35 * scale, 35 * scale, 45 * scale, 49 * scale, 31 * scale);\r\n    ctx.bezierCurveTo(53 * scale, 24 * scale, 51 * scale, 21 * scale, 51 * scale, 16 * scale);\r\n    ctx.bezierCurveTo(63 * scale, 23 * scale, 63 * scale, 24 * scale, 69 * scale, 29 * scale);\r\n    ctx.bezierCurveTo(76 * scale, 7 * scale, 75 * scale, 11 * scale, 76 * scale, 6 * scale);\r\n    ctx.bezierCurveTo(81 * scale, 12 * scale, 84 * scale, 18 * scale, 89 * scale, 27 * scale);\r\n    ctx.bezierCurveTo(95 * scale, 25 * scale, 100 * scale, 16 * scale, 105 * scale, 14 * scale);\r\n    ctx.bezierCurveTo(103 * scale, 25 * scale, 111 * scale, 33 * scale, 110 * scale, 34 * scale);\r\n    ctx.bezierCurveTo(123 * scale, 48 * scale, 123 * scale, 48 * scale, 136 * scale, 62 * scale);\r\n    ctx.bezierCurveTo(142 * scale, 60 * scale, 147 * scale, 59 * scale, 155 * scale, 58 * scale);\r\n    ctx.bezierCurveTo(147 * scale, 65 * scale, 147 * scale, 65 * scale, 139 * scale, 73 * scale);\r\n    ctx.bezierCurveTo(145 * scale, 73 * scale, 145 * scale, 73 * scale, 151 * scale, 73 * scale);\r\n    ctx.bezierCurveTo(145 * scale, 80 * scale, 145 * scale, 80 * scale, 138 * scale, 87 * scale);\r\n    ctx.bezierCurveTo(144 * scale, 88 * scale, 144 * scale, 88 * scale, 150 * scale, 89 * scale);\r\n    ctx.bezierCurveTo(125 * scale, 103 * scale, 125 * scale, 125 * scale, 113 * scale, 141 * scale);\r\n    ctx.bezierCurveTo(92 * scale, 178 * scale, 85 * scale, 177 * scale, 76 * scale, 178 * scale);\r\n    ctx.bezierCurveTo(64 * scale, 179 * scale, 51 * scale, 164 * scale, 35 * scale, 131 * scale);\r\n    ctx.bezierCurveTo(18 * scale, 95 * scale, 13 * scale, 99 * scale, 8 * scale, 93 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(28 * scale, 63 * scale);\r\n    ctx.bezierCurveTo(23 * scale, 54 * scale, 24 * scale, 47 * scale, 26 * scale, 37 * scale);\r\n    ctx.bezierCurveTo(28 * scale, 29 * scale, 31 * scale, 31 * scale, 41 * scale, 35 * scale);\r\n    ctx.bezierCurveTo(52 * scale, 45 * scale, 55 * scale, 51 * scale, 57 * scale, 53 * scale);\r\n    ctx.bezierCurveTo(50 * scale, 50 * scale, 44 * scale, 47 * scale, 43 * scale, 48 * scale);\r\n    ctx.bezierCurveTo(43 * scale, 52 * scale, 43 * scale, 52 * scale, 42 * scale, 57 * scale);\r\n    ctx.bezierCurveTo(38 * scale, 54 * scale, 38 * scale, 54 * scale, 33 * scale, 51 * scale);\r\n    ctx.bezierCurveTo(34 * scale, 56 * scale, 34 * scale, 56 * scale, 34 * scale, 61 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(99 * scale, 55 * scale);\r\n    ctx.bezierCurveTo(107 * scale, 43 * scale, 113 * scale, 39 * scale, 121 * scale, 34 * scale);\r\n    ctx.bezierCurveTo(130 * scale, 29 * scale, 130 * scale, 34 * scale, 130 * scale, 42 * scale);\r\n    ctx.bezierCurveTo(131 * scale, 57 * scale, 128 * scale, 61 * scale, 129 * scale, 63 * scale);\r\n    ctx.bezierCurveTo(124 * scale, 62 * scale, 124 * scale, 62 * scale, 119 * scale, 61 * scale);\r\n    ctx.bezierCurveTo(119 * scale, 56 * scale, 120 * scale, 61 * scale, 118 * scale, 52 * scale);\r\n    ctx.bezierCurveTo(115 * scale, 55 * scale, 111 * scale, 59 * scale, 111 * scale, 58 * scale);\r\n    ctx.bezierCurveTo(110 * scale, 54 * scale, 109 * scale, 57 * scale, 109 * scale, 51 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3]);\r\n    circle(ctx, 103 * scale, 110 * scale, 11 * scale);\r\n    fill_path(ctx, color[4]);\r\n    circle(ctx, 55 * scale, 111 * scale, 11 * scale);\r\n    fill_path(ctx, color[4]);\r\n    circle(ctx, 99 * scale, 107 * scale, 5 * scale);\r\n    fill_path(ctx, color[1]);\r\n    circle(ctx, 51 * scale, 108 * scale, 5 * scale);\r\n    fill_path(ctx, color[1]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(31 * scale, 121 * scale);\r\n    ctx.bezierCurveTo(45 * scale, 128 * scale, 51 * scale, 133 * scale, 53 * scale, 141 * scale);\r\n    ctx.bezierCurveTo(59 * scale, 161 * scale, 70 * scale, 173 * scale, 80 * scale, 169 * scale);\r\n    ctx.bezierCurveTo(89 * scale, 172 * scale, 99 * scale, 149 * scale, 107 * scale, 133 * scale);\r\n    ctx.bezierCurveTo(114 * scale, 122 * scale, 119 * scale, 123 * scale, 124 * scale, 119 * scale);\r\n    ctx.bezierCurveTo(109 * scale, 148 * scale, 117 * scale, 133 * scale, 109 * scale, 147 * scale);\r\n    ctx.bezierCurveTo(87 * scale, 180 * scale, 84 * scale, 179 * scale, 76 * scale, 178 * scale);\r\n    ctx.bezierCurveTo(49 * scale, 173 * scale, 44 * scale, 149 * scale, 31 * scale, 121 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[5]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.translate(-2, 0);\r\n    ctx.moveTo(71 * scale, 162 * scale);\r\n    ctx.bezierCurveTo(80 * scale, 155 * scale, 85 * scale, 159 * scale, 89 * scale, 164 * scale);\r\n    ctx.bezierCurveTo(90 * scale, 171 * scale, 86 * scale, 173 * scale, 79 * scale, 173 * scale);\r\n    ctx.bezierCurveTo(67 * scale, 172 * scale, 67 * scale, 168 * scale, 71 * scale, 162 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3]);\r\n    ctx.translate(2, 0);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(9 * scale, 93 * scale);\r\n    ctx.bezierCurveTo(17 * scale, 95 * scale, 19 * scale, 95 * scale, 21 * scale, 95 * scale);\r\n    ctx.bezierCurveTo(9 * scale, 83 * scale, 17 * scale, 93 * scale, 4 * scale, 76 * scale);\r\n    ctx.bezierCurveTo(11 * scale, 75 * scale, 11 * scale, 75 * scale, 18 * scale, 75 * scale);\r\n    ctx.bezierCurveTo(13 * scale, 67 * scale, 13 * scale, 67 * scale, 7 * scale, 59 * scale);\r\n    ctx.bezierCurveTo(14 * scale, 59 * scale, 14 * scale, 59 * scale, 21 * scale, 59 * scale);\r\n    ctx.bezierCurveTo(46 * scale, 35 * scale, 35 * scale, 45 * scale, 49 * scale, 31 * scale);\r\n    ctx.bezierCurveTo(53 * scale, 24 * scale, 51 * scale, 21 * scale, 51 * scale, 16 * scale);\r\n    ctx.bezierCurveTo(63 * scale, 23 * scale, 63 * scale, 24 * scale, 69 * scale, 29 * scale);\r\n    ctx.bezierCurveTo(76 * scale, 7 * scale, 75 * scale, 11 * scale, 76 * scale, 6 * scale);\r\n    ctx.bezierCurveTo(81 * scale, 12 * scale, 84 * scale, 18 * scale, 89 * scale, 27 * scale);\r\n    ctx.bezierCurveTo(95 * scale, 25 * scale, 100 * scale, 16 * scale, 105 * scale, 14 * scale);\r\n    ctx.bezierCurveTo(103 * scale, 25 * scale, 111 * scale, 33 * scale, 110 * scale, 34 * scale);\r\n    ctx.bezierCurveTo(123 * scale, 48 * scale, 123 * scale, 48 * scale, 136 * scale, 62 * scale);\r\n    ctx.bezierCurveTo(142 * scale, 60 * scale, 147 * scale, 59 * scale, 155 * scale, 58 * scale);\r\n    ctx.bezierCurveTo(147 * scale, 65 * scale, 147 * scale, 65 * scale, 139 * scale, 73 * scale);\r\n    ctx.bezierCurveTo(145 * scale, 73 * scale, 145 * scale, 73 * scale, 151 * scale, 73 * scale);\r\n    ctx.bezierCurveTo(145 * scale, 80 * scale, 145 * scale, 80 * scale, 138 * scale, 87 * scale);\r\n    ctx.bezierCurveTo(144 * scale, 88 * scale, 144 * scale, 88 * scale, 150 * scale, 89 * scale);\r\n    ctx.bezierCurveTo(125 * scale, 103 * scale, 125 * scale, 125 * scale, 113 * scale, 141 * scale);\r\n    ctx.bezierCurveTo(92 * scale, 178 * scale, 85 * scale, 177 * scale, 76 * scale, 178 * scale);\r\n    ctx.bezierCurveTo(64 * scale, 179 * scale, 51 * scale, 164 * scale, 35 * scale, 131 * scale);\r\n    ctx.bezierCurveTo(18 * scale, 95 * scale, 13 * scale, 99 * scale, 8 * scale, 93 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[2], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(25 * scale, 63 * scale);\r\n    ctx.bezierCurveTo(16 * scale, 58 * scale, 17 * scale, 51 * scale, 17 * scale, 33 * scale);\r\n    ctx.bezierCurveTo(19 * scale, 12 * scale, 21 * scale, 12 * scale, 32 * scale, 17 * scale);\r\n    ctx.bezierCurveTo(63 * scale, 31 * scale, 66 * scale, 45 * scale, 66 * scale, 54 * scale);\r\n    fill_path(ctx, color[1], color[2], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(91 * scale, 53 * scale);\r\n    ctx.bezierCurveTo(91 * scale, 40 * scale, 98 * scale, 33 * scale, 121 * scale, 20 * scale);\r\n    ctx.bezierCurveTo(137 * scale, 12 * scale, 137 * scale, 16 * scale, 139 * scale, 27 * scale);\r\n    ctx.bezierCurveTo(141 * scale, 49 * scale, 140 * scale, 57 * scale, 134 * scale, 64 * scale);\r\n    fill_path(ctx, color[1], color[2], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(31 * scale, 63 * scale);\r\n    ctx.bezierCurveTo(23 * scale, 54 * scale, 24 * scale, 47 * scale, 26 * scale, 37 * scale);\r\n    ctx.bezierCurveTo(28 * scale, 29 * scale, 31 * scale, 31 * scale, 41 * scale, 35 * scale);\r\n    ctx.bezierCurveTo(52 * scale, 45 * scale, 55 * scale, 51 * scale, 57 * scale, 53 * scale);\r\n    ctx.bezierCurveTo(50 * scale, 50 * scale, 44 * scale, 47 * scale, 43 * scale, 48 * scale);\r\n    ctx.bezierCurveTo(43 * scale, 52 * scale, 43 * scale, 52 * scale, 42 * scale, 57 * scale);\r\n    ctx.bezierCurveTo(38 * scale, 54 * scale, 38 * scale, 54 * scale, 33 * scale, 51 * scale);\r\n    ctx.bezierCurveTo(34 * scale, 56 * scale, 34 * scale, 56 * scale, 34 * scale, 61 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(99 * scale, 55 * scale);\r\n    ctx.bezierCurveTo(107 * scale, 43 * scale, 113 * scale, 39 * scale, 121 * scale, 34 * scale);\r\n    ctx.bezierCurveTo(130 * scale, 29 * scale, 130 * scale, 34 * scale, 130 * scale, 42 * scale);\r\n    ctx.bezierCurveTo(131 * scale, 57 * scale, 128 * scale, 61 * scale, 129 * scale, 63 * scale);\r\n    ctx.bezierCurveTo(124 * scale, 62 * scale, 124 * scale, 62 * scale, 119 * scale, 61 * scale);\r\n    ctx.bezierCurveTo(119 * scale, 56 * scale, 120 * scale, 61 * scale, 118 * scale, 52 * scale);\r\n    ctx.bezierCurveTo(115 * scale, 55 * scale, 111 * scale, 59 * scale, 111 * scale, 58 * scale);\r\n    ctx.bezierCurveTo(110 * scale, 54 * scale, 109 * scale, 57 * scale, 109 * scale, 51 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3]);\r\n    return can;\r\n}\r\n;\r\nfunction create_hurt_fox_winter(scale, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 161 * scale;\r\n    can.height = 190 * scale;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(9 * scale, 93 * scale);\r\n    ctx.bezierCurveTo(17 * scale, 95 * scale, 19 * scale, 95 * scale, 21 * scale, 95 * scale);\r\n    ctx.bezierCurveTo(9 * scale, 83 * scale, 17 * scale, 93 * scale, 4 * scale, 76 * scale);\r\n    ctx.bezierCurveTo(11 * scale, 75 * scale, 11 * scale, 75 * scale, 18 * scale, 75 * scale);\r\n    ctx.bezierCurveTo(13 * scale, 67 * scale, 13 * scale, 67 * scale, 7 * scale, 59 * scale);\r\n    ctx.bezierCurveTo(14 * scale, 59 * scale, 14 * scale, 59 * scale, 21 * scale, 59 * scale);\r\n    ctx.bezierCurveTo(46 * scale, 35 * scale, 35 * scale, 45 * scale, 49 * scale, 31 * scale);\r\n    ctx.bezierCurveTo(53 * scale, 24 * scale, 51 * scale, 21 * scale, 51 * scale, 16 * scale);\r\n    ctx.bezierCurveTo(63 * scale, 23 * scale, 63 * scale, 24 * scale, 69 * scale, 29 * scale);\r\n    ctx.bezierCurveTo(76 * scale, 7 * scale, 75 * scale, 11 * scale, 76 * scale, 6 * scale);\r\n    ctx.bezierCurveTo(81 * scale, 12 * scale, 84 * scale, 18 * scale, 89 * scale, 27 * scale);\r\n    ctx.bezierCurveTo(95 * scale, 25 * scale, 100 * scale, 16 * scale, 105 * scale, 14 * scale);\r\n    ctx.bezierCurveTo(103 * scale, 25 * scale, 111 * scale, 33 * scale, 110 * scale, 34 * scale);\r\n    ctx.bezierCurveTo(123 * scale, 48 * scale, 123 * scale, 48 * scale, 136 * scale, 62 * scale);\r\n    ctx.bezierCurveTo(142 * scale, 60 * scale, 147 * scale, 59 * scale, 155 * scale, 58 * scale);\r\n    ctx.bezierCurveTo(147 * scale, 65 * scale, 147 * scale, 65 * scale, 139 * scale, 73 * scale);\r\n    ctx.bezierCurveTo(145 * scale, 73 * scale, 145 * scale, 73 * scale, 151 * scale, 73 * scale);\r\n    ctx.bezierCurveTo(145 * scale, 80 * scale, 145 * scale, 80 * scale, 138 * scale, 87 * scale);\r\n    ctx.bezierCurveTo(144 * scale, 88 * scale, 144 * scale, 88 * scale, 150 * scale, 89 * scale);\r\n    ctx.bezierCurveTo(125 * scale, 103 * scale, 125 * scale, 125 * scale, 113 * scale, 141 * scale);\r\n    ctx.bezierCurveTo(92 * scale, 178 * scale, 85 * scale, 177 * scale, 76 * scale, 178 * scale);\r\n    ctx.bezierCurveTo(64 * scale, 179 * scale, 51 * scale, 164 * scale, 35 * scale, 131 * scale);\r\n    ctx.bezierCurveTo(18 * scale, 95 * scale, 13 * scale, 99 * scale, 8 * scale, 93 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color, color, 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(25 * scale, 63 * scale);\r\n    ctx.bezierCurveTo(16 * scale, 58 * scale, 17 * scale, 51 * scale, 17 * scale, 33 * scale);\r\n    ctx.bezierCurveTo(19 * scale, 12 * scale, 21 * scale, 12 * scale, 32 * scale, 17 * scale);\r\n    ctx.bezierCurveTo(63 * scale, 31 * scale, 66 * scale, 45 * scale, 66 * scale, 54 * scale);\r\n    fill_path(ctx, color, color, 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(91 * scale, 53 * scale);\r\n    ctx.bezierCurveTo(91 * scale, 40 * scale, 98 * scale, 33 * scale, 121 * scale, 20 * scale);\r\n    ctx.bezierCurveTo(137 * scale, 12 * scale, 137 * scale, 16 * scale, 139 * scale, 27 * scale);\r\n    ctx.bezierCurveTo(141 * scale, 49 * scale, 140 * scale, 57 * scale, 134 * scale, 64 * scale);\r\n    fill_path(ctx, color, color, 4 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_polar_bear(scale, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 147 * scale;\r\n    can.height = 172 * scale;\r\n    ctx.globalAlpha = 0.5;\r\n    ctx.translate(0, 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(8 * scale, 50 * scale);\r\n    ctx.bezierCurveTo(15 * scale, 16 * scale, 49 * scale, 6 * scale, 67 * scale, 6 * scale);\r\n    ctx.bezierCurveTo(121 * scale, 3 * scale, 128 * scale, 32 * scale, 135 * scale, 48 * scale);\r\n    ctx.bezierCurveTo(146 * scale, 96 * scale, 124 * scale, 131 * scale, 96 * scale, 135 * scale);\r\n    ctx.bezierCurveTo(96 * scale, 158 * scale, 79 * scale, 156 * scale, 75 * scale, 156 * scale);\r\n    ctx.bezierCurveTo(50 * scale, 154 * scale, 53 * scale, 150 * scale, 52 * scale, 135 * scale);\r\n    ctx.bezierCurveTo(2 * scale, 127 * scale, 3 * scale, 87 * scale, 8 * scale, 50 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.translate(0, -8 * scale);\r\n    ctx.globalAlpha = 1;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(8 * scale, 50 * scale);\r\n    ctx.bezierCurveTo(15 * scale, 16 * scale, 49 * scale, 6 * scale, 67 * scale, 6 * scale);\r\n    ctx.bezierCurveTo(121 * scale, 3 * scale, 128 * scale, 32 * scale, 135 * scale, 48 * scale);\r\n    ctx.bezierCurveTo(146 * scale, 96 * scale, 124 * scale, 131 * scale, 96 * scale, 135 * scale);\r\n    ctx.bezierCurveTo(96 * scale, 158 * scale, 79 * scale, 156 * scale, 75 * scale, 156 * scale);\r\n    ctx.bezierCurveTo(50 * scale, 154 * scale, 53 * scale, 150 * scale, 52 * scale, 135 * scale);\r\n    ctx.bezierCurveTo(2 * scale, 127 * scale, 3 * scale, 87 * scale, 8 * scale, 50 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(14 * scale, 57 * scale);\r\n    ctx.bezierCurveTo(2 * scale, 50 * scale, 5 * scale, 22 * scale, 24 * scale, 22 * scale);\r\n    ctx.bezierCurveTo(41 * scale, 21 * scale, 54 * scale, 32 * scale, 55 * scale, 48 * scale);\r\n    fill_path(ctx, color[1], color[2], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(93 * scale, 47 * scale);\r\n    ctx.bezierCurveTo(94 * scale, 24 * scale, 116 * scale, 21 * scale, 120 * scale, 20 * scale);\r\n    ctx.bezierCurveTo(144 * scale, 17 * scale, 146 * scale, 52 * scale, 133 * scale, 58 * scale);\r\n    fill_path(ctx, color[1], color[2], 4 * scale);\r\n    circle(ctx, 51 * scale, 91 * scale, 9 * scale);\r\n    fill_path(ctx, color[3]);\r\n    circle(ctx, 95 * scale, 91 * scale, 9 * scale);\r\n    fill_path(ctx, color[3]);\r\n    circle(ctx, 91 * scale, 89 * scale, 4 * scale);\r\n    fill_path(ctx, color[4]);\r\n    circle(ctx, 47 * scale, 89 * scale, 4 * scale);\r\n    fill_path(ctx, color[4]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(54 * scale, 133 * scale);\r\n    ctx.bezierCurveTo(56 * scale, 108 * scale, 64 * scale, 99 * scale, 73 * scale, 98 * scale);\r\n    ctx.bezierCurveTo(86 * scale, 97 * scale, 91 * scale, 119 * scale, 93 * scale, 133 * scale);\r\n    ctx.bezierCurveTo(94 * scale, 155 * scale, 90 * scale, 150 * scale, 74 * scale, 155 * scale);\r\n    ctx.bezierCurveTo(50 * scale, 152 * scale, 55 * scale, 145 * scale, 54 * scale, 134 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[5]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(65.25 * scale, 135 * scale);\r\n    ctx.bezierCurveTo(75.25 * scale, 128 * scale, 83.25 * scale, 133 * scale, 83.25 * scale, 138 * scale);\r\n    ctx.bezierCurveTo(88.25 * scale, 148 * scale, 61.25 * scale, 149 * scale, 64.25 * scale, 137 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[6]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(74 * scale, 145 * scale);\r\n    ctx.bezierCurveTo(74 * scale, 148 * scale, 74 * scale, 148 * scale, 74 * scale, 151 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[6], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(19 * scale, 58 * scale);\r\n    ctx.bezierCurveTo(10 * scale, 38 * scale, 18 * scale, 33 * scale, 28 * scale, 34 * scale);\r\n    ctx.bezierCurveTo(41 * scale, 39 * scale, 45 * scale, 45 * scale, 50 * scale, 51 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[6]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(100 * scale, 51 * scale);\r\n    ctx.bezierCurveTo(106 * scale, 36 * scale, 119 * scale, 31 * scale, 128 * scale, 36 * scale);\r\n    ctx.bezierCurveTo(137 * scale, 49 * scale, 128 * scale, 58 * scale, 128 * scale, 60 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[6]);\r\n    return can;\r\n}\r\n;\r\nfunction create_hurt_polar_bear(scale, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 147 * scale;\r\n    can.height = 172 * scale;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(8 * scale, 50 * scale);\r\n    ctx.bezierCurveTo(15 * scale, 16 * scale, 49 * scale, 6 * scale, 67 * scale, 6 * scale);\r\n    ctx.bezierCurveTo(121 * scale, 3 * scale, 128 * scale, 32 * scale, 135 * scale, 48 * scale);\r\n    ctx.bezierCurveTo(146 * scale, 96 * scale, 124 * scale, 131 * scale, 96 * scale, 135 * scale);\r\n    ctx.bezierCurveTo(96 * scale, 158 * scale, 79 * scale, 156 * scale, 75 * scale, 156 * scale);\r\n    ctx.bezierCurveTo(50 * scale, 154 * scale, 53 * scale, 150 * scale, 52 * scale, 135 * scale);\r\n    ctx.bezierCurveTo(2 * scale, 127 * scale, 3 * scale, 87 * scale, 8 * scale, 50 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color, color, 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(14 * scale, 57 * scale);\r\n    ctx.bezierCurveTo(2 * scale, 50 * scale, 5 * scale, 22 * scale, 24 * scale, 22 * scale);\r\n    ctx.bezierCurveTo(41 * scale, 21 * scale, 54 * scale, 32 * scale, 55 * scale, 48 * scale);\r\n    fill_path(ctx, color, color, 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(93 * scale, 47 * scale);\r\n    ctx.bezierCurveTo(94 * scale, 24 * scale, 116 * scale, 21 * scale, 120 * scale, 20 * scale);\r\n    ctx.bezierCurveTo(144 * scale, 17 * scale, 146 * scale, 52 * scale, 133 * scale, 58 * scale);\r\n    fill_path(ctx, color, color, 4 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_dragon(scale, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 271 * scale;\r\n    can.height = 366 * scale;\r\n    ctx.globalAlpha = 0.5;\r\n    ctx.translate(0, 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(133 * scale, 99 * scale);\r\n    ctx.bezierCurveTo(186 * scale, 123 * scale, 199 * scale, 152 * scale, 209 * scale, 169 * scale);\r\n    ctx.bezierCurveTo(228 * scale, 205 * scale, 224 * scale, 245 * scale, 190 * scale, 276 * scale);\r\n    ctx.bezierCurveTo(161 * scale, 296 * scale, 99 * scale, 292 * scale, 79 * scale, 274 * scale);\r\n    ctx.bezierCurveTo(49 * scale, 253 * scale, 47 * scale, 214 * scale, 50 * scale, 197 * scale);\r\n    ctx.bezierCurveTo(61 * scale, 143 * scale, 102 * scale, 113 * scale, 131 * scale, 99 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(73 * scale, 270 * scale);\r\n    ctx.bezierCurveTo(79 * scale, 280 * scale, 77 * scale, 280 * scale, 78 * scale, 287 * scale);\r\n    ctx.bezierCurveTo(78 * scale, 290 * scale, 83 * scale, 291 * scale, 82 * scale, 299 * scale);\r\n    ctx.bezierCurveTo(81 * scale, 301 * scale, 87 * scale, 301 * scale, 92 * scale, 314 * scale);\r\n    ctx.bezierCurveTo(94 * scale, 319 * scale, 100 * scale, 321 * scale, 107 * scale, 320 * scale);\r\n    ctx.bezierCurveTo(111 * scale, 323 * scale, 114 * scale, 324 * scale, 119 * scale, 320 * scale);\r\n    ctx.bezierCurveTo(137 * scale, 321 * scale, 146 * scale, 323 * scale, 139 * scale, 320 * scale);\r\n    ctx.bezierCurveTo(141 * scale, 324 * scale, 150 * scale, 324 * scale, 153 * scale, 320 * scale);\r\n    ctx.bezierCurveTo(168 * scale, 319 * scale, 171 * scale, 316 * scale, 173 * scale, 307 * scale);\r\n    ctx.bezierCurveTo(180 * scale, 305 * scale, 180 * scale, 301 * scale, 178 * scale, 296 * scale);\r\n    ctx.bezierCurveTo(183 * scale, 296 * scale, 185 * scale, 289 * scale, 188 * scale, 279 * scale);\r\n    ctx.bezierCurveTo(171 * scale, 286 * scale, 149 * scale, 290 * scale, 132 * scale, 289 * scale);\r\n    ctx.bezierCurveTo(101 * scale, 290 * scale, 86 * scale, 280 * scale, 74 * scale, 271 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(76 * scale, 252 * scale);\r\n    ctx.bezierCurveTo(85 * scale, 294 * scale, 96 * scale, 314 * scale, 103 * scale, 314 * scale);\r\n    ctx.bezierCurveTo(106 * scale, 316 * scale, 151 * scale, 314 * scale, 156 * scale, 314 * scale);\r\n    ctx.bezierCurveTo(169 * scale, 317 * scale, 182 * scale, 285 * scale, 191 * scale, 256 * scale);\r\n    ctx.bezierCurveTo(134.5 * scale, 254 * scale, 134.5 * scale, 254 * scale, 78 * scale, 252 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(84 * scale, 257 * scale);\r\n    ctx.bezierCurveTo(122 * scale, 273 * scale, 146 * scale, 268 * scale, 179 * scale, 261 * scale);\r\n    ctx.bezierCurveTo(190 * scale, 258 * scale, 187 * scale, 266 * scale, 178 * scale, 272 * scale);\r\n    ctx.bezierCurveTo(160 * scale, 284 * scale, 123 * scale, 282 * scale, 100 * scale, 277 * scale);\r\n    ctx.bezierCurveTo(73 * scale, 260 * scale, 79 * scale, 257 * scale, 84 * scale, 257 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(125 * scale, 65 * scale);\r\n    ctx.bezierCurveTo(133 * scale, 45 * scale, 136 * scale, 42 * scale, 141 * scale, 55 * scale);\r\n    ctx.bezierCurveTo(151 * scale, 96 * scale, 164 * scale, 117 * scale, 175 * scale, 134 * scale);\r\n    ctx.bezierCurveTo(203 * scale, 181 * scale, 207 * scale, 182 * scale, 208 * scale, 215 * scale);\r\n    ctx.bezierCurveTo(206 * scale, 240 * scale, 205 * scale, 246 * scale, 184 * scale, 258 * scale);\r\n    ctx.bezierCurveTo(161 * scale, 267 * scale, 131 * scale, 272 * scale, 86 * scale, 258 * scale);\r\n    ctx.bezierCurveTo(67 * scale, 252 * scale, 68 * scale, 239 * scale, 64 * scale, 216 * scale);\r\n    ctx.bezierCurveTo(62 * scale, 194 * scale, 72 * scale, 169 * scale, 92 * scale, 142 * scale);\r\n    ctx.bezierCurveTo(106 * scale, 121 * scale, 114 * scale, 101 * scale, 125 * scale, 65 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(115 * scale, 37 * scale);\r\n    ctx.bezierCurveTo(116 * scale, 28 * scale, 119 * scale, 27 * scale, 126 * scale, 37 * scale);\r\n    ctx.bezierCurveTo(134 * scale, 48 * scale, 134 * scale, 49 * scale, 132 * scale, 59 * scale);\r\n    ctx.bezierCurveTo(131 * scale, 67 * scale, 127 * scale, 65 * scale, 120 * scale, 56 * scale);\r\n    ctx.bezierCurveTo(114 * scale, 49 * scale, 113 * scale, 43 * scale, 115 * scale, 38 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(146 * scale, 34 * scale);\r\n    ctx.bezierCurveTo(152 * scale, 28 * scale, 155 * scale, 27 * scale, 157 * scale, 39 * scale);\r\n    ctx.bezierCurveTo(157 * scale, 45 * scale, 157 * scale, 49 * scale, 150 * scale, 56 * scale);\r\n    ctx.bezierCurveTo(141 * scale, 66 * scale, 138 * scale, 66 * scale, 138 * scale, 57 * scale);\r\n    ctx.bezierCurveTo(137 * scale, 50 * scale, 137 * scale, 47 * scale, 141 * scale, 42 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(143 * scale, 69 * scale);\r\n    ctx.bezierCurveTo(148 * scale, 56 * scale, 156 * scale, 50 * scale, 158 * scale, 58 * scale);\r\n    ctx.bezierCurveTo(159 * scale, 64 * scale, 160 * scale, 67 * scale, 153 * scale, 77 * scale);\r\n    ctx.bezierCurveTo(148 * scale, 83 * scale, 145 * scale, 84 * scale, 143 * scale, 77 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(149 * scale, 92 * scale);\r\n    ctx.bezierCurveTo(149 * scale, 89 * scale, 151 * scale, 84 * scale, 156 * scale, 79 * scale);\r\n    ctx.bezierCurveTo(161 * scale, 73 * scale, 163 * scale, 78 * scale, 162 * scale, 86 * scale);\r\n    ctx.bezierCurveTo(161 * scale, 91 * scale, 155 * scale, 99 * scale, 152 * scale, 98 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(111 * scale, 61 * scale);\r\n    ctx.bezierCurveTo(114 * scale, 51 * scale, 117 * scale, 51 * scale, 124 * scale, 64 * scale);\r\n    ctx.bezierCurveTo(128 * scale, 68 * scale, 128 * scale, 76 * scale, 126 * scale, 79 * scale);\r\n    ctx.bezierCurveTo(123 * scale, 84 * scale, 122 * scale, 82 * scale, 115 * scale, 74 * scale);\r\n    ctx.bezierCurveTo(112 * scale, 67 * scale, 115 * scale, 74 * scale, 115 * scale, 74 * scale);\r\n    ctx.bezierCurveTo(111 * scale, 68 * scale, 111 * scale, 66 * scale, 111 * scale, 62 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(107 * scale, 81 * scale);\r\n    ctx.bezierCurveTo(108 * scale, 74 * scale, 112 * scale, 73 * scale, 118 * scale, 84 * scale);\r\n    ctx.bezierCurveTo(122 * scale, 88 * scale, 122 * scale, 93 * scale, 121 * scale, 98 * scale);\r\n    ctx.bezierCurveTo(114 * scale, 98 * scale, 113 * scale, 98 * scale, 109 * scale, 90 * scale);\r\n    ctx.bezierCurveTo(107 * scale, 87 * scale, 106 * scale, 85 * scale, 107 * scale, 82 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(0, -10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(133 * scale, 99 * scale);\r\n    ctx.bezierCurveTo(186 * scale, 123 * scale, 199 * scale, 152 * scale, 209 * scale, 169 * scale);\r\n    ctx.bezierCurveTo(228 * scale, 205 * scale, 224 * scale, 245 * scale, 190 * scale, 276 * scale);\r\n    ctx.bezierCurveTo(161 * scale, 296 * scale, 99 * scale, 292 * scale, 79 * scale, 274 * scale);\r\n    ctx.bezierCurveTo(49 * scale, 253 * scale, 47 * scale, 214 * scale, 50 * scale, 197 * scale);\r\n    ctx.bezierCurveTo(61 * scale, 143 * scale, 102 * scale, 113 * scale, 131 * scale, 99 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[3], 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(73 * scale, 270 * scale);\r\n    ctx.bezierCurveTo(79 * scale, 280 * scale, 77 * scale, 280 * scale, 78 * scale, 287 * scale);\r\n    ctx.bezierCurveTo(78 * scale, 290 * scale, 83 * scale, 291 * scale, 82 * scale, 299 * scale);\r\n    ctx.bezierCurveTo(81 * scale, 301 * scale, 87 * scale, 301 * scale, 92 * scale, 314 * scale);\r\n    ctx.bezierCurveTo(94 * scale, 319 * scale, 100 * scale, 321 * scale, 107 * scale, 320 * scale);\r\n    ctx.bezierCurveTo(111 * scale, 323 * scale, 114 * scale, 324 * scale, 119 * scale, 320 * scale);\r\n    ctx.bezierCurveTo(137 * scale, 321 * scale, 146 * scale, 323 * scale, 139 * scale, 320 * scale);\r\n    ctx.bezierCurveTo(141 * scale, 324 * scale, 150 * scale, 324 * scale, 153 * scale, 320 * scale);\r\n    ctx.bezierCurveTo(168 * scale, 319 * scale, 171 * scale, 316 * scale, 173 * scale, 307 * scale);\r\n    ctx.bezierCurveTo(180 * scale, 305 * scale, 180 * scale, 301 * scale, 178 * scale, 296 * scale);\r\n    ctx.bezierCurveTo(183 * scale, 296 * scale, 185 * scale, 289 * scale, 188 * scale, 279 * scale);\r\n    ctx.bezierCurveTo(171 * scale, 286 * scale, 149 * scale, 290 * scale, 132 * scale, 289 * scale);\r\n    ctx.bezierCurveTo(101 * scale, 290 * scale, 86 * scale, 280 * scale, 74 * scale, 271 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[3], 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(76 * scale, 252 * scale);\r\n    ctx.bezierCurveTo(85 * scale, 294 * scale, 96 * scale, 314 * scale, 103 * scale, 314 * scale);\r\n    ctx.bezierCurveTo(106 * scale, 316 * scale, 151 * scale, 314 * scale, 156 * scale, 314 * scale);\r\n    ctx.bezierCurveTo(169 * scale, 317 * scale, 182 * scale, 285 * scale, 191 * scale, 256 * scale);\r\n    ctx.bezierCurveTo(134.5 * scale, 254 * scale, 134.5 * scale, 254 * scale, 78 * scale, 252 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[3], 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(84 * scale, 257 * scale);\r\n    ctx.bezierCurveTo(122 * scale, 273 * scale, 146 * scale, 268 * scale, 179 * scale, 261 * scale);\r\n    ctx.bezierCurveTo(190 * scale, 258 * scale, 187 * scale, 266 * scale, 178 * scale, 272 * scale);\r\n    ctx.bezierCurveTo(160 * scale, 284 * scale, 123 * scale, 282 * scale, 100 * scale, 277 * scale);\r\n    ctx.bezierCurveTo(73 * scale, 260 * scale, 79 * scale, 257 * scale, 84 * scale, 257 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[3], 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(125 * scale, 65 * scale);\r\n    ctx.bezierCurveTo(133 * scale, 45 * scale, 136 * scale, 42 * scale, 141 * scale, 55 * scale);\r\n    ctx.bezierCurveTo(151 * scale, 96 * scale, 164 * scale, 117 * scale, 175 * scale, 134 * scale);\r\n    ctx.bezierCurveTo(203 * scale, 181 * scale, 207 * scale, 182 * scale, 208 * scale, 215 * scale);\r\n    ctx.bezierCurveTo(206 * scale, 240 * scale, 205 * scale, 246 * scale, 184 * scale, 258 * scale);\r\n    ctx.bezierCurveTo(161 * scale, 267 * scale, 131 * scale, 272 * scale, 86 * scale, 258 * scale);\r\n    ctx.bezierCurveTo(67 * scale, 252 * scale, 68 * scale, 239 * scale, 64 * scale, 216 * scale);\r\n    ctx.bezierCurveTo(62 * scale, 194 * scale, 72 * scale, 169 * scale, 92 * scale, 142 * scale);\r\n    ctx.bezierCurveTo(106 * scale, 121 * scale, 114 * scale, 101 * scale, 125 * scale, 65 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[3], 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(115 * scale, 37 * scale);\r\n    ctx.bezierCurveTo(116 * scale, 28 * scale, 119 * scale, 27 * scale, 126 * scale, 37 * scale);\r\n    ctx.bezierCurveTo(134 * scale, 48 * scale, 134 * scale, 49 * scale, 132 * scale, 59 * scale);\r\n    ctx.bezierCurveTo(131 * scale, 67 * scale, 127 * scale, 65 * scale, 120 * scale, 56 * scale);\r\n    ctx.bezierCurveTo(114 * scale, 49 * scale, 113 * scale, 43 * scale, 115 * scale, 38 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[3], 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(146 * scale, 34 * scale);\r\n    ctx.bezierCurveTo(152 * scale, 28 * scale, 155 * scale, 27 * scale, 157 * scale, 39 * scale);\r\n    ctx.bezierCurveTo(157 * scale, 45 * scale, 157 * scale, 49 * scale, 150 * scale, 56 * scale);\r\n    ctx.bezierCurveTo(141 * scale, 66 * scale, 138 * scale, 66 * scale, 138 * scale, 57 * scale);\r\n    ctx.bezierCurveTo(137 * scale, 50 * scale, 137 * scale, 47 * scale, 141 * scale, 42 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[3], 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(143 * scale, 69 * scale);\r\n    ctx.bezierCurveTo(148 * scale, 56 * scale, 156 * scale, 50 * scale, 158 * scale, 58 * scale);\r\n    ctx.bezierCurveTo(159 * scale, 64 * scale, 160 * scale, 67 * scale, 153 * scale, 77 * scale);\r\n    ctx.bezierCurveTo(148 * scale, 83 * scale, 145 * scale, 84 * scale, 143 * scale, 77 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[3], 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(149 * scale, 92 * scale);\r\n    ctx.bezierCurveTo(149 * scale, 89 * scale, 151 * scale, 84 * scale, 156 * scale, 79 * scale);\r\n    ctx.bezierCurveTo(161 * scale, 73 * scale, 163 * scale, 78 * scale, 162 * scale, 86 * scale);\r\n    ctx.bezierCurveTo(161 * scale, 91 * scale, 155 * scale, 99 * scale, 152 * scale, 98 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[3], 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(111 * scale, 61 * scale);\r\n    ctx.bezierCurveTo(114 * scale, 51 * scale, 117 * scale, 51 * scale, 124 * scale, 64 * scale);\r\n    ctx.bezierCurveTo(128 * scale, 68 * scale, 128 * scale, 76 * scale, 126 * scale, 79 * scale);\r\n    ctx.bezierCurveTo(123 * scale, 84 * scale, 122 * scale, 82 * scale, 115 * scale, 74 * scale);\r\n    ctx.bezierCurveTo(112 * scale, 67 * scale, 115 * scale, 74 * scale, 115 * scale, 74 * scale);\r\n    ctx.bezierCurveTo(111 * scale, 68 * scale, 111 * scale, 66 * scale, 111 * scale, 62 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[3], 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(107 * scale, 81 * scale);\r\n    ctx.bezierCurveTo(108 * scale, 74 * scale, 112 * scale, 73 * scale, 118 * scale, 84 * scale);\r\n    ctx.bezierCurveTo(122 * scale, 88 * scale, 122 * scale, 93 * scale, 121 * scale, 98 * scale);\r\n    ctx.bezierCurveTo(114 * scale, 98 * scale, 113 * scale, 98 * scale, 109 * scale, 90 * scale);\r\n    ctx.bezierCurveTo(107 * scale, 87 * scale, 106 * scale, 85 * scale, 107 * scale, 82 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[3], 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(133 * scale, 99 * scale);\r\n    ctx.bezierCurveTo(186 * scale, 123 * scale, 199 * scale, 152 * scale, 209 * scale, 169 * scale);\r\n    ctx.bezierCurveTo(228 * scale, 205 * scale, 224 * scale, 245 * scale, 190 * scale, 276 * scale);\r\n    ctx.bezierCurveTo(161 * scale, 296 * scale, 99 * scale, 292 * scale, 79 * scale, 274 * scale);\r\n    ctx.bezierCurveTo(49 * scale, 253 * scale, 47 * scale, 214 * scale, 50 * scale, 197 * scale);\r\n    ctx.bezierCurveTo(61 * scale, 143 * scale, 102 * scale, 113 * scale, 131 * scale, 99 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(73 * scale, 270 * scale);\r\n    ctx.bezierCurveTo(79 * scale, 280 * scale, 77 * scale, 280 * scale, 78 * scale, 287 * scale);\r\n    ctx.bezierCurveTo(78 * scale, 290 * scale, 83 * scale, 291 * scale, 82 * scale, 299 * scale);\r\n    ctx.bezierCurveTo(81 * scale, 301 * scale, 87 * scale, 301 * scale, 92 * scale, 314 * scale);\r\n    ctx.bezierCurveTo(94 * scale, 319 * scale, 100 * scale, 321 * scale, 107 * scale, 320 * scale);\r\n    ctx.bezierCurveTo(111 * scale, 323 * scale, 114 * scale, 324 * scale, 119 * scale, 320 * scale);\r\n    ctx.bezierCurveTo(137 * scale, 321 * scale, 146 * scale, 323 * scale, 139 * scale, 320 * scale);\r\n    ctx.bezierCurveTo(141 * scale, 324 * scale, 150 * scale, 324 * scale, 153 * scale, 320 * scale);\r\n    ctx.bezierCurveTo(168 * scale, 319 * scale, 171 * scale, 316 * scale, 173 * scale, 307 * scale);\r\n    ctx.bezierCurveTo(180 * scale, 305 * scale, 180 * scale, 301 * scale, 178 * scale, 296 * scale);\r\n    ctx.bezierCurveTo(183 * scale, 296 * scale, 185 * scale, 289 * scale, 188 * scale, 279 * scale);\r\n    ctx.bezierCurveTo(171 * scale, 286 * scale, 149 * scale, 290 * scale, 132 * scale, 289 * scale);\r\n    ctx.bezierCurveTo(101 * scale, 290 * scale, 86 * scale, 280 * scale, 74 * scale, 271 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[5]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(76 * scale, 252 * scale);\r\n    ctx.bezierCurveTo(85 * scale, 294 * scale, 96 * scale, 314 * scale, 103 * scale, 314 * scale);\r\n    ctx.bezierCurveTo(106 * scale, 316 * scale, 151 * scale, 314 * scale, 156 * scale, 314 * scale);\r\n    ctx.bezierCurveTo(169 * scale, 317 * scale, 182 * scale, 285 * scale, 191 * scale, 256 * scale);\r\n    ctx.bezierCurveTo(134.5 * scale, 254 * scale, 134.5 * scale, 254 * scale, 78 * scale, 252 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(84 * scale, 257 * scale);\r\n    ctx.bezierCurveTo(122 * scale, 273 * scale, 146 * scale, 268 * scale, 179 * scale, 261 * scale);\r\n    ctx.bezierCurveTo(190 * scale, 258 * scale, 187 * scale, 266 * scale, 178 * scale, 272 * scale);\r\n    ctx.bezierCurveTo(160 * scale, 284 * scale, 123 * scale, 282 * scale, 100 * scale, 277 * scale);\r\n    ctx.bezierCurveTo(73 * scale, 260 * scale, 79 * scale, 257 * scale, 84 * scale, 257 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1]);\r\n    circle(ctx, 102 * scale, 269 * scale, 11 * scale);\r\n    fill_path(ctx, color[3]);\r\n    circle(ctx, 98 * scale, 266 * scale, 5 * scale);\r\n    fill_path(ctx, color[6]);\r\n    circle(ctx, 168 * scale, 269 * scale, 11 * scale);\r\n    fill_path(ctx, color[3]);\r\n    circle(ctx, 164 * scale, 266 * scale, 5 * scale);\r\n    fill_path(ctx, color[6]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(125 * scale, 65 * scale);\r\n    ctx.bezierCurveTo(133 * scale, 45 * scale, 136 * scale, 42 * scale, 141 * scale, 55 * scale);\r\n    ctx.bezierCurveTo(151 * scale, 96 * scale, 164 * scale, 117 * scale, 175 * scale, 134 * scale);\r\n    ctx.bezierCurveTo(203 * scale, 181 * scale, 207 * scale, 182 * scale, 208 * scale, 215 * scale);\r\n    ctx.bezierCurveTo(206 * scale, 240 * scale, 205 * scale, 246 * scale, 184 * scale, 258 * scale);\r\n    ctx.bezierCurveTo(161 * scale, 267 * scale, 131 * scale, 272 * scale, 86 * scale, 258 * scale);\r\n    ctx.bezierCurveTo(67 * scale, 252 * scale, 68 * scale, 239 * scale, 64 * scale, 216 * scale);\r\n    ctx.bezierCurveTo(62 * scale, 194 * scale, 72 * scale, 169 * scale, 92 * scale, 142 * scale);\r\n    ctx.bezierCurveTo(106 * scale, 121 * scale, 114 * scale, 101 * scale, 125 * scale, 65 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(115 * scale, 235 * scale);\r\n    ctx.bezierCurveTo(118 * scale, 258 * scale, 137 * scale, 268 * scale, 148 * scale, 246 * scale);\r\n    ctx.bezierCurveTo(156 * scale, 228 * scale, 152 * scale, 169 * scale, 150 * scale, 140 * scale);\r\n    ctx.bezierCurveTo(147 * scale, 87 * scale, 143 * scale, 69 * scale, 142 * scale, 60 * scale);\r\n    ctx.bezierCurveTo(136 * scale, 44 * scale, 132 * scale, 43 * scale, 127 * scale, 62 * scale);\r\n    ctx.bezierCurveTo(119 * scale, 116 * scale, 119 * scale, 140 * scale, 116 * scale, 166 * scale);\r\n    ctx.bezierCurveTo(113 * scale, 202 * scale, 113 * scale, 223 * scale, 115 * scale, 233 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(132 * scale, 219 * scale);\r\n    ctx.bezierCurveTo(140 * scale, 229 * scale, 142 * scale, 231 * scale, 145 * scale, 237 * scale);\r\n    ctx.bezierCurveTo(145 * scale, 245 * scale, 139 * scale, 249 * scale, 133 * scale, 249 * scale);\r\n    ctx.bezierCurveTo(123 * scale, 248 * scale, 123 * scale, 243 * scale, 121 * scale, 239 * scale);\r\n    ctx.bezierCurveTo(126 * scale, 227 * scale, 129 * scale, 223 * scale, 132 * scale, 219 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[8]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(133 * scale, 179 * scale);\r\n    ctx.bezierCurveTo(140 * scale, 188.5 * scale, 140 * scale, 188.5 * scale, 147 * scale, 198 * scale);\r\n    ctx.bezierCurveTo(148 * scale, 209 * scale, 142 * scale, 214 * scale, 133 * scale, 214 * scale);\r\n    ctx.bezierCurveTo(121 * scale, 211 * scale, 121 * scale, 207 * scale, 120 * scale, 200 * scale);\r\n    ctx.bezierCurveTo(126.5 * scale, 189.5 * scale, 126.5 * scale, 189.5 * scale, 133 * scale, 179 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[8]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(133 * scale, 143 * scale);\r\n    ctx.bezierCurveTo(139 * scale, 151.5 * scale, 139 * scale, 151.5 * scale, 145 * scale, 160 * scale);\r\n    ctx.bezierCurveTo(143 * scale, 167 * scale, 140 * scale, 170 * scale, 134 * scale, 170 * scale);\r\n    ctx.bezierCurveTo(128 * scale, 169 * scale, 124 * scale, 167 * scale, 123 * scale, 161 * scale);\r\n    ctx.bezierCurveTo(128 * scale, 152 * scale, 128 * scale, 152 * scale, 133 * scale, 143 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[8]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(133 * scale, 115 * scale);\r\n    ctx.bezierCurveTo(137.5 * scale, 121.5 * scale, 137.5 * scale, 121.5 * scale, 142 * scale, 128 * scale);\r\n    ctx.bezierCurveTo(141 * scale, 133 * scale, 138 * scale, 135 * scale, 133 * scale, 135 * scale);\r\n    ctx.bezierCurveTo(129 * scale, 135 * scale, 125 * scale, 132 * scale, 125 * scale, 129 * scale);\r\n    ctx.bezierCurveTo(129 * scale, 122 * scale, 129 * scale, 122 * scale, 133 * scale, 115 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[8]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(133 * scale, 94 * scale);\r\n    ctx.bezierCurveTo(136.5 * scale, 98.5 * scale, 136.5 * scale, 98.5 * scale, 140 * scale, 103 * scale);\r\n    ctx.bezierCurveTo(139 * scale, 109 * scale, 137 * scale, 109 * scale, 133 * scale, 110 * scale);\r\n    ctx.bezierCurveTo(127 * scale, 108 * scale, 129 * scale, 107 * scale, 127 * scale, 105 * scale);\r\n    ctx.bezierCurveTo(130 * scale, 99.5 * scale, 130 * scale, 99.5 * scale, 133 * scale, 94 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[8]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(130 * scale, 279 * scale);\r\n    ctx.bezierCurveTo(136.5 * scale, 287.5 * scale, 136.5 * scale, 287.5 * scale, 143 * scale, 296 * scale);\r\n    ctx.bezierCurveTo(143 * scale, 302 * scale, 139 * scale, 309 * scale, 131 * scale, 308 * scale);\r\n    ctx.bezierCurveTo(123 * scale, 306 * scale, 121 * scale, 303 * scale, 120 * scale, 297 * scale);\r\n    ctx.bezierCurveTo(125.5 * scale, 288.5 * scale, 125.5 * scale, 288.5 * scale, 131 * scale, 280 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[8]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(147 * scale, 303 * scale);\r\n    ctx.bezierCurveTo(151 * scale, 311 * scale, 151 * scale, 319 * scale, 147 * scale, 321 * scale);\r\n    ctx.bezierCurveTo(138 * scale, 320 * scale, 145 * scale, 308 * scale, 147 * scale, 303 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[8]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(115 * scale, 303 * scale);\r\n    ctx.bezierCurveTo(115 * scale, 312 * scale, 118 * scale, 319 * scale, 115 * scale, 319 * scale);\r\n    ctx.bezierCurveTo(112 * scale, 324 * scale, 109 * scale, 318 * scale, 109 * scale, 314 * scale);\r\n    ctx.bezierCurveTo(109 * scale, 308 * scale, 112 * scale, 303 * scale, 115 * scale, 303 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[8]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(89 * scale, 280 * scale);\r\n    ctx.bezierCurveTo(83 * scale, 279 * scale, 80 * scale, 281 * scale, 81 * scale, 286 * scale);\r\n    ctx.bezierCurveTo(83 * scale, 290 * scale, 84 * scale, 290 * scale, 87 * scale, 286 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[8]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(94 * scale, 290 * scale);\r\n    ctx.bezierCurveTo(93 * scale, 294 * scale, 90 * scale, 303 * scale, 86 * scale, 298 * scale);\r\n    ctx.bezierCurveTo(84 * scale, 295 * scale, 84 * scale, 291 * scale, 89 * scale, 291 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[8]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(163 * scale, 295 * scale);\r\n    ctx.bezierCurveTo(175 * scale, 294 * scale, 176 * scale, 296 * scale, 175 * scale, 301 * scale);\r\n    ctx.bezierCurveTo(174 * scale, 305 * scale, 171 * scale, 305 * scale, 166 * scale, 300 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[8]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(172 * scale, 286 * scale);\r\n    ctx.bezierCurveTo(180 * scale, 285 * scale, 181 * scale, 285 * scale, 180 * scale, 291 * scale);\r\n    ctx.bezierCurveTo(176 * scale, 295 * scale, 174 * scale, 294 * scale, 172 * scale, 286 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[8]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(115 * scale, 37 * scale);\r\n    ctx.bezierCurveTo(116 * scale, 28 * scale, 119 * scale, 27 * scale, 126 * scale, 37 * scale);\r\n    ctx.bezierCurveTo(134 * scale, 48 * scale, 134 * scale, 49 * scale, 132 * scale, 59 * scale);\r\n    ctx.bezierCurveTo(131 * scale, 67 * scale, 127 * scale, 65 * scale, 120 * scale, 56 * scale);\r\n    ctx.bezierCurveTo(114 * scale, 49 * scale, 113 * scale, 43 * scale, 115 * scale, 38 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[7]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(146 * scale, 34 * scale);\r\n    ctx.bezierCurveTo(152 * scale, 28 * scale, 155 * scale, 27 * scale, 157 * scale, 39 * scale);\r\n    ctx.bezierCurveTo(157 * scale, 45 * scale, 157 * scale, 49 * scale, 150 * scale, 56 * scale);\r\n    ctx.bezierCurveTo(141 * scale, 66 * scale, 138 * scale, 66 * scale, 138 * scale, 57 * scale);\r\n    ctx.bezierCurveTo(137 * scale, 50 * scale, 137 * scale, 47 * scale, 141 * scale, 42 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[7]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(143 * scale, 69 * scale);\r\n    ctx.bezierCurveTo(148 * scale, 56 * scale, 156 * scale, 50 * scale, 158 * scale, 58 * scale);\r\n    ctx.bezierCurveTo(159 * scale, 64 * scale, 160 * scale, 67 * scale, 153 * scale, 77 * scale);\r\n    ctx.bezierCurveTo(148 * scale, 83 * scale, 145 * scale, 84 * scale, 143 * scale, 77 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[7]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(149 * scale, 92 * scale);\r\n    ctx.bezierCurveTo(149 * scale, 89 * scale, 151 * scale, 84 * scale, 156 * scale, 79 * scale);\r\n    ctx.bezierCurveTo(161 * scale, 73 * scale, 163 * scale, 78 * scale, 162 * scale, 86 * scale);\r\n    ctx.bezierCurveTo(161 * scale, 91 * scale, 155 * scale, 99 * scale, 152 * scale, 98 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[7]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(111 * scale, 61 * scale);\r\n    ctx.bezierCurveTo(114 * scale, 51 * scale, 117 * scale, 51 * scale, 124 * scale, 64 * scale);\r\n    ctx.bezierCurveTo(128 * scale, 68 * scale, 128 * scale, 76 * scale, 126 * scale, 79 * scale);\r\n    ctx.bezierCurveTo(123 * scale, 84 * scale, 122 * scale, 82 * scale, 115 * scale, 74 * scale);\r\n    ctx.bezierCurveTo(112 * scale, 67 * scale, 115 * scale, 74 * scale, 115 * scale, 74 * scale);\r\n    ctx.bezierCurveTo(111 * scale, 68 * scale, 111 * scale, 66 * scale, 111 * scale, 62 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[7]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(107 * scale, 81 * scale);\r\n    ctx.bezierCurveTo(108 * scale, 74 * scale, 112 * scale, 73 * scale, 118 * scale, 84 * scale);\r\n    ctx.bezierCurveTo(122 * scale, 88 * scale, 122 * scale, 93 * scale, 121 * scale, 98 * scale);\r\n    ctx.bezierCurveTo(114 * scale, 98 * scale, 113 * scale, 98 * scale, 109 * scale, 90 * scale);\r\n    ctx.bezierCurveTo(107 * scale, 87 * scale, 106 * scale, 85 * scale, 107 * scale, 82 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[7]);\r\n    return can;\r\n}\r\n;\r\nfunction create_hurt_dragon(scale, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 271 * scale;\r\n    can.height = 366 * scale;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(133 * scale, 99 * scale);\r\n    ctx.bezierCurveTo(186 * scale, 123 * scale, 199 * scale, 152 * scale, 209 * scale, 169 * scale);\r\n    ctx.bezierCurveTo(228 * scale, 205 * scale, 224 * scale, 245 * scale, 190 * scale, 276 * scale);\r\n    ctx.bezierCurveTo(161 * scale, 296 * scale, 99 * scale, 292 * scale, 79 * scale, 274 * scale);\r\n    ctx.bezierCurveTo(49 * scale, 253 * scale, 47 * scale, 214 * scale, 50 * scale, 197 * scale);\r\n    ctx.bezierCurveTo(61 * scale, 143 * scale, 102 * scale, 113 * scale, 131 * scale, 99 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(73 * scale, 270 * scale);\r\n    ctx.bezierCurveTo(79 * scale, 280 * scale, 77 * scale, 280 * scale, 78 * scale, 287 * scale);\r\n    ctx.bezierCurveTo(78 * scale, 290 * scale, 83 * scale, 291 * scale, 82 * scale, 299 * scale);\r\n    ctx.bezierCurveTo(81 * scale, 301 * scale, 87 * scale, 301 * scale, 92 * scale, 314 * scale);\r\n    ctx.bezierCurveTo(94 * scale, 319 * scale, 100 * scale, 321 * scale, 107 * scale, 320 * scale);\r\n    ctx.bezierCurveTo(111 * scale, 323 * scale, 114 * scale, 324 * scale, 119 * scale, 320 * scale);\r\n    ctx.bezierCurveTo(137 * scale, 321 * scale, 146 * scale, 323 * scale, 139 * scale, 320 * scale);\r\n    ctx.bezierCurveTo(141 * scale, 324 * scale, 150 * scale, 324 * scale, 153 * scale, 320 * scale);\r\n    ctx.bezierCurveTo(168 * scale, 319 * scale, 171 * scale, 316 * scale, 173 * scale, 307 * scale);\r\n    ctx.bezierCurveTo(180 * scale, 305 * scale, 180 * scale, 301 * scale, 178 * scale, 296 * scale);\r\n    ctx.bezierCurveTo(183 * scale, 296 * scale, 185 * scale, 289 * scale, 188 * scale, 279 * scale);\r\n    ctx.bezierCurveTo(171 * scale, 286 * scale, 149 * scale, 290 * scale, 132 * scale, 289 * scale);\r\n    ctx.bezierCurveTo(101 * scale, 290 * scale, 86 * scale, 280 * scale, 74 * scale, 271 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(76 * scale, 252 * scale);\r\n    ctx.bezierCurveTo(85 * scale, 294 * scale, 96 * scale, 314 * scale, 103 * scale, 314 * scale);\r\n    ctx.bezierCurveTo(106 * scale, 316 * scale, 151 * scale, 314 * scale, 156 * scale, 314 * scale);\r\n    ctx.bezierCurveTo(169 * scale, 317 * scale, 182 * scale, 285 * scale, 191 * scale, 256 * scale);\r\n    ctx.bezierCurveTo(134.5 * scale, 254 * scale, 134.5 * scale, 254 * scale, 78 * scale, 252 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(84 * scale, 257 * scale);\r\n    ctx.bezierCurveTo(122 * scale, 273 * scale, 146 * scale, 268 * scale, 179 * scale, 261 * scale);\r\n    ctx.bezierCurveTo(190 * scale, 258 * scale, 187 * scale, 266 * scale, 178 * scale, 272 * scale);\r\n    ctx.bezierCurveTo(160 * scale, 284 * scale, 123 * scale, 282 * scale, 100 * scale, 277 * scale);\r\n    ctx.bezierCurveTo(73 * scale, 260 * scale, 79 * scale, 257 * scale, 84 * scale, 257 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(125 * scale, 65 * scale);\r\n    ctx.bezierCurveTo(133 * scale, 45 * scale, 136 * scale, 42 * scale, 141 * scale, 55 * scale);\r\n    ctx.bezierCurveTo(151 * scale, 96 * scale, 164 * scale, 117 * scale, 175 * scale, 134 * scale);\r\n    ctx.bezierCurveTo(203 * scale, 181 * scale, 207 * scale, 182 * scale, 208 * scale, 215 * scale);\r\n    ctx.bezierCurveTo(206 * scale, 240 * scale, 205 * scale, 246 * scale, 184 * scale, 258 * scale);\r\n    ctx.bezierCurveTo(161 * scale, 267 * scale, 131 * scale, 272 * scale, 86 * scale, 258 * scale);\r\n    ctx.bezierCurveTo(67 * scale, 252 * scale, 68 * scale, 239 * scale, 64 * scale, 216 * scale);\r\n    ctx.bezierCurveTo(62 * scale, 194 * scale, 72 * scale, 169 * scale, 92 * scale, 142 * scale);\r\n    ctx.bezierCurveTo(106 * scale, 121 * scale, 114 * scale, 101 * scale, 125 * scale, 65 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(115 * scale, 37 * scale);\r\n    ctx.bezierCurveTo(116 * scale, 28 * scale, 119 * scale, 27 * scale, 126 * scale, 37 * scale);\r\n    ctx.bezierCurveTo(134 * scale, 48 * scale, 134 * scale, 49 * scale, 132 * scale, 59 * scale);\r\n    ctx.bezierCurveTo(131 * scale, 67 * scale, 127 * scale, 65 * scale, 120 * scale, 56 * scale);\r\n    ctx.bezierCurveTo(114 * scale, 49 * scale, 113 * scale, 43 * scale, 115 * scale, 38 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(146 * scale, 34 * scale);\r\n    ctx.bezierCurveTo(152 * scale, 28 * scale, 155 * scale, 27 * scale, 157 * scale, 39 * scale);\r\n    ctx.bezierCurveTo(157 * scale, 45 * scale, 157 * scale, 49 * scale, 150 * scale, 56 * scale);\r\n    ctx.bezierCurveTo(141 * scale, 66 * scale, 138 * scale, 66 * scale, 138 * scale, 57 * scale);\r\n    ctx.bezierCurveTo(137 * scale, 50 * scale, 137 * scale, 47 * scale, 141 * scale, 42 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(143 * scale, 69 * scale);\r\n    ctx.bezierCurveTo(148 * scale, 56 * scale, 156 * scale, 50 * scale, 158 * scale, 58 * scale);\r\n    ctx.bezierCurveTo(159 * scale, 64 * scale, 160 * scale, 67 * scale, 153 * scale, 77 * scale);\r\n    ctx.bezierCurveTo(148 * scale, 83 * scale, 145 * scale, 84 * scale, 143 * scale, 77 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(149 * scale, 92 * scale);\r\n    ctx.bezierCurveTo(149 * scale, 89 * scale, 151 * scale, 84 * scale, 156 * scale, 79 * scale);\r\n    ctx.bezierCurveTo(161 * scale, 73 * scale, 163 * scale, 78 * scale, 162 * scale, 86 * scale);\r\n    ctx.bezierCurveTo(161 * scale, 91 * scale, 155 * scale, 99 * scale, 152 * scale, 98 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(111 * scale, 61 * scale);\r\n    ctx.bezierCurveTo(114 * scale, 51 * scale, 117 * scale, 51 * scale, 124 * scale, 64 * scale);\r\n    ctx.bezierCurveTo(128 * scale, 68 * scale, 128 * scale, 76 * scale, 126 * scale, 79 * scale);\r\n    ctx.bezierCurveTo(123 * scale, 84 * scale, 122 * scale, 82 * scale, 115 * scale, 74 * scale);\r\n    ctx.bezierCurveTo(112 * scale, 67 * scale, 115 * scale, 74 * scale, 115 * scale, 74 * scale);\r\n    ctx.bezierCurveTo(111 * scale, 68 * scale, 111 * scale, 66 * scale, 111 * scale, 62 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(107 * scale, 81 * scale);\r\n    ctx.bezierCurveTo(108 * scale, 74 * scale, 112 * scale, 73 * scale, 118 * scale, 84 * scale);\r\n    ctx.bezierCurveTo(122 * scale, 88 * scale, 122 * scale, 93 * scale, 121 * scale, 98 * scale);\r\n    ctx.bezierCurveTo(114 * scale, 98 * scale, 113 * scale, 98 * scale, 109 * scale, 90 * scale);\r\n    ctx.bezierCurveTo(107 * scale, 87 * scale, 106 * scale, 85 * scale, 107 * scale, 82 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    return can;\r\n}\r\n;\r\nfunction create_wingleft(scale, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 85 * scale;\r\n    can.height = 145 * scale;\r\n    ctx.translate(-20 * scale, -95 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(50 * scale, 105 * scale);\r\n    ctx.bezierCurveTo(52 * scale, 119 * scale, 64 * scale, 137 * scale, 71 * scale, 146 * scale);\r\n    ctx.bezierCurveTo(71 * scale, 161 * scale, 74 * scale, 169 * scale, 79 * scale, 179 * scale);\r\n    ctx.bezierCurveTo(68 * scale, 192 * scale, 70 * scale, 204 * scale, 69 * scale, 216 * scale);\r\n    ctx.bezierCurveTo(50 * scale, 189.5 * scale, 50 * scale, 189.5 * scale, 31 * scale, 163 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(44 * scale, 106 * scale);\r\n    ctx.bezierCurveTo(49 * scale, 90 * scale, 58 * scale, 104 * scale, 51 * scale, 121 * scale);\r\n    ctx.bezierCurveTo(45 * scale, 143 * scale, 41 * scale, 151 * scale, 37 * scale, 162 * scale);\r\n    ctx.bezierCurveTo(48 * scale, 180 * scale, 58 * scale, 188 * scale, 76 * scale, 205 * scale);\r\n    ctx.bezierCurveTo(104 * scale, 209 * scale, 105 * scale, 229 * scale, 92 * scale, 235 * scale);\r\n    ctx.bezierCurveTo(76 * scale, 239 * scale, 75 * scale, 232 * scale, 56 * scale, 213 * scale);\r\n    ctx.bezierCurveTo(31 * scale, 187 * scale, 28 * scale, 176 * scale, 23 * scale, 162 * scale);\r\n    ctx.bezierCurveTo(38 * scale, 131 * scale, 40 * scale, 120 * scale, 44 * scale, 106 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2], color[3], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(30 * scale, 159 * scale);\r\n    ctx.bezierCurveTo(46 * scale, 157 * scale, 59 * scale, 152 * scale, 68 * scale, 148 * scale);\r\n    ctx.bezierCurveTo(63 * scale, 155 * scale, 52 * scale, 160 * scale, 44 * scale, 164 * scale);\r\n    ctx.bezierCurveTo(59 * scale, 169 * scale, 66 * scale, 174 * scale, 75 * scale, 178 * scale);\r\n    ctx.bezierCurveTo(58 * scale, 178 * scale, 49 * scale, 175 * scale, 37 * scale, 174 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2]);\r\n    return can;\r\n}\r\n;\r\nfunction create_hurt_wingleft(scale, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 85 * scale;\r\n    can.height = 145 * scale;\r\n    ctx.translate(-20 * scale, -95 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(50 * scale, 105 * scale);\r\n    ctx.bezierCurveTo(52 * scale, 119 * scale, 64 * scale, 137 * scale, 71 * scale, 146 * scale);\r\n    ctx.bezierCurveTo(71 * scale, 161 * scale, 74 * scale, 169 * scale, 79 * scale, 179 * scale);\r\n    ctx.bezierCurveTo(68 * scale, 192 * scale, 70 * scale, 204 * scale, 69 * scale, 216 * scale);\r\n    ctx.bezierCurveTo(50 * scale, 189.5 * scale, 50 * scale, 189.5 * scale, 31 * scale, 163 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(44 * scale, 106 * scale);\r\n    ctx.bezierCurveTo(49 * scale, 90 * scale, 58 * scale, 104 * scale, 51 * scale, 121 * scale);\r\n    ctx.bezierCurveTo(45 * scale, 143 * scale, 41 * scale, 151 * scale, 37 * scale, 162 * scale);\r\n    ctx.bezierCurveTo(48 * scale, 180 * scale, 58 * scale, 188 * scale, 76 * scale, 205 * scale);\r\n    ctx.bezierCurveTo(104 * scale, 209 * scale, 105 * scale, 229 * scale, 92 * scale, 235 * scale);\r\n    ctx.bezierCurveTo(76 * scale, 239 * scale, 75 * scale, 232 * scale, 56 * scale, 213 * scale);\r\n    ctx.bezierCurveTo(31 * scale, 187 * scale, 28 * scale, 176 * scale, 23 * scale, 162 * scale);\r\n    ctx.bezierCurveTo(38 * scale, 131 * scale, 40 * scale, 120 * scale, 44 * scale, 106 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color, color, 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(30 * scale, 159 * scale);\r\n    ctx.bezierCurveTo(46 * scale, 157 * scale, 59 * scale, 152 * scale, 68 * scale, 148 * scale);\r\n    ctx.bezierCurveTo(63 * scale, 155 * scale, 52 * scale, 160 * scale, 44 * scale, 164 * scale);\r\n    ctx.bezierCurveTo(59 * scale, 169 * scale, 66 * scale, 174 * scale, 75 * scale, 178 * scale);\r\n    ctx.bezierCurveTo(58 * scale, 178 * scale, 49 * scale, 175 * scale, 37 * scale, 174 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color);\r\n    return can;\r\n}\r\n;\r\nfunction create_wingright(scale, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 85 * scale;\r\n    can.height = 145 * scale;\r\n    ctx.translate(-165 * scale, -95 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(217 * scale, 103 * scale);\r\n    ctx.bezierCurveTo(209 * scale, 129 * scale, 203 * scale, 137 * scale, 195 * scale, 146 * scale);\r\n    ctx.bezierCurveTo(195 * scale, 159 * scale, 194 * scale, 167 * scale, 189 * scale, 178 * scale);\r\n    ctx.bezierCurveTo(193 * scale, 186 * scale, 196 * scale, 195 * scale, 198 * scale, 216 * scale);\r\n    ctx.bezierCurveTo(217.5 * scale, 189.5 * scale, 217.5 * scale, 189.5 * scale, 237 * scale, 163 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(231 * scale, 163 * scale);\r\n    ctx.bezierCurveTo(221 * scale, 139 * scale, 218 * scale, 128 * scale, 215 * scale, 114 * scale);\r\n    ctx.bezierCurveTo(213 * scale, 102 * scale, 220 * scale, 92 * scale, 222 * scale, 107 * scale);\r\n    ctx.bezierCurveTo(224 * scale, 118 * scale, 233 * scale, 138 * scale, 244 * scale, 161 * scale);\r\n    ctx.bezierCurveTo(235 * scale, 188 * scale, 224 * scale, 198 * scale, 204 * scale, 221 * scale);\r\n    ctx.bezierCurveTo(190 * scale, 233 * scale, 190 * scale, 235 * scale, 180 * scale, 235 * scale);\r\n    ctx.bezierCurveTo(167 * scale, 235 * scale, 164 * scale, 216 * scale, 175 * scale, 211 * scale);\r\n    ctx.bezierCurveTo(176 * scale, 208 * scale, 181 * scale, 207 * scale, 191 * scale, 205 * scale);\r\n    ctx.bezierCurveTo(213 * scale, 186 * scale, 218 * scale, 180 * scale, 230 * scale, 163 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2], color[3], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(234 * scale, 154 * scale);\r\n    ctx.bezierCurveTo(227 * scale, 156 * scale, 222 * scale, 156 * scale, 199 * scale, 148 * scale);\r\n    ctx.bezierCurveTo(201 * scale, 151 * scale, 216 * scale, 159 * scale, 224 * scale, 162 * scale);\r\n    ctx.bezierCurveTo(209 * scale, 169.5 * scale, 209 * scale, 169.5 * scale, 194 * scale, 177 * scale);\r\n    ctx.bezierCurveTo(213.5 * scale, 175 * scale, 213.5 * scale, 175 * scale, 233 * scale, 173 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2]);\r\n    return can;\r\n}\r\n;\r\nfunction create_hurt_wingright(scale, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 85 * scale;\r\n    can.height = 145 * scale;\r\n    ctx.translate(-165 * scale, -95 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(217 * scale, 103 * scale);\r\n    ctx.bezierCurveTo(209 * scale, 129 * scale, 203 * scale, 137 * scale, 195 * scale, 146 * scale);\r\n    ctx.bezierCurveTo(195 * scale, 159 * scale, 194 * scale, 167 * scale, 189 * scale, 178 * scale);\r\n    ctx.bezierCurveTo(193 * scale, 186 * scale, 196 * scale, 195 * scale, 198 * scale, 216 * scale);\r\n    ctx.bezierCurveTo(217.5 * scale, 189.5 * scale, 217.5 * scale, 189.5 * scale, 237 * scale, 163 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(231 * scale, 163 * scale);\r\n    ctx.bezierCurveTo(221 * scale, 139 * scale, 218 * scale, 128 * scale, 215 * scale, 114 * scale);\r\n    ctx.bezierCurveTo(213 * scale, 102 * scale, 220 * scale, 92 * scale, 222 * scale, 107 * scale);\r\n    ctx.bezierCurveTo(224 * scale, 118 * scale, 233 * scale, 138 * scale, 244 * scale, 161 * scale);\r\n    ctx.bezierCurveTo(235 * scale, 188 * scale, 224 * scale, 198 * scale, 204 * scale, 221 * scale);\r\n    ctx.bezierCurveTo(190 * scale, 233 * scale, 190 * scale, 235 * scale, 180 * scale, 235 * scale);\r\n    ctx.bezierCurveTo(167 * scale, 235 * scale, 164 * scale, 216 * scale, 175 * scale, 211 * scale);\r\n    ctx.bezierCurveTo(176 * scale, 208 * scale, 181 * scale, 207 * scale, 191 * scale, 205 * scale);\r\n    ctx.bezierCurveTo(213 * scale, 186 * scale, 218 * scale, 180 * scale, 230 * scale, 163 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color, color, 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(234 * scale, 154 * scale);\r\n    ctx.bezierCurveTo(227 * scale, 156 * scale, 222 * scale, 156 * scale, 199 * scale, 148 * scale);\r\n    ctx.bezierCurveTo(201 * scale, 151 * scale, 216 * scale, 159 * scale, 224 * scale, 162 * scale);\r\n    ctx.bezierCurveTo(209 * scale, 169.5 * scale, 209 * scale, 169.5 * scale, 194 * scale, 177 * scale);\r\n    ctx.bezierCurveTo(213.5 * scale, 175 * scale, 213.5 * scale, 175 * scale, 233 * scale, 173 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color);\r\n    return can;\r\n}\r\n;\r\nfunction create_explorer_hat(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 187 * scale;\r\n    can.height = 119 * scale;\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.translate(0, 3);\r\n    ctx.moveTo(53 * scale, 45 * scale);\r\n    ctx.bezierCurveTo(3 * scale, 60 * scale, 11 * scale, 72 * scale, 19 * scale, 81 * scale);\r\n    ctx.bezierCurveTo(28 * scale, 82 * scale, 24 * scale, 81 * scale, 29 * scale, 82 * scale);\r\n    ctx.bezierCurveTo(26 * scale, 87 * scale, 28 * scale, 84 * scale, 28 * scale, 87 * scale);\r\n    ctx.bezierCurveTo(63 * scale, 101 * scale, 92 * scale, 100 * scale, 138 * scale, 93 * scale);\r\n    ctx.bezierCurveTo(172 * scale, 87 * scale, 180 * scale, 72 * scale, 168 * scale, 62 * scale);\r\n    ctx.bezierCurveTo(154 * scale, 51 * scale, 150 * scale, 50 * scale, 148 * scale, 49 * scale);\r\n    ctx.bezierCurveTo(132 * scale, 42 * scale, 90 * scale, 40 * scale, 55 * scale, 45 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[5]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.translate(0, -3);\r\n    ctx.moveTo(53 * scale, 45 * scale);\r\n    ctx.bezierCurveTo(3 * scale, 60 * scale, 11 * scale, 72 * scale, 19 * scale, 81 * scale);\r\n    ctx.bezierCurveTo(28 * scale, 82 * scale, 24 * scale, 81 * scale, 29 * scale, 82 * scale);\r\n    ctx.bezierCurveTo(26 * scale, 87 * scale, 28 * scale, 84 * scale, 28 * scale, 87 * scale);\r\n    ctx.bezierCurveTo(63 * scale, 101 * scale, 92 * scale, 100 * scale, 138 * scale, 93 * scale);\r\n    ctx.bezierCurveTo(172 * scale, 87 * scale, 180 * scale, 72 * scale, 168 * scale, 62 * scale);\r\n    ctx.bezierCurveTo(154 * scale, 51 * scale, 150 * scale, 50 * scale, 148 * scale, 49 * scale);\r\n    ctx.bezierCurveTo(132 * scale, 42 * scale, 90 * scale, 40 * scale, 55 * scale, 45 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[1], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(151 * scale, 60 * scale);\r\n    ctx.bezierCurveTo(140 * scale, 36 * scale, 137 * scale, 32 * scale, 124 * scale, 29 * scale);\r\n    ctx.bezierCurveTo(98 * scale, 22 * scale, 80 * scale, 24 * scale, 62 * scale, 28 * scale);\r\n    ctx.bezierCurveTo(42 * scale, 35 * scale, 38 * scale, 46 * scale, 34 * scale, 58 * scale);\r\n    ctx.bezierCurveTo(53 * scale, 74 * scale, 76 * scale, 76 * scale, 91 * scale, 78 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[1], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(37 * scale, 53 * scale);\r\n    ctx.bezierCurveTo(30 * scale, 56 * scale, 29 * scale, 67 * scale, 30 * scale, 68 * scale);\r\n    ctx.bezierCurveTo(94 * scale, 108 * scale, 150 * scale, 76 * scale, 155 * scale, 70 * scale);\r\n    ctx.bezierCurveTo(154 * scale, 60 * scale, 151 * scale, 54 * scale, 149 * scale, 53 * scale);\r\n    ctx.bezierCurveTo(101 * scale, 74 * scale, 66 * scale, 66 * scale, 37 * scale, 53 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2], color[3], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(100 * scale, 36 * scale);\r\n    ctx.bezierCurveTo(92 * scale, 25 * scale, 86 * scale, 28 * scale, 82 * scale, 34 * scale);\r\n    ctx.bezierCurveTo(88 * scale, 40 * scale, 93 * scale, 40 * scale, 98 * scale, 36 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[1], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(80 * scale, 43 * scale);\r\n    ctx.bezierCurveTo(69 * scale, 46 * scale, 67 * scale, 52 * scale, 69 * scale, 58 * scale);\r\n    fill_path(ctx, undefined, color[1], 4 * scale);\r\n    circle(ctx, 58 * scale, 50 * scale, 5 * scale);\r\n    fill_path(ctx, color[4]);\r\n    circle(ctx, 43 * scale, 65 * scale, 5 * scale);\r\n    fill_path(ctx, color[4]);\r\n    circle(ctx, 58 * scale, 73 * scale, 5 * scale);\r\n    fill_path(ctx, color[4]);\r\n    circle(ctx, 58 * scale, 50 * scale, 2 * scale);\r\n    fill_path(ctx, color[5]);\r\n    circle(ctx, 43 * scale, 65 * scale, 2 * scale);\r\n    fill_path(ctx, color[5]);\r\n    circle(ctx, 58 * scale, 73 * scale, 2 * scale);\r\n    fill_path(ctx, color[5]);\r\n    return can;\r\n}\r\n;\r\nfunction create_wooden_helmet(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 180 * scale;\r\n    can.height = 120 * scale;\r\n    ctx.translate(-65 * scale, -35 * scale);\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(0, 10 * scale);\r\n    ctx.save();\r\n    ctx.translate(150.5 * scale, 63.84375 * scale);\r\n    round_rect(ctx, -67 * scale, -16.5 * scale, 134 * scale, 33 * scale, 5 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(80.5 * scale, 75.34375 * scale);\r\n    ctx.bezierCurveTo(83 * scale, 106.34375 * scale, 83 * scale, 106.34375 * scale, 85.5 * scale, 137.34375 * scale);\r\n    ctx.bezierCurveTo(93 * scale, 135.84375 * scale, 93 * scale, 135.84375 * scale, 100.5 * scale, 134.34375 * scale);\r\n    ctx.bezierCurveTo(99.5 * scale, 100.84375 * scale, 99.5 * scale, 100.84375 * scale, 98.5 * scale, 67.34375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(206.5 * scale, 71.34375 * scale);\r\n    ctx.bezierCurveTo(203.5 * scale, 104.34375 * scale, 203.5 * scale, 104.34375 * scale, 200.5 * scale, 137.34375 * scale);\r\n    ctx.bezierCurveTo(208.5 * scale, 137.34375 * scale, 208.5 * scale, 137.34375 * scale, 216.5 * scale, 137.34375 * scale);\r\n    ctx.bezierCurveTo(219 * scale, 102.84375 * scale, 219 * scale, 102.84375 * scale, 221.5 * scale, 68.34375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(136.5 * scale, 75.34375 * scale);\r\n    ctx.bezierCurveTo(139 * scale, 94.34375 * scale, 139 * scale, 94.34375 * scale, 141.5 * scale, 113.34375 * scale);\r\n    ctx.bezierCurveTo(149.5 * scale, 115.34375 * scale, 149.5 * scale, 115.34375 * scale, 157.5 * scale, 117.34375 * scale);\r\n    ctx.bezierCurveTo(162 * scale, 97.34375 * scale, 162 * scale, 97.34375 * scale, 166.5 * scale, 77.34375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.save();\r\n    ctx.translate(152.5 * scale, 80.84375 * scale);\r\n    ctx.rotate(3.12);\r\n    round_rect(ctx, -73 * scale, -20.5 * scale, 146 * scale, 41 * scale, 5 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(0, -10 * scale);\r\n    ctx.save();\r\n    ctx.translate(150.5 * scale, 63.84375 * scale);\r\n    round_rect(ctx, -67 * scale, -16.5 * scale, 134 * scale, 33 * scale, 5 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[1], color[2], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(80.5 * scale, 75.34375 * scale);\r\n    ctx.bezierCurveTo(83 * scale, 106.34375 * scale, 83 * scale, 106.34375 * scale, 85.5 * scale, 137.34375 * scale);\r\n    ctx.bezierCurveTo(93 * scale, 135.84375 * scale, 93 * scale, 135.84375 * scale, 100.5 * scale, 134.34375 * scale);\r\n    ctx.bezierCurveTo(99.5 * scale, 100.84375 * scale, 99.5 * scale, 100.84375 * scale, 98.5 * scale, 67.34375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(206.5 * scale, 71.34375 * scale);\r\n    ctx.bezierCurveTo(203.5 * scale, 104.34375 * scale, 203.5 * scale, 104.34375 * scale, 200.5 * scale, 137.34375 * scale);\r\n    ctx.bezierCurveTo(208.5 * scale, 137.34375 * scale, 208.5 * scale, 137.34375 * scale, 216.5 * scale, 137.34375 * scale);\r\n    ctx.bezierCurveTo(219 * scale, 102.84375 * scale, 219 * scale, 102.84375 * scale, 221.5 * scale, 68.34375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(136.5 * scale, 75.34375 * scale);\r\n    ctx.bezierCurveTo(139 * scale, 94.34375 * scale, 139 * scale, 94.34375 * scale, 141.5 * scale, 113.34375 * scale);\r\n    ctx.bezierCurveTo(149.5 * scale, 115.34375 * scale, 149.5 * scale, 115.34375 * scale, 157.5 * scale, 117.34375 * scale);\r\n    ctx.bezierCurveTo(162 * scale, 97.34375 * scale, 162 * scale, 97.34375 * scale, 166.5 * scale, 77.34375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 4 * scale);\r\n    ctx.save();\r\n    ctx.translate(152.5 * scale, 80.84375 * scale);\r\n    ctx.rotate(3.12);\r\n    round_rect(ctx, -73 * scale, -20.5 * scale, 146 * scale, 41 * scale, 5 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[1], color[2], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(83.5 * scale, 73.34375 * scale);\r\n    ctx.bezierCurveTo(93.5 * scale, 70.34375 * scale, 105.5 * scale, 70.34375 * scale, 124.5 * scale, 72.34375 * scale);\r\n    ctx.bezierCurveTo(132.5 * scale, 78.34375 * scale, 162.5 * scale, 80.34375 * scale, 176.5 * scale, 76.34375 * scale);\r\n    ctx.bezierCurveTo(194.5 * scale, 69.34375 * scale, 192.5 * scale, 68.34375 * scale, 199.5 * scale, 63.34375 * scale);\r\n    ctx.bezierCurveTo(204.5 * scale, 63.34375 * scale, 204.5 * scale, 63.34375 * scale, 209.5 * scale, 63.34375 * scale);\r\n    ctx.bezierCurveTo(153.5 * scale, 82.34375 * scale, 157.5 * scale, 85.34375 * scale, 209.5 * scale, 63.34375 * scale);\r\n    ctx.bezierCurveTo(194.5 * scale, 88.34375 * scale, 162.5 * scale, 87.34375 * scale, 149.5 * scale, 88.34375 * scale);\r\n    ctx.bezierCurveTo(129.5 * scale, 81.34375 * scale, 103.5 * scale, 75.34375 * scale, 83.5 * scale, 82.34375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(137.5 * scale, 65.34375 * scale);\r\n    ctx.bezierCurveTo(150.5 * scale, 76.34375 * scale, 170.5 * scale, 71.34375 * scale, 174.5 * scale, 65.34375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(221.5 * scale, 85.34375 * scale);\r\n    ctx.bezierCurveTo(211.5 * scale, 79.34375 * scale, 191.5 * scale, 88.34375 * scale, 181.5 * scale, 96.34375 * scale);\r\n    ctx.bezierCurveTo(201.5 * scale, 96.34375 * scale, 201.5 * scale, 96.34375 * scale, 221.5 * scale, 96.34375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(84.5 * scale, 89.34375 * scale);\r\n    ctx.bezierCurveTo(102.5 * scale, 87.34375 * scale, 112.5 * scale, 88.34375 * scale, 119.5 * scale, 97.34375 * scale);\r\n    ctx.bezierCurveTo(102 * scale, 98.34375 * scale, 102 * scale, 98.34375 * scale, 84.5 * scale, 99.34375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(208.5 * scale, 104.34375 * scale);\r\n    ctx.bezierCurveTo(208.5 * scale, 110.34375 * scale, 208.5 * scale, 110.34375 * scale, 208.5 * scale, 116.34375 * scale);\r\n    ctx.bezierCurveTo(211.5 * scale, 110.34375 * scale, 211.5 * scale, 110.34375 * scale, 214.5 * scale, 104.34375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(87.5 * scale, 117.34375 * scale);\r\n    ctx.bezierCurveTo(92 * scale, 118.84375 * scale, 92 * scale, 118.84375 * scale, 96.5 * scale, 120.34375 * scale);\r\n    ctx.bezierCurveTo(93 * scale, 123.84375 * scale, 93 * scale, 123.84375 * scale, 89.5 * scale, 127.34375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(107.5 * scale, 51.34375 * scale);\r\n    ctx.bezierCurveTo(122.5 * scale, 54.34375 * scale, 122.5 * scale, 54.34375 * scale, 137.5 * scale, 57.34375 * scale);\r\n    ctx.bezierCurveTo(118 * scale, 57.34375 * scale, 118 * scale, 57.34375 * scale, 98.5 * scale, 57.34375 * scale);\r\n    ctx.bezierCurveTo(94.5 * scale, 54.84375 * scale, 94.5 * scale, 54.84375 * scale, 90.5 * scale, 52.34375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(170.5 * scale, 52.34375 * scale);\r\n    ctx.bezierCurveTo(179.5 * scale, 51.84375 * scale, 179.5 * scale, 51.84375 * scale, 188.5 * scale, 51.34375 * scale);\r\n    ctx.bezierCurveTo(187.5 * scale, 53.84375 * scale, 187.5 * scale, 53.84375 * scale, 186.5 * scale, 56.34375 * scale);\r\n    ctx.bezierCurveTo(177 * scale, 56.34375 * scale, 177 * scale, 56.34375 * scale, 167.5 * scale, 56.34375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(80.5 * scale, 69.34375 * scale);\r\n    ctx.bezierCurveTo(86.5 * scale, 70.34375 * scale, 86.5 * scale, 70.34375 * scale, 92.5 * scale, 71.34375 * scale);\r\n    ctx.bezierCurveTo(86 * scale, 73.34375 * scale, 86 * scale, 73.34375 * scale, 79.5 * scale, 75.34375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(222.5 * scale, 75.34375 * scale);\r\n    ctx.bezierCurveTo(214.5 * scale, 76.34375 * scale, 214.5 * scale, 76.34375 * scale, 206.5 * scale, 77.34375 * scale);\r\n    ctx.bezierCurveTo(216.5 * scale, 79.34375 * scale, 216.5 * scale, 79.34375 * scale, 226.5 * scale, 81.34375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(116.5 * scale, 100.34375 * scale);\r\n    ctx.bezierCurveTo(128 * scale, 97.34375 * scale, 128 * scale, 97.34375 * scale, 139.5 * scale, 94.34375 * scale);\r\n    ctx.bezierCurveTo(140 * scale, 96.84375 * scale, 140 * scale, 96.84375 * scale, 140.5 * scale, 99.34375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(112.5 * scale, 48.34375 * scale);\r\n    ctx.bezierCurveTo(115.5 * scale, 50.84375 * scale, 115.5 * scale, 50.84375 * scale, 118.5 * scale, 53.34375 * scale);\r\n    ctx.bezierCurveTo(131 * scale, 50.84375 * scale, 131 * scale, 50.84375 * scale, 143.5 * scale, 48.34375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(216.5 * scale, 109.34375 * scale);\r\n    ctx.bezierCurveTo(213 * scale, 114.84375 * scale, 213 * scale, 114.84375 * scale, 209.5 * scale, 120.34375 * scale);\r\n    ctx.bezierCurveTo(212 * scale, 118.84375 * scale, 212 * scale, 118.84375 * scale, 214.5 * scale, 117.34375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(86.5 * scale, 133.34375 * scale);\r\n    ctx.bezierCurveTo(89 * scale, 127.34375 * scale, 89 * scale, 127.34375 * scale, 91.5 * scale, 121.34375 * scale);\r\n    ctx.bezierCurveTo(92.5 * scale, 127.34375 * scale, 92.5 * scale, 127.34375 * scale, 93.5 * scale, 133.34375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2]);\r\n    return can;\r\n}\r\n;\r\nfunction create_viking_hat(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 175 * scale;\r\n    can.height = 106 * scale;\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(0, 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(28 * scale, 67 * scale);\r\n    ctx.bezierCurveTo(55 * scale, 80 * scale, 126 * scale, 74 * scale, 144 * scale, 68 * scale);\r\n    ctx.bezierCurveTo(144.5 * scale, 75 * scale, 144.5 * scale, 75 * scale, 145 * scale, 82 * scale);\r\n    ctx.bezierCurveTo(114 * scale, 94 * scale, 47 * scale, 91 * scale, 28 * scale, 82 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(0, -8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(145 * scale, 75 * scale);\r\n    ctx.bezierCurveTo(143 * scale, 51 * scale, 133 * scale, 29 * scale, 100 * scale, 27 * scale);\r\n    ctx.bezierCurveTo(52 * scale, 21 * scale, 37 * scale, 37 * scale, 31 * scale, 54 * scale);\r\n    ctx.bezierCurveTo(23 * scale, 78 * scale, 28 * scale, 77 * scale, 36 * scale, 79 * scale);\r\n    ctx.bezierCurveTo(80 * scale, 87 * scale, 120 * scale, 81 * scale, 145 * scale, 76 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(38 * scale, 46 * scale);\r\n    ctx.bezierCurveTo(52 * scale, 37 * scale, 69 * scale, 36 * scale, 85 * scale, 36 * scale);\r\n    ctx.bezierCurveTo(118 * scale, 38 * scale, 129 * scale, 42 * scale, 137 * scale, 48 * scale);\r\n    ctx.bezierCurveTo(135 * scale, 45 * scale, 135 * scale, 45 * scale, 133 * scale, 42 * scale);\r\n    ctx.bezierCurveTo(124 * scale, 32 * scale, 116 * scale, 28 * scale, 88 * scale, 25 * scale);\r\n    ctx.bezierCurveTo(47 * scale, 28 * scale, 40 * scale, 32 * scale, 36 * scale, 44 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[5]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(145 * scale, 75 * scale);\r\n    ctx.bezierCurveTo(143 * scale, 51 * scale, 133 * scale, 29 * scale, 100 * scale, 27 * scale);\r\n    ctx.bezierCurveTo(52 * scale, 21 * scale, 37 * scale, 37 * scale, 31 * scale, 54 * scale);\r\n    ctx.bezierCurveTo(23 * scale, 78 * scale, 28 * scale, 77 * scale, 36 * scale, 79 * scale);\r\n    ctx.bezierCurveTo(80 * scale, 87 * scale, 120 * scale, 81 * scale, 145 * scale, 76 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[2], 4 * scale);\r\n    ctx.translate(0, -3 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(28 * scale, 67 * scale);\r\n    ctx.bezierCurveTo(55 * scale, 80 * scale, 126 * scale, 74 * scale, 144 * scale, 68 * scale);\r\n    ctx.bezierCurveTo(144.5 * scale, 75 * scale, 144.5 * scale, 75 * scale, 145 * scale, 82 * scale);\r\n    ctx.bezierCurveTo(114 * scale, 94 * scale, 47 * scale, 91 * scale, 28 * scale, 82 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[10], color[10], 4 * scale);\r\n    ctx.translate(0, 3 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(131 * scale, 43 * scale);\r\n    ctx.bezierCurveTo(145 * scale, 40 * scale, 148 * scale, 32 * scale, 147 * scale, 17 * scale);\r\n    ctx.bezierCurveTo(166 * scale, 39 * scale, 155 * scale, 62 * scale, 140 * scale, 67 * scale);\r\n    ctx.bezierCurveTo(128 * scale, 65 * scale, 128 * scale, 52 * scale, 131 * scale, 45 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(41 * scale, 43 * scale);\r\n    ctx.bezierCurveTo(30 * scale, 42 * scale, 24 * scale, 33 * scale, 25 * scale, 17 * scale);\r\n    ctx.bezierCurveTo(7 * scale, 34 * scale, 17 * scale, 63 * scale, 33 * scale, 66 * scale);\r\n    ctx.bezierCurveTo(45 * scale, 59 * scale, 44 * scale, 53 * scale, 42 * scale, 44 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(24 * scale, 19 * scale);\r\n    ctx.bezierCurveTo(24 * scale, 35 * scale, 35 * scale, 42 * scale, 42 * scale, 44 * scale);\r\n    ctx.bezierCurveTo(43 * scale, 51 * scale, 43 * scale, 48 * scale, 43 * scale, 56 * scale);\r\n    ctx.bezierCurveTo(25 * scale, 47 * scale, 17 * scale, 36 * scale, 23 * scale, 20 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[6]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(148 * scale, 18 * scale);\r\n    ctx.bezierCurveTo(159 * scale, 44 * scale, 139 * scale, 52 * scale, 130 * scale, 55 * scale);\r\n    ctx.bezierCurveTo(129 * scale, 48 * scale, 129 * scale, 46 * scale, 131 * scale, 43 * scale);\r\n    ctx.bezierCurveTo(144 * scale, 37 * scale, 148 * scale, 35 * scale, 147 * scale, 18 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[6]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(131 * scale, 43 * scale);\r\n    ctx.bezierCurveTo(145 * scale, 40 * scale, 148 * scale, 32 * scale, 147 * scale, 17 * scale);\r\n    ctx.bezierCurveTo(166 * scale, 39 * scale, 155 * scale, 62 * scale, 140 * scale, 67 * scale);\r\n    ctx.bezierCurveTo(128 * scale, 65 * scale, 128 * scale, 52 * scale, 131 * scale, 45 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[4], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(41 * scale, 43 * scale);\r\n    ctx.bezierCurveTo(30 * scale, 42 * scale, 24 * scale, 33 * scale, 25 * scale, 17 * scale);\r\n    ctx.bezierCurveTo(7 * scale, 34 * scale, 17 * scale, 63 * scale, 33 * scale, 66 * scale);\r\n    ctx.bezierCurveTo(45 * scale, 59 * scale, 44 * scale, 53 * scale, 42 * scale, 44 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[4], 4 * scale);\r\n    ctx.save();\r\n    ctx.translate(87 * scale, 34.5 * scale);\r\n    ctx.rotate(0);\r\n    round_rect(ctx, -8 * scale, -10.5 * scale, 16 * scale, 21 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[7], color[2], 4 * scale);\r\n    ctx.save();\r\n    ctx.translate(87 * scale, 57 * scale);\r\n    ctx.rotate(0);\r\n    round_rect(ctx, -8 * scale, -23 * scale, 16 * scale, 46 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[8], color[2], 4 * scale);\r\n    circle(ctx, 87 * scale, 39 * scale, 4.123105625617661 * scale);\r\n    fill_path(ctx, color[9], color[2], 4 * scale);\r\n    circle(ctx, 87 * scale, 60 * scale, 4.242640687119285 * scale);\r\n    fill_path(ctx, color[9], color[2], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(28 * scale, 67 * scale);\r\n    ctx.bezierCurveTo(55 * scale, 80 * scale, 126 * scale, 74 * scale, 144 * scale, 68 * scale);\r\n    ctx.bezierCurveTo(144.5 * scale, 75 * scale, 144.5 * scale, 75 * scale, 145 * scale, 82 * scale);\r\n    ctx.bezierCurveTo(114 * scale, 94 * scale, 47 * scale, 91 * scale, 28 * scale, 82 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[8], color[2], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(27 * scale, 69 * scale);\r\n    ctx.bezierCurveTo(13 * scale, 77 * scale, 16 * scale, 74 * scale, 27 * scale, 80 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[9], color[2], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(145 * scale, 70 * scale);\r\n    ctx.bezierCurveTo(149.5 * scale, 72 * scale, 149.5 * scale, 72 * scale, 154 * scale, 74 * scale);\r\n    ctx.bezierCurveTo(150 * scale, 77 * scale, 150 * scale, 77 * scale, 146 * scale, 80 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[9], color[2], 4 * scale);\r\n    circle(ctx, 50 * scale, 80 * scale, 5 * scale);\r\n    fill_path(ctx, color[9], color[2], 4 * scale);\r\n    circle(ctx, 86.01141357421875 * scale, 81.76705932617188 * scale, 5 * scale);\r\n    fill_path(ctx, color[9], color[2], 4 * scale);\r\n    circle(ctx, 119.01141357421875 * scale, 80.13069152832031 * scale, 5 * scale);\r\n    fill_path(ctx, color[9], color[2], 4 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_gold_helmet(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 142 * scale;\r\n    can.height = 118 * scale;\r\n    ctx.save();\r\n    ctx.translate(70.16665649414062 * scale, 38.20831298828125 * scale);\r\n    round_rect(ctx, -58.5 * scale, -27.5 * scale, 117 * scale, 55 * scale, 20 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0], color[1], 4 * scale);\r\n    ctx.save();\r\n    ctx.translate(70 * scale, 42.70831298828125 * scale);\r\n    round_rect(ctx, -61 * scale, -20 * scale, 122 * scale, 40 * scale, 20 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[2], color[1], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(123 * scale, 70.375 * scale);\r\n    ctx.bezierCurveTo(115 * scale, 99.375 * scale, 119 * scale, 85.375 * scale, 115 * scale, 100.375 * scale);\r\n    ctx.bezierCurveTo(112 * scale, 116.375 * scale, 117 * scale, 109.375 * scale, 131 * scale, 100.375 * scale);\r\n    ctx.bezierCurveTo(131 * scale, 83.375 * scale, 131 * scale, 83.375 * scale, 131 * scale, 66.375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2], color[1], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(11 * scale, 68.375 * scale);\r\n    ctx.bezierCurveTo(11.166656494140625 * scale, 84.375 * scale, 9 * scale, 99.375 * scale, 10 * scale, 100.375 * scale);\r\n    ctx.bezierCurveTo(35 * scale, 113.375 * scale, 27 * scale, 110.375 * scale, 25 * scale, 95.375 * scale);\r\n    ctx.bezierCurveTo(16 * scale, 68.375 * scale, 17 * scale, 69.375 * scale, 17 * scale, 68.375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2], color[1], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(46 * scale, 32.375 * scale);\r\n    ctx.bezierCurveTo(43 * scale, 8.375 * scale, 45 * scale, 7.375 * scale, 56 * scale, 6.375 * scale);\r\n    ctx.bezierCurveTo(105 * scale, 4.375 * scale, 102 * scale, 6.375 * scale, 97 * scale, 32.375 * scale);\r\n    ctx.bezierCurveTo(138 * scale, 43.375 * scale, 133 * scale, 45.375 * scale, 133 * scale, 58.375 * scale);\r\n    ctx.bezierCurveTo(133 * scale, 85.375 * scale, 125 * scale, 74.375 * scale, 111 * scale, 70.375 * scale);\r\n    ctx.bezierCurveTo(70 * scale, 69.875 * scale, 29 * scale, 69.375 * scale, 29 * scale, 69.375 * scale);\r\n    ctx.bezierCurveTo(7 * scale, 84.375 * scale, 7 * scale, 70.375 * scale, 7 * scale, 59.375 * scale);\r\n    ctx.bezierCurveTo(6 * scale, 28.375 * scale, 32 * scale, 39.375 * scale, 44 * scale, 32.375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2], color[1], 4 * scale);\r\n    circle(ctx, 71 * scale, 44.375 * scale, 16.55294535724685 * scale);\r\n    fill_path(ctx, color[2], color[1], 4 * scale);\r\n    circle(ctx, 71 * scale, 43.70831298828125 * scale, 8.94427190999916 * scale);\r\n    fill_path(ctx, color[2], color[1], 4 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_diamond_helmet(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 142 * scale;\r\n    can.height = 118 * scale;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(111 * scale, 27.3671875 * scale);\r\n    ctx.bezierCurveTo(128 * scale, 9.3671875 * scale, 125 * scale, 13.3671875 * scale, 126 * scale, 21.3671875 * scale);\r\n    ctx.bezierCurveTo(126 * scale, 33.3671875 * scale, 119 * scale, 43.3671875 * scale, 118 * scale, 42.3671875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[4], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(31 * scale, 23.3671875 * scale);\r\n    ctx.bezierCurveTo(17 * scale, 15.3671875 * scale, 16 * scale, 14.3671875 * scale, 17 * scale, 20.3671875 * scale);\r\n    ctx.bezierCurveTo(22 * scale, 33.3671875 * scale, 20 * scale, 27.3671875 * scale, 24 * scale, 34.3671875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[4], 4 * scale);\r\n    ctx.save();\r\n    ctx.translate(70.5 * scale, 34.8671875 * scale);\r\n    ctx.rotate(0);\r\n    round_rect(ctx, -49.5 * scale, -21.5 * scale, 99 * scale, 43 * scale, 15 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0], color[1], 4 * scale);\r\n    ctx.save();\r\n    ctx.translate(71 * scale, 40.8671875 * scale);\r\n    ctx.rotate(0);\r\n    round_rect(ctx, -49 * scale, -12.5 * scale, 98 * scale, 25 * scale, 15 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[2], color[1], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(19.800003051757812 * scale, 75.95625305175781 * scale);\r\n    ctx.bezierCurveTo(19.300003051757812 * scale, 82.95625305175781 * scale, 19.300003051757812 * scale, 82.95625305175781 * scale, 18.800003051757812 * scale, 89.95625305175781 * scale);\r\n    ctx.bezierCurveTo(38.80000305175781 * scale, 115.95625305175781 * scale, 37.80000305175781 * scale, 104.95625305175781 * scale, 31.800003051757812 * scale, 91.95625305175781 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2], color[1], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(119.80000305175781 * scale, 75.95625305175781 * scale);\r\n    ctx.bezierCurveTo(120.80000305175781 * scale, 82.95625305175781 * scale, 120.80000305175781 * scale, 82.95625305175781 * scale, 121.80000305175781 * scale, 89.95625305175781 * scale);\r\n    ctx.bezierCurveTo(101.80000305175781 * scale, 111.95625305175781 * scale, 99.80000305175781 * scale, 111.95625305175781 * scale, 112.80000305175781 * scale, 81.95625305175781 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2], color[1], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(17.800003051757812 * scale, 49.15625 * scale);\r\n    ctx.bezierCurveTo(17.800003051757812 * scale, 64.15625 * scale, 17.800003051757812 * scale, 64.15625 * scale, 17.800003051757812 * scale, 79.15625 * scale);\r\n    ctx.bezierCurveTo(23.300003051757812 * scale, 85.15625 * scale, 23.300003051757812 * scale, 85.15625 * scale, 28.800003051757812 * scale, 91.15625 * scale);\r\n    ctx.bezierCurveTo(36.80000305175781 * scale, 96.15625 * scale, 32.80000305175781 * scale, 91.15625 * scale, 28.800003051757812 * scale, 77.15625 * scale);\r\n    ctx.bezierCurveTo(33.80000305175781 * scale, 65.15625 * scale, 33.80000305175781 * scale, 65.15625 * scale, 38.80000305175781 * scale, 53.15625 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[4], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(123.80000305175781 * scale, 53.95625305175781 * scale);\r\n    ctx.bezierCurveTo(121.80000305175781 * scale, 77.95625305175781 * scale, 121.80000305175781 * scale, 74.95625305175781 * scale, 121.80000305175781 * scale, 78.95625305175781 * scale);\r\n    ctx.bezierCurveTo(115.80000305175781 * scale, 84.95625305175781 * scale, 115.80000305175781 * scale, 84.95625305175781 * scale, 109.80000305175781 * scale, 90.95625305175781 * scale);\r\n    ctx.bezierCurveTo(102.80000305175781 * scale, 93.95625305175781 * scale, 105.80000305175781 * scale, 86.95625305175781 * scale, 110.80000305175781 * scale, 76.95625305175781 * scale);\r\n    ctx.bezierCurveTo(107.30000305175781 * scale, 65.45625305175781 * scale, 103.80000305175781 * scale, 53.95625305175781 * scale, 103.80000305175781 * scale, 53.95625305175781 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[4], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(18 * scale, 56.3671875 * scale);\r\n    ctx.bezierCurveTo(70 * scale, 56.8671875 * scale, 70 * scale, 56.8671875 * scale, 122 * scale, 57.3671875 * scale);\r\n    ctx.bezierCurveTo(137 * scale, 20.3671875 * scale, 137 * scale, 16.3671875 * scale, 126 * scale, 22.3671875 * scale);\r\n    ctx.bezierCurveTo(115.5 * scale, 34.3671875 * scale, 115.5 * scale, 34.3671875 * scale, 105 * scale, 46.3671875 * scale);\r\n    ctx.bezierCurveTo(70.5 * scale, 46.3671875 * scale, 70.5 * scale, 46.3671875 * scale, 36 * scale, 46.3671875 * scale);\r\n    ctx.bezierCurveTo(4 * scale, 14.3671875 * scale, 7 * scale, 18.3671875 * scale, 8 * scale, 27.3671875 * scale);\r\n    ctx.bezierCurveTo(12.5 * scale, 41.8671875 * scale, 12.5 * scale, 41.8671875 * scale, 17 * scale, 56.3671875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[4], 4 * scale);\r\n    ctx.save();\r\n    ctx.translate(68.30000305175781 * scale, 41.45625305175781 * scale);\r\n    ctx.rotate(0.76);\r\n    round_rect(ctx, -20.5 * scale, -20.5 * scale, 41 * scale, 41 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, undefined, color[5], 4 * scale);\r\n    ctx.save();\r\n    ctx.translate(68.80000305175781 * scale, 44.45625305175781 * scale);\r\n    ctx.rotate(0.76);\r\n    round_rect(ctx, -21 * scale, -20.5 * scale, 42 * scale, 41 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[3], color[4], 4 * scale);\r\n    ctx.save();\r\n    ctx.translate(69.80000305175781 * scale, 44.556243896484375 * scale);\r\n    ctx.rotate(0.76);\r\n    round_rect(ctx, -10 * scale, -10 * scale, 20 * scale, 20 * scale, 5 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[6], color[7], 4 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_amethyst_helmet(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 145 * scale;\r\n    can.height = 120 * scale;\r\n    ctx.beginPath();\r\n    ctx.scale(0.6, 0.6);\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.translate(18 * scale, -8 * scale);\r\n    ctx.moveTo(101 * scale, 72 * scale);\r\n    ctx.bezierCurveTo(144 * scale, 69 * scale, 149 * scale, 58 * scale, 162 * scale, 49 * scale);\r\n    ctx.bezierCurveTo(174 * scale, 31 * scale, 173 * scale, 38 * scale, 172 * scale, 45 * scale);\r\n    ctx.bezierCurveTo(168 * scale, 73 * scale, 158 * scale, 75 * scale, 152 * scale, 78 * scale);\r\n    ctx.bezierCurveTo(106 * scale, 89 * scale, 107 * scale, 91 * scale, 107 * scale, 94 * scale);\r\n    ctx.bezierCurveTo(107 * scale, 100 * scale, 107 * scale, 107 * scale, 107 * scale, 107 * scale);\r\n    ctx.bezierCurveTo(99 * scale, 112 * scale, 98 * scale, 110 * scale, 93 * scale, 107 * scale);\r\n    ctx.bezierCurveTo(94 * scale, 107 * scale, 93 * scale, 107 * scale, 93 * scale, 107 * scale);\r\n    ctx.bezierCurveTo(93 * scale, 100 * scale, 93 * scale, 100 * scale, 92 * scale, 94 * scale);\r\n    ctx.bezierCurveTo(92 * scale, 89 * scale, 90 * scale, 90 * scale, 73 * scale, 86 * scale);\r\n    ctx.bezierCurveTo(45 * scale, 81 * scale, 40 * scale, 77 * scale, 35 * scale, 68 * scale);\r\n    ctx.bezierCurveTo(23 * scale, 36 * scale, 28 * scale, 34 * scale, 36 * scale, 46 * scale);\r\n    ctx.bezierCurveTo(45 * scale, 58 * scale, 83 * scale, 72 * scale, 98 * scale, 72 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[5], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.scale(1.1, 1.1);\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.translate(-9 * scale, 4 * scale);\r\n    ctx.moveTo(101 * scale, 72 * scale);\r\n    ctx.bezierCurveTo(144 * scale, 69 * scale, 149 * scale, 58 * scale, 162 * scale, 49 * scale);\r\n    ctx.bezierCurveTo(174 * scale, 31 * scale, 173 * scale, 38 * scale, 172 * scale, 45 * scale);\r\n    ctx.bezierCurveTo(168 * scale, 73 * scale, 158 * scale, 75 * scale, 152 * scale, 78 * scale);\r\n    ctx.bezierCurveTo(106 * scale, 89 * scale, 107 * scale, 91 * scale, 107 * scale, 94 * scale);\r\n    ctx.bezierCurveTo(107 * scale, 100 * scale, 107 * scale, 107 * scale, 107 * scale, 107 * scale);\r\n    ctx.bezierCurveTo(99 * scale, 112 * scale, 98 * scale, 110 * scale, 93 * scale, 107 * scale);\r\n    ctx.bezierCurveTo(94 * scale, 107 * scale, 93 * scale, 107 * scale, 93 * scale, 107 * scale);\r\n    ctx.bezierCurveTo(93 * scale, 100 * scale, 93 * scale, 100 * scale, 92 * scale, 94 * scale);\r\n    ctx.bezierCurveTo(92 * scale, 89 * scale, 90 * scale, 90 * scale, 73 * scale, 86 * scale);\r\n    ctx.bezierCurveTo(45 * scale, 81 * scale, 40 * scale, 77 * scale, 35 * scale, 68 * scale);\r\n    ctx.bezierCurveTo(23 * scale, 36 * scale, 28 * scale, 34 * scale, 36 * scale, 46 * scale);\r\n    ctx.bezierCurveTo(45 * scale, 58 * scale, 83 * scale, 72 * scale, 98 * scale, 72 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[5], 4 * scale);\r\n    ctx.scale(1.1, 1.1);\r\n    ctx.translate(-9 * scale, 4 * scale);\r\n    ctx.save();\r\n    ctx.translate(100 * scale, 73.06874084472656 * scale);\r\n    ctx.rotate(0);\r\n    round_rect(ctx, -61 * scale, -38.5 * scale, 122 * scale, 40 * scale, 20 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[1], color[2], 4 * scale);\r\n    ctx.save();\r\n    ctx.translate(100 * scale, 71.36874389648438 * scale);\r\n    ctx.rotate(0);\r\n    round_rect(ctx, -60.5 * scale, -18 * scale, 121 * scale, 30 * scale, 20 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[3], color[2], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(144 * scale, 80 * scale);\r\n    ctx.bezierCurveTo(152 * scale, 100 * scale, 152 * scale, 101 * scale, 153 * scale, 102 * scale);\r\n    ctx.bezierCurveTo(159 * scale, 100 * scale, 159 * scale, 100 * scale, 160 * scale, 100 * scale);\r\n    ctx.bezierCurveTo(161 * scale, 84 * scale, 161 * scale, 84 * scale, 162 * scale, 68 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(57 * scale, 75 * scale);\r\n    ctx.bezierCurveTo(48 * scale, 101 * scale, 53 * scale, 89 * scale, 48 * scale, 102 * scale);\r\n    ctx.bezierCurveTo(44 * scale, 100 * scale, 44 * scale, 100 * scale, 39 * scale, 97 * scale);\r\n    ctx.bezierCurveTo(39 * scale, 83 * scale, 39 * scale, 83 * scale, 39 * scale, 69 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(101 * scale, 72 * scale);\r\n    ctx.bezierCurveTo(144 * scale, 69 * scale, 149 * scale, 58 * scale, 162 * scale, 49 * scale);\r\n    ctx.bezierCurveTo(174 * scale, 31 * scale, 173 * scale, 38 * scale, 172 * scale, 45 * scale);\r\n    ctx.bezierCurveTo(168 * scale, 73 * scale, 158 * scale, 75 * scale, 152 * scale, 78 * scale);\r\n    ctx.bezierCurveTo(106 * scale, 89 * scale, 107 * scale, 91 * scale, 107 * scale, 94 * scale);\r\n    ctx.bezierCurveTo(107 * scale, 100 * scale, 107 * scale, 107 * scale, 107 * scale, 107 * scale);\r\n    ctx.bezierCurveTo(99 * scale, 112 * scale, 98 * scale, 110 * scale, 93 * scale, 107 * scale);\r\n    ctx.bezierCurveTo(94 * scale, 107 * scale, 93 * scale, 107 * scale, 93 * scale, 107 * scale);\r\n    ctx.bezierCurveTo(93 * scale, 100 * scale, 93 * scale, 100 * scale, 92 * scale, 94 * scale);\r\n    ctx.bezierCurveTo(92 * scale, 89 * scale, 90 * scale, 90 * scale, 73 * scale, 86 * scale);\r\n    ctx.bezierCurveTo(45 * scale, 81 * scale, 40 * scale, 77 * scale, 35 * scale, 68 * scale);\r\n    ctx.bezierCurveTo(23 * scale, 36 * scale, 28 * scale, 34 * scale, 36 * scale, 46 * scale);\r\n    ctx.bezierCurveTo(45 * scale, 58 * scale, 83 * scale, 72 * scale, 98 * scale, 72 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[5], 4 * scale);\r\n    ctx.translate(0, 0);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(115.5 * scale, 116.07290649414062 * scale);\r\n    ctx.bezierCurveTo(159.5 * scale, 99.07290649414062 * scale, 159.5 * scale, 98.07290649414062 * scale, 159.5 * scale, 98.07290649414062 * scale);\r\n    ctx.bezierCurveTo(155.5 * scale, 116.07290649414062 * scale, 159.5 * scale, 116.07290649414062 * scale, 159.5 * scale, 118.07290649414062 * scale);\r\n    ctx.bezierCurveTo(147.5 * scale, 130.07290649414062 * scale, 136.5 * scale, 132.07290649414062 * scale, 115.5 * scale, 138.07290649414062 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[2], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(39.5 * scale, 96.07290649414062 * scale);\r\n    ctx.bezierCurveTo(85.5 * scale, 114.07290649414062 * scale, 62.5 * scale, 105.57290649414062 * scale, 85.5 * scale, 115.07290649414062 * scale);\r\n    ctx.bezierCurveTo(85.5 * scale, 125.57290649414062 * scale, 85.5 * scale, 125.57290649414062 * scale, 85.5 * scale, 136.07290649414062 * scale);\r\n    ctx.bezierCurveTo(51.5 * scale, 129.07290649414062 * scale, 51.5 * scale, 125.07290649414062 * scale, 41.5 * scale, 118.07290649414062 * scale);\r\n    ctx.bezierCurveTo(44.5 * scale, 106.07290649414062 * scale, 42.5 * scale, 103.07290649414062 * scale, 40.5 * scale, 96.07290649414062 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[2], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(86 * scale, 80 * scale);\r\n    ctx.bezierCurveTo(97 * scale, 88 * scale, 106 * scale, 84 * scale, 112 * scale, 80 * scale);\r\n    ctx.bezierCurveTo(112 * scale, 62 * scale, 106 * scale, 59 * scale, 99 * scale, 54 * scale);\r\n    ctx.bezierCurveTo(86 * scale, 62 * scale, 86 * scale, 73 * scale, 86 * scale, 80 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[2], 4 * scale);\r\n    ctx.scale(0.5, 0.5);\r\n    ctx.translate(100 * scale, 71 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(86 * scale, 80 * scale);\r\n    ctx.bezierCurveTo(97 * scale, 88 * scale, 106 * scale, 84 * scale, 112 * scale, 80 * scale);\r\n    ctx.bezierCurveTo(112 * scale, 62 * scale, 106 * scale, 59 * scale, 99 * scale, 54 * scale);\r\n    ctx.bezierCurveTo(86 * scale, 62 * scale, 86 * scale, 73 * scale, 86 * scale, 80 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[6], color[2], 4 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_book(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 400 * scale;\r\n    can.height = 400 * scale;\r\n    ctx.save();\r\n    ctx.translate(204 * scale, 195.0833282470703 * scale);\r\n    ctx.rotate(10.16);\r\n    round_rect(ctx, -97.5 * scale, -134.5 * scale, 195 * scale, 269 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0], color[1], 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(58.5 * scale, 226.5833282470703 * scale);\r\n    ctx.bezierCurveTo(120.5 * scale, 281.5833282470703 * scale, 120.5 * scale, 281.5833282470703 * scale, 182.5 * scale, 336.5833282470703 * scale);\r\n    ctx.bezierCurveTo(263 * scale, 248.5833282470703 * scale, 263 * scale, 248.5833282470703 * scale, 343.5 * scale, 160.5833282470703 * scale);\r\n    ctx.bezierCurveTo(280.5 * scale, 104.58332824707031 * scale, 280.5 * scale, 104.58332824707031 * scale, 217.5 * scale, 48.58332824707031 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2], color[3], 4 * scale);\r\n    ctx.save();\r\n    ctx.translate(197 * scale, 169.0833282470703 * scale);\r\n    ctx.rotate(10.16);\r\n    round_rect(ctx, -93.5 * scale, -126.5 * scale, 187 * scale, 253 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[4], color[1], 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(226.5 * scale, 24.583328247070312 * scale);\r\n    ctx.bezierCurveTo(58.5 * scale, 207.5833282470703 * scale, 143 * scale, 116.58332824707031 * scale, 59.5 * scale, 208.5833282470703 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[1], 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(46.133331298828125 * scale, 202.64999389648438 * scale);\r\n    ctx.bezierCurveTo(46.133331298828125 * scale, 215.64999389648438 * scale, 46.133331298828125 * scale, 215.64999389648438 * scale, 46.133331298828125 * scale, 228.64999389648438 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[1], 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(55.133331298828125 * scale, 211.64999389648438 * scale);\r\n    ctx.bezierCurveTo(55.133331298828125 * scale, 225.14999389648438 * scale, 55.133331298828125 * scale, 225.14999389648438 * scale, 55.133331298828125 * scale, 238.64999389648438 * scale);\r\n    ctx.bezierCurveTo(50.133331298828125 * scale, 235.64999389648438 * scale, 50.133331298828125 * scale, 235.64999389648438 * scale, 45.133331298828125 * scale, 232.64999389648438 * scale);\r\n    ctx.bezierCurveTo(45.133331298828125 * scale, 216.64999389648438 * scale, 45.133331298828125 * scale, 216.64999389648438 * scale, 45.133331298828125 * scale, 200.64999389648438 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[1], 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(46.133331298828125 * scale, 198.39999389648438 * scale);\r\n    ctx.bezierCurveTo(46.133331298828125 * scale, 199.89999389648438 * scale, 46.133331298828125 * scale, 199.89999389648438 * scale, 46.133331298828125 * scale, 201.39999389648438 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[1], 8 * scale);\r\n    ctx.save();\r\n    ctx.translate(249.63333129882812 * scale, 120.89999389648438 * scale);\r\n    ctx.rotate(7.04);\r\n    round_rect(ctx, -58.5 * scale, -32 * scale, 117 * scale, 64 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[5]);\r\n    return can;\r\n}\r\n;\r\nfunction create_paper(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 170 * scale;\r\n    can.height = 170 * scale;\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(-10 * scale, 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(72.5 * scale, 4.109375 * scale);\r\n    ctx.bezierCurveTo(117 * scale, 9.609375 * scale, 117 * scale, 9.609375 * scale, 161.5 * scale, 15.109375 * scale);\r\n    ctx.bezierCurveTo(134.5 * scale, 106.109375 * scale, 110.5 * scale, 130.109375 * scale, 63.5 * scale, 145.109375 * scale);\r\n    ctx.bezierCurveTo(33.5 * scale, 120.609375 * scale, 33.5 * scale, 120.609375 * scale, 3.5 * scale, 96.109375 * scale);\r\n    ctx.bezierCurveTo(82.5 * scale, 75.109375 * scale, 69.5 * scale, 29.109375 * scale, 71.5 * scale, 6.109375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(10 * scale, -10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(72.5 * scale, 4.109375 * scale);\r\n    ctx.bezierCurveTo(117 * scale, 9.609375 * scale, 117 * scale, 9.609375 * scale, 161.5 * scale, 15.109375 * scale);\r\n    ctx.bezierCurveTo(134.5 * scale, 106.109375 * scale, 110.5 * scale, 130.109375 * scale, 63.5 * scale, 145.109375 * scale);\r\n    ctx.bezierCurveTo(33.5 * scale, 120.609375 * scale, 33.5 * scale, 120.609375 * scale, 3.5 * scale, 96.109375 * scale);\r\n    ctx.bezierCurveTo(82.5 * scale, 75.109375 * scale, 69.5 * scale, 29.109375 * scale, 71.5 * scale, 6.109375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 10 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_lock(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 47 * scale;\r\n    can.height = 60 * scale;\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 47 * scale;\r\n    can.height = 60 * scale;\r\n    circle(ctx, 23.5 * scale, 20.734375 * scale, 15.132745950421556 * scale);\r\n    fill_path(ctx, undefined, color[2], 4 * scale);\r\n    circle(ctx, 23.5 * scale, 20.734375 * scale, 18.601075237738275 * scale);\r\n    fill_path(ctx, undefined, color[1], 4 * scale);\r\n    circle(ctx, 23.5 * scale, 20.734375 * scale, 11.40175425099138 * scale);\r\n    fill_path(ctx, undefined, color[1], 4 * scale);\r\n    ctx.save();\r\n    ctx.translate(23 * scale, 38.734375 * scale);\r\n    ctx.rotate(0);\r\n    round_rect(ctx, -21.5 * scale, -19 * scale, 43 * scale, 38 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[2], color[1], 4 * scale);\r\n    ctx.save();\r\n    ctx.translate(23.5 * scale, 43.734375 * scale);\r\n    ctx.rotate(0.5235987755982988);\r\n    round_regular_polygon(ctx, 3, 8.06225774829855 * scale, 0 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[3]);\r\n    circle(ctx, 23.5 * scale, 35.734375 * scale, 7.0710678118654755 * scale);\r\n    fill_path(ctx, color[3]);\r\n    return can;\r\n}\r\n;\r\nfunction create_tronctotem(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 201 * scale;\r\n    can.height = 164 * scale;\r\n    ctx.translate(0, 5 * scale);\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    circle(ctx, 100.5 * scale, 82 * scale, 74.92746655359852 * scale);\r\n    fill_path(ctx, color[0], color[0], 4 * scale);\r\n    circle(ctx, 100.5 * scale, 82 * scale, 65.9417374971317 * scale);\r\n    fill_path(ctx, color[0], color[0], 4 * scale);\r\n    ctx.translate(0, -5);\r\n    ctx.globalAlpha = 1;\r\n    circle(ctx, 100.5 * scale, 82 * scale, 74.92746655359852 * scale);\r\n    fill_path(ctx, color[1], color[3], 4 * scale);\r\n    circle(ctx, 100.5 * scale, 82 * scale, 65.9417374971317 * scale);\r\n    fill_path(ctx, color[1], color[2], 4 * scale);\r\n    circle(ctx, 100.5 * scale, 82 * scale, 35.9417374971317 * scale);\r\n    fill_path(ctx, color[1], color[2], 20 * scale);\r\n    circle(ctx, 100.5 * scale, 82 * scale, 15.9417374971317 * scale);\r\n    fill_path(ctx, color[1], color[2], 6 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_headtotem(scale, draw_shadow, color, rotate) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 501 * scale;\r\n    can.height = 564 * scale;\r\n    ctx.scale(0.5, 0.5);\r\n    ctx.translate(240 * scale, 255 * scale);\r\n    ctx.rotate(rotate);\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 0.2;\r\n    circle(ctx, 174 * scale, 87.984375 * scale, 20.8806130178211 * scale);\r\n    fill_path(ctx, color[0], color[0], 8 * scale);\r\n    circle(ctx, 174 * scale, 87.984375 * scale, 12.165525060596439 * scale);\r\n    fill_path(ctx, color[0], color[0], 8 * scale);\r\n    circle(ctx, 174 * scale, 87.484375 * scale, 6 * scale);\r\n    fill_path(ctx, color[0]);\r\n    circle(ctx, 30 * scale, 87.984375 * scale, 20.8806130178211 * scale);\r\n    fill_path(ctx, color[0], color[0], 4 * scale);\r\n    circle(ctx, 30 * scale, 87.984375 * scale, 12.165525060596439 * scale);\r\n    fill_path(ctx, color[0], color[0], 4 * scale);\r\n    circle(ctx, 30 * scale, 87.484375 * scale, 6 * scale);\r\n    fill_path(ctx, color[0]);\r\n    circle(ctx, 100 * scale, 30 * scale, 20.8806130178211 * scale);\r\n    fill_path(ctx, color[0], color[0], 4 * scale);\r\n    circle(ctx, 100 * scale, 30 * scale, 12.165525060596439 * scale);\r\n    fill_path(ctx, color[0], color[0], 4 * scale);\r\n    circle(ctx, 100 * scale, 30 * scale, 6 * scale);\r\n    fill_path(ctx, color[0]);\r\n    circle(ctx, 100 * scale, 130 * scale, 20.8806130178211 * scale);\r\n    fill_path(ctx, color[0], color[0], 4 * scale);\r\n    circle(ctx, 100 * scale, 130 * scale, 12.165525060596439 * scale);\r\n    fill_path(ctx, color[0], color[0], 4 * scale);\r\n    circle(ctx, 100 * scale, 130 * scale, 6 * scale);\r\n    fill_path(ctx, color[0]);\r\n    ctx.save();\r\n    ctx.translate(102 * scale, 81.984375 * scale);\r\n    ctx.rotate(0);\r\n    round_rect(ctx, -74 * scale, -57 * scale, 148 * scale, 114 * scale, 23 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0], color[0], 4 * scale);\r\n    ctx.save();\r\n    ctx.translate(101 * scale, 64.984375 * scale);\r\n    ctx.rotate(0);\r\n    round_rect(ctx, -33 * scale, -10 * scale, 66 * scale, 20 * scale, 15 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0], color[0], 4 * scale);\r\n    ctx.save();\r\n    ctx.translate(102 * scale, 63.484375 * scale);\r\n    ctx.rotate(0);\r\n    round_rect(ctx, -9 * scale, -27.5 * scale, 18 * scale, 55 * scale, 15 * scale);\r\n    ctx.restore();\r\n    ctx.translate(5, -5);\r\n    ctx.globalAlpha = 1;\r\n    circle(ctx, 174 * scale, 87.984375 * scale, 20.8806130178211 * scale);\r\n    fill_path(ctx, color[1], color[3], 8 * scale);\r\n    circle(ctx, 174 * scale, 87.984375 * scale, 12.165525060596439 * scale);\r\n    fill_path(ctx, color[1], color[3], 8 * scale);\r\n    circle(ctx, 174 * scale, 87.484375 * scale, 6 * scale);\r\n    fill_path(ctx, color[2]);\r\n    circle(ctx, 30 * scale, 87.984375 * scale, 20.8806130178211 * scale);\r\n    fill_path(ctx, color[1], color[3], 8 * scale);\r\n    circle(ctx, 30 * scale, 87.984375 * scale, 12.165525060596439 * scale);\r\n    fill_path(ctx, color[1], color[3], 8 * scale);\r\n    circle(ctx, 30 * scale, 87.484375 * scale, 6 * scale);\r\n    fill_path(ctx, color[2]);\r\n    circle(ctx, 102 * scale, 30 * scale, 20.8806130178211 * scale);\r\n    fill_path(ctx, color[1], color[3], 8 * scale);\r\n    circle(ctx, 102 * scale, 30 * scale, 12.165525060596439 * scale);\r\n    fill_path(ctx, color[1], color[3], 8 * scale);\r\n    circle(ctx, 102 * scale, 30 * scale, 6 * scale);\r\n    fill_path(ctx, color[1]);\r\n    circle(ctx, 102 * scale, 130 * scale, 20.8806130178211 * scale);\r\n    fill_path(ctx, color[1], color[3], 8 * scale);\r\n    circle(ctx, 102 * scale, 130 * scale, 12.165525060596439 * scale);\r\n    fill_path(ctx, color[1], color[3], 8 * scale);\r\n    circle(ctx, 102 * scale, 130 * scale, 6 * scale);\r\n    fill_path(ctx, color[1]);\r\n    ctx.save();\r\n    ctx.translate(102 * scale, 81.984375 * scale);\r\n    round_rect(ctx, -74 * scale, -57 * scale, 148 * scale, 114 * scale, 23 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[1], color[3], 8 * scale);\r\n    ctx.save();\r\n    ctx.translate(101 * scale, 64.984375 * scale);\r\n    round_rect(ctx, -33 * scale, -10 * scale, 66 * scale, 20 * scale, 15 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[2], color[1], 8 * scale);\r\n    ctx.save();\r\n    ctx.translate(102 * scale, 63.484375 * scale);\r\n    round_rect(ctx, -9 * scale, -27.5 * scale, 18 * scale, 55 * scale, 15 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[2], color[1], 8 * scale);\r\n    circle(ctx, 135 * scale, 107.36605834960938 * scale, 21.095023109728988 * scale);\r\n    fill_path(ctx, color[1], color[3], 8 * scale);\r\n    circle(ctx, 135 * scale, 107.36605834960938 * scale, 13 * scale);\r\n    fill_path(ctx, color[1], color[3], 8 * scale);\r\n    circle(ctx, 135 * scale, 107.36605834960938 * scale, 6.082762530298219 * scale);\r\n    fill_path(ctx, color[2]);\r\n    circle(ctx, 70 * scale, 107.36605834960938 * scale, 21.095023109728988 * scale);\r\n    fill_path(ctx, color[1], color[3], 8 * scale);\r\n    circle(ctx, 70 * scale, 107.36605834960938 * scale, 13 * scale);\r\n    fill_path(ctx, color[1], color[3], 8 * scale);\r\n    circle(ctx, 70 * scale, 107.36605834960938 * scale, 6.082762530298219 * scale);\r\n    fill_path(ctx, color[2]);\r\n    return can;\r\n}\r\n;\r\nfunction create_icon_team(scale, color, i) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 95 * scale;\r\n    can.height = 85 * scale;\r\n    if (i == 0) {\r\n        ctx.translate(7 * scale, 15 * scale);\r\n        ctx.scale(0.9, 0.9);\r\n        ctx.save();\r\n        round_rect(ctx, 0 * scale, 5 * scale, 90 * scale, 60 * scale, 10);\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalCompositeOperation = \"destination-out\";\r\n        circle(ctx, 25 * scale, 40 * scale, 10 * scale);\r\n        ctx.fill();\r\n        circle(ctx, 65 * scale, 40 * scale, 10 * scale);\r\n        ctx.fill();\r\n        ctx.restore();\r\n        ctx.save();\r\n        round_rect(ctx, 0, 0, 90 * scale, 60 * scale, 10 * scale);\r\n        fill_path(ctx, color[1]);\r\n        ctx.globalCompositeOperation = \"destination-out\";\r\n        circle(ctx, 25 * scale, 40 * scale, 10 * scale);\r\n        ctx.fill();\r\n        circle(ctx, 65 * scale, 40 * scale, 10 * scale);\r\n        ctx.fill();\r\n        ctx.restore();\r\n    } else if (i == 1) {\r\n        ctx.scale(0.8, 0.8);\r\n        ctx.translate(15 * scale, 33 * scale);\r\n        ctx.save();\r\n        ctx.scale(0.56, 0.56);\r\n        ctx.translate(-39 * scale, -60 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(32.5 * scale, 50.642852783203125 * scale);\r\n        ctx.bezierCurveTo(83 * scale, 69.64285278320312 * scale, 83 * scale, 69.64285278320312 * scale, 133.5 * scale, 88.64285278320312 * scale);\r\n        ctx.bezierCurveTo(93 * scale, 92.64285278320312 * scale, 93 * scale, 92.64285278320312 * scale, 52.5 * scale, 96.64285278320312 * scale);\r\n        ctx.bezierCurveTo(30.5 * scale, 100.64285278320312 * scale, 36.5 * scale, 94.64285278320312 * scale, 32.5 * scale, 84.64285278320312 * scale);\r\n        ctx.bezierCurveTo(21.5 * scale, 45.642852783203125 * scale, 24.5 * scale, 48.642852783203125 * scale, 31.5 * scale, 50.642852783203125 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(116.5 * scale, 85.64285278320312 * scale);\r\n        ctx.bezierCurveTo(160.5 * scale, 67.14285278320312 * scale, 160.5 * scale, 67.14285278320312 * scale, 204.5 * scale, 48.642852783203125 * scale);\r\n        ctx.bezierCurveTo(220.5 * scale, 42.642852783203125 * scale, 208.5 * scale, 68.64285278320312 * scale, 205.5 * scale, 85.64285278320312 * scale);\r\n        ctx.bezierCurveTo(202.5 * scale, 98.64285278320312 * scale, 199.5 * scale, 98.64285278320312 * scale, 188.5 * scale, 100.64285278320312 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(166.5 * scale, 68.64285278320312 * scale);\r\n        ctx.bezierCurveTo(147.5 * scale, 72.64285278320312 * scale, 145.5 * scale, 73.64285278320312 * scale, 142.5 * scale, 62.642852783203125 * scale);\r\n        ctx.bezierCurveTo(121.5 * scale, 12.642852783203125 * scale, 122.5 * scale, 5.642852783203125 * scale, 117.5 * scale, 15.642852783203125 * scale);\r\n        ctx.bezierCurveTo(105.5 * scale, 40.642852783203125 * scale, 105.5 * scale, 40.642852783203125 * scale, 93.5 * scale, 65.64285278320312 * scale);\r\n        ctx.bezierCurveTo(89.5 * scale, 74.64285278320312 * scale, 84.5 * scale, 72.64285278320312 * scale, 73.5 * scale, 74.64285278320312 * scale);\r\n        ctx.bezierCurveTo(98 * scale, 87.64285278320312 * scale, 98 * scale, 87.64285278320312 * scale, 122.5 * scale, 100.64285278320312 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n        ctx.restore();\r\n        ctx.save();\r\n        round_rect(ctx, 0, 15 * scale, 90 * scale, 50 * scale, 10 * scale);\r\n        fill_path(ctx, color[0]);\r\n        round_rect(ctx, 0, 10 * scale, 90 * scale, 50 * scale, 10 * scale);\r\n        fill_path(ctx, color[1]);\r\n        ctx.globalCompositeOperation = \"destination-out\";\r\n        circle(ctx, 25 * scale, 40 * scale, 10 * scale);\r\n        ctx.fill();\r\n        circle(ctx, 65 * scale, 40 * scale, 10 * scale);\r\n        ctx.fill();\r\n        ctx.restore();\r\n    }\r\n    return can;\r\n}\r\n;\r\nfunction create_team_button(scale, color, i) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 120 * scale;\r\n    can.height = 100 * scale;\r\n    round_rect(ctx, 10 * scale, 10 * scale, 95 * scale, 80 * scale, 10 * scale);\r\n    fill_path(ctx, color[2]);\r\n    round_rect(ctx, 10 * scale, 5 * scale, 95 * scale, 80 * scale, 10 * scale);\r\n    fill_path(ctx, color[3], color[4], 4 * scale);\r\n    if (i == 0) {\r\n        var img = create_icon_team(0.75 * scale, color, 0);\r\n        ctx.drawImage(img, 22 * scale, 18 * scale);\r\n    } else if (i == 1) {\r\n        var img = create_icon_team(0.75 * scale, color, 1);\r\n        ctx.drawImage(img, 22 * scale, 18 * scale);\r\n    }\r\n    return can;\r\n}\r\n;\r\nfunction create_totem(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 185 * scale;\r\n    can.height = 164 * scale;\r\n    ctx.translate(0, 0);\r\n    var img = create_tronctotem(scale, draw_shadow, color);\r\n    ctx.drawImage(img, -10 * scale, 0 * scale);\r\n    var img = create_headtotem(scale, draw_shadow, color, 0);\r\n    ctx.drawImage(img, -83 * scale, -40 * scale);\r\n    var img = create_headtotem(scale, draw_shadow, color, Math.PI / 1.4);\r\n    ctx.drawImage(img, -15 * scale, -88 * scale);\r\n    var img = create_headtotem(scale, draw_shadow, color, Math.PI / -1.4);\r\n    ctx.drawImage(img, 15 * scale, -8 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_lockpick(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 450 * scale;\r\n    can.height = 790 * scale;\r\n    ctx.translate(5 * scale, 5 * scale);\r\n    ctx.globalAlpha = draw_shadow ? 0 : 0;\r\n    circle(ctx, 178.5 * scale, 172.828125 * scale, 150 * scale);\r\n    fill_path(ctx, undefined, color[0], 65 * scale);\r\n    circle(ctx, 178.5 * scale, 172.828125 * scale, 150 * scale);\r\n    fill_path(ctx, undefined, color[0], 55 * scale);\r\n    ctx.closePath();\r\n    ctx.save();\r\n    ctx.translate(177 * scale, 512.328125 * scale);\r\n    round_rect(ctx, -25 * scale, -202.5 * scale, 65 * scale, 405 * scale, 25 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0]);\r\n    ctx.save();\r\n    ctx.translate(136 * scale, 581.828125 * scale);\r\n    round_rect(ctx, -39 * scale, -23 * scale, 78 * scale, 46 * scale, 25 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0]);\r\n    ctx.save();\r\n    ctx.translate(135.5 * scale, 663.828125 * scale);\r\n    round_rect(ctx, -39.5 * scale, -22 * scale, 79 * scale, 44 * scale, 25 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(114 * scale, 594.828125 * scale);\r\n    ctx.bezierCurveTo(175 * scale, 596.828125 * scale, 163 * scale, 596.828125 * scale, 172 * scale, 594.828125 * scale);\r\n    ctx.bezierCurveTo(171.5 * scale, 633.828125 * scale, 171.5 * scale, 633.828125 * scale, 171 * scale, 672.828125 * scale);\r\n    ctx.bezierCurveTo(110 * scale, 673.828125 * scale, 140.5 * scale, 673.328125 * scale, 110 * scale, 673.828125 * scale);\r\n    ctx.bezierCurveTo(110.5 * scale, 661.828125 * scale, 110.5 * scale, 661.828125 * scale, 111 * scale, 649.828125 * scale);\r\n    ctx.bezierCurveTo(157 * scale, 633.828125 * scale, 134 * scale, 607.828125 * scale, 114 * scale, 594.828125 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.translate(0, 5 * scale);\r\n    ctx.moveTo(140 * scale, 294.828125 * scale);\r\n    ctx.bezierCurveTo(212 * scale, 295.828125 * scale, 176.5 * scale, 295.328125 * scale, 213 * scale, 295.828125 * scale);\r\n    ctx.bezierCurveTo(201.5 * scale, 325.328125 * scale, 201.5 * scale, 325.328125 * scale, 190 * scale, 354.828125 * scale);\r\n    ctx.bezierCurveTo(175.5 * scale, 355.828125 * scale, 175.5 * scale, 355.828125 * scale, 161 * scale, 356.828125 * scale);\r\n    ctx.bezierCurveTo(154.5 * scale, 328.828125 * scale, 154.5 * scale, 328.828125 * scale, 148 * scale, 300.828125 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.translate(3, -5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(159 * scale, 679.828125 * scale);\r\n    ctx.bezierCurveTo(180 * scale, 665.828125 * scale, 155 * scale, 675.828125 * scale, 151 * scale, 671.828125 * scale);\r\n    ctx.bezierCurveTo(154.5 * scale, 685.328125 * scale, 154.5 * scale, 685.328125 * scale, 158 * scale, 698.828125 * scale);\r\n    ctx.bezierCurveTo(171 * scale, 699.828125 * scale, 171 * scale, 699.828125 * scale, 184 * scale, 700.828125 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.save();\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(157 * scale, 548.828125 * scale);\r\n    ctx.bezierCurveTo(157 * scale, 561.828125 * scale, 157 * scale, 561.828125 * scale, 157 * scale, 574.828125 * scale);\r\n    ctx.bezierCurveTo(132.5 * scale, 580.828125 * scale, 132.5 * scale, 580.828125 * scale, 108 * scale, 586.828125 * scale);\r\n    ctx.bezierCurveTo(112 * scale, 599.828125 * scale, 111 * scale, 593.828125 * scale, 112 * scale, 599.828125 * scale);\r\n    ctx.bezierCurveTo(159 * scale, 603.828125 * scale, 126.5 * scale, 601.328125 * scale, 141 * scale, 602.828125 * scale);\r\n    ctx.bezierCurveTo(145 * scale, 641.828125 * scale, 143.5 * scale, 623.828125 * scale, 146 * scale, 644.828125 * scale);\r\n    ctx.bezierCurveTo(129.5 * scale, 645.328125 * scale, 129.5 * scale, 645.328125 * scale, 113 * scale, 645.828125 * scale);\r\n    ctx.bezierCurveTo(107.5 * scale, 652.828125 * scale, 107.5 * scale, 652.828125 * scale, 102 * scale, 659.828125 * scale);\r\n    ctx.bezierCurveTo(104 * scale, 669.328125 * scale, 104 * scale, 669.328125 * scale, 106 * scale, 678.828125 * scale);\r\n    ctx.bezierCurveTo(145 * scale, 679.328125 * scale, 145 * scale, 679.328125 * scale, 184 * scale, 679.828125 * scale);\r\n    ctx.bezierCurveTo(185 * scale, 615.828125 * scale, 185 * scale, 615.828125 * scale, 186 * scale, 551.828125 * scale);\r\n    ctx.bezierCurveTo(172.5 * scale, 551.328125 * scale, 172.5 * scale, 551.328125 * scale, 159 * scale, 550.828125 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[0], 7 * scale);\r\n    ctx.restore();\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(15 * scale, 35 * scale);\r\n    circle(ctx, 178.5 * scale, 172.828125 * scale, 150 * scale);\r\n    fill_path(ctx, undefined, color[2], 95 * scale);\r\n    circle(ctx, 178.5 * scale, 172.828125 * scale, 150 * scale);\r\n    fill_path(ctx, undefined, color[1], 55 * scale);\r\n    ctx.closePath();\r\n    ctx.save();\r\n    ctx.translate(177 * scale, 512.328125 * scale);\r\n    round_rect(ctx, -25 * scale, -202.5 * scale, 65 * scale, 405 * scale, 25 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[1], color[2], 20 * scale);\r\n    ctx.save();\r\n    ctx.translate(136 * scale, 581.828125 * scale);\r\n    round_rect(ctx, -39 * scale, -23 * scale, 78 * scale, 46 * scale, 25 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[1], color[2], 20 * scale);\r\n    ctx.save();\r\n    ctx.translate(135.5 * scale, 663.828125 * scale);\r\n    round_rect(ctx, -39.5 * scale, -22 * scale, 79 * scale, 44 * scale, 25 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[1], color[2], 20 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(114 * scale, 594.828125 * scale);\r\n    ctx.bezierCurveTo(175 * scale, 596.828125 * scale, 163 * scale, 596.828125 * scale, 172 * scale, 594.828125 * scale);\r\n    ctx.bezierCurveTo(171.5 * scale, 633.828125 * scale, 171.5 * scale, 633.828125 * scale, 171 * scale, 672.828125 * scale);\r\n    ctx.bezierCurveTo(110 * scale, 673.828125 * scale, 140.5 * scale, 673.328125 * scale, 110 * scale, 673.828125 * scale);\r\n    ctx.bezierCurveTo(110.5 * scale, 661.828125 * scale, 110.5 * scale, 661.828125 * scale, 111 * scale, 649.828125 * scale);\r\n    ctx.bezierCurveTo(157 * scale, 633.828125 * scale, 134 * scale, 607.828125 * scale, 114 * scale, 594.828125 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.translate(0, 5 * scale);\r\n    ctx.moveTo(123 * scale, 294.828125 * scale);\r\n    ctx.bezierCurveTo(212 * scale, 295.828125 * scale, 190.5 * scale, 295.328125 * scale, 250 * scale, 295.828125 * scale);\r\n    ctx.bezierCurveTo(231.5 * scale, 325.328125 * scale, 231.5 * scale, 325.328125 * scale, 220 * scale, 354.828125 * scale);\r\n    ctx.bezierCurveTo(175.5 * scale, 355.828125 * scale, 175.5 * scale, 355.828125 * scale, 140 * scale, 356.828125 * scale);\r\n    ctx.bezierCurveTo(123.5 * scale, 328.828125 * scale, 123.5 * scale, 328.828125 * scale, 123 * scale, 294.828125 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1]);\r\n    ctx.translate(0, -5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(159 * scale, 679.828125 * scale);\r\n    ctx.bezierCurveTo(180 * scale, 665.828125 * scale, 155 * scale, 675.828125 * scale, 151 * scale, 671.828125 * scale);\r\n    ctx.bezierCurveTo(154.5 * scale, 685.328125 * scale, 154.5 * scale, 685.328125 * scale, 158 * scale, 698.828125 * scale);\r\n    ctx.bezierCurveTo(171 * scale, 699.828125 * scale, 171 * scale, 699.828125 * scale, 184 * scale, 700.828125 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1]);\r\n    ctx.save();\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(157 * scale, 548.828125 * scale);\r\n    ctx.bezierCurveTo(157 * scale, 561.828125 * scale, 157 * scale, 561.828125 * scale, 157 * scale, 574.828125 * scale);\r\n    ctx.bezierCurveTo(132.5 * scale, 580.828125 * scale, 132.5 * scale, 580.828125 * scale, 108 * scale, 586.828125 * scale);\r\n    ctx.bezierCurveTo(112 * scale, 599.828125 * scale, 111 * scale, 593.828125 * scale, 112 * scale, 599.828125 * scale);\r\n    ctx.bezierCurveTo(159 * scale, 603.828125 * scale, 126.5 * scale, 601.328125 * scale, 141 * scale, 602.828125 * scale);\r\n    ctx.bezierCurveTo(145 * scale, 641.828125 * scale, 143.5 * scale, 623.828125 * scale, 146 * scale, 644.828125 * scale);\r\n    ctx.bezierCurveTo(129.5 * scale, 645.328125 * scale, 129.5 * scale, 645.328125 * scale, 113 * scale, 645.828125 * scale);\r\n    ctx.bezierCurveTo(107.5 * scale, 652.828125 * scale, 107.5 * scale, 652.828125 * scale, 102 * scale, 659.828125 * scale);\r\n    ctx.bezierCurveTo(104 * scale, 669.328125 * scale, 104 * scale, 669.328125 * scale, 106 * scale, 678.828125 * scale);\r\n    ctx.bezierCurveTo(145 * scale, 679.328125 * scale, 145 * scale, 679.328125 * scale, 184 * scale, 679.828125 * scale);\r\n    ctx.bezierCurveTo(185 * scale, 615.828125 * scale, 185 * scale, 615.828125 * scale, 186 * scale, 551.828125 * scale);\r\n    ctx.bezierCurveTo(172.5 * scale, 551.328125 * scale, 172.5 * scale, 551.328125 * scale, 159 * scale, 550.828125 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[1], 7 * scale);\r\n    ctx.restore();\r\n    return can;\r\n}\r\n;\r\nfunction create_resurrection_ground(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 202 * scale;\r\n    can.height = 202 * scale;\r\n    ctx.translate(2 * scale, 1 * scale);\r\n    ctx.globalAlpha = 0.3;\r\n    circle(ctx, 98 * scale, 99 * scale, 100 * scale);\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 0.5;\r\n    circle(ctx, 98 * scale, 99 * scale, 90 * scale);\r\n    fill_path(ctx, color[1]);\r\n    return can;\r\n}\r\n;\r\nfunction create_resurrection_hole(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 89 * scale;\r\n    can.height = 89 * scale;\r\n    ctx.save();\r\n    ctx.translate(44.5 * scale, 44.5 * scale);\r\n    round_regular_polygon(ctx, 6, 40 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0], color[1], 5 * scale);\r\n    ctx.save();\r\n    ctx.translate(44.5 * scale, 44.5 * scale);\r\n    round_regular_polygon(ctx, 6, 25.11521001172521 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[2], color[3], 5 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_resurrection_rotate(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 88 * scale;\r\n    can.height = 88 * scale;\r\n    ctx.save();\r\n    ctx.translate(44 * scale, 44 * scale);\r\n    ctx.rotate(0.52);\r\n    round_regular_polygon(ctx, 6, 43 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0], color[1], 3 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_resurrection(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 202 * scale;\r\n    can.height = 202 * scale;\r\n    ctx.translate(2 * scale, 1 * scale);\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(0, 10 * scale);\r\n    ctx.save();\r\n    ctx.translate(98 * scale, 41.15177917480469 * scale);\r\n    ctx.rotate(0.8);\r\n    round_rect(ctx, -16 * scale, -16.5 * scale, 32 * scale, 33 * scale, 7 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[2]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(98 * scale, 22.5089111328125 * scale);\r\n    ctx.bezierCurveTo(97.5 * scale, 41.5089111328125 * scale, 97.5 * scale, 41.5089111328125 * scale, 97 * scale, 60.5089111328125 * scale);\r\n    fill_path(ctx, color[2]);\r\n    ctx.save();\r\n    ctx.translate(147.5 * scale, 69.5089111328125 * scale);\r\n    ctx.rotate(0.2);\r\n    round_rect(ctx, -15.5 * scale, -16 * scale, 31 * scale, 32 * scale, 7 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[2]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(163 * scale, 59.50892639160156 * scale);\r\n    ctx.bezierCurveTo(147 * scale, 69.50892639160156 * scale, 127 * scale, 82.50892639160156 * scale, 131 * scale, 79.50892639160156 * scale);\r\n    fill_path(ctx, color[2]);\r\n    ctx.save();\r\n    ctx.translate(143.5 * scale, 128.2946319580078 * scale);\r\n    ctx.rotate(1.24);\r\n    round_rect(ctx, -16.5 * scale, -17.5 * scale, 33 * scale, 35 * scale, 7 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[2]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(162 * scale, 135.93748474121094 * scale);\r\n    ctx.bezierCurveTo(143.5 * scale, 128.43748474121094 * scale, 129 * scale, 120.93748474121094 * scale, 125 * scale, 120.93748474121094 * scale);\r\n    fill_path(ctx, color[2]);\r\n    ctx.save();\r\n    ctx.translate(99 * scale, 156.08035278320312 * scale);\r\n    ctx.rotate(0.84);\r\n    round_rect(ctx, -18 * scale, -18 * scale, 36 * scale, 36 * scale, 7 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[2]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(98 * scale, 136.08035278320312 * scale);\r\n    ctx.bezierCurveTo(98 * scale, 156.08035278320312 * scale, 98 * scale, 156.08035278320312 * scale, 98 * scale, 176.08035278320312 * scale);\r\n    fill_path(ctx, color[2]);\r\n    ctx.save();\r\n    ctx.translate(54 * scale, 72.22320556640625 * scale);\r\n    ctx.rotate(1.32);\r\n    round_rect(ctx, -18 * scale, -19 * scale, 36 * scale, 38 * scale, 7 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[2]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(34 * scale, 60.79463195800781 * scale);\r\n    ctx.bezierCurveTo(53.5 * scale, 72.29463195800781 * scale, 69 * scale, 79.79463195800781 * scale, 73 * scale, 83.79463195800781 * scale);\r\n    fill_path(ctx, color[2]);\r\n    ctx.save();\r\n    ctx.translate(49 * scale, 127.29463195800781 * scale);\r\n    ctx.rotate(1.76);\r\n    round_rect(ctx, -20 * scale, -17.5 * scale, 40 * scale, 35 * scale, 7 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[2]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(30 * scale, 141.7946319580078 * scale);\r\n    ctx.bezierCurveTo(47 * scale, 130.2946319580078 * scale, 64 * scale, 119.79463195800781 * scale, 64 * scale, 118.79463195800781 * scale);\r\n    fill_path(ctx, color[2]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(0, -10 * scale);\r\n    ctx.save();\r\n    ctx.translate(98 * scale, 41.15177917480469 * scale);\r\n    ctx.rotate(0.8);\r\n    round_rect(ctx, -16 * scale, -16.5 * scale, 32 * scale, 33 * scale, 7 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[3], color[4], 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(98 * scale, 22.5089111328125 * scale);\r\n    ctx.bezierCurveTo(97.5 * scale, 41.5089111328125 * scale, 97.5 * scale, 41.5089111328125 * scale, 97 * scale, 60.5089111328125 * scale);\r\n    fill_path(ctx, undefined, color[4], 5 * scale);\r\n    ctx.save();\r\n    ctx.translate(147.5 * scale, 69.5089111328125 * scale);\r\n    ctx.rotate(0.2);\r\n    round_rect(ctx, -15.5 * scale, -16 * scale, 31 * scale, 32 * scale, 7 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[3], color[4], 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(163 * scale, 59.50892639160156 * scale);\r\n    ctx.bezierCurveTo(147 * scale, 69.50892639160156 * scale, 127 * scale, 82.50892639160156 * scale, 131 * scale, 79.50892639160156 * scale);\r\n    fill_path(ctx, undefined, color[4], 5 * scale);\r\n    ctx.save();\r\n    ctx.translate(143.5 * scale, 128.2946319580078 * scale);\r\n    ctx.rotate(1.24);\r\n    round_rect(ctx, -16.5 * scale, -17.5 * scale, 33 * scale, 35 * scale, 7 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[3], color[4], 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(162 * scale, 135.93748474121094 * scale);\r\n    ctx.bezierCurveTo(143.5 * scale, 128.43748474121094 * scale, 129 * scale, 120.93748474121094 * scale, 125 * scale, 120.93748474121094 * scale);\r\n    fill_path(ctx, undefined, color[4], 5 * scale);\r\n    ctx.save();\r\n    ctx.translate(99 * scale, 156.08035278320312 * scale);\r\n    ctx.rotate(0.84);\r\n    round_rect(ctx, -18 * scale, -18 * scale, 36 * scale, 36 * scale, 7 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[3], color[4], 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(98 * scale, 136.08035278320312 * scale);\r\n    ctx.bezierCurveTo(98 * scale, 156.08035278320312 * scale, 98 * scale, 156.08035278320312 * scale, 98 * scale, 176.08035278320312 * scale);\r\n    fill_path(ctx, undefined, color[4], 5 * scale);\r\n    ctx.save();\r\n    ctx.translate(54 * scale, 72.22320556640625 * scale);\r\n    ctx.rotate(1.32);\r\n    round_rect(ctx, -18 * scale, -19 * scale, 36 * scale, 38 * scale, 7 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[3], color[4], 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(34 * scale, 60.79463195800781 * scale);\r\n    ctx.bezierCurveTo(53.5 * scale, 72.29463195800781 * scale, 69 * scale, 79.79463195800781 * scale, 73 * scale, 83.79463195800781 * scale);\r\n    fill_path(ctx, undefined, color[4], 5 * scale);\r\n    ctx.save();\r\n    ctx.translate(49 * scale, 127.29463195800781 * scale);\r\n    ctx.rotate(1.76);\r\n    round_rect(ctx, -20 * scale, -17.5 * scale, 40 * scale, 35 * scale, 7 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[3], color[4], 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(30 * scale, 141.7946319580078 * scale);\r\n    ctx.bezierCurveTo(47 * scale, 130.2946319580078 * scale, 64 * scale, 119.79463195800781 * scale, 64 * scale, 118.79463195800781 * scale);\r\n    fill_path(ctx, undefined, color[4], 5 * scale);\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(0, 10 * scale);\r\n    ctx.save();\r\n    ctx.translate(98 * scale, 99 * scale);\r\n    round_regular_polygon(ctx, 6, 70.28669492273468 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[2]);\r\n    ctx.save();\r\n    ctx.translate(98 * scale, 99 * scale);\r\n    round_regular_polygon(ctx, 6, 56.455940020351264 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[2]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(0, -10 * scale);\r\n    ctx.save();\r\n    ctx.translate(98 * scale, 99 * scale);\r\n    round_regular_polygon(ctx, 6, 70.28669492273468 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[5], color[6], 5 * scale);\r\n    ctx.save();\r\n    ctx.translate(98 * scale, 99 * scale);\r\n    round_regular_polygon(ctx, 6, 56.455940020351264 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[7], color[8], 7 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_dragon_heart(scale, useless, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 161 * scale;\r\n    can.height = 184 * scale;\r\n    ctx.translate(0, 10 * scale);\r\n    ctx.globalAlpha = 1;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(105.5 * scale, 34.609375 * scale);\r\n    ctx.bezierCurveTo(48.5 * scale, 7.609375 * scale, 11.5 * scale, 58.609375 * scale, 20.5 * scale, 97.609375 * scale);\r\n    ctx.bezierCurveTo(44.5 * scale, 161.609375 * scale, 70.5 * scale, 171.609375 * scale, 88.5 * scale, 156.609375 * scale);\r\n    ctx.bezierCurveTo(120.5 * scale, 129.609375 * scale, 123.5 * scale, 105.609375 * scale, 128.5 * scale, 83.609375 * scale);\r\n    ctx.bezierCurveTo(137.5 * scale, 79.609375 * scale, 141.5 * scale, 79.609375 * scale, 146.5 * scale, 81.609375 * scale);\r\n    ctx.bezierCurveTo(153.5 * scale, 70.609375 * scale, 151.5 * scale, 65.609375 * scale, 148.5 * scale, 61.609375 * scale);\r\n    ctx.bezierCurveTo(134.5 * scale, 60.609375 * scale, 131.5 * scale, 63.609375 * scale, 127.5 * scale, 66.609375 * scale);\r\n    ctx.bezierCurveTo(127.5 * scale, 55.609375 * scale, 125.5 * scale, 54.609375 * scale, 120.5 * scale, 51.609375 * scale);\r\n    ctx.bezierCurveTo(128.5 * scale, 42.609375 * scale, 136.5 * scale, 38.609375 * scale, 147.5 * scale, 39.609375 * scale);\r\n    ctx.bezierCurveTo(152.5 * scale, 23.609375 * scale, 147.5 * scale, 21.609375 * scale, 140.5 * scale, 17.609375 * scale);\r\n    ctx.bezierCurveTo(120.5 * scale, 17.609375 * scale, 114.5 * scale, 27.609375 * scale, 106.5 * scale, 35.609375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(45.5 * scale, 144.609375 * scale);\r\n    ctx.bezierCurveTo(35.5 * scale, 155.609375 * scale, 37 * scale, 152.109375 * scale, 28.5 * scale, 159.609375 * scale);\r\n    ctx.bezierCurveTo(16.5 * scale, 154.609375 * scale, 16.5 * scale, 151.609375 * scale, 17.5 * scale, 141.609375 * scale);\r\n    ctx.bezierCurveTo(25.5 * scale, 134.109375 * scale, 25.5 * scale, 134.109375 * scale, 33.5 * scale, 126.609375 * scale);\r\n    fill_path(ctx, color[0]);\r\n    ctx.translate(0, -10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(45.5 * scale, 144.609375 * scale);\r\n    ctx.bezierCurveTo(35.5 * scale, 155.609375 * scale, 37 * scale, 152.109375 * scale, 28.5 * scale, 159.609375 * scale);\r\n    ctx.bezierCurveTo(16.5 * scale, 154.609375 * scale, 16.5 * scale, 151.609375 * scale, 17.5 * scale, 141.609375 * scale);\r\n    ctx.bezierCurveTo(25.5 * scale, 134.109375 * scale, 25.5 * scale, 134.109375 * scale, 33.5 * scale, 126.609375 * scale);\r\n    fill_path(ctx, color[1], color[2], 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(105.5 * scale, 34.609375 * scale);\r\n    ctx.bezierCurveTo(48.5 * scale, 7.609375 * scale, 11.5 * scale, 58.609375 * scale, 20.5 * scale, 97.609375 * scale);\r\n    ctx.bezierCurveTo(44.5 * scale, 161.609375 * scale, 70.5 * scale, 171.609375 * scale, 88.5 * scale, 156.609375 * scale);\r\n    ctx.bezierCurveTo(120.5 * scale, 129.609375 * scale, 123.5 * scale, 105.609375 * scale, 128.5 * scale, 83.609375 * scale);\r\n    ctx.bezierCurveTo(137.5 * scale, 79.609375 * scale, 141.5 * scale, 79.609375 * scale, 146.5 * scale, 81.609375 * scale);\r\n    ctx.bezierCurveTo(153.5 * scale, 70.609375 * scale, 151.5 * scale, 65.609375 * scale, 148.5 * scale, 61.609375 * scale);\r\n    ctx.bezierCurveTo(134.5 * scale, 60.609375 * scale, 131.5 * scale, 63.609375 * scale, 127.5 * scale, 66.609375 * scale);\r\n    ctx.bezierCurveTo(127.5 * scale, 55.609375 * scale, 125.5 * scale, 54.609375 * scale, 120.5 * scale, 51.609375 * scale);\r\n    ctx.bezierCurveTo(128.5 * scale, 42.609375 * scale, 136.5 * scale, 38.609375 * scale, 147.5 * scale, 39.609375 * scale);\r\n    ctx.bezierCurveTo(152.5 * scale, 23.609375 * scale, 147.5 * scale, 21.609375 * scale, 140.5 * scale, 17.609375 * scale);\r\n    ctx.bezierCurveTo(120.5 * scale, 17.609375 * scale, 114.5 * scale, 27.609375 * scale, 106.5 * scale, 35.609375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(104.5 * scale, 35.609375 * scale);\r\n    ctx.bezierCurveTo(71.5 * scale, 36.609375 * scale, 57.5 * scale, 52.609375 * scale, 58.5 * scale, 81.609375 * scale);\r\n    ctx.bezierCurveTo(59.5 * scale, 103.609375 * scale, 66.5 * scale, 107.609375 * scale, 66.5 * scale, 116.609375 * scale);\r\n    ctx.bezierCurveTo(67.5 * scale, 128.609375 * scale, 65.5 * scale, 131.609375 * scale, 63.5 * scale, 137.609375 * scale);\r\n    fill_path(ctx, undefined, color[2], 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(59.5 * scale, 72.609375 * scale);\r\n    ctx.bezierCurveTo(38.5 * scale, 80.609375 * scale, 43.5 * scale, 81.609375 * scale, 37.5 * scale, 89.609375 * scale);\r\n    fill_path(ctx, undefined, color[2], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(60.5 * scale, 85.609375 * scale);\r\n    ctx.bezierCurveTo(75.5 * scale, 91.609375 * scale, 76.5 * scale, 96.609375 * scale, 81.5 * scale, 104.609375 * scale);\r\n    fill_path(ctx, undefined, color[2], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(68.5 * scale, 122.609375 * scale);\r\n    ctx.bezierCurveTo(79.5 * scale, 130.609375 * scale, 74.5 * scale, 128.609375 * scale, 80.5 * scale, 134.609375 * scale);\r\n    fill_path(ctx, color[1], color[2], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(142.5 * scale, 18.609375 * scale);\r\n    ctx.bezierCurveTo(151.5 * scale, 28.609375 * scale, 151.5 * scale, 32.609375 * scale, 146.5 * scale, 40.609375 * scale);\r\n    ctx.bezierCurveTo(137.5 * scale, 26.609375 * scale, 138.5 * scale, 24.609375 * scale, 142.5 * scale, 19.609375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(146.5 * scale, 61.50892639160156 * scale);\r\n    ctx.bezierCurveTo(157.5 * scale, 69.50892639160156 * scale, 150.5 * scale, 79.50892639160156 * scale, 145.5 * scale, 81.50892639160156 * scale);\r\n    ctx.bezierCurveTo(140.5 * scale, 65.50892639160156 * scale, 144.5 * scale, 64.50892639160156 * scale, 146.5 * scale, 62.50892639160156 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3]);\r\n    return can;\r\n}\r\n;\r\nfunction create_ghost(scale, useless, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 254 * scale;\r\n    can.height = 288 * scale;\r\n    ctx.translate(0, 5);\r\n    ctx.globalAlpha = 0.5;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(218 * scale, 84.640625 * scale);\r\n    ctx.bezierCurveTo(150 * scale, 13.640625 * scale, 186 * scale, 92.640625 * scale, 168 * scale, 103.640625 * scale);\r\n    ctx.bezierCurveTo(151 * scale, 107.640625 * scale, 150 * scale, 61.640625 * scale, 144 * scale, 39.640625 * scale);\r\n    ctx.bezierCurveTo(135 * scale, 1.640625 * scale, 113 * scale, 2.640625 * scale, 110 * scale, 40.640625 * scale);\r\n    ctx.bezierCurveTo(106 * scale, 97.640625 * scale, 98 * scale, 102.640625 * scale, 83 * scale, 100.640625 * scale);\r\n    ctx.bezierCurveTo(68 * scale, 98.640625 * scale, 67 * scale, 77.640625 * scale, 70 * scale, 55.640625 * scale);\r\n    ctx.bezierCurveTo(75 * scale, 16.640625 * scale, 47 * scale, 52.640625 * scale, 38 * scale, 67.640625 * scale);\r\n    ctx.bezierCurveTo(10 * scale, 113.640625 * scale, 10 * scale, 181.640625 * scale, 23 * scale, 213.640625 * scale);\r\n    ctx.bezierCurveTo(45 * scale, 266.640625 * scale, 97 * scale, 277.640625 * scale, 147 * scale, 269.640625 * scale);\r\n    ctx.bezierCurveTo(217 * scale, 259.640625 * scale, 236 * scale, 221.640625 * scale, 239 * scale, 166.640625 * scale);\r\n    ctx.bezierCurveTo(239 * scale, 113.640625 * scale, 223 * scale, 90.640625 * scale, 219 * scale, 86.640625 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[0], 4 * scale);\r\n    circle(ctx, 175 * scale, 220.640625 * scale, 29.546573405388315 * scale);\r\n    fill_path(ctx, color[0]);\r\n    circle(ctx, 79 * scale, 222.640625 * scale, 28.178005607210743 * scale);\r\n    fill_path(ctx, color[0]);\r\n    circle(ctx, 175 * scale, 214.640625 * scale, 27.892651361962706 * scale);\r\n    fill_path(ctx, color[0], color[0], 4 * scale);\r\n    circle(ctx, 79 * scale, 215.640625 * scale, 26.570660511172846 * scale);\r\n    fill_path(ctx, color[0], color[0], 4 * scale);\r\n    ctx.translate(0, -5);\r\n    ctx.globalAlpha = 1;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(218 * scale, 84.640625 * scale);\r\n    ctx.bezierCurveTo(150 * scale, 13.640625 * scale, 186 * scale, 92.640625 * scale, 168 * scale, 103.640625 * scale);\r\n    ctx.bezierCurveTo(151 * scale, 107.640625 * scale, 150 * scale, 61.640625 * scale, 144 * scale, 39.640625 * scale);\r\n    ctx.bezierCurveTo(135 * scale, 1.640625 * scale, 113 * scale, 2.640625 * scale, 110 * scale, 40.640625 * scale);\r\n    ctx.bezierCurveTo(106 * scale, 97.640625 * scale, 98 * scale, 102.640625 * scale, 83 * scale, 100.640625 * scale);\r\n    ctx.bezierCurveTo(68 * scale, 98.640625 * scale, 67 * scale, 77.640625 * scale, 70 * scale, 55.640625 * scale);\r\n    ctx.bezierCurveTo(75 * scale, 16.640625 * scale, 47 * scale, 52.640625 * scale, 38 * scale, 67.640625 * scale);\r\n    ctx.bezierCurveTo(10 * scale, 113.640625 * scale, 10 * scale, 181.640625 * scale, 23 * scale, 213.640625 * scale);\r\n    ctx.bezierCurveTo(45 * scale, 266.640625 * scale, 97 * scale, 277.640625 * scale, 147 * scale, 269.640625 * scale);\r\n    ctx.bezierCurveTo(217 * scale, 259.640625 * scale, 236 * scale, 221.640625 * scale, 239 * scale, 166.640625 * scale);\r\n    ctx.bezierCurveTo(239 * scale, 113.640625 * scale, 223 * scale, 90.640625 * scale, 219 * scale, 86.640625 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 4 * scale);\r\n    circle(ctx, 175 * scale, 222.640625 * scale, 26.546573405388315 * scale);\r\n    fill_path(ctx, color[3]);\r\n    circle(ctx, 79 * scale, 222.640625 * scale, 26.178005607210743 * scale);\r\n    fill_path(ctx, color[3]);\r\n    circle(ctx, 175 * scale, 210.640625 * scale, 26.892651361962706 * scale);\r\n    fill_path(ctx, color[4], color[5], 8 * scale);\r\n    circle(ctx, 79 * scale, 210.640625 * scale, 26.570660511172846 * scale);\r\n    fill_path(ctx, color[4], color[5], 8 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_gemme_green(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 104 * scale;\r\n    can.height = 117 * scale;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(4 * scale, 90 * scale);\r\n    ctx.bezierCurveTo(20 * scale, 99.5 * scale, 20 * scale, 99.5 * scale, 36 * scale, 109 * scale);\r\n    ctx.bezierCurveTo(67 * scale, 92 * scale, 67 * scale, 92 * scale, 98 * scale, 75 * scale);\r\n    ctx.bezierCurveTo(91 * scale, 27 * scale, 91 * scale, 27 * scale, 91 * scale, 28 * scale);\r\n    ctx.bezierCurveTo(72.5 * scale, 16 * scale, 72.5 * scale, 16 * scale, 54 * scale, 4 * scale);\r\n    ctx.bezierCurveTo(33.5 * scale, 10 * scale, 33.5 * scale, 10 * scale, 13 * scale, 16 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(6 * scale, 76 * scale);\r\n    ctx.bezierCurveTo(13.5 * scale, 51.5 * scale, 13.5 * scale, 51.5 * scale, 21 * scale, 27 * scale);\r\n    ctx.bezierCurveTo(37.5 * scale, 17 * scale, 37.5 * scale, 17 * scale, 54 * scale, 7 * scale);\r\n    ctx.bezierCurveTo(33.5 * scale, 12.5 * scale, 33.5 * scale, 12.5 * scale, 13 * scale, 18 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(24 * scale, 62 * scale);\r\n    ctx.bezierCurveTo(28.5 * scale, 53 * scale, 28.5 * scale, 53 * scale, 33 * scale, 44 * scale);\r\n    ctx.bezierCurveTo(41.5 * scale, 41 * scale, 41.5 * scale, 41 * scale, 50 * scale, 38 * scale);\r\n    ctx.bezierCurveTo(52.5 * scale, 35 * scale, 52.5 * scale, 35 * scale, 55 * scale, 32 * scale);\r\n    ctx.bezierCurveTo(52 * scale, 30 * scale, 52 * scale, 30 * scale, 49 * scale, 28 * scale);\r\n    ctx.bezierCurveTo(38 * scale, 31.5 * scale, 38 * scale, 31.5 * scale, 27 * scale, 35 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(36 * scale, 107 * scale);\r\n    ctx.bezierCurveTo(66 * scale, 90.5 * scale, 66 * scale, 90.5 * scale, 96 * scale, 74 * scale);\r\n    ctx.bezierCurveTo(93 * scale, 52.5 * scale, 93 * scale, 52.5 * scale, 90 * scale, 31 * scale);\r\n    ctx.bezierCurveTo(87 * scale, 48 * scale, 87 * scale, 48 * scale, 84 * scale, 65 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(1 * scale, 89 * scale);\r\n    ctx.bezierCurveTo(18 * scale, 100 * scale, 34 * scale, 110 * scale, 35 * scale, 111 * scale);\r\n    ctx.bezierCurveTo(67 * scale, 93 * scale, 67 * scale, 93 * scale, 99 * scale, 75 * scale);\r\n    ctx.bezierCurveTo(100 * scale, 78.5 * scale, 100 * scale, 78.5 * scale, 101 * scale, 82 * scale);\r\n    ctx.bezierCurveTo(68 * scale, 99 * scale, 68 * scale, 99 * scale, 35 * scale, 116 * scale);\r\n    ctx.bezierCurveTo(18 * scale, 106.5 * scale, 18 * scale, 106.5 * scale, 1 * scale, 97 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(36 * scale, 107 * scale);\r\n    ctx.bezierCurveTo(66.5 * scale, 91.5 * scale, 66.5 * scale, 91.5 * scale, 97 * scale, 76 * scale);\r\n    ctx.bezierCurveTo(94.5 * scale, 52 * scale, 94.5 * scale, 52 * scale, 92 * scale, 28 * scale);\r\n    ctx.bezierCurveTo(73 * scale, 15.5 * scale, 73 * scale, 15.5 * scale, 54 * scale, 3 * scale);\r\n    ctx.bezierCurveTo(33 * scale, 9.5 * scale, 33 * scale, 9.5 * scale, 12 * scale, 16 * scale);\r\n    ctx.bezierCurveTo(8 * scale, 53 * scale, 8 * scale, 53 * scale, 4 * scale, 90 * scale);\r\n    ctx.bezierCurveTo(18.5 * scale, 99 * scale, 18.5 * scale, 99 * scale, 33 * scale, 108 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[4], 6 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(22 * scale, 71 * scale);\r\n    ctx.bezierCurveTo(30 * scale, 76.5 * scale, 30 * scale, 76.5 * scale, 38 * scale, 82 * scale);\r\n    ctx.bezierCurveTo(53 * scale, 72 * scale, 53 * scale, 72 * scale, 68 * scale, 62 * scale);\r\n    ctx.bezierCurveTo(68 * scale, 52 * scale, 68 * scale, 52 * scale, 68 * scale, 42 * scale);\r\n    ctx.bezierCurveTo(59.5 * scale, 35.5 * scale, 59.5 * scale, 35.5 * scale, 51 * scale, 29 * scale);\r\n    ctx.bezierCurveTo(39.5 * scale, 32 * scale, 39.5 * scale, 32 * scale, 28 * scale, 35 * scale);\r\n    ctx.bezierCurveTo(25 * scale, 52 * scale, 25 * scale, 52 * scale, 22 * scale, 69 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[4], 6 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(5 * scale, 89 * scale);\r\n    ctx.bezierCurveTo(20 * scale, 73 * scale, 12.5 * scale, 80.5 * scale, 20 * scale, 72 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[4], 6 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(35 * scale, 102 * scale);\r\n    ctx.bezierCurveTo(36 * scale, 92.5 * scale, 36 * scale, 92.5 * scale, 37 * scale, 83 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[4], 6 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(68 * scale, 62 * scale);\r\n    ctx.bezierCurveTo(81 * scale, 67.5 * scale, 81 * scale, 67.5 * scale, 94 * scale, 73 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[4], 6 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(70 * scale, 41 * scale);\r\n    ctx.bezierCurveTo(80 * scale, 35.5 * scale, 80 * scale, 35.5 * scale, 90 * scale, 30 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[4], 6 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(28 * scale, 33 * scale);\r\n    ctx.bezierCurveTo(21.5 * scale, 26.5 * scale, 21.5 * scale, 26.5 * scale, 15 * scale, 20 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[4], 6 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(51 * scale, 28 * scale);\r\n    ctx.bezierCurveTo(53 * scale, 17 * scale, 53 * scale, 17 * scale, 55 * scale, 6 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[4], 6 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_superhammer(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 105 * scale;\r\n    can.height = 144 * scale;\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(-5 * scale, 0 * scale);\r\n    ctx.save();\r\n    ctx.translate(52.5 * scale, 91.5 * scale);\r\n    round_rect(ctx, -4.5 * scale, -39 * scale, 9 * scale, 78 * scale, 5 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0], color[0], 3 * scale);\r\n    ctx.save();\r\n    ctx.translate(53 * scale, 36 * scale);\r\n    round_rect(ctx, -29 * scale, -17.5 * scale, 58 * scale, 35 * scale, 5 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0], color[0], 4 * scale);\r\n    ctx.save();\r\n    ctx.translate(53.5 * scale, 35.5 * scale);\r\n    round_rect(ctx, -26.5 * scale, -15 * scale, 53 * scale, 30 * scale, 5 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0], color[0], 4 * scale);\r\n    ctx.translate(5 * scale, 0 * scale);\r\n    ctx.globalAlpha = 1;\r\n    ctx.save();\r\n    ctx.translate(52.5 * scale, 91.5 * scale);\r\n    round_rect(ctx, -4.5 * scale, -39 * scale, 9 * scale, 78 * scale, 5 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[1], color[2], 3 * scale);\r\n    ctx.save();\r\n    ctx.translate(53 * scale, 36 * scale);\r\n    round_rect(ctx, -29 * scale, -17.5 * scale, 58 * scale, 35 * scale, 5 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[3], color[4], 4 * scale);\r\n    ctx.save();\r\n    ctx.translate(53.5 * scale, 35.5 * scale);\r\n    round_rect(ctx, -26.5 * scale, -15 * scale, 53 * scale, 30 * scale, 5 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[5], color[6], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(49 * scale, 60.5 * scale);\r\n    ctx.bezierCurveTo(44 * scale, 56.5 * scale, 44 * scale, 56.5 * scale, 39 * scale, 52.5 * scale);\r\n    ctx.bezierCurveTo(39 * scale, 46.5 * scale, 39 * scale, 46.5 * scale, 39 * scale, 40.5 * scale);\r\n    ctx.bezierCurveTo(44 * scale, 44 * scale, 44 * scale, 44 * scale, 49 * scale, 47.5 * scale);\r\n    ctx.bezierCurveTo(49 * scale, 54 * scale, 49 * scale, 54 * scale, 49 * scale, 60.5 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[7], color[6], 3 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(66 * scale, 40.5 * scale);\r\n    ctx.bezierCurveTo(66 * scale, 46.5 * scale, 66 * scale, 46.5 * scale, 66 * scale, 52.5 * scale);\r\n    ctx.bezierCurveTo(60.5 * scale, 56.5 * scale, 60.5 * scale, 56.5 * scale, 55 * scale, 60.5 * scale);\r\n    ctx.bezierCurveTo(56 * scale, 53 * scale, 56 * scale, 53 * scale, 57 * scale, 45.5 * scale);\r\n    ctx.bezierCurveTo(61.5 * scale, 43 * scale, 61.5 * scale, 43 * scale, 66 * scale, 40.5 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[7], color[6], 3 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(52 * scale, 33.5 * scale);\r\n    ctx.bezierCurveTo(55.5 * scale, 41 * scale, 55.5 * scale, 41 * scale, 59 * scale, 48.5 * scale);\r\n    ctx.bezierCurveTo(56 * scale, 58 * scale, 56 * scale, 58 * scale, 53 * scale, 67.5 * scale);\r\n    ctx.bezierCurveTo(49 * scale, 58 * scale, 49 * scale, 58 * scale, 45 * scale, 48.5 * scale);\r\n    ctx.bezierCurveTo(48.5 * scale, 41 * scale, 48.5 * scale, 41 * scale, 52 * scale, 33.5 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[9], color[8], 3 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(52 * scale, 47.5 * scale);\r\n    ctx.bezierCurveTo(54.5 * scale, 50.5 * scale, 54.5 * scale, 50.5 * scale, 57 * scale, 53.5 * scale);\r\n    ctx.bezierCurveTo(55 * scale, 60 * scale, 55 * scale, 60 * scale, 53 * scale, 66.5 * scale);\r\n    ctx.bezierCurveTo(50.5 * scale, 61 * scale, 50.5 * scale, 61 * scale, 48 * scale, 55.5 * scale);\r\n    ctx.bezierCurveTo(50 * scale, 52 * scale, 50 * scale, 52 * scale, 52 * scale, 48.5 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[11], color[10], 3 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_dragon_sword(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 46 * scale;\r\n    can.height = 140 * scale;\r\n    ctx.scale(-1 * scale, 1 * scale);\r\n    ctx.translate(-50 * scale, 40 * scale);\r\n    ctx.translate(-20 * scale, 0);\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(10 * scale, 0);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(22.599990844726562 * scale, 85.94999694824219 * scale);\r\n    ctx.bezierCurveTo(17.599990844726562 * scale, 83.94999694824219 * scale, 17.599990844726562 * scale, 83.94999694824219 * scale, 12.599990844726562 * scale, 81.94999694824219 * scale);\r\n    ctx.bezierCurveTo(19.599990844726562 * scale, 73.94999694824219 * scale, 2.5999908447265625 * scale, 22.949996948242188 * scale, 33.59999084472656 * scale, 7.9499969482421875 * scale);\r\n    ctx.bezierCurveTo(27.599990844726562 * scale, 28.949996948242188 * scale, 33.59999084472656 * scale, 26.949996948242188 * scale, 35.59999084472656 * scale, 32.94999694824219 * scale);\r\n    ctx.bezierCurveTo(25.599990844726562 * scale, 59.94999694824219 * scale, 26.599990844726562 * scale, 69.94999694824219 * scale, 29.599990844726562 * scale, 82.94999694824219 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.translate(-1 * scale, 0);\r\n    ctx.moveTo(17.599990844726562 * scale, 89.75 * scale);\r\n    ctx.bezierCurveTo(24.599990844726562 * scale, 99.75 * scale, 24.599990844726562 * scale, 101.75 * scale, 20.599990844726562 * scale, 111.75 * scale);\r\n    ctx.bezierCurveTo(28.599990844726562 * scale, 110.75 * scale, 26.599990844726562 * scale, 112.75 * scale, 28.599990844726562 * scale, 111.75 * scale);\r\n    ctx.bezierCurveTo(30.599990844726562 * scale, 96.75 * scale, 32.59999084472656 * scale, 96.75 * scale, 30.599990844726562 * scale, 87.75 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.translate(1 * scale, 0);\r\n    ctx.moveTo(7.5999908447265625 * scale, 86.34999084472656 * scale);\r\n    ctx.bezierCurveTo(12.599990844726562 * scale, 85.34999084472656 * scale, 14.599990844726562 * scale, 84.34999084472656 * scale, 13.599990844726562 * scale, 84.34999084472656 * scale);\r\n    ctx.bezierCurveTo(21.599990844726562 * scale, 83.34999084472656 * scale, 21.599990844726562 * scale, 83.34999084472656 * scale, 29.599990844726562 * scale, 82.34999084472656 * scale);\r\n    ctx.bezierCurveTo(33.59999084472656 * scale, 85.84999084472656 * scale, 33.59999084472656 * scale, 85.84999084472656 * scale, 37.59999084472656 * scale, 89.34999084472656 * scale);\r\n    ctx.bezierCurveTo(34.09999084472656 * scale, 91.84999084472656 * scale, 34.09999084472656 * scale, 91.84999084472656 * scale, 30.599990844726562 * scale, 94.34999084472656 * scale);\r\n    ctx.bezierCurveTo(21.099990844726562 * scale, 93.34999084472656 * scale, 21.099990844726562 * scale, 93.34999084472656 * scale, 11.599990844726562 * scale, 92.34999084472656 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.save();\r\n    ctx.translate(23.599990844726562 * scale, 110.94999694824219 * scale);\r\n    ctx.rotate(0);\r\n    round_rect(ctx, -7 * scale, -4 * scale, 14 * scale, 8 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0]);\r\n    ctx.translate(0 * scale, 0);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(10 * scale, 0);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(22.599990844726562 * scale, 85.94999694824219 * scale);\r\n    ctx.bezierCurveTo(17.599990844726562 * scale, 83.94999694824219 * scale, 17.599990844726562 * scale, 83.94999694824219 * scale, 12.599990844726562 * scale, 81.94999694824219 * scale);\r\n    ctx.bezierCurveTo(19.599990844726562 * scale, 73.94999694824219 * scale, 2.5999908447265625 * scale, 22.949996948242188 * scale, 33.59999084472656 * scale, 7.9499969482421875 * scale);\r\n    ctx.bezierCurveTo(27.599990844726562 * scale, 28.949996948242188 * scale, 33.59999084472656 * scale, 26.949996948242188 * scale, 35.59999084472656 * scale, 32.94999694824219 * scale);\r\n    ctx.bezierCurveTo(25.599990844726562 * scale, 59.94999694824219 * scale, 26.599990844726562 * scale, 69.94999694824219 * scale, 29.599990844726562 * scale, 82.94999694824219 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[4], 3 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.translate(-1 * scale, 0);\r\n    ctx.moveTo(17.599990844726562 * scale, 89.75 * scale);\r\n    ctx.bezierCurveTo(24.599990844726562 * scale, 99.75 * scale, 24.599990844726562 * scale, 101.75 * scale, 20.599990844726562 * scale, 111.75 * scale);\r\n    ctx.bezierCurveTo(28.599990844726562 * scale, 110.75 * scale, 26.599990844726562 * scale, 112.75 * scale, 28.599990844726562 * scale, 111.75 * scale);\r\n    ctx.bezierCurveTo(30.599990844726562 * scale, 96.75 * scale, 32.59999084472656 * scale, 96.75 * scale, 30.599990844726562 * scale, 87.75 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 3 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.translate(1 * scale, 0);\r\n    ctx.moveTo(7.5999908447265625 * scale, 86.34999084472656 * scale);\r\n    ctx.bezierCurveTo(12.599990844726562 * scale, 85.34999084472656 * scale, 14.599990844726562 * scale, 84.34999084472656 * scale, 13.599990844726562 * scale, 84.34999084472656 * scale);\r\n    ctx.bezierCurveTo(21.599990844726562 * scale, 83.34999084472656 * scale, 21.599990844726562 * scale, 83.34999084472656 * scale, 29.599990844726562 * scale, 82.34999084472656 * scale);\r\n    ctx.bezierCurveTo(33.59999084472656 * scale, 85.84999084472656 * scale, 33.59999084472656 * scale, 85.84999084472656 * scale, 37.59999084472656 * scale, 89.34999084472656 * scale);\r\n    ctx.bezierCurveTo(34.09999084472656 * scale, 91.84999084472656 * scale, 34.09999084472656 * scale, 91.84999084472656 * scale, 30.599990844726562 * scale, 94.34999084472656 * scale);\r\n    ctx.bezierCurveTo(21.099990844726562 * scale, 93.34999084472656 * scale, 21.099990844726562 * scale, 93.34999084472656 * scale, 11.599990844726562 * scale, 92.34999084472656 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 3 * scale);\r\n    ctx.save();\r\n    ctx.translate(23.599990844726562 * scale, 110.94999694824219 * scale);\r\n    ctx.rotate(0);\r\n    round_rect(ctx, -7 * scale, -4 * scale, 14 * scale, 8 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[1], color[2], 3 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_cursed_sword(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 65 * scale;\r\n    can.height = 131 * scale;\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(3, 0);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(21.25 * scale, 88.9375 * scale);\r\n    ctx.bezierCurveTo(19.25 * scale, 57.9375 * scale, 19.25 * scale, 57.9375 * scale, 17.25 * scale, 26.9375 * scale);\r\n    ctx.bezierCurveTo(24.25 * scale, 20.9375 * scale, 24.25 * scale, 20.9375 * scale, 31.25 * scale, 14.9375 * scale);\r\n    ctx.bezierCurveTo(32.75 * scale, 54.4375 * scale, 32.75 * scale, 54.4375 * scale, 34.25 * scale, 93.9375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(30.25 * scale, 5.9375 * scale);\r\n    ctx.bezierCurveTo(39.25 * scale, 14.9375 * scale, 39.25 * scale, 14.9375 * scale, 48.25 * scale, 23.9375 * scale);\r\n    ctx.bezierCurveTo(44.75 * scale, 56.4375 * scale, 44.75 * scale, 56.4375 * scale, 41.25 * scale, 88.9375 * scale);\r\n    ctx.bezierCurveTo(36.25 * scale, 88.9375 * scale, 36.25 * scale, 88.9375 * scale, 31.25 * scale, 88.9375 * scale);\r\n    ctx.bezierCurveTo(30.75 * scale, 47.9375 * scale, 30.75 * scale, 47.9375 * scale, 30.25 * scale, 6.9375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[0], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(7.25 * scale, 85.4375 * scale);\r\n    ctx.bezierCurveTo(31.75 * scale, 85.4375 * scale, 31.75 * scale, 85.4375 * scale, 56.25 * scale, 85.4375 * scale);\r\n    ctx.bezierCurveTo(51.25 * scale, 91.9375 * scale, 51.25 * scale, 91.9375 * scale, 46.25 * scale, 98.4375 * scale);\r\n    ctx.bezierCurveTo(30.25 * scale, 98.4375 * scale, 30.25 * scale, 98.4375 * scale, 14.25 * scale, 98.4375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[0], 4 * scale);\r\n    ctx.save();\r\n    ctx.translate(31.25 * scale, 108.9375 * scale);\r\n    round_rect(ctx, -6 * scale, -14.5 * scale, 12 * scale, 29 * scale, 10 * scale);\r\n    ctx.restore();\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(-3, 0);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(21.25 * scale, 88.9375 * scale);\r\n    ctx.bezierCurveTo(19.25 * scale, 57.9375 * scale, 19.25 * scale, 57.9375 * scale, 17.25 * scale, 26.9375 * scale);\r\n    ctx.bezierCurveTo(24.25 * scale, 20.9375 * scale, 24.25 * scale, 20.9375 * scale, 31.25 * scale, 14.9375 * scale);\r\n    ctx.bezierCurveTo(32.75 * scale, 54.4375 * scale, 32.75 * scale, 54.4375 * scale, 34.25 * scale, 93.9375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(30.25 * scale, 5.9375 * scale);\r\n    ctx.bezierCurveTo(39.25 * scale, 14.9375 * scale, 39.25 * scale, 14.9375 * scale, 48.25 * scale, 23.9375 * scale);\r\n    ctx.bezierCurveTo(44.75 * scale, 56.4375 * scale, 44.75 * scale, 56.4375 * scale, 41.25 * scale, 88.9375 * scale);\r\n    ctx.bezierCurveTo(36.25 * scale, 88.9375 * scale, 36.25 * scale, 88.9375 * scale, 31.25 * scale, 88.9375 * scale);\r\n    ctx.bezierCurveTo(30.75 * scale, 47.9375 * scale, 30.75 * scale, 47.9375 * scale, 30.25 * scale, 6.9375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2], color[1], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(7.25 * scale, 85.4375 * scale);\r\n    ctx.bezierCurveTo(31.75 * scale, 85.4375 * scale, 31.75 * scale, 85.4375 * scale, 56.25 * scale, 85.4375 * scale);\r\n    ctx.bezierCurveTo(51.25 * scale, 91.9375 * scale, 51.25 * scale, 91.9375 * scale, 46.25 * scale, 98.4375 * scale);\r\n    ctx.bezierCurveTo(30.25 * scale, 98.4375 * scale, 30.25 * scale, 98.4375 * scale, 14.25 * scale, 98.4375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[5], 4 * scale);\r\n    ctx.save();\r\n    ctx.translate(31.25 * scale, 108.9375 * scale);\r\n    round_rect(ctx, -6 * scale, -14.5 * scale, 12 * scale, 29 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[4], color[5], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(31.25 * scale, 73.4375 * scale);\r\n    ctx.bezierCurveTo(33.25 * scale, 77.9375 * scale, 33.25 * scale, 77.9375 * scale, 35.25 * scale, 82.4375 * scale);\r\n    ctx.bezierCurveTo(33.25 * scale, 87.4375 * scale, 33.25 * scale, 87.4375 * scale, 31.25 * scale, 92.4375 * scale);\r\n    ctx.bezierCurveTo(29.25 * scale, 87.9375 * scale, 29.25 * scale, 87.9375 * scale, 27.25 * scale, 83.4375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[1], 2 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_shop(scale, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    var w = scale * 120;\r\n    var h = scale * 140;\r\n    can.width = w;\r\n    can.height = h;\r\n    can.width = 130 * scale;\r\n    can.height = 120 * scale;\r\n    round_rect(ctx, 10 * scale, 12 * scale, 110 * scale, 90 * scale, 10 * scale);\r\n    fill_path(ctx, color[0]);\r\n    round_rect(ctx, 10 * scale, 5 * scale, 110 * scale, 90 * scale, 10 * scale);\r\n    fill_path(ctx, color[1], color[2], 4 * scale);\r\n    var img = create_rotated_img(-Math.PI / 5, create_pickaxe(scale * 0.5, true, [\"rgba(255, 255, 255, 0)\", \"rgba(255, 255, 255, 0)\", \"rgba(255, 255, 255, 0)\", \"#FFF\", \"#FFF\", \"#FFF\", \"#FFF\"]));\r\n    ctx.drawImage(img, 12 * scale, 18 * scale);\r\n    var img = create_rotated_img(Math.PI / 4, create_hammer(scale * 0.55, true, [\"rgba(255, 255, 255, 0)\", \"#FFF\", \"#FFF\", \"#FFF\", \"#FFF\"]));\r\n    ctx.drawImage(img, 36 * scale, 16 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_blue_orb(scale, useless, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 137 * scale;\r\n    can.height = 129 * scale;\r\n    ctx.globalAlpha = 0.5;\r\n    circle(ctx, 69 * scale, 64 * scale, 48.16637831516918 * scale);\r\n    fill_path(ctx, color[1]);\r\n    ctx.globalAlpha = 0.7;\r\n    circle(ctx, 69 * scale, 64 * scale, 38.23105625617661 * scale);\r\n    fill_path(ctx, color[2]);\r\n    ctx.globalAlpha = 0.7;\r\n    circle(ctx, 69 * scale, 64 * scale, 32.01562118716424 * scale);\r\n    fill_path(ctx, color[2], color[3], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(72 * scale, 41 * scale);\r\n    ctx.bezierCurveTo(52 * scale, 41 * scale, 48 * scale, 50 * scale, 45 * scale, 58 * scale);\r\n    ctx.bezierCurveTo(43 * scale, 67 * scale, 45 * scale, 68 * scale, 46 * scale, 72 * scale);\r\n    ctx.bezierCurveTo(52 * scale, 53 * scale, 60 * scale, 48 * scale, 72 * scale, 42 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(93 * scale, 62 * scale);\r\n    ctx.bezierCurveTo(95 * scale, 72 * scale, 90 * scale, 81 * scale, 81 * scale, 87 * scale);\r\n    ctx.bezierCurveTo(74 * scale, 91 * scale, 69 * scale, 89 * scale, 64 * scale, 88 * scale);\r\n    ctx.bezierCurveTo(77 * scale, 83 * scale, 84 * scale, 82 * scale, 92 * scale, 62 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3]);\r\n    return can;\r\n}\r\n;\r\nfunction create_dragon_cube(scale, useless, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 137 * scale;\r\n    can.height = 129 * scale;\r\n    ctx.globalAlpha = 0.4;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(42.000030517578125 * scale, 41.17047119140625 * scale);\r\n    ctx.bezierCurveTo(45.000030517578125 * scale, 38.17047119140625 * scale, 49.000030517578125 * scale, 37.17047119140625 * scale, 62.000030517578125 * scale, 38.17047119140625 * scale);\r\n    ctx.bezierCurveTo(78.00003051757812 * scale, 38.17047119140625 * scale, 78.00003051757812 * scale, 38.17047119140625 * scale, 94.00003051757812 * scale, 38.17047119140625 * scale);\r\n    ctx.bezierCurveTo(100.00003051757812 * scale, 38.17047119140625 * scale, 102.00003051757812 * scale, 38.17047119140625 * scale, 101.00003051757812 * scale, 47.17047119140625 * scale);\r\n    ctx.bezierCurveTo(101.00003051757812 * scale, 63.67047119140625 * scale, 101.00003051757812 * scale, 63.67047119140625 * scale, 101.00003051757812 * scale, 80.17047119140625 * scale);\r\n    ctx.bezierCurveTo(102.00003051757812 * scale, 84.17047119140625 * scale, 100.00003051757812 * scale, 86.17047119140625 * scale, 95.00003051757812 * scale, 88.17047119140625 * scale);\r\n    ctx.bezierCurveTo(84.00003051757812 * scale, 94.17047119140625 * scale, 89.00003051757812 * scale, 94.17047119140625 * scale, 79.00003051757812 * scale, 94.17047119140625 * scale);\r\n    ctx.bezierCurveTo(59.500030517578125 * scale, 94.17047119140625 * scale, 59.500030517578125 * scale, 94.17047119140625 * scale, 40.000030517578125 * scale, 94.17047119140625 * scale);\r\n    ctx.bezierCurveTo(33.000030517578125 * scale, 94.17047119140625 * scale, 34.000030517578125 * scale, 94.17047119140625 * scale, 34.000030517578125 * scale, 86.17047119140625 * scale);\r\n    ctx.bezierCurveTo(34.000030517578125 * scale, 69.67047119140625 * scale, 34.000030517578125 * scale, 69.67047119140625 * scale, 34.000030517578125 * scale, 53.17047119140625 * scale);\r\n    ctx.bezierCurveTo(33.000030517578125 * scale, 47.17047119140625 * scale, 34.000030517578125 * scale, 47.17047119140625 * scale, 40.000030517578125 * scale, 42.17047119140625 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[2], 40 * scale);\r\n    ctx.globalAlpha = 0.4;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(42.000030517578125 * scale, 41.17047119140625 * scale);\r\n    ctx.bezierCurveTo(45.000030517578125 * scale, 38.17047119140625 * scale, 49.000030517578125 * scale, 37.17047119140625 * scale, 62.000030517578125 * scale, 38.17047119140625 * scale);\r\n    ctx.bezierCurveTo(78.00003051757812 * scale, 38.17047119140625 * scale, 78.00003051757812 * scale, 38.17047119140625 * scale, 94.00003051757812 * scale, 38.17047119140625 * scale);\r\n    ctx.bezierCurveTo(100.00003051757812 * scale, 38.17047119140625 * scale, 102.00003051757812 * scale, 38.17047119140625 * scale, 101.00003051757812 * scale, 47.17047119140625 * scale);\r\n    ctx.bezierCurveTo(101.00003051757812 * scale, 63.67047119140625 * scale, 101.00003051757812 * scale, 63.67047119140625 * scale, 101.00003051757812 * scale, 80.17047119140625 * scale);\r\n    ctx.bezierCurveTo(102.00003051757812 * scale, 84.17047119140625 * scale, 100.00003051757812 * scale, 86.17047119140625 * scale, 95.00003051757812 * scale, 88.17047119140625 * scale);\r\n    ctx.bezierCurveTo(84.00003051757812 * scale, 94.17047119140625 * scale, 89.00003051757812 * scale, 94.17047119140625 * scale, 79.00003051757812 * scale, 94.17047119140625 * scale);\r\n    ctx.bezierCurveTo(59.500030517578125 * scale, 94.17047119140625 * scale, 59.500030517578125 * scale, 94.17047119140625 * scale, 40.000030517578125 * scale, 94.17047119140625 * scale);\r\n    ctx.bezierCurveTo(33.000030517578125 * scale, 94.17047119140625 * scale, 34.000030517578125 * scale, 94.17047119140625 * scale, 34.000030517578125 * scale, 86.17047119140625 * scale);\r\n    ctx.bezierCurveTo(34.000030517578125 * scale, 69.67047119140625 * scale, 34.000030517578125 * scale, 69.67047119140625 * scale, 34.000030517578125 * scale, 53.17047119140625 * scale);\r\n    ctx.bezierCurveTo(33.000030517578125 * scale, 47.17047119140625 * scale, 34.000030517578125 * scale, 47.17047119140625 * scale, 40.000030517578125 * scale, 42.17047119140625 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[1], 20 * scale);\r\n    ctx.globalAlpha = 0.8;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(42.000030517578125 * scale, 41.17047119140625 * scale);\r\n    ctx.bezierCurveTo(45.000030517578125 * scale, 38.17047119140625 * scale, 49.000030517578125 * scale, 37.17047119140625 * scale, 62.000030517578125 * scale, 38.17047119140625 * scale);\r\n    ctx.bezierCurveTo(78.00003051757812 * scale, 38.17047119140625 * scale, 78.00003051757812 * scale, 38.17047119140625 * scale, 94.00003051757812 * scale, 38.17047119140625 * scale);\r\n    ctx.bezierCurveTo(100.00003051757812 * scale, 38.17047119140625 * scale, 102.00003051757812 * scale, 38.17047119140625 * scale, 101.00003051757812 * scale, 47.17047119140625 * scale);\r\n    ctx.bezierCurveTo(101.00003051757812 * scale, 63.67047119140625 * scale, 101.00003051757812 * scale, 63.67047119140625 * scale, 101.00003051757812 * scale, 80.17047119140625 * scale);\r\n    ctx.bezierCurveTo(102.00003051757812 * scale, 84.17047119140625 * scale, 100.00003051757812 * scale, 86.17047119140625 * scale, 95.00003051757812 * scale, 88.17047119140625 * scale);\r\n    ctx.bezierCurveTo(84.00003051757812 * scale, 94.17047119140625 * scale, 89.00003051757812 * scale, 94.17047119140625 * scale, 79.00003051757812 * scale, 94.17047119140625 * scale);\r\n    ctx.bezierCurveTo(59.500030517578125 * scale, 94.17047119140625 * scale, 59.500030517578125 * scale, 94.17047119140625 * scale, 40.000030517578125 * scale, 94.17047119140625 * scale);\r\n    ctx.bezierCurveTo(33.000030517578125 * scale, 94.17047119140625 * scale, 34.000030517578125 * scale, 94.17047119140625 * scale, 34.000030517578125 * scale, 86.17047119140625 * scale);\r\n    ctx.bezierCurveTo(34.000030517578125 * scale, 69.67047119140625 * scale, 34.000030517578125 * scale, 69.67047119140625 * scale, 34.000030517578125 * scale, 53.17047119140625 * scale);\r\n    ctx.bezierCurveTo(33.000030517578125 * scale, 47.17047119140625 * scale, 34.000030517578125 * scale, 47.17047119140625 * scale, 40.000030517578125 * scale, 42.17047119140625 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[1], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(51.000030517578125 * scale, 37.9886474609375 * scale);\r\n    ctx.bezierCurveTo(51.000030517578125 * scale, 61.9886474609375 * scale, 51.000030517578125 * scale, 61.9886474609375 * scale, 51.000030517578125 * scale, 85.9886474609375 * scale);\r\n    ctx.bezierCurveTo(75.50003051757812 * scale, 85.9886474609375 * scale, 75.50003051757812 * scale, 85.9886474609375 * scale, 100.00003051757812 * scale, 85.9886474609375 * scale);\r\n    ctx.bezierCurveTo(100.00003051757812 * scale, 61.9886474609375 * scale, 100.00003051757812 * scale, 61.9886474609375 * scale, 100.00003051757812 * scale, 37.9886474609375 * scale);\r\n    ctx.bezierCurveTo(76.00003051757812 * scale, 37.9886474609375 * scale, 76.00003051757812 * scale, 37.9886474609375 * scale, 52.000030517578125 * scale, 37.9886474609375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(99.00003051757812 * scale, 38.9886474609375 * scale);\r\n    ctx.bezierCurveTo(93.50003051757812 * scale, 44.9886474609375 * scale, 93.50003051757812 * scale, 44.9886474609375 * scale, 88.00003051757812 * scale, 50.9886474609375 * scale);\r\n    ctx.bezierCurveTo(88.00003051757812 * scale, 72.4886474609375 * scale, 88.00003051757812 * scale, 72.4886474609375 * scale, 88.00003051757812 * scale, 93.9886474609375 * scale);\r\n    ctx.bezierCurveTo(94.00003051757812 * scale, 90.4886474609375 * scale, 94.00003051757812 * scale, 90.4886474609375 * scale, 100.00003051757812 * scale, 86.9886474609375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(87.00003051757812 * scale, 49.625 * scale);\r\n    ctx.bezierCurveTo(61.000030517578125 * scale, 49.625 * scale, 61.000030517578125 * scale, 49.625 * scale, 35.000030517578125 * scale, 49.625 * scale);\r\n    ctx.bezierCurveTo(35.000030517578125 * scale, 70.625 * scale, 35.000030517578125 * scale, 70.625 * scale, 35.000030517578125 * scale, 91.625 * scale);\r\n    ctx.bezierCurveTo(60.500030517578125 * scale, 91.625 * scale, 60.500030517578125 * scale, 91.625 * scale, 86.00003051757812 * scale, 91.625 * scale);\r\n    ctx.bezierCurveTo(86.50003051757812 * scale, 70.625 * scale, 86.50003051757812 * scale, 70.625 * scale, 87.00003051757812 * scale, 49.625 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[3], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(47.000030517578125 * scale, 36.625 * scale);\r\n    ctx.bezierCurveTo(73.00003051757812 * scale, 37.125 * scale, 73.00003051757812 * scale, 37.125 * scale, 99.00003051757812 * scale, 37.625 * scale);\r\n    ctx.bezierCurveTo(93.50003051757812 * scale, 44.125 * scale, 93.50003051757812 * scale, 44.125 * scale, 88.00003051757812 * scale, 50.625 * scale);\r\n    ctx.bezierCurveTo(60.500030517578125 * scale, 50.125 * scale, 60.500030517578125 * scale, 50.125 * scale, 33.000030517578125 * scale, 49.625 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[3], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(53.000030517578125 * scale, 52.625 * scale);\r\n    ctx.bezierCurveTo(40.000030517578125 * scale, 54.625 * scale, 39.000030517578125 * scale, 59.625 * scale, 40.000030517578125 * scale, 67.625 * scale);\r\n    ctx.bezierCurveTo(45.000030517578125 * scale, 59.625 * scale, 48.000030517578125 * scale, 58.625 * scale, 54.000030517578125 * scale, 53.625 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(42.000030517578125 * scale, 41.17047119140625 * scale);\r\n    ctx.bezierCurveTo(45.000030517578125 * scale, 38.17047119140625 * scale, 49.000030517578125 * scale, 37.17047119140625 * scale, 62.000030517578125 * scale, 38.17047119140625 * scale);\r\n    ctx.bezierCurveTo(78.00003051757812 * scale, 38.17047119140625 * scale, 78.00003051757812 * scale, 38.17047119140625 * scale, 94.00003051757812 * scale, 38.17047119140625 * scale);\r\n    ctx.bezierCurveTo(100.00003051757812 * scale, 38.17047119140625 * scale, 102.00003051757812 * scale, 38.17047119140625 * scale, 101.00003051757812 * scale, 47.17047119140625 * scale);\r\n    ctx.bezierCurveTo(101.00003051757812 * scale, 63.67047119140625 * scale, 101.00003051757812 * scale, 63.67047119140625 * scale, 101.00003051757812 * scale, 80.17047119140625 * scale);\r\n    ctx.bezierCurveTo(102.00003051757812 * scale, 84.17047119140625 * scale, 100.00003051757812 * scale, 86.17047119140625 * scale, 95.00003051757812 * scale, 88.17047119140625 * scale);\r\n    ctx.bezierCurveTo(84.00003051757812 * scale, 94.17047119140625 * scale, 89.00003051757812 * scale, 94.17047119140625 * scale, 79.00003051757812 * scale, 94.17047119140625 * scale);\r\n    ctx.bezierCurveTo(59.500030517578125 * scale, 94.17047119140625 * scale, 59.500030517578125 * scale, 94.17047119140625 * scale, 40.000030517578125 * scale, 94.17047119140625 * scale);\r\n    ctx.bezierCurveTo(33.000030517578125 * scale, 94.17047119140625 * scale, 34.000030517578125 * scale, 94.17047119140625 * scale, 34.000030517578125 * scale, 86.17047119140625 * scale);\r\n    ctx.bezierCurveTo(34.000030517578125 * scale, 69.67047119140625 * scale, 34.000030517578125 * scale, 69.67047119140625 * scale, 34.000030517578125 * scale, 53.17047119140625 * scale);\r\n    ctx.bezierCurveTo(33.000030517578125 * scale, 47.17047119140625 * scale, 34.000030517578125 * scale, 47.17047119140625 * scale, 40.000030517578125 * scale, 42.17047119140625 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[3], 4 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_lake_edge(scale, color, i) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    if (i == 0) {\r\n        can.width = 543 * scale;\r\n        can.height = 393 * scale;\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(164.23297119140625 * scale, 72.80398559570312 * scale);\r\n        ctx.bezierCurveTo(289.23297119140625 * scale, 41.803985595703125 * scale, 413.23297119140625 * scale, 86.80398559570312 * scale, 441.23297119140625 * scale, 105.80398559570312 * scale);\r\n        ctx.bezierCurveTo(513.2329711914062 * scale, 149.80398559570312 * scale, 475.23297119140625 * scale, 224.80398559570312 * scale, 451.23297119140625 * scale, 258.8039855957031 * scale);\r\n        ctx.bezierCurveTo(410.23297119140625 * scale, 315.8039855957031 * scale, 380.23297119140625 * scale, 314.8039855957031 * scale, 289.23297119140625 * scale, 320.8039855957031 * scale);\r\n        ctx.bezierCurveTo(160.23297119140625 * scale, 329.8039855957031 * scale, 102.23297119140625 * scale, 312.8039855957031 * scale, 72.23297119140625 * scale, 258.8039855957031 * scale);\r\n        ctx.bezierCurveTo(32.23297119140625 * scale, 156.80398559570312 * scale, 93.23297119140625 * scale, 92.80398559570312 * scale, 164.23297119140625 * scale, 72.80398559570312 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n    } else if (i == 1) {\r\n        can.width = 543 * scale;\r\n        can.height = 470 * scale;\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(238.23297119140625 * scale, 34.622161865234375 * scale);\r\n        ctx.bezierCurveTo(423.23297119140625 * scale, 21.622161865234375 * scale, 474.23297119140625 * scale, 96.62216186523438 * scale, 499.23297119140625 * scale, 167.62216186523438 * scale);\r\n        ctx.bezierCurveTo(536.2329711914062 * scale, 288.6221618652344 * scale, 487.23297119140625 * scale, 367.6221618652344 * scale, 403.23297119140625 * scale, 412.6221618652344 * scale);\r\n        ctx.bezierCurveTo(287.23297119140625 * scale, 466.6221618652344 * scale, 127.23297119140625 * scale, 424.6221618652344 * scale, 50.23297119140625 * scale, 318.6221618652344 * scale);\r\n        ctx.bezierCurveTo(-0.76702880859375 * scale, 239.62216186523438 * scale, 30.23297119140625 * scale, 110.62216186523438 * scale, 73.23297119140625 * scale, 77.62216186523438 * scale);\r\n        ctx.bezierCurveTo(128.23297119140625 * scale, 29.622161865234375 * scale, 202.23297119140625 * scale, 40.622161865234375 * scale, 238.23297119140625 * scale, 34.622161865234375 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n    } else {\r\n        can.width = 543 * scale;\r\n        can.height = 470 * scale;\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(268.23297119140625 * scale, 23.349441528320312 * scale);\r\n        ctx.bezierCurveTo(424.23297119140625 * scale, -0.6505584716796875 * scale, 524.2329711914062 * scale, 44.34944152832031 * scale, 519.2329711914062 * scale, 186.3494415283203 * scale);\r\n        ctx.bezierCurveTo(515.2329711914062 * scale, 341.3494415283203 * scale, 431.23297119140625 * scale, 409.3494415283203 * scale, 357.23297119140625 * scale, 442.3494415283203 * scale);\r\n        ctx.bezierCurveTo(278.23297119140625 * scale, 469.3494415283203 * scale, 144.23297119140625 * scale, 460.3494415283203 * scale, 51.23297119140625 * scale, 348.3494415283203 * scale);\r\n        ctx.bezierCurveTo(3.23297119140625 * scale, 274.3494415283203 * scale, 45.23297119140625 * scale, 87.34944152832031 * scale, 268.23297119140625 * scale, 23.349441528320312 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n    }\r\n    return can;\r\n}\r\n;\r\nfunction create_lake_deep(scale, color, i) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    if (i == 0) {\r\n        can.width = 543 * scale;\r\n        can.height = 393 * scale;\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(109.5 * scale, 154.046875 * scale);\r\n        ctx.bezierCurveTo(143.5 * scale, 96.046875 * scale, 208.5 * scale, 92.046875 * scale, 288.5 * scale, 97.046875 * scale);\r\n        ctx.bezierCurveTo(357.5 * scale, 104.046875 * scale, 414.5 * scale, 132.046875 * scale, 422.5 * scale, 166.046875 * scale);\r\n        ctx.bezierCurveTo(431.5 * scale, 192.046875 * scale, 400.5 * scale, 261.046875 * scale, 332.5 * scale, 271.046875 * scale);\r\n        ctx.bezierCurveTo(272.5 * scale, 279.046875 * scale, 159.5 * scale, 285.046875 * scale, 126.5 * scale, 260.046875 * scale);\r\n        ctx.bezierCurveTo(99.5 * scale, 238.046875 * scale, 95.5 * scale, 183.046875 * scale, 109.5 * scale, 154.046875 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n    } else if (i == 1) {\r\n        can.width = 543 * scale;\r\n        can.height = 470 * scale;\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(216.23297119140625 * scale, 100.34944152832031 * scale);\r\n        ctx.bezierCurveTo(349.23297119140625 * scale, 110.34944152832031 * scale, 422.23297119140625 * scale, 142.3494415283203 * scale, 434.23297119140625 * scale, 194.3494415283203 * scale);\r\n        ctx.bezierCurveTo(451.23297119140625 * scale, 268.3494415283203 * scale, 397.23297119140625 * scale, 367.3494415283203 * scale, 313.23297119140625 * scale, 351.3494415283203 * scale);\r\n        ctx.bezierCurveTo(148.23297119140625 * scale, 330.3494415283203 * scale, 106.23297119140625 * scale, 319.3494415283203 * scale, 87.23297119140625 * scale, 248.3494415283203 * scale);\r\n        ctx.bezierCurveTo(63.23297119140625 * scale, 164.3494415283203 * scale, 102.23297119140625 * scale, 90.34944152832031 * scale, 216.23297119140625 * scale, 100.34944152832031 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n    } else {\r\n        can.width = 543 * scale;\r\n        can.height = 470 * scale;\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(155.23297119140625 * scale, 126.71307373046875 * scale);\r\n        ctx.bezierCurveTo(232.23297119140625 * scale, 76.71307373046875 * scale, 340.23297119140625 * scale, 67.71307373046875 * scale, 411.23297119140625 * scale, 106.71307373046875 * scale);\r\n        ctx.bezierCurveTo(458.23297119140625 * scale, 131.71307373046875 * scale, 465.23297119140625 * scale, 280.71307373046875 * scale, 353.23297119140625 * scale, 363.71307373046875 * scale);\r\n        ctx.bezierCurveTo(299.23297119140625 * scale, 404.71307373046875 * scale, 143.23297119140625 * scale, 415.71307373046875 * scale, 88.23297119140625 * scale, 327.71307373046875 * scale);\r\n        ctx.bezierCurveTo(48.23297119140625 * scale, 256.71307373046875 * scale, 93.23297119140625 * scale, 171.71307373046875 * scale, 155.23297119140625 * scale, 126.71307373046875 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n    }\r\n    return can;\r\n}\r\n;\r\nfunction create_lake(scale, color, i) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    if (i == 0) {\r\n        can.width = 543 * scale;\r\n        can.height = 393 * scale;\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(196.23297119140625 * scale, 77.8948974609375 * scale);\r\n        ctx.bezierCurveTo(276.23297119140625 * scale, 69.8948974609375 * scale, 360.23297119140625 * scale, 87.8948974609375 * scale, 431.23297119140625 * scale, 121.8948974609375 * scale);\r\n        ctx.bezierCurveTo(474.23297119140625 * scale, 146.8948974609375 * scale, 463.23297119140625 * scale, 184.8948974609375 * scale, 437.23297119140625 * scale, 235.8948974609375 * scale);\r\n        ctx.bezierCurveTo(413.23297119140625 * scale, 277.8948974609375 * scale, 383.23297119140625 * scale, 289.8948974609375 * scale, 303.23297119140625 * scale, 289.8948974609375 * scale);\r\n        ctx.bezierCurveTo(178.23297119140625 * scale, 292.8948974609375 * scale, 127.23297119140625 * scale, 301.8948974609375 * scale, 92.23297119140625 * scale, 268.8948974609375 * scale);\r\n        ctx.bezierCurveTo(55.23297119140625 * scale, 234.8948974609375 * scale, 59.23297119140625 * scale, 147.8948974609375 * scale, 100.23297119140625 * scale, 112.8948974609375 * scale);\r\n        ctx.bezierCurveTo(133.23297119140625 * scale, 83.8948974609375 * scale, 167.23297119140625 * scale, 82.8948974609375 * scale, 196.23297119140625 * scale, 77.8948974609375 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n    } else if (i == 1) {\r\n        can.width = 543 * scale;\r\n        can.height = 470 * scale;\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(285.23297119140625 * scale, 51.803985595703125 * scale);\r\n        ctx.bezierCurveTo(408.23297119140625 * scale, 57.803985595703125 * scale, 463.23297119140625 * scale, 107.80398559570312 * scale, 480.23297119140625 * scale, 183.80398559570312 * scale);\r\n        ctx.bezierCurveTo(500.23297119140625 * scale, 282.8039855957031 * scale, 473.23297119140625 * scale, 351.8039855957031 * scale, 373.23297119140625 * scale, 390.8039855957031 * scale);\r\n        ctx.bezierCurveTo(286.23297119140625 * scale, 420.8039855957031 * scale, 173.23297119140625 * scale, 396.8039855957031 * scale, 86.23297119140625 * scale, 331.8039855957031 * scale);\r\n        ctx.bezierCurveTo(13.23297119140625 * scale, 267.8039855957031 * scale, 19.23297119140625 * scale, 79.80398559570312 * scale, 143.23297119140625 * scale, 50.803985595703125 * scale);\r\n        ctx.bezierCurveTo(175.23297119140625 * scale, 41.803985595703125 * scale, 263.23297119140625 * scale, 51.803985595703125 * scale, 285.23297119140625 * scale, 51.803985595703125 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n    } else {\r\n        can.width = 543 * scale;\r\n        can.height = 470 * scale;\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(492.23297119140625 * scale, 170.0767059326172 * scale);\r\n        ctx.bezierCurveTo(493.23297119140625 * scale, 300.16761779785156 * scale, 411.23297119140625 * scale, 382.16761779785156 * scale, 321.23297119140625 * scale, 419.16761779785156 * scale);\r\n        ctx.bezierCurveTo(251.23297119140625 * scale, 444.16761779785156 * scale, 125.23297119140625 * scale, 422.16761779785156 * scale, 63.23297119140625 * scale, 347.16761779785156 * scale);\r\n        ctx.bezierCurveTo(22.23297119140625 * scale, 282.16761779785156 * scale, 53.23297119140625 * scale, 152.16761779785156 * scale, 179.23297119140625 * scale, 79.16761779785156 * scale);\r\n        ctx.bezierCurveTo(237.23297119140625 * scale, 46.16761779785156 * scale, 326.23297119140625 * scale, 27.167617797851562 * scale, 409.23297119140625 * scale, 50.16761779785156 * scale);\r\n        ctx.bezierCurveTo(470.23297119140625 * scale, 66.16761779785156 * scale, 493.23297119140625 * scale, 104.16761779785156 * scale, 492.23297119140625 * scale, 170.0767059326172 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n    }\r\n    return can;\r\n}\r\n;\r\nfunction create_shingle(scale, color, i) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    if (i == 0) {\r\n        can.width = 543 * scale;\r\n        can.height = 393 * scale;\r\n        ctx.translate(40 * scale, 60 * scale);\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(3 * scale, 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(176 * scale, 10.25 * scale);\r\n        ctx.bezierCurveTo(188 * scale, 16.25 * scale, 187 * scale, 25.25 * scale, 183 * scale, 26.25 * scale);\r\n        ctx.bezierCurveTo(177 * scale, 26.25 * scale, 175 * scale, 21.25 * scale, 173 * scale, 19.25 * scale);\r\n        ctx.bezierCurveTo(170 * scale, 14.25 * scale, 170 * scale, 10.25 * scale, 176 * scale, 10.25 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.translate(-3 * scale, -3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(176 * scale, 10.25 * scale);\r\n        ctx.bezierCurveTo(188 * scale, 16.25 * scale, 187 * scale, 25.25 * scale, 183 * scale, 26.25 * scale);\r\n        ctx.bezierCurveTo(177 * scale, 26.25 * scale, 175 * scale, 21.25 * scale, 173 * scale, 19.25 * scale);\r\n        ctx.bezierCurveTo(170 * scale, 14.25 * scale, 170 * scale, 10.25 * scale, 176 * scale, 10.25 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(3 * scale, 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(274 * scale, 8 * scale);\r\n        ctx.bezierCurveTo(276 * scale, 12 * scale, 271 * scale, 23 * scale, 266 * scale, 20 * scale);\r\n        ctx.bezierCurveTo(264 * scale, 19 * scale, 262 * scale, 15 * scale, 267 * scale, 9 * scale);\r\n        ctx.bezierCurveTo(271 * scale, 5 * scale, 274 * scale, 5 * scale, 274 * scale, 8 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.translate(-3 * scale, -3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(274 * scale, 8 * scale);\r\n        ctx.bezierCurveTo(276 * scale, 12 * scale, 271 * scale, 23 * scale, 266 * scale, 20 * scale);\r\n        ctx.bezierCurveTo(264 * scale, 19 * scale, 262 * scale, 15 * scale, 267 * scale, 9 * scale);\r\n        ctx.bezierCurveTo(271 * scale, 5 * scale, 274 * scale, 5 * scale, 274 * scale, 8 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(3 * scale, 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(282 * scale, 23.25 * scale);\r\n        ctx.bezierCurveTo(275 * scale, 25.25 * scale, 272 * scale, 29.25 * scale, 274 * scale, 36.25 * scale);\r\n        ctx.bezierCurveTo(277 * scale, 40.25 * scale, 280 * scale, 37.25 * scale, 283 * scale, 32.25 * scale);\r\n        ctx.bezierCurveTo(286 * scale, 26.25 * scale, 286 * scale, 25.25 * scale, 282 * scale, 23.25 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.translate(-3 * scale, -3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(282 * scale, 23.25 * scale);\r\n        ctx.bezierCurveTo(275 * scale, 25.25 * scale, 272 * scale, 29.25 * scale, 274 * scale, 36.25 * scale);\r\n        ctx.bezierCurveTo(277 * scale, 40.25 * scale, 280 * scale, 37.25 * scale, 283 * scale, 32.25 * scale);\r\n        ctx.bezierCurveTo(286 * scale, 26.25 * scale, 286 * scale, 25.25 * scale, 282 * scale, 23.25 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(3 * scale, 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(343.75 * scale, 18.25 * scale);\r\n        ctx.bezierCurveTo(346.75 * scale, 27.25 * scale, 346.75 * scale, 32.25 * scale, 339.75 * scale, 31.25 * scale);\r\n        ctx.bezierCurveTo(336.75 * scale, 29.25 * scale, 335.75 * scale, 27.25 * scale, 336.75 * scale, 22.25 * scale);\r\n        ctx.bezierCurveTo(336.75 * scale, 16.25 * scale, 338.75 * scale, 15.25 * scale, 343.75 * scale, 18.25 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.translate(-3 * scale, -3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(343.75 * scale, 18.25 * scale);\r\n        ctx.bezierCurveTo(346.75 * scale, 27.25 * scale, 346.75 * scale, 32.25 * scale, 339.75 * scale, 31.25 * scale);\r\n        ctx.bezierCurveTo(336.75 * scale, 29.25 * scale, 335.75 * scale, 27.25 * scale, 336.75 * scale, 22.25 * scale);\r\n        ctx.bezierCurveTo(336.75 * scale, 16.25 * scale, 338.75 * scale, 15.25 * scale, 343.75 * scale, 18.25 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(3 * scale, 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(364.75 * scale, 22.25 * scale);\r\n        ctx.bezierCurveTo(368.75 * scale, 27.25 * scale, 362.75 * scale, 36.25 * scale, 356.75 * scale, 39.25 * scale);\r\n        ctx.bezierCurveTo(346.75 * scale, 43.25 * scale, 346.75 * scale, 34.25 * scale, 348.75 * scale, 31.25 * scale);\r\n        ctx.bezierCurveTo(352.75 * scale, 23.25 * scale, 360.75 * scale, 20.25 * scale, 363.75 * scale, 22.25 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.translate(-3 * scale, -3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(364.75 * scale, 22.25 * scale);\r\n        ctx.bezierCurveTo(368.75 * scale, 27.25 * scale, 362.75 * scale, 36.25 * scale, 356.75 * scale, 39.25 * scale);\r\n        ctx.bezierCurveTo(346.75 * scale, 43.25 * scale, 346.75 * scale, 34.25 * scale, 348.75 * scale, 31.25 * scale);\r\n        ctx.bezierCurveTo(352.75 * scale, 23.25 * scale, 360.75 * scale, 20.25 * scale, 363.75 * scale, 22.25 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(3 * scale, 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(350.75 * scale, 52.25 * scale);\r\n        ctx.bezierCurveTo(352.75 * scale, 45.25 * scale, 360.75 * scale, 43.25 * scale, 368.75 * scale, 52.25 * scale);\r\n        ctx.bezierCurveTo(369.75 * scale, 58.25 * scale, 366.75 * scale, 59.25 * scale, 357.75 * scale, 57.25 * scale);\r\n        ctx.bezierCurveTo(350.75 * scale, 56.25 * scale, 352.75 * scale, 55.25 * scale, 350.75 * scale, 52.25 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.translate(-3 * scale, -3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(350.75 * scale, 52.25 * scale);\r\n        ctx.bezierCurveTo(352.75 * scale, 45.25 * scale, 360.75 * scale, 43.25 * scale, 368.75 * scale, 52.25 * scale);\r\n        ctx.bezierCurveTo(369.75 * scale, 58.25 * scale, 366.75 * scale, 59.25 * scale, 357.75 * scale, 57.25 * scale);\r\n        ctx.bezierCurveTo(350.75 * scale, 56.25 * scale, 352.75 * scale, 55.25 * scale, 350.75 * scale, 52.25 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(3 * scale, 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(421.75 * scale, 81.25 * scale);\r\n        ctx.bezierCurveTo(432.75 * scale, 85.25 * scale, 431.75 * scale, 89.25 * scale, 426.75 * scale, 93.25 * scale);\r\n        ctx.bezierCurveTo(418.75 * scale, 95.25 * scale, 414.75 * scale, 93.25 * scale, 412.75 * scale, 89.25 * scale);\r\n        ctx.bezierCurveTo(411.75 * scale, 84.25 * scale, 413.75 * scale, 81.25 * scale, 421.75 * scale, 81.25 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.translate(-3 * scale, -3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(421.75 * scale, 81.25 * scale);\r\n        ctx.bezierCurveTo(432.75 * scale, 85.25 * scale, 431.75 * scale, 89.25 * scale, 426.75 * scale, 93.25 * scale);\r\n        ctx.bezierCurveTo(418.75 * scale, 95.25 * scale, 414.75 * scale, 93.25 * scale, 412.75 * scale, 89.25 * scale);\r\n        ctx.bezierCurveTo(411.75 * scale, 84.25 * scale, 413.75 * scale, 81.25 * scale, 421.75 * scale, 81.25 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(3 * scale, 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(432.75 * scale, 105.25 * scale);\r\n        ctx.bezierCurveTo(430.75 * scale, 115.25 * scale, 411.75 * scale, 130.25 * scale, 408.75 * scale, 117.25 * scale);\r\n        ctx.bezierCurveTo(407.75 * scale, 106.25 * scale, 414.75 * scale, 103.25 * scale, 421.75 * scale, 101.25 * scale);\r\n        ctx.bezierCurveTo(430.75 * scale, 100.25 * scale, 432.75 * scale, 101.25 * scale, 432.75 * scale, 105.25 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.translate(-3 * scale, -3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(432.75 * scale, 105.25 * scale);\r\n        ctx.bezierCurveTo(430.75 * scale, 115.25 * scale, 411.75 * scale, 130.25 * scale, 408.75 * scale, 117.25 * scale);\r\n        ctx.bezierCurveTo(407.75 * scale, 106.25 * scale, 414.75 * scale, 103.25 * scale, 421.75 * scale, 101.25 * scale);\r\n        ctx.bezierCurveTo(430.75 * scale, 100.25 * scale, 432.75 * scale, 101.25 * scale, 432.75 * scale, 105.25 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(3 * scale, 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(422.75 * scale, 153.25 * scale);\r\n        ctx.bezierCurveTo(437.75 * scale, 155.25 * scale, 442.75 * scale, 158.25 * scale, 436.75 * scale, 165.25 * scale);\r\n        ctx.bezierCurveTo(431.75 * scale, 170.25 * scale, 424.75 * scale, 167.25 * scale, 419.75 * scale, 163.25 * scale);\r\n        ctx.bezierCurveTo(413.75 * scale, 157.25 * scale, 415.75 * scale, 153.25 * scale, 422.75 * scale, 153.25 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.translate(-3 * scale, -3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(422.75 * scale, 153.25 * scale);\r\n        ctx.bezierCurveTo(437.75 * scale, 155.25 * scale, 442.75 * scale, 158.25 * scale, 436.75 * scale, 165.25 * scale);\r\n        ctx.bezierCurveTo(431.75 * scale, 170.25 * scale, 424.75 * scale, 167.25 * scale, 419.75 * scale, 163.25 * scale);\r\n        ctx.bezierCurveTo(413.75 * scale, 157.25 * scale, 415.75 * scale, 153.25 * scale, 422.75 * scale, 153.25 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(3 * scale, 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(409.75 * scale, 158.25 * scale);\r\n        ctx.bezierCurveTo(409.75 * scale, 168.25 * scale, 401.75 * scale, 172.25 * scale, 397.75 * scale, 167.25 * scale);\r\n        ctx.bezierCurveTo(394.75 * scale, 159.25 * scale, 407.75 * scale, 150.25 * scale, 408.75 * scale, 158.25 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.translate(-3 * scale, -3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(409.75 * scale, 158.25 * scale);\r\n        ctx.bezierCurveTo(409.75 * scale, 168.25 * scale, 401.75 * scale, 172.25 * scale, 397.75 * scale, 167.25 * scale);\r\n        ctx.bezierCurveTo(394.75 * scale, 159.25 * scale, 407.75 * scale, 150.25 * scale, 408.75 * scale, 158.25 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(3 * scale, 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(204 * scale, 238.25 * scale);\r\n        ctx.bezierCurveTo(204 * scale, 248.25 * scale, 184 * scale, 255.25 * scale, 180 * scale, 247.25 * scale);\r\n        ctx.bezierCurveTo(177 * scale, 241.25 * scale, 187 * scale, 236.25 * scale, 192 * scale, 235.25 * scale);\r\n        ctx.bezierCurveTo(201 * scale, 233.25 * scale, 204 * scale, 233.25 * scale, 204 * scale, 238.25 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.translate(-3 * scale, -3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(204 * scale, 238.25 * scale);\r\n        ctx.bezierCurveTo(204 * scale, 248.25 * scale, 184 * scale, 255.25 * scale, 180 * scale, 247.25 * scale);\r\n        ctx.bezierCurveTo(177 * scale, 241.25 * scale, 187 * scale, 236.25 * scale, 192 * scale, 235.25 * scale);\r\n        ctx.bezierCurveTo(201 * scale, 233.25 * scale, 204 * scale, 233.25 * scale, 204 * scale, 238.25 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(3 * scale, 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(208 * scale, 246.25 * scale);\r\n        ctx.bezierCurveTo(202 * scale, 255.25 * scale, 204 * scale, 258.25 * scale, 212 * scale, 255.25 * scale);\r\n        ctx.bezierCurveTo(217 * scale, 250.25 * scale, 217 * scale, 248.25 * scale, 216 * scale, 244.25 * scale);\r\n        ctx.bezierCurveTo(210 * scale, 241.25 * scale, 209 * scale, 245.25 * scale, 208 * scale, 246.25 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.translate(-3 * scale, -3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(208 * scale, 246.25 * scale);\r\n        ctx.bezierCurveTo(202 * scale, 255.25 * scale, 204 * scale, 258.25 * scale, 212 * scale, 255.25 * scale);\r\n        ctx.bezierCurveTo(217 * scale, 250.25 * scale, 217 * scale, 248.25 * scale, 216 * scale, 244.25 * scale);\r\n        ctx.bezierCurveTo(210 * scale, 241.25 * scale, 209 * scale, 245.25 * scale, 208 * scale, 246.25 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(3 * scale, 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(197 * scale, 258.25 * scale);\r\n        ctx.bezierCurveTo(194 * scale, 265.25 * scale, 186 * scale, 270.25 * scale, 185 * scale, 262.25 * scale);\r\n        ctx.bezierCurveTo(187 * scale, 255.25 * scale, 191 * scale, 252.25 * scale, 195 * scale, 253.25 * scale);\r\n        ctx.bezierCurveTo(198 * scale, 256.25 * scale, 197 * scale, 257.25 * scale, 197 * scale, 258.25 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.translate(-3 * scale, -3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(197 * scale, 258.25 * scale);\r\n        ctx.bezierCurveTo(194 * scale, 265.25 * scale, 186 * scale, 270.25 * scale, 185 * scale, 262.25 * scale);\r\n        ctx.bezierCurveTo(187 * scale, 255.25 * scale, 191 * scale, 252.25 * scale, 195 * scale, 253.25 * scale);\r\n        ctx.bezierCurveTo(198 * scale, 256.25 * scale, 197 * scale, 257.25 * scale, 197 * scale, 258.25 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(3 * scale, 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(24 * scale, 111.25 * scale);\r\n        ctx.bezierCurveTo(32 * scale, 115.25 * scale, 29 * scale, 123.25 * scale, 22 * scale, 133.25 * scale);\r\n        ctx.bezierCurveTo(15 * scale, 140.25 * scale, 7 * scale, 137.25 * scale, 9 * scale, 125.25 * scale);\r\n        ctx.bezierCurveTo(12 * scale, 114.25 * scale, 20 * scale, 110.25 * scale, 24 * scale, 111.25 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.translate(-3 * scale, -3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(24 * scale, 111.25 * scale);\r\n        ctx.bezierCurveTo(32 * scale, 115.25 * scale, 29 * scale, 123.25 * scale, 22 * scale, 133.25 * scale);\r\n        ctx.bezierCurveTo(15 * scale, 140.25 * scale, 7 * scale, 137.25 * scale, 9 * scale, 125.25 * scale);\r\n        ctx.bezierCurveTo(12 * scale, 114.25 * scale, 20 * scale, 110.25 * scale, 24 * scale, 111.25 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(3 * scale, 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(33 * scale, 137.25 * scale);\r\n        ctx.bezierCurveTo(41 * scale, 142.25 * scale, 40 * scale, 145.25 * scale, 35 * scale, 147.25 * scale);\r\n        ctx.bezierCurveTo(22 * scale, 147.25 * scale, 18 * scale, 144.25 * scale, 22 * scale, 138.25 * scale);\r\n        ctx.bezierCurveTo(26 * scale, 133.25 * scale, 31 * scale, 136.25 * scale, 33 * scale, 137.25 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.translate(-3 * scale, -3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(33 * scale, 137.25 * scale);\r\n        ctx.bezierCurveTo(41 * scale, 142.25 * scale, 40 * scale, 145.25 * scale, 35 * scale, 147.25 * scale);\r\n        ctx.bezierCurveTo(22 * scale, 147.25 * scale, 18 * scale, 144.25 * scale, 22 * scale, 138.25 * scale);\r\n        ctx.bezierCurveTo(26 * scale, 133.25 * scale, 31 * scale, 136.25 * scale, 33 * scale, 137.25 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(3 * scale, 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(36 * scale, 187.25 * scale);\r\n        ctx.bezierCurveTo(25 * scale, 198.25 * scale, 19 * scale, 193.25 * scale, 23 * scale, 187.25 * scale);\r\n        ctx.bezierCurveTo(26 * scale, 178.25 * scale, 32 * scale, 173.25 * scale, 38 * scale, 175.25 * scale);\r\n        ctx.bezierCurveTo(44 * scale, 180.25 * scale, 39 * scale, 186.25 * scale, 36 * scale, 187.25 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.translate(-3 * scale, -3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(36 * scale, 187.25 * scale);\r\n        ctx.bezierCurveTo(25 * scale, 198.25 * scale, 19 * scale, 193.25 * scale, 23 * scale, 187.25 * scale);\r\n        ctx.bezierCurveTo(26 * scale, 178.25 * scale, 32 * scale, 173.25 * scale, 38 * scale, 175.25 * scale);\r\n        ctx.bezierCurveTo(44 * scale, 180.25 * scale, 39 * scale, 186.25 * scale, 36 * scale, 187.25 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n    } else if (i == 1) {\r\n        can.width = 543 * scale;\r\n        can.height = 470 * scale;\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(3 * scale, 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(377.1428527832031 * scale, 56.87498474121094 * scale);\r\n        ctx.bezierCurveTo(384.1428527832031 * scale, 44.87498474121094 * scale, 403.1428527832031 * scale, 39.87498474121094 * scale, 403.1428527832031 * scale, 51.87498474121094 * scale);\r\n        ctx.bezierCurveTo(402.1428527832031 * scale, 59.87498474121094 * scale, 396.1428527832031 * scale, 61.87498474121094 * scale, 389.1428527832031 * scale, 64.87498474121094 * scale);\r\n        ctx.bezierCurveTo(376.1428527832031 * scale, 67.87498474121094 * scale, 375.1428527832031 * scale, 62.87498474121094 * scale, 377.1428527832031 * scale, 56.87498474121094 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.translate(-3 * scale, -3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(377.1428527832031 * scale, 56.87498474121094 * scale);\r\n        ctx.bezierCurveTo(384.1428527832031 * scale, 44.87498474121094 * scale, 403.1428527832031 * scale, 39.87498474121094 * scale, 403.1428527832031 * scale, 51.87498474121094 * scale);\r\n        ctx.bezierCurveTo(402.1428527832031 * scale, 59.87498474121094 * scale, 396.1428527832031 * scale, 61.87498474121094 * scale, 389.1428527832031 * scale, 64.87498474121094 * scale);\r\n        ctx.bezierCurveTo(376.1428527832031 * scale, 67.87498474121094 * scale, 375.1428527832031 * scale, 62.87498474121094 * scale, 377.1428527832031 * scale, 56.87498474121094 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(3 * scale, 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(349.1428527832031 * scale, 44.303558349609375 * scale);\r\n        ctx.bezierCurveTo(358.1428527832031 * scale, 37.303558349609375 * scale, 370.1428527832031 * scale, 47.303558349609375 * scale, 364.1428527832031 * scale, 51.303558349609375 * scale);\r\n        ctx.bezierCurveTo(356.1428527832031 * scale, 55.303558349609375 * scale, 345.1428527832031 * scale, 48.303558349609375 * scale, 349.1428527832031 * scale, 45.303558349609375 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.translate(-3 * scale, -3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(349.1428527832031 * scale, 44.303558349609375 * scale);\r\n        ctx.bezierCurveTo(358.1428527832031 * scale, 37.303558349609375 * scale, 370.1428527832031 * scale, 47.303558349609375 * scale, 364.1428527832031 * scale, 51.303558349609375 * scale);\r\n        ctx.bezierCurveTo(356.1428527832031 * scale, 55.303558349609375 * scale, 345.1428527832031 * scale, 48.303558349609375 * scale, 349.1428527832031 * scale, 45.303558349609375 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(3 * scale, 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(480.1428527832031 * scale, 152.30355834960938 * scale);\r\n        ctx.bezierCurveTo(477.1428527832031 * scale, 145.30355834960938 * scale, 480.1428527832031 * scale, 140.30355834960938 * scale, 489.1428527832031 * scale, 135.30355834960938 * scale);\r\n        ctx.bezierCurveTo(497.1428527832031 * scale, 133.30355834960938 * scale, 498.1428527832031 * scale, 140.30355834960938 * scale, 491.1428527832031 * scale, 147.30355834960938 * scale);\r\n        ctx.bezierCurveTo(485.1428527832031 * scale, 155.30355834960938 * scale, 482.1428527832031 * scale, 156.30355834960938 * scale, 480.1428527832031 * scale, 152.30355834960938 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.translate(-3 * scale, -3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(480.1428527832031 * scale, 152.30355834960938 * scale);\r\n        ctx.bezierCurveTo(477.1428527832031 * scale, 145.30355834960938 * scale, 480.1428527832031 * scale, 140.30355834960938 * scale, 489.1428527832031 * scale, 135.30355834960938 * scale);\r\n        ctx.bezierCurveTo(497.1428527832031 * scale, 133.30355834960938 * scale, 498.1428527832031 * scale, 140.30355834960938 * scale, 491.1428527832031 * scale, 147.30355834960938 * scale);\r\n        ctx.bezierCurveTo(485.1428527832031 * scale, 155.30355834960938 * scale, 482.1428527832031 * scale, 156.30355834960938 * scale, 480.1428527832031 * scale, 152.30355834960938 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(3 * scale, 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(211.14285278320312 * scale, 27.303558349609375 * scale);\r\n        ctx.bezierCurveTo(223.14285278320312 * scale, 21.303558349609375 * scale, 234.14285278320312 * scale, 34.303558349609375 * scale, 232.14285278320312 * scale, 42.303558349609375 * scale);\r\n        ctx.bezierCurveTo(228.14285278320312 * scale, 49.303558349609375 * scale, 223.14285278320312 * scale, 45.303558349609375 * scale, 213.14285278320312 * scale, 38.303558349609375 * scale);\r\n        ctx.bezierCurveTo(205.14285278320312 * scale, 31.303558349609375 * scale, 208.14285278320312 * scale, 29.303558349609375 * scale, 211.14285278320312 * scale, 27.303558349609375 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.translate(-3 * scale, -3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(211.14285278320312 * scale, 27.303558349609375 * scale);\r\n        ctx.bezierCurveTo(223.14285278320312 * scale, 21.303558349609375 * scale, 234.14285278320312 * scale, 34.303558349609375 * scale, 232.14285278320312 * scale, 42.303558349609375 * scale);\r\n        ctx.bezierCurveTo(228.14285278320312 * scale, 49.303558349609375 * scale, 223.14285278320312 * scale, 45.303558349609375 * scale, 213.14285278320312 * scale, 38.303558349609375 * scale);\r\n        ctx.bezierCurveTo(205.14285278320312 * scale, 31.303558349609375 * scale, 208.14285278320312 * scale, 29.303558349609375 * scale, 211.14285278320312 * scale, 27.303558349609375 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(3 * scale, 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(364.1428527832031 * scale, 73.30355834960938 * scale);\r\n        ctx.bezierCurveTo(354.1428527832031 * scale, 72.30355834960938 * scale, 356.1428527832031 * scale, 64.30355834960938 * scale, 359.1428527832031 * scale, 59.303558349609375 * scale);\r\n        ctx.bezierCurveTo(365.1428527832031 * scale, 55.303558349609375 * scale, 366.1428527832031 * scale, 61.303558349609375 * scale, 366.1428527832031 * scale, 69.30355834960938 * scale);\r\n        ctx.bezierCurveTo(365.1428527832031 * scale, 73.30355834960938 * scale, 365.1428527832031 * scale, 73.30355834960938 * scale, 364.1428527832031 * scale, 73.30355834960938 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.translate(-3 * scale, -3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(364.1428527832031 * scale, 73.30355834960938 * scale);\r\n        ctx.bezierCurveTo(354.1428527832031 * scale, 72.30355834960938 * scale, 356.1428527832031 * scale, 64.30355834960938 * scale, 359.1428527832031 * scale, 59.303558349609375 * scale);\r\n        ctx.bezierCurveTo(365.1428527832031 * scale, 55.303558349609375 * scale, 366.1428527832031 * scale, 61.303558349609375 * scale, 366.1428527832031 * scale, 69.30355834960938 * scale);\r\n        ctx.bezierCurveTo(365.1428527832031 * scale, 73.30355834960938 * scale, 365.1428527832031 * scale, 73.30355834960938 * scale, 364.1428527832031 * scale, 73.30355834960938 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(3 * scale, 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(182.14285278320312 * scale, 57.303558349609375 * scale);\r\n        ctx.bezierCurveTo(173.14285278320312 * scale, 52.303558349609375 * scale, 177.14285278320312 * scale, 39.303558349609375 * scale, 198.14285278320312 * scale, 36.303558349609375 * scale);\r\n        ctx.bezierCurveTo(209.14285278320312 * scale, 37.303558349609375 * scale, 206.14285278320312 * scale, 49.303558349609375 * scale, 193.14285278320312 * scale, 53.303558349609375 * scale);\r\n        ctx.bezierCurveTo(187.14285278320312 * scale, 56.303558349609375 * scale, 185.14285278320312 * scale, 57.303558349609375 * scale, 182.14285278320312 * scale, 57.303558349609375 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.translate(-3 * scale, -3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(182.14285278320312 * scale, 57.303558349609375 * scale);\r\n        ctx.bezierCurveTo(173.14285278320312 * scale, 52.303558349609375 * scale, 177.14285278320312 * scale, 39.303558349609375 * scale, 198.14285278320312 * scale, 36.303558349609375 * scale);\r\n        ctx.bezierCurveTo(209.14285278320312 * scale, 37.303558349609375 * scale, 206.14285278320312 * scale, 49.303558349609375 * scale, 193.14285278320312 * scale, 53.303558349609375 * scale);\r\n        ctx.bezierCurveTo(187.14285278320312 * scale, 56.303558349609375 * scale, 185.14285278320312 * scale, 57.303558349609375 * scale, 182.14285278320312 * scale, 57.303558349609375 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(3 * scale, 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(489.1428527832031 * scale, 267.0178527832031 * scale);\r\n        ctx.bezierCurveTo(500.1428527832031 * scale, 257.0178527832031 * scale, 511.1428527832031 * scale, 269.0178527832031 * scale, 514.1428527832031 * scale, 275.0178527832031 * scale);\r\n        ctx.bezierCurveTo(519.1428527832031 * scale, 285.0178527832031 * scale, 509.1428527832031 * scale, 288.0178527832031 * scale, 501.1428527832031 * scale, 282.0178527832031 * scale);\r\n        ctx.bezierCurveTo(488.1428527832031 * scale, 277.0178527832031 * scale, 485.1428527832031 * scale, 271.0178527832031 * scale, 489.1428527832031 * scale, 267.0178527832031 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.translate(-3 * scale, -3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(489.1428527832031 * scale, 267.0178527832031 * scale);\r\n        ctx.bezierCurveTo(500.1428527832031 * scale, 257.0178527832031 * scale, 511.1428527832031 * scale, 269.0178527832031 * scale, 514.1428527832031 * scale, 275.0178527832031 * scale);\r\n        ctx.bezierCurveTo(519.1428527832031 * scale, 285.0178527832031 * scale, 509.1428527832031 * scale, 288.0178527832031 * scale, 501.1428527832031 * scale, 282.0178527832031 * scale);\r\n        ctx.bezierCurveTo(488.1428527832031 * scale, 277.0178527832031 * scale, 485.1428527832031 * scale, 271.0178527832031 * scale, 489.1428527832031 * scale, 267.0178527832031 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(3 * scale, 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(480.1428527832031 * scale, 122.73213958740234 * scale);\r\n        ctx.bezierCurveTo(469.1428527832031 * scale, 119.73213958740234 * scale, 473.1428527832031 * scale, 108.73213958740234 * scale, 476.1428527832031 * scale, 107.73213958740234 * scale);\r\n        ctx.bezierCurveTo(483.1428527832031 * scale, 102.73213958740234 * scale, 485.1428527832031 * scale, 118.73213958740234 * scale, 480.1428527832031 * scale, 122.73213958740234 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.translate(-3 * scale, -3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(480.1428527832031 * scale, 122.73213958740234 * scale);\r\n        ctx.bezierCurveTo(469.1428527832031 * scale, 119.73213958740234 * scale, 473.1428527832031 * scale, 108.73213958740234 * scale, 476.1428527832031 * scale, 107.73213958740234 * scale);\r\n        ctx.bezierCurveTo(483.1428527832031 * scale, 102.73213958740234 * scale, 485.1428527832031 * scale, 118.73213958740234 * scale, 480.1428527832031 * scale, 122.73213958740234 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(3 * scale, 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(470.1428527832031 * scale, 286.3035697937012 * scale);\r\n        ctx.bezierCurveTo(472.1428527832031 * scale, 277.3035697937012 * scale, 480.1428527832031 * scale, 277.3035697937012 * scale, 489.1428527832031 * scale, 286.3035697937012 * scale);\r\n        ctx.bezierCurveTo(490.1428527832031 * scale, 292.3035697937012 * scale, 482.1428527832031 * scale, 294.3035697937012 * scale, 470.1428527832031 * scale, 286.3035697937012 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.translate(-3 * scale, -3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(470.1428527832031 * scale, 286.3035697937012 * scale);\r\n        ctx.bezierCurveTo(472.1428527832031 * scale, 277.3035697937012 * scale, 480.1428527832031 * scale, 277.3035697937012 * scale, 489.1428527832031 * scale, 286.3035697937012 * scale);\r\n        ctx.bezierCurveTo(490.1428527832031 * scale, 292.3035697937012 * scale, 482.1428527832031 * scale, 294.3035697937012 * scale, 470.1428527832031 * scale, 286.3035697937012 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(3 * scale, 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(518.1428527832031 * scale, 265.0178565979004 * scale);\r\n        ctx.bezierCurveTo(524.1428527832031 * scale, 262.0178565979004 * scale, 521.1428527832031 * scale, 247.0178565979004 * scale, 514.1428527832031 * scale, 250.0178565979004 * scale);\r\n        ctx.bezierCurveTo(510.1428527832031 * scale, 252.0178565979004 * scale, 509.1428527832031 * scale, 266.0178565979004 * scale, 518.1428527832031 * scale, 266.0178565979004 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.translate(-3 * scale, -3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(518.1428527832031 * scale, 265.0178565979004 * scale);\r\n        ctx.bezierCurveTo(524.1428527832031 * scale, 262.0178565979004 * scale, 521.1428527832031 * scale, 247.0178565979004 * scale, 514.1428527832031 * scale, 250.0178565979004 * scale);\r\n        ctx.bezierCurveTo(510.1428527832031 * scale, 252.0178565979004 * scale, 509.1428527832031 * scale, 266.0178565979004 * scale, 518.1428527832031 * scale, 266.0178565979004 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(3 * scale, 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(179.14285278320312 * scale, 399.5892858505249 * scale);\r\n        ctx.bezierCurveTo(174.14285278320312 * scale, 385.5892858505249 * scale, 186.14285278320312 * scale, 379.5892858505249 * scale, 198.14285278320312 * scale, 379.5892858505249 * scale);\r\n        ctx.bezierCurveTo(208.14285278320312 * scale, 379.5892858505249 * scale, 206.14285278320312 * scale, 391.5892858505249 * scale, 194.14285278320312 * scale, 396.5892858505249 * scale);\r\n        ctx.bezierCurveTo(184.14285278320312 * scale, 401.5892858505249 * scale, 182.14285278320312 * scale, 402.5892858505249 * scale, 179.14285278320312 * scale, 399.5892858505249 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.translate(-3 * scale, -3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(179.14285278320312 * scale, 399.5892858505249 * scale);\r\n        ctx.bezierCurveTo(174.14285278320312 * scale, 385.5892858505249 * scale, 186.14285278320312 * scale, 379.5892858505249 * scale, 198.14285278320312 * scale, 379.5892858505249 * scale);\r\n        ctx.bezierCurveTo(208.14285278320312 * scale, 379.5892858505249 * scale, 206.14285278320312 * scale, 391.5892858505249 * scale, 194.14285278320312 * scale, 396.5892858505249 * scale);\r\n        ctx.bezierCurveTo(184.14285278320312 * scale, 401.5892858505249 * scale, 182.14285278320312 * scale, 402.5892858505249 * scale, 179.14285278320312 * scale, 399.5892858505249 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(3 * scale, 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(163.14285278320312 * scale, 407.875 * scale);\r\n        ctx.bezierCurveTo(152.14285278320312 * scale, 405.875 * scale, 156.14285278320312 * scale, 391.875 * scale, 163.14285278320312 * scale, 385.875 * scale);\r\n        ctx.bezierCurveTo(170.14285278320312 * scale, 381.875 * scale, 173.14285278320312 * scale, 385.875 * scale, 170.14285278320312 * scale, 398.875 * scale);\r\n        ctx.bezierCurveTo(169.14285278320312 * scale, 403.875 * scale, 165.14285278320312 * scale, 408.875 * scale, 164.14285278320312 * scale, 407.875 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.translate(-3 * scale, -3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(163.14285278320312 * scale, 407.875 * scale);\r\n        ctx.bezierCurveTo(152.14285278320312 * scale, 405.875 * scale, 156.14285278320312 * scale, 391.875 * scale, 163.14285278320312 * scale, 385.875 * scale);\r\n        ctx.bezierCurveTo(170.14285278320312 * scale, 381.875 * scale, 173.14285278320312 * scale, 385.875 * scale, 170.14285278320312 * scale, 398.875 * scale);\r\n        ctx.bezierCurveTo(169.14285278320312 * scale, 403.875 * scale, 165.14285278320312 * scale, 408.875 * scale, 164.14285278320312 * scale, 407.875 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(3 * scale, 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(78.14285278320312 * scale, 71.73211669921875 * scale);\r\n        ctx.bezierCurveTo(82.14285278320312 * scale, 62.73211669921875 * scale, 88.14285278320312 * scale, 69.73211669921875 * scale, 91.14285278320312 * scale, 79.73211669921875 * scale);\r\n        ctx.bezierCurveTo(90.14285278320312 * scale, 86.73211669921875 * scale, 79.14285278320312 * scale, 83.73211669921875 * scale, 78.14285278320312 * scale, 71.73211669921875 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.translate(-3 * scale, -3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(78.14285278320312 * scale, 71.73211669921875 * scale);\r\n        ctx.bezierCurveTo(82.14285278320312 * scale, 62.73211669921875 * scale, 88.14285278320312 * scale, 69.73211669921875 * scale, 91.14285278320312 * scale, 79.73211669921875 * scale);\r\n        ctx.bezierCurveTo(90.14285278320312 * scale, 86.73211669921875 * scale, 79.14285278320312 * scale, 83.73211669921875 * scale, 78.14285278320312 * scale, 71.73211669921875 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(3 * scale, 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(385.1428527832031 * scale, 405.017858505249 * scale);\r\n        ctx.bezierCurveTo(392.1428527832031 * scale, 397.017858505249 * scale, 406.1428527832031 * scale, 401.017858505249 * scale, 409.1428527832031 * scale, 418.017858505249 * scale);\r\n        ctx.bezierCurveTo(410.1428527832031 * scale, 426.017858505249 * scale, 401.1428527832031 * scale, 425.017858505249 * scale, 388.1428527832031 * scale, 418.017858505249 * scale);\r\n        ctx.bezierCurveTo(381.1428527832031 * scale, 411.017858505249 * scale, 383.1428527832031 * scale, 407.017858505249 * scale, 385.1428527832031 * scale, 405.017858505249 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.translate(-3 * scale, -3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(385.1428527832031 * scale, 405.017858505249 * scale);\r\n        ctx.bezierCurveTo(392.1428527832031 * scale, 397.017858505249 * scale, 406.1428527832031 * scale, 401.017858505249 * scale, 409.1428527832031 * scale, 418.017858505249 * scale);\r\n        ctx.bezierCurveTo(410.1428527832031 * scale, 426.017858505249 * scale, 401.1428527832031 * scale, 425.017858505249 * scale, 388.1428527832031 * scale, 418.017858505249 * scale);\r\n        ctx.bezierCurveTo(381.1428527832031 * scale, 411.017858505249 * scale, 383.1428527832031 * scale, 407.017858505249 * scale, 385.1428527832031 * scale, 405.017858505249 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(3 * scale, 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(414.1428527832031 * scale, 361.4464282989502 * scale);\r\n        ctx.bezierCurveTo(418.1428527832031 * scale, 352.4464282989502 * scale, 426.1428527832031 * scale, 353.4464282989502 * scale, 437.1428527832031 * scale, 362.4464282989502 * scale);\r\n        ctx.bezierCurveTo(441.1428527832031 * scale, 366.4464282989502 * scale, 439.1428527832031 * scale, 373.4464282989502 * scale, 428.1428527832031 * scale, 372.4464282989502 * scale);\r\n        ctx.bezierCurveTo(416.1428527832031 * scale, 370.4464282989502 * scale, 412.1428527832031 * scale, 367.4464282989502 * scale, 415.1428527832031 * scale, 361.4464282989502 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.translate(-3 * scale, -3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(414.1428527832031 * scale, 361.4464282989502 * scale);\r\n        ctx.bezierCurveTo(418.1428527832031 * scale, 352.4464282989502 * scale, 426.1428527832031 * scale, 353.4464282989502 * scale, 437.1428527832031 * scale, 362.4464282989502 * scale);\r\n        ctx.bezierCurveTo(441.1428527832031 * scale, 366.4464282989502 * scale, 439.1428527832031 * scale, 373.4464282989502 * scale, 428.1428527832031 * scale, 372.4464282989502 * scale);\r\n        ctx.bezierCurveTo(416.1428527832031 * scale, 370.4464282989502 * scale, 412.1428527832031 * scale, 367.4464282989502 * scale, 415.1428527832031 * scale, 361.4464282989502 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(3 * scale, 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(453.1428527832031 * scale, 356.875 * scale);\r\n        ctx.bezierCurveTo(458.1428527832031 * scale, 363.875 * scale, 447.1428527832031 * scale, 373.875 * scale, 444.1428527832031 * scale, 369.875 * scale);\r\n        ctx.bezierCurveTo(441.1428527832031 * scale, 361.875 * scale, 448.1428527832031 * scale, 352.875 * scale, 453.1428527832031 * scale, 356.875 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.translate(-3 * scale, -3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(453.1428527832031 * scale, 356.875 * scale);\r\n        ctx.bezierCurveTo(458.1428527832031 * scale, 363.875 * scale, 447.1428527832031 * scale, 373.875 * scale, 444.1428527832031 * scale, 369.875 * scale);\r\n        ctx.bezierCurveTo(441.1428527832031 * scale, 361.875 * scale, 448.1428527832031 * scale, 352.875 * scale, 453.1428527832031 * scale, 356.875 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(3 * scale, 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(40.142852783203125 * scale, 225.1607151031494 * scale);\r\n        ctx.bezierCurveTo(52.142852783203125 * scale, 224.1607151031494 * scale, 44.142852783203125 * scale, 251.1607151031494 * scale, 36.142852783203125 * scale, 248.1607151031494 * scale);\r\n        ctx.bezierCurveTo(25.142852783203125 * scale, 245.1607151031494 * scale, 34.142852783203125 * scale, 225.1607151031494 * scale, 41.142852783203125 * scale, 225.1607151031494 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.translate(-3 * scale, -3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(40.142852783203125 * scale, 225.1607151031494 * scale);\r\n        ctx.bezierCurveTo(52.142852783203125 * scale, 224.1607151031494 * scale, 44.142852783203125 * scale, 251.1607151031494 * scale, 36.142852783203125 * scale, 248.1607151031494 * scale);\r\n        ctx.bezierCurveTo(25.142852783203125 * scale, 245.1607151031494 * scale, 34.142852783203125 * scale, 225.1607151031494 * scale, 41.142852783203125 * scale, 225.1607151031494 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(3 * scale, 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(114.14285278320312 * scale, 52.4464111328125 * scale);\r\n        ctx.bezierCurveTo(123.14285278320312 * scale, 57.4464111328125 * scale, 111.14285278320312 * scale, 71.4464111328125 * scale, 106.14285278320312 * scale, 65.4464111328125 * scale);\r\n        ctx.bezierCurveTo(101.14285278320312 * scale, 58.4464111328125 * scale, 111.14285278320312 * scale, 51.4464111328125 * scale, 114.14285278320312 * scale, 52.4464111328125 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.translate(-3 * scale, -3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(114.14285278320312 * scale, 52.4464111328125 * scale);\r\n        ctx.bezierCurveTo(123.14285278320312 * scale, 57.4464111328125 * scale, 111.14285278320312 * scale, 71.4464111328125 * scale, 106.14285278320312 * scale, 65.4464111328125 * scale);\r\n        ctx.bezierCurveTo(101.14285278320312 * scale, 58.4464111328125 * scale, 111.14285278320312 * scale, 51.4464111328125 * scale, 114.14285278320312 * scale, 52.4464111328125 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(3 * scale, 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(35.142852783203125 * scale, 256.3035707473755 * scale);\r\n        ctx.bezierCurveTo(41.142852783203125 * scale, 263.3035707473755 * scale, 32.142852783203125 * scale, 270.3035707473755 * scale, 27.142852783203125 * scale, 270.3035707473755 * scale);\r\n        ctx.bezierCurveTo(20.142852783203125 * scale, 267.3035707473755 * scale, 29.142852783203125 * scale, 252.3035707473755 * scale, 35.142852783203125 * scale, 255.3035707473755 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.translate(-3 * scale, -3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(35.142852783203125 * scale, 256.3035707473755 * scale);\r\n        ctx.bezierCurveTo(41.142852783203125 * scale, 263.3035707473755 * scale, 32.142852783203125 * scale, 270.3035707473755 * scale, 27.142852783203125 * scale, 270.3035707473755 * scale);\r\n        ctx.bezierCurveTo(20.142852783203125 * scale, 267.3035707473755 * scale, 29.142852783203125 * scale, 252.3035707473755 * scale, 35.142852783203125 * scale, 255.3035707473755 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(3 * scale, 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(48.142852783203125 * scale, 266.4464282989502 * scale);\r\n        ctx.bezierCurveTo(59.142852783203125 * scale, 273.4464282989502 * scale, 41.142852783203125 * scale, 290.4464282989502 * scale, 33.142852783203125 * scale, 285.4464282989502 * scale);\r\n        ctx.bezierCurveTo(25.142852783203125 * scale, 277.4464282989502 * scale, 44.142852783203125 * scale, 261.4464282989502 * scale, 48.142852783203125 * scale, 266.4464282989502 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.translate(-3 * scale, -3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(48.142852783203125 * scale, 266.4464282989502 * scale);\r\n        ctx.bezierCurveTo(59.142852783203125 * scale, 273.4464282989502 * scale, 41.142852783203125 * scale, 290.4464282989502 * scale, 33.142852783203125 * scale, 285.4464282989502 * scale);\r\n        ctx.bezierCurveTo(25.142852783203125 * scale, 277.4464282989502 * scale, 44.142852783203125 * scale, 261.4464282989502 * scale, 48.142852783203125 * scale, 266.4464282989502 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(3 * scale, 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(138.14285278320312 * scale, 385.5892868041992 * scale);\r\n        ctx.bezierCurveTo(150.14285278320312 * scale, 387.5892868041992 * scale, 140.14285278320312 * scale, 405.5892868041992 * scale, 131.14285278320312 * scale, 402.5892868041992 * scale);\r\n        ctx.bezierCurveTo(125.14285278320312 * scale, 397.5892868041992 * scale, 134.14285278320312 * scale, 385.5892868041992 * scale, 138.14285278320312 * scale, 385.5892868041992 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.translate(-3 * scale, -3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(138.14285278320312 * scale, 385.5892868041992 * scale);\r\n        ctx.bezierCurveTo(150.14285278320312 * scale, 387.5892868041992 * scale, 140.14285278320312 * scale, 405.5892868041992 * scale, 131.14285278320312 * scale, 402.5892868041992 * scale);\r\n        ctx.bezierCurveTo(125.14285278320312 * scale, 397.5892868041992 * scale, 134.14285278320312 * scale, 385.5892868041992 * scale, 138.14285278320312 * scale, 385.5892868041992 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(3 * scale, 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(218.14285278320312 * scale, 394.16071701049805 * scale);\r\n        ctx.bezierCurveTo(224.14285278320312 * scale, 398.16071701049805 * scale, 222.14285278320312 * scale, 403.16071701049805 * scale, 214.14285278320312 * scale, 407.16071701049805 * scale);\r\n        ctx.bezierCurveTo(204.14285278320312 * scale, 407.16071701049805 * scale, 213.14285278320312 * scale, 392.16071701049805 * scale, 218.14285278320312 * scale, 394.16071701049805 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.translate(-3 * scale, -3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(218.14285278320312 * scale, 394.16071701049805 * scale);\r\n        ctx.bezierCurveTo(224.14285278320312 * scale, 398.16071701049805 * scale, 222.14285278320312 * scale, 403.16071701049805 * scale, 214.14285278320312 * scale, 407.16071701049805 * scale);\r\n        ctx.bezierCurveTo(204.14285278320312 * scale, 407.16071701049805 * scale, 213.14285278320312 * scale, 392.16071701049805 * scale, 218.14285278320312 * scale, 394.16071701049805 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n        ctx.translate(50 * scale, 100 * scale);\r\n    } else {\r\n        can.width = 543 * scale;\r\n        can.height = 470 * scale;\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(3 * scale, 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(97.14285278320312 * scale, 113.875 * scale);\r\n        ctx.bezierCurveTo(104.14285278320312 * scale, 106.875 * scale, 113.14285278320312 * scale, 109.875 * scale, 118.14285278320312 * scale, 118.875 * scale);\r\n        ctx.bezierCurveTo(119.14285278320312 * scale, 121.875 * scale, 118.14285278320312 * scale, 129.875 * scale, 103.14285278320312 * scale, 124.875 * scale);\r\n        ctx.bezierCurveTo(94.14285278320312 * scale, 120.875 * scale, 95.14285278320312 * scale, 117.875 * scale, 97.14285278320312 * scale, 113.875 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.translate(-3 * scale, -3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(97.14285278320312 * scale, 113.875 * scale);\r\n        ctx.bezierCurveTo(104.14285278320312 * scale, 106.875 * scale, 113.14285278320312 * scale, 109.875 * scale, 118.14285278320312 * scale, 118.875 * scale);\r\n        ctx.bezierCurveTo(119.14285278320312 * scale, 121.875 * scale, 118.14285278320312 * scale, 129.875 * scale, 103.14285278320312 * scale, 124.875 * scale);\r\n        ctx.bezierCurveTo(94.14285278320312 * scale, 120.875 * scale, 95.14285278320312 * scale, 117.875 * scale, 97.14285278320312 * scale, 113.875 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(3 * scale, 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(88.14285278320312 * scale, 138.87498474121094 * scale);\r\n        ctx.bezierCurveTo(90.14285278320312 * scale, 128.87498474121094 * scale, 104.14285278320312 * scale, 130.87498474121094 * scale, 107.14285278320312 * scale, 138.87498474121094 * scale);\r\n        ctx.bezierCurveTo(109.14285278320312 * scale, 147.87498474121094 * scale, 89.14285278320312 * scale, 145.87498474121094 * scale, 88.14285278320312 * scale, 138.87498474121094 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.translate(-3 * scale, -3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(88.14285278320312 * scale, 138.87498474121094 * scale);\r\n        ctx.bezierCurveTo(90.14285278320312 * scale, 128.87498474121094 * scale, 104.14285278320312 * scale, 130.87498474121094 * scale, 107.14285278320312 * scale, 138.87498474121094 * scale);\r\n        ctx.bezierCurveTo(109.14285278320312 * scale, 147.87498474121094 * scale, 89.14285278320312 * scale, 145.87498474121094 * scale, 88.14285278320312 * scale, 138.87498474121094 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(3 * scale, 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(194.14285278320312 * scale, 44.87498474121094 * scale);\r\n        ctx.bezierCurveTo(202.14285278320312 * scale, 49.87498474121094 * scale, 195.14285278320312 * scale, 62.87498474121094 * scale, 187.14285278320312 * scale, 60.87498474121094 * scale);\r\n        ctx.bezierCurveTo(180.14285278320312 * scale, 57.87498474121094 * scale, 190.14285278320312 * scale, 40.87498474121094 * scale, 194.14285278320312 * scale, 44.87498474121094 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.translate(-3 * scale, -3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(194.14285278320312 * scale, 44.87498474121094 * scale);\r\n        ctx.bezierCurveTo(202.14285278320312 * scale, 49.87498474121094 * scale, 195.14285278320312 * scale, 62.87498474121094 * scale, 187.14285278320312 * scale, 60.87498474121094 * scale);\r\n        ctx.bezierCurveTo(180.14285278320312 * scale, 57.87498474121094 * scale, 190.14285278320312 * scale, 40.87498474121094 * scale, 194.14285278320312 * scale, 44.87498474121094 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(3 * scale, 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(22.142852783203125 * scale, 218.44642639160156 * scale);\r\n        ctx.bezierCurveTo(31.142852783203125 * scale, 205.44642639160156 * scale, 49.142852783203125 * scale, 221.44642639160156 * scale, 49.142852783203125 * scale, 230.44642639160156 * scale);\r\n        ctx.bezierCurveTo(44.142852783203125 * scale, 243.44642639160156 * scale, 14.142852783203125 * scale, 228.44642639160156 * scale, 22.142852783203125 * scale, 218.44642639160156 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.translate(-3 * scale, -3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(22.142852783203125 * scale, 218.44642639160156 * scale);\r\n        ctx.bezierCurveTo(31.142852783203125 * scale, 205.44642639160156 * scale, 49.142852783203125 * scale, 221.44642639160156 * scale, 49.142852783203125 * scale, 230.44642639160156 * scale);\r\n        ctx.bezierCurveTo(44.142852783203125 * scale, 243.44642639160156 * scale, 14.142852783203125 * scale, 228.44642639160156 * scale, 22.142852783203125 * scale, 218.44642639160156 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(3 * scale, 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(41.142852783203125 * scale, 249.875 * scale);\r\n        ctx.bezierCurveTo(33.142852783203125 * scale, 255.875 * scale, 30.142852783203125 * scale, 265.875 * scale, 40.142852783203125 * scale, 266.875 * scale);\r\n        ctx.bezierCurveTo(49.142852783203125 * scale, 261.875 * scale, 53.142852783203125 * scale, 244.875 * scale, 41.142852783203125 * scale, 249.875 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.translate(-3 * scale, -3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(41.142852783203125 * scale, 249.875 * scale);\r\n        ctx.bezierCurveTo(33.142852783203125 * scale, 255.875 * scale, 30.142852783203125 * scale, 265.875 * scale, 40.142852783203125 * scale, 266.875 * scale);\r\n        ctx.bezierCurveTo(49.142852783203125 * scale, 261.875 * scale, 53.142852783203125 * scale, 244.875 * scale, 41.142852783203125 * scale, 249.875 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(3 * scale, 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(105.14285278320312 * scale, 369.875 * scale);\r\n        ctx.bezierCurveTo(92.14285278320312 * scale, 361.875 * scale, 77.14285278320312 * scale, 375.875 * scale, 79.14285278320312 * scale, 384.875 * scale);\r\n        ctx.bezierCurveTo(84.14285278320312 * scale, 399.875 * scale, 114.14285278320312 * scale, 375.875 * scale, 104.14285278320312 * scale, 369.875 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.translate(-3 * scale, -3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(105.14285278320312 * scale, 369.875 * scale);\r\n        ctx.bezierCurveTo(92.14285278320312 * scale, 361.875 * scale, 77.14285278320312 * scale, 375.875 * scale, 79.14285278320312 * scale, 384.875 * scale);\r\n        ctx.bezierCurveTo(84.14285278320312 * scale, 399.875 * scale, 114.14285278320312 * scale, 375.875 * scale, 104.14285278320312 * scale, 369.875 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(3 * scale, 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(233.14285278320312 * scale, 43.4464111328125 * scale);\r\n        ctx.bezierCurveTo(238.14285278320312 * scale, 47.4464111328125 * scale, 222.14285278320312 * scale, 73.4464111328125 * scale, 214.14285278320312 * scale, 58.4464111328125 * scale);\r\n        ctx.bezierCurveTo(211.14285278320312 * scale, 48.4464111328125 * scale, 230.14285278320312 * scale, 35.4464111328125 * scale, 233.14285278320312 * scale, 42.4464111328125 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.translate(-3 * scale, -3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(233.14285278320312 * scale, 43.4464111328125 * scale);\r\n        ctx.bezierCurveTo(238.14285278320312 * scale, 47.4464111328125 * scale, 222.14285278320312 * scale, 73.4464111328125 * scale, 214.14285278320312 * scale, 58.4464111328125 * scale);\r\n        ctx.bezierCurveTo(211.14285278320312 * scale, 48.4464111328125 * scale, 230.14285278320312 * scale, 35.4464111328125 * scale, 233.14285278320312 * scale, 42.4464111328125 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(3 * scale, 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(371.1428527832031 * scale, 34.73213195800781 * scale);\r\n        ctx.bezierCurveTo(378.1428527832031 * scale, 20.732131958007812 * scale, 395.1428527832031 * scale, 32.73213195800781 * scale, 396.1428527832031 * scale, 42.73213195800781 * scale);\r\n        ctx.bezierCurveTo(399.1428527832031 * scale, 59.73213195800781 * scale, 369.1428527832031 * scale, 43.73213195800781 * scale, 372.1428527832031 * scale, 34.73213195800781 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.translate(-3 * scale, -3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(371.1428527832031 * scale, 34.73213195800781 * scale);\r\n        ctx.bezierCurveTo(378.1428527832031 * scale, 20.732131958007812 * scale, 395.1428527832031 * scale, 32.73213195800781 * scale, 396.1428527832031 * scale, 42.73213195800781 * scale);\r\n        ctx.bezierCurveTo(399.1428527832031 * scale, 59.73213195800781 * scale, 369.1428527832031 * scale, 43.73213195800781 * scale, 372.1428527832031 * scale, 34.73213195800781 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(3 * scale, 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(117.14285278320312 * scale, 392.5892868041992 * scale);\r\n        ctx.bezierCurveTo(115.14285278320312 * scale, 384.5892868041992 * scale, 109.14285278320312 * scale, 383.5892868041992 * scale, 103.14285278320312 * scale, 384.5892868041992 * scale);\r\n        ctx.bezierCurveTo(95.14285278320312 * scale, 389.5892868041992 * scale, 97.14285278320312 * scale, 393.5892868041992 * scale, 107.14285278320312 * scale, 396.5892868041992 * scale);\r\n        ctx.bezierCurveTo(114.14285278320312 * scale, 396.5892868041992 * scale, 118.14285278320312 * scale, 393.5892868041992 * scale, 116.14285278320312 * scale, 391.5892868041992 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.translate(-3 * scale, -3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(117.14285278320312 * scale, 392.5892868041992 * scale);\r\n        ctx.bezierCurveTo(115.14285278320312 * scale, 384.5892868041992 * scale, 109.14285278320312 * scale, 383.5892868041992 * scale, 103.14285278320312 * scale, 384.5892868041992 * scale);\r\n        ctx.bezierCurveTo(95.14285278320312 * scale, 389.5892868041992 * scale, 97.14285278320312 * scale, 393.5892868041992 * scale, 107.14285278320312 * scale, 396.5892868041992 * scale);\r\n        ctx.bezierCurveTo(114.14285278320312 * scale, 396.5892868041992 * scale, 118.14285278320312 * scale, 393.5892868041992 * scale, 116.14285278320312 * scale, 391.5892868041992 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(3 * scale, 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(122.14285278320312 * scale, 403.7321472167969 * scale);\r\n        ctx.bezierCurveTo(132.14285278320312 * scale, 399.7321472167969 * scale, 133.14285278320312 * scale, 418.7321472167969 * scale, 129.14285278320312 * scale, 419.7321472167969 * scale);\r\n        ctx.bezierCurveTo(119.14285278320312 * scale, 420.7321472167969 * scale, 118.14285278320312 * scale, 402.7321472167969 * scale, 123.14285278320312 * scale, 403.7321472167969 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.translate(-3 * scale, -3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(122.14285278320312 * scale, 403.7321472167969 * scale);\r\n        ctx.bezierCurveTo(132.14285278320312 * scale, 399.7321472167969 * scale, 133.14285278320312 * scale, 418.7321472167969 * scale, 129.14285278320312 * scale, 419.7321472167969 * scale);\r\n        ctx.bezierCurveTo(119.14285278320312 * scale, 420.7321472167969 * scale, 118.14285278320312 * scale, 402.7321472167969 * scale, 123.14285278320312 * scale, 403.7321472167969 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(3 * scale, 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(317.1428527832031 * scale, 417.5892868041992 * scale);\r\n        ctx.bezierCurveTo(333.1428527832031 * scale, 421.5892868041992 * scale, 299.1428527832031 * scale, 455.5892868041992 * scale, 294.1428527832031 * scale, 438.5892868041992 * scale);\r\n        ctx.bezierCurveTo(289.1428527832031 * scale, 423.5892868041992 * scale, 307.1428527832031 * scale, 414.5892868041992 * scale, 317.1428527832031 * scale, 417.5892868041992 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.translate(-3 * scale, -3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(317.1428527832031 * scale, 417.5892868041992 * scale);\r\n        ctx.bezierCurveTo(333.1428527832031 * scale, 421.5892868041992 * scale, 299.1428527832031 * scale, 455.5892868041992 * scale, 294.1428527832031 * scale, 438.5892868041992 * scale);\r\n        ctx.bezierCurveTo(289.1428527832031 * scale, 423.5892868041992 * scale, 307.1428527832031 * scale, 414.5892868041992 * scale, 317.1428527832031 * scale, 417.5892868041992 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(3 * scale, 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(322.1428527832031 * scale, 437.30357360839844 * scale);\r\n        ctx.bezierCurveTo(330.1428527832031 * scale, 431.30357360839844 * scale, 336.1428527832031 * scale, 440.30357360839844 * scale, 336.1428527832031 * scale, 448.30357360839844 * scale);\r\n        ctx.bezierCurveTo(334.1428527832031 * scale, 454.30357360839844 * scale, 316.1428527832031 * scale, 447.30357360839844 * scale, 323.1428527832031 * scale, 437.30357360839844 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.translate(-3 * scale, -3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(322.1428527832031 * scale, 437.30357360839844 * scale);\r\n        ctx.bezierCurveTo(330.1428527832031 * scale, 431.30357360839844 * scale, 336.1428527832031 * scale, 440.30357360839844 * scale, 336.1428527832031 * scale, 448.30357360839844 * scale);\r\n        ctx.bezierCurveTo(334.1428527832031 * scale, 454.30357360839844 * scale, 316.1428527832031 * scale, 447.30357360839844 * scale, 323.1428527832031 * scale, 437.30357360839844 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(3 * scale, 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(438.1428527832031 * scale, 358.5892868041992 * scale);\r\n        ctx.bezierCurveTo(455.1428527832031 * scale, 351.5892868041992 * scale, 467.1428527832031 * scale, 371.5892868041992 * scale, 455.1428527832031 * scale, 374.5892868041992 * scale);\r\n        ctx.bezierCurveTo(442.1428527832031 * scale, 377.5892868041992 * scale, 429.1428527832031 * scale, 361.5892868041992 * scale, 438.1428527832031 * scale, 358.5892868041992 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.translate(-3 * scale, -3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(438.1428527832031 * scale, 358.5892868041992 * scale);\r\n        ctx.bezierCurveTo(455.1428527832031 * scale, 351.5892868041992 * scale, 467.1428527832031 * scale, 371.5892868041992 * scale, 455.1428527832031 * scale, 374.5892868041992 * scale);\r\n        ctx.bezierCurveTo(442.1428527832031 * scale, 377.5892868041992 * scale, 429.1428527832031 * scale, 361.5892868041992 * scale, 438.1428527832031 * scale, 358.5892868041992 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(3 * scale, 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(423.1428527832031 * scale, 363.16071701049805 * scale);\r\n        ctx.bezierCurveTo(433.1428527832031 * scale, 362.16071701049805 * scale, 433.1428527832031 * scale, 374.16071701049805 * scale, 421.1428527832031 * scale, 382.16071701049805 * scale);\r\n        ctx.bezierCurveTo(413.1428527832031 * scale, 383.16071701049805 * scale, 413.1428527832031 * scale, 368.16071701049805 * scale, 423.1428527832031 * scale, 363.16071701049805 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.translate(-3 * scale, -3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(423.1428527832031 * scale, 363.16071701049805 * scale);\r\n        ctx.bezierCurveTo(433.1428527832031 * scale, 362.16071701049805 * scale, 433.1428527832031 * scale, 374.16071701049805 * scale, 421.1428527832031 * scale, 382.16071701049805 * scale);\r\n        ctx.bezierCurveTo(413.1428527832031 * scale, 383.16071701049805 * scale, 413.1428527832031 * scale, 368.16071701049805 * scale, 423.1428527832031 * scale, 363.16071701049805 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(3 * scale, 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(431.1428527832031 * scale, 333.0178565979004 * scale);\r\n        ctx.bezierCurveTo(447.1428527832031 * scale, 330.0178565979004 * scale, 448.1428527832031 * scale, 340.0178565979004 * scale, 447.1428527832031 * scale, 343.0178565979004 * scale);\r\n        ctx.bezierCurveTo(445.1428527832031 * scale, 351.0178565979004 * scale, 415.1428527832031 * scale, 343.0178565979004 * scale, 431.1428527832031 * scale, 333.0178565979004 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.translate(-3 * scale, -3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(431.1428527832031 * scale, 333.0178565979004 * scale);\r\n        ctx.bezierCurveTo(447.1428527832031 * scale, 330.0178565979004 * scale, 448.1428527832031 * scale, 340.0178565979004 * scale, 447.1428527832031 * scale, 343.0178565979004 * scale);\r\n        ctx.bezierCurveTo(445.1428527832031 * scale, 351.0178565979004 * scale, 415.1428527832031 * scale, 343.0178565979004 * scale, 431.1428527832031 * scale, 333.0178565979004 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(3 * scale, 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(486.1428527832031 * scale, 272.44642639160156 * scale);\r\n        ctx.bezierCurveTo(493.1428527832031 * scale, 260.44642639160156 * scale, 519.1428527832031 * scale, 277.44642639160156 * scale, 511.1428527832031 * scale, 289.44642639160156 * scale);\r\n        ctx.bezierCurveTo(503.1428527832031 * scale, 297.44642639160156 * scale, 483.1428527832031 * scale, 277.44642639160156 * scale, 486.1428527832031 * scale, 273.44642639160156 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.translate(-3 * scale, -3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(486.1428527832031 * scale, 272.44642639160156 * scale);\r\n        ctx.bezierCurveTo(493.1428527832031 * scale, 260.44642639160156 * scale, 519.1428527832031 * scale, 277.44642639160156 * scale, 511.1428527832031 * scale, 289.44642639160156 * scale);\r\n        ctx.bezierCurveTo(503.1428527832031 * scale, 297.44642639160156 * scale, 483.1428527832031 * scale, 277.44642639160156 * scale, 486.1428527832031 * scale, 273.44642639160156 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(3 * scale, 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(503.1428527832031 * scale, 245.01785278320312 * scale);\r\n        ctx.bezierCurveTo(516.1428527832031 * scale, 247.01785278320312 * scale, 513.1428527832031 * scale, 264.0178527832031 * scale, 509.1428527832031 * scale, 265.0178527832031 * scale);\r\n        ctx.bezierCurveTo(499.1428527832031 * scale, 268.0178527832031 * scale, 494.1428527832031 * scale, 244.01785278320312 * scale, 504.1428527832031 * scale, 245.01785278320312 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.translate(-3 * scale, -3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(503.1428527832031 * scale, 245.01785278320312 * scale);\r\n        ctx.bezierCurveTo(516.1428527832031 * scale, 247.01785278320312 * scale, 513.1428527832031 * scale, 264.0178527832031 * scale, 509.1428527832031 * scale, 265.0178527832031 * scale);\r\n        ctx.bezierCurveTo(499.1428527832031 * scale, 268.0178527832031 * scale, 494.1428527832031 * scale, 244.01785278320312 * scale, 504.1428527832031 * scale, 245.01785278320312 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(3 * scale, 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(518.1428527832031 * scale, 179.73213958740234 * scale);\r\n        ctx.bezierCurveTo(529.1428527832031 * scale, 181.73213958740234 * scale, 514.1428527832031 * scale, 212.73213958740234 * scale, 505.1428527832031 * scale, 200.73213958740234 * scale);\r\n        ctx.bezierCurveTo(499.1428527832031 * scale, 186.73213958740234 * scale, 515.1428527832031 * scale, 177.73213958740234 * scale, 518.1428527832031 * scale, 179.73213958740234 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.translate(-3 * scale, -3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(518.1428527832031 * scale, 179.73213958740234 * scale);\r\n        ctx.bezierCurveTo(529.1428527832031 * scale, 181.73213958740234 * scale, 514.1428527832031 * scale, 212.73213958740234 * scale, 505.1428527832031 * scale, 200.73213958740234 * scale);\r\n        ctx.bezierCurveTo(499.1428527832031 * scale, 186.73213958740234 * scale, 515.1428527832031 * scale, 177.73213958740234 * scale, 518.1428527832031 * scale, 179.73213958740234 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(3 * scale, 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(438.1428527832031 * scale, 22.16070556640625 * scale);\r\n        ctx.bezierCurveTo(446.1428527832031 * scale, 27.16070556640625 * scale, 422.1428527832031 * scale, 54.16070556640625 * scale, 414.1428527832031 * scale, 40.16070556640625 * scale);\r\n        ctx.bezierCurveTo(409.1428527832031 * scale, 27.16070556640625 * scale, 430.1428527832031 * scale, 15.16070556640625 * scale, 438.1428527832031 * scale, 22.16070556640625 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.translate(-3 * scale, -3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(438.1428527832031 * scale, 22.16070556640625 * scale);\r\n        ctx.bezierCurveTo(446.1428527832031 * scale, 27.16070556640625 * scale, 422.1428527832031 * scale, 54.16070556640625 * scale, 414.1428527832031 * scale, 40.16070556640625 * scale);\r\n        ctx.bezierCurveTo(409.1428527832031 * scale, 27.16070556640625 * scale, 430.1428527832031 * scale, 15.16070556640625 * scale, 438.1428527832031 * scale, 22.16070556640625 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.translate(3 * scale, 3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(406.1428527832031 * scale, 11.16070556640625 * scale);\r\n        ctx.bezierCurveTo(418.1428527832031 * scale, 14.16070556640625 * scale, 411.1428527832031 * scale, 27.16070556640625 * scale, 403.1428527832031 * scale, 30.16070556640625 * scale);\r\n        ctx.bezierCurveTo(395.1428527832031 * scale, 31.16070556640625 * scale, 391.1428527832031 * scale, 16.16070556640625 * scale, 406.1428527832031 * scale, 10.16070556640625 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0]);\r\n        ctx.globalAlpha = 1;\r\n        ctx.translate(-3 * scale, -3 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(406.1428527832031 * scale, 11.16070556640625 * scale);\r\n        ctx.bezierCurveTo(418.1428527832031 * scale, 14.16070556640625 * scale, 411.1428527832031 * scale, 27.16070556640625 * scale, 403.1428527832031 * scale, 30.16070556640625 * scale);\r\n        ctx.bezierCurveTo(395.1428527832031 * scale, 31.16070556640625 * scale, 391.1428527832031 * scale, 16.16070556640625 * scale, 406.1428527832031 * scale, 10.16070556640625 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[1]);\r\n        ctx.translate(100 * scale, 100 * scale);\r\n    }\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(-3 * scale, -3 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(271 * scale, 111 * scale);\r\n    ctx.bezierCurveTo(259 * scale, 110 * scale, 258 * scale, 99 * scale, 265 * scale, 95 * scale);\r\n    ctx.bezierCurveTo(276 * scale, 91 * scale, 279 * scale, 100 * scale, 275 * scale, 107 * scale);\r\n    ctx.bezierCurveTo(274 * scale, 109 * scale, 273 * scale, 110 * scale, 271 * scale, 111 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2], color[3], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(169 * scale, 121 * scale);\r\n    ctx.bezierCurveTo(159 * scale, 129 * scale, 149 * scale, 126 * scale, 144 * scale, 114 * scale);\r\n    ctx.bezierCurveTo(142 * scale, 102 * scale, 149 * scale, 98 * scale, 163 * scale, 96 * scale);\r\n    ctx.bezierCurveTo(175 * scale, 98 * scale, 176 * scale, 115 * scale, 169 * scale, 121 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2], color[3], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(213 * scale, 150 * scale);\r\n    ctx.bezierCurveTo(206 * scale, 134 * scale, 216 * scale, 120 * scale, 235 * scale, 129 * scale);\r\n    ctx.bezierCurveTo(247 * scale, 139 * scale, 242 * scale, 146 * scale, 237 * scale, 154 * scale);\r\n    ctx.bezierCurveTo(226 * scale, 162 * scale, 218 * scale, 159 * scale, 213 * scale, 150 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2], color[3], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(236 * scale, 169 * scale);\r\n    ctx.bezierCurveTo(247 * scale, 166 * scale, 250 * scale, 172 * scale, 247 * scale, 181 * scale);\r\n    ctx.bezierCurveTo(242 * scale, 186 * scale, 241 * scale, 181 * scale, 242 * scale, 182 * scale);\r\n    ctx.bezierCurveTo(241 * scale, 178 * scale, 240 * scale, 179 * scale, 239 * scale, 181 * scale);\r\n    ctx.bezierCurveTo(240 * scale, 184 * scale, 237 * scale, 186 * scale, 233 * scale, 181 * scale);\r\n    ctx.bezierCurveTo(230 * scale, 173 * scale, 233 * scale, 169 * scale, 236 * scale, 169 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2], color[3], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(163 * scale, 170 * scale);\r\n    ctx.bezierCurveTo(176 * scale, 165 * scale, 180 * scale, 172 * scale, 181 * scale, 181 * scale);\r\n    ctx.bezierCurveTo(182 * scale, 189 * scale, 178 * scale, 192 * scale, 174 * scale, 188 * scale);\r\n    ctx.bezierCurveTo(172 * scale, 183 * scale, 170 * scale, 184 * scale, 170 * scale, 188 * scale);\r\n    ctx.bezierCurveTo(176 * scale, 194 * scale, 165 * scale, 196 * scale, 162 * scale, 190 * scale);\r\n    ctx.bezierCurveTo(152 * scale, 181 * scale, 157 * scale, 173 * scale, 163 * scale, 170 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2], color[3], 2 * scale);\r\n    ctx.scale(0.05, 0.05);\r\n    ctx.translate(5e3 * scale, 1900 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(273 * scale, 46.546875 * scale);\r\n    ctx.bezierCurveTo(353 * scale, 131.546875 * scale, 303 * scale, 213.546875 * scale, 272 * scale, 236.546875 * scale);\r\n    ctx.bezierCurveTo(203 * scale, 179.546875 * scale, 236 * scale, 84.546875 * scale, 273 * scale, 47.546875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[5], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(467 * scale, 257.546875 * scale);\r\n    ctx.bezierCurveTo(369 * scale, 194.546875 * scale, 325 * scale, 236.546875 * scale, 291 * scale, 271.546875 * scale);\r\n    ctx.bezierCurveTo(371 * scale, 335.546875 * scale, 427 * scale, 313.546875 * scale, 467 * scale, 258.546875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[5], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(269 * scale, 275.546875 * scale);\r\n    ctx.bezierCurveTo(343 * scale, 356.546875 * scale, 355 * scale, 407.546875 * scale, 323 * scale, 472.546875 * scale);\r\n    ctx.bezierCurveTo(224 * scale, 451.546875 * scale, 238 * scale, 326.546875 * scale, 270 * scale, 275.546875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[5], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(260 * scale, 267.546875 * scale);\r\n    ctx.bezierCurveTo(134 * scale, 221.546875 * scale, 89 * scale, 256.546875 * scale, 60 * scale, 295.546875 * scale);\r\n    ctx.bezierCurveTo(116 * scale, 357.546875 * scale, 242 * scale, 344.546875 * scale, 260 * scale, 267.546875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[5], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(124 * scale, 123.546875 * scale);\r\n    ctx.bezierCurveTo(255 * scale, 140.546875 * scale, 265 * scale, 234.546875 * scale, 267 * scale, 269.546875 * scale);\r\n    ctx.bezierCurveTo(159 * scale, 283.546875 * scale, 127 * scale, 192.546875 * scale, 124 * scale, 124.546875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[6], color[7], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(267 * scale, 268.546875 * scale);\r\n    ctx.bezierCurveTo(265 * scale, 170.546875 * scale, 364 * scale, 127.546875 * scale, 407 * scale, 132.546875 * scale);\r\n    ctx.bezierCurveTo(427 * scale, 204.546875 * scale, 341 * scale, 277.546875 * scale, 268 * scale, 271.546875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[6], color[7], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(270 * scale, 269.546875 * scale);\r\n    ctx.bezierCurveTo(370 * scale, 251.546875 * scale, 410 * scale, 328.546875 * scale, 420 * scale, 399.546875 * scale);\r\n    ctx.bezierCurveTo(292 * scale, 412.546875 * scale, 275 * scale, 313.546875 * scale, 269 * scale, 272.546875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[6], color[7], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(273 * scale, 266.546875 * scale);\r\n    ctx.bezierCurveTo(291 * scale, 370.546875 * scale, 235 * scale, 428.546875 * scale, 173 * scale, 451.546875 * scale);\r\n    ctx.bezierCurveTo(124 * scale, 365.546875 * scale, 217 * scale, 274.546875 * scale, 272 * scale, 265.546875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[6], color[7], 2 * scale);\r\n    circle(ctx, 266 * scale, 251.546875 * scale, 19.1049731745428 * scale);\r\n    fill_path(ctx, color[8], color[9], 2 * scale);\r\n    circle(ctx, 292 * scale, 274.546875 * scale, 15.556349186104045 * scale);\r\n    fill_path(ctx, color[8], color[9], 2 * scale);\r\n    circle(ctx, 258 * scale, 291.546875 * scale, 17.029386365926403 * scale);\r\n    fill_path(ctx, color[8], color[9], 2 * scale);\r\n    ctx.scale(1.4, 1.4);\r\n    ctx.translate(-700 * scale, 280 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(273 * scale, 46.546875 * scale);\r\n    ctx.bezierCurveTo(353 * scale, 131.546875 * scale, 303 * scale, 213.546875 * scale, 272 * scale, 236.546875 * scale);\r\n    ctx.bezierCurveTo(203 * scale, 179.546875 * scale, 236 * scale, 84.546875 * scale, 273 * scale, 47.546875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[5], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(467 * scale, 257.546875 * scale);\r\n    ctx.bezierCurveTo(369 * scale, 194.546875 * scale, 325 * scale, 236.546875 * scale, 291 * scale, 271.546875 * scale);\r\n    ctx.bezierCurveTo(371 * scale, 335.546875 * scale, 427 * scale, 313.546875 * scale, 467 * scale, 258.546875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[5], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(269 * scale, 275.546875 * scale);\r\n    ctx.bezierCurveTo(343 * scale, 356.546875 * scale, 355 * scale, 407.546875 * scale, 323 * scale, 472.546875 * scale);\r\n    ctx.bezierCurveTo(224 * scale, 451.546875 * scale, 238 * scale, 326.546875 * scale, 270 * scale, 275.546875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[5], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(260 * scale, 267.546875 * scale);\r\n    ctx.bezierCurveTo(134 * scale, 221.546875 * scale, 89 * scale, 256.546875 * scale, 60 * scale, 295.546875 * scale);\r\n    ctx.bezierCurveTo(116 * scale, 357.546875 * scale, 242 * scale, 344.546875 * scale, 260 * scale, 267.546875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[5], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(124 * scale, 123.546875 * scale);\r\n    ctx.bezierCurveTo(255 * scale, 140.546875 * scale, 265 * scale, 234.546875 * scale, 267 * scale, 269.546875 * scale);\r\n    ctx.bezierCurveTo(159 * scale, 283.546875 * scale, 127 * scale, 192.546875 * scale, 124 * scale, 124.546875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[6], color[7], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(267 * scale, 268.546875 * scale);\r\n    ctx.bezierCurveTo(265 * scale, 170.546875 * scale, 364 * scale, 127.546875 * scale, 407 * scale, 132.546875 * scale);\r\n    ctx.bezierCurveTo(427 * scale, 204.546875 * scale, 341 * scale, 277.546875 * scale, 268 * scale, 271.546875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[6], color[7], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(270 * scale, 269.546875 * scale);\r\n    ctx.bezierCurveTo(370 * scale, 251.546875 * scale, 410 * scale, 328.546875 * scale, 420 * scale, 399.546875 * scale);\r\n    ctx.bezierCurveTo(292 * scale, 412.546875 * scale, 275 * scale, 313.546875 * scale, 269 * scale, 272.546875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[6], color[7], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(273 * scale, 266.546875 * scale);\r\n    ctx.bezierCurveTo(291 * scale, 370.546875 * scale, 235 * scale, 428.546875 * scale, 173 * scale, 451.546875 * scale);\r\n    ctx.bezierCurveTo(124 * scale, 365.546875 * scale, 217 * scale, 274.546875 * scale, 272 * scale, 265.546875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[6], color[7], 2 * scale);\r\n    circle(ctx, 266 * scale, 251.546875 * scale, 19.1049731745428 * scale);\r\n    fill_path(ctx, color[8], color[9], 2 * scale);\r\n    circle(ctx, 292 * scale, 274.546875 * scale, 15.556349186104045 * scale);\r\n    fill_path(ctx, color[8], color[9], 2 * scale);\r\n    circle(ctx, 258 * scale, 291.546875 * scale, 17.029386365926403 * scale);\r\n    fill_path(ctx, color[8], color[9], 2 * scale);\r\n    ctx.translate(-900 * scale, -200 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(273 * scale, 46.546875 * scale);\r\n    ctx.bezierCurveTo(353 * scale, 131.546875 * scale, 303 * scale, 213.546875 * scale, 272 * scale, 236.546875 * scale);\r\n    ctx.bezierCurveTo(203 * scale, 179.546875 * scale, 236 * scale, 84.546875 * scale, 273 * scale, 47.546875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[5], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(467 * scale, 257.546875 * scale);\r\n    ctx.bezierCurveTo(369 * scale, 194.546875 * scale, 325 * scale, 236.546875 * scale, 291 * scale, 271.546875 * scale);\r\n    ctx.bezierCurveTo(371 * scale, 335.546875 * scale, 427 * scale, 313.546875 * scale, 467 * scale, 258.546875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[5], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(269 * scale, 275.546875 * scale);\r\n    ctx.bezierCurveTo(343 * scale, 356.546875 * scale, 355 * scale, 407.546875 * scale, 323 * scale, 472.546875 * scale);\r\n    ctx.bezierCurveTo(224 * scale, 451.546875 * scale, 238 * scale, 326.546875 * scale, 270 * scale, 275.546875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[5], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(260 * scale, 267.546875 * scale);\r\n    ctx.bezierCurveTo(134 * scale, 221.546875 * scale, 89 * scale, 256.546875 * scale, 60 * scale, 295.546875 * scale);\r\n    ctx.bezierCurveTo(116 * scale, 357.546875 * scale, 242 * scale, 344.546875 * scale, 260 * scale, 267.546875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[5], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(124 * scale, 123.546875 * scale);\r\n    ctx.bezierCurveTo(255 * scale, 140.546875 * scale, 265 * scale, 234.546875 * scale, 267 * scale, 269.546875 * scale);\r\n    ctx.bezierCurveTo(159 * scale, 283.546875 * scale, 127 * scale, 192.546875 * scale, 124 * scale, 124.546875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[6], color[7], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(267 * scale, 268.546875 * scale);\r\n    ctx.bezierCurveTo(265 * scale, 170.546875 * scale, 364 * scale, 127.546875 * scale, 407 * scale, 132.546875 * scale);\r\n    ctx.bezierCurveTo(427 * scale, 204.546875 * scale, 341 * scale, 277.546875 * scale, 268 * scale, 271.546875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[6], color[7], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(270 * scale, 269.546875 * scale);\r\n    ctx.bezierCurveTo(370 * scale, 251.546875 * scale, 410 * scale, 328.546875 * scale, 420 * scale, 399.546875 * scale);\r\n    ctx.bezierCurveTo(292 * scale, 412.546875 * scale, 275 * scale, 313.546875 * scale, 269 * scale, 272.546875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[6], color[7], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(273 * scale, 266.546875 * scale);\r\n    ctx.bezierCurveTo(291 * scale, 370.546875 * scale, 235 * scale, 428.546875 * scale, 173 * scale, 451.546875 * scale);\r\n    ctx.bezierCurveTo(124 * scale, 365.546875 * scale, 217 * scale, 274.546875 * scale, 272 * scale, 265.546875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[6], color[7], 2 * scale);\r\n    circle(ctx, 266 * scale, 251.546875 * scale, 19.1049731745428 * scale);\r\n    fill_path(ctx, color[8], color[9], 2 * scale);\r\n    circle(ctx, 292 * scale, 274.546875 * scale, 15.556349186104045 * scale);\r\n    fill_path(ctx, color[8], color[9], 2 * scale);\r\n    circle(ctx, 258 * scale, 291.546875 * scale, 17.029386365926403 * scale);\r\n    fill_path(ctx, color[8], color[9], 2 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_kraken(scale, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 376 * scale;\r\n    can.height = 371 * scale;\r\n    ctx.globalAlpha = 0.5;\r\n    ctx.translate(5 * scale, 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(191.633544921875 * scale, 123.98580932617188 * scale);\r\n    ctx.bezierCurveTo(215.633544921875 * scale, 85.98580932617188 * scale, 187.633544921875 * scale, 71.98580932617188 * scale, 202.633544921875 * scale, 19.985809326171875 * scale);\r\n    ctx.bezierCurveTo(231.633544921875 * scale, 68.98580932617188 * scale, 253.633544921875 * scale, 71.98580932617188 * scale, 256.633544921875 * scale, 93.98580932617188 * scale);\r\n    ctx.bezierCurveTo(306.633544921875 * scale, 64.98580932617188 * scale, 319.633544921875 * scale, 61.985809326171875 * scale, 350.633544921875 * scale, 58.985809326171875 * scale);\r\n    ctx.bezierCurveTo(280.633544921875 * scale, 86.98580932617188 * scale, 281.633544921875 * scale, 106.98580932617188 * scale, 268.633544921875 * scale, 130.98580932617188 * scale);\r\n    ctx.bezierCurveTo(295.633544921875 * scale, 158.98580932617188 * scale, 328.633544921875 * scale, 155.98580932617188 * scale, 353.633544921875 * scale, 90.98580932617188 * scale);\r\n    ctx.bezierCurveTo(371.633544921875 * scale, 158.98580932617188 * scale, 337.633544921875 * scale, 210.98580932617188 * scale, 286.633544921875 * scale, 209.98580932617188 * scale);\r\n    ctx.bezierCurveTo(323.633544921875 * scale, 230.98580932617188 * scale, 317.633544921875 * scale, 274.9858093261719 * scale, 356.633544921875 * scale, 305.9858093261719 * scale);\r\n    ctx.bezierCurveTo(288.633544921875 * scale, 297.9858093261719 * scale, 288.633544921875 * scale, 265.9858093261719 * scale, 275.633544921875 * scale, 266.9858093261719 * scale);\r\n    ctx.bezierCurveTo(280.633544921875 * scale, 294.9858093261719 * scale, 315.633544921875 * scale, 306.9858093261719 * scale, 336.633544921875 * scale, 316.9858093261719 * scale);\r\n    ctx.bezierCurveTo(295.633544921875 * scale, 318.9858093261719 * scale, 264.633544921875 * scale, 302.9858093261719 * scale, 254.633544921875 * scale, 289.9858093261719 * scale);\r\n    ctx.bezierCurveTo(252.633544921875 * scale, 301.9858093261719 * scale, 224.633544921875 * scale, 315.9858093261719 * scale, 201.633544921875 * scale, 356.9858093261719 * scale);\r\n    ctx.bezierCurveTo(195.633544921875 * scale, 313.9858093261719 * scale, 195.633544921875 * scale, 308.9858093261719 * scale, 196.633544921875 * scale, 307.9858093261719 * scale);\r\n    ctx.bezierCurveTo(197.633544921875 * scale, 289.9858093261719 * scale, 207.633544921875 * scale, 283.9858093261719 * scale, 195.633544921875 * scale, 258.9858093261719 * scale);\r\n    ctx.bezierCurveTo(182.633544921875 * scale, 282.9858093261719 * scale, 190.633544921875 * scale, 287.9858093261719 * scale, 193.633544921875 * scale, 297.9858093261719 * scale);\r\n    ctx.bezierCurveTo(195.633544921875 * scale, 306.9858093261719 * scale, 191.633544921875 * scale, 334.9858093261719 * scale, 187.633544921875 * scale, 354.9858093261719 * scale);\r\n    ctx.bezierCurveTo(165.633544921875 * scale, 320.9858093261719 * scale, 138.633544921875 * scale, 307.9858093261719 * scale, 135.633544921875 * scale, 288.9858093261719 * scale);\r\n    ctx.bezierCurveTo(110.633544921875 * scale, 318.9858093261719 * scale, 68.633544921875 * scale, 323.9858093261719 * scale, 49.633544921875 * scale, 320.9858093261719 * scale);\r\n    ctx.bezierCurveTo(88.633544921875 * scale, 308.9858093261719 * scale, 108.633544921875 * scale, 284.9858093261719 * scale, 118.633544921875 * scale, 258.9858093261719 * scale);\r\n    ctx.bezierCurveTo(86.633544921875 * scale, 264.9858093261719 * scale, 75.633544921875 * scale, 310.9858093261719 * scale, 19.633544921875 * scale, 304.9858093261719 * scale);\r\n    ctx.bezierCurveTo(54.633544921875 * scale, 276.9858093261719 * scale, 59.633544921875 * scale, 214.98580932617188 * scale, 105.633544921875 * scale, 205.98580932617188 * scale);\r\n    ctx.bezierCurveTo(14.633544921875 * scale, 201.98580932617188 * scale, 24.633544921875 * scale, 141.98580932617188 * scale, 25.633544921875 * scale, 82.98580932617188 * scale);\r\n    ctx.bezierCurveTo(49.633544921875 * scale, 168.98580932617188 * scale, 87.633544921875 * scale, 141.98580932617188 * scale, 112.633544921875 * scale, 123.98580932617188 * scale);\r\n    ctx.bezierCurveTo(95.633544921875 * scale, 75.98580932617188 * scale, 70.633544921875 * scale, 68.98580932617188 * scale, 35.633544921875 * scale, 50.985809326171875 * scale);\r\n    ctx.bezierCurveTo(70.633544921875 * scale, 53.985809326171875 * scale, 102.633544921875 * scale, 65.98580932617188 * scale, 125.633544921875 * scale, 84.98580932617188 * scale);\r\n    ctx.bezierCurveTo(133.633544921875 * scale, 69.98580932617188 * scale, 166.633544921875 * scale, 42.985809326171875 * scale, 176.633544921875 * scale, 21.985809326171875 * scale);\r\n    ctx.bezierCurveTo(185.633544921875 * scale, 49.985809326171875 * scale, 168.633544921875 * scale, 95.98580932617188 * scale, 191.633544921875 * scale, 121.98580932617188 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(-4 * scale, -5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(191.633544921875 * scale, 123.98580932617188 * scale);\r\n    ctx.bezierCurveTo(215.633544921875 * scale, 85.98580932617188 * scale, 187.633544921875 * scale, 71.98580932617188 * scale, 202.633544921875 * scale, 19.985809326171875 * scale);\r\n    ctx.bezierCurveTo(231.633544921875 * scale, 68.98580932617188 * scale, 253.633544921875 * scale, 71.98580932617188 * scale, 256.633544921875 * scale, 93.98580932617188 * scale);\r\n    ctx.bezierCurveTo(306.633544921875 * scale, 64.98580932617188 * scale, 319.633544921875 * scale, 61.985809326171875 * scale, 350.633544921875 * scale, 58.985809326171875 * scale);\r\n    ctx.bezierCurveTo(280.633544921875 * scale, 86.98580932617188 * scale, 281.633544921875 * scale, 106.98580932617188 * scale, 268.633544921875 * scale, 130.98580932617188 * scale);\r\n    ctx.bezierCurveTo(295.633544921875 * scale, 158.98580932617188 * scale, 328.633544921875 * scale, 155.98580932617188 * scale, 353.633544921875 * scale, 90.98580932617188 * scale);\r\n    ctx.bezierCurveTo(371.633544921875 * scale, 158.98580932617188 * scale, 337.633544921875 * scale, 210.98580932617188 * scale, 286.633544921875 * scale, 209.98580932617188 * scale);\r\n    ctx.bezierCurveTo(323.633544921875 * scale, 230.98580932617188 * scale, 317.633544921875 * scale, 274.9858093261719 * scale, 356.633544921875 * scale, 305.9858093261719 * scale);\r\n    ctx.bezierCurveTo(288.633544921875 * scale, 297.9858093261719 * scale, 288.633544921875 * scale, 265.9858093261719 * scale, 275.633544921875 * scale, 266.9858093261719 * scale);\r\n    ctx.bezierCurveTo(280.633544921875 * scale, 294.9858093261719 * scale, 315.633544921875 * scale, 306.9858093261719 * scale, 336.633544921875 * scale, 316.9858093261719 * scale);\r\n    ctx.bezierCurveTo(295.633544921875 * scale, 318.9858093261719 * scale, 264.633544921875 * scale, 302.9858093261719 * scale, 254.633544921875 * scale, 289.9858093261719 * scale);\r\n    ctx.bezierCurveTo(252.633544921875 * scale, 301.9858093261719 * scale, 224.633544921875 * scale, 315.9858093261719 * scale, 201.633544921875 * scale, 356.9858093261719 * scale);\r\n    ctx.bezierCurveTo(195.633544921875 * scale, 313.9858093261719 * scale, 195.633544921875 * scale, 308.9858093261719 * scale, 196.633544921875 * scale, 307.9858093261719 * scale);\r\n    ctx.bezierCurveTo(197.633544921875 * scale, 289.9858093261719 * scale, 207.633544921875 * scale, 283.9858093261719 * scale, 195.633544921875 * scale, 258.9858093261719 * scale);\r\n    ctx.bezierCurveTo(182.633544921875 * scale, 282.9858093261719 * scale, 190.633544921875 * scale, 287.9858093261719 * scale, 193.633544921875 * scale, 297.9858093261719 * scale);\r\n    ctx.bezierCurveTo(195.633544921875 * scale, 306.9858093261719 * scale, 191.633544921875 * scale, 334.9858093261719 * scale, 187.633544921875 * scale, 354.9858093261719 * scale);\r\n    ctx.bezierCurveTo(165.633544921875 * scale, 320.9858093261719 * scale, 138.633544921875 * scale, 307.9858093261719 * scale, 135.633544921875 * scale, 288.9858093261719 * scale);\r\n    ctx.bezierCurveTo(110.633544921875 * scale, 318.9858093261719 * scale, 68.633544921875 * scale, 323.9858093261719 * scale, 49.633544921875 * scale, 320.9858093261719 * scale);\r\n    ctx.bezierCurveTo(88.633544921875 * scale, 308.9858093261719 * scale, 108.633544921875 * scale, 284.9858093261719 * scale, 118.633544921875 * scale, 258.9858093261719 * scale);\r\n    ctx.bezierCurveTo(86.633544921875 * scale, 264.9858093261719 * scale, 75.633544921875 * scale, 310.9858093261719 * scale, 19.633544921875 * scale, 304.9858093261719 * scale);\r\n    ctx.bezierCurveTo(54.633544921875 * scale, 276.9858093261719 * scale, 59.633544921875 * scale, 214.98580932617188 * scale, 105.633544921875 * scale, 205.98580932617188 * scale);\r\n    ctx.bezierCurveTo(14.633544921875 * scale, 201.98580932617188 * scale, 24.633544921875 * scale, 141.98580932617188 * scale, 25.633544921875 * scale, 82.98580932617188 * scale);\r\n    ctx.bezierCurveTo(49.633544921875 * scale, 168.98580932617188 * scale, 87.633544921875 * scale, 141.98580932617188 * scale, 112.633544921875 * scale, 123.98580932617188 * scale);\r\n    ctx.bezierCurveTo(95.633544921875 * scale, 75.98580932617188 * scale, 70.633544921875 * scale, 68.98580932617188 * scale, 35.633544921875 * scale, 50.985809326171875 * scale);\r\n    ctx.bezierCurveTo(70.633544921875 * scale, 53.985809326171875 * scale, 102.633544921875 * scale, 65.98580932617188 * scale, 125.633544921875 * scale, 84.98580932617188 * scale);\r\n    ctx.bezierCurveTo(133.633544921875 * scale, 69.98580932617188 * scale, 166.633544921875 * scale, 42.985809326171875 * scale, 176.633544921875 * scale, 21.985809326171875 * scale);\r\n    ctx.bezierCurveTo(185.633544921875 * scale, 49.985809326171875 * scale, 168.633544921875 * scale, 95.98580932617188 * scale, 191.633544921875 * scale, 121.98580932617188 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[1], 12 * scale);\r\n    ctx.translate(-1 * scale, 0 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(270.633544921875 * scale, 88.98580932617188 * scale);\r\n    ctx.bezierCurveTo(296.633544921875 * scale, 65.98580932617188 * scale, 318.633544921875 * scale, 62.985809326171875 * scale, 348.633544921875 * scale, 57.985809326171875 * scale);\r\n    ctx.bezierCurveTo(309.633544921875 * scale, 76.98580932617188 * scale, 291.633544921875 * scale, 88.98580932617188 * scale, 280.633544921875 * scale, 99.98580932617188 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[5], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(275.633544921875 * scale, 281.9858093261719 * scale);\r\n    ctx.bezierCurveTo(303.633544921875 * scale, 308.9858093261719 * scale, 321.633544921875 * scale, 308.9858093261719 * scale, 335.633544921875 * scale, 315.9858093261719 * scale);\r\n    ctx.bezierCurveTo(305.633544921875 * scale, 320.9858093261719 * scale, 278.633544921875 * scale, 307.9858093261719 * scale, 264.633544921875 * scale, 293.9858093261719 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[5], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(124.633544921875 * scale, 291.9858093261719 * scale);\r\n    ctx.bezierCurveTo(106.633544921875 * scale, 316.9858093261719 * scale, 72.633544921875 * scale, 325.9858093261719 * scale, 53.633544921875 * scale, 319.9858093261719 * scale);\r\n    ctx.bezierCurveTo(83.633544921875 * scale, 308.9858093261719 * scale, 97.633544921875 * scale, 298.9858093261719 * scale, 112.633544921875 * scale, 284.9858093261719 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[5], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(113.633544921875 * scale, 80.98580932617188 * scale);\r\n    ctx.bezierCurveTo(91.633544921875 * scale, 54.985809326171875 * scale, 72.633544921875 * scale, 56.985809326171875 * scale, 36.633544921875 * scale, 49.985809326171875 * scale);\r\n    ctx.bezierCurveTo(87.633544921875 * scale, 72.98580932617188 * scale, 95.633544921875 * scale, 82.98580932617188 * scale, 106.633544921875 * scale, 96.98580932617188 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[5], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(202.633544921875 * scale, 20.985809326171875 * scale);\r\n    ctx.bezierCurveTo(219.633544921875 * scale, 49.985809326171875 * scale, 259.633544921875 * scale, 80.98580932617188 * scale, 255.633544921875 * scale, 92.98580932617188 * scale);\r\n    ctx.bezierCurveTo(268.633544921875 * scale, 86.98580932617188 * scale, 265.633544921875 * scale, 87.98580932617188 * scale, 275.633544921875 * scale, 82.98580932617188 * scale);\r\n    ctx.bezierCurveTo(283.633544921875 * scale, 87.98580932617188 * scale, 283.633544921875 * scale, 87.98580932617188 * scale, 291.633544921875 * scale, 92.98580932617188 * scale);\r\n    ctx.bezierCurveTo(269.633544921875 * scale, 116.98580932617188 * scale, 270.633544921875 * scale, 124.98580932617188 * scale, 267.633544921875 * scale, 130.98580932617188 * scale);\r\n    ctx.bezierCurveTo(307.633544921875 * scale, 168.98580932617188 * scale, 339.633544921875 * scale, 132.98580932617188 * scale, 352.633544921875 * scale, 93.98580932617188 * scale);\r\n    ctx.bezierCurveTo(366.633544921875 * scale, 145.98580932617188 * scale, 345.633544921875 * scale, 207.98580932617188 * scale, 286.633544921875 * scale, 208.98580932617188 * scale);\r\n    ctx.bezierCurveTo(315.633544921875 * scale, 223.98580932617188 * scale, 327.633544921875 * scale, 287.9858093261719 * scale, 355.633544921875 * scale, 305.9858093261719 * scale);\r\n    ctx.bezierCurveTo(293.633544921875 * scale, 298.9858093261719 * scale, 293.633544921875 * scale, 275.9858093261719 * scale, 276.633544921875 * scale, 266.9858093261719 * scale);\r\n    ctx.bezierCurveTo(274.633544921875 * scale, 282.9858093261719 * scale, 287.633544921875 * scale, 288.9858093261719 * scale, 295.633544921875 * scale, 296.9858093261719 * scale);\r\n    ctx.bezierCurveTo(287.133544921875 * scale, 302.4858093261719 * scale, 287.133544921875 * scale, 302.4858093261719 * scale, 278.633544921875 * scale, 307.9858093261719 * scale);\r\n    ctx.bezierCurveTo(261.633544921875 * scale, 297.9858093261719 * scale, 258.633544921875 * scale, 293.9858093261719 * scale, 255.633544921875 * scale, 290.9858093261719 * scale);\r\n    ctx.bezierCurveTo(249.633544921875 * scale, 301.9858093261719 * scale, 225.633544921875 * scale, 320.9858093261719 * scale, 202.633544921875 * scale, 354.9858093261719 * scale);\r\n    ctx.bezierCurveTo(195.633544921875 * scale, 318.9858093261719 * scale, 196.633544921875 * scale, 306.9858093261719 * scale, 198.633544921875 * scale, 300.9858093261719 * scale);\r\n    ctx.bezierCurveTo(209.633544921875 * scale, 268.9858093261719 * scale, 199.633544921875 * scale, 266.9858093261719 * scale, 195.633544921875 * scale, 256.9858093261719 * scale);\r\n    ctx.bezierCurveTo(183.633544921875 * scale, 274.9858093261719 * scale, 182.633544921875 * scale, 281.9858093261719 * scale, 192.633544921875 * scale, 305.9858093261719 * scale);\r\n    ctx.bezierCurveTo(194.633544921875 * scale, 317.9858093261719 * scale, 191.633544921875 * scale, 336.9858093261719 * scale, 186.633544921875 * scale, 351.9858093261719 * scale);\r\n    ctx.bezierCurveTo(166.633544921875 * scale, 318.9858093261719 * scale, 141.633544921875 * scale, 303.9858093261719 * scale, 136.633544921875 * scale, 286.9858093261719 * scale);\r\n    ctx.bezierCurveTo(122.633544921875 * scale, 303.9858093261719 * scale, 115.633544921875 * scale, 305.9858093261719 * scale, 109.633544921875 * scale, 306.9858093261719 * scale);\r\n    ctx.bezierCurveTo(101.133544921875 * scale, 301.9858093261719 * scale, 94.633544921875 * scale, 297.9858093261719 * scale, 92.633544921875 * scale, 296.9858093261719 * scale);\r\n    ctx.bezierCurveTo(116.633544921875 * scale, 277.9858093261719 * scale, 116.633544921875 * scale, 266.9858093261719 * scale, 119.633544921875 * scale, 257.9858093261719 * scale);\r\n    ctx.bezierCurveTo(107.633544921875 * scale, 257.9858093261719 * scale, 65.633544921875 * scale, 308.9858093261719 * scale, 24.633544921875 * scale, 303.9858093261719 * scale);\r\n    ctx.bezierCurveTo(51.633544921875 * scale, 275.9858093261719 * scale, 64.633544921875 * scale, 220.98580932617188 * scale, 108.633544921875 * scale, 205.98580932617188 * scale);\r\n    ctx.bezierCurveTo(14.633544921875 * scale, 198.98580932617188 * scale, 26.633544921875 * scale, 142.98580932617188 * scale, 25.633544921875 * scale, 86.98580932617188 * scale);\r\n    ctx.bezierCurveTo(41.633544921875 * scale, 155.98580932617188 * scale, 81.633544921875 * scale, 148.98580932617188 * scale, 113.633544921875 * scale, 124.98580932617188 * scale);\r\n    ctx.bezierCurveTo(102.633544921875 * scale, 93.98580932617188 * scale, 95.633544921875 * scale, 88.98580932617188 * scale, 89.633544921875 * scale, 81.98580932617188 * scale);\r\n    ctx.bezierCurveTo(97.633544921875 * scale, 76.48580932617188 * scale, 97.633544921875 * scale, 76.48580932617188 * scale, 105.633544921875 * scale, 70.98580932617188 * scale);\r\n    ctx.bezierCurveTo(120.633544921875 * scale, 78.98580932617188 * scale, 121.633544921875 * scale, 81.98580932617188 * scale, 124.633544921875 * scale, 86.98580932617188 * scale);\r\n    ctx.bezierCurveTo(132.633544921875 * scale, 71.98580932617188 * scale, 160.633544921875 * scale, 56.985809326171875 * scale, 175.633544921875 * scale, 23.985809326171875 * scale);\r\n    ctx.bezierCurveTo(182.633544921875 * scale, 53.985809326171875 * scale, 170.633544921875 * scale, 102.98580932617188 * scale, 191.633544921875 * scale, 125.98580932617188 * scale);\r\n    ctx.bezierCurveTo(214.633544921875 * scale, 89.98580932617188 * scale, 192.633544921875 * scale, 58.985809326171875 * scale, 202.633544921875 * scale, 20.985809326171875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2], color[3], 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(203.633544921875 * scale, 21.985809326171875 * scale);\r\n    ctx.bezierCurveTo(223.633544921875 * scale, 63.985809326171875 * scale, 227.633544921875 * scale, 72.98580932617188 * scale, 235.633544921875 * scale, 98.98580932617188 * scale);\r\n    ctx.bezierCurveTo(241.633544921875 * scale, 123.98580932617188 * scale, 225.633544921875 * scale, 138.98580932617188 * scale, 196.633544921875 * scale, 122.98580932617188 * scale);\r\n    ctx.bezierCurveTo(213.633544921875 * scale, 93.98580932617188 * scale, 199.633544921875 * scale, 49.985809326171875 * scale, 203.633544921875 * scale, 26.985809326171875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(175.633544921875 * scale, 25.985809326171875 * scale);\r\n    ctx.bezierCurveTo(176.633544921875 * scale, 51.985809326171875 * scale, 171.633544921875 * scale, 88.98580932617188 * scale, 186.633544921875 * scale, 121.98580932617188 * scale);\r\n    ctx.bezierCurveTo(156.633544921875 * scale, 144.98580932617188 * scale, 139.633544921875 * scale, 120.98580932617188 * scale, 147.633544921875 * scale, 97.98580932617188 * scale);\r\n    ctx.bezierCurveTo(152.633544921875 * scale, 77.98580932617188 * scale, 162.633544921875 * scale, 60.985809326171875 * scale, 176.633544921875 * scale, 25.985809326171875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(26.633544921875 * scale, 96.98580932617188 * scale);\r\n    ctx.bezierCurveTo(38.633544921875 * scale, 151.98580932617188 * scale, 61.633544921875 * scale, 161.98580932617188 * scale, 88.633544921875 * scale, 168.98580932617188 * scale);\r\n    ctx.bezierCurveTo(117.633544921875 * scale, 177.98580932617188 * scale, 113.633544921875 * scale, 185.98580932617188 * scale, 106.633544921875 * scale, 204.98580932617188 * scale);\r\n    ctx.bezierCurveTo(32.633544921875 * scale, 204.98580932617188 * scale, 25.633544921875 * scale, 149.98580932617188 * scale, 25.633544921875 * scale, 97.98580932617188 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(351.633544921875 * scale, 99.98580932617188 * scale);\r\n    ctx.bezierCurveTo(365.633544921875 * scale, 161.98580932617188 * scale, 333.633544921875 * scale, 203.98580932617188 * scale, 287.633544921875 * scale, 207.98580932617188 * scale);\r\n    ctx.bezierCurveTo(255.633544921875 * scale, 208.98580932617188 * scale, 266.633544921875 * scale, 174.98580932617188 * scale, 285.633544921875 * scale, 176.98580932617188 * scale);\r\n    ctx.bezierCurveTo(313.633544921875 * scale, 178.98580932617188 * scale, 348.633544921875 * scale, 135.98580932617188 * scale, 353.633544921875 * scale, 99.98580932617188 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(350.633544921875 * scale, 302.9858093261719 * scale);\r\n    ctx.bezierCurveTo(310.633544921875 * scale, 280.9858093261719 * scale, 314.633544921875 * scale, 244.98580932617188 * scale, 292.633544921875 * scale, 230.98580932617188 * scale);\r\n    ctx.bezierCurveTo(272.633544921875 * scale, 215.98580932617188 * scale, 263.633544921875 * scale, 222.98580932617188 * scale, 256.633544921875 * scale, 236.98580932617188 * scale);\r\n    ctx.bezierCurveTo(251.633544921875 * scale, 249.98580932617188 * scale, 264.633544921875 * scale, 255.98580932617188 * scale, 279.633544921875 * scale, 268.9858093261719 * scale);\r\n    ctx.bezierCurveTo(306.633544921875 * scale, 295.9858093261719 * scale, 325.633544921875 * scale, 299.9858093261719 * scale, 349.633544921875 * scale, 302.9858093261719 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(95.633544921875 * scale, 224.98580932617188 * scale);\r\n    ctx.bezierCurveTo(64.633544921875 * scale, 245.98580932617188 * scale, 62.633544921875 * scale, 280.9858093261719 * scale, 32.633544921875 * scale, 303.9858093261719 * scale);\r\n    ctx.bezierCurveTo(59.633544921875 * scale, 301.9858093261719 * scale, 102.633544921875 * scale, 260.9858093261719 * scale, 116.633544921875 * scale, 255.98580932617188 * scale);\r\n    ctx.bezierCurveTo(139.633544921875 * scale, 229.98580932617188 * scale, 108.633544921875 * scale, 209.98580932617188 * scale, 97.633544921875 * scale, 224.98580932617188 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(195.633544921875 * scale, 253.98580932617188 * scale);\r\n    ctx.bezierCurveTo(209.633544921875 * scale, 282.9858093261719 * scale, 205.633544921875 * scale, 278.9858093261719 * scale, 199.633544921875 * scale, 307.9858093261719 * scale);\r\n    ctx.bezierCurveTo(198.633544921875 * scale, 332.9858093261719 * scale, 201.633544921875 * scale, 340.9858093261719 * scale, 202.633544921875 * scale, 348.9858093261719 * scale);\r\n    ctx.bezierCurveTo(215.633544921875 * scale, 313.9858093261719 * scale, 226.633544921875 * scale, 291.9858093261719 * scale, 235.633544921875 * scale, 270.9858093261719 * scale);\r\n    ctx.bezierCurveTo(243.633544921875 * scale, 247.98580932617188 * scale, 219.633544921875 * scale, 235.98580932617188 * scale, 196.633544921875 * scale, 252.98580932617188 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(195.633544921875 * scale, 251.98580932617188 * scale);\r\n    ctx.bezierCurveTo(176.633544921875 * scale, 275.9858093261719 * scale, 182.633544921875 * scale, 285.9858093261719 * scale, 191.633544921875 * scale, 308.9858093261719 * scale);\r\n    ctx.bezierCurveTo(194.633544921875 * scale, 318.9858093261719 * scale, 190.633544921875 * scale, 334.9858093261719 * scale, 186.633544921875 * scale, 348.9858093261719 * scale);\r\n    ctx.bezierCurveTo(175.633544921875 * scale, 307.9858093261719 * scale, 157.633544921875 * scale, 291.9858093261719 * scale, 155.633544921875 * scale, 272.9858093261719 * scale);\r\n    ctx.bezierCurveTo(150.633544921875 * scale, 243.98580932617188 * scale, 170.633544921875 * scale, 236.98580932617188 * scale, 195.633544921875 * scale, 251.98580932617188 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(316 * scale, 186.8020782470703 * scale);\r\n    ctx.bezierCurveTo(315 * scale, 173.8020782470703 * scale, 298 * scale, 177.8020782470703 * scale, 293 * scale, 183.8020782470703 * scale);\r\n    ctx.bezierCurveTo(285 * scale, 195.8020782470703 * scale, 314 * scale, 197.8020782470703 * scale, 315 * scale, 187.8020782470703 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[6], color[7], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(340 * scale, 157.8020782470703 * scale);\r\n    ctx.bezierCurveTo(327 * scale, 153.8020782470703 * scale, 321 * scale, 168.8020782470703 * scale, 330 * scale, 174.8020782470703 * scale);\r\n    ctx.bezierCurveTo(341 * scale, 178.8020782470703 * scale, 347 * scale, 161.8020782470703 * scale, 341 * scale, 157.8020782470703 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[6], color[7], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(349 * scale, 136.8020782470703 * scale);\r\n    ctx.bezierCurveTo(343 * scale, 135.8020782470703 * scale, 342 * scale, 139.8020782470703 * scale, 341 * scale, 147.8020782470703 * scale);\r\n    ctx.bezierCurveTo(343 * scale, 155.8020782470703 * scale, 353 * scale, 143.8020782470703 * scale, 349 * scale, 137.8020782470703 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[6], color[7], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(278.75 * scale, 246.4375 * scale);\r\n    ctx.bezierCurveTo(288.75 * scale, 242.4375 * scale, 301.75 * scale, 248.4375 * scale, 298.75 * scale, 262.4375 * scale);\r\n    ctx.bezierCurveTo(293.75 * scale, 271.4375 * scale, 287.75 * scale, 271.4375 * scale, 278.75 * scale, 262.4375 * scale);\r\n    ctx.bezierCurveTo(271.75 * scale, 255.4375 * scale, 274.75 * scale, 250.4375 * scale, 277.75 * scale, 247.4375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[6], color[7], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(310.75 * scale, 277.4375 * scale);\r\n    ctx.bezierCurveTo(319.75 * scale, 280.4375 * scale, 322.75 * scale, 283.4375 * scale, 321.75 * scale, 289.4375 * scale);\r\n    ctx.bezierCurveTo(319.75 * scale, 295.4375 * scale, 313.75 * scale, 291.4375 * scale, 308.75 * scale, 288.4375 * scale);\r\n    ctx.bezierCurveTo(301.75 * scale, 281.4375 * scale, 306.75 * scale, 277.4375 * scale, 309.75 * scale, 277.4375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[6], color[7], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(217.75 * scale, 257.4375 * scale);\r\n    ctx.bezierCurveTo(227.75 * scale, 269.4375 * scale, 220.75 * scale, 281.4375 * scale, 212.75 * scale, 280.4375 * scale);\r\n    ctx.bezierCurveTo(206.75 * scale, 279.4375 * scale, 206.75 * scale, 269.4375 * scale, 204.75 * scale, 260.4375 * scale);\r\n    ctx.bezierCurveTo(204.75 * scale, 254.4375 * scale, 211.75 * scale, 253.4375 * scale, 216.75 * scale, 256.4375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[6], color[7], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(211.75 * scale, 289.4375 * scale);\r\n    ctx.bezierCurveTo(219.75 * scale, 292.4375 * scale, 213.75 * scale, 306.4375 * scale, 206.75 * scale, 307.4375 * scale);\r\n    ctx.bezierCurveTo(199.75 * scale, 303.4375 * scale, 209.75 * scale, 287.4375 * scale, 210.75 * scale, 289.4375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[6], color[7], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(171.75 * scale, 256.4375 * scale);\r\n    ctx.bezierCurveTo(162.75 * scale, 273.4375 * scale, 166.75 * scale, 278.4375 * scale, 175.75 * scale, 280.4375 * scale);\r\n    ctx.bezierCurveTo(183.75 * scale, 278.4375 * scale, 185.75 * scale, 257.4375 * scale, 182.75 * scale, 255.4375 * scale);\r\n    ctx.bezierCurveTo(176.75 * scale, 251.4375 * scale, 172.75 * scale, 253.4375 * scale, 172.75 * scale, 256.4375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[6], color[7], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(175.75 * scale, 289.9375 * scale);\r\n    ctx.bezierCurveTo(183.75 * scale, 287.9375 * scale, 186.75 * scale, 301.9375 * scale, 182.75 * scale, 305.9375 * scale);\r\n    ctx.bezierCurveTo(176.75 * scale, 307.9375 * scale, 171.75 * scale, 292.9375 * scale, 174.75 * scale, 290.9375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[6], color[7], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(205.75 * scale, 314.4375 * scale);\r\n    ctx.bezierCurveTo(209.75 * scale, 316.4375 * scale, 210.75 * scale, 320.4375 * scale, 206.75 * scale, 323.4375 * scale);\r\n    ctx.bezierCurveTo(201.75 * scale, 324.4375 * scale, 201.75 * scale, 314.4375 * scale, 204.75 * scale, 314.4375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[6], color[7], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(186.75 * scale, 313.4375 * scale);\r\n    ctx.bezierCurveTo(181.75 * scale, 315.4375 * scale, 180.75 * scale, 321.4375 * scale, 185.75 * scale, 326.4375 * scale);\r\n    ctx.bezierCurveTo(190.75 * scale, 327.4375 * scale, 190.75 * scale, 313.4375 * scale, 187.75 * scale, 314.4375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[6], color[7], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(103.75 * scale, 244.4375 * scale);\r\n    ctx.bezierCurveTo(96.75 * scale, 239.4375 * scale, 83.75 * scale, 240.4375 * scale, 81.75 * scale, 255.4375 * scale);\r\n    ctx.bezierCurveTo(80.75 * scale, 264.4375 * scale, 89.75 * scale, 269.4375 * scale, 99.75 * scale, 260.4375 * scale);\r\n    ctx.bezierCurveTo(106.75 * scale, 254.4375 * scale, 106.75 * scale, 250.4375 * scale, 104.75 * scale, 245.4375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[6], color[7], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(86.75 * scale, 182.4375 * scale);\r\n    ctx.bezierCurveTo(82.75 * scale, 170.4375 * scale, 66.75 * scale, 169.4375 * scale, 61.75 * scale, 181.4375 * scale);\r\n    ctx.bezierCurveTo(58.75 * scale, 187.4375 * scale, 68.75 * scale, 194.4375 * scale, 75.75 * scale, 192.4375 * scale);\r\n    ctx.bezierCurveTo(83.75 * scale, 192.4375 * scale, 86.75 * scale, 187.4375 * scale, 86.75 * scale, 183.4375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[6], color[7], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(44.75 * scale, 152.4375 * scale);\r\n    ctx.bezierCurveTo(55.75 * scale, 159.4375 * scale, 54.75 * scale, 170.4375 * scale, 46.75 * scale, 171.4375 * scale);\r\n    ctx.bezierCurveTo(39.75 * scale, 170.4375 * scale, 34.75 * scale, 151.4375 * scale, 43.75 * scale, 152.4375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[6], color[7], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(31.75 * scale, 130.4375 * scale);\r\n    ctx.bezierCurveTo(35.75 * scale, 132.4375 * scale, 35.75 * scale, 131.4375 * scale, 37.75 * scale, 137.4375 * scale);\r\n    ctx.bezierCurveTo(36.75 * scale, 144.4375 * scale, 36.75 * scale, 145.4375 * scale, 33.75 * scale, 144.4375 * scale);\r\n    ctx.bezierCurveTo(26.75 * scale, 137.4375 * scale, 29.75 * scale, 131.4375 * scale, 31.75 * scale, 130.4375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[6], color[7], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(69.75 * scale, 274.4375 * scale);\r\n    ctx.bezierCurveTo(62.75 * scale, 272.4375 * scale, 59.75 * scale, 277.4375 * scale, 57.75 * scale, 284.4375 * scale);\r\n    ctx.bezierCurveTo(56.75 * scale, 290.4375 * scale, 63.75 * scale, 289.4375 * scale, 71.75 * scale, 282.4375 * scale);\r\n    ctx.bezierCurveTo(75.75 * scale, 277.4375 * scale, 72.75 * scale, 275.4375 * scale, 69.75 * scale, 274.4375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[6], color[7], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(165.75 * scale, 95.4375 * scale);\r\n    ctx.bezierCurveTo(177.75 * scale, 97.4375 * scale, 182.75 * scale, 115.4375 * scale, 173.75 * scale, 121.4375 * scale);\r\n    ctx.bezierCurveTo(164.75 * scale, 126.4375 * scale, 149.75 * scale, 102.4375 * scale, 164.75 * scale, 96.4375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[6], color[7], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(216.75 * scale, 94.4375 * scale);\r\n    ctx.bezierCurveTo(227.75 * scale, 99.4375 * scale, 223.75 * scale, 122.4375 * scale, 210.75 * scale, 119.4375 * scale);\r\n    ctx.bezierCurveTo(203.75 * scale, 115.4375 * scale, 207.75 * scale, 93.4375 * scale, 216.75 * scale, 94.4375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[6], color[7], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(211.75 * scale, 68.4375 * scale);\r\n    ctx.bezierCurveTo(218.75 * scale, 69.4375 * scale, 220.75 * scale, 77.4375 * scale, 216.75 * scale, 83.4375 * scale);\r\n    ctx.bezierCurveTo(208.75 * scale, 89.4375 * scale, 205.75 * scale, 68.4375 * scale, 210.75 * scale, 68.4375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[6], color[7], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(169.75 * scale, 71.4375 * scale);\r\n    ctx.bezierCurveTo(162.75 * scale, 72.4375 * scale, 159.75 * scale, 83.4375 * scale, 167.75 * scale, 88.4375 * scale);\r\n    ctx.bezierCurveTo(174.75 * scale, 90.4375 * scale, 174.75 * scale, 72.4375 * scale, 170.75 * scale, 71.4375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[6], color[7], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(193.75 * scale, 160.4375 * scale);\r\n    ctx.bezierCurveTo(215.75 * scale, 168.4375 * scale, 224.75 * scale, 180.4375 * scale, 229.75 * scale, 193.4375 * scale);\r\n    ctx.bezierCurveTo(223.75 * scale, 211.4375 * scale, 205.75 * scale, 225.4375 * scale, 193.75 * scale, 229.4375 * scale);\r\n    ctx.bezierCurveTo(167.75 * scale, 217.4375 * scale, 161.75 * scale, 205.4375 * scale, 156.75 * scale, 192.4375 * scale);\r\n    ctx.bezierCurveTo(164.75 * scale, 175.4375 * scale, 176.75 * scale, 166.4375 * scale, 192.75 * scale, 160.4375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[8], color[9], 3 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(189.1999969482422 * scale, 182.61249923706055 * scale);\r\n    ctx.bezierCurveTo(190.1999969482422 * scale, 184.11249923706055 * scale, 190.1999969482422 * scale, 184.11249923706055 * scale, 191.1999969482422 * scale, 185.61249923706055 * scale);\r\n    ctx.bezierCurveTo(192.1999969482422 * scale, 180.61249923706055 * scale, 192.1999969482422 * scale, 180.61249923706055 * scale, 193.1999969482422 * scale, 175.61249923706055 * scale);\r\n    ctx.bezierCurveTo(195.6999969482422 * scale, 177.11249923706055 * scale, 195.6999969482422 * scale, 177.11249923706055 * scale, 198.1999969482422 * scale, 178.61249923706055 * scale);\r\n    ctx.bezierCurveTo(198.1999969482422 * scale, 181.11249923706055 * scale, 198.1999969482422 * scale, 181.11249923706055 * scale, 198.1999969482422 * scale, 183.61249923706055 * scale);\r\n    ctx.bezierCurveTo(201.6999969482422 * scale, 181.11249923706055 * scale, 201.6999969482422 * scale, 181.11249923706055 * scale, 205.1999969482422 * scale, 178.61249923706055 * scale);\r\n    ctx.bezierCurveTo(206.6999969482422 * scale, 180.61249923706055 * scale, 206.6999969482422 * scale, 180.61249923706055 * scale, 208.1999969482422 * scale, 182.61249923706055 * scale);\r\n    ctx.bezierCurveTo(206.1999969482422 * scale, 185.61249923706055 * scale, 206.1999969482422 * scale, 185.61249923706055 * scale, 204.1999969482422 * scale, 188.61249923706055 * scale);\r\n    ctx.bezierCurveTo(208.6999969482422 * scale, 188.61249923706055 * scale, 208.6999969482422 * scale, 188.61249923706055 * scale, 213.1999969482422 * scale, 188.61249923706055 * scale);\r\n    ctx.bezierCurveTo(213.1999969482422 * scale, 191.11249923706055 * scale, 213.1999969482422 * scale, 191.11249923706055 * scale, 213.1999969482422 * scale, 193.61249923706055 * scale);\r\n    ctx.bezierCurveTo(209.6999969482422 * scale, 194.61249923706055 * scale, 209.6999969482422 * scale, 194.61249923706055 * scale, 206.1999969482422 * scale, 195.61249923706055 * scale);\r\n    ctx.bezierCurveTo(210.1999969482422 * scale, 198.61249923706055 * scale, 210.1999969482422 * scale, 198.61249923706055 * scale, 214.1999969482422 * scale, 201.61249923706055 * scale);\r\n    ctx.bezierCurveTo(212.1999969482422 * scale, 203.61249923706055 * scale, 212.1999969482422 * scale, 203.61249923706055 * scale, 210.1999969482422 * scale, 205.61249923706055 * scale);\r\n    ctx.bezierCurveTo(207.1999969482422 * scale, 204.11249923706055 * scale, 207.1999969482422 * scale, 204.11249923706055 * scale, 204.1999969482422 * scale, 202.61249923706055 * scale);\r\n    ctx.bezierCurveTo(205.6999969482422 * scale, 207.61249923706055 * scale, 205.6999969482422 * scale, 207.61249923706055 * scale, 207.1999969482422 * scale, 212.61249923706055 * scale);\r\n    ctx.bezierCurveTo(204.6999969482422 * scale, 213.61249923706055 * scale, 204.6999969482422 * scale, 213.61249923706055 * scale, 202.1999969482422 * scale, 214.61249923706055 * scale);\r\n    ctx.bezierCurveTo(200.1999969482422 * scale, 210.61249923706055 * scale, 200.1999969482422 * scale, 210.61249923706055 * scale, 198.1999969482422 * scale, 206.61249923706055 * scale);\r\n    ctx.bezierCurveTo(196.6999969482422 * scale, 211.61249923706055 * scale, 196.6999969482422 * scale, 211.61249923706055 * scale, 195.1999969482422 * scale, 216.61249923706055 * scale);\r\n    ctx.bezierCurveTo(192.6999969482422 * scale, 216.11249923706055 * scale, 192.6999969482422 * scale, 216.11249923706055 * scale, 190.1999969482422 * scale, 215.61249923706055 * scale);\r\n    ctx.bezierCurveTo(190.1999969482422 * scale, 211.61249923706055 * scale, 190.1999969482422 * scale, 211.61249923706055 * scale, 190.1999969482422 * scale, 207.61249923706055 * scale);\r\n    ctx.bezierCurveTo(186.1999969482422 * scale, 210.61249923706055 * scale, 186.1999969482422 * scale, 210.61249923706055 * scale, 182.1999969482422 * scale, 213.61249923706055 * scale);\r\n    ctx.bezierCurveTo(181.1999969482422 * scale, 211.11249923706055 * scale, 181.1999969482422 * scale, 211.11249923706055 * scale, 180.1999969482422 * scale, 208.61249923706055 * scale);\r\n    ctx.bezierCurveTo(183.1999969482422 * scale, 205.61249923706055 * scale, 183.1999969482422 * scale, 205.61249923706055 * scale, 186.1999969482422 * scale, 202.61249923706055 * scale);\r\n    ctx.bezierCurveTo(180.6999969482422 * scale, 203.11249923706055 * scale, 180.6999969482422 * scale, 203.11249923706055 * scale, 175.1999969482422 * scale, 203.61249923706055 * scale);\r\n    ctx.bezierCurveTo(174.6999969482422 * scale, 200.11249923706055 * scale, 174.6999969482422 * scale, 200.11249923706055 * scale, 174.1999969482422 * scale, 196.61249923706055 * scale);\r\n    ctx.bezierCurveTo(177.1999969482422 * scale, 195.61249923706055 * scale, 177.1999969482422 * scale, 195.61249923706055 * scale, 180.1999969482422 * scale, 194.61249923706055 * scale);\r\n    ctx.bezierCurveTo(177.1999969482422 * scale, 191.61249923706055 * scale, 177.1999969482422 * scale, 191.61249923706055 * scale, 174.1999969482422 * scale, 188.61249923706055 * scale);\r\n    ctx.bezierCurveTo(175.6999969482422 * scale, 187.11249923706055 * scale, 175.6999969482422 * scale, 187.11249923706055 * scale, 177.1999969482422 * scale, 185.61249923706055 * scale);\r\n    ctx.bezierCurveTo(180.6999969482422 * scale, 187.11249923706055 * scale, 180.6999969482422 * scale, 187.11249923706055 * scale, 184.1999969482422 * scale, 188.61249923706055 * scale);\r\n    ctx.bezierCurveTo(182.6999969482422 * scale, 183.61249923706055 * scale, 182.6999969482422 * scale, 183.61249923706055 * scale, 181.1999969482422 * scale, 178.61249923706055 * scale);\r\n    ctx.bezierCurveTo(183.1999969482422 * scale, 177.11249923706055 * scale, 183.1999969482422 * scale, 177.11249923706055 * scale, 185.1999969482422 * scale, 175.61249923706055 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[10]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(185.1999969482422 * scale, 173.8125 * scale);\r\n    ctx.bezierCurveTo(187.1999969482422 * scale, 179.3125 * scale, 187.1999969482422 * scale, 179.3125 * scale, 189.1999969482422 * scale, 184.8125 * scale);\r\n    ctx.bezierCurveTo(184.1999969482422 * scale, 181.8125 * scale, 184.1999969482422 * scale, 181.8125 * scale, 179.1999969482422 * scale, 178.8125 * scale);\r\n    ctx.bezierCurveTo(181.1999969482422 * scale, 175.8125 * scale, 182.1999969482422 * scale, 174.8125 * scale, 185.1999969482422 * scale, 173.8125 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[11]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(192.1999969482422 * scale, 173.61249542236328 * scale);\r\n    ctx.bezierCurveTo(194.1999969482422 * scale, 172.61249542236328 * scale, 196.1999969482422 * scale, 171.61249542236328 * scale, 199.1999969482422 * scale, 173.61249542236328 * scale);\r\n    ctx.bezierCurveTo(197.6999969482422 * scale, 179.61249542236328 * scale, 197.6999969482422 * scale, 179.61249542236328 * scale, 196.1999969482422 * scale, 185.61249542236328 * scale);\r\n    ctx.bezierCurveTo(194.1999969482422 * scale, 179.61249542236328 * scale, 194.1999969482422 * scale, 179.61249542236328 * scale, 192.1999969482422 * scale, 173.61249542236328 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[11]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(205.1999969482422 * scale, 176.2125015258789 * scale);\r\n    ctx.bezierCurveTo(210.1999969482422 * scale, 178.2125015258789 * scale, 211.1999969482422 * scale, 179.2125015258789 * scale, 211.1999969482422 * scale, 181.2125015258789 * scale);\r\n    ctx.bezierCurveTo(206.6999969482422 * scale, 184.7125015258789 * scale, 206.6999969482422 * scale, 184.7125015258789 * scale, 202.1999969482422 * scale, 188.2125015258789 * scale);\r\n    ctx.bezierCurveTo(203.6999969482422 * scale, 182.2125015258789 * scale, 203.6999969482422 * scale, 182.2125015258789 * scale, 205.1999969482422 * scale, 176.2125015258789 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[11]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(214.1999969482422 * scale, 187.21249985694885 * scale);\r\n    ctx.bezierCurveTo(216.1999969482422 * scale, 191.21249985694885 * scale, 216.1999969482422 * scale, 192.21249985694885 * scale, 215.1999969482422 * scale, 195.21249985694885 * scale);\r\n    ctx.bezierCurveTo(206.1999969482422 * scale, 194.21249985694885 * scale, 205.1999969482422 * scale, 194.21249985694885 * scale, 205.1999969482422 * scale, 194.21249985694885 * scale);\r\n    ctx.bezierCurveTo(209.6999969482422 * scale, 190.71249985694885 * scale, 209.6999969482422 * scale, 190.71249985694885 * scale, 214.1999969482422 * scale, 187.21249985694885 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[11]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(204.1999969482422 * scale, 201.8125 * scale);\r\n    ctx.bezierCurveTo(209.1999969482422 * scale, 201.3125 * scale, 209.1999969482422 * scale, 201.3125 * scale, 214.1999969482422 * scale, 200.8125 * scale);\r\n    ctx.bezierCurveTo(215.1999969482422 * scale, 204.8125 * scale, 214.1999969482422 * scale, 205.8125 * scale, 213.1999969482422 * scale, 208.8125 * scale);\r\n    ctx.bezierCurveTo(208.6999969482422 * scale, 205.3125 * scale, 208.6999969482422 * scale, 205.3125 * scale, 204.1999969482422 * scale, 201.8125 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[11]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(199.1999969482422 * scale, 205.61249923706055 * scale);\r\n    ctx.bezierCurveTo(207.1999969482422 * scale, 212.61249923706055 * scale, 203.6999969482422 * scale, 209.11249923706055 * scale, 208.1999969482422 * scale, 212.61249923706055 * scale);\r\n    ctx.bezierCurveTo(206.1999969482422 * scale, 215.61249923706055 * scale, 204.1999969482422 * scale, 217.61249923706055 * scale, 203.1999969482422 * scale, 216.61249923706055 * scale);\r\n    ctx.bezierCurveTo(201.1999969482422 * scale, 211.11249923706055 * scale, 201.1999969482422 * scale, 211.11249923706055 * scale, 199.1999969482422 * scale, 205.61249923706055 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[11]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(191.1999969482422 * scale, 207.01250076293945 * scale);\r\n    ctx.bezierCurveTo(194.1999969482422 * scale, 213.01250076293945 * scale, 194.1999969482422 * scale, 216.01250076293945 * scale, 196.1999969482422 * scale, 218.01250076293945 * scale);\r\n    ctx.bezierCurveTo(193.1999969482422 * scale, 220.01250076293945 * scale, 190.1999969482422 * scale, 220.01250076293945 * scale, 188.1999969482422 * scale, 218.01250076293945 * scale);\r\n    ctx.bezierCurveTo(189.6999969482422 * scale, 213.01250076293945 * scale, 189.6999969482422 * scale, 213.01250076293945 * scale, 191.1999969482422 * scale, 208.01250076293945 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[11]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(186.1999969482422 * scale, 203.21249961853027 * scale);\r\n    ctx.bezierCurveTo(184.1999969482422 * scale, 209.21249961853027 * scale, 184.1999969482422 * scale, 209.21249961853027 * scale, 182.1999969482422 * scale, 215.21249961853027 * scale);\r\n    ctx.bezierCurveTo(177.1999969482422 * scale, 212.21249961853027 * scale, 176.1999969482422 * scale, 211.21249961853027 * scale, 177.1999969482422 * scale, 210.21249961853027 * scale);\r\n    ctx.bezierCurveTo(181.6999969482422 * scale, 206.71249961853027 * scale, 181.6999969482422 * scale, 206.71249961853027 * scale, 186.1999969482422 * scale, 203.21249961853027 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[11]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(183.1999969482422 * scale, 196.8125 * scale);\r\n    ctx.bezierCurveTo(177.1999969482422 * scale, 196.3125 * scale, 177.1999969482422 * scale, 196.3125 * scale, 171.1999969482422 * scale, 195.8125 * scale);\r\n    ctx.bezierCurveTo(171.1999969482422 * scale, 199.8125 * scale, 171.1999969482422 * scale, 202.8125 * scale, 174.1999969482422 * scale, 204.8125 * scale);\r\n    ctx.bezierCurveTo(178.6999969482422 * scale, 200.8125 * scale, 178.6999969482422 * scale, 200.8125 * scale, 183.1999969482422 * scale, 196.8125 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[11]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(185.1999969482422 * scale, 190.21249771118164 * scale);\r\n    ctx.bezierCurveTo(179.6999969482422 * scale, 186.71249771118164 * scale, 179.6999969482422 * scale, 186.71249771118164 * scale, 174.1999969482422 * scale, 183.21249771118164 * scale);\r\n    ctx.bezierCurveTo(172.1999969482422 * scale, 186.21249771118164 * scale, 172.1999969482422 * scale, 187.21249771118164 * scale, 172.1999969482422 * scale, 190.21249771118164 * scale);\r\n    ctx.bezierCurveTo(178.1999969482422 * scale, 190.21249771118164 * scale, 178.1999969482422 * scale, 190.21249771118164 * scale, 184.1999969482422 * scale, 190.21249771118164 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[11]);\r\n    circle(ctx, 126.19999694824219 * scale, 169.8125 * scale, 8.94427190999916 * scale);\r\n    fill_path(ctx, color[12]);\r\n    circle(ctx, 123.19999694824219 * scale, 164.8125 * scale, 2.8284271247461903 * scale);\r\n    fill_path(ctx, color[13]);\r\n    circle(ctx, 253.1999969482422 * scale, 169.8125 * scale, 8.94427190999916 * scale);\r\n    fill_path(ctx, color[12]);\r\n    circle(ctx, 255.1999969482422 * scale, 164.8125 * scale, 2.23606797749979 * scale);\r\n    fill_path(ctx, color[13]);\r\n    return can;\r\n}\r\n;\r\nfunction create_bread(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 400 * scale;\r\n    can.height = 400 * scale;\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(20 * scale, 20 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(36.5 * scale, 278.0625 * scale);\r\n    ctx.bezierCurveTo(67.5 * scale, 316.0625 * scale, 134.5 * scale, 334.0625 * scale, 199.5 * scale, 319.0625 * scale);\r\n    ctx.bezierCurveTo(254.5 * scale, 304.0625 * scale, 346.5 * scale, 270.0625 * scale, 348.5 * scale, 237.0625 * scale);\r\n    ctx.bezierCurveTo(359.5 * scale, 206.0625 * scale, 318.5 * scale, 129.0625 * scale, 262.5 * scale, 122.0625 * scale);\r\n    ctx.bezierCurveTo(213.5 * scale, 115.0625 * scale, 166.5 * scale, 133.0625 * scale, 104.5 * scale, 166.0625 * scale);\r\n    ctx.bezierCurveTo(54.5 * scale, 194.0625 * scale, 23.5 * scale, 241.0625 * scale, 36.5 * scale, 277.0625 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.translate(-20 * scale, -20 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(36.5 * scale, 278.0625 * scale);\r\n    ctx.bezierCurveTo(67.5 * scale, 316.0625 * scale, 134.5 * scale, 334.0625 * scale, 199.5 * scale, 319.0625 * scale);\r\n    ctx.bezierCurveTo(254.5 * scale, 304.0625 * scale, 346.5 * scale, 270.0625 * scale, 348.5 * scale, 237.0625 * scale);\r\n    ctx.bezierCurveTo(359.5 * scale, 206.0625 * scale, 318.5 * scale, 129.0625 * scale, 262.5 * scale, 122.0625 * scale);\r\n    ctx.bezierCurveTo(213.5 * scale, 115.0625 * scale, 166.5 * scale, 133.0625 * scale, 104.5 * scale, 166.0625 * scale);\r\n    ctx.bezierCurveTo(54.5 * scale, 194.0625 * scale, 23.5 * scale, 241.0625 * scale, 36.5 * scale, 277.0625 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 19 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(214.5 * scale, 124.0625 * scale);\r\n    ctx.bezierCurveTo(242.5 * scale, 125.0625 * scale, 272.5 * scale, 159.0625 * scale, 283.5 * scale, 184.0625 * scale);\r\n    ctx.bezierCurveTo(277.5 * scale, 161.0625 * scale, 233.5 * scale, 128.0625 * scale, 219.5 * scale, 122.0625 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[2], 19 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(157.5 * scale, 145.0625 * scale);\r\n    ctx.bezierCurveTo(176.5 * scale, 148.0625 * scale, 205.5 * scale, 176.0625 * scale, 212.5 * scale, 197.0625 * scale);\r\n    ctx.bezierCurveTo(205.5 * scale, 178.0625 * scale, 177.5 * scale, 152.0625 * scale, 156.5 * scale, 142.0625 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[2], 19 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(103.5 * scale, 169.0625 * scale);\r\n    ctx.bezierCurveTo(160.5 * scale, 166.0625 * scale, 228.5 * scale, 312.0625 * scale, 162.5 * scale, 323.0625 * scale);\r\n    ctx.bezierCurveTo(128.5 * scale, 330.0625 * scale, 45.5 * scale, 312.0625 * scale, 34.5 * scale, 268.0625 * scale);\r\n    ctx.bezierCurveTo(30.5 * scale, 238.0625 * scale, 44.5 * scale, 222.0625 * scale, 52.5 * scale, 211.0625 * scale);\r\n    ctx.bezierCurveTo(82.5 * scale, 174.0625 * scale, 104.5 * scale, 166.0625 * scale, 119.5 * scale, 172.0625 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[2], 19 * scale);\r\n    circle(ctx, 92.5 * scale, 216.0625 * scale, 13.892443989449804 * scale);\r\n    fill_path(ctx, color[4]);\r\n    circle(ctx, 68.5 * scale, 227.0625 * scale, 8.06225774829855 * scale);\r\n    fill_path(ctx, color[4]);\r\n    circle(ctx, 85.5 * scale, 240.0625 * scale, 6.708203932499369 * scale);\r\n    fill_path(ctx, color[4]);\r\n    circle(ctx, 147.5 * scale, 294.0625 * scale, 17.46424919657298 * scale);\r\n    fill_path(ctx, color[4]);\r\n    circle(ctx, 166.5 * scale, 273.0625 * scale, 6.708203932499369 * scale);\r\n    fill_path(ctx, color[4]);\r\n    circle(ctx, 114.5 * scale, 294.0625 * scale, 12.36931687685298 * scale);\r\n    fill_path(ctx, color[4]);\r\n    circle(ctx, 123.5 * scale, 220.0625 * scale, 5.830951894845301 * scale);\r\n    fill_path(ctx, color[4]);\r\n    circle(ctx, 114.5 * scale, 259.0625 * scale, 4.123105625617661 * scale);\r\n    fill_path(ctx, color[4]);\r\n    circle(ctx, 63.5 * scale, 265.0625 * scale, 5.385164807134504 * scale);\r\n    fill_path(ctx, color[4]);\r\n    circle(ctx, 148.5 * scale, 235.0625 * scale, 4.47213595499958 * scale);\r\n    fill_path(ctx, color[4]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(194.5 * scale, 313.0625 * scale);\r\n    ctx.bezierCurveTo(222.5 * scale, 306.0625 * scale, 319.5 * scale, 271.0625 * scale, 337.5 * scale, 241.0625 * scale);\r\n    ctx.bezierCurveTo(274.5 * scale, 270.0625 * scale, 216.5 * scale, 288.0625 * scale, 199.5 * scale, 287.0625 * scale);\r\n    ctx.bezierCurveTo(198.5 * scale, 302.0625 * scale, 195.5 * scale, 311.0625 * scale, 193.5 * scale, 312.0625 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[5]);\r\n    return can;\r\n}\r\n;\r\nfunction create_hurt_kraken(scale, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 376 * scale;\r\n    can.height = 371 * scale;\r\n    ctx.globalAlpha = 1;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(191.633544921875 * scale, 123.98580932617188 * scale);\r\n    ctx.bezierCurveTo(215.633544921875 * scale, 85.98580932617188 * scale, 187.633544921875 * scale, 71.98580932617188 * scale, 202.633544921875 * scale, 19.985809326171875 * scale);\r\n    ctx.bezierCurveTo(231.633544921875 * scale, 68.98580932617188 * scale, 253.633544921875 * scale, 71.98580932617188 * scale, 256.633544921875 * scale, 93.98580932617188 * scale);\r\n    ctx.bezierCurveTo(306.633544921875 * scale, 64.98580932617188 * scale, 319.633544921875 * scale, 61.985809326171875 * scale, 350.633544921875 * scale, 58.985809326171875 * scale);\r\n    ctx.bezierCurveTo(280.633544921875 * scale, 86.98580932617188 * scale, 281.633544921875 * scale, 106.98580932617188 * scale, 268.633544921875 * scale, 130.98580932617188 * scale);\r\n    ctx.bezierCurveTo(295.633544921875 * scale, 158.98580932617188 * scale, 328.633544921875 * scale, 155.98580932617188 * scale, 353.633544921875 * scale, 90.98580932617188 * scale);\r\n    ctx.bezierCurveTo(371.633544921875 * scale, 158.98580932617188 * scale, 337.633544921875 * scale, 210.98580932617188 * scale, 286.633544921875 * scale, 209.98580932617188 * scale);\r\n    ctx.bezierCurveTo(323.633544921875 * scale, 230.98580932617188 * scale, 317.633544921875 * scale, 274.9858093261719 * scale, 356.633544921875 * scale, 305.9858093261719 * scale);\r\n    ctx.bezierCurveTo(288.633544921875 * scale, 297.9858093261719 * scale, 288.633544921875 * scale, 265.9858093261719 * scale, 275.633544921875 * scale, 266.9858093261719 * scale);\r\n    ctx.bezierCurveTo(280.633544921875 * scale, 294.9858093261719 * scale, 315.633544921875 * scale, 306.9858093261719 * scale, 336.633544921875 * scale, 316.9858093261719 * scale);\r\n    ctx.bezierCurveTo(295.633544921875 * scale, 318.9858093261719 * scale, 264.633544921875 * scale, 302.9858093261719 * scale, 254.633544921875 * scale, 289.9858093261719 * scale);\r\n    ctx.bezierCurveTo(252.633544921875 * scale, 301.9858093261719 * scale, 224.633544921875 * scale, 315.9858093261719 * scale, 201.633544921875 * scale, 356.9858093261719 * scale);\r\n    ctx.bezierCurveTo(195.633544921875 * scale, 313.9858093261719 * scale, 195.633544921875 * scale, 308.9858093261719 * scale, 196.633544921875 * scale, 307.9858093261719 * scale);\r\n    ctx.bezierCurveTo(197.633544921875 * scale, 289.9858093261719 * scale, 207.633544921875 * scale, 283.9858093261719 * scale, 195.633544921875 * scale, 258.9858093261719 * scale);\r\n    ctx.bezierCurveTo(182.633544921875 * scale, 282.9858093261719 * scale, 190.633544921875 * scale, 287.9858093261719 * scale, 193.633544921875 * scale, 297.9858093261719 * scale);\r\n    ctx.bezierCurveTo(195.633544921875 * scale, 306.9858093261719 * scale, 191.633544921875 * scale, 334.9858093261719 * scale, 187.633544921875 * scale, 354.9858093261719 * scale);\r\n    ctx.bezierCurveTo(165.633544921875 * scale, 320.9858093261719 * scale, 138.633544921875 * scale, 307.9858093261719 * scale, 135.633544921875 * scale, 288.9858093261719 * scale);\r\n    ctx.bezierCurveTo(110.633544921875 * scale, 318.9858093261719 * scale, 68.633544921875 * scale, 323.9858093261719 * scale, 49.633544921875 * scale, 320.9858093261719 * scale);\r\n    ctx.bezierCurveTo(88.633544921875 * scale, 308.9858093261719 * scale, 108.633544921875 * scale, 284.9858093261719 * scale, 118.633544921875 * scale, 258.9858093261719 * scale);\r\n    ctx.bezierCurveTo(86.633544921875 * scale, 264.9858093261719 * scale, 75.633544921875 * scale, 310.9858093261719 * scale, 19.633544921875 * scale, 304.9858093261719 * scale);\r\n    ctx.bezierCurveTo(54.633544921875 * scale, 276.9858093261719 * scale, 59.633544921875 * scale, 214.98580932617188 * scale, 105.633544921875 * scale, 205.98580932617188 * scale);\r\n    ctx.bezierCurveTo(14.633544921875 * scale, 201.98580932617188 * scale, 24.633544921875 * scale, 141.98580932617188 * scale, 25.633544921875 * scale, 82.98580932617188 * scale);\r\n    ctx.bezierCurveTo(49.633544921875 * scale, 168.98580932617188 * scale, 87.633544921875 * scale, 141.98580932617188 * scale, 112.633544921875 * scale, 123.98580932617188 * scale);\r\n    ctx.bezierCurveTo(95.633544921875 * scale, 75.98580932617188 * scale, 70.633544921875 * scale, 68.98580932617188 * scale, 35.633544921875 * scale, 50.985809326171875 * scale);\r\n    ctx.bezierCurveTo(70.633544921875 * scale, 53.985809326171875 * scale, 102.633544921875 * scale, 65.98580932617188 * scale, 125.633544921875 * scale, 84.98580932617188 * scale);\r\n    ctx.bezierCurveTo(133.633544921875 * scale, 69.98580932617188 * scale, 166.633544921875 * scale, 42.985809326171875 * scale, 176.633544921875 * scale, 21.985809326171875 * scale);\r\n    ctx.bezierCurveTo(185.633544921875 * scale, 49.985809326171875 * scale, 168.633544921875 * scale, 95.98580932617188 * scale, 191.633544921875 * scale, 121.98580932617188 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[0], 12 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_bread_oven_off(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 440 * scale;\r\n    can.height = 388 * scale;\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(5 * scale, 5 * scale);\r\n    circle(ctx, 220 * scale, 201 * scale, 170.41713528867922 * scale);\r\n    fill_path(ctx, color[0], color[0], 6 * scale);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(-5 * scale, -5 * scale);\r\n    circle(ctx, 220 * scale, 201 * scale, 170.41713528867922 * scale);\r\n    fill_path(ctx, color[1], color[2], 6 * scale);\r\n    circle(ctx, 220 * scale, 201 * scale, 130 * scale);\r\n    fill_path(ctx, color[11], color[2], 6 * scale);\r\n    circle(ctx, 222 * scale, 199 * scale, 120.74767078498864 * scale);\r\n    fill_path(ctx, undefined, color[3], 40 * scale);\r\n    circle(ctx, 220 * scale, 200 * scale, 95.44108130150245 * scale);\r\n    fill_path(ctx, undefined, color[2], 15 * scale);\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(5 * scale, 5 * scale);\r\n    circle(ctx, 63 * scale, 136 * scale, 49.193495504995376 * scale);\r\n    fill_path(ctx, color[0], color[0], 4 * scale);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(-5 * scale, -5 * scale);\r\n    circle(ctx, 63 * scale, 136 * scale, 49.193495504995376 * scale);\r\n    fill_path(ctx, color[8], color[2], 4 * scale);\r\n    circle(ctx, 63 * scale, 137 * scale, 25.632011235952593 * scale);\r\n    fill_path(ctx, color[7], color[2], 4 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_bread_oven(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 440 * scale;\r\n    can.height = 388 * scale;\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(5 * scale, 5 * scale);\r\n    circle(ctx, 220 * scale, 201 * scale, 170.41713528867922 * scale);\r\n    fill_path(ctx, color[0], color[0], 6 * scale);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(-5 * scale, -5 * scale);\r\n    circle(ctx, 220 * scale, 201 * scale, 170.41713528867922 * scale);\r\n    fill_path(ctx, color[1], color[2], 6 * scale);\r\n    circle(ctx, 220 * scale, 201 * scale, 130 * scale);\r\n    fill_path(ctx, color[11], color[2], 6 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(218 * scale, 97 * scale);\r\n    ctx.bezierCurveTo(219 * scale, 163 * scale, 201 * scale, 176 * scale, 191 * scale, 175 * scale);\r\n    ctx.bezierCurveTo(176 * scale, 177 * scale, 168 * scale, 167 * scale, 160 * scale, 115 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[5], color[6], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(224 * scale, 181 * scale);\r\n    ctx.bezierCurveTo(225 * scale, 138 * scale, 246 * scale, 115 * scale, 263 * scale, 137 * scale);\r\n    ctx.bezierCurveTo(282 * scale, 174 * scale, 279 * scale, 217 * scale, 265 * scale, 243 * scale);\r\n    ctx.bezierCurveTo(253 * scale, 264 * scale, 240 * scale, 256 * scale, 233 * scale, 238 * scale);\r\n    ctx.bezierCurveTo(221 * scale, 212 * scale, 225 * scale, 198 * scale, 224 * scale, 184 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[5], color[6], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(169 * scale, 289 * scale);\r\n    ctx.bezierCurveTo(161 * scale, 234 * scale, 168 * scale, 197 * scale, 187 * scale, 195 * scale);\r\n    ctx.bezierCurveTo(219 * scale, 189 * scale, 222 * scale, 256 * scale, 216 * scale, 307 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[5], color[6], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(143 * scale, 146 * scale);\r\n    ctx.bezierCurveTo(161 * scale, 199 * scale, 151 * scale, 245 * scale, 138 * scale, 266 * scale);\r\n    ctx.bezierCurveTo(120.5 * scale, 239.5 * scale, 120.5 * scale, 239.5 * scale, 103 * scale, 213 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[5], color[6], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(283 * scale, 135 * scale);\r\n    ctx.bezierCurveTo(277 * scale, 176 * scale, 298 * scale, 194 * scale, 315 * scale, 205 * scale);\r\n    ctx.bezierCurveTo(323.5 * scale, 175 * scale, 323.5 * scale, 175 * scale, 332 * scale, 145 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[5], color[6], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(318 * scale, 223 * scale);\r\n    ctx.bezierCurveTo(290 * scale, 195 * scale, 271 * scale, 256 * scale, 283 * scale, 281 * scale);\r\n    ctx.bezierCurveTo(303.5 * scale, 267 * scale, 303.5 * scale, 267 * scale, 324 * scale, 253 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[5], color[6], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(142 * scale, 223 * scale);\r\n    ctx.bezierCurveTo(128 * scale, 213 * scale, 123 * scale, 214 * scale, 111 * scale, 223 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[10], color[10], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(251 * scale, 133 * scale);\r\n    ctx.bezierCurveTo(269 * scale, 188 * scale, 262 * scale, 229 * scale, 251 * scale, 253 * scale);\r\n    ctx.bezierCurveTo(288 * scale, 224 * scale, 273 * scale, 139 * scale, 252 * scale, 133 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[10], color[10], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(203 * scale, 102 * scale);\r\n    ctx.bezierCurveTo(204 * scale, 136 * scale, 200 * scale, 159 * scale, 189 * scale, 174 * scale);\r\n    ctx.bezierCurveTo(223 * scale, 164 * scale, 219 * scale, 87 * scale, 205 * scale, 83 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[10], color[10], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(196 * scale, 324 * scale);\r\n    ctx.bezierCurveTo(209 * scale, 239 * scale, 200 * scale, 219 * scale, 192 * scale, 196 * scale);\r\n    ctx.bezierCurveTo(229 * scale, 216 * scale, 219 * scale, 316 * scale, 198 * scale, 325 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[10], color[10], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(266 * scale, 166 * scale);\r\n    ctx.bezierCurveTo(249 * scale, 154 * scale, 243 * scale, 161 * scale, 233 * scale, 167 * scale);\r\n    fill_path(ctx, undefined, color[6], 6 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(269 * scale, 192 * scale);\r\n    ctx.bezierCurveTo(256 * scale, 183 * scale, 241 * scale, 186 * scale, 233 * scale, 192 * scale);\r\n    fill_path(ctx, undefined, color[6], 6 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(263 * scale, 217 * scale);\r\n    ctx.bezierCurveTo(251 * scale, 211 * scale, 242 * scale, 213 * scale, 236 * scale, 218 * scale);\r\n    fill_path(ctx, undefined, color[6], 6 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(204 * scale, 141 * scale);\r\n    ctx.bezierCurveTo(191 * scale, 131 * scale, 187 * scale, 133 * scale, 176 * scale, 141 * scale);\r\n    fill_path(ctx, undefined, color[6], 6 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(207 * scale, 230 * scale);\r\n    ctx.bezierCurveTo(193 * scale, 222 * scale, 185 * scale, 224 * scale, 177 * scale, 231 * scale);\r\n    fill_path(ctx, undefined, color[6], 6 * scale);\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(210 * scale, 258 * scale);\r\n    ctx.bezierCurveTo(196 * scale, 247 * scale, 191 * scale, 250 * scale, 177 * scale, 259 * scale);\r\n    fill_path(ctx, undefined, color[6], 6 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(145 * scale, 196 * scale);\r\n    ctx.bezierCurveTo(130 * scale, 186 * scale, 124 * scale, 187 * scale, 114 * scale, 195 * scale);\r\n    fill_path(ctx, undefined, color[6], 6 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(218 * scale, 97 * scale);\r\n    ctx.bezierCurveTo(219 * scale, 163 * scale, 201 * scale, 176 * scale, 191 * scale, 175 * scale);\r\n    ctx.bezierCurveTo(176 * scale, 177 * scale, 168 * scale, 167 * scale, 160 * scale, 115 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[6], 6 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(224 * scale, 181 * scale);\r\n    ctx.bezierCurveTo(225 * scale, 138 * scale, 246 * scale, 115 * scale, 263 * scale, 137 * scale);\r\n    ctx.bezierCurveTo(282 * scale, 174 * scale, 279 * scale, 217 * scale, 265 * scale, 243 * scale);\r\n    ctx.bezierCurveTo(253 * scale, 264 * scale, 240 * scale, 256 * scale, 233 * scale, 238 * scale);\r\n    ctx.bezierCurveTo(221 * scale, 212 * scale, 225 * scale, 198 * scale, 224 * scale, 184 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[6], 6 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(169 * scale, 289 * scale);\r\n    ctx.bezierCurveTo(161 * scale, 234 * scale, 168 * scale, 197 * scale, 187 * scale, 195 * scale);\r\n    ctx.bezierCurveTo(219 * scale, 189 * scale, 222 * scale, 256 * scale, 216 * scale, 307 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[6], 6 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(143 * scale, 146 * scale);\r\n    ctx.bezierCurveTo(161 * scale, 199 * scale, 151 * scale, 245 * scale, 138 * scale, 266 * scale);\r\n    ctx.bezierCurveTo(120.5 * scale, 239.5 * scale, 120.5 * scale, 239.5 * scale, 103 * scale, 213 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[6], 6 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(283 * scale, 135 * scale);\r\n    ctx.bezierCurveTo(277 * scale, 176 * scale, 298 * scale, 194 * scale, 315 * scale, 205 * scale);\r\n    ctx.bezierCurveTo(323.5 * scale, 175 * scale, 323.5 * scale, 175 * scale, 332 * scale, 145 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[6], 6 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(318 * scale, 223 * scale);\r\n    ctx.bezierCurveTo(290 * scale, 195 * scale, 271 * scale, 256 * scale, 283 * scale, 281 * scale);\r\n    ctx.bezierCurveTo(303.5 * scale, 267 * scale, 303.5 * scale, 267 * scale, 324 * scale, 253 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[6], 6 * scale);\r\n    circle(ctx, 222 * scale, 199 * scale, 120.74767078498864 * scale);\r\n    fill_path(ctx, undefined, color[3], 40 * scale);\r\n    circle(ctx, 220 * scale, 200 * scale, 95.44108130150245 * scale);\r\n    fill_path(ctx, undefined, color[2], 15 * scale);\r\n    circle(ctx, 220 * scale, 201 * scale, 85 * scale);\r\n    fill_path(ctx, undefined, color[4], 10 * scale);\r\n    ctx.globalAlpha = 0.5;\r\n    circle(ctx, 220 * scale, 201 * scale, 82 * scale);\r\n    fill_path(ctx, color[9]);\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(5 * scale, 5 * scale);\r\n    circle(ctx, 63 * scale, 136 * scale, 49.193495504995376 * scale);\r\n    fill_path(ctx, color[0], color[0], 4 * scale);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(-5 * scale, -5 * scale);\r\n    circle(ctx, 63 * scale, 136 * scale, 49.193495504995376 * scale);\r\n    fill_path(ctx, color[8], color[2], 4 * scale);\r\n    circle(ctx, 63 * scale, 137 * scale, 25.632011235952593 * scale);\r\n    fill_path(ctx, color[7], color[2], 4 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_bread_light_down(scale, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 110 * scale;\r\n    can.height = 110 * scale;\r\n    ctx.globalAlpha = 0.2;\r\n    circle(ctx, 55 * scale, 55 * scale, 55 * scale);\r\n    fill_path(ctx, color[0]);\r\n    return can;\r\n}\r\n;\r\nfunction create_bread_light_up(scale, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 110 * scale;\r\n    can.height = 110 * scale;\r\n    ctx.globalAlpha = 0.2;\r\n    circle(ctx, 55 * scale, 55 * scale, 55 * scale);\r\n    fill_path(ctx, color[0]);\r\n    return can;\r\n}\r\n;\r\nfunction create_bridge(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 102 * scale;\r\n    can.height = 102 * scale;\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(3, 3);\r\n    round_rect(ctx, 24 * scale, 26 * scale, 70 * scale, 9 * scale, 10 * scale);\r\n    fill_path(ctx, color[0]);\r\n    round_rect(ctx, 26 * scale, 70 * scale, 70 * scale, 9 * scale, 10 * scale);\r\n    fill_path(ctx, color[0]);\r\n    round_rect(ctx, 5 * scale, 3 * scale, 22 * scale, 94 * scale, 5 * scale);\r\n    fill_path(ctx, color[0]);\r\n    round_rect(ctx, 40 * scale, 3 * scale, 22 * scale, 94 * scale, 5 * scale);\r\n    fill_path(ctx, color[0]);\r\n    round_rect(ctx, 75 * scale, 3 * scale, 22 * scale, 94 * scale, 5 * scale);\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(-3, -3);\r\n    round_rect(ctx, 24 * scale, 26 * scale, 70 * scale, 9 * scale, 10 * scale);\r\n    fill_path(ctx, color[1]);\r\n    round_rect(ctx, 26 * scale, 70 * scale, 70 * scale, 9 * scale, 10 * scale);\r\n    fill_path(ctx, color[1]);\r\n    round_rect(ctx, 5 * scale, 3 * scale, 22 * scale, 94 * scale, 5 * scale);\r\n    fill_path(ctx, color[2], color[3], 4 * scale);\r\n    round_rect(ctx, 40 * scale, 3 * scale, 22 * scale, 94 * scale, 5 * scale);\r\n    fill_path(ctx, color[2], color[3], 4 * scale);\r\n    round_rect(ctx, 75 * scale, 3 * scale, 22 * scale, 94 * scale, 5 * scale);\r\n    fill_path(ctx, color[2], color[3], 4 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_well_border(scale, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 496 * scale;\r\n    can.height = 520 * scale;\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(0, -10 * scale);\r\n    circle(ctx, 247.01138305664062 * scale, 250.13068389892578 * scale, 232.81967270830015 * scale);\r\n    fill_path(ctx, color[1], color[2], 14 * scale);\r\n    ctx.globalCompositeOperation = \"destination-out\";\r\n    circle(ctx, 247.01138305664062 * scale, 249.3125 * scale, 161.4465855941215 * scale);\r\n    fill_path(ctx, color[0], color[0], 14 * scale);\r\n    ctx.globalCompositeOperation = \"source-over\";\r\n    return can;\r\n}\r\n;\r\nfunction create_well(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 496 * scale;\r\n    can.height = 520 * scale;\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(0, 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(19.000030517578125 * scale, 256.67613983154297 * scale);\r\n    ctx.bezierCurveTo(1.000030517578125 * scale, 332.67613983154297 * scale, 23.000030517578125 * scale, 404.67613983154297 * scale, 95.00003051757812 * scale, 463.67613983154297 * scale);\r\n    ctx.bezierCurveTo(128.00003051757812 * scale, 491.67613983154297 * scale, 165.00003051757812 * scale, 507.67613983154297 * scale, 194.00003051757812 * scale, 512.676139831543 * scale);\r\n    ctx.bezierCurveTo(280.0000305175781 * scale, 517.676139831543 * scale, 291.0000305175781 * scale, 516.676139831543 * scale, 342.0000305175781 * scale, 497.67613983154297 * scale);\r\n    ctx.bezierCurveTo(425.0000305175781 * scale, 454.67613983154297 * scale, 469.0000305175781 * scale, 392.67613983154297 * scale, 468.0000305175781 * scale, 300.67613983154297 * scale);\r\n    ctx.bezierCurveTo(408.5000305175781 * scale, 365.17613983154297 * scale, 408.5000305175781 * scale, 365.17613983154297 * scale, 349.0000305175781 * scale, 429.67613983154297 * scale);\r\n    ctx.bezierCurveTo(256.0000305175781 * scale, 473.67613983154297 * scale, 167.00003051757812 * scale, 459.67613983154297 * scale, 78.00003051757812 * scale, 384.67613983154297 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(0, -10 * scale);\r\n    circle(ctx, 247.01138305664062 * scale, 249.3125 * scale, 161.4465855941215 * scale);\r\n    fill_path(ctx, color[5], undefined, 12 * scale);\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(0, 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(65.00003051757812 * scale, 263.4034118652344 * scale);\r\n    ctx.bezierCurveTo(109.00003051757812 * scale, 160.40341186523438 * scale, 185.00003051757812 * scale, 128.40341186523438 * scale, 222.00003051757812 * scale, 124.40341186523438 * scale);\r\n    ctx.bezierCurveTo(277.0000305175781 * scale, 116.40341186523438 * scale, 339.0000305175781 * scale, 134.40341186523438 * scale, 379.0000305175781 * scale, 195.40341186523438 * scale);\r\n    ctx.bezierCurveTo(409.0000305175781 * scale, 242.40341186523438 * scale, 416.0000305175781 * scale, 256.4034118652344 * scale, 428.0000305175781 * scale, 304.4034118652344 * scale);\r\n    ctx.bezierCurveTo(457.0000305175781 * scale, 203.40341186523438 * scale, 449.0000305175781 * scale, 183.40341186523438 * scale, 438.0000305175781 * scale, 162.40341186523438 * scale);\r\n    ctx.bezierCurveTo(381.0000305175781 * scale, 73.40341186523438 * scale, 360.0000305175781 * scale, 66.40341186523438 * scale, 257.0000305175781 * scale, 46.403411865234375 * scale);\r\n    ctx.bezierCurveTo(191.00003051757812 * scale, 45.403411865234375 * scale, 142.00003051757812 * scale, 65.40341186523438 * scale, 101.00003051757812 * scale, 115.40341186523438 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    var img = create_well_border(scale, color);\r\n    ctx.drawImage(img, 0, 0);\r\n    ctx.translate(0, -10 * scale);\r\n    circle(ctx, 247.01138305664062 * scale, 249.3125 * scale, 161.4465855941215 * scale);\r\n    fill_path(ctx, undefined, color[2], 12 * scale);\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(0, 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(325.0113830566406 * scale, 13.767059326171875 * scale);\r\n    ctx.bezierCurveTo(349.5113830566406 * scale, 25.767059326171875 * scale, 349.5113830566406 * scale, 25.767059326171875 * scale, 374.0113830566406 * scale, 37.767059326171875 * scale);\r\n    ctx.bezierCurveTo(384.0113830566406 * scale, 44.767059326171875 * scale, 383.0113830566406 * scale, 50.767059326171875 * scale, 368.0113830566406 * scale, 68.76705932617188 * scale);\r\n    ctx.bezierCurveTo(352.5113830566406 * scale, 91.26705932617188 * scale, 352.5113830566406 * scale, 91.26705932617188 * scale, 337.0113830566406 * scale, 113.76705932617188 * scale);\r\n    ctx.bezierCurveTo(328.0113830566406 * scale, 119.76705932617188 * scale, 328.0113830566406 * scale, 121.76705932617188 * scale, 312.0113830566406 * scale, 112.76705932617188 * scale);\r\n    ctx.bezierCurveTo(303.0113830566406 * scale, 108.26705932617188 * scale, 303.0113830566406 * scale, 108.26705932617188 * scale, 294.0113830566406 * scale, 103.76705932617188 * scale);\r\n    ctx.bezierCurveTo(287.0113830566406 * scale, 99.76705932617188 * scale, 293.0113830566406 * scale, 84.76705932617188 * scale, 297.0113830566406 * scale, 67.76705932617188 * scale);\r\n    ctx.bezierCurveTo(302.0113830566406 * scale, 47.767059326171875 * scale, 302.0113830566406 * scale, 47.767059326171875 * scale, 307.0113830566406 * scale, 27.767059326171875 * scale);\r\n    ctx.bezierCurveTo(310.0113830566406 * scale, 15.767059326171875 * scale, 317.0113830566406 * scale, 12.767059326171875 * scale, 323.0113830566406 * scale, 13.767059326171875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[0], 12 * scale);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(0, -5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(325.0113830566406 * scale, 13.767059326171875 * scale);\r\n    ctx.bezierCurveTo(349.5113830566406 * scale, 25.767059326171875 * scale, 349.5113830566406 * scale, 25.767059326171875 * scale, 374.0113830566406 * scale, 37.767059326171875 * scale);\r\n    ctx.bezierCurveTo(384.0113830566406 * scale, 44.767059326171875 * scale, 383.0113830566406 * scale, 50.767059326171875 * scale, 368.0113830566406 * scale, 68.76705932617188 * scale);\r\n    ctx.bezierCurveTo(352.5113830566406 * scale, 91.26705932617188 * scale, 352.5113830566406 * scale, 91.26705932617188 * scale, 337.0113830566406 * scale, 113.76705932617188 * scale);\r\n    ctx.bezierCurveTo(328.0113830566406 * scale, 119.76705932617188 * scale, 328.0113830566406 * scale, 121.76705932617188 * scale, 312.0113830566406 * scale, 112.76705932617188 * scale);\r\n    ctx.bezierCurveTo(303.0113830566406 * scale, 108.26705932617188 * scale, 303.0113830566406 * scale, 108.26705932617188 * scale, 294.0113830566406 * scale, 103.76705932617188 * scale);\r\n    ctx.bezierCurveTo(287.0113830566406 * scale, 99.76705932617188 * scale, 293.0113830566406 * scale, 84.76705932617188 * scale, 297.0113830566406 * scale, 67.76705932617188 * scale);\r\n    ctx.bezierCurveTo(302.0113830566406 * scale, 47.767059326171875 * scale, 302.0113830566406 * scale, 47.767059326171875 * scale, 307.0113830566406 * scale, 27.767059326171875 * scale);\r\n    ctx.bezierCurveTo(310.0113830566406 * scale, 15.767059326171875 * scale, 317.0113830566406 * scale, 12.767059326171875 * scale, 323.0113830566406 * scale, 13.767059326171875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[2], 12 * scale);\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(0, 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(403.0113830566406 * scale, 89.76705932617188 * scale);\r\n    ctx.bezierCurveTo(413.0113830566406 * scale, 76.76705932617188 * scale, 418.0113830566406 * scale, 79.76705932617188 * scale, 428.0113830566406 * scale, 92.76705932617188 * scale);\r\n    ctx.bezierCurveTo(435.0113830566406 * scale, 99.76705932617188 * scale, 435.0113830566406 * scale, 99.76705932617188 * scale, 442.0113830566406 * scale, 106.76705932617188 * scale);\r\n    ctx.bezierCurveTo(450.0113830566406 * scale, 116.76705932617188 * scale, 445.0113830566406 * scale, 119.76705932617188 * scale, 433.0113830566406 * scale, 128.76705932617188 * scale);\r\n    ctx.bezierCurveTo(408.0113830566406 * scale, 146.26705932617188 * scale, 408.0113830566406 * scale, 146.26705932617188 * scale, 383.0113830566406 * scale, 163.76705932617188 * scale);\r\n    ctx.bezierCurveTo(376.0113830566406 * scale, 166.76705932617188 * scale, 377.0113830566406 * scale, 165.76705932617188 * scale, 368.0113830566406 * scale, 156.76705932617188 * scale);\r\n    ctx.bezierCurveTo(359.0113830566406 * scale, 144.76705932617188 * scale, 359.0113830566406 * scale, 142.76705932617188 * scale, 367.0113830566406 * scale, 133.76705932617188 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[0], 12 * scale);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(0, -5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(403.0113830566406 * scale, 89.76705932617188 * scale);\r\n    ctx.bezierCurveTo(413.0113830566406 * scale, 76.76705932617188 * scale, 418.0113830566406 * scale, 79.76705932617188 * scale, 428.0113830566406 * scale, 92.76705932617188 * scale);\r\n    ctx.bezierCurveTo(435.0113830566406 * scale, 99.76705932617188 * scale, 435.0113830566406 * scale, 99.76705932617188 * scale, 442.0113830566406 * scale, 106.76705932617188 * scale);\r\n    ctx.bezierCurveTo(450.0113830566406 * scale, 116.76705932617188 * scale, 445.0113830566406 * scale, 119.76705932617188 * scale, 433.0113830566406 * scale, 128.76705932617188 * scale);\r\n    ctx.bezierCurveTo(408.0113830566406 * scale, 146.26705932617188 * scale, 408.0113830566406 * scale, 146.26705932617188 * scale, 383.0113830566406 * scale, 163.76705932617188 * scale);\r\n    ctx.bezierCurveTo(376.0113830566406 * scale, 166.76705932617188 * scale, 377.0113830566406 * scale, 165.76705932617188 * scale, 368.0113830566406 * scale, 156.76705932617188 * scale);\r\n    ctx.bezierCurveTo(359.0113830566406 * scale, 144.76705932617188 * scale, 359.0113830566406 * scale, 142.76705932617188 * scale, 367.0113830566406 * scale, 133.76705932617188 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[2], 12 * scale);\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(0, 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(228.01138305664062 * scale, 1.767059326171875 * scale);\r\n    ctx.bezierCurveTo(246.51138305664062 * scale, 3.267059326171875 * scale, 246.51138305664062 * scale, 3.267059326171875 * scale, 265.0113830566406 * scale, 4.767059326171875 * scale);\r\n    ctx.bezierCurveTo(273.0113830566406 * scale, 5.767059326171875 * scale, 275.0113830566406 * scale, 11.767059326171875 * scale, 270.0113830566406 * scale, 27.767059326171875 * scale);\r\n    ctx.bezierCurveTo(264.0113830566406 * scale, 54.267059326171875 * scale, 264.0113830566406 * scale, 54.267059326171875 * scale, 258.0113830566406 * scale, 80.76705932617188 * scale);\r\n    ctx.bezierCurveTo(256.0113830566406 * scale, 92.76705932617188 * scale, 256.0113830566406 * scale, 94.76705932617188 * scale, 242.01138305664062 * scale, 93.76705932617188 * scale);\r\n    ctx.bezierCurveTo(226.01138305664062 * scale, 95.76705932617188 * scale, 225.01138305664062 * scale, 91.76705932617188 * scale, 225.01138305664062 * scale, 80.76705932617188 * scale);\r\n    ctx.bezierCurveTo(223.51138305664062 * scale, 50.267059326171875 * scale, 223.51138305664062 * scale, 50.267059326171875 * scale, 222.01138305664062 * scale, 19.767059326171875 * scale);\r\n    ctx.bezierCurveTo(219.01138305664062 * scale, 8.767059326171875 * scale, 224.01138305664062 * scale, 4.767059326171875 * scale, 227.01138305664062 * scale, 2.767059326171875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[0], 12 * scale);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(0, -5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(228.01138305664062 * scale, 1.767059326171875 * scale);\r\n    ctx.bezierCurveTo(246.51138305664062 * scale, 3.267059326171875 * scale, 246.51138305664062 * scale, 3.267059326171875 * scale, 265.0113830566406 * scale, 4.767059326171875 * scale);\r\n    ctx.bezierCurveTo(273.0113830566406 * scale, 5.767059326171875 * scale, 275.0113830566406 * scale, 11.767059326171875 * scale, 270.0113830566406 * scale, 27.767059326171875 * scale);\r\n    ctx.bezierCurveTo(264.0113830566406 * scale, 54.267059326171875 * scale, 264.0113830566406 * scale, 54.267059326171875 * scale, 258.0113830566406 * scale, 80.76705932617188 * scale);\r\n    ctx.bezierCurveTo(256.0113830566406 * scale, 92.76705932617188 * scale, 256.0113830566406 * scale, 94.76705932617188 * scale, 242.01138305664062 * scale, 93.76705932617188 * scale);\r\n    ctx.bezierCurveTo(226.01138305664062 * scale, 95.76705932617188 * scale, 225.01138305664062 * scale, 91.76705932617188 * scale, 225.01138305664062 * scale, 80.76705932617188 * scale);\r\n    ctx.bezierCurveTo(223.51138305664062 * scale, 50.267059326171875 * scale, 223.51138305664062 * scale, 50.267059326171875 * scale, 222.01138305664062 * scale, 19.767059326171875 * scale);\r\n    ctx.bezierCurveTo(219.01138305664062 * scale, 8.767059326171875 * scale, 224.01138305664062 * scale, 4.767059326171875 * scale, 227.01138305664062 * scale, 2.767059326171875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[2], 12 * scale);\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(0, 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(142.01138305664062 * scale, 25.767059326171875 * scale);\r\n    ctx.bezierCurveTo(158.51138305664062 * scale, 19.767059326171875 * scale, 158.51138305664062 * scale, 19.767059326171875 * scale, 175.01138305664062 * scale, 13.767059326171875 * scale);\r\n    ctx.bezierCurveTo(188.01138305664062 * scale, 11.767059326171875 * scale, 188.01138305664062 * scale, 16.767059326171875 * scale, 191.01138305664062 * scale, 29.767059326171875 * scale);\r\n    ctx.bezierCurveTo(197.01138305664062 * scale, 60.267059326171875 * scale, 197.01138305664062 * scale, 60.267059326171875 * scale, 203.01138305664062 * scale, 90.76705932617188 * scale);\r\n    ctx.bezierCurveTo(206.01138305664062 * scale, 102.76705932617188 * scale, 196.01138305664062 * scale, 99.76705932617188 * scale, 181.01138305664062 * scale, 105.76705932617188 * scale);\r\n    ctx.bezierCurveTo(175.01138305664062 * scale, 108.76705932617188 * scale, 172.01138305664062 * scale, 104.76705932617188 * scale, 164.01138305664062 * scale, 84.76705932617188 * scale);\r\n    ctx.bezierCurveTo(152.51138305664062 * scale, 63.267059326171875 * scale, 152.51138305664062 * scale, 63.267059326171875 * scale, 141.01138305664062 * scale, 41.767059326171875 * scale);\r\n    ctx.bezierCurveTo(138.01138305664062 * scale, 35.767059326171875 * scale, 138.01138305664062 * scale, 29.767059326171875 * scale, 141.01138305664062 * scale, 27.767059326171875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[0], 12 * scale);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(0, -5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(142.01138305664062 * scale, 25.767059326171875 * scale);\r\n    ctx.bezierCurveTo(158.51138305664062 * scale, 19.767059326171875 * scale, 158.51138305664062 * scale, 19.767059326171875 * scale, 175.01138305664062 * scale, 13.767059326171875 * scale);\r\n    ctx.bezierCurveTo(188.01138305664062 * scale, 11.767059326171875 * scale, 188.01138305664062 * scale, 16.767059326171875 * scale, 191.01138305664062 * scale, 29.767059326171875 * scale);\r\n    ctx.bezierCurveTo(197.01138305664062 * scale, 60.267059326171875 * scale, 197.01138305664062 * scale, 60.267059326171875 * scale, 203.01138305664062 * scale, 90.76705932617188 * scale);\r\n    ctx.bezierCurveTo(206.01138305664062 * scale, 102.76705932617188 * scale, 196.01138305664062 * scale, 99.76705932617188 * scale, 181.01138305664062 * scale, 105.76705932617188 * scale);\r\n    ctx.bezierCurveTo(175.01138305664062 * scale, 108.76705932617188 * scale, 172.01138305664062 * scale, 104.76705932617188 * scale, 164.01138305664062 * scale, 84.76705932617188 * scale);\r\n    ctx.bezierCurveTo(152.51138305664062 * scale, 63.267059326171875 * scale, 152.51138305664062 * scale, 63.267059326171875 * scale, 141.01138305664062 * scale, 41.767059326171875 * scale);\r\n    ctx.bezierCurveTo(138.01138305664062 * scale, 35.767059326171875 * scale, 138.01138305664062 * scale, 29.767059326171875 * scale, 141.01138305664062 * scale, 27.767059326171875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[2], 12 * scale);\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(0, 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(70.01138305664062 * scale, 76.76705932617188 * scale);\r\n    ctx.bezierCurveTo(83.01138305664062 * scale, 64.26705932617188 * scale, 83.01138305664062 * scale, 64.26705932617188 * scale, 96.01138305664062 * scale, 51.767059326171875 * scale);\r\n    ctx.bezierCurveTo(104.01138305664062 * scale, 44.767059326171875 * scale, 110.01138305664062 * scale, 51.767059326171875 * scale, 119.01138305664062 * scale, 66.76705932617188 * scale);\r\n    ctx.bezierCurveTo(135.01138305664062 * scale, 88.26705932617188 * scale, 135.01138305664062 * scale, 88.26705932617188 * scale, 151.01138305664062 * scale, 109.76705932617188 * scale);\r\n    ctx.bezierCurveTo(157.01138305664062 * scale, 119.76705932617188 * scale, 153.01138305664062 * scale, 122.76705932617188 * scale, 147.01138305664062 * scale, 129.76705932617188 * scale);\r\n    ctx.bezierCurveTo(138.01138305664062 * scale, 140.76705932617188 * scale, 136.01138305664062 * scale, 140.76705932617188 * scale, 122.01138305664062 * scale, 127.76705932617188 * scale);\r\n    ctx.bezierCurveTo(99.51138305664062 * scale, 110.26705932617188 * scale, 99.51138305664062 * scale, 110.26705932617188 * scale, 77.01138305664062 * scale, 92.76705932617188 * scale);\r\n    ctx.bezierCurveTo(66.01138305664062 * scale, 83.76705932617188 * scale, 66.01138305664062 * scale, 82.76705932617188 * scale, 69.01138305664062 * scale, 78.76705932617188 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[0], 12 * scale);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(0, -5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(70.01138305664062 * scale, 76.76705932617188 * scale);\r\n    ctx.bezierCurveTo(83.01138305664062 * scale, 64.26705932617188 * scale, 83.01138305664062 * scale, 64.26705932617188 * scale, 96.01138305664062 * scale, 51.767059326171875 * scale);\r\n    ctx.bezierCurveTo(104.01138305664062 * scale, 44.767059326171875 * scale, 110.01138305664062 * scale, 51.767059326171875 * scale, 119.01138305664062 * scale, 66.76705932617188 * scale);\r\n    ctx.bezierCurveTo(135.01138305664062 * scale, 88.26705932617188 * scale, 135.01138305664062 * scale, 88.26705932617188 * scale, 151.01138305664062 * scale, 109.76705932617188 * scale);\r\n    ctx.bezierCurveTo(157.01138305664062 * scale, 119.76705932617188 * scale, 153.01138305664062 * scale, 122.76705932617188 * scale, 147.01138305664062 * scale, 129.76705932617188 * scale);\r\n    ctx.bezierCurveTo(138.01138305664062 * scale, 140.76705932617188 * scale, 136.01138305664062 * scale, 140.76705932617188 * scale, 122.01138305664062 * scale, 127.76705932617188 * scale);\r\n    ctx.bezierCurveTo(99.51138305664062 * scale, 110.26705932617188 * scale, 99.51138305664062 * scale, 110.26705932617188 * scale, 77.01138305664062 * scale, 92.76705932617188 * scale);\r\n    ctx.bezierCurveTo(66.01138305664062 * scale, 83.76705932617188 * scale, 66.01138305664062 * scale, 82.76705932617188 * scale, 69.01138305664062 * scale, 78.76705932617188 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[2], 12 * scale);\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(0, 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(33.011383056640625 * scale, 126.76705932617188 * scale);\r\n    ctx.bezierCurveTo(22.011383056640625 * scale, 149.76705932617188 * scale, 22.011383056640625 * scale, 149.76705932617188 * scale, 11.011383056640625 * scale, 172.76705932617188 * scale);\r\n    ctx.bezierCurveTo(7.011383056640625 * scale, 184.76705932617188 * scale, 11.011383056640625 * scale, 189.76705932617188 * scale, 36.011383056640625 * scale, 195.76705932617188 * scale);\r\n    ctx.bezierCurveTo(61.011383056640625 * scale, 202.26705932617188 * scale, 61.011383056640625 * scale, 202.26705932617188 * scale, 86.01138305664062 * scale, 208.76705932617188 * scale);\r\n    ctx.bezierCurveTo(100.01138305664062 * scale, 214.76705932617188 * scale, 102.01138305664062 * scale, 203.76705932617188 * scale, 109.01138305664062 * scale, 189.76705932617188 * scale);\r\n    ctx.bezierCurveTo(117.01138305664062 * scale, 171.76705932617188 * scale, 116.01138305664062 * scale, 166.76705932617188 * scale, 97.01138305664062 * scale, 156.76705932617188 * scale);\r\n    ctx.bezierCurveTo(74.01138305664062 * scale, 140.76705932617188 * scale, 74.01138305664062 * scale, 140.76705932617188 * scale, 51.011383056640625 * scale, 124.76705932617188 * scale);\r\n    ctx.bezierCurveTo(42.011383056640625 * scale, 118.76705932617188 * scale, 37.011383056640625 * scale, 119.76705932617188 * scale, 33.011383056640625 * scale, 126.76705932617188 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[0], 12 * scale);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(0, -5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(33.011383056640625 * scale, 126.76705932617188 * scale);\r\n    ctx.bezierCurveTo(22.011383056640625 * scale, 149.76705932617188 * scale, 22.011383056640625 * scale, 149.76705932617188 * scale, 11.011383056640625 * scale, 172.76705932617188 * scale);\r\n    ctx.bezierCurveTo(7.011383056640625 * scale, 184.76705932617188 * scale, 11.011383056640625 * scale, 189.76705932617188 * scale, 36.011383056640625 * scale, 195.76705932617188 * scale);\r\n    ctx.bezierCurveTo(61.011383056640625 * scale, 202.26705932617188 * scale, 61.011383056640625 * scale, 202.26705932617188 * scale, 86.01138305664062 * scale, 208.76705932617188 * scale);\r\n    ctx.bezierCurveTo(100.01138305664062 * scale, 214.76705932617188 * scale, 102.01138305664062 * scale, 203.76705932617188 * scale, 109.01138305664062 * scale, 189.76705932617188 * scale);\r\n    ctx.bezierCurveTo(117.01138305664062 * scale, 171.76705932617188 * scale, 116.01138305664062 * scale, 166.76705932617188 * scale, 97.01138305664062 * scale, 156.76705932617188 * scale);\r\n    ctx.bezierCurveTo(74.01138305664062 * scale, 140.76705932617188 * scale, 74.01138305664062 * scale, 140.76705932617188 * scale, 51.011383056640625 * scale, 124.76705932617188 * scale);\r\n    ctx.bezierCurveTo(42.011383056640625 * scale, 118.76705932617188 * scale, 37.011383056640625 * scale, 119.76705932617188 * scale, 33.011383056640625 * scale, 126.76705932617188 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[2], 12 * scale);\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(0, 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(13.011383056640625 * scale, 229.76705932617188 * scale);\r\n    ctx.bezierCurveTo(45.511383056640625 * scale, 233.76705932617188 * scale, 45.511383056640625 * scale, 233.76705932617188 * scale, 78.01138305664062 * scale, 237.76705932617188 * scale);\r\n    ctx.bezierCurveTo(92.01138305664062 * scale, 239.76705932617188 * scale, 92.01138305664062 * scale, 246.76705932617188 * scale, 91.01138305664062 * scale, 257.7670593261719 * scale);\r\n    ctx.bezierCurveTo(92.01138305664062 * scale, 275.7670593261719 * scale, 91.01138305664062 * scale, 274.7670593261719 * scale, 68.01138305664062 * scale, 276.7670593261719 * scale);\r\n    ctx.bezierCurveTo(42.511383056640625 * scale, 279.7670593261719 * scale, 42.511383056640625 * scale, 279.7670593261719 * scale, 17.011383056640625 * scale, 282.7670593261719 * scale);\r\n    ctx.bezierCurveTo(2.011383056640625 * scale, 282.7670593261719 * scale, 3.011383056640625 * scale, 276.7670593261719 * scale, 2.011383056640625 * scale, 260.7670593261719 * scale);\r\n    ctx.bezierCurveTo(2.011383056640625 * scale, 231.76705932617188 * scale, 4.011383056640625 * scale, 232.76705932617188 * scale, 11.011383056640625 * scale, 230.76705932617188 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[0], 12 * scale);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(0, -5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(13.011383056640625 * scale, 229.76705932617188 * scale);\r\n    ctx.bezierCurveTo(45.511383056640625 * scale, 233.76705932617188 * scale, 45.511383056640625 * scale, 233.76705932617188 * scale, 78.01138305664062 * scale, 237.76705932617188 * scale);\r\n    ctx.bezierCurveTo(92.01138305664062 * scale, 239.76705932617188 * scale, 92.01138305664062 * scale, 246.76705932617188 * scale, 91.01138305664062 * scale, 257.7670593261719 * scale);\r\n    ctx.bezierCurveTo(92.01138305664062 * scale, 275.7670593261719 * scale, 91.01138305664062 * scale, 274.7670593261719 * scale, 68.01138305664062 * scale, 276.7670593261719 * scale);\r\n    ctx.bezierCurveTo(42.511383056640625 * scale, 279.7670593261719 * scale, 42.511383056640625 * scale, 279.7670593261719 * scale, 17.011383056640625 * scale, 282.7670593261719 * scale);\r\n    ctx.bezierCurveTo(2.011383056640625 * scale, 282.7670593261719 * scale, 3.011383056640625 * scale, 276.7670593261719 * scale, 2.011383056640625 * scale, 260.7670593261719 * scale);\r\n    ctx.bezierCurveTo(2.011383056640625 * scale, 231.76705932617188 * scale, 4.011383056640625 * scale, 232.76705932617188 * scale, 11.011383056640625 * scale, 230.76705932617188 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[2], 12 * scale);\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(0, 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(97.01138305664062 * scale, 329.7670593261719 * scale);\r\n    ctx.bezierCurveTo(68.51138305664062 * scale, 343.7670593261719 * scale, 68.51138305664062 * scale, 343.7670593261719 * scale, 40.011383056640625 * scale, 357.7670593261719 * scale);\r\n    ctx.bezierCurveTo(29.011383056640625 * scale, 360.7670593261719 * scale, 27.011383056640625 * scale, 361.7670593261719 * scale, 20.011383056640625 * scale, 346.7670593261719 * scale);\r\n    ctx.bezierCurveTo(16.511383056640625 * scale, 336.2670593261719 * scale, 16.511383056640625 * scale, 336.2670593261719 * scale, 13.011383056640625 * scale, 325.7670593261719 * scale);\r\n    ctx.bezierCurveTo(10.011383056640625 * scale, 307.7670593261719 * scale, 18.011383056640625 * scale, 312.7670593261719 * scale, 34.011383056640625 * scale, 306.7670593261719 * scale);\r\n    ctx.bezierCurveTo(59.511383056640625 * scale, 302.2670593261719 * scale, 59.511383056640625 * scale, 302.2670593261719 * scale, 85.01138305664062 * scale, 297.7670593261719 * scale);\r\n    ctx.bezierCurveTo(97.01138305664062 * scale, 294.7670593261719 * scale, 100.01138305664062 * scale, 297.7670593261719 * scale, 100.01138305664062 * scale, 307.7670593261719 * scale);\r\n    ctx.bezierCurveTo(105.01138305664062 * scale, 326.7670593261719 * scale, 103.01138305664062 * scale, 325.7670593261719 * scale, 97.01138305664062 * scale, 329.7670593261719 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[0], 12 * scale);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(0, -5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(97.01138305664062 * scale, 329.7670593261719 * scale);\r\n    ctx.bezierCurveTo(68.51138305664062 * scale, 343.7670593261719 * scale, 68.51138305664062 * scale, 343.7670593261719 * scale, 40.011383056640625 * scale, 357.7670593261719 * scale);\r\n    ctx.bezierCurveTo(29.011383056640625 * scale, 360.7670593261719 * scale, 27.011383056640625 * scale, 361.7670593261719 * scale, 20.011383056640625 * scale, 346.7670593261719 * scale);\r\n    ctx.bezierCurveTo(16.511383056640625 * scale, 336.2670593261719 * scale, 16.511383056640625 * scale, 336.2670593261719 * scale, 13.011383056640625 * scale, 325.7670593261719 * scale);\r\n    ctx.bezierCurveTo(10.011383056640625 * scale, 307.7670593261719 * scale, 18.011383056640625 * scale, 312.7670593261719 * scale, 34.011383056640625 * scale, 306.7670593261719 * scale);\r\n    ctx.bezierCurveTo(59.511383056640625 * scale, 302.2670593261719 * scale, 59.511383056640625 * scale, 302.2670593261719 * scale, 85.01138305664062 * scale, 297.7670593261719 * scale);\r\n    ctx.bezierCurveTo(97.01138305664062 * scale, 294.7670593261719 * scale, 100.01138305664062 * scale, 297.7670593261719 * scale, 100.01138305664062 * scale, 307.7670593261719 * scale);\r\n    ctx.bezierCurveTo(105.01138305664062 * scale, 326.7670593261719 * scale, 103.01138305664062 * scale, 325.7670593261719 * scale, 97.01138305664062 * scale, 329.7670593261719 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[2], 12 * scale);\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(0, 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(394.0113830566406 * scale, 181.76705932617188 * scale);\r\n    ctx.bezierCurveTo(426.5113830566406 * scale, 166.76705932617188 * scale, 426.5113830566406 * scale, 166.76705932617188 * scale, 459.0113830566406 * scale, 151.76705932617188 * scale);\r\n    ctx.bezierCurveTo(469.0113830566406 * scale, 152.76705932617188 * scale, 469.0113830566406 * scale, 155.76705932617188 * scale, 472.0113830566406 * scale, 165.76705932617188 * scale);\r\n    ctx.bezierCurveTo(476.0113830566406 * scale, 177.26705932617188 * scale, 476.0113830566406 * scale, 177.26705932617188 * scale, 480.0113830566406 * scale, 188.76705932617188 * scale);\r\n    ctx.bezierCurveTo(483.0113830566406 * scale, 199.76705932617188 * scale, 480.0113830566406 * scale, 200.76705932617188 * scale, 460.0113830566406 * scale, 205.76705932617188 * scale);\r\n    ctx.bezierCurveTo(433.5113830566406 * scale, 210.26705932617188 * scale, 433.5113830566406 * scale, 210.26705932617188 * scale, 407.0113830566406 * scale, 214.76705932617188 * scale);\r\n    ctx.bezierCurveTo(395.0113830566406 * scale, 218.76705932617188 * scale, 397.0113830566406 * scale, 211.76705932617188 * scale, 393.0113830566406 * scale, 202.76705932617188 * scale);\r\n    ctx.bezierCurveTo(387.0113830566406 * scale, 188.76705932617188 * scale, 387.0113830566406 * scale, 187.76705932617188 * scale, 394.0113830566406 * scale, 181.76705932617188 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[0], 12 * scale);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(0, -5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(394.0113830566406 * scale, 181.76705932617188 * scale);\r\n    ctx.bezierCurveTo(426.5113830566406 * scale, 166.76705932617188 * scale, 426.5113830566406 * scale, 166.76705932617188 * scale, 459.0113830566406 * scale, 151.76705932617188 * scale);\r\n    ctx.bezierCurveTo(469.0113830566406 * scale, 152.76705932617188 * scale, 469.0113830566406 * scale, 155.76705932617188 * scale, 472.0113830566406 * scale, 165.76705932617188 * scale);\r\n    ctx.bezierCurveTo(476.0113830566406 * scale, 177.26705932617188 * scale, 476.0113830566406 * scale, 177.26705932617188 * scale, 480.0113830566406 * scale, 188.76705932617188 * scale);\r\n    ctx.bezierCurveTo(483.0113830566406 * scale, 199.76705932617188 * scale, 480.0113830566406 * scale, 200.76705932617188 * scale, 460.0113830566406 * scale, 205.76705932617188 * scale);\r\n    ctx.bezierCurveTo(433.5113830566406 * scale, 210.26705932617188 * scale, 433.5113830566406 * scale, 210.26705932617188 * scale, 407.0113830566406 * scale, 214.76705932617188 * scale);\r\n    ctx.bezierCurveTo(395.0113830566406 * scale, 218.76705932617188 * scale, 397.0113830566406 * scale, 211.76705932617188 * scale, 393.0113830566406 * scale, 202.76705932617188 * scale);\r\n    ctx.bezierCurveTo(387.0113830566406 * scale, 188.76705932617188 * scale, 387.0113830566406 * scale, 187.76705932617188 * scale, 394.0113830566406 * scale, 181.76705932617188 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[2], 12 * scale);\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(0, 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(411.0113830566406 * scale, 234.76705932617188 * scale);\r\n    ctx.bezierCurveTo(446.0113830566406 * scale, 233.26705932617188 * scale, 446.0113830566406 * scale, 233.26705932617188 * scale, 481.0113830566406 * scale, 231.76705932617188 * scale);\r\n    ctx.bezierCurveTo(491.0113830566406 * scale, 232.76705932617188 * scale, 493.0113830566406 * scale, 239.76705932617188 * scale, 491.0113830566406 * scale, 251.76705932617188 * scale);\r\n    ctx.bezierCurveTo(490.0113830566406 * scale, 263.7670593261719 * scale, 490.0113830566406 * scale, 263.7670593261719 * scale, 489.0113830566406 * scale, 275.7670593261719 * scale);\r\n    ctx.bezierCurveTo(487.0113830566406 * scale, 283.7670593261719 * scale, 483.0113830566406 * scale, 284.7670593261719 * scale, 464.0113830566406 * scale, 280.7670593261719 * scale);\r\n    ctx.bezierCurveTo(437.0113830566406 * scale, 273.7670593261719 * scale, 437.0113830566406 * scale, 273.7670593261719 * scale, 410.0113830566406 * scale, 266.7670593261719 * scale);\r\n    ctx.bezierCurveTo(400.0113830566406 * scale, 261.7670593261719 * scale, 401.0113830566406 * scale, 259.7670593261719 * scale, 402.0113830566406 * scale, 249.76705932617188 * scale);\r\n    ctx.bezierCurveTo(401.0113830566406 * scale, 237.76705932617188 * scale, 403.0113830566406 * scale, 235.76705932617188 * scale, 408.0113830566406 * scale, 234.76705932617188 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[0], 12 * scale);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(0, -5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(411.0113830566406 * scale, 234.76705932617188 * scale);\r\n    ctx.bezierCurveTo(446.0113830566406 * scale, 233.26705932617188 * scale, 446.0113830566406 * scale, 233.26705932617188 * scale, 481.0113830566406 * scale, 231.76705932617188 * scale);\r\n    ctx.bezierCurveTo(491.0113830566406 * scale, 232.76705932617188 * scale, 493.0113830566406 * scale, 239.76705932617188 * scale, 491.0113830566406 * scale, 251.76705932617188 * scale);\r\n    ctx.bezierCurveTo(490.0113830566406 * scale, 263.7670593261719 * scale, 490.0113830566406 * scale, 263.7670593261719 * scale, 489.0113830566406 * scale, 275.7670593261719 * scale);\r\n    ctx.bezierCurveTo(487.0113830566406 * scale, 283.7670593261719 * scale, 483.0113830566406 * scale, 284.7670593261719 * scale, 464.0113830566406 * scale, 280.7670593261719 * scale);\r\n    ctx.bezierCurveTo(437.0113830566406 * scale, 273.7670593261719 * scale, 437.0113830566406 * scale, 273.7670593261719 * scale, 410.0113830566406 * scale, 266.7670593261719 * scale);\r\n    ctx.bezierCurveTo(400.0113830566406 * scale, 261.7670593261719 * scale, 401.0113830566406 * scale, 259.7670593261719 * scale, 402.0113830566406 * scale, 249.76705932617188 * scale);\r\n    ctx.bezierCurveTo(401.0113830566406 * scale, 237.76705932617188 * scale, 403.0113830566406 * scale, 235.76705932617188 * scale, 408.0113830566406 * scale, 234.76705932617188 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[2], 12 * scale);\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(0, 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(400.0113830566406 * scale, 290.7670593261719 * scale);\r\n    ctx.bezierCurveTo(437.0113830566406 * scale, 301.2670593261719 * scale, 437.0113830566406 * scale, 301.2670593261719 * scale, 474.0113830566406 * scale, 311.7670593261719 * scale);\r\n    ctx.bezierCurveTo(484.0113830566406 * scale, 319.7670593261719 * scale, 481.0113830566406 * scale, 322.7670593261719 * scale, 474.0113830566406 * scale, 335.7670593261719 * scale);\r\n    ctx.bezierCurveTo(465.5113830566406 * scale, 354.7670593261719 * scale, 465.5113830566406 * scale, 354.7670593261719 * scale, 457.0113830566406 * scale, 373.7670593261719 * scale);\r\n    ctx.bezierCurveTo(449.0113830566406 * scale, 386.7670593261719 * scale, 444.0113830566406 * scale, 384.7670593261719 * scale, 427.0113830566406 * scale, 370.7670593261719 * scale);\r\n    ctx.bezierCurveTo(403.0113830566406 * scale, 354.7670593261719 * scale, 403.0113830566406 * scale, 354.7670593261719 * scale, 379.0113830566406 * scale, 338.7670593261719 * scale);\r\n    ctx.bezierCurveTo(371.0113830566406 * scale, 327.7670593261719 * scale, 373.0113830566406 * scale, 323.7670593261719 * scale, 377.0113830566406 * scale, 313.7670593261719 * scale);\r\n    ctx.bezierCurveTo(386.0113830566406 * scale, 292.7670593261719 * scale, 393.0113830566406 * scale, 288.7670593261719 * scale, 398.0113830566406 * scale, 291.7670593261719 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[0], 12 * scale);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(0, -5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(400.0113830566406 * scale, 290.7670593261719 * scale);\r\n    ctx.bezierCurveTo(437.0113830566406 * scale, 301.2670593261719 * scale, 437.0113830566406 * scale, 301.2670593261719 * scale, 474.0113830566406 * scale, 311.7670593261719 * scale);\r\n    ctx.bezierCurveTo(484.0113830566406 * scale, 319.7670593261719 * scale, 481.0113830566406 * scale, 322.7670593261719 * scale, 474.0113830566406 * scale, 335.7670593261719 * scale);\r\n    ctx.bezierCurveTo(465.5113830566406 * scale, 354.7670593261719 * scale, 465.5113830566406 * scale, 354.7670593261719 * scale, 457.0113830566406 * scale, 373.7670593261719 * scale);\r\n    ctx.bezierCurveTo(449.0113830566406 * scale, 386.7670593261719 * scale, 444.0113830566406 * scale, 384.7670593261719 * scale, 427.0113830566406 * scale, 370.7670593261719 * scale);\r\n    ctx.bezierCurveTo(403.0113830566406 * scale, 354.7670593261719 * scale, 403.0113830566406 * scale, 354.7670593261719 * scale, 379.0113830566406 * scale, 338.7670593261719 * scale);\r\n    ctx.bezierCurveTo(371.0113830566406 * scale, 327.7670593261719 * scale, 373.0113830566406 * scale, 323.7670593261719 * scale, 377.0113830566406 * scale, 313.7670593261719 * scale);\r\n    ctx.bezierCurveTo(386.0113830566406 * scale, 292.7670593261719 * scale, 393.0113830566406 * scale, 288.7670593261719 * scale, 398.0113830566406 * scale, 291.7670593261719 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[2], 12 * scale);\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(0, 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(366.0113830566406 * scale, 361.2216033935547 * scale);\r\n    ctx.bezierCurveTo(393.0113830566406 * scale, 383.2216033935547 * scale, 393.0113830566406 * scale, 383.2216033935547 * scale, 420.0113830566406 * scale, 405.2216033935547 * scale);\r\n    ctx.bezierCurveTo(427.0113830566406 * scale, 414.2216033935547 * scale, 425.0113830566406 * scale, 417.2216033935547 * scale, 413.0113830566406 * scale, 428.2216033935547 * scale);\r\n    ctx.bezierCurveTo(405.5113830566406 * scale, 435.2216033935547 * scale, 405.5113830566406 * scale, 435.2216033935547 * scale, 398.0113830566406 * scale, 442.2216033935547 * scale);\r\n    ctx.bezierCurveTo(388.0113830566406 * scale, 451.2216033935547 * scale, 385.0113830566406 * scale, 445.2216033935547 * scale, 373.0113830566406 * scale, 428.2216033935547 * scale);\r\n    ctx.bezierCurveTo(358.5113830566406 * scale, 408.2216033935547 * scale, 358.5113830566406 * scale, 408.2216033935547 * scale, 344.0113830566406 * scale, 388.2216033935547 * scale);\r\n    ctx.bezierCurveTo(337.0113830566406 * scale, 378.2216033935547 * scale, 342.0113830566406 * scale, 377.2216033935547 * scale, 347.0113830566406 * scale, 371.2216033935547 * scale);\r\n    ctx.bezierCurveTo(359.0113830566406 * scale, 359.2216033935547 * scale, 361.0113830566406 * scale, 358.2216033935547 * scale, 364.0113830566406 * scale, 361.2216033935547 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[0], 12 * scale);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(0, -5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(366.0113830566406 * scale, 361.2216033935547 * scale);\r\n    ctx.bezierCurveTo(393.0113830566406 * scale, 383.2216033935547 * scale, 393.0113830566406 * scale, 383.2216033935547 * scale, 420.0113830566406 * scale, 405.2216033935547 * scale);\r\n    ctx.bezierCurveTo(427.0113830566406 * scale, 414.2216033935547 * scale, 425.0113830566406 * scale, 417.2216033935547 * scale, 413.0113830566406 * scale, 428.2216033935547 * scale);\r\n    ctx.bezierCurveTo(405.5113830566406 * scale, 435.2216033935547 * scale, 405.5113830566406 * scale, 435.2216033935547 * scale, 398.0113830566406 * scale, 442.2216033935547 * scale);\r\n    ctx.bezierCurveTo(388.0113830566406 * scale, 451.2216033935547 * scale, 385.0113830566406 * scale, 445.2216033935547 * scale, 373.0113830566406 * scale, 428.2216033935547 * scale);\r\n    ctx.bezierCurveTo(358.5113830566406 * scale, 408.2216033935547 * scale, 358.5113830566406 * scale, 408.2216033935547 * scale, 344.0113830566406 * scale, 388.2216033935547 * scale);\r\n    ctx.bezierCurveTo(337.0113830566406 * scale, 378.2216033935547 * scale, 342.0113830566406 * scale, 377.2216033935547 * scale, 347.0113830566406 * scale, 371.2216033935547 * scale);\r\n    ctx.bezierCurveTo(359.0113830566406 * scale, 359.2216033935547 * scale, 361.0113830566406 * scale, 358.2216033935547 * scale, 364.0113830566406 * scale, 361.2216033935547 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[2], 12 * scale);\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(0, 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(323.0113830566406 * scale, 393.2216033935547 * scale);\r\n    ctx.bezierCurveTo(338.0113830566406 * scale, 424.7216033935547 * scale, 338.0113830566406 * scale, 424.7216033935547 * scale, 353.0113830566406 * scale, 456.2216033935547 * scale);\r\n    ctx.bezierCurveTo(355.0113830566406 * scale, 467.2216033935547 * scale, 354.0113830566406 * scale, 469.2216033935547 * scale, 336.0113830566406 * scale, 475.2216033935547 * scale);\r\n    ctx.bezierCurveTo(326.0113830566406 * scale, 478.2216033935547 * scale, 326.0113830566406 * scale, 478.2216033935547 * scale, 316.0113830566406 * scale, 481.2216033935547 * scale);\r\n    ctx.bezierCurveTo(304.0113830566406 * scale, 484.2216033935547 * scale, 304.0113830566406 * scale, 477.2216033935547 * scale, 301.0113830566406 * scale, 454.2216033935547 * scale);\r\n    ctx.bezierCurveTo(295.5113830566406 * scale, 429.2216033935547 * scale, 295.5113830566406 * scale, 429.2216033935547 * scale, 290.0113830566406 * scale, 404.2216033935547 * scale);\r\n    ctx.bezierCurveTo(287.0113830566406 * scale, 396.2216033935547 * scale, 297.0113830566406 * scale, 394.2216033935547 * scale, 303.0113830566406 * scale, 392.2216033935547 * scale);\r\n    ctx.bezierCurveTo(316.0113830566406 * scale, 387.2216033935547 * scale, 318.0113830566406 * scale, 387.2216033935547 * scale, 323.0113830566406 * scale, 394.2216033935547 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[0], 12 * scale);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(0, -5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(323.0113830566406 * scale, 393.2216033935547 * scale);\r\n    ctx.bezierCurveTo(338.0113830566406 * scale, 424.7216033935547 * scale, 338.0113830566406 * scale, 424.7216033935547 * scale, 353.0113830566406 * scale, 456.2216033935547 * scale);\r\n    ctx.bezierCurveTo(355.0113830566406 * scale, 467.2216033935547 * scale, 354.0113830566406 * scale, 469.2216033935547 * scale, 336.0113830566406 * scale, 475.2216033935547 * scale);\r\n    ctx.bezierCurveTo(326.0113830566406 * scale, 478.2216033935547 * scale, 326.0113830566406 * scale, 478.2216033935547 * scale, 316.0113830566406 * scale, 481.2216033935547 * scale);\r\n    ctx.bezierCurveTo(304.0113830566406 * scale, 484.2216033935547 * scale, 304.0113830566406 * scale, 477.2216033935547 * scale, 301.0113830566406 * scale, 454.2216033935547 * scale);\r\n    ctx.bezierCurveTo(295.5113830566406 * scale, 429.2216033935547 * scale, 295.5113830566406 * scale, 429.2216033935547 * scale, 290.0113830566406 * scale, 404.2216033935547 * scale);\r\n    ctx.bezierCurveTo(287.0113830566406 * scale, 396.2216033935547 * scale, 297.0113830566406 * scale, 394.2216033935547 * scale, 303.0113830566406 * scale, 392.2216033935547 * scale);\r\n    ctx.bezierCurveTo(316.0113830566406 * scale, 387.2216033935547 * scale, 318.0113830566406 * scale, 387.2216033935547 * scale, 323.0113830566406 * scale, 394.2216033935547 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[2], 12 * scale);\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(0, 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(270.0113830566406 * scale, 413.2216033935547 * scale);\r\n    ctx.bezierCurveTo(271.0113830566406 * scale, 445.7216033935547 * scale, 271.0113830566406 * scale, 445.7216033935547 * scale, 272.0113830566406 * scale, 478.2216033935547 * scale);\r\n    ctx.bezierCurveTo(273.0113830566406 * scale, 490.2216033935547 * scale, 267.0113830566406 * scale, 493.2216033935547 * scale, 249.01138305664062 * scale, 490.2216033935547 * scale);\r\n    ctx.bezierCurveTo(222.01138305664062 * scale, 492.2216033935547 * scale, 220.01138305664062 * scale, 485.2216033935547 * scale, 225.01138305664062 * scale, 467.2216033935547 * scale);\r\n    ctx.bezierCurveTo(230.51138305664062 * scale, 440.2216033935547 * scale, 230.51138305664062 * scale, 440.2216033935547 * scale, 236.01138305664062 * scale, 413.2216033935547 * scale);\r\n    ctx.bezierCurveTo(237.01138305664062 * scale, 405.2216033935547 * scale, 238.01138305664062 * scale, 404.2216033935547 * scale, 253.01138305664062 * scale, 403.2216033935547 * scale);\r\n    ctx.bezierCurveTo(269.0113830566406 * scale, 405.2216033935547 * scale, 270.0113830566406 * scale, 407.2216033935547 * scale, 269.0113830566406 * scale, 412.2216033935547 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[0], 12 * scale);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(0, -5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(270.0113830566406 * scale, 413.2216033935547 * scale);\r\n    ctx.bezierCurveTo(271.0113830566406 * scale, 445.7216033935547 * scale, 271.0113830566406 * scale, 445.7216033935547 * scale, 272.0113830566406 * scale, 478.2216033935547 * scale);\r\n    ctx.bezierCurveTo(273.0113830566406 * scale, 490.2216033935547 * scale, 267.0113830566406 * scale, 493.2216033935547 * scale, 249.01138305664062 * scale, 490.2216033935547 * scale);\r\n    ctx.bezierCurveTo(222.01138305664062 * scale, 492.2216033935547 * scale, 220.01138305664062 * scale, 485.2216033935547 * scale, 225.01138305664062 * scale, 467.2216033935547 * scale);\r\n    ctx.bezierCurveTo(230.51138305664062 * scale, 440.2216033935547 * scale, 230.51138305664062 * scale, 440.2216033935547 * scale, 236.01138305664062 * scale, 413.2216033935547 * scale);\r\n    ctx.bezierCurveTo(237.01138305664062 * scale, 405.2216033935547 * scale, 238.01138305664062 * scale, 404.2216033935547 * scale, 253.01138305664062 * scale, 403.2216033935547 * scale);\r\n    ctx.bezierCurveTo(269.0113830566406 * scale, 405.2216033935547 * scale, 270.0113830566406 * scale, 407.2216033935547 * scale, 269.0113830566406 * scale, 412.2216033935547 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[2], 12 * scale);\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(0, 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(207.01138305664062 * scale, 406.2216033935547 * scale);\r\n    ctx.bezierCurveTo(197.51138305664062 * scale, 440.7216033935547 * scale, 197.51138305664062 * scale, 440.7216033935547 * scale, 188.01138305664062 * scale, 475.2216033935547 * scale);\r\n    ctx.bezierCurveTo(184.01138305664062 * scale, 485.2216033935547 * scale, 179.01138305664062 * scale, 491.2216033935547 * scale, 152.01138305664062 * scale, 477.2216033935547 * scale);\r\n    ctx.bezierCurveTo(136.51138305664062 * scale, 469.7216033935547 * scale, 136.51138305664062 * scale, 469.7216033935547 * scale, 121.01138305664062 * scale, 462.2216033935547 * scale);\r\n    ctx.bezierCurveTo(109.01138305664062 * scale, 453.2216033935547 * scale, 117.01138305664062 * scale, 447.2216033935547 * scale, 133.01138305664062 * scale, 427.2216033935547 * scale);\r\n    ctx.bezierCurveTo(146.51138305664062 * scale, 406.7216033935547 * scale, 146.51138305664062 * scale, 406.7216033935547 * scale, 160.01138305664062 * scale, 386.2216033935547 * scale);\r\n    ctx.bezierCurveTo(163.01138305664062 * scale, 377.2216033935547 * scale, 168.01138305664062 * scale, 378.2216033935547 * scale, 187.01138305664062 * scale, 387.2216033935547 * scale);\r\n    ctx.bezierCurveTo(206.01138305664062 * scale, 395.2216033935547 * scale, 208.01138305664062 * scale, 398.2216033935547 * scale, 207.01138305664062 * scale, 405.2216033935547 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[0], 12 * scale);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(0, -5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(207.01138305664062 * scale, 406.2216033935547 * scale);\r\n    ctx.bezierCurveTo(197.51138305664062 * scale, 440.7216033935547 * scale, 197.51138305664062 * scale, 440.7216033935547 * scale, 188.01138305664062 * scale, 475.2216033935547 * scale);\r\n    ctx.bezierCurveTo(184.01138305664062 * scale, 485.2216033935547 * scale, 179.01138305664062 * scale, 491.2216033935547 * scale, 152.01138305664062 * scale, 477.2216033935547 * scale);\r\n    ctx.bezierCurveTo(136.51138305664062 * scale, 469.7216033935547 * scale, 136.51138305664062 * scale, 469.7216033935547 * scale, 121.01138305664062 * scale, 462.2216033935547 * scale);\r\n    ctx.bezierCurveTo(109.01138305664062 * scale, 453.2216033935547 * scale, 117.01138305664062 * scale, 447.2216033935547 * scale, 133.01138305664062 * scale, 427.2216033935547 * scale);\r\n    ctx.bezierCurveTo(146.51138305664062 * scale, 406.7216033935547 * scale, 146.51138305664062 * scale, 406.7216033935547 * scale, 160.01138305664062 * scale, 386.2216033935547 * scale);\r\n    ctx.bezierCurveTo(163.01138305664062 * scale, 377.2216033935547 * scale, 168.01138305664062 * scale, 378.2216033935547 * scale, 187.01138305664062 * scale, 387.2216033935547 * scale);\r\n    ctx.bezierCurveTo(206.01138305664062 * scale, 395.2216033935547 * scale, 208.01138305664062 * scale, 398.2216033935547 * scale, 207.01138305664062 * scale, 405.2216033935547 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[2], 12 * scale);\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(0, 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(130.01138305664062 * scale, 375.2216033935547 * scale);\r\n    ctx.bezierCurveTo(109.51138305664062 * scale, 400.7216033935547 * scale, 109.51138305664062 * scale, 400.7216033935547 * scale, 89.01138305664062 * scale, 426.2216033935547 * scale);\r\n    ctx.bezierCurveTo(82.01138305664062 * scale, 435.2216033935547 * scale, 77.01138305664062 * scale, 435.2216033935547 * scale, 62.011383056640625 * scale, 417.2216033935547 * scale);\r\n    ctx.bezierCurveTo(43.011383056640625 * scale, 397.2216033935547 * scale, 47.011383056640625 * scale, 395.2216033935547 * scale, 62.011383056640625 * scale, 382.2216033935547 * scale);\r\n    ctx.bezierCurveTo(84.01138305664062 * scale, 366.7216033935547 * scale, 84.01138305664062 * scale, 366.7216033935547 * scale, 106.01138305664062 * scale, 351.2216033935547 * scale);\r\n    ctx.bezierCurveTo(116.01138305664062 * scale, 344.2216033935547 * scale, 120.01138305664062 * scale, 347.2216033935547 * scale, 127.01138305664062 * scale, 356.2216033935547 * scale);\r\n    ctx.bezierCurveTo(137.01138305664062 * scale, 366.2216033935547 * scale, 137.01138305664062 * scale, 366.2216033935547 * scale, 131.01138305664062 * scale, 376.2216033935547 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[0], 12 * scale);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(0, -5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(130.01138305664062 * scale, 375.2216033935547 * scale);\r\n    ctx.bezierCurveTo(109.51138305664062 * scale, 400.7216033935547 * scale, 109.51138305664062 * scale, 400.7216033935547 * scale, 89.01138305664062 * scale, 426.2216033935547 * scale);\r\n    ctx.bezierCurveTo(82.01138305664062 * scale, 435.2216033935547 * scale, 77.01138305664062 * scale, 435.2216033935547 * scale, 62.011383056640625 * scale, 417.2216033935547 * scale);\r\n    ctx.bezierCurveTo(43.011383056640625 * scale, 397.2216033935547 * scale, 47.011383056640625 * scale, 395.2216033935547 * scale, 62.011383056640625 * scale, 382.2216033935547 * scale);\r\n    ctx.bezierCurveTo(84.01138305664062 * scale, 366.7216033935547 * scale, 84.01138305664062 * scale, 366.7216033935547 * scale, 106.01138305664062 * scale, 351.2216033935547 * scale);\r\n    ctx.bezierCurveTo(116.01138305664062 * scale, 344.2216033935547 * scale, 120.01138305664062 * scale, 347.2216033935547 * scale, 127.01138305664062 * scale, 356.2216033935547 * scale);\r\n    ctx.bezierCurveTo(137.01138305664062 * scale, 366.2216033935547 * scale, 137.01138305664062 * scale, 366.2216033935547 * scale, 131.01138305664062 * scale, 376.2216033935547 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[2], 12 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_sand(scale, useless, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 218 * scale;\r\n    can.height = 185 * scale;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(64 * scale, 53.135406494140625 * scale);\r\n    ctx.bezierCurveTo(92 * scale, 17.135406494140625 * scale, 116 * scale, 11.135406494140625 * scale, 158 * scale, 53.135406494140625 * scale);\r\n    ctx.bezierCurveTo(178 * scale, 74.13540649414062 * scale, 181 * scale, 81.13540649414062 * scale, 196 * scale, 101.13540649414062 * scale);\r\n    ctx.bezierCurveTo(214 * scale, 127.13540649414062 * scale, 192 * scale, 138.13540649414062 * scale, 173 * scale, 149.13540649414062 * scale);\r\n    ctx.bezierCurveTo(137 * scale, 166.13540649414062 * scale, 74 * scale, 170.13540649414062 * scale, 36 * scale, 141.13540649414062 * scale);\r\n    ctx.bezierCurveTo(13 * scale, 127.13540649414062 * scale, 20 * scale, 119.13540649414062 * scale, 30 * scale, 103.13540649414062 * scale);\r\n    ctx.bezierCurveTo(48 * scale, 71.13540649414062 * scale, 54 * scale, 67.13540649414062 * scale, 63 * scale, 54.135406494140625 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[1], 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(107 * scale, 25.135406494140625 * scale);\r\n    ctx.bezierCurveTo(62 * scale, 90.13540649414062 * scale, 54 * scale, 129.13540649414062 * scale, 53 * scale, 151.13540649414062 * scale);\r\n    ctx.bezierCurveTo(39.5 * scale, 142.13540649414062 * scale, 39.5 * scale, 142.13540649414062 * scale, 26 * scale, 133.13540649414062 * scale);\r\n    ctx.bezierCurveTo(23.5 * scale, 128.63540649414062 * scale, 23.5 * scale, 128.63540649414062 * scale, 21 * scale, 124.13540649414062 * scale);\r\n    ctx.bezierCurveTo(22 * scale, 113.13540649414062 * scale, 31 * scale, 99.13540649414062 * scale, 40 * scale, 88.13540649414062 * scale);\r\n    ctx.bezierCurveTo(54.5 * scale, 67.13540649414062 * scale, 54.5 * scale, 67.13540649414062 * scale, 69 * scale, 46.135406494140625 * scale);\r\n    ctx.bezierCurveTo(80.5 * scale, 36.635406494140625 * scale, 80.5 * scale, 36.635406494140625 * scale, 92 * scale, 27.135406494140625 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1]);\r\n    return can;\r\n}\r\n;\r\nfunction create_ice(scale, useless, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 167 * scale;\r\n    can.height = 136 * scale;\r\n    ctx.globalAlpha = 0.5;\r\n    ctx.save();\r\n    ctx.translate(76.71426391601562 * scale, 67.85713195800781 * scale);\r\n    round_rect(ctx, -57.5 * scale, -54.5 * scale, 115 * scale, 109 * scale, 15 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 0.8;\r\n    ctx.save();\r\n    ctx.translate(76.71426391601562 * scale, 67.85713195800781 * scale);\r\n    round_rect(ctx, -57.5 * scale, -54.5 * scale, 115 * scale, 109 * scale, 15 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, undefined, color[1], 7 * scale);\r\n    ctx.globalAlpha = 0.5;\r\n    ctx.save();\r\n    ctx.translate(91.21426391601562 * scale, 67.35713195800781 * scale);\r\n    round_rect(ctx, -56 * scale, -55 * scale, 115 * scale, 109 * scale, 15 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.save();\r\n    ctx.translate(91.21426391601562 * scale, 67.35713195800781 * scale);\r\n    round_rect(ctx, -56 * scale, -55 * scale, 115 * scale, 109 * scale, 15 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, undefined, color[1], 7 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(131.21426391601562 * scale, 70.35713195800781 * scale);\r\n    ctx.bezierCurveTo(133.21426391601562 * scale, 95.35713195800781 * scale, 128.21426391601562 * scale, 109.35713195800781 * scale, 108.21426391601562 * scale, 108.35713195800781 * scale);\r\n    fill_path(ctx, undefined, color[1], 10 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_plot(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 163 * scale;\r\n    can.height = 163 * scale;\r\n    ctx.save();\r\n    ctx.translate(82.5 * scale, 81.1015625 * scale);\r\n    ctx.rotate(0);\r\n    round_rect(ctx, -65.5 * scale, -66 * scale, 131 * scale, 131 * scale, 5 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[1]);\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(5 * scale, 5 * scale);\r\n    ctx.save();\r\n    ctx.translate(80 * scale, 17.1015625 * scale);\r\n    round_rect(ctx, -64 * scale, -4.5 * scale, 129 * scale, 9 * scale, 5 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(-5 * scale, -5 * scale);\r\n    ctx.save();\r\n    ctx.translate(80 * scale, 17.1015625 * scale);\r\n    round_rect(ctx, -64 * scale, -4.5 * scale, 129 * scale, 9 * scale, 5 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[2], color[3], 3 * scale);\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(5 * scale, 5 * scale);\r\n    ctx.save();\r\n    ctx.translate(145.5 * scale, 83.6015625 * scale);\r\n    round_rect(ctx, -4.5 * scale, -61 * scale, 9 * scale, 129 * scale, 5 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(-5 * scale, -5 * scale);\r\n    ctx.save();\r\n    ctx.translate(145.5 * scale, 83.6015625 * scale);\r\n    round_rect(ctx, -4.5 * scale, -61 * scale, 9 * scale, 129 * scale, 5 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[2], color[3], 3 * scale);\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(5 * scale, 5 * scale);\r\n    ctx.save();\r\n    ctx.translate(17.5 * scale, 82.6015625 * scale);\r\n    round_rect(ctx, -4.5 * scale, -65 * scale, 9 * scale, 129 * scale, 5 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(-5 * scale, -5 * scale);\r\n    ctx.save();\r\n    ctx.translate(17.5 * scale, 82.6015625 * scale);\r\n    round_rect(ctx, -4.5 * scale, -65 * scale, 9 * scale, 129 * scale, 5 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[2], color[3], 3 * scale);\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(5 * scale, 5 * scale);\r\n    ctx.save();\r\n    ctx.translate(80.5 * scale, 145.6015625 * scale);\r\n    round_rect(ctx, -65.5 * scale, -4 * scale, 129 * scale, 9 * scale, 5 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(-5 * scale, -5 * scale);\r\n    ctx.save();\r\n    ctx.translate(80.5 * scale, 145.6015625 * scale);\r\n    round_rect(ctx, -65.5 * scale, -4 * scale, 129 * scale, 9 * scale, 5 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[2], color[3], 3 * scale);\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(5 * scale, 5 * scale);\r\n    ctx.save();\r\n    ctx.translate(17 * scale, 18.1015625 * scale);\r\n    round_rect(ctx, -11 * scale, -11.5 * scale, 22 * scale, 22 * scale, 5 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(-5 * scale, -5 * scale);\r\n    ctx.save();\r\n    ctx.translate(17 * scale, 18.1015625 * scale);\r\n    round_rect(ctx, -11 * scale, -11.5 * scale, 22 * scale, 22 * scale, 5 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[2], color[3], 3 * scale);\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(5 * scale, 5 * scale);\r\n    ctx.save();\r\n    ctx.translate(145.5 * scale, 16.6015625 * scale);\r\n    round_rect(ctx, -10.5 * scale, -11.5 * scale, 21 * scale, 22 * scale, 5 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(-5 * scale, -5 * scale);\r\n    ctx.save();\r\n    ctx.translate(145.5 * scale, 16.6015625 * scale);\r\n    round_rect(ctx, -10.5 * scale, -11.5 * scale, 21 * scale, 22 * scale, 5 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[2], color[3], 3 * scale);\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(5 * scale, 5 * scale);\r\n    ctx.save();\r\n    ctx.translate(145.5 * scale, 144.1015625 * scale);\r\n    round_rect(ctx, -10.5 * scale, -11 * scale, 22 * scale, 22 * scale, 5 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(-5 * scale, -5 * scale);\r\n    ctx.save();\r\n    ctx.translate(145.5 * scale, 144.1015625 * scale);\r\n    round_rect(ctx, -10.5 * scale, -11 * scale, 22 * scale, 22 * scale, 5 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[2], color[3], 3 * scale);\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(5 * scale, 5 * scale);\r\n    ctx.save();\r\n    ctx.translate(17.5 * scale, 145.1015625 * scale);\r\n    round_rect(ctx, -11.5 * scale, -12 * scale, 22 * scale, 22 * scale, 5 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(-5 * scale, -5 * scale);\r\n    ctx.save();\r\n    ctx.translate(17.5 * scale, 145.1015625 * scale);\r\n    round_rect(ctx, -11.5 * scale, -12 * scale, 22 * scale, 22 * scale, 5 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[2], color[3], 3 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_watering_can(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 168 * scale;\r\n    can.height = 100 * scale;\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(10 * scale, 5 * scale);\r\n    ctx.save();\r\n    ctx.translate(24.5 * scale, 44.30000305175781 * scale);\r\n    round_rect(ctx, -19.5 * scale, -8.5 * scale, 39 * scale, 17 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(115 * scale, 37.80000305175781 * scale);\r\n    ctx.bezierCurveTo(142 * scale, 37.80000305175781 * scale, 140 * scale, 37.80000305175781 * scale, 141 * scale, 37.80000305175781 * scale);\r\n    ctx.bezierCurveTo(147 * scale, 28.800003051757812 * scale, 149 * scale, 26.800003051757812 * scale, 153 * scale, 32.80000305175781 * scale);\r\n    ctx.bezierCurveTo(160 * scale, 42.80000305175781 * scale, 157 * scale, 50.80000305175781 * scale, 153 * scale, 58.80000305175781 * scale);\r\n    ctx.bezierCurveTo(148 * scale, 62.80000305175781 * scale, 147 * scale, 59.80000305175781 * scale, 143 * scale, 52.80000305175781 * scale);\r\n    ctx.bezierCurveTo(129 * scale, 52.80000305175781 * scale, 129 * scale, 52.80000305175781 * scale, 115 * scale, 52.80000305175781 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    circle(ctx, 78 * scale, 44.80000305175781 * scale, 39.44616584663204 * scale);\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(-10 * scale, -5 * scale);\r\n    ctx.save();\r\n    ctx.translate(24.5 * scale, 44.30000305175781 * scale);\r\n    round_rect(ctx, -19.5 * scale, -8.5 * scale, 39 * scale, 17 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, undefined, color[3], 6 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(115 * scale, 37.80000305175781 * scale);\r\n    ctx.bezierCurveTo(142 * scale, 37.80000305175781 * scale, 140 * scale, 37.80000305175781 * scale, 141 * scale, 37.80000305175781 * scale);\r\n    ctx.bezierCurveTo(147 * scale, 28.800003051757812 * scale, 149 * scale, 26.800003051757812 * scale, 153 * scale, 32.80000305175781 * scale);\r\n    ctx.bezierCurveTo(160 * scale, 42.80000305175781 * scale, 157 * scale, 50.80000305175781 * scale, 153 * scale, 58.80000305175781 * scale);\r\n    ctx.bezierCurveTo(148 * scale, 62.80000305175781 * scale, 147 * scale, 59.80000305175781 * scale, 143 * scale, 52.80000305175781 * scale);\r\n    ctx.bezierCurveTo(129 * scale, 52.80000305175781 * scale, 129 * scale, 52.80000305175781 * scale, 115 * scale, 52.80000305175781 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[3], 6 * scale);\r\n    circle(ctx, 78 * scale, 44.80000305175781 * scale, 42.44616584663204 * scale);\r\n    fill_path(ctx, undefined, color[3], 6 * scale);\r\n    ctx.save();\r\n    ctx.translate(24.5 * scale, 44.30000305175781 * scale);\r\n    round_rect(ctx, -19.5 * scale, -8.5 * scale, 39 * scale, 17 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[1]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(115 * scale, 37.80000305175781 * scale);\r\n    ctx.bezierCurveTo(142 * scale, 37.80000305175781 * scale, 140 * scale, 37.80000305175781 * scale, 141 * scale, 37.80000305175781 * scale);\r\n    ctx.bezierCurveTo(147 * scale, 28.800003051757812 * scale, 149 * scale, 26.800003051757812 * scale, 153 * scale, 32.80000305175781 * scale);\r\n    ctx.bezierCurveTo(160 * scale, 42.80000305175781 * scale, 157 * scale, 50.80000305175781 * scale, 153 * scale, 58.80000305175781 * scale);\r\n    ctx.bezierCurveTo(148 * scale, 62.80000305175781 * scale, 147 * scale, 59.80000305175781 * scale, 143 * scale, 52.80000305175781 * scale);\r\n    ctx.bezierCurveTo(129 * scale, 52.80000305175781 * scale, 129 * scale, 52.80000305175781 * scale, 115 * scale, 52.80000305175781 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1]);\r\n    circle(ctx, 78 * scale, 44.80000305175781 * scale, 39.44616584663204 * scale);\r\n    fill_path(ctx, color[2], color[1], 4 * scale);\r\n    circle(ctx, 78 * scale, 44.80000305175781 * scale, 29.68164415931166 * scale);\r\n    fill_path(ctx, color[3], color[1], 4 * scale);\r\n    circle(ctx, 78 * scale, 44 * scale, 20 * scale);\r\n    fill_path(ctx, color[4]);\r\n    return can;\r\n}\r\n;\r\nfunction create_pirahna(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 158 * scale;\r\n    can.height = 201 * scale;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(96.5 * scale, 76.421875 * scale);\r\n    ctx.bezierCurveTo(100.5 * scale, 64.421875 * scale, 103.5 * scale, 62.421875 * scale, 110.5 * scale, 65.421875 * scale);\r\n    ctx.bezierCurveTo(116.5 * scale, 66.421875 * scale, 117.5 * scale, 67.421875 * scale, 112.5 * scale, 73.421875 * scale);\r\n    ctx.bezierCurveTo(107 * scale, 79.921875 * scale, 107 * scale, 79.921875 * scale, 101.5 * scale, 86.421875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[8], color[8], 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(61.5 * scale, 78.421875 * scale);\r\n    ctx.bezierCurveTo(57.5 * scale, 73.421875 * scale, 51.5 * scale, 66.421875 * scale, 45.5 * scale, 68.421875 * scale);\r\n    ctx.bezierCurveTo(32.5 * scale, 73.421875 * scale, 38.5 * scale, 75.421875 * scale, 46.5 * scale, 81.421875 * scale);\r\n    ctx.bezierCurveTo(51.5 * scale, 84.921875 * scale, 51.5 * scale, 84.921875 * scale, 56.5 * scale, 88.421875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[8], color[8], 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(116.5 * scale, 127.421875 * scale);\r\n    ctx.bezierCurveTo(124.5 * scale, 108.421875 * scale, 129.5 * scale, 104.421875 * scale, 141.5 * scale, 107.421875 * scale);\r\n    ctx.bezierCurveTo(156.5 * scale, 112.421875 * scale, 153.5 * scale, 113.421875 * scale, 132.5 * scale, 134.421875 * scale);\r\n    ctx.bezierCurveTo(123.5 * scale, 141.921875 * scale, 123.5 * scale, 141.921875 * scale, 114.5 * scale, 149.421875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[8], color[8], 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(41.5 * scale, 134.421875 * scale);\r\n    ctx.bezierCurveTo(30.5 * scale, 119.421875 * scale, 25.5 * scale, 111.421875 * scale, 12.5 * scale, 115.421875 * scale);\r\n    ctx.bezierCurveTo(4.5 * scale, 120.421875 * scale, 4.5 * scale, 121.421875 * scale, 26.5 * scale, 142.421875 * scale);\r\n    ctx.bezierCurveTo(35 * scale, 149.921875 * scale, 35 * scale, 149.921875 * scale, 43.5 * scale, 157.421875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[8], color[8], 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(78.5 * scale, 51.921875 * scale);\r\n    ctx.bezierCurveTo(99.5 * scale, 75.921875 * scale, 110.5 * scale, 96.921875 * scale, 118.5 * scale, 120.921875 * scale);\r\n    ctx.bezierCurveTo(121.5 * scale, 140.921875 * scale, 107.5 * scale, 179.921875 * scale, 75.5 * scale, 183.921875 * scale);\r\n    ctx.bezierCurveTo(30.5 * scale, 169.921875 * scale, 37.5 * scale, 131.921875 * scale, 34.5 * scale, 120.921875 * scale);\r\n    ctx.bezierCurveTo(41.5 * scale, 89.921875 * scale, 61.5 * scale, 67.921875 * scale, 78.5 * scale, 51.921875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[8], color[8], 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(72.5 * scale, 72.421875 * scale);\r\n    ctx.bezierCurveTo(76.5 * scale, 79.421875 * scale, 79.5 * scale, 80.421875 * scale, 83.5 * scale, 73.421875 * scale);\r\n    ctx.bezierCurveTo(80.5 * scale, 96.921875 * scale, 79.5 * scale, 114.421875 * scale, 77.5 * scale, 120.421875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[8], color[8], 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(42.5 * scale, 163.421875 * scale);\r\n    ctx.bezierCurveTo(62.5 * scale, 185.421875 * scale, 86.5 * scale, 186.421875 * scale, 111.5 * scale, 165.421875 * scale);\r\n    ctx.bezierCurveTo(107.5 * scale, 176.421875 * scale, 95.5 * scale, 187.421875 * scale, 75.5 * scale, 188.421875 * scale);\r\n    ctx.bezierCurveTo(53.5 * scale, 188.421875 * scale, 43.5 * scale, 171.421875 * scale, 42.5 * scale, 164.421875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[8], color[8], 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(79.5 * scale, 61.421875 * scale);\r\n    ctx.bezierCurveTo(88.5 * scale, 31.421875 * scale, 81.5 * scale, 16.421875 * scale, 75.5 * scale, 7.421875 * scale);\r\n    ctx.bezierCurveTo(77.5 * scale, 28.421875 * scale, 77.5 * scale, 37.421875 * scale, 68.5 * scale, 42.421875 * scale);\r\n    ctx.bezierCurveTo(79.5 * scale, 57.421875 * scale, 79.5 * scale, 58.421875 * scale, 80.5 * scale, 61.421875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[8], color[8], 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(72.5 * scale, 72.421875 * scale);\r\n    ctx.bezierCurveTo(76.5 * scale, 79.421875 * scale, 79.5 * scale, 80.421875 * scale, 83.5 * scale, 73.421875 * scale);\r\n    ctx.bezierCurveTo(80.5 * scale, 96.921875 * scale, 79.5 * scale, 114.421875 * scale, 77.5 * scale, 120.421875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[8], color[8], 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(96.5 * scale, 76.421875 * scale);\r\n    ctx.bezierCurveTo(100.5 * scale, 64.421875 * scale, 103.5 * scale, 62.421875 * scale, 110.5 * scale, 65.421875 * scale);\r\n    ctx.bezierCurveTo(116.5 * scale, 66.421875 * scale, 117.5 * scale, 67.421875 * scale, 112.5 * scale, 73.421875 * scale);\r\n    ctx.bezierCurveTo(107 * scale, 79.921875 * scale, 107 * scale, 79.921875 * scale, 101.5 * scale, 86.421875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(61.5 * scale, 78.421875 * scale);\r\n    ctx.bezierCurveTo(57.5 * scale, 73.421875 * scale, 51.5 * scale, 66.421875 * scale, 45.5 * scale, 68.421875 * scale);\r\n    ctx.bezierCurveTo(32.5 * scale, 73.421875 * scale, 38.5 * scale, 75.421875 * scale, 46.5 * scale, 81.421875 * scale);\r\n    ctx.bezierCurveTo(51.5 * scale, 84.921875 * scale, 51.5 * scale, 84.921875 * scale, 56.5 * scale, 88.421875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(116.5 * scale, 127.421875 * scale);\r\n    ctx.bezierCurveTo(124.5 * scale, 108.421875 * scale, 129.5 * scale, 104.421875 * scale, 141.5 * scale, 107.421875 * scale);\r\n    ctx.bezierCurveTo(156.5 * scale, 112.421875 * scale, 153.5 * scale, 113.421875 * scale, 132.5 * scale, 134.421875 * scale);\r\n    ctx.bezierCurveTo(123.5 * scale, 141.921875 * scale, 123.5 * scale, 141.921875 * scale, 114.5 * scale, 149.421875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(41.5 * scale, 134.421875 * scale);\r\n    ctx.bezierCurveTo(30.5 * scale, 119.421875 * scale, 25.5 * scale, 111.421875 * scale, 12.5 * scale, 115.421875 * scale);\r\n    ctx.bezierCurveTo(4.5 * scale, 120.421875 * scale, 4.5 * scale, 121.421875 * scale, 26.5 * scale, 142.421875 * scale);\r\n    ctx.bezierCurveTo(35 * scale, 149.921875 * scale, 35 * scale, 149.921875 * scale, 43.5 * scale, 157.421875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(78.5 * scale, 51.921875 * scale);\r\n    ctx.bezierCurveTo(99.5 * scale, 75.921875 * scale, 110.5 * scale, 96.921875 * scale, 118.5 * scale, 120.921875 * scale);\r\n    ctx.bezierCurveTo(121.5 * scale, 140.921875 * scale, 107.5 * scale, 179.921875 * scale, 75.5 * scale, 183.921875 * scale);\r\n    ctx.bezierCurveTo(30.5 * scale, 169.921875 * scale, 37.5 * scale, 131.921875 * scale, 34.5 * scale, 120.921875 * scale);\r\n    ctx.bezierCurveTo(41.5 * scale, 89.921875 * scale, 61.5 * scale, 67.921875 * scale, 78.5 * scale, 51.921875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[2], 4 * scale);\r\n    circle(ctx, 108.5 * scale, 148.421875 * scale, 9 * scale);\r\n    fill_path(ctx, color[5]);\r\n    circle(ctx, 106.5 * scale, 144.421875 * scale, 3 * scale);\r\n    fill_path(ctx, color[6]);\r\n    circle(ctx, 46.5 * scale, 148.421875 * scale, 9 * scale);\r\n    fill_path(ctx, color[5]);\r\n    circle(ctx, 44.5 * scale, 144.421875 * scale, 3 * scale);\r\n    fill_path(ctx, color[6]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(116.5 * scale, 114.421875 * scale);\r\n    ctx.bezierCurveTo(121.5 * scale, 137.421875 * scale, 118.5 * scale, 133.421875 * scale, 108.5 * scale, 139.421875 * scale);\r\n    ctx.bezierCurveTo(94.5 * scale, 146.421875 * scale, 96.5 * scale, 148.421875 * scale, 95.5 * scale, 152.421875 * scale);\r\n    fill_path(ctx, color[3], color[2], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.translate(0, -2 * scale);\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(35.5 * scale, 131.421875 * scale);\r\n    ctx.bezierCurveTo(36.5 * scale, 140.421875 * scale, 39.5 * scale, 140.421875 * scale, 49.5 * scale, 143.421875 * scale);\r\n    ctx.bezierCurveTo(59.5 * scale, 149.421875 * scale, 57.5 * scale, 151.421875 * scale, 59.5 * scale, 155.421875 * scale);\r\n    fill_path(ctx, color[3], color[2], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(84.5 * scale, 57.421875 * scale);\r\n    ctx.bezierCurveTo(101.5 * scale, 120.421875 * scale, 92.5 * scale, 127.421875 * scale, 78.5 * scale, 134.421875 * scale);\r\n    ctx.bezierCurveTo(51.5 * scale, 131.421875 * scale, 63.5 * scale, 102.421875 * scale, 70.5 * scale, 59.421875 * scale);\r\n    ctx.bezierCurveTo(75 * scale, 55.421875 * scale, 78.5 * scale, 52.421875 * scale, 79.5 * scale, 51.421875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(79.5 * scale, 61.421875 * scale);\r\n    ctx.bezierCurveTo(88.5 * scale, 31.421875 * scale, 81.5 * scale, 16.421875 * scale, 75.5 * scale, 7.421875 * scale);\r\n    ctx.bezierCurveTo(77.5 * scale, 28.421875 * scale, 77.5 * scale, 37.421875 * scale, 68.5 * scale, 42.421875 * scale);\r\n    ctx.bezierCurveTo(79.5 * scale, 57.421875 * scale, 79.5 * scale, 58.421875 * scale, 80.5 * scale, 61.421875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[2], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(72.5 * scale, 72.421875 * scale);\r\n    ctx.bezierCurveTo(76.5 * scale, 79.421875 * scale, 79.5 * scale, 80.421875 * scale, 83.5 * scale, 73.421875 * scale);\r\n    ctx.bezierCurveTo(80.5 * scale, 96.921875 * scale, 79.5 * scale, 114.421875 * scale, 77.5 * scale, 120.421875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[2], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(87.5 * scale, 154.421875 * scale);\r\n    ctx.bezierCurveTo(93.5 * scale, 163.921875 * scale, 93.5 * scale, 163.921875 * scale, 99.5 * scale, 173.421875 * scale);\r\n    ctx.bezierCurveTo(95 * scale, 177.421875 * scale, 95 * scale, 177.421875 * scale, 90.5 * scale, 181.421875 * scale);\r\n    ctx.bezierCurveTo(89 * scale, 167.921875 * scale, 89 * scale, 167.921875 * scale, 87.5 * scale, 154.421875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[6], color[7], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(81.5 * scale, 164.421875 * scale);\r\n    ctx.bezierCurveTo(84 * scale, 172.921875 * scale, 84 * scale, 172.921875 * scale, 86.5 * scale, 181.421875 * scale);\r\n    ctx.bezierCurveTo(82.5 * scale, 182.421875 * scale, 82.5 * scale, 182.421875 * scale, 78.5 * scale, 183.421875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[6], color[7], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(72.5 * scale, 164.421875 * scale);\r\n    ctx.bezierCurveTo(73.5 * scale, 173.921875 * scale, 73.5 * scale, 173.921875 * scale, 74.5 * scale, 183.421875 * scale);\r\n    ctx.bezierCurveTo(70.5 * scale, 182.921875 * scale, 70.5 * scale, 182.921875 * scale, 66.5 * scale, 182.421875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[6], color[7], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(65.5 * scale, 156.421875 * scale);\r\n    ctx.bezierCurveTo(65 * scale, 168.421875 * scale, 65 * scale, 168.421875 * scale, 64.5 * scale, 180.421875 * scale);\r\n    ctx.bezierCurveTo(58.5 * scale, 177.421875 * scale, 58.5 * scale, 177.421875 * scale, 52.5 * scale, 174.421875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[6], color[7], 2 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(42.5 * scale, 163.421875 * scale);\r\n    ctx.bezierCurveTo(62.5 * scale, 185.421875 * scale, 86.5 * scale, 186.421875 * scale, 111.5 * scale, 165.421875 * scale);\r\n    ctx.bezierCurveTo(107.5 * scale, 176.421875 * scale, 95.5 * scale, 187.421875 * scale, 75.5 * scale, 188.421875 * scale);\r\n    ctx.bezierCurveTo(53.5 * scale, 188.421875 * scale, 43.5 * scale, 171.421875 * scale, 42.5 * scale, 164.421875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[2], 4 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_hurt_pirahna(scale, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 158 * scale;\r\n    can.height = 201 * scale;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(96.5 * scale, 76.421875 * scale);\r\n    ctx.bezierCurveTo(100.5 * scale, 64.421875 * scale, 103.5 * scale, 62.421875 * scale, 110.5 * scale, 65.421875 * scale);\r\n    ctx.bezierCurveTo(116.5 * scale, 66.421875 * scale, 117.5 * scale, 67.421875 * scale, 112.5 * scale, 73.421875 * scale);\r\n    ctx.bezierCurveTo(107 * scale, 79.921875 * scale, 107 * scale, 79.921875 * scale, 101.5 * scale, 86.421875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[0], 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(61.5 * scale, 78.421875 * scale);\r\n    ctx.bezierCurveTo(57.5 * scale, 73.421875 * scale, 51.5 * scale, 66.421875 * scale, 45.5 * scale, 68.421875 * scale);\r\n    ctx.bezierCurveTo(32.5 * scale, 73.421875 * scale, 38.5 * scale, 75.421875 * scale, 46.5 * scale, 81.421875 * scale);\r\n    ctx.bezierCurveTo(51.5 * scale, 84.921875 * scale, 51.5 * scale, 84.921875 * scale, 56.5 * scale, 88.421875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[0], 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(116.5 * scale, 127.421875 * scale);\r\n    ctx.bezierCurveTo(124.5 * scale, 108.421875 * scale, 129.5 * scale, 104.421875 * scale, 141.5 * scale, 107.421875 * scale);\r\n    ctx.bezierCurveTo(156.5 * scale, 112.421875 * scale, 153.5 * scale, 113.421875 * scale, 132.5 * scale, 134.421875 * scale);\r\n    ctx.bezierCurveTo(123.5 * scale, 141.921875 * scale, 123.5 * scale, 141.921875 * scale, 114.5 * scale, 149.421875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[0], 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(41.5 * scale, 134.421875 * scale);\r\n    ctx.bezierCurveTo(30.5 * scale, 119.421875 * scale, 25.5 * scale, 111.421875 * scale, 12.5 * scale, 115.421875 * scale);\r\n    ctx.bezierCurveTo(4.5 * scale, 120.421875 * scale, 4.5 * scale, 121.421875 * scale, 26.5 * scale, 142.421875 * scale);\r\n    ctx.bezierCurveTo(35 * scale, 149.921875 * scale, 35 * scale, 149.921875 * scale, 43.5 * scale, 157.421875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[0], 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(78.5 * scale, 51.921875 * scale);\r\n    ctx.bezierCurveTo(99.5 * scale, 75.921875 * scale, 110.5 * scale, 96.921875 * scale, 118.5 * scale, 120.921875 * scale);\r\n    ctx.bezierCurveTo(121.5 * scale, 140.921875 * scale, 107.5 * scale, 179.921875 * scale, 75.5 * scale, 183.921875 * scale);\r\n    ctx.bezierCurveTo(30.5 * scale, 169.921875 * scale, 37.5 * scale, 131.921875 * scale, 34.5 * scale, 120.921875 * scale);\r\n    ctx.bezierCurveTo(41.5 * scale, 89.921875 * scale, 61.5 * scale, 67.921875 * scale, 78.5 * scale, 51.921875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[0], 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(72.5 * scale, 72.421875 * scale);\r\n    ctx.bezierCurveTo(76.5 * scale, 79.421875 * scale, 79.5 * scale, 80.421875 * scale, 83.5 * scale, 73.421875 * scale);\r\n    ctx.bezierCurveTo(80.5 * scale, 96.921875 * scale, 79.5 * scale, 114.421875 * scale, 77.5 * scale, 120.421875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[0], 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(42.5 * scale, 163.421875 * scale);\r\n    ctx.bezierCurveTo(62.5 * scale, 185.421875 * scale, 86.5 * scale, 186.421875 * scale, 111.5 * scale, 165.421875 * scale);\r\n    ctx.bezierCurveTo(107.5 * scale, 176.421875 * scale, 95.5 * scale, 187.421875 * scale, 75.5 * scale, 188.421875 * scale);\r\n    ctx.bezierCurveTo(53.5 * scale, 188.421875 * scale, 43.5 * scale, 171.421875 * scale, 42.5 * scale, 164.421875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[0], 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(79.5 * scale, 61.421875 * scale);\r\n    ctx.bezierCurveTo(88.5 * scale, 31.421875 * scale, 81.5 * scale, 16.421875 * scale, 75.5 * scale, 7.421875 * scale);\r\n    ctx.bezierCurveTo(77.5 * scale, 28.421875 * scale, 77.5 * scale, 37.421875 * scale, 68.5 * scale, 42.421875 * scale);\r\n    ctx.bezierCurveTo(79.5 * scale, 57.421875 * scale, 79.5 * scale, 58.421875 * scale, 80.5 * scale, 61.421875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[0], 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(72.5 * scale, 72.421875 * scale);\r\n    ctx.bezierCurveTo(76.5 * scale, 79.421875 * scale, 79.5 * scale, 80.421875 * scale, 83.5 * scale, 73.421875 * scale);\r\n    ctx.bezierCurveTo(80.5 * scale, 96.921875 * scale, 79.5 * scale, 114.421875 * scale, 77.5 * scale, 120.421875 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[0], 10 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_flour(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 400 * scale;\r\n    can.height = 170 * scale;\r\n    ctx.translate(0, -170 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(159.5 * scale, 322.0625 * scale);\r\n    ctx.bezierCurveTo(240.5 * scale, 293.0625 * scale, 240.5 * scale, 293.0625 * scale, 321.5 * scale, 264.0625 * scale);\r\n    ctx.bezierCurveTo(276.5 * scale, 230.0625 * scale, 276.5 * scale, 230.0625 * scale, 231.5 * scale, 196.0625 * scale);\r\n    ctx.bezierCurveTo(158.5 * scale, 221.5625 * scale, 158.5 * scale, 221.5625 * scale, 85.5 * scale, 247.0625 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[1], 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(212.5 * scale, 270.0625 * scale);\r\n    ctx.bezierCurveTo(235 * scale, 261.5625 * scale, 235 * scale, 261.5625 * scale, 257.5 * scale, 253.0625 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[0], 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(193.5 * scale, 226.0625 * scale);\r\n    ctx.bezierCurveTo(204.5 * scale, 242.0625 * scale, 242.5 * scale, 237.0625 * scale, 251.5 * scale, 225.0625 * scale);\r\n    ctx.bezierCurveTo(246.5 * scale, 195.0625 * scale, 205.5 * scale, 190.0625 * scale, 193.5 * scale, 227.0625 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2], color[3], 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(164.5 * scale, 245.0625 * scale);\r\n    ctx.bezierCurveTo(182.5 * scale, 264.0625 * scale, 252.5 * scale, 258.0625 * scale, 276.5 * scale, 244.0625 * scale);\r\n    ctx.bezierCurveTo(265.5 * scale, 226.0625 * scale, 244.5 * scale, 231.0625 * scale, 229.5 * scale, 230.0625 * scale);\r\n    ctx.bezierCurveTo(205.5 * scale, 227.0625 * scale, 175.5 * scale, 202.0625 * scale, 162.5 * scale, 244.0625 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2], color[3], 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(115.5 * scale, 260.0625 * scale);\r\n    ctx.bezierCurveTo(134.5 * scale, 279.0625 * scale, 170.5 * scale, 275.0625 * scale, 191.5 * scale, 257.0625 * scale);\r\n    ctx.bezierCurveTo(174.5 * scale, 208.0625 * scale, 142.5 * scale, 197.0625 * scale, 116.5 * scale, 259.0625 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2], color[3], 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(152.5 * scale, 278.0625 * scale);\r\n    ctx.bezierCurveTo(165.5 * scale, 294.0625 * scale, 200.5 * scale, 287.0625 * scale, 216.5 * scale, 278.0625 * scale);\r\n    ctx.bezierCurveTo(206.5 * scale, 247.0625 * scale, 173.5 * scale, 233.0625 * scale, 153.5 * scale, 276.0625 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2], color[3], 12 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_leaderboard_mobile(scale) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    var w = 200 * scale;\r\n    var h = 180 * scale;\r\n    var r = 8 * scale;\r\n    can.width = w;\r\n    can.height = h;\r\n    ctx.beginPath();\r\n    round_rect(ctx, 0, 0, w, h - r, r);\r\n    ctx.globalAlpha = 0.8;\r\n    fill_path(ctx, \"#1D6055\");\r\n    ctx.globalAlpha = 1;\r\n    var text = create_text(scale, \"Leaderboard\", 25, \"#FFF\");\r\n    ctx.drawImage(text, (w - text.width) / 2, scale * 5);\r\n    return can;\r\n}\r\n;\r\nfunction create_leaderboard(scale) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    var w = 200 * scale;\r\n    var h = 270 * scale;\r\n    var r = 8 * scale;\r\n    can.width = w;\r\n    can.height = h + 20;\r\n    ctx.beginPath();\r\n    round_rect(ctx, 0, 0, w, h - r, r);\r\n    ctx.globalAlpha = 0.5;\r\n    fill_path(ctx, \"#1D6055\");\r\n    ctx.globalAlpha = 1;\r\n    var text = create_text(scale, \"Leaderboard\", 25, \"#FFF\");\r\n    ctx.drawImage(text, (w - text.width) / 2, scale * 5);\r\n    return can;\r\n}\r\n;\r\nfunction create_pumpkin(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 272 * scale;\r\n    can.height = 264 * scale;\r\n    ctx.translate(0, 20 * scale);\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(56.999969482421875 * scale, 84.517333984375 * scale);\r\n    ctx.bezierCurveTo(61.999969482421875 * scale, 58.517333984375 * scale, 79.99996948242188 * scale, 50.517333984375 * scale, 102.99996948242188 * scale, 50.517333984375 * scale);\r\n    ctx.bezierCurveTo(119.99996948242188 * scale, 26.517333984375 * scale, 137.99996948242188 * scale, 32.517333984375 * scale, 156.99996948242188 * scale, 44.517333984375 * scale);\r\n    ctx.bezierCurveTo(187.99996948242188 * scale, 42.517333984375 * scale, 195.99996948242188 * scale, 50.517333984375 * scale, 202.99996948242188 * scale, 77.517333984375 * scale);\r\n    ctx.bezierCurveTo(229.99996948242188 * scale, 80.517333984375 * scale, 231.99996948242188 * scale, 96.517333984375 * scale, 229.99996948242188 * scale, 118.517333984375 * scale);\r\n    ctx.bezierCurveTo(241.99996948242188 * scale, 147.517333984375 * scale, 236.99996948242188 * scale, 148.517333984375 * scale, 220.99996948242188 * scale, 165.517333984375 * scale);\r\n    ctx.bezierCurveTo(222.99996948242188 * scale, 192.517333984375 * scale, 209.99996948242188 * scale, 212.517333984375 * scale, 177.99996948242188 * scale, 213.517333984375 * scale);\r\n    ctx.bezierCurveTo(159.99996948242188 * scale, 234.517333984375 * scale, 141.99996948242188 * scale, 234.517333984375 * scale, 116.99996948242188 * scale, 222.517333984375 * scale);\r\n    ctx.bezierCurveTo(72.99996948242188 * scale, 226.517333984375 * scale, 66.99996948242188 * scale, 207.517333984375 * scale, 65.99996948242188 * scale, 190.517333984375 * scale);\r\n    ctx.bezierCurveTo(35.999969482421875 * scale, 180.517333984375 * scale, 30.999969482421875 * scale, 162.517333984375 * scale, 39.999969482421875 * scale, 135.517333984375 * scale);\r\n    ctx.bezierCurveTo(23.999969482421875 * scale, 110.517333984375 * scale, 43.999969482421875 * scale, 90.517333984375 * scale, 55.999969482421875 * scale, 85.517333984375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.translate(0, -20 * scale);\r\n    ctx.globalAlpha = 1;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(56.999969482421875 * scale, 84.517333984375 * scale);\r\n    ctx.bezierCurveTo(61.999969482421875 * scale, 58.517333984375 * scale, 79.99996948242188 * scale, 50.517333984375 * scale, 102.99996948242188 * scale, 50.517333984375 * scale);\r\n    ctx.bezierCurveTo(119.99996948242188 * scale, 26.517333984375 * scale, 137.99996948242188 * scale, 32.517333984375 * scale, 156.99996948242188 * scale, 44.517333984375 * scale);\r\n    ctx.bezierCurveTo(187.99996948242188 * scale, 42.517333984375 * scale, 195.99996948242188 * scale, 50.517333984375 * scale, 202.99996948242188 * scale, 77.517333984375 * scale);\r\n    ctx.bezierCurveTo(229.99996948242188 * scale, 80.517333984375 * scale, 231.99996948242188 * scale, 96.517333984375 * scale, 229.99996948242188 * scale, 118.517333984375 * scale);\r\n    ctx.bezierCurveTo(241.99996948242188 * scale, 147.517333984375 * scale, 236.99996948242188 * scale, 148.517333984375 * scale, 220.99996948242188 * scale, 165.517333984375 * scale);\r\n    ctx.bezierCurveTo(222.99996948242188 * scale, 192.517333984375 * scale, 209.99996948242188 * scale, 212.517333984375 * scale, 177.99996948242188 * scale, 213.517333984375 * scale);\r\n    ctx.bezierCurveTo(159.99996948242188 * scale, 234.517333984375 * scale, 141.99996948242188 * scale, 234.517333984375 * scale, 116.99996948242188 * scale, 222.517333984375 * scale);\r\n    ctx.bezierCurveTo(72.99996948242188 * scale, 226.517333984375 * scale, 66.99996948242188 * scale, 207.517333984375 * scale, 65.99996948242188 * scale, 190.517333984375 * scale);\r\n    ctx.bezierCurveTo(35.999969482421875 * scale, 180.517333984375 * scale, 30.999969482421875 * scale, 162.517333984375 * scale, 39.999969482421875 * scale, 135.517333984375 * scale);\r\n    ctx.bezierCurveTo(23.999969482421875 * scale, 110.517333984375 * scale, 43.999969482421875 * scale, 90.517333984375 * scale, 55.999969482421875 * scale, 85.517333984375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(123.99996948242188 * scale, 116.18402099609375 * scale);\r\n    ctx.bezierCurveTo(115.99996948242188 * scale, 99.18402099609375 * scale, 109.99996948242188 * scale, 74.18402099609375 * scale, 109.99996948242188 * scale, 63.18402099609375 * scale);\r\n    ctx.bezierCurveTo(115.99996948242188 * scale, 69.18402099609375 * scale, 125.99996948242188 * scale, 87.18402099609375 * scale, 137.99996948242188 * scale, 112.18402099609375 * scale);\r\n    ctx.bezierCurveTo(142.99996948242188 * scale, 84.18402099609375 * scale, 143.99996948242188 * scale, 76.18402099609375 * scale, 153.99996948242188 * scale, 62.18402099609375 * scale);\r\n    ctx.bezierCurveTo(155.99996948242188 * scale, 79.18402099609375 * scale, 149.99996948242188 * scale, 110.18402099609375 * scale, 151.99996948242188 * scale, 117.18402099609375 * scale);\r\n    ctx.bezierCurveTo(162.99996948242188 * scale, 104.18402099609375 * scale, 180.99996948242188 * scale, 91.18402099609375 * scale, 191.99996948242188 * scale, 91.18402099609375 * scale);\r\n    ctx.bezierCurveTo(185.99996948242188 * scale, 102.18402099609375 * scale, 180.99996948242188 * scale, 106.18402099609375 * scale, 160.99996948242188 * scale, 124.18402099609375 * scale);\r\n    ctx.bezierCurveTo(190.99996948242188 * scale, 121.18402099609375 * scale, 199.99996948242188 * scale, 120.18402099609375 * scale, 207.99996948242188 * scale, 123.18402099609375 * scale);\r\n    ctx.bezierCurveTo(199.99996948242188 * scale, 129.18402099609375 * scale, 181.99996948242188 * scale, 132.18402099609375 * scale, 160.99996948242188 * scale, 135.18402099609375 * scale);\r\n    ctx.bezierCurveTo(179.99996948242188 * scale, 142.18402099609375 * scale, 193.99996948242188 * scale, 151.18402099609375 * scale, 196.99996948242188 * scale, 156.18402099609375 * scale);\r\n    ctx.bezierCurveTo(185.99996948242188 * scale, 156.18402099609375 * scale, 163.99996948242188 * scale, 149.18402099609375 * scale, 152.99996948242188 * scale, 147.18402099609375 * scale);\r\n    ctx.bezierCurveTo(157.99996948242188 * scale, 155.18402099609375 * scale, 165.99996948242188 * scale, 176.18402099609375 * scale, 169.99996948242188 * scale, 195.18402099609375 * scale);\r\n    ctx.bezierCurveTo(162.99996948242188 * scale, 190.18402099609375 * scale, 147.99996948242188 * scale, 167.18402099609375 * scale, 139.99996948242188 * scale, 153.18402099609375 * scale);\r\n    ctx.bezierCurveTo(137.99996948242188 * scale, 167.18402099609375 * scale, 126.99996948242188 * scale, 194.18402099609375 * scale, 119.99996948242188 * scale, 204.18402099609375 * scale);\r\n    ctx.bezierCurveTo(117.99996948242188 * scale, 186.18402099609375 * scale, 123.99996948242188 * scale, 165.18402099609375 * scale, 126.99996948242188 * scale, 149.18402099609375 * scale);\r\n    ctx.bezierCurveTo(110.99996948242188 * scale, 163.18402099609375 * scale, 103.99996948242188 * scale, 170.18402099609375 * scale, 82.99996948242188 * scale, 177.18402099609375 * scale);\r\n    ctx.bezierCurveTo(90.99996948242188 * scale, 162.18402099609375 * scale, 99.99996948242188 * scale, 153.18402099609375 * scale, 117.99996948242188 * scale, 140.18402099609375 * scale);\r\n    ctx.bezierCurveTo(97.99996948242188 * scale, 140.18402099609375 * scale, 83.99996948242188 * scale, 139.18402099609375 * scale, 65.99996948242188 * scale, 132.18402099609375 * scale);\r\n    ctx.bezierCurveTo(77.99996948242188 * scale, 127.18402099609375 * scale, 95.99996948242188 * scale, 127.18402099609375 * scale, 115.99996948242188 * scale, 127.18402099609375 * scale);\r\n    ctx.bezierCurveTo(91.99996948242188 * scale, 113.18402099609375 * scale, 84.99996948242188 * scale, 107.18402099609375 * scale, 76.99996948242188 * scale, 96.18402099609375 * scale);\r\n    ctx.bezierCurveTo(94.99996948242188 * scale, 99.18402099609375 * scale, 109.99996948242188 * scale, 109.18402099609375 * scale, 123.99996948242188 * scale, 116.18402099609375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(131.99996948242188 * scale, 119.18402099609375 * scale);\r\n    ctx.bezierCurveTo(141.99996948242188 * scale, 119.18402099609375 * scale, 145.99996948242188 * scale, 116.18402099609375 * scale, 147.99996948242188 * scale, 109.18402099609375 * scale);\r\n    ctx.bezierCurveTo(151.99996948242188 * scale, 107.18402099609375 * scale, 159.99996948242188 * scale, 107.18402099609375 * scale, 156.99996948242188 * scale, 123.18402099609375 * scale);\r\n    ctx.bezierCurveTo(155.99996948242188 * scale, 140.18402099609375 * scale, 142.99996948242188 * scale, 149.18402099609375 * scale, 132.99996948242188 * scale, 147.18402099609375 * scale);\r\n    ctx.bezierCurveTo(119.99996948242188 * scale, 144.18402099609375 * scale, 113.99996948242188 * scale, 122.18402099609375 * scale, 131.99996948242188 * scale, 119.18402099609375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[5], 6 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_brambles(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 247 * scale;\r\n    can.height = 247 * scale;\r\n    ctx.translate(0, 10 * scale);\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(150 * scale, 62 * scale);\r\n    ctx.bezierCurveTo(151.5 * scale, 71.5 * scale, 149 * scale, 70 * scale, 153 * scale, 81 * scale);\r\n    ctx.bezierCurveTo(158 * scale, 73.5 * scale, 158 * scale, 73.5 * scale, 163 * scale, 66 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(164 * scale, 171 * scale);\r\n    ctx.bezierCurveTo(149 * scale, 159 * scale, 156.5 * scale, 165 * scale, 149 * scale, 159 * scale);\r\n    ctx.bezierCurveTo(149 * scale, 167 * scale, 149 * scale, 170 * scale, 152 * scale, 178 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(132 * scale, 95 * scale);\r\n    ctx.bezierCurveTo(154 * scale, 102 * scale, 154 * scale, 126 * scale, 137 * scale, 139 * scale);\r\n    ctx.bezierCurveTo(113 * scale, 152 * scale, 89 * scale, 136 * scale, 80 * scale, 121 * scale);\r\n    ctx.bezierCurveTo(57 * scale, 89 * scale, 69 * scale, 63 * scale, 79 * scale, 52 * scale);\r\n    ctx.bezierCurveTo(110 * scale, 20 * scale, 139 * scale, 21 * scale, 150 * scale, 25 * scale);\r\n    ctx.bezierCurveTo(197 * scale, 36 * scale, 221 * scale, 67 * scale, 226 * scale, 90 * scale);\r\n    ctx.bezierCurveTo(234 * scale, 134 * scale, 214 * scale, 177 * scale, 195 * scale, 197 * scale);\r\n    ctx.bezierCurveTo(144 * scale, 242 * scale, 79 * scale, 216 * scale, 58 * scale, 206 * scale);\r\n    ctx.bezierCurveTo(13 * scale, 174 * scale, 20 * scale, 134 * scale, 23 * scale, 107 * scale);\r\n    ctx.bezierCurveTo(26 * scale, 78 * scale, 33 * scale, 60 * scale, 38 * scale, 43 * scale);\r\n    ctx.bezierCurveTo(42 * scale, 32 * scale, 47 * scale, 32 * scale, 50 * scale, 36 * scale);\r\n    ctx.bezierCurveTo(54 * scale, 37 * scale, 50 * scale, 52 * scale, 44 * scale, 87 * scale);\r\n    ctx.bezierCurveTo(40 * scale, 115 * scale, 46 * scale, 142 * scale, 57 * scale, 158 * scale);\r\n    ctx.bezierCurveTo(76 * scale, 189 * scale, 129 * scale, 182 * scale, 152 * scale, 173 * scale);\r\n    ctx.bezierCurveTo(186 * scale, 156 * scale, 191 * scale, 106 * scale, 176 * scale, 85 * scale);\r\n    ctx.bezierCurveTo(159 * scale, 61 * scale, 132 * scale, 62 * scale, 122 * scale, 66 * scale);\r\n    ctx.bezierCurveTo(108 * scale, 74 * scale, 108 * scale, 89 * scale, 116 * scale, 90 * scale);\r\n    ctx.bezierCurveTo(123 * scale, 92 * scale, 130 * scale, 93 * scale, 131 * scale, 94 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.translate(0, -10 * scale);\r\n    ctx.globalAlpha = 1;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(150 * scale, 62 * scale);\r\n    ctx.bezierCurveTo(151.5 * scale, 71.5 * scale, 149 * scale, 70 * scale, 153 * scale, 81 * scale);\r\n    ctx.bezierCurveTo(158 * scale, 73.5 * scale, 158 * scale, 73.5 * scale, 163 * scale, 66 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[5]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(164 * scale, 171 * scale);\r\n    ctx.bezierCurveTo(149 * scale, 159 * scale, 156.5 * scale, 165 * scale, 149 * scale, 159 * scale);\r\n    ctx.bezierCurveTo(149 * scale, 167 * scale, 149 * scale, 170 * scale, 152 * scale, 178 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[5]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(132 * scale, 95 * scale);\r\n    ctx.bezierCurveTo(154 * scale, 102 * scale, 154 * scale, 126 * scale, 137 * scale, 139 * scale);\r\n    ctx.bezierCurveTo(113 * scale, 152 * scale, 89 * scale, 136 * scale, 80 * scale, 121 * scale);\r\n    ctx.bezierCurveTo(57 * scale, 89 * scale, 69 * scale, 63 * scale, 79 * scale, 52 * scale);\r\n    ctx.bezierCurveTo(110 * scale, 20 * scale, 139 * scale, 21 * scale, 150 * scale, 25 * scale);\r\n    ctx.bezierCurveTo(197 * scale, 36 * scale, 221 * scale, 67 * scale, 226 * scale, 90 * scale);\r\n    ctx.bezierCurveTo(234 * scale, 134 * scale, 214 * scale, 177 * scale, 195 * scale, 197 * scale);\r\n    ctx.bezierCurveTo(144 * scale, 242 * scale, 79 * scale, 216 * scale, 58 * scale, 206 * scale);\r\n    ctx.bezierCurveTo(13 * scale, 174 * scale, 20 * scale, 134 * scale, 23 * scale, 107 * scale);\r\n    ctx.bezierCurveTo(26 * scale, 78 * scale, 33 * scale, 60 * scale, 38 * scale, 43 * scale);\r\n    ctx.bezierCurveTo(42 * scale, 32 * scale, 47 * scale, 32 * scale, 50 * scale, 36 * scale);\r\n    ctx.bezierCurveTo(54 * scale, 37 * scale, 50 * scale, 52 * scale, 44 * scale, 87 * scale);\r\n    ctx.bezierCurveTo(40 * scale, 115 * scale, 46 * scale, 142 * scale, 57 * scale, 158 * scale);\r\n    ctx.bezierCurveTo(76 * scale, 189 * scale, 129 * scale, 182 * scale, 152 * scale, 173 * scale);\r\n    ctx.bezierCurveTo(186 * scale, 156 * scale, 191 * scale, 106 * scale, 176 * scale, 85 * scale);\r\n    ctx.bezierCurveTo(159 * scale, 61 * scale, 132 * scale, 62 * scale, 122 * scale, 66 * scale);\r\n    ctx.bezierCurveTo(108 * scale, 74 * scale, 108 * scale, 89 * scale, 116 * scale, 90 * scale);\r\n    ctx.bezierCurveTo(123 * scale, 92 * scale, 130 * scale, 93 * scale, 131 * scale, 94 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(137 * scale, 137 * scale);\r\n    ctx.bezierCurveTo(145 * scale, 125 * scale, 138 * scale, 108 * scale, 123 * scale, 104 * scale);\r\n    ctx.bezierCurveTo(81 * scale, 101 * scale, 88 * scale, 77 * scale, 98 * scale, 65 * scale);\r\n    ctx.bezierCurveTo(117 * scale, 38 * scale, 138 * scale, 39 * scale, 165 * scale, 52 * scale);\r\n    ctx.bezierCurveTo(197 * scale, 72 * scale, 207 * scale, 111 * scale, 197 * scale, 140 * scale);\r\n    ctx.bezierCurveTo(182 * scale, 180 * scale, 161 * scale, 197 * scale, 112 * scale, 194 * scale);\r\n    ctx.bezierCurveTo(58 * scale, 194 * scale, 37 * scale, 170 * scale, 34 * scale, 142 * scale);\r\n    ctx.bezierCurveTo(29 * scale, 102 * scale, 40 * scale, 63 * scale, 51 * scale, 45 * scale);\r\n    ctx.bezierCurveTo(43 * scale, 78 * scale, 41 * scale, 103 * scale, 43 * scale, 122 * scale);\r\n    ctx.bezierCurveTo(51 * scale, 158 * scale, 63 * scale, 174 * scale, 95 * scale, 179 * scale);\r\n    ctx.bezierCurveTo(129 * scale, 186 * scale, 169 * scale, 172 * scale, 177 * scale, 144 * scale);\r\n    ctx.bezierCurveTo(197 * scale, 105 * scale, 172 * scale, 76 * scale, 160 * scale, 71 * scale);\r\n    ctx.bezierCurveTo(125 * scale, 52 * scale, 111 * scale, 73 * scale, 111 * scale, 81 * scale);\r\n    ctx.bezierCurveTo(106 * scale, 93 * scale, 140 * scale, 92 * scale, 147 * scale, 107 * scale);\r\n    ctx.bezierCurveTo(153 * scale, 128 * scale, 140 * scale, 135 * scale, 137 * scale, 139 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(132 * scale, 95 * scale);\r\n    ctx.bezierCurveTo(154 * scale, 102 * scale, 154 * scale, 126 * scale, 137 * scale, 139 * scale);\r\n    ctx.bezierCurveTo(113 * scale, 152 * scale, 89 * scale, 136 * scale, 80 * scale, 121 * scale);\r\n    ctx.bezierCurveTo(57 * scale, 89 * scale, 69 * scale, 63 * scale, 79 * scale, 52 * scale);\r\n    ctx.bezierCurveTo(110 * scale, 20 * scale, 139 * scale, 21 * scale, 150 * scale, 25 * scale);\r\n    ctx.bezierCurveTo(197 * scale, 36 * scale, 221 * scale, 67 * scale, 226 * scale, 90 * scale);\r\n    ctx.bezierCurveTo(234 * scale, 134 * scale, 214 * scale, 177 * scale, 195 * scale, 197 * scale);\r\n    ctx.bezierCurveTo(144 * scale, 242 * scale, 79 * scale, 216 * scale, 58 * scale, 206 * scale);\r\n    ctx.bezierCurveTo(13 * scale, 174 * scale, 20 * scale, 134 * scale, 23 * scale, 107 * scale);\r\n    ctx.bezierCurveTo(26 * scale, 78 * scale, 33 * scale, 60 * scale, 38 * scale, 43 * scale);\r\n    ctx.bezierCurveTo(42 * scale, 32 * scale, 47 * scale, 32 * scale, 50 * scale, 36 * scale);\r\n    ctx.bezierCurveTo(54 * scale, 37 * scale, 50 * scale, 52 * scale, 44 * scale, 87 * scale);\r\n    ctx.bezierCurveTo(40 * scale, 115 * scale, 46 * scale, 142 * scale, 57 * scale, 158 * scale);\r\n    ctx.bezierCurveTo(76 * scale, 189 * scale, 129 * scale, 182 * scale, 152 * scale, 173 * scale);\r\n    ctx.bezierCurveTo(186 * scale, 156 * scale, 191 * scale, 106 * scale, 176 * scale, 85 * scale);\r\n    ctx.bezierCurveTo(159 * scale, 61 * scale, 132 * scale, 62 * scale, 122 * scale, 66 * scale);\r\n    ctx.bezierCurveTo(108 * scale, 74 * scale, 108 * scale, 89 * scale, 116 * scale, 90 * scale);\r\n    ctx.bezierCurveTo(123 * scale, 92 * scale, 130 * scale, 93 * scale, 131 * scale, 94 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[2], 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(82 * scale, 63 * scale);\r\n    ctx.bezierCurveTo(91 * scale, 64 * scale, 96 * scale, 62 * scale, 98 * scale, 53 * scale);\r\n    ctx.bezierCurveTo(91 * scale, 45 * scale, 85 * scale, 42 * scale, 78 * scale, 41 * scale);\r\n    ctx.bezierCurveTo(81 * scale, 51 * scale, 82 * scale, 57 * scale, 82 * scale, 63 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[5], 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(148 * scale, 40 * scale);\r\n    ctx.bezierCurveTo(140 * scale, 52 * scale, 131 * scale, 51 * scale, 123 * scale, 43 * scale);\r\n    ctx.bezierCurveTo(123 * scale, 25 * scale, 129 * scale, 17 * scale, 134 * scale, 12 * scale);\r\n    ctx.bezierCurveTo(138 * scale, 35 * scale, 142 * scale, 31 * scale, 148 * scale, 40 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[5], 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(189 * scale, 43 * scale);\r\n    ctx.bezierCurveTo(191 * scale, 54 * scale, 196 * scale, 58 * scale, 205 * scale, 59 * scale);\r\n    ctx.bezierCurveTo(211 * scale, 42 * scale, 214 * scale, 37 * scale, 216 * scale, 31 * scale);\r\n    ctx.bezierCurveTo(202 * scale, 34 * scale, 195 * scale, 39 * scale, 190 * scale, 43 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[5], 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(216 * scale, 98 * scale);\r\n    ctx.bezierCurveTo(219 * scale, 105 * scale, 225 * scale, 107 * scale, 230 * scale, 109 * scale);\r\n    ctx.bezierCurveTo(227 * scale, 113 * scale, 221 * scale, 115 * scale, 215 * scale, 115 * scale);\r\n    ctx.bezierCurveTo(208 * scale, 109 * scale, 211 * scale, 101 * scale, 216 * scale, 98 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[5], 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(180 * scale, 85 * scale);\r\n    ctx.bezierCurveTo(193 * scale, 86 * scale, 196 * scale, 98 * scale, 191 * scale, 108 * scale);\r\n    ctx.bezierCurveTo(179 * scale, 112 * scale, 167 * scale, 113 * scale, 155 * scale, 111 * scale);\r\n    ctx.bezierCurveTo(169 * scale, 100 * scale, 176 * scale, 96 * scale, 180 * scale, 85 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[5], 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(96 * scale, 114 * scale);\r\n    ctx.bezierCurveTo(102 * scale, 109 * scale, 112 * scale, 110 * scale, 114 * scale, 118 * scale);\r\n    ctx.bezierCurveTo(111 * scale, 134 * scale, 102 * scale, 143 * scale, 95 * scale, 147 * scale);\r\n    ctx.bezierCurveTo(98 * scale, 123 * scale, 97 * scale, 119 * scale, 96 * scale, 115 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[5], 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(79 * scale, 92 * scale);\r\n    ctx.bezierCurveTo(86 * scale, 95 * scale, 89 * scale, 102 * scale, 83 * scale, 111 * scale);\r\n    ctx.bezierCurveTo(70 * scale, 110 * scale, 61 * scale, 107 * scale, 54 * scale, 100 * scale);\r\n    ctx.bezierCurveTo(70 * scale, 97 * scale, 70 * scale, 95 * scale, 78 * scale, 92 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[5], 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(39 * scale, 130 * scale);\r\n    ctx.bezierCurveTo(37 * scale, 141 * scale, 41 * scale, 143 * scale, 48 * scale, 144 * scale);\r\n    ctx.bezierCurveTo(54 * scale, 134 * scale, 55 * scale, 131 * scale, 56 * scale, 123 * scale);\r\n    ctx.bezierCurveTo(47 * scale, 129 * scale, 43 * scale, 129 * scale, 39 * scale, 129 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[5], 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(113 * scale, 189 * scale);\r\n    ctx.bezierCurveTo(119 * scale, 201 * scale, 127 * scale, 198 * scale, 134 * scale, 192 * scale);\r\n    ctx.bezierCurveTo(128 * scale, 175 * scale, 128 * scale, 173 * scale, 128 * scale, 165 * scale);\r\n    ctx.bezierCurveTo(117 * scale, 176 * scale, 116 * scale, 182 * scale, 113 * scale, 187 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[5], 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(74 * scale, 154 * scale);\r\n    ctx.bezierCurveTo(76 * scale, 163 * scale, 76 * scale, 170 * scale, 75 * scale, 177 * scale);\r\n    ctx.bezierCurveTo(68 * scale, 179 * scale, 66 * scale, 176 * scale, 63 * scale, 171 * scale);\r\n    ctx.bezierCurveTo(69 * scale, 164 * scale, 72 * scale, 159 * scale, 74 * scale, 154 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[5], 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(206 * scale, 152 * scale);\r\n    ctx.bezierCurveTo(198 * scale, 158 * scale, 198 * scale, 166 * scale, 201 * scale, 171 * scale);\r\n    ctx.bezierCurveTo(209 * scale, 170 * scale, 221 * scale, 170 * scale, 226 * scale, 172 * scale);\r\n    ctx.bezierCurveTo(219 * scale, 159 * scale, 210 * scale, 155 * scale, 207 * scale, 153 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[5], 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(181 * scale, 184 * scale);\r\n    ctx.bezierCurveTo(170 * scale, 184 * scale, 167 * scale, 187 * scale, 163 * scale, 195 * scale);\r\n    ctx.bezierCurveTo(171 * scale, 207 * scale, 183 * scale, 214 * scale, 191 * scale, 217 * scale);\r\n    ctx.bezierCurveTo(183 * scale, 204 * scale, 184 * scale, 196 * scale, 181 * scale, 184 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[5], 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(66 * scale, 199 * scale);\r\n    ctx.bezierCurveTo(73 * scale, 197 * scale, 78 * scale, 199 * scale, 79 * scale, 206 * scale);\r\n    ctx.bezierCurveTo(71 * scale, 216 * scale, 67 * scale, 221 * scale, 57 * scale, 223 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[5], 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(182 * scale, 143 * scale);\r\n    ctx.bezierCurveTo(183 * scale, 146 * scale, 183 * scale, 149 * scale, 179 * scale, 152 * scale);\r\n    ctx.bezierCurveTo(174 * scale, 146 * scale, 174 * scale, 146 * scale, 169 * scale, 140 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[5], 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(32 * scale, 159 * scale);\r\n    ctx.bezierCurveTo(45 * scale, 160 * scale, 48 * scale, 164 * scale, 45 * scale, 175 * scale);\r\n    ctx.bezierCurveTo(28 * scale, 183 * scale, 25 * scale, 184 * scale, 19 * scale, 184 * scale);\r\n    ctx.bezierCurveTo(30 * scale, 170 * scale, 29 * scale, 164 * scale, 31 * scale, 160 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[5], 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(110 * scale, 214 * scale);\r\n    ctx.bezierCurveTo(106 * scale, 212 * scale, 104 * scale, 213 * scale, 102 * scale, 218 * scale);\r\n    ctx.bezierCurveTo(104 * scale, 220 * scale, 107 * scale, 222 * scale, 110 * scale, 224 * scale);\r\n    ctx.bezierCurveTo(110.5 * scale, 219 * scale, 110.5 * scale, 219 * scale, 111 * scale, 214 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[5], 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(40 * scale, 52 * scale);\r\n    ctx.bezierCurveTo(41 * scale, 57 * scale, 40 * scale, 61 * scale, 34 * scale, 60 * scale);\r\n    ctx.bezierCurveTo(31.5 * scale, 55 * scale, 31.5 * scale, 55 * scale, 29 * scale, 50 * scale);\r\n    ctx.bezierCurveTo(34 * scale, 50.5 * scale, 34 * scale, 50.5 * scale, 39 * scale, 51 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[5], 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(31 * scale, 81 * scale);\r\n    ctx.bezierCurveTo(37 * scale, 84 * scale, 38 * scale, 90 * scale, 34 * scale, 99 * scale);\r\n    ctx.bezierCurveTo(23 * scale, 97 * scale, 19 * scale, 96 * scale, 16 * scale, 93 * scale);\r\n    ctx.bezierCurveTo(24 * scale, 88 * scale, 28 * scale, 85 * scale, 30 * scale, 81 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[5], 5 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_hood(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 465 * scale;\r\n    can.height = 310 * scale;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(126 * scale, 192 * scale);\r\n    ctx.bezierCurveTo(198 * scale, 202 * scale, 245 * scale, 203 * scale, 335 * scale, 194 * scale);\r\n    ctx.bezierCurveTo(336 * scale, 232 * scale, 326 * scale, 235 * scale, 232 * scale, 237 * scale);\r\n    ctx.bezierCurveTo(161 * scale, 235 * scale, 122 * scale, 235 * scale, 126 * scale, 193 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[1], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(146 * scale, 239 * scale);\r\n    ctx.bezierCurveTo(174 * scale, 74 * scale, 287 * scale, 88 * scale, 320 * scale, 240 * scale);\r\n    ctx.bezierCurveTo(329 * scale, 231 * scale, 340 * scale, 219 * scale, 332 * scale, 115 * scale);\r\n    ctx.bezierCurveTo(330 * scale, 40 * scale, 144 * scale, 30 * scale, 129 * scale, 116 * scale);\r\n    ctx.bezierCurveTo(124 * scale, 217 * scale, 124 * scale, 228 * scale, 143 * scale, 237 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[1], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(126 * scale, 193 * scale);\r\n    ctx.bezierCurveTo(173 * scale, 94 * scale, 209 * scale, 100 * scale, 228 * scale, 57 * scale);\r\n    ctx.bezierCurveTo(190 * scale, 112 * scale, 165 * scale, 115 * scale, 127 * scale, 184 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[1], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(230 * scale, 57 * scale);\r\n    ctx.bezierCurveTo(266 * scale, 117 * scale, 310 * scale, 130 * scale, 332 * scale, 183 * scale);\r\n    ctx.bezierCurveTo(290 * scale, 112 * scale, 262 * scale, 109 * scale, 230 * scale, 56 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[1], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(154 * scale, 212 * scale);\r\n    ctx.bezierCurveTo(208 * scale, 224 * scale, 252 * scale, 219 * scale, 305 * scale, 212 * scale);\r\n    ctx.bezierCurveTo(267 * scale, 219 * scale, 204 * scale, 222 * scale, 155 * scale, 212 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[1], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(239 * scale, 59 * scale);\r\n    ctx.bezierCurveTo(302 * scale, 72 * scale, 325 * scale, 84 * scale, 326 * scale, 115 * scale);\r\n    ctx.bezierCurveTo(289 * scale, 80 * scale, 270 * scale, 88 * scale, 253 * scale, 78 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(216 * scale, 61 * scale);\r\n    ctx.bezierCurveTo(209 * scale, 70 * scale, 209 * scale, 70 * scale, 202 * scale, 79 * scale);\r\n    ctx.bezierCurveTo(173 * scale, 87 * scale, 162 * scale, 91 * scale, 137 * scale, 107 * scale);\r\n    ctx.bezierCurveTo(153 * scale, 78 * scale, 174 * scale, 67 * scale, 212 * scale, 62 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(175 * scale, 125 * scale);\r\n    ctx.bezierCurveTo(218 * scale, 94 * scale, 238 * scale, 90 * scale, 281 * scale, 125 * scale);\r\n    ctx.bezierCurveTo(245 * scale, 89 * scale, 240 * scale, 80 * scale, 228 * scale, 67 * scale);\r\n    ctx.bezierCurveTo(207 * scale, 100 * scale, 192 * scale, 104 * scale, 177 * scale, 123 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2]);\r\n    return can;\r\n}\r\n;\r\nfunction create_winter_hood(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 465 * scale;\r\n    can.height = 405 * scale;\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(6 * scale, 0 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(39.000030517578125 * scale, 162.03977966308594 * scale);\r\n    ctx.bezierCurveTo(125.00003051757812 * scale, 84.03977966308594 * scale, 108.50003051757812 * scale, 115.03977966308594 * scale, 178.00003051757812 * scale, 68.03977966308594 * scale);\r\n    ctx.bezierCurveTo(299.0000305175781 * scale, 146.53977966308594 * scale, 299.0000305175781 * scale, 146.53977966308594 * scale, 420.0000305175781 * scale, 225.03977966308594 * scale);\r\n    ctx.bezierCurveTo(400.0000305175781 * scale, 288.53977966308594 * scale, 400.0000305175781 * scale, 288.53977966308594 * scale, 380.0000305175781 * scale, 352.03977966308594 * scale);\r\n    ctx.bezierCurveTo(216.50003051757812 * scale, 345.53977966308594 * scale, 216.50003051757812 * scale, 345.53977966308594 * scale, 53.000030517578125 * scale, 339.03977966308594 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(23.000030517578125 * scale, 306.94886779785156 * scale);\r\n    ctx.bezierCurveTo(5.000030517578125 * scale, 275.94886779785156 * scale, 6.000030517578125 * scale, 201.94886779785156 * scale, 14.000030517578125 * scale, 150.94886779785156 * scale);\r\n    ctx.bezierCurveTo(40.000030517578125 * scale, 34.94886779785156 * scale, 157.00003051757812 * scale, 14.948867797851562 * scale, 199.00003051757812 * scale, 11.948867797851562 * scale);\r\n    ctx.bezierCurveTo(331.0000305175781 * scale, 0.9488677978515625 * scale, 409.0000305175781 * scale, 61.94886779785156 * scale, 428.0000305175781 * scale, 133.94886779785156 * scale);\r\n    ctx.bezierCurveTo(445.0000305175781 * scale, 207.94886779785156 * scale, 439.0000305175781 * scale, 274.94886779785156 * scale, 426.0000305175781 * scale, 342.94886779785156 * scale);\r\n    ctx.bezierCurveTo(355.0000305175781 * scale, 207.94886779785156 * scale, 345.0000305175781 * scale, 208.94886779785156 * scale, 333.0000305175781 * scale, 202.94886779785156 * scale);\r\n    ctx.bezierCurveTo(262.0000305175781 * scale, 143.94886779785156 * scale, 236.00003051757812 * scale, 148.94886779785156 * scale, 189.00003051757812 * scale, 162.94886779785156 * scale);\r\n    ctx.bezierCurveTo(82.00003051757812 * scale, 190.94886779785156 * scale, 78.00003051757812 * scale, 235.94886779785156 * scale, 62.000030517578125 * scale, 279.94886779785156 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[1], 20 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(17.000030517578125 * scale, 149.94886779785156 * scale);\r\n    ctx.bezierCurveTo(76.00003051757812 * scale, 67.94886779785156 * scale, 177.00003051757812 * scale, 40.94886779785156 * scale, 232.00003051757812 * scale, 45.94886779785156 * scale);\r\n    ctx.bezierCurveTo(316.0000305175781 * scale, 46.94886779785156 * scale, 359.0000305175781 * scale, 74.94886779785156 * scale, 428.0000305175781 * scale, 145.94886779785156 * scale);\r\n    ctx.bezierCurveTo(414.0000305175781 * scale, 73.94886779785156 * scale, 386.0000305175781 * scale, 68.94886779785156 * scale, 359.0000305175781 * scale, 43.94886779785156 * scale);\r\n    ctx.bezierCurveTo(295.0000305175781 * scale, 5.9488677978515625 * scale, 239.00003051757812 * scale, 10.948867797851562 * scale, 207.00003051757812 * scale, 10.948867797851562 * scale);\r\n    ctx.bezierCurveTo(121.00003051757812 * scale, 20.948867797851562 * scale, 104.00003051757812 * scale, 34.94886779785156 * scale, 45.000030517578125 * scale, 84.94886779785156 * scale);\r\n    ctx.bezierCurveTo(14.000030517578125 * scale, 128.94886779785156 * scale, 18.000030517578125 * scale, 142.94886779785156 * scale, 16.000030517578125 * scale, 151.94886779785156 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(23.000030517578125 * scale, 306.94886779785156 * scale);\r\n    ctx.bezierCurveTo(5.000030517578125 * scale, 275.94886779785156 * scale, 6.000030517578125 * scale, 201.94886779785156 * scale, 14.000030517578125 * scale, 150.94886779785156 * scale);\r\n    ctx.bezierCurveTo(40.000030517578125 * scale, 34.94886779785156 * scale, 157.00003051757812 * scale, 14.948867797851562 * scale, 199.00003051757812 * scale, 11.948867797851562 * scale);\r\n    ctx.bezierCurveTo(331.0000305175781 * scale, 0.9488677978515625 * scale, 409.0000305175781 * scale, 61.94886779785156 * scale, 428.0000305175781 * scale, 133.94886779785156 * scale);\r\n    ctx.bezierCurveTo(445.0000305175781 * scale, 207.94886779785156 * scale, 439.0000305175781 * scale, 274.94886779785156 * scale, 426.0000305175781 * scale, 342.94886779785156 * scale);\r\n    ctx.bezierCurveTo(355.0000305175781 * scale, 207.94886779785156 * scale, 345.0000305175781 * scale, 208.94886779785156 * scale, 333.0000305175781 * scale, 202.94886779785156 * scale);\r\n    ctx.bezierCurveTo(262.0000305175781 * scale, 143.94886779785156 * scale, 236.00003051757812 * scale, 148.94886779785156 * scale, 189.00003051757812 * scale, 162.94886779785156 * scale);\r\n    ctx.bezierCurveTo(82.00003051757812 * scale, 190.94886779785156 * scale, 78.00003051757812 * scale, 235.94886779785156 * scale, 62.000030517578125 * scale, 279.94886779785156 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[1], 16 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(60.000030517578125 * scale, 288.03977966308594 * scale);\r\n    ctx.bezierCurveTo(183.00003051757812 * scale, 320.03977966308594 * scale, 342.0000305175781 * scale, 306.03977966308594 * scale, 399.0000305175781 * scale, 286.03977966308594 * scale);\r\n    ctx.bezierCurveTo(420.0000305175781 * scale, 345.03977966308594 * scale, 410.0000305175781 * scale, 335.03977966308594 * scale, 415.0000305175781 * scale, 362.03977966308594 * scale);\r\n    ctx.bezierCurveTo(351.0000305175781 * scale, 384.03977966308594 * scale, 299.0000305175781 * scale, 389.03977966308594 * scale, 215.00003051757812 * scale, 391.03977966308594 * scale);\r\n    ctx.bezierCurveTo(128.00003051757812 * scale, 388.03977966308594 * scale, 69.00003051757812 * scale, 373.03977966308594 * scale, 39.000030517578125 * scale, 359.03977966308594 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[1], 13 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(47.000030517578125 * scale, 327.03977966308594 * scale);\r\n    ctx.bezierCurveTo(203.00003051757812 * scale, 377.03977966308594 * scale, 331.0000305175781 * scale, 349.03977966308594 * scale, 410.0000305175781 * scale, 330.03977966308594 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[1], 20 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(9.000030517578125 * scale, 339.1306915283203 * scale);\r\n    ctx.bezierCurveTo(2.000030517578125 * scale, 280.1306915283203 * scale, 30.000030517578125 * scale, 219.1306915283203 * scale, 85.00003051757812 * scale, 167.1306915283203 * scale);\r\n    ctx.bezierCurveTo(174.00003051757812 * scale, 82.13069152832031 * scale, 241.00003051757812 * scale, 101.13069152832031 * scale, 284.0000305175781 * scale, 115.13069152832031 * scale);\r\n    ctx.bezierCurveTo(333.0000305175781 * scale, 134.1306915283203 * scale, 376.0000305175781 * scale, 177.1306915283203 * scale, 410.0000305175781 * scale, 247.1306915283203 * scale);\r\n    ctx.bezierCurveTo(439.0000305175781 * scale, 300.1306915283203 * scale, 442.0000305175781 * scale, 346.1306915283203 * scale, 430.0000305175781 * scale, 363.1306915283203 * scale);\r\n    ctx.bezierCurveTo(418.0000305175781 * scale, 366.1306915283203 * scale, 395.0000305175781 * scale, 295.1306915283203 * scale, 355.0000305175781 * scale, 223.1306915283203 * scale);\r\n    ctx.bezierCurveTo(299.0000305175781 * scale, 156.1306915283203 * scale, 262.0000305175781 * scale, 155.1306915283203 * scale, 215.00003051757812 * scale, 159.1306915283203 * scale);\r\n    ctx.bezierCurveTo(133.00003051757812 * scale, 171.1306915283203 * scale, 120.00003051757812 * scale, 193.1306915283203 * scale, 96.00003051757812 * scale, 221.1306915283203 * scale);\r\n    ctx.bezierCurveTo(49.000030517578125 * scale, 262.1306915283203 * scale, 47.000030517578125 * scale, 306.1306915283203 * scale, 38.000030517578125 * scale, 336.1306915283203 * scale);\r\n    ctx.bezierCurveTo(30.000030517578125 * scale, 349.1306915283203 * scale, 30.000030517578125 * scale, 349.1306915283203 * scale, 22.000030517578125 * scale, 362.1306915283203 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2], color[1], 20 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(228.00003051757812 * scale, 128.03977966308594 * scale);\r\n    ctx.bezierCurveTo(315.0000305175781 * scale, 131.03977966308594 * scale, 349.0000305175781 * scale, 178.03977966308594 * scale, 386.0000305175781 * scale, 234.03977966308594 * scale);\r\n    ctx.bezierCurveTo(444.0000305175781 * scale, 329.03977966308594 * scale, 446.0000305175781 * scale, 354.03977966308594 * scale, 427.0000305175781 * scale, 373.03977966308594 * scale);\r\n    ctx.bezierCurveTo(389.0000305175781 * scale, 389.03977966308594 * scale, 399.0000305175781 * scale, 329.03977966308594 * scale, 361.0000305175781 * scale, 277.03977966308594 * scale);\r\n    ctx.bezierCurveTo(306.0000305175781 * scale, 191.03977966308594 * scale, 266.0000305175781 * scale, 183.03977966308594 * scale, 220.00003051757812 * scale, 181.03977966308594 * scale);\r\n    ctx.bezierCurveTo(138.00003051757812 * scale, 184.03977966308594 * scale, 123.00003051757812 * scale, 212.03977966308594 * scale, 89.00003051757812 * scale, 271.03977966308594 * scale);\r\n    ctx.bezierCurveTo(52.000030517578125 * scale, 349.03977966308594 * scale, 68.00003051757812 * scale, 364.03977966308594 * scale, 33.000030517578125 * scale, 369.03977966308594 * scale);\r\n    ctx.bezierCurveTo(6.000030517578125 * scale, 366.03977966308594 * scale, 5.000030517578125 * scale, 341.03977966308594 * scale, 26.000030517578125 * scale, 288.03977966308594 * scale);\r\n    ctx.bezierCurveTo(60.000030517578125 * scale, 207.03977966308594 * scale, 100.00003051757812 * scale, 180.03977966308594 * scale, 113.00003051757812 * scale, 170.03977966308594 * scale);\r\n    ctx.bezierCurveTo(159.00003051757812 * scale, 132.03977966308594 * scale, 196.00003051757812 * scale, 133.03977966308594 * scale, 226.00003051757812 * scale, 129.03977966308594 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[1], 20 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_peasant(scale, draw_shadow, color, i) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 198 * scale;\r\n    can.height = 147 * scale;\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(0, 6 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(44 * scale, 76 * scale);\r\n    ctx.bezierCurveTo(50 * scale, 82 * scale, 50 * scale, 82 * scale, 56 * scale, 88 * scale);\r\n    ctx.bezierCurveTo(59 * scale, 82 * scale, 59 * scale, 82 * scale, 62 * scale, 76 * scale);\r\n    ctx.bezierCurveTo(59 * scale, 71 * scale, 59 * scale, 71 * scale, 56 * scale, 66 * scale);\r\n    ctx.bezierCurveTo(59 * scale, 69 * scale, 59 * scale, 69 * scale, 62 * scale, 72 * scale);\r\n    ctx.bezierCurveTo(80 * scale, 48 * scale, 102 * scale, 50 * scale, 120 * scale, 62 * scale);\r\n    ctx.bezierCurveTo(127 * scale, 58 * scale, 127 * scale, 58 * scale, 134 * scale, 54 * scale);\r\n    ctx.bezierCurveTo(129 * scale, 60 * scale, 129 * scale, 60 * scale, 124 * scale, 66 * scale);\r\n    ctx.bezierCurveTo(129 * scale, 73 * scale, 129 * scale, 73 * scale, 134 * scale, 80 * scale);\r\n    ctx.bezierCurveTo(140 * scale, 74 * scale, 140 * scale, 74 * scale, 146 * scale, 68 * scale);\r\n    ctx.bezierCurveTo(142 * scale, 76 * scale, 142 * scale, 76 * scale, 138 * scale, 84 * scale);\r\n    ctx.bezierCurveTo(144 * scale, 90 * scale, 142 * scale, 90 * scale, 144 * scale, 90 * scale);\r\n    ctx.bezierCurveTo(136 * scale, 97 * scale, 136 * scale, 97 * scale, 128 * scale, 104 * scale);\r\n    ctx.bezierCurveTo(154 * scale, 110 * scale, 164 * scale, 90 * scale, 160 * scale, 80 * scale);\r\n    ctx.bezierCurveTo(138 * scale, 22 * scale, 148 * scale, 51 * scale, 136 * scale, 22 * scale);\r\n    ctx.bezierCurveTo(97 * scale, 24 * scale, 97 * scale, 24 * scale, 58 * scale, 26 * scale);\r\n    ctx.bezierCurveTo(47 * scale, 54 * scale, 36 * scale, 80 * scale, 36 * scale, 82 * scale);\r\n    ctx.bezierCurveTo(40 * scale, 108 * scale, 54 * scale, 104 * scale, 62 * scale, 104 * scale);\r\n    ctx.bezierCurveTo(46 * scale, 92 * scale, 54 * scale, 97 * scale, 46 * scale, 90 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(36 * scale, 80 * scale);\r\n    ctx.bezierCurveTo(30 * scale, 84 * scale, 28 * scale, 92 * scale, 34 * scale, 100 * scale);\r\n    ctx.bezierCurveTo(41.5 * scale, 102 * scale, 41.5 * scale, 102 * scale, 49 * scale, 104 * scale);\r\n    ctx.bezierCurveTo(43 * scale, 105.5 * scale, 43 * scale, 105.5 * scale, 37 * scale, 107 * scale);\r\n    ctx.bezierCurveTo(46 * scale, 111 * scale, 60 * scale, 114 * scale, 76 * scale, 114 * scale);\r\n    ctx.bezierCurveTo(78 * scale, 110.5 * scale, 78 * scale, 110.5 * scale, 80 * scale, 107 * scale);\r\n    ctx.bezierCurveTo(81 * scale, 110.5 * scale, 81 * scale, 110.5 * scale, 82 * scale, 114 * scale);\r\n    ctx.bezierCurveTo(94.5 * scale, 113.5 * scale, 94.5 * scale, 113.5 * scale, 107 * scale, 113 * scale);\r\n    ctx.bezierCurveTo(108.5 * scale, 110 * scale, 108.5 * scale, 110 * scale, 110 * scale, 107 * scale);\r\n    ctx.bezierCurveTo(111.5 * scale, 110.5 * scale, 111.5 * scale, 110.5 * scale, 113 * scale, 114 * scale);\r\n    ctx.bezierCurveTo(131 * scale, 112.5 * scale, 131 * scale, 112.5 * scale, 149 * scale, 111 * scale);\r\n    ctx.bezierCurveTo(148.5 * scale, 107.5 * scale, 148.5 * scale, 107.5 * scale, 148 * scale, 104 * scale);\r\n    ctx.bezierCurveTo(150.5 * scale, 107 * scale, 150.5 * scale, 107 * scale, 153 * scale, 110 * scale);\r\n    ctx.bezierCurveTo(155.5 * scale, 108.5 * scale, 155.5 * scale, 108.5 * scale, 158 * scale, 107 * scale);\r\n    ctx.bezierCurveTo(156.5 * scale, 104 * scale, 156.5 * scale, 104 * scale, 155 * scale, 101 * scale);\r\n    ctx.bezierCurveTo(158.5 * scale, 102.5 * scale, 158.5 * scale, 102.5 * scale, 162 * scale, 104 * scale);\r\n    ctx.bezierCurveTo(168 * scale, 100 * scale, 170 * scale, 92 * scale, 169 * scale, 85 * scale);\r\n    ctx.bezierCurveTo(166 * scale, 86 * scale, 166 * scale, 86 * scale, 163 * scale, 87 * scale);\r\n    ctx.bezierCurveTo(165.5 * scale, 83 * scale, 165.5 * scale, 83 * scale, 168 * scale, 79 * scale);\r\n    ctx.bezierCurveTo(165.5 * scale, 76.5 * scale, 165.5 * scale, 76.5 * scale, 163 * scale, 74 * scale);\r\n    ctx.bezierCurveTo(155 * scale, 82.5 * scale, 155 * scale, 82.5 * scale, 147 * scale, 91 * scale);\r\n    ctx.bezierCurveTo(139 * scale, 95.5 * scale, 139 * scale, 95.5 * scale, 131 * scale, 100 * scale);\r\n    ctx.bezierCurveTo(97.5 * scale, 100.5 * scale, 97.5 * scale, 100.5 * scale, 64 * scale, 101 * scale);\r\n    ctx.bezierCurveTo(49 * scale, 102 * scale, 43 * scale, 90 * scale, 36 * scale, 80 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(0, -6 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(36 * scale, 80 * scale);\r\n    ctx.bezierCurveTo(30 * scale, 84 * scale, 28 * scale, 92 * scale, 34 * scale, 100 * scale);\r\n    ctx.bezierCurveTo(41.5 * scale, 102 * scale, 41.5 * scale, 102 * scale, 49 * scale, 104 * scale);\r\n    ctx.bezierCurveTo(43 * scale, 105.5 * scale, 43 * scale, 105.5 * scale, 37 * scale, 107 * scale);\r\n    ctx.bezierCurveTo(46 * scale, 111 * scale, 60 * scale, 114 * scale, 76 * scale, 114 * scale);\r\n    ctx.bezierCurveTo(78 * scale, 110.5 * scale, 78 * scale, 110.5 * scale, 80 * scale, 107 * scale);\r\n    ctx.bezierCurveTo(81 * scale, 110.5 * scale, 81 * scale, 110.5 * scale, 82 * scale, 114 * scale);\r\n    ctx.bezierCurveTo(94.5 * scale, 113.5 * scale, 94.5 * scale, 113.5 * scale, 107 * scale, 113 * scale);\r\n    ctx.bezierCurveTo(108.5 * scale, 110 * scale, 108.5 * scale, 110 * scale, 110 * scale, 107 * scale);\r\n    ctx.bezierCurveTo(111.5 * scale, 110.5 * scale, 111.5 * scale, 110.5 * scale, 113 * scale, 114 * scale);\r\n    ctx.bezierCurveTo(131 * scale, 112.5 * scale, 131 * scale, 112.5 * scale, 149 * scale, 111 * scale);\r\n    ctx.bezierCurveTo(148.5 * scale, 107.5 * scale, 148.5 * scale, 107.5 * scale, 148 * scale, 104 * scale);\r\n    ctx.bezierCurveTo(150.5 * scale, 107 * scale, 150.5 * scale, 107 * scale, 153 * scale, 110 * scale);\r\n    ctx.bezierCurveTo(155.5 * scale, 108.5 * scale, 155.5 * scale, 108.5 * scale, 158 * scale, 107 * scale);\r\n    ctx.bezierCurveTo(156.5 * scale, 104 * scale, 156.5 * scale, 104 * scale, 155 * scale, 101 * scale);\r\n    ctx.bezierCurveTo(158.5 * scale, 102.5 * scale, 158.5 * scale, 102.5 * scale, 162 * scale, 104 * scale);\r\n    ctx.bezierCurveTo(168 * scale, 100 * scale, 170 * scale, 92 * scale, 169 * scale, 85 * scale);\r\n    ctx.bezierCurveTo(166 * scale, 86 * scale, 166 * scale, 86 * scale, 163 * scale, 87 * scale);\r\n    ctx.bezierCurveTo(165.5 * scale, 83 * scale, 165.5 * scale, 83 * scale, 168 * scale, 79 * scale);\r\n    ctx.bezierCurveTo(165.5 * scale, 76.5 * scale, 165.5 * scale, 76.5 * scale, 163 * scale, 74 * scale);\r\n    ctx.bezierCurveTo(155 * scale, 82.5 * scale, 155 * scale, 82.5 * scale, 147 * scale, 91 * scale);\r\n    ctx.bezierCurveTo(139 * scale, 95.5 * scale, 139 * scale, 95.5 * scale, 131 * scale, 100 * scale);\r\n    ctx.bezierCurveTo(97.5 * scale, 100.5 * scale, 97.5 * scale, 100.5 * scale, 64 * scale, 101 * scale);\r\n    ctx.bezierCurveTo(49 * scale, 102 * scale, 43 * scale, 90 * scale, 36 * scale, 80 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(49 * scale, 98 * scale);\r\n    ctx.bezierCurveTo(96.5 * scale, 98 * scale, 96.5 * scale, 98 * scale, 144 * scale, 98 * scale);\r\n    ctx.bezierCurveTo(136.5 * scale, 102 * scale, 136.5 * scale, 102 * scale, 129 * scale, 106 * scale);\r\n    ctx.bezierCurveTo(103 * scale, 105.5 * scale, 103 * scale, 105.5 * scale, 77 * scale, 105 * scale);\r\n    ctx.bezierCurveTo(65 * scale, 105 * scale, 65 * scale, 105 * scale, 53 * scale, 105 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1]);\r\n    ctx.globalAlpha = 0.5;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(54 * scale, 98 * scale);\r\n    ctx.bezierCurveTo(97 * scale, 98 * scale, 97 * scale, 98 * scale, 140 * scale, 98 * scale);\r\n    ctx.bezierCurveTo(134 * scale, 101 * scale, 134 * scale, 101 * scale, 128 * scale, 104 * scale);\r\n    ctx.bezierCurveTo(92 * scale, 104 * scale, 92 * scale, 104 * scale, 56 * scale, 104 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(118 * scale, 47 * scale);\r\n    ctx.bezierCurveTo(124.5 * scale, 43.5 * scale, 124.5 * scale, 43.5 * scale, 131 * scale, 40 * scale);\r\n    ctx.bezierCurveTo(128 * scale, 46 * scale, 128 * scale, 46 * scale, 125 * scale, 52 * scale);\r\n    ctx.bezierCurveTo(131 * scale, 57 * scale, 135 * scale, 64 * scale, 139 * scale, 73 * scale);\r\n    ctx.bezierCurveTo(142.5 * scale, 69.5 * scale, 142.5 * scale, 69.5 * scale, 146 * scale, 66 * scale);\r\n    ctx.bezierCurveTo(143.5 * scale, 72.5 * scale, 143.5 * scale, 72.5 * scale, 141 * scale, 79 * scale);\r\n    ctx.bezierCurveTo(142 * scale, 91 * scale, 141 * scale, 94 * scale, 132 * scale, 98 * scale);\r\n    ctx.bezierCurveTo(117 * scale, 102 * scale, 126 * scale, 108 * scale, 142 * scale, 102 * scale);\r\n    ctx.bezierCurveTo(159 * scale, 98 * scale, 164 * scale, 80 * scale, 162 * scale, 47 * scale);\r\n    ctx.bezierCurveTo(160 * scale, 19 * scale, 150 * scale, 6 * scale, 117 * scale, 4 * scale);\r\n    ctx.bezierCurveTo(44 * scale, 0 * scale, 35 * scale, 20 * scale, 33 * scale, 37 * scale);\r\n    ctx.bezierCurveTo(29 * scale, 69 * scale, 33 * scale, 88 * scale, 44 * scale, 96 * scale);\r\n    ctx.bezierCurveTo(64 * scale, 107 * scale, 70 * scale, 102 * scale, 54 * scale, 93 * scale);\r\n    ctx.bezierCurveTo(49 * scale, 88 * scale, 50 * scale, 82 * scale, 53 * scale, 77 * scale);\r\n    ctx.bezierCurveTo(51.5 * scale, 71 * scale, 51.5 * scale, 71 * scale, 50 * scale, 65 * scale);\r\n    ctx.bezierCurveTo(53 * scale, 68.5 * scale, 53 * scale, 68.5 * scale, 56 * scale, 72 * scale);\r\n    ctx.bezierCurveTo(59 * scale, 67.5 * scale, 59 * scale, 67.5 * scale, 62 * scale, 63 * scale);\r\n    ctx.bezierCurveTo(60.5 * scale, 59.5 * scale, 60.5 * scale, 59.5 * scale, 59 * scale, 56 * scale);\r\n    ctx.bezierCurveTo(62 * scale, 57 * scale, 62 * scale, 57 * scale, 65 * scale, 58 * scale);\r\n    ctx.bezierCurveTo(78 * scale, 35 * scale, 103 * scale, 36 * scale, 117 * scale, 47 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 6 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(62 * scale, 21 * scale);\r\n    ctx.bezierCurveTo(63 * scale, 34 * scale, 64 * scale, 37 * scale, 66 * scale, 40 * scale);\r\n    ctx.bezierCurveTo(54 * scale, 49 * scale, 53 * scale, 51 * scale, 48 * scale, 58 * scale);\r\n    ctx.bezierCurveTo(44 * scale, 51 * scale, 42 * scale, 43 * scale, 40 * scale, 36 * scale);\r\n    ctx.bezierCurveTo(47 * scale, 28 * scale, 52 * scale, 25 * scale, 61 * scale, 21 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(60 * scale, 29 * scale);\r\n    ctx.bezierCurveTo(62 * scale, 25 * scale, 65 * scale, 24 * scale, 70 * scale, 23 * scale);\r\n    fill_path(ctx, undefined, color[3], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(61 * scale, 37 * scale);\r\n    ctx.bezierCurveTo(63 * scale, 32 * scale, 66 * scale, 32 * scale, 71 * scale, 32 * scale);\r\n    fill_path(ctx, undefined, color[3], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(52 * scale, 31 * scale);\r\n    ctx.bezierCurveTo(50 * scale, 26 * scale, 50 * scale, 25 * scale, 51 * scale, 23 * scale);\r\n    fill_path(ctx, undefined, color[3], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(46 * scale, 35 * scale);\r\n    ctx.bezierCurveTo(44 * scale, 31 * scale, 43 * scale, 29 * scale, 45 * scale, 26 * scale);\r\n    fill_path(ctx, undefined, color[3], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(58 * scale, 44 * scale);\r\n    ctx.bezierCurveTo(57 * scale, 48 * scale, 57 * scale, 50 * scale, 60 * scale, 52 * scale);\r\n    fill_path(ctx, undefined, color[3], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(53 * scale, 48 * scale);\r\n    ctx.bezierCurveTo(52 * scale, 52 * scale, 52 * scale, 54 * scale, 55 * scale, 57 * scale);\r\n    fill_path(ctx, undefined, color[3], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(46 * scale, 41 * scale);\r\n    ctx.bezierCurveTo(41 * scale, 42 * scale, 39 * scale, 45 * scale, 38 * scale, 48 * scale);\r\n    fill_path(ctx, undefined, color[3], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(48 * scale, 48 * scale);\r\n    ctx.bezierCurveTo(42 * scale, 51 * scale, 42 * scale, 53 * scale, 40 * scale, 55 * scale);\r\n    fill_path(ctx, undefined, color[3], 4 * scale);\r\n    if (i == 0) {\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(99 * scale, 101 * scale);\r\n        ctx.bezierCurveTo(118.6666259765625 * scale, 104.33331298828125 * scale, 124.6666259765625 * scale, 116.33331298828125 * scale, 112.6666259765625 * scale, 114.33331298828125 * scale);\r\n        ctx.bezierCurveTo(104.6666259765625 * scale, 112.33331298828125 * scale, 100.6666259765625 * scale, 105.33331298828125 * scale, 99.6666259765625 * scale, 101.33331298828125 * scale);\r\n        fill_path(ctx, undefined, color[5], 6 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(97.6666259765625 * scale, 101.33331298828125 * scale);\r\n        ctx.bezierCurveTo(81.6666259765625 * scale, 106.33331298828125 * scale, 79.6666259765625 * scale, 114.33331298828125 * scale, 89.6666259765625 * scale, 114.33331298828125 * scale);\r\n        ctx.bezierCurveTo(95.6666259765625 * scale, 111.33331298828125 * scale, 95.6666259765625 * scale, 109.33331298828125 * scale, 98.6666259765625 * scale, 102.33331298828125 * scale);\r\n        fill_path(ctx, undefined, color[5], 6 * scale);\r\n    } else {\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(103 * scale, 100.39999389648438 * scale);\r\n        ctx.bezierCurveTo(120 * scale, 106.39999389648438 * scale, 118 * scale, 107.39999389648438 * scale, 120 * scale, 111.39999389648438 * scale);\r\n        fill_path(ctx, undefined, color[5], 6 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(103 * scale, 100.39999389648438 * scale);\r\n        ctx.bezierCurveTo(90 * scale, 103.39999389648438 * scale, 89 * scale, 106.39999389648438 * scale, 87 * scale, 112.39999389648438 * scale);\r\n        fill_path(ctx, undefined, color[5], 6 * scale);\r\n        circle(ctx, 86 * scale, 114.39999389648438 * scale, 4.5 * scale);\r\n        fill_path(ctx, color[1], color[5], 6 * scale);\r\n        circle(ctx, 121 * scale, 114.39999389648438 * scale, 4.5 * scale);\r\n        fill_path(ctx, color[1], color[5], 6 * scale);\r\n    }\r\n    return can;\r\n}\r\n;\r\nfunction create_treasure_chest(scale, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 253 * scale;\r\n    can.height = 192 * scale;\r\n    ctx.globalAlpha = 0.5;\r\n    ctx.save();\r\n    ctx.translate(42 * scale, 99 * scale);\r\n    ctx.globalAlpha = 0.5;\r\n    round_rect(ctx, -7 * scale, -20 * scale, 14 * scale, 39 * scale, 20 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.save();\r\n    ctx.translate(37 * scale, 94 * scale);\r\n    round_rect(ctx, -7 * scale, -20 * scale, 14 * scale, 37 * scale, 20 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[2]);\r\n    ctx.globalAlpha = 0.5;\r\n    ctx.save();\r\n    ctx.translate(136 * scale, 99 * scale);\r\n    ctx.globalAlpha = 0.5;\r\n    round_rect(ctx, -84 * scale, -67 * scale, 168 * scale, 134 * scale, 20 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0], color[0], 13 * scale);\r\n    ctx.globalAlpha = 1;\r\n    ctx.save();\r\n    ctx.translate(131 * scale, 94 * scale);\r\n    round_rect(ctx, -84 * scale, -67 * scale, 168 * scale, 134 * scale, 20 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[2], color[2], 13 * scale);\r\n    ctx.save();\r\n    ctx.translate(131 * scale, 94 * scale);\r\n    round_rect(ctx, -76 * scale, -61 * scale, 152 * scale, 122 * scale, 20 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[3], color[1], 8 * scale);\r\n    ctx.save();\r\n    ctx.translate(168.5 * scale, 93.5 * scale);\r\n    round_rect(ctx, -30.5 * scale, -58.5 * scale, 61 * scale, 117 * scale, 20 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[3], color[4], 6 * scale);\r\n    ctx.save();\r\n    ctx.translate(93.5 * scale, 95.5 * scale);\r\n    round_rect(ctx, -32 * scale, -59.5 * scale, 59 * scale, 119 * scale, 20 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[3], color[4], 6 * scale);\r\n    ctx.save();\r\n    ctx.translate(130.5 * scale, 94 * scale);\r\n    round_rect(ctx, -36 * scale, -67 * scale, 73 * scale, 134 * scale, 20 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[3], color[2], 8 * scale);\r\n    ctx.globalAlpha = 0.5;\r\n    ctx.save();\r\n    ctx.translate(133 * scale, 97 * scale);\r\n    round_rect(ctx, -83 * scale, -12 * scale, 160 * scale, 24 * scale, 0 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.save();\r\n    ctx.translate(133 * scale, 92 * scale);\r\n    round_rect(ctx, -83 * scale, -12 * scale, 160 * scale, 24 * scale, 0 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[2]);\r\n    ctx.globalAlpha = 0.5;\r\n    ctx.save();\r\n    ctx.translate(228 * scale, 99.5 * scale);\r\n    ctx.globalAlpha = 0.5;\r\n    round_rect(ctx, -5 * scale, -18.5 * scale, 10 * scale, 37 * scale, 20 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.save();\r\n    ctx.translate(223 * scale, 94.5 * scale);\r\n    round_rect(ctx, -5 * scale, -18.5 * scale, 10 * scale, 37 * scale, 20 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[2]);\r\n    ctx.save();\r\n    ctx.translate(133.5 * scale, 175.5 * scale);\r\n    ctx.globalAlpha = 0.5;\r\n    round_rect(ctx, -22.5 * scale, -6.5 * scale, 45 * scale, 13 * scale, 20 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.save();\r\n    ctx.translate(128.5 * scale, 170.5 * scale);\r\n    round_rect(ctx, -22.5 * scale, -6.5 * scale, 45 * scale, 13 * scale, 20 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[2]);\r\n    return can;\r\n}\r\n;\r\nfunction create_hurt_treasure_chest(scale, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 253 * scale;\r\n    can.height = 192 * scale;\r\n    ctx.save();\r\n    ctx.translate(37 * scale, 94 * scale);\r\n    round_rect(ctx, -7 * scale, -20 * scale, 14 * scale, 37 * scale, 20 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0]);\r\n    ctx.save();\r\n    ctx.translate(131 * scale, 94 * scale);\r\n    round_rect(ctx, -84 * scale, -67 * scale, 168 * scale, 134 * scale, 20 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0], color[0], 13 * scale);\r\n    ctx.save();\r\n    ctx.translate(223 * scale, 94.5 * scale);\r\n    round_rect(ctx, -5 * scale, -18.5 * scale, 10 * scale, 37 * scale, 20 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0]);\r\n    ctx.save();\r\n    ctx.translate(128.5 * scale, 170.5 * scale);\r\n    round_rect(ctx, -22.5 * scale, -6.5 * scale, 45 * scale, 13 * scale, 20 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0]);\r\n    return can;\r\n}\r\n;\r\nfunction create_bottle(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 316 * scale;\r\n    can.height = 365 * scale;\r\n    ctx.save();\r\n    ctx.translate(156.07142639160156 * scale, 51.81248474121094 * scale);\r\n    ctx.rotate(0);\r\n    round_rect(ctx, -21.5 * scale, -34 * scale, 43 * scale, 68 * scale, 8 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[1], color[2], 15 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(110.57142639160156 * scale, 197.09820556640625 * scale);\r\n    ctx.bezierCurveTo(158.07142639160156 * scale, 179.09820556640625 * scale, 158.07142639160156 * scale, 179.09820556640625 * scale, 205.57142639160156 * scale, 161.09820556640625 * scale);\r\n    ctx.bezierCurveTo(205.57142639160156 * scale, 235.45535278320312 * scale, 205.57142639160156 * scale, 235.45535278320312 * scale, 205.57142639160156 * scale, 309.8125 * scale);\r\n    ctx.bezierCurveTo(205.57142639160156 * scale, 323.8125 * scale, 200.57142639160156 * scale, 325.8125 * scale, 187.57142639160156 * scale, 326.8125 * scale);\r\n    ctx.bezierCurveTo(155.57142639160156 * scale, 326.3125 * scale, 155.57142639160156 * scale, 326.3125 * scale, 123.57142639160156 * scale, 325.8125 * scale);\r\n    ctx.bezierCurveTo(111.57142639160156 * scale, 326.8125 * scale, 109.57142639160156 * scale, 321.8125 * scale, 110.57142639160156 * scale, 312.8125 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[4], 15 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(126.57142639160156 * scale, 67.38392639160156 * scale);\r\n    ctx.bezierCurveTo(126.57142639160156 * scale, 57.38392639160156 * scale, 132.57142639160156 * scale, 54.38392639160156 * scale, 140.57142639160156 * scale, 54.38392639160156 * scale);\r\n    ctx.bezierCurveTo(177.57142639160156 * scale, 55.38392639160156 * scale, 158.07142639160156 * scale, 54.38392639160156 * scale, 175.57142639160156 * scale, 54.38392639160156 * scale);\r\n    ctx.bezierCurveTo(185.57142639160156 * scale, 56.38392639160156 * scale, 185.57142639160156 * scale, 57.38392639160156 * scale, 184.57142639160156 * scale, 66.38392639160156 * scale);\r\n    ctx.bezierCurveTo(184.57142639160156 * scale, 78.38392639160156 * scale, 184.57142639160156 * scale, 89.38392639160156 * scale, 184.57142639160156 * scale, 90.38392639160156 * scale);\r\n    ctx.bezierCurveTo(177.57142639160156 * scale, 107.38392639160156 * scale, 180.57142639160156 * scale, 112.38392639160156 * scale, 189.57142639160156 * scale, 116.38392639160156 * scale);\r\n    ctx.bezierCurveTo(212.57142639160156 * scale, 127.38392639160156 * scale, 212.57142639160156 * scale, 132.38392639160156 * scale, 211.57142639160156 * scale, 150.38392639160156 * scale);\r\n    ctx.bezierCurveTo(211.57142639160156 * scale, 227.59821128845215 * scale, 211.57142639160156 * scale, 227.59821128845215 * scale, 211.57142639160156 * scale, 304.81249618530273 * scale);\r\n    ctx.bezierCurveTo(212.57142639160156 * scale, 328.81249618530273 * scale, 209.57142639160156 * scale, 330.81249618530273 * scale, 188.57142639160156 * scale, 333.81249618530273 * scale);\r\n    ctx.bezierCurveTo(155.07142639160156 * scale, 333.31249618530273 * scale, 155.07142639160156 * scale, 333.31249618530273 * scale, 121.57142639160156 * scale, 332.81249618530273 * scale);\r\n    ctx.bezierCurveTo(104.57142639160156 * scale, 327.81249618530273 * scale, 105.57142639160156 * scale, 328.81249618530273 * scale, 104.57142639160156 * scale, 312.81249618530273 * scale);\r\n    ctx.bezierCurveTo(104.57142639160156 * scale, 228.16963958740234 * scale, 104.57142639160156 * scale, 228.16963958740234 * scale, 104.57142639160156 * scale, 143.52678298950195 * scale);\r\n    ctx.bezierCurveTo(106.57142639160156 * scale, 124.52678298950195 * scale, 110.57142639160156 * scale, 123.52678298950195 * scale, 123.57142639160156 * scale, 116.52678298950195 * scale);\r\n    ctx.bezierCurveTo(136.57142639160156 * scale, 110.52678298950195 * scale, 130.57142639160156 * scale, 106.52678298950195 * scale, 126.57142639160156 * scale, 98.52678298950195 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[5], 15 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(125.57142639160156 * scale, 156.66963958740234 * scale);\r\n    ctx.bezierCurveTo(125.57142639160156 * scale, 182.66963958740234 * scale, 125.57142639160156 * scale, 182.66963958740234 * scale, 125.57142639160156 * scale, 208.66963958740234 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[6], 15 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_bottle_full(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 316 * scale;\r\n    can.height = 365 * scale;\r\n    ctx.save();\r\n    ctx.translate(156.07142639160156 * scale, 51.81248474121094 * scale);\r\n    ctx.rotate(0);\r\n    round_rect(ctx, -21.5 * scale, -34 * scale, 43 * scale, 68 * scale, 8 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[1], color[2], 15 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(126.57142639160156 * scale, 67.38392639160156 * scale);\r\n    ctx.bezierCurveTo(126.57142639160156 * scale, 57.38392639160156 * scale, 132.57142639160156 * scale, 54.38392639160156 * scale, 140.57142639160156 * scale, 54.38392639160156 * scale);\r\n    ctx.bezierCurveTo(177.57142639160156 * scale, 55.38392639160156 * scale, 158.07142639160156 * scale, 54.38392639160156 * scale, 175.57142639160156 * scale, 54.38392639160156 * scale);\r\n    ctx.bezierCurveTo(185.57142639160156 * scale, 56.38392639160156 * scale, 185.57142639160156 * scale, 57.38392639160156 * scale, 184.57142639160156 * scale, 66.38392639160156 * scale);\r\n    ctx.bezierCurveTo(184.57142639160156 * scale, 78.38392639160156 * scale, 184.57142639160156 * scale, 89.38392639160156 * scale, 184.57142639160156 * scale, 90.38392639160156 * scale);\r\n    ctx.bezierCurveTo(177.57142639160156 * scale, 107.38392639160156 * scale, 180.57142639160156 * scale, 112.38392639160156 * scale, 189.57142639160156 * scale, 116.38392639160156 * scale);\r\n    ctx.bezierCurveTo(212.57142639160156 * scale, 127.38392639160156 * scale, 212.57142639160156 * scale, 132.38392639160156 * scale, 211.57142639160156 * scale, 150.38392639160156 * scale);\r\n    ctx.bezierCurveTo(211.57142639160156 * scale, 227.59821128845215 * scale, 211.57142639160156 * scale, 227.59821128845215 * scale, 211.57142639160156 * scale, 304.81249618530273 * scale);\r\n    ctx.bezierCurveTo(212.57142639160156 * scale, 328.81249618530273 * scale, 209.57142639160156 * scale, 330.81249618530273 * scale, 188.57142639160156 * scale, 333.81249618530273 * scale);\r\n    ctx.bezierCurveTo(155.07142639160156 * scale, 333.31249618530273 * scale, 155.07142639160156 * scale, 333.31249618530273 * scale, 121.57142639160156 * scale, 332.81249618530273 * scale);\r\n    ctx.bezierCurveTo(104.57142639160156 * scale, 327.81249618530273 * scale, 105.57142639160156 * scale, 328.81249618530273 * scale, 104.57142639160156 * scale, 312.81249618530273 * scale);\r\n    ctx.bezierCurveTo(104.57142639160156 * scale, 228.16963958740234 * scale, 104.57142639160156 * scale, 228.16963958740234 * scale, 104.57142639160156 * scale, 143.52678298950195 * scale);\r\n    ctx.bezierCurveTo(106.57142639160156 * scale, 124.52678298950195 * scale, 110.57142639160156 * scale, 123.52678298950195 * scale, 123.57142639160156 * scale, 116.52678298950195 * scale);\r\n    ctx.bezierCurveTo(136.57142639160156 * scale, 110.52678298950195 * scale, 130.57142639160156 * scale, 106.52678298950195 * scale, 126.57142639160156 * scale, 98.52678298950195 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[5], 15 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(125.57142639160156 * scale, 156.66963958740234 * scale);\r\n    ctx.bezierCurveTo(125.57142639160156 * scale, 182.66963958740234 * scale, 125.57142639160156 * scale, 182.66963958740234 * scale, 125.57142639160156 * scale, 208.66963958740234 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[6], 15 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_drink_delay(scale, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 316 * scale;\r\n    can.height = 365 * scale;\r\n    ctx.save();\r\n    ctx.translate(156.07142639160156 * scale, 51.81248474121094 * scale);\r\n    ctx.rotate(0);\r\n    round_rect(ctx, -21.5 * scale, -34 * scale, 43 * scale, 68 * scale, 8 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0], color[0], 15 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(126.57142639160156 * scale, 67.38392639160156 * scale);\r\n    ctx.bezierCurveTo(126.57142639160156 * scale, 57.38392639160156 * scale, 132.57142639160156 * scale, 54.38392639160156 * scale, 140.57142639160156 * scale, 54.38392639160156 * scale);\r\n    ctx.bezierCurveTo(177.57142639160156 * scale, 55.38392639160156 * scale, 158.07142639160156 * scale, 54.38392639160156 * scale, 175.57142639160156 * scale, 54.38392639160156 * scale);\r\n    ctx.bezierCurveTo(185.57142639160156 * scale, 56.38392639160156 * scale, 185.57142639160156 * scale, 57.38392639160156 * scale, 184.57142639160156 * scale, 66.38392639160156 * scale);\r\n    ctx.bezierCurveTo(184.57142639160156 * scale, 78.38392639160156 * scale, 184.57142639160156 * scale, 89.38392639160156 * scale, 184.57142639160156 * scale, 90.38392639160156 * scale);\r\n    ctx.bezierCurveTo(177.57142639160156 * scale, 107.38392639160156 * scale, 180.57142639160156 * scale, 112.38392639160156 * scale, 189.57142639160156 * scale, 116.38392639160156 * scale);\r\n    ctx.bezierCurveTo(212.57142639160156 * scale, 127.38392639160156 * scale, 212.57142639160156 * scale, 132.38392639160156 * scale, 211.57142639160156 * scale, 150.38392639160156 * scale);\r\n    ctx.bezierCurveTo(211.57142639160156 * scale, 227.59821128845215 * scale, 211.57142639160156 * scale, 227.59821128845215 * scale, 211.57142639160156 * scale, 304.81249618530273 * scale);\r\n    ctx.bezierCurveTo(212.57142639160156 * scale, 328.81249618530273 * scale, 209.57142639160156 * scale, 330.81249618530273 * scale, 188.57142639160156 * scale, 333.81249618530273 * scale);\r\n    ctx.bezierCurveTo(155.07142639160156 * scale, 333.31249618530273 * scale, 155.07142639160156 * scale, 333.31249618530273 * scale, 121.57142639160156 * scale, 332.81249618530273 * scale);\r\n    ctx.bezierCurveTo(104.57142639160156 * scale, 327.81249618530273 * scale, 105.57142639160156 * scale, 328.81249618530273 * scale, 104.57142639160156 * scale, 312.81249618530273 * scale);\r\n    ctx.bezierCurveTo(104.57142639160156 * scale, 228.16963958740234 * scale, 104.57142639160156 * scale, 228.16963958740234 * scale, 104.57142639160156 * scale, 143.52678298950195 * scale);\r\n    ctx.bezierCurveTo(106.57142639160156 * scale, 124.52678298950195 * scale, 110.57142639160156 * scale, 123.52678298950195 * scale, 123.57142639160156 * scale, 116.52678298950195 * scale);\r\n    ctx.bezierCurveTo(136.57142639160156 * scale, 110.52678298950195 * scale, 130.57142639160156 * scale, 106.52678298950195 * scale, 126.57142639160156 * scale, 98.52678298950195 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[0], 15 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(125.57142639160156 * scale, 156.66963958740234 * scale);\r\n    ctx.bezierCurveTo(125.57142639160156 * scale, 182.66963958740234 * scale, 125.57142639160156 * scale, 182.66963958740234 * scale, 125.57142639160156 * scale, 208.66963958740234 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[0], 15 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_bucket_empty(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 400 * scale;\r\n    can.height = 400 * scale;\r\n    ctx.translate(0, 15 * scale);\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(102 * scale, 154 * scale);\r\n    ctx.bezierCurveTo(108 * scale, 216.5 * scale, 108 * scale, 216.5 * scale, 114 * scale, 279 * scale);\r\n    ctx.bezierCurveTo(124 * scale, 300 * scale, 237 * scale, 299 * scale, 251 * scale, 279 * scale);\r\n    ctx.bezierCurveTo(257 * scale, 217 * scale, 257 * scale, 217 * scale, 263 * scale, 155 * scale);\r\n    ctx.bezierCurveTo(248 * scale, 194 * scale, 91 * scale, 180 * scale, 103 * scale, 156 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(102 * scale, 154 * scale);\r\n    ctx.bezierCurveTo(106 * scale, 53 * scale, 255 * scale, 53 * scale, 263 * scale, 154 * scale);\r\n    ctx.bezierCurveTo(248 * scale, 38 * scale, 99 * scale, 69 * scale, 103 * scale, 154 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[0], 11 * scale);\r\n    ctx.translate(0, -5 * scale);\r\n    ctx.globalAlpha = 1;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(103 * scale, 154 * scale);\r\n    ctx.bezierCurveTo(98 * scale, 119 * scale, 264 * scale, 119 * scale, 264 * scale, 154 * scale);\r\n    ctx.bezierCurveTo(271 * scale, 189 * scale, 94 * scale, 188 * scale, 103 * scale, 154 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[2], 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(102 * scale, 154 * scale);\r\n    ctx.bezierCurveTo(108 * scale, 216.5 * scale, 108 * scale, 216.5 * scale, 114 * scale, 279 * scale);\r\n    ctx.bezierCurveTo(124 * scale, 300 * scale, 237 * scale, 299 * scale, 251 * scale, 279 * scale);\r\n    ctx.bezierCurveTo(257 * scale, 217 * scale, 257 * scale, 217 * scale, 263 * scale, 155 * scale);\r\n    ctx.bezierCurveTo(248 * scale, 194 * scale, 91 * scale, 180 * scale, 103 * scale, 156 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(182 * scale, 185 * scale);\r\n    ctx.bezierCurveTo(182.5 * scale, 237.5 * scale, 182.5 * scale, 237.5 * scale, 183 * scale, 290 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[2], 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(222 * scale, 287 * scale);\r\n    ctx.bezierCurveTo(226 * scale, 233.5 * scale, 226 * scale, 233.5 * scale, 230 * scale, 180 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[2], 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(145 * scale, 290 * scale);\r\n    ctx.bezierCurveTo(140.5 * scale, 237 * scale, 140.5 * scale, 237 * scale, 136 * scale, 184 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 11 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(105 * scale, 184 * scale);\r\n    ctx.bezierCurveTo(148 * scale, 205 * scale, 231 * scale, 202 * scale, 260 * scale, 182 * scale);\r\n    ctx.bezierCurveTo(259 * scale, 195.5 * scale, 259 * scale, 195.5 * scale, 258 * scale, 209 * scale);\r\n    ctx.bezierCurveTo(217 * scale, 218 * scale, 163 * scale, 225 * scale, 108 * scale, 207 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[2], 11 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(251 * scale, 276 * scale);\r\n    ctx.bezierCurveTo(251.5 * scale, 267.5 * scale, 251.5 * scale, 267.5 * scale, 252 * scale, 259 * scale);\r\n    ctx.bezierCurveTo(212 * scale, 272 * scale, 156 * scale, 275 * scale, 112 * scale, 260 * scale);\r\n    ctx.bezierCurveTo(112.5 * scale, 269 * scale, 112.5 * scale, 269 * scale, 113 * scale, 278 * scale);\r\n    ctx.bezierCurveTo(155 * scale, 306 * scale, 253 * scale, 286 * scale, 250 * scale, 276 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[2], 11 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(102 * scale, 154 * scale);\r\n    ctx.bezierCurveTo(106 * scale, 53 * scale, 255 * scale, 53 * scale, 263 * scale, 154 * scale);\r\n    ctx.bezierCurveTo(248 * scale, 38 * scale, 99 * scale, 69 * scale, 103 * scale, 154 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[2], 11 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_bucket_full(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 400 * scale;\r\n    can.height = 400 * scale;\r\n    ctx.translate(0, 15 * scale);\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(102 * scale, 154 * scale);\r\n    ctx.bezierCurveTo(108 * scale, 216.5 * scale, 108 * scale, 216.5 * scale, 114 * scale, 279 * scale);\r\n    ctx.bezierCurveTo(124 * scale, 300 * scale, 237 * scale, 299 * scale, 251 * scale, 279 * scale);\r\n    ctx.bezierCurveTo(257 * scale, 217 * scale, 257 * scale, 217 * scale, 263 * scale, 155 * scale);\r\n    ctx.bezierCurveTo(248 * scale, 194 * scale, 91 * scale, 180 * scale, 103 * scale, 156 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(102 * scale, 154 * scale);\r\n    ctx.bezierCurveTo(106 * scale, 53 * scale, 255 * scale, 53 * scale, 263 * scale, 154 * scale);\r\n    ctx.bezierCurveTo(248 * scale, 38 * scale, 99 * scale, 69 * scale, 103 * scale, 154 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[0], 11 * scale);\r\n    ctx.translate(0, -5 * scale);\r\n    ctx.globalAlpha = 1;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(103 * scale, 154 * scale);\r\n    ctx.bezierCurveTo(98 * scale, 119 * scale, 264 * scale, 119 * scale, 264 * scale, 154 * scale);\r\n    ctx.bezierCurveTo(271 * scale, 189 * scale, 94 * scale, 188 * scale, 103 * scale, 154 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[2], 12 * scale);\r\n    ctx.translate(0, 25 * scale);\r\n    ctx.globalAlpha = 1;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(103 * scale, 154 * scale);\r\n    ctx.bezierCurveTo(98 * scale, 119 * scale, 264 * scale, 119 * scale, 264 * scale, 154 * scale);\r\n    ctx.bezierCurveTo(271 * scale, 189 * scale, 94 * scale, 188 * scale, 103 * scale, 154 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[5]);\r\n    ctx.translate(0, -25 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(102 * scale, 154 * scale);\r\n    ctx.bezierCurveTo(108 * scale, 216.5 * scale, 108 * scale, 216.5 * scale, 114 * scale, 279 * scale);\r\n    ctx.bezierCurveTo(124 * scale, 300 * scale, 237 * scale, 299 * scale, 251 * scale, 279 * scale);\r\n    ctx.bezierCurveTo(257 * scale, 217 * scale, 257 * scale, 217 * scale, 263 * scale, 155 * scale);\r\n    ctx.bezierCurveTo(248 * scale, 194 * scale, 91 * scale, 180 * scale, 103 * scale, 156 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(182 * scale, 185 * scale);\r\n    ctx.bezierCurveTo(182.5 * scale, 237.5 * scale, 182.5 * scale, 237.5 * scale, 183 * scale, 290 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[2], 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(222 * scale, 287 * scale);\r\n    ctx.bezierCurveTo(226 * scale, 233.5 * scale, 226 * scale, 233.5 * scale, 230 * scale, 180 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[2], 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(145 * scale, 290 * scale);\r\n    ctx.bezierCurveTo(140.5 * scale, 237 * scale, 140.5 * scale, 237 * scale, 136 * scale, 184 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 11 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(105 * scale, 184 * scale);\r\n    ctx.bezierCurveTo(148 * scale, 205 * scale, 231 * scale, 202 * scale, 260 * scale, 182 * scale);\r\n    ctx.bezierCurveTo(259 * scale, 195.5 * scale, 259 * scale, 195.5 * scale, 258 * scale, 209 * scale);\r\n    ctx.bezierCurveTo(217 * scale, 218 * scale, 163 * scale, 225 * scale, 108 * scale, 207 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[2], 11 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(251 * scale, 276 * scale);\r\n    ctx.bezierCurveTo(251.5 * scale, 267.5 * scale, 251.5 * scale, 267.5 * scale, 252 * scale, 259 * scale);\r\n    ctx.bezierCurveTo(212 * scale, 272 * scale, 156 * scale, 275 * scale, 112 * scale, 260 * scale);\r\n    ctx.bezierCurveTo(112.5 * scale, 269 * scale, 112.5 * scale, 269 * scale, 113 * scale, 278 * scale);\r\n    ctx.bezierCurveTo(155 * scale, 306 * scale, 253 * scale, 286 * scale, 250 * scale, 276 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[2], 11 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(102 * scale, 154 * scale);\r\n    ctx.bezierCurveTo(106 * scale, 53 * scale, 255 * scale, 53 * scale, 263 * scale, 154 * scale);\r\n    ctx.bezierCurveTo(248 * scale, 38 * scale, 99 * scale, 69 * scale, 103 * scale, 154 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, undefined, color[2], 11 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_shovel(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 80 * scale;\r\n    can.height = 160 * scale;\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(5 * scale, 5 * scale);\r\n    ctx.save();\r\n    round_rect(ctx, 33 * scale, 53 * scale, 10 * scale, 98 * scale, 10 * scale);\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.translate(-150 * scale, -100 * scale);\r\n    ctx.moveTo(167.5 * scale, 171.0625 * scale);\r\n    ctx.bezierCurveTo(188 * scale, 171.0625 * scale, 188 * scale, 171.0625 * scale, 208.5 * scale, 171.0625 * scale);\r\n    ctx.bezierCurveTo(208.5 * scale, 156.0625 * scale, 208.5 * scale, 156.0625 * scale, 208.5 * scale, 141.0625 * scale);\r\n    ctx.bezierCurveTo(203.5 * scale, 113.0625 * scale, 179.5 * scale, 96.0625 * scale, 167.5 * scale, 141.0625 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.restore();\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(-5 * scale, -5 * scale);\r\n    ctx.save();\r\n    round_rect(ctx, 33 * scale, 53 * scale, 10 * scale, 98 * scale, 10 * scale);\r\n    fill_path(ctx, color[1], color[2], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.translate(-150 * scale, -100 * scale);\r\n    ctx.moveTo(167.5 * scale, 171.0625 * scale);\r\n    ctx.bezierCurveTo(188 * scale, 171.0625 * scale, 188 * scale, 171.0625 * scale, 208.5 * scale, 171.0625 * scale);\r\n    ctx.bezierCurveTo(208.5 * scale, 156.0625 * scale, 208.5 * scale, 156.0625 * scale, 208.5 * scale, 141.0625 * scale);\r\n    ctx.bezierCurveTo(203.5 * scale, 113.0625 * scale, 179.5 * scale, 96.0625 * scale, 167.5 * scale, 141.0625 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[4], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.translate(0 * scale, 1 * scale);\r\n    ctx.moveTo(180.5 * scale, 169.0625 * scale);\r\n    ctx.bezierCurveTo(180.5 * scale, 157.5625 * scale, 180.5 * scale, 157.5625 * scale, 180.5 * scale, 146.0625 * scale);\r\n    ctx.bezierCurveTo(181.5 * scale, 134.0625 * scale, 193.5 * scale, 129.0625 * scale, 196.5 * scale, 146.0625 * scale);\r\n    ctx.bezierCurveTo(196.5 * scale, 157.5625 * scale, 196.5 * scale, 157.5625 * scale, 196.5 * scale, 169.0625 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[5]);\r\n    ctx.restore();\r\n    return can;\r\n}\r\n;\r\nfunction create_symbol_hud(scale, color, i) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 109 * scale;\r\n    can.height = 110 * scale;\r\n    circle(ctx, 54.5 * scale, 55 * scale, 48.038209575038294 * scale);\r\n    fill_path(ctx, color[0], color[1], 8 * scale);\r\n    if (i == 0) {\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(54.928558349609375 * scale, 43.72320556640625 * scale);\r\n        ctx.bezierCurveTo(66.92855834960938 * scale, 31.72320556640625 * scale, 69.92855834960938 * scale, 29.72320556640625 * scale, 74.92855834960938 * scale, 29.72320556640625 * scale);\r\n        ctx.bezierCurveTo(86.92855834960938 * scale, 28.72320556640625 * scale, 91.92855834960938 * scale, 42.72320556640625 * scale, 89.92855834960938 * scale, 52.72320556640625 * scale);\r\n        ctx.bezierCurveTo(88.92855834960938 * scale, 63.72320556640625 * scale, 73.92855834960938 * scale, 75.72320556640625 * scale, 55.928558349609375 * scale, 87.72320556640625 * scale);\r\n        ctx.bezierCurveTo(37.928558349609375 * scale, 78.72320556640625 * scale, 26.928558349609375 * scale, 65.72320556640625 * scale, 19.928558349609375 * scale, 54.72320556640625 * scale);\r\n        ctx.bezierCurveTo(13.928558349609375 * scale, 42.72320556640625 * scale, 21.928558349609375 * scale, 28.72320556640625 * scale, 35.928558349609375 * scale, 29.72320556640625 * scale);\r\n        ctx.bezierCurveTo(45.928558349609375 * scale, 31.72320556640625 * scale, 51.928558349609375 * scale, 40.72320556640625 * scale, 53.928558349609375 * scale, 44.72320556640625 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[2]);\r\n    } else if (i == 1) {\r\n        ctx.save();\r\n        ctx.translate(55 * scale, 39.48748779296875 * scale);\r\n        round_rect(ctx, -11.5 * scale, -36 * scale, 23 * scale, 72 * scale, 10 * scale);\r\n        ctx.restore();\r\n        fill_path(ctx, color[2], color[3], 4 * scale);\r\n        circle(ctx, 54.5 * scale, 78.48748779296875 * scale, 22.02271554554524 * scale);\r\n        fill_path(ctx, color[4], color[3], 4 * scale);\r\n        ctx.save();\r\n        ctx.translate(55.5 * scale, 57.287506103515625 * scale);\r\n        round_rect(ctx, -9 * scale, -16 * scale, 18 * scale, 32 * scale, 10 * scale);\r\n        ctx.restore();\r\n        fill_path(ctx, color[4]);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(66.5 * scale, 25.287506103515625 * scale);\r\n        ctx.bezierCurveTo(60.5 * scale, 25.287506103515625 * scale, 63.5 * scale, 25.287506103515625 * scale, 54.5 * scale, 25.287506103515625 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, undefined, color[5], 4 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(66.5 * scale, 37.287506103515625 * scale);\r\n        ctx.bezierCurveTo(60.5 * scale, 37.287506103515625 * scale, 60.5 * scale, 37.287506103515625 * scale, 54.5 * scale, 37.287506103515625 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, undefined, color[5], 4 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(66.5 * scale, 50.287506103515625 * scale);\r\n        ctx.bezierCurveTo(61 * scale, 50.287506103515625 * scale, 61 * scale, 50.287506103515625 * scale, 55.5 * scale, 50.287506103515625 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, undefined, color[5], 4 * scale);\r\n    } else if (i == 2) {\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(45.928558349609375 * scale, 55.29463195800781 * scale);\r\n        ctx.bezierCurveTo(38.928558349609375 * scale, 67.29463195800781 * scale, 38.928558349609375 * scale, 67.29463195800781 * scale, 31.928558349609375 * scale, 79.29463195800781 * scale);\r\n        ctx.bezierCurveTo(15.928558349609375 * scale, 85.29463195800781 * scale, 17.928558349609375 * scale, 86.29463195800781 * scale, 17.928558349609375 * scale, 90.29463195800781 * scale);\r\n        ctx.bezierCurveTo(19.928558349609375 * scale, 94.29463195800781 * scale, 21.928558349609375 * scale, 94.29463195800781 * scale, 27.928558349609375 * scale, 92.29463195800781 * scale);\r\n        ctx.bezierCurveTo(29.928558349609375 * scale, 98.29463195800781 * scale, 30.928558349609375 * scale, 99.29463195800781 * scale, 33.928558349609375 * scale, 99.29463195800781 * scale);\r\n        ctx.bezierCurveTo(38.928558349609375 * scale, 97.29463195800781 * scale, 38.928558349609375 * scale, 93.29463195800781 * scale, 37.928558349609375 * scale, 86.29463195800781 * scale);\r\n        ctx.bezierCurveTo(45.428558349609375 * scale, 73.29463195800781 * scale, 51.928558349609375 * scale, 64.29463195800781 * scale, 52.928558349609375 * scale, 60.29463195800781 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[2]);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(55.928558349609375 * scale, 8.866058349609375 * scale);\r\n        ctx.bezierCurveTo(35.928558349609375 * scale, 35.866058349609375 * scale, 37.928558349609375 * scale, 48.866058349609375 * scale, 46.928558349609375 * scale, 62.866058349609375 * scale);\r\n        ctx.bezierCurveTo(65.92855834960938 * scale, 72.86605834960938 * scale, 80.92855834960938 * scale, 55.866058349609375 * scale, 93.92855834960938 * scale, 36.866058349609375 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[3], color[4], 6 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(93.92855834960938 * scale, 36.866058349609375 * scale);\r\n        ctx.bezierCurveTo(82.92855834960938 * scale, 37.866058349609375 * scale, 77.92855834960938 * scale, 36.866058349609375 * scale, 67.92855834960938 * scale, 28.866058349609375 * scale);\r\n        ctx.bezierCurveTo(53.928558349609375 * scale, 16.866058349609375 * scale, 53.928558349609375 * scale, 14.866058349609375 * scale, 55.928558349609375 * scale, 7.866058349609375 * scale);\r\n        ctx.bezierCurveTo(65.92855834960938 * scale, 4.866058349609375 * scale, 71.92855834960938 * scale, 7.866058349609375 * scale, 83.92855834960938 * scale, 13.866058349609375 * scale);\r\n        ctx.bezierCurveTo(96.92855834960938 * scale, 21.866058349609375 * scale, 95.92855834960938 * scale, 31.866058349609375 * scale, 92.92855834960938 * scale, 36.866058349609375 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[3], color[4], 6 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(68.92855834960938 * scale, 16.866058349609375 * scale);\r\n        ctx.bezierCurveTo(71.92855834960938 * scale, 13.866058349609375 * scale, 76.92855834960938 * scale, 16.866058349609375 * scale, 79.92855834960938 * scale, 21.866058349609375 * scale);\r\n        ctx.bezierCurveTo(82.92855834960938 * scale, 24.866058349609375 * scale, 81.92855834960938 * scale, 27.866058349609375 * scale, 73.92855834960938 * scale, 24.866058349609375 * scale);\r\n        ctx.bezierCurveTo(67.92855834960938 * scale, 20.866058349609375 * scale, 66.92855834960938 * scale, 19.866058349609375 * scale, 67.92855834960938 * scale, 17.866058349609375 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[2]);\r\n    } else if (i == 3) {\r\n        ctx.scale(0.9, 0.9);\r\n        ctx.translate(6 * scale, 0);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(54 * scale, 0.421875 * scale);\r\n        ctx.bezierCurveTo(84 * scale, 45.421875 * scale, 89 * scale, 51.421875 * scale, 83 * scale, 74.421875 * scale);\r\n        ctx.bezierCurveTo(74 * scale, 95.421875 * scale, 46 * scale, 98.421875 * scale, 30 * scale, 78.421875 * scale);\r\n        ctx.bezierCurveTo(22 * scale, 59.421875 * scale, 27 * scale, 49.421875 * scale, 34 * scale, 36.421875 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[2], color[3], 6 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(74 * scale, 52.421875 * scale);\r\n        ctx.bezierCurveTo(77 * scale, 73.421875 * scale, 69 * scale, 81.421875 * scale, 58 * scale, 81.421875 * scale);\r\n        ctx.bezierCurveTo(66 * scale, 71.421875 * scale, 70 * scale, 66.421875 * scale, 74 * scale, 52.421875 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[3]);\r\n    }\r\n    return can;\r\n}\r\n;\r\nfunction create_button_background(style, pressed) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    var w = style.w + style.lw;\r\n    var h = style.h + style.lw;\r\n    var shadow = h * 0.1;\r\n    can.width = w;\r\n    can.height = h + shadow;\r\n    ctx.beginPath();\r\n    ctx.translate(w / 2, h / 2 + shadow);\r\n    ctx.globalAlpha = 0.5;\r\n    round_rect(ctx, -style.w / 2, -style.h / 2, style.w, style.h, style.r);\r\n    fill_path(ctx, \"#000\", \"#000\", style.lw);\r\n    ctx.globalAlpha = 1;\r\n    ctx.beginPath();\r\n    if (!pressed) ctx.translate(0, -shadow);\r\n    round_rect(ctx, -style.w / 2, -style.h / 2, style.w, style.h, style.r);\r\n    fill_path(ctx, style.bg, style.fg, style.lw);\r\n    ctx.beginPath();\r\n    ctx.fillStyle = style.color;\r\n    ctx.textBaseline = \"middle\", ctx.textAlign = \"center\", ctx.font = style.size + \"px \" + style.font;\r\n    ctx.fillText(style.text, 0, 0);\r\n    return can;\r\n}\r\n;\r\nfunction create_button(style) {\r\n    var buttons = [];\r\n    for (var i = 0; i < style.length; i++) buttons.push(create_button_background(style[i], i == 2 ? true : false));\r\n    return buttons;\r\n}\r\n;\r\nfunction create_gauges_mobile(scale) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    var w = 335 * scale;\r\n    var gw = 250 * scale;\r\n    var h = 120 * scale;\r\n    var hg = 20 * scale;\r\n    var gh = 35 * scale;\r\n    var xw = 65 * scale;\r\n    var r = 2 * scale;\r\n    var lw = 4 * scale;\r\n    can.width = w;\r\n    can.height = h;\r\n    ctx.beginPath();\r\n    ctx.translate(0, 15 * scale);\r\n    round_rect(ctx, xw, 0, gw, hg, r);\r\n    fill_path(ctx, null, \"#69A148\", lw);\r\n    ctx.translate(0, gh);\r\n    round_rect(ctx, xw, 0, gw, hg, r);\r\n    fill_path(ctx, null, \"#AF352A\", lw);\r\n    ctx.translate(0, gh);\r\n    round_rect(ctx, xw, 0, gw, hg, r);\r\n    fill_path(ctx, null, \"#669BB1\", lw);\r\n    return can;\r\n}\r\n;\r\nfunction create_oxygen_gauges(scale) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    var w = 600 * scale;\r\n    var h = 22 * scale;\r\n    var r = 4 * scale;\r\n    var lw = 4 * scale;\r\n    can.width = w;\r\n    can.height = h;\r\n    round_rect(ctx, 5 * scale, 5 * scale, w - 10 * scale, h - 10 * scale, r);\r\n    fill_path(ctx, null, \"#BBE8EF\", lw);\r\n    return can;\r\n}\r\n;\r\nfunction create_recipe_button(scale, color, i) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 573 * scale;\r\n    can.height = 350 * scale;\r\n    if (i == 1) {\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(336 * scale, 72 * scale);\r\n        ctx.bezierCurveTo(366 * scale, 15 * scale, 426 * scale, 36 * scale, 497 * scale, 83 * scale);\r\n        ctx.bezierCurveTo(522 * scale, 85 * scale, 522 * scale, 85 * scale, 547 * scale, 87 * scale);\r\n        ctx.bezierCurveTo(476.5 * scale, 205 * scale, 476.5 * scale, 205 * scale, 406 * scale, 323 * scale);\r\n        ctx.bezierCurveTo(297.5 * scale, 319 * scale, 297.5 * scale, 319 * scale, 189 * scale, 315 * scale);\r\n        ctx.bezierCurveTo(105.5 * scale, 279 * scale, 105.5 * scale, 279 * scale, 22 * scale, 243 * scale);\r\n        ctx.bezierCurveTo(92 * scale, 140 * scale, 92 * scale, 140 * scale, 162 * scale, 37 * scale);\r\n        ctx.bezierCurveTo(173 * scale, 39 * scale, 173 * scale, 39 * scale, 184 * scale, 41 * scale);\r\n        ctx.bezierCurveTo(185 * scale, 38.5 * scale, 185 * scale, 38.5 * scale, 186 * scale, 36 * scale);\r\n        ctx.bezierCurveTo(323 * scale, 13 * scale, 322 * scale, 25 * scale, 337 * scale, 74 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[4], color[4], 35 * scale);\r\n    }\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(168 * scale, 42 * scale);\r\n    ctx.bezierCurveTo(255 * scale, 60 * scale, 255 * scale, 60 * scale, 342 * scale, 78 * scale);\r\n    ctx.bezierCurveTo(443 * scale, 81.5 * scale, 443 * scale, 81.5 * scale, 544 * scale, 85 * scale);\r\n    ctx.bezierCurveTo(475 * scale, 204.5 * scale, 475 * scale, 204.5 * scale, 406 * scale, 324 * scale);\r\n    ctx.bezierCurveTo(297.5 * scale, 320 * scale, 297.5 * scale, 320 * scale, 189 * scale, 316 * scale);\r\n    ctx.bezierCurveTo(105.5 * scale, 279 * scale, 105.5 * scale, 279 * scale, 22 * scale, 242 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[1], 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(188 * scale, 41 * scale);\r\n    ctx.bezierCurveTo(308 * scale, 15 * scale, 325 * scale, 18 * scale, 337 * scale, 66 * scale);\r\n    ctx.bezierCurveTo(191 * scale, 305 * scale, 196 * scale, 286 * scale, 184 * scale, 307 * scale);\r\n    ctx.bezierCurveTo(175 * scale, 250 * scale, 90 * scale, 254 * scale, 52 * scale, 241 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2], color[3], 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(336 * scale, 71 * scale);\r\n    ctx.bezierCurveTo(375 * scale, 8 * scale, 429 * scale, 50 * scale, 518 * scale, 92 * scale);\r\n    ctx.bezierCurveTo(455 * scale, 199.5 * scale, 455 * scale, 199.5 * scale, 392 * scale, 307 * scale);\r\n    ctx.bezierCurveTo(227 * scale, 301 * scale, 261 * scale, 255 * scale, 188 * scale, 308 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2], color[3], 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(357 * scale, 76 * scale);\r\n    ctx.bezierCurveTo(390 * scale, 67 * scale, 414 * scale, 86 * scale, 435 * scale, 104 * scale);\r\n    ctx.bezierCurveTo(417 * scale, 135 * scale, 417 * scale, 135 * scale, 399 * scale, 166 * scale);\r\n    ctx.bezierCurveTo(352 * scale, 140 * scale, 345 * scale, 139 * scale, 319 * scale, 142 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[3], 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(309 * scale, 168 * scale);\r\n    ctx.bezierCurveTo(345 * scale, 163 * scale, 372 * scale, 180 * scale, 412 * scale, 203 * scale);\r\n    fill_path(ctx, color[2], color[3], 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(263 * scale, 54 * scale);\r\n    ctx.bezierCurveTo(305 * scale, 44 * scale, 307 * scale, 51 * scale, 311 * scale, 64 * scale);\r\n    ctx.bezierCurveTo(270.5 * scale, 129.5 * scale, 270.5 * scale, 129.5 * scale, 230 * scale, 195 * scale);\r\n    ctx.bezierCurveTo(221 * scale, 175 * scale, 203 * scale, 171 * scale, 186 * scale, 172 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[3], 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(292 * scale, 198 * scale);\r\n    ctx.bezierCurveTo(328 * scale, 191 * scale, 364 * scale, 211 * scale, 401 * scale, 237 * scale);\r\n    fill_path(ctx, color[2], color[3], 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(245 * scale, 68 * scale);\r\n    ctx.bezierCurveTo(210 * scale, 72 * scale, 210 * scale, 72 * scale, 189 * scale, 69 * scale);\r\n    fill_path(ctx, color[2], color[3], 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(222 * scale, 96 * scale);\r\n    ctx.bezierCurveTo(196 * scale, 97 * scale, 193 * scale, 97 * scale, 177 * scale, 92 * scale);\r\n    fill_path(ctx, color[2], color[3], 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(207 * scale, 124 * scale);\r\n    ctx.bezierCurveTo(179 * scale, 123 * scale, 177 * scale, 124 * scale, 161 * scale, 119 * scale);\r\n    fill_path(ctx, color[2], color[3], 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(115 * scale, 183 * scale);\r\n    ctx.bezierCurveTo(184 * scale, 185 * scale, 203 * scale, 198 * scale, 219 * scale, 221 * scale);\r\n    fill_path(ctx, color[2], color[3], 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(98 * scale, 213 * scale);\r\n    ctx.bezierCurveTo(161 * scale, 214 * scale, 193 * scale, 227 * scale, 201 * scale, 249 * scale);\r\n    fill_path(ctx, color[2], color[3], 12 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(399 * scale, 257 * scale);\r\n    ctx.bezierCurveTo(287 * scale, 215 * scale, 280 * scale, 215 * scale, 263 * scale, 222 * scale);\r\n    ctx.bezierCurveTo(253 * scale, 238 * scale, 247 * scale, 245 * scale, 243 * scale, 254 * scale);\r\n    ctx.bezierCurveTo(267 * scale, 236 * scale, 292 * scale, 263 * scale, 377 * scale, 284 * scale);\r\n    fill_path(ctx, color[3], color[3], 12 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_quest_button(scale, draw_shadow, color, i) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 170 * scale;\r\n    can.height = 200 * scale;\r\n    ctx.translate(5 * scale, 15 * scale);\r\n    if (i == 1) {\r\n        ctx.translate(0, -5 * scale);\r\n        circle(ctx, 77.00003051757812 * scale, 104.49432373046875 * scale, 71.84010022264724 * scale);\r\n        fill_path(ctx, color[1], color[5], 20 * scale);\r\n        circle(ctx, 77.00003051757812 * scale, 104.22160339355469 * scale, 61.554853586049575 * scale);\r\n        fill_path(ctx, color[1], color[5], 20 * scale);\r\n        ctx.save();\r\n        ctx.translate(77.00003051757812 * scale, 31.267044067382812 * scale);\r\n        round_rect(ctx, -6 * scale, -12.5 * scale, 12 * scale, 25 * scale, 10 * scale);\r\n        ctx.restore();\r\n        fill_path(ctx, color[1], color[5], 20 * scale);\r\n        ctx.save();\r\n        ctx.translate(77.00003051757812 * scale, 13.267044067382812 * scale);\r\n        round_rect(ctx, -15 * scale, -10.5 * scale, 30 * scale, 21 * scale, 10 * scale);\r\n        ctx.restore();\r\n        fill_path(ctx, color[1], color[5], 20 * scale);\r\n    }\r\n    circle(ctx, 77.00003051757812 * scale, 104.49432373046875 * scale, 71.84010022264724 * scale);\r\n    fill_path(ctx, color[1], color[2], 7 * scale);\r\n    circle(ctx, 77.00003051757812 * scale, 104.22160339355469 * scale, 61.554853586049575 * scale);\r\n    fill_path(ctx, color[1], color[2], 7 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(18.000030517578125 * scale, 105.85795593261719 * scale);\r\n    ctx.bezierCurveTo(134.00003051757812 * scale, 104.85795593261719 * scale, 77.00003051757812 * scale, 104.85795593261719 * scale, 136.00003051757812 * scale, 103.85795593261719 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 8 * scale);\r\n    circle(ctx, 77.00003051757812 * scale, 104.6761474609375 * scale, 32.55764119219941 * scale);\r\n    fill_path(ctx, color[1], color[2], 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(78.00003051757812 * scale, 112.03977966308594 * scale);\r\n    ctx.bezierCurveTo(78.00003051757812 * scale, 87.03977966308594 * scale, 78.00003051757812 * scale, 87.03977966308594 * scale, 78.00003051757812 * scale, 62.03977966308594 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[2], 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(78.00003051757812 * scale, 48.03977966308594 * scale);\r\n    ctx.bezierCurveTo(82.00003051757812 * scale, 55.53977966308594 * scale, 82.00003051757812 * scale, 55.53977966308594 * scale, 86.00003051757812 * scale, 63.03977966308594 * scale);\r\n    ctx.bezierCurveTo(78.00003051757812 * scale, 63.03977966308594 * scale, 78.00003051757812 * scale, 63.03977966308594 * scale, 70.00003051757812 * scale, 63.03977966308594 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[2], 4 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(80.00003051757812 * scale, 111.6761474609375 * scale);\r\n    ctx.bezierCurveTo(95.00003051757812 * scale, 97.1761474609375 * scale, 95.00003051757812 * scale, 97.1761474609375 * scale, 110.00003051757812 * scale, 82.6761474609375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[2], 8 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(107.00003051757812 * scale, 76.6761474609375 * scale);\r\n    ctx.bezierCurveTo(111.50003051757812 * scale, 82.6761474609375 * scale, 111.50003051757812 * scale, 82.6761474609375 * scale, 116.00003051757812 * scale, 88.6761474609375 * scale);\r\n    ctx.bezierCurveTo(118.50003051757812 * scale, 81.6761474609375 * scale, 118.50003051757812 * scale, 81.6761474609375 * scale, 121.00003051757812 * scale, 74.6761474609375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[2], 4 * scale);\r\n    circle(ctx, 77.00003051757812 * scale, 105.03977966308594 * scale, 15.556349186104045 * scale);\r\n    fill_path(ctx, color[3], color[2], 4 * scale);\r\n    ctx.save();\r\n    ctx.translate(77.00003051757812 * scale, 31.267044067382812 * scale);\r\n    ctx.rotate(0);\r\n    round_rect(ctx, -6 * scale, -12.5 * scale, 12 * scale, 25 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[1], color[2], 7 * scale);\r\n    ctx.save();\r\n    ctx.translate(77.00003051757812 * scale, 13.267044067382812 * scale);\r\n    ctx.rotate(0);\r\n    round_rect(ctx, -15 * scale, -10.5 * scale, 30 * scale, 21 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[1], color[2], 7 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_market_button(scale, color, i) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 81 * scale;\r\n    can.height = 77 * scale;\r\n    ctx.translate(0, 10 * scale);\r\n    ctx.scale(0.2, 0.2);\r\n    ctx.translate(0, -30 * scale);\r\n    if (i == 1) {\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(36.5 * scale, 278.0625 * scale);\r\n        ctx.bezierCurveTo(67.5 * scale, 316.0625 * scale, 134.5 * scale, 334.0625 * scale, 199.5 * scale, 319.0625 * scale);\r\n        ctx.bezierCurveTo(254.5 * scale, 304.0625 * scale, 346.5 * scale, 270.0625 * scale, 348.5 * scale, 237.0625 * scale);\r\n        ctx.bezierCurveTo(359.5 * scale, 206.0625 * scale, 318.5 * scale, 129.0625 * scale, 262.5 * scale, 122.0625 * scale);\r\n        ctx.bezierCurveTo(213.5 * scale, 115.0625 * scale, 166.5 * scale, 133.0625 * scale, 104.5 * scale, 166.0625 * scale);\r\n        ctx.bezierCurveTo(54.5 * scale, 194.0625 * scale, 23.5 * scale, 241.0625 * scale, 36.5 * scale, 277.0625 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[0], color[3], 50 * scale);\r\n    }\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(36.5 * scale, 278.0625 * scale);\r\n    ctx.bezierCurveTo(67.5 * scale, 316.0625 * scale, 134.5 * scale, 334.0625 * scale, 199.5 * scale, 319.0625 * scale);\r\n    ctx.bezierCurveTo(254.5 * scale, 304.0625 * scale, 346.5 * scale, 270.0625 * scale, 348.5 * scale, 237.0625 * scale);\r\n    ctx.bezierCurveTo(359.5 * scale, 206.0625 * scale, 318.5 * scale, 129.0625 * scale, 262.5 * scale, 122.0625 * scale);\r\n    ctx.bezierCurveTo(213.5 * scale, 115.0625 * scale, 166.5 * scale, 133.0625 * scale, 104.5 * scale, 166.0625 * scale);\r\n    ctx.bezierCurveTo(54.5 * scale, 194.0625 * scale, 23.5 * scale, 241.0625 * scale, 36.5 * scale, 277.0625 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[1], 19 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(214.5 * scale, 124.0625 * scale);\r\n    ctx.bezierCurveTo(242.5 * scale, 125.0625 * scale, 272.5 * scale, 159.0625 * scale, 283.5 * scale, 184.0625 * scale);\r\n    ctx.bezierCurveTo(277.5 * scale, 161.0625 * scale, 233.5 * scale, 128.0625 * scale, 219.5 * scale, 122.0625 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[1], 19 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(157.5 * scale, 145.0625 * scale);\r\n    ctx.bezierCurveTo(176.5 * scale, 148.0625 * scale, 205.5 * scale, 176.0625 * scale, 212.5 * scale, 197.0625 * scale);\r\n    ctx.bezierCurveTo(205.5 * scale, 178.0625 * scale, 177.5 * scale, 152.0625 * scale, 156.5 * scale, 142.0625 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[1], 19 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(103.5 * scale, 169.0625 * scale);\r\n    ctx.bezierCurveTo(160.5 * scale, 166.0625 * scale, 228.5 * scale, 312.0625 * scale, 162.5 * scale, 323.0625 * scale);\r\n    ctx.bezierCurveTo(128.5 * scale, 330.0625 * scale, 45.5 * scale, 312.0625 * scale, 34.5 * scale, 268.0625 * scale);\r\n    ctx.bezierCurveTo(30.5 * scale, 238.0625 * scale, 44.5 * scale, 222.0625 * scale, 52.5 * scale, 211.0625 * scale);\r\n    ctx.bezierCurveTo(82.5 * scale, 174.0625 * scale, 104.5 * scale, 166.0625 * scale, 119.5 * scale, 172.0625 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2], color[1], 19 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(194.5 * scale, 313.0625 * scale);\r\n    ctx.bezierCurveTo(222.5 * scale, 306.0625 * scale, 319.5 * scale, 271.0625 * scale, 337.5 * scale, 241.0625 * scale);\r\n    ctx.bezierCurveTo(274.5 * scale, 270.0625 * scale, 216.5 * scale, 288.0625 * scale, 199.5 * scale, 287.0625 * scale);\r\n    ctx.bezierCurveTo(198.5 * scale, 302.0625 * scale, 195.5 * scale, 311.0625 * scale, 193.5 * scale, 312.0625 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1]);\r\n    ctx.scale(3, 3);\r\n    ctx.translate(15, 10 * scale);\r\n    if (i == 1) {\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(4 * scale, 32 * scale);\r\n        ctx.bezierCurveTo(19 * scale, 25 * scale, 19 * scale, 25 * scale, 34 * scale, 18 * scale);\r\n        ctx.bezierCurveTo(41.5 * scale, 23.5 * scale, 41.5 * scale, 23.5 * scale, 49 * scale, 29 * scale);\r\n        ctx.bezierCurveTo(59.5 * scale, 20 * scale, 59.5 * scale, 20 * scale, 70 * scale, 11 * scale);\r\n        fill_path(ctx, undefined, color[3], 28 * scale);\r\n        ctx.beginPath();\r\n        ctx.lineCap = \"round\";\r\n        ctx.lineJoin = \"round\";\r\n        ctx.moveTo(56 * scale, 6 * scale);\r\n        ctx.bezierCurveTo(63.5 * scale, 13.5 * scale, 63.5 * scale, 13.5 * scale, 71 * scale, 21 * scale);\r\n        ctx.bezierCurveTo(74.5 * scale, 11.5 * scale, 74.5 * scale, 11.5 * scale, 78 * scale, 2 * scale);\r\n        ctx.closePath();\r\n        fill_path(ctx, color[3], color[3], 28 * scale);\r\n    }\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(4 * scale, 32 * scale);\r\n    ctx.bezierCurveTo(19 * scale, 25 * scale, 19 * scale, 25 * scale, 34 * scale, 18 * scale);\r\n    ctx.bezierCurveTo(41.5 * scale, 23.5 * scale, 41.5 * scale, 23.5 * scale, 49 * scale, 29 * scale);\r\n    ctx.bezierCurveTo(59.5 * scale, 20 * scale, 59.5 * scale, 20 * scale, 70 * scale, 11 * scale);\r\n    fill_path(ctx, undefined, color[1], 17 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(56 * scale, 6 * scale);\r\n    ctx.bezierCurveTo(63.5 * scale, 13.5 * scale, 63.5 * scale, 13.5 * scale, 71 * scale, 21 * scale);\r\n    ctx.bezierCurveTo(74.5 * scale, 11.5 * scale, 74.5 * scale, 11.5 * scale, 78 * scale, 2 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[1], 17 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(4 * scale, 32 * scale);\r\n    ctx.bezierCurveTo(19 * scale, 25 * scale, 19 * scale, 25 * scale, 34 * scale, 18 * scale);\r\n    ctx.bezierCurveTo(41.5 * scale, 23.5 * scale, 41.5 * scale, 23.5 * scale, 49 * scale, 29 * scale);\r\n    ctx.bezierCurveTo(59.5 * scale, 20 * scale, 59.5 * scale, 20 * scale, 70 * scale, 11 * scale);\r\n    fill_path(ctx, undefined, color[2], 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(56 * scale, 6 * scale);\r\n    ctx.bezierCurveTo(63.5 * scale, 13.5 * scale, 63.5 * scale, 13.5 * scale, 71 * scale, 21 * scale);\r\n    ctx.bezierCurveTo(74.5 * scale, 11.5 * scale, 74.5 * scale, 11.5 * scale, 78 * scale, 2 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2], color[2], 10 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_spanner(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 144 * scale;\r\n    can.height = 280 * scale;\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(5 * scale, 5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(62 * scale, 103.79999542236328 * scale);\r\n    ctx.bezierCurveTo(62.5 * scale, 148.79999542236328 * scale, 62.5 * scale, 148.79999542236328 * scale, 63 * scale, 193.79999542236328 * scale);\r\n    ctx.bezierCurveTo(63 * scale, 219.79999542236328 * scale, 47 * scale, 217.79999542236328 * scale, 51 * scale, 230.79999542236328 * scale);\r\n    ctx.bezierCurveTo(62 * scale, 255.79999542236328 * scale, 74 * scale, 260.7999954223633 * scale, 72 * scale, 248.79999542236328 * scale);\r\n    ctx.bezierCurveTo(65 * scale, 226.79999542236328 * scale, 71 * scale, 229.79999542236328 * scale, 76 * scale, 225.79999542236328 * scale);\r\n    ctx.bezierCurveTo(90 * scale, 224.79999542236328 * scale, 89 * scale, 232.79999542236328 * scale, 90 * scale, 243.79999542236328 * scale);\r\n    ctx.bezierCurveTo(95 * scale, 253.79999542236328 * scale, 99 * scale, 249.79999542236328 * scale, 100 * scale, 229.79999542236328 * scale);\r\n    ctx.bezierCurveTo(102 * scale, 213.79999542236328 * scale, 98 * scale, 214.79999542236328 * scale, 90 * scale, 205.79999542236328 * scale);\r\n    ctx.bezierCurveTo(82 * scale, 201.79999542236328 * scale, 82 * scale, 185.79999542236328 * scale, 82 * scale, 114.79999542236328 * scale);\r\n    ctx.bezierCurveTo(80 * scale, 73 * scale, 82 * scale, 68 * scale, 93 * scale, 53 * scale);\r\n    ctx.bezierCurveTo(98 * scale, 37 * scale, 65 * scale, 14 * scale, 74 * scale, 33 * scale);\r\n    ctx.bezierCurveTo(82 * scale, 56 * scale, 77 * scale, 52 * scale, 69 * scale, 54 * scale);\r\n    ctx.bezierCurveTo(55 * scale, 57 * scale, 57 * scale, 53 * scale, 54 * scale, 39 * scale);\r\n    ctx.bezierCurveTo(46 * scale, 20 * scale, 37 * scale, 61 * scale, 50 * scale, 68 * scale);\r\n    ctx.bezierCurveTo(65 * scale, 81 * scale, 60 * scale, 89 * scale, 62 * scale, 102 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(-5 * scale, -5 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(62 * scale, 103.79999542236328 * scale);\r\n    ctx.bezierCurveTo(62.5 * scale, 148.79999542236328 * scale, 62.5 * scale, 148.79999542236328 * scale, 63 * scale, 193.79999542236328 * scale);\r\n    ctx.bezierCurveTo(63 * scale, 219.79999542236328 * scale, 47 * scale, 217.79999542236328 * scale, 51 * scale, 230.79999542236328 * scale);\r\n    ctx.bezierCurveTo(62 * scale, 255.79999542236328 * scale, 74 * scale, 260.7999954223633 * scale, 72 * scale, 248.79999542236328 * scale);\r\n    ctx.bezierCurveTo(65 * scale, 226.79999542236328 * scale, 71 * scale, 229.79999542236328 * scale, 76 * scale, 225.79999542236328 * scale);\r\n    ctx.bezierCurveTo(90 * scale, 224.79999542236328 * scale, 89 * scale, 232.79999542236328 * scale, 90 * scale, 243.79999542236328 * scale);\r\n    ctx.bezierCurveTo(95 * scale, 253.79999542236328 * scale, 99 * scale, 249.79999542236328 * scale, 100 * scale, 229.79999542236328 * scale);\r\n    ctx.bezierCurveTo(102 * scale, 213.79999542236328 * scale, 98 * scale, 214.79999542236328 * scale, 90 * scale, 205.79999542236328 * scale);\r\n    ctx.bezierCurveTo(82 * scale, 201.79999542236328 * scale, 82 * scale, 185.79999542236328 * scale, 82 * scale, 114.79999542236328 * scale);\r\n    ctx.bezierCurveTo(80 * scale, 73 * scale, 82 * scale, 68 * scale, 93 * scale, 53 * scale);\r\n    ctx.bezierCurveTo(98 * scale, 37 * scale, 65 * scale, 14 * scale, 74 * scale, 33 * scale);\r\n    ctx.bezierCurveTo(82 * scale, 56 * scale, 77 * scale, 52 * scale, 69 * scale, 54 * scale);\r\n    ctx.bezierCurveTo(55 * scale, 57 * scale, 57 * scale, 53 * scale, 54 * scale, 39 * scale);\r\n    ctx.bezierCurveTo(46 * scale, 20 * scale, 37 * scale, 61 * scale, 50 * scale, 68 * scale);\r\n    ctx.bezierCurveTo(65 * scale, 81 * scale, 60 * scale, 89 * scale, 62 * scale, 102 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[2], 6 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_present(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 160 * scale;\r\n    can.height = 161 * scale;\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(0, 10 * scale);\r\n    ctx.save();\r\n    ctx.translate(80.5 * scale, 78 * scale);\r\n    round_rect(ctx, -71.5 * scale, -71 * scale, 143 * scale, 143 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(0, -10 * scale);\r\n    ctx.save();\r\n    ctx.translate(80.5 * scale, 78 * scale);\r\n    round_rect(ctx, -71.5 * scale, -71 * scale, 143 * scale, 143 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[1], color[2], 6 * scale);\r\n    ctx.save();\r\n    ctx.translate(80 * scale, 78.5 * scale);\r\n    round_rect(ctx, -17 * scale, -72.5 * scale, 34 * scale, 145 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[3], color[4], 6 * scale);\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(0, 10 * scale);\r\n    ctx.save();\r\n    ctx.translate(80 * scale, 79.5 * scale);\r\n    round_rect(ctx, -73 * scale, -16.5 * scale, 145 * scale, 34 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(0, -10 * scale);\r\n    ctx.save();\r\n    ctx.translate(80 * scale, 79.5 * scale);\r\n    round_rect(ctx, -73 * scale, -16.5 * scale, 145 * scale, 34 * scale, 10 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[3], color[4], 6 * scale);\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(0, 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(79 * scale, 71 * scale);\r\n    ctx.bezierCurveTo(90 * scale, 42 * scale, 98 * scale, 36 * scale, 109 * scale, 43 * scale);\r\n    ctx.bezierCurveTo(119 * scale, 47 * scale, 128 * scale, 62 * scale, 107 * scale, 72 * scale);\r\n    ctx.bezierCurveTo(96 * scale, 78.5 * scale, 96 * scale, 78.5 * scale, 85 * scale, 85 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(84 * scale, 78 * scale);\r\n    ctx.bezierCurveTo(113 * scale, 82 * scale, 123 * scale, 97 * scale, 115 * scale, 108 * scale);\r\n    ctx.bezierCurveTo(110 * scale, 119 * scale, 98 * scale, 124 * scale, 87 * scale, 107 * scale);\r\n    ctx.bezierCurveTo(81.5 * scale, 94.5 * scale, 81.5 * scale, 94.5 * scale, 76 * scale, 82 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(80 * scale, 73 * scale);\r\n    ctx.bezierCurveTo(64 * scale, 37 * scale, 55 * scale, 34 * scale, 45 * scale, 42 * scale);\r\n    ctx.bezierCurveTo(30 * scale, 54 * scale, 36 * scale, 65 * scale, 51 * scale, 72 * scale);\r\n    ctx.bezierCurveTo(62.5 * scale, 77 * scale, 62.5 * scale, 77 * scale, 74 * scale, 82 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(82 * scale, 83 * scale);\r\n    ctx.bezierCurveTo(73 * scale, 107 * scale, 60 * scale, 123 * scale, 47 * scale, 113 * scale);\r\n    ctx.bezierCurveTo(33 * scale, 105 * scale, 33 * scale, 92 * scale, 52 * scale, 85 * scale);\r\n    ctx.bezierCurveTo(74 * scale, 73 * scale, 77 * scale, 76 * scale, 76 * scale, 75 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(0, -10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(79 * scale, 71 * scale);\r\n    ctx.bezierCurveTo(90 * scale, 42 * scale, 98 * scale, 36 * scale, 109 * scale, 43 * scale);\r\n    ctx.bezierCurveTo(119 * scale, 47 * scale, 128 * scale, 62 * scale, 107 * scale, 72 * scale);\r\n    ctx.bezierCurveTo(96 * scale, 78.5 * scale, 96 * scale, 78.5 * scale, 85 * scale, 85 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[4], 6 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(84 * scale, 78 * scale);\r\n    ctx.bezierCurveTo(113 * scale, 82 * scale, 123 * scale, 97 * scale, 115 * scale, 108 * scale);\r\n    ctx.bezierCurveTo(110 * scale, 119 * scale, 98 * scale, 124 * scale, 87 * scale, 107 * scale);\r\n    ctx.bezierCurveTo(81.5 * scale, 94.5 * scale, 81.5 * scale, 94.5 * scale, 76 * scale, 82 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[4], 6 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(80 * scale, 73 * scale);\r\n    ctx.bezierCurveTo(64 * scale, 37 * scale, 55 * scale, 34 * scale, 45 * scale, 42 * scale);\r\n    ctx.bezierCurveTo(30 * scale, 54 * scale, 36 * scale, 65 * scale, 51 * scale, 72 * scale);\r\n    ctx.bezierCurveTo(62.5 * scale, 77 * scale, 62.5 * scale, 77 * scale, 74 * scale, 82 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[4], 6 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(82 * scale, 83 * scale);\r\n    ctx.bezierCurveTo(73 * scale, 107 * scale, 60 * scale, 123 * scale, 47 * scale, 113 * scale);\r\n    ctx.bezierCurveTo(33 * scale, 105 * scale, 33 * scale, 92 * scale, 52 * scale, 85 * scale);\r\n    ctx.bezierCurveTo(74 * scale, 73 * scale, 77 * scale, 76 * scale, 76 * scale, 75 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3], color[4], 6 * scale);\r\n    ctx.globalAlpha = draw_shadow ? 0.5 : 1;\r\n    ctx.translate(0, 10 * scale);\r\n    ctx.save();\r\n    ctx.translate(78.5 * scale, 78 * scale);\r\n    round_rect(ctx, -13.5 * scale, -14 * scale, 27 * scale, 27 * scale, 6 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[0]);\r\n    ctx.globalAlpha = 1;\r\n    ctx.translate(0, -10 * scale);\r\n    ctx.save();\r\n    ctx.translate(78.5 * scale, 78 * scale);\r\n    round_rect(ctx, -13.5 * scale, -14 * scale, 27 * scale, 27 * scale, 6 * scale);\r\n    ctx.restore();\r\n    fill_path(ctx, color[3], color[4], 6 * scale);\r\n    return can;\r\n}\r\n;\r\nfunction create_crown_life(scale, draw_shadow, color) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 372 * scale;\r\n    can.height = 358 * scale;\r\n    ctx.translate(0 * scale, 10 * scale);\r\n    ctx.globalAlpha = draw_shadow ? 0.2 : 1;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(247.00003051757812 * scale, 115.76704406738281 * scale);\r\n    ctx.bezierCurveTo(305.0000305175781 * scale, 124.76704406738281 * scale, 335.0000305175781 * scale, 112.76704406738281 * scale, 359.0000305175781 * scale, 93.76704406738281 * scale);\r\n    ctx.bezierCurveTo(359.5000305175781 * scale, 113.26704406738281 * scale, 359.5000305175781 * scale, 113.26704406738281 * scale, 360.0000305175781 * scale, 132.7670440673828 * scale);\r\n    ctx.bezierCurveTo(339.0000305175781 * scale, 177.7670440673828 * scale, 281.0000305175781 * scale, 178.7670440673828 * scale, 243.00003051757812 * scale, 183.7670440673828 * scale);\r\n    ctx.bezierCurveTo(214.50003051757812 * scale, 214.2670440673828 * scale, 214.50003051757812 * scale, 214.2670440673828 * scale, 186.00003051757812 * scale, 244.7670440673828 * scale);\r\n    ctx.bezierCurveTo(155.00003051757812 * scale, 214.2670440673828 * scale, 155.00003051757812 * scale, 214.2670440673828 * scale, 124.00003051757812 * scale, 183.7670440673828 * scale);\r\n    ctx.bezierCurveTo(51.000030517578125 * scale, 180.7670440673828 * scale, 21.000030517578125 * scale, 161.7670440673828 * scale, 9.000030517578125 * scale, 129.7670440673828 * scale);\r\n    ctx.bezierCurveTo(8.500030517578125 * scale, 110.76704406738281 * scale, 8.500030517578125 * scale, 110.76704406738281 * scale, 8.000030517578125 * scale, 91.76704406738281 * scale);\r\n    ctx.bezierCurveTo(31.000030517578125 * scale, 112.76704406738281 * scale, 87.00003051757812 * scale, 119.76704406738281 * scale, 116.00003051757812 * scale, 117.76704406738281 * scale);\r\n    ctx.bezierCurveTo(175.00003051757812 * scale, 18.767044067382812 * scale, 170.00003051757812 * scale, 23.767044067382812 * scale, 181.00003051757812 * scale, 14.767044067382812 * scale);\r\n    ctx.bezierCurveTo(199.00003051757812 * scale, 34.76704406738281 * scale, 203.00003051757812 * scale, 54.76704406738281 * scale, 247.00003051757812 * scale, 115.76704406738281 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[0], color[0], 10 * scale);\r\n    ctx.translate(0 * scale, -10 * scale);\r\n    ctx.globalAlpha = 1;\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(107.00003051757812 * scale, 54.13069152832031 * scale);\r\n    ctx.bezierCurveTo(106.50003051757812 * scale, 38.63069152832031 * scale, 106.50003051757812 * scale, 38.63069152832031 * scale, 106.00003051757812 * scale, 23.130691528320312 * scale);\r\n    ctx.bezierCurveTo(121.50003051757812 * scale, 38.13069152832031 * scale, 121.50003051757812 * scale, 38.13069152832031 * scale, 137.00003051757812 * scale, 53.13069152832031 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2], color[3], 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(233.00003051757812 * scale, 53.6761474609375 * scale);\r\n    ctx.bezierCurveTo(247.00003051757812 * scale, 37.1761474609375 * scale, 247.00003051757812 * scale, 37.1761474609375 * scale, 261.0000305175781 * scale, 20.6761474609375 * scale);\r\n    ctx.bezierCurveTo(261.0000305175781 * scale, 36.1761474609375 * scale, 261.0000305175781 * scale, 36.1761474609375 * scale, 261.0000305175781 * scale, 51.6761474609375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2], color[3], 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(293.0000305175781 * scale, 54.403411865234375 * scale);\r\n    ctx.bezierCurveTo(300.0000305175781 * scale, 49.903411865234375 * scale, 300.0000305175781 * scale, 49.903411865234375 * scale, 307.0000305175781 * scale, 45.403411865234375 * scale);\r\n    ctx.bezierCurveTo(307.0000305175781 * scale, 49.903411865234375 * scale, 307.0000305175781 * scale, 49.903411865234375 * scale, 307.0000305175781 * scale, 54.403411865234375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2], color[3], 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(77.00003051757812 * scale, 54.403411865234375 * scale);\r\n    ctx.bezierCurveTo(70.00003051757812 * scale, 50.403411865234375 * scale, 70.00003051757812 * scale, 50.403411865234375 * scale, 63.000030517578125 * scale, 46.403411865234375 * scale);\r\n    ctx.bezierCurveTo(62.500030517578125 * scale, 50.903411865234375 * scale, 62.500030517578125 * scale, 50.903411865234375 * scale, 62.000030517578125 * scale, 55.403411865234375 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2], color[3], 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(58.000030517578125 * scale, 122.3125 * scale);\r\n    ctx.bezierCurveTo(59.500030517578125 * scale, 97.3125 * scale, 59.500030517578125 * scale, 97.3125 * scale, 61.000030517578125 * scale, 72.3125 * scale);\r\n    ctx.bezierCurveTo(91.00003051757812 * scale, 89.3125 * scale, 91.00003051757812 * scale, 89.3125 * scale, 121.00003051757812 * scale, 106.3125 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[1], 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(310.0000305175781 * scale, 127.3125 * scale);\r\n    ctx.bezierCurveTo(308.0000305175781 * scale, 98.3125 * scale, 308.0000305175781 * scale, 98.3125 * scale, 306.0000305175781 * scale, 69.3125 * scale);\r\n    ctx.bezierCurveTo(274.5000305175781 * scale, 88.8125 * scale, 274.5000305175781 * scale, 88.8125 * scale, 243.00003051757812 * scale, 108.3125 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[1], 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(226.00003051757812 * scale, 87.85795593261719 * scale);\r\n    ctx.bezierCurveTo(243.50003051757812 * scale, 66.85795593261719 * scale, 243.50003051757812 * scale, 66.85795593261719 * scale, 261.0000305175781 * scale, 45.85795593261719 * scale);\r\n    ctx.bezierCurveTo(265.0000305175781 * scale, 83.85795593261719 * scale, 265.0000305175781 * scale, 83.85795593261719 * scale, 269.0000305175781 * scale, 121.85795593261719 * scale);\r\n    ctx.bezierCurveTo(235.00003051757812 * scale, 122.85795593261719 * scale, 233.00003051757812 * scale, 107.85795593261719 * scale, 228.00003051757812 * scale, 90.85795593261719 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2], color[3], 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(105.00003051757812 * scale, 128.8579559326172 * scale);\r\n    ctx.bezierCurveTo(104.50003051757812 * scale, 87.85795593261719 * scale, 104.50003051757812 * scale, 87.85795593261719 * scale, 104.00003051757812 * scale, 46.85795593261719 * scale);\r\n    ctx.bezierCurveTo(126.50003051757812 * scale, 69.35795593261719 * scale, 126.50003051757812 * scale, 69.35795593261719 * scale, 149.00003051757812 * scale, 91.85795593261719 * scale);\r\n    ctx.bezierCurveTo(130.00003051757812 * scale, 123.85795593261719 * scale, 123.00003051757812 * scale, 132.8579559326172 * scale, 107.00003051757812 * scale, 130.8579559326172 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[1], 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(59.000030517578125 * scale, 121.85795593261719 * scale);\r\n    ctx.bezierCurveTo(59.500030517578125 * scale, 99.35795593261719 * scale, 59.500030517578125 * scale, 99.35795593261719 * scale, 60.000030517578125 * scale, 76.85795593261719 * scale);\r\n    ctx.bezierCurveTo(84.00003051757812 * scale, 92.35795593261719 * scale, 84.00003051757812 * scale, 92.35795593261719 * scale, 108.00003051757812 * scale, 107.85795593261719 * scale);\r\n    ctx.bezierCurveTo(106.00003051757812 * scale, 148.8579559326172 * scale, 86.00003051757812 * scale, 148.8579559326172 * scale, 62.000030517578125 * scale, 123.85795593261719 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2], color[3], 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(105.00003051757812 * scale, 132.8579559326172 * scale);\r\n    ctx.bezierCurveTo(104.50003051757812 * scale, 93.35795593261719 * scale, 104.50003051757812 * scale, 93.35795593261719 * scale, 104.00003051757812 * scale, 53.85795593261719 * scale);\r\n    ctx.bezierCurveTo(126.50003051757812 * scale, 75.85795593261719 * scale, 126.50003051757812 * scale, 75.85795593261719 * scale, 149.00003051757812 * scale, 97.85795593261719 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2], color[3], 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(311.0000305175781 * scale, 126.85795593261719 * scale);\r\n    ctx.bezierCurveTo(309.0000305175781 * scale, 101.35795593261719 * scale, 309.0000305175781 * scale, 101.35795593261719 * scale, 307.0000305175781 * scale, 75.85795593261719 * scale);\r\n    ctx.bezierCurveTo(271.0000305175781 * scale, 96.85795593261719 * scale, 271.0000305175781 * scale, 96.85795593261719 * scale, 235.00003051757812 * scale, 117.85795593261719 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2], color[3], 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(228.00003051757812 * scale, 96.85795593261719 * scale);\r\n    ctx.bezierCurveTo(244.50003051757812 * scale, 74.85795593261719 * scale, 244.50003051757812 * scale, 74.85795593261719 * scale, 261.0000305175781 * scale, 52.85795593261719 * scale);\r\n    ctx.bezierCurveTo(265.5000305175781 * scale, 89.85795593261719 * scale, 265.5000305175781 * scale, 89.85795593261719 * scale, 270.0000305175781 * scale, 126.85795593261719 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2], color[3], 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(12.000030517578125 * scale, 86.13069152832031 * scale);\r\n    ctx.bezierCurveTo(36.000030517578125 * scale, 113.13069152832031 * scale, 84.00003051757812 * scale, 111.13069152832031 * scale, 116.00003051757812 * scale, 113.13069152832031 * scale);\r\n    ctx.bezierCurveTo(164.00003051757812 * scale, 23.130691528320312 * scale, 172.00003051757812 * scale, 18.130691528320312 * scale, 181.00003051757812 * scale, 9.130691528320312 * scale);\r\n    ctx.bezierCurveTo(199.00003051757812 * scale, 29.130691528320312 * scale, 221.00003051757812 * scale, 78.13069152832031 * scale, 247.00003051757812 * scale, 112.13069152832031 * scale);\r\n    ctx.bezierCurveTo(301.0000305175781 * scale, 122.13069152832031 * scale, 338.0000305175781 * scale, 111.13069152832031 * scale, 359.0000305175781 * scale, 94.13069152832031 * scale);\r\n    ctx.bezierCurveTo(359.0000305175781 * scale, 113.13069152832031 * scale, 358.5000305175781 * scale, 105.13069152832031 * scale, 358.0000305175781 * scale, 116.13069152832031 * scale);\r\n    ctx.bezierCurveTo(270.5000305175781 * scale, 130.1306915283203 * scale, 270.5000305175781 * scale, 130.1306915283203 * scale, 183.00003051757812 * scale, 144.1306915283203 * scale);\r\n    ctx.bezierCurveTo(98.00003051757812 * scale, 128.6306915283203 * scale, 98.00003051757812 * scale, 128.6306915283203 * scale, 13.000030517578125 * scale, 113.13069152832031 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[1], 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(247.00003051757812 * scale, 115.76704406738281 * scale);\r\n    ctx.bezierCurveTo(305.0000305175781 * scale, 124.76704406738281 * scale, 335.0000305175781 * scale, 112.76704406738281 * scale, 359.0000305175781 * scale, 93.76704406738281 * scale);\r\n    ctx.bezierCurveTo(359.5000305175781 * scale, 113.26704406738281 * scale, 359.5000305175781 * scale, 113.26704406738281 * scale, 360.0000305175781 * scale, 132.7670440673828 * scale);\r\n    ctx.bezierCurveTo(339.0000305175781 * scale, 177.7670440673828 * scale, 281.0000305175781 * scale, 178.7670440673828 * scale, 243.00003051757812 * scale, 183.7670440673828 * scale);\r\n    ctx.bezierCurveTo(214.50003051757812 * scale, 214.2670440673828 * scale, 214.50003051757812 * scale, 214.2670440673828 * scale, 186.00003051757812 * scale, 244.7670440673828 * scale);\r\n    ctx.bezierCurveTo(155.00003051757812 * scale, 214.2670440673828 * scale, 155.00003051757812 * scale, 214.2670440673828 * scale, 124.00003051757812 * scale, 183.7670440673828 * scale);\r\n    ctx.bezierCurveTo(51.000030517578125 * scale, 180.7670440673828 * scale, 21.000030517578125 * scale, 161.7670440673828 * scale, 9.000030517578125 * scale, 129.7670440673828 * scale);\r\n    ctx.bezierCurveTo(8.500030517578125 * scale, 110.76704406738281 * scale, 8.500030517578125 * scale, 110.76704406738281 * scale, 8.000030517578125 * scale, 91.76704406738281 * scale);\r\n    ctx.bezierCurveTo(31.000030517578125 * scale, 112.76704406738281 * scale, 87.00003051757812 * scale, 119.76704406738281 * scale, 116.00003051757812 * scale, 117.76704406738281 * scale);\r\n    ctx.bezierCurveTo(175.00003051757812 * scale, 18.767044067382812 * scale, 170.00003051757812 * scale, 23.767044067382812 * scale, 181.00003051757812 * scale, 14.767044067382812 * scale);\r\n    ctx.bezierCurveTo(199.00003051757812 * scale, 34.76704406738281 * scale, 203.00003051757812 * scale, 54.76704406738281 * scale, 247.00003051757812 * scale, 115.76704406738281 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2], color[3], 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(27.000030517578125 * scale, 94.76704406738281 * scale);\r\n    ctx.bezierCurveTo(11.000030517578125 * scale, 81.76704406738281 * scale, 31.000030517578125 * scale, 72.76704406738281 * scale, 44.000030517578125 * scale, 59.76704406738281 * scale);\r\n    ctx.bezierCurveTo(9.000030517578125 * scale, 65.76704406738281 * scale, 4.000030517578125 * scale, 78.76704406738281 * scale, 9.000030517578125 * scale, 89.76704406738281 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2], color[3], 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(352.0000305175781 * scale, 100.76705932617188 * scale);\r\n    ctx.bezierCurveTo(362.0000305175781 * scale, 92.76705932617188 * scale, 352.0000305175781 * scale, 84.76705932617188 * scale, 340.0000305175781 * scale, 68.76705932617188 * scale);\r\n    ctx.bezierCurveTo(360.0000305175781 * scale, 69.76705932617188 * scale, 364.0000305175781 * scale, 79.76705932617188 * scale, 364.0000305175781 * scale, 94.76705932617188 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[1], color[1], 1 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(25.000030517578125 * scale, 97.94886779785156 * scale);\r\n    ctx.bezierCurveTo(2.000030517578125 * scale, 76.94886779785156 * scale, 29.000030517578125 * scale, 62.94886779785156 * scale, 44.000030517578125 * scale, 59.94886779785156 * scale);\r\n    ctx.bezierCurveTo(8.000030517578125 * scale, 59.94886779785156 * scale, -0.999969482421875 * scale, 81.94886779785156 * scale, 4.000030517578125 * scale, 92.94886779785156 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[3]);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(349.0000305175781 * scale, 100.94886779785156 * scale);\r\n    ctx.bezierCurveTo(366.0000305175781 * scale, 82.94886779785156 * scale, 353.0000305175781 * scale, 76.94886779785156 * scale, 337.0000305175781 * scale, 67.94886779785156 * scale);\r\n    ctx.bezierCurveTo(366.0000305175781 * scale, 69.94886779785156 * scale, 366.0000305175781 * scale, 83.94886779785156 * scale, 363.0000305175781 * scale, 101.94886779785156 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[2], color[3], 10 * scale);\r\n    circle(ctx, 46.000030517578125 * scale, 137.5852279663086 * scale, 9.219544457292887 * scale);\r\n    fill_path(ctx, color[4], color[5], 1 * scale);\r\n    circle(ctx, 308.0000305175781 * scale, 141.5852279663086 * scale, 8.54400374531753 * scale);\r\n    fill_path(ctx, color[4], color[5], 1 * scale);\r\n    circle(ctx, 92.00003051757812 * scale, 149.58523559570312 * scale, 14.866068747318506 * scale);\r\n    fill_path(ctx, color[4], color[5], 1 * scale);\r\n    circle(ctx, 262.0000305175781 * scale, 148.8579559326172 * scale, 15.620499351813308 * scale);\r\n    fill_path(ctx, color[4], color[5], 1 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(184.00003051757812 * scale, 68.85795593261719 * scale);\r\n    ctx.bezierCurveTo(203.00003051757812 * scale, 108.85795593261719 * scale, 203.00003051757812 * scale, 108.85795593261719 * scale, 222.00003051757812 * scale, 148.8579559326172 * scale);\r\n    ctx.bezierCurveTo(202.50003051757812 * scale, 177.8579559326172 * scale, 202.50003051757812 * scale, 177.8579559326172 * scale, 183.00003051757812 * scale, 206.8579559326172 * scale);\r\n    ctx.bezierCurveTo(162.00003051757812 * scale, 178.8579559326172 * scale, 162.00003051757812 * scale, 178.8579559326172 * scale, 141.00003051757812 * scale, 150.8579559326172 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[4], color[5], 10 * scale);\r\n    ctx.beginPath();\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.moveTo(183.00003051757812 * scale, 104.94886779785156 * scale);\r\n    ctx.bezierCurveTo(192.50003051757812 * scale, 125.44886779785156 * scale, 192.50003051757812 * scale, 125.44886779785156 * scale, 202.00003051757812 * scale, 145.94886779785156 * scale);\r\n    ctx.bezierCurveTo(192.00003051757812 * scale, 163.94886779785156 * scale, 192.00003051757812 * scale, 163.94886779785156 * scale, 182.00003051757812 * scale, 181.94886779785156 * scale);\r\n    ctx.bezierCurveTo(172.50003051757812 * scale, 164.44886779785156 * scale, 172.50003051757812 * scale, 164.44886779785156 * scale, 163.00003051757812 * scale, 146.94886779785156 * scale);\r\n    ctx.closePath();\r\n    fill_path(ctx, color[6]);\r\n    return can;\r\n}\r\n;\r\nfunction create_background_market() {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    can.width = 460;\r\n    can.height = 220;\r\n    ctx.fillStyle = \"#3a2a0d\";\r\n    ctx.fillRect(0, 0, can.width, can.height);\r\n    ctx.lineWidth = 4;\r\n    ctx.beginPath();\r\n    ctx.strokeStyle = \"#513810\";\r\n    for (var y = 20; y < 220; y += 20) {\r\n        ctx.moveTo(0, y);\r\n        ctx.lineTo(460, y);\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n    }\r\n    return can;\r\n}\r\n;\r\nfunction create_gauges(scale) {\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    var w = 950 * scale;\r\n    var gw = 180 * scale;\r\n    var h = 50 * scale;\r\n    var hg = 20 * scale;\r\n    var gh = 240 * scale;\r\n    var xw = 35 * scale;\r\n    var yh = 1 * scale;\r\n    var r = 4 * scale;\r\n    var lw = 4 * scale;\r\n    can.width = w;\r\n    can.height = h;\r\n    ctx.translate(0, 15 * scale);\r\n    round_rect(ctx, xw, yh, gw, hg, r);\r\n    fill_path(ctx, null, \"#69A148\", lw);\r\n    var img = sprite[SPRITE.HEART_SYMBOL_HUD];\r\n    ctx.drawImage(img, 17, -8);\r\n    ctx.translate(gh, 0);\r\n    round_rect(ctx, xw, yh, gw, hg, r);\r\n    fill_path(ctx, null, \"#AF352A\", lw);\r\n    var img = sprite[SPRITE.FOOD_SYMBOL_HUD];\r\n    ctx.drawImage(img, 17, -9);\r\n    ctx.translate(gh, 0);\r\n    round_rect(ctx, xw, yh, gw, hg, r);\r\n    fill_path(ctx, null, \"#669BB1\", lw);\r\n    var img = sprite[SPRITE.COLD_SYMBOL_HUD];\r\n    ctx.drawImage(img, 17, -8);\r\n    ctx.translate(gh, 0);\r\n    round_rect(ctx, xw, yh, gw, hg, r);\r\n    fill_path(ctx, null, \"#074A87\", lw);\r\n    var img = sprite[SPRITE.WATER_SYMBOL_HUD];\r\n    ctx.drawImage(img, 17, -8);\r\n    return can;\r\n}\r\n;\r\nfunction _load_images() {\r\n    var TIMEDEBUG = (new Date).getTime();\r\n    render_cosmetics();\r\n    function codeToTile(code) {\r\n        var tile = 0;\r\n        for (var i = 0, j = 0; i < code.length; i++) {\r\n            var c = code.charAt(i);\r\n            if (c === \"_\" || i === 5) continue;\r\n            if (c === \"1\") tile += Math.pow(2, j);\r\n            j++;\r\n        }\r\n        return tile;\r\n    }\r\n    ;\r\n    sprite[SPRITE.RIVER_WAVE] = [IMAGES.RIVER_WAVED, IMAGES.RIVER_WAVEN];\r\n    sprite[SPRITE.RIVER_DECO] = [];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.DAY] = [];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"000_010_000\")] = [IMAGES.DAY_RIVER_COMPO21, IMAGES.DAY_RIVER_COMPO20];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"000_010_010\")] = sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"000_010_000\")];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"000_011_000\")] = sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"000_010_000\")];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"000_011_010\")] = [IMAGES.DAY_RIVER_COMPO5, IMAGES.DAY_RIVER_COMPO6, IMAGES.DAY_RIVER_COMPO20, IMAGES.DAY_RIVER_COMPO21, IMAGES.DAY_RIVER_COMPO22, IMAGES.DAY_RIVER_COMPO23, IMAGES.DAY_RIVER_COMPO24];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"000_011_011\")] = [IMAGES.DAY_RIVER_COMPO4, IMAGES.DAY_RIVER_COMPO5, IMAGES.DAY_RIVER_COMPO6, IMAGES.DAY_RIVER_COMPO20, IMAGES.DAY_RIVER_COMPO21, IMAGES.DAY_RIVER_COMPO22, IMAGES.DAY_RIVER_COMPO23, IMAGES.DAY_RIVER_COMPO24, IMAGES.DAY_RIVER_COMPO25];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"000_110_000\")] = [IMAGES.DAY_RIVER_COMPO11, IMAGES.DAY_RIVER_COMPO20];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"000_110_010\")] = [IMAGES.DAY_RIVER_COMPO7, IMAGES.DAY_RIVER_COMPO11, IMAGES.DAY_RIVER_COMPO17, IMAGES.DAY_RIVER_COMPO20, IMAGES.DAY_RIVER_COMPO21, IMAGES.DAY_RIVER_COMPO25, IMAGES.DAY_RIVER_COMPO26, IMAGES.DAY_RIVER_COMPO27];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"000_110_110\")] = [IMAGES.DAY_RIVER_COMPO7, IMAGES.DAY_RIVER_COMPO8, IMAGES.DAY_RIVER_COMPO9, IMAGES.DAY_RIVER_COMPO11, IMAGES.DAY_RIVER_COMPO17, IMAGES.DAY_RIVER_COMPO20, IMAGES.DAY_RIVER_COMPO25, IMAGES.DAY_RIVER_COMPO26, IMAGES.DAY_RIVER_COMPO27];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"000_111_000\")] = [IMAGES.DAY_RIVER_COMPO11, IMAGES.DAY_RIVER_COMPO17, IMAGES.DAY_RIVER_COMPO18, IMAGES.DAY_RIVER_COMPO19];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"000_111_111\")] = [IMAGES.DAY_RIVER_COMPO11, IMAGES.DAY_RIVER_COMPO9, IMAGES.DAY_RIVER_COMPO7, IMAGES.DAY_RIVER_COMPO6, IMAGES.DAY_RIVER_COMPO5, IMAGES.DAY_RIVER_COMPO4, IMAGES.DAY_RIVER_COMPO13];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"010_010_000\")] = [IMAGES.DAY_RIVER_COMPO20];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"010_010_010\")] = [IMAGES.DAY_RIVER_COMPO16, IMAGES.DAY_RIVER_COMPO20, IMAGES.DAY_RIVER_COMPO21];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"010_011_000\")] = [IMAGES.DAY_RIVER_COMPO3, IMAGES.DAY_RIVER_COMPO20, IMAGES.DAY_RIVER_COMPO21, IMAGES.DAY_RIVER_COMPO26];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"010_110_000\")] = [IMAGES.DAY_RIVER_COMPO11, IMAGES.DAY_RIVER_COMPO17, IMAGES.DAY_RIVER_COMPO20, IMAGES.DAY_RIVER_COMPO26, IMAGES.DAY_RIVER_COMPO28];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"010_110_110\")] = [IMAGES.DAY_RIVER_COMPO2, IMAGES.DAY_RIVER_COMPO3, IMAGES.DAY_RIVER_COMPO5, IMAGES.DAY_RIVER_COMPO6, IMAGES.DAY_RIVER_COMPO7, IMAGES.DAY_RIVER_COMPO9, IMAGES.DAY_RIVER_COMPO11, IMAGES.DAY_RIVER_COMPO13, IMAGES.DAY_RIVER_COMPO15, IMAGES.DAY_RIVER_COMPO16, IMAGES.DAY_RIVER_COMPO17, IMAGES.DAY_RIVER_COMPO18, IMAGES.DAY_RIVER_COMPO19, IMAGES.DAY_RIVER_COMPO20, IMAGES.DAY_RIVER_COMPO21, IMAGES.DAY_RIVER_COMPO22, IMAGES.DAY_RIVER_COMPO23, IMAGES.DAY_RIVER_COMPO24, IMAGES.DAY_RIVER_COMPO25, IMAGES.DAY_RIVER_COMPO26, IMAGES.DAY_RIVER_COMPO28];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"010_011_010\")] = sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"010_110_110\")];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"010_011_011\")] = sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"010_110_110\")];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"000_111_011\")] = sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"010_110_110\")];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"010_110_010\")] = sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"010_110_110\")];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"010_111_000\")] = sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"010_110_110\")];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"010_111_010\")] = sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"010_110_110\")];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"010_111_011\")] = sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"010_110_110\")];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"010_111_110\")] = sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"010_110_110\")];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"010_111_111\")] = sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"010_110_110\")];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"000_111_110\")] = sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"010_110_110\")];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"000_111_010\")] = sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"010_110_110\")];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"011_011_000\")] = [IMAGES.DAY_RIVER_COMPO1, IMAGES.DAY_RIVER_COMPO2, IMAGES.DAY_RIVER_COMPO3, IMAGES.DAY_RIVER_COMPO20, IMAGES.DAY_RIVER_COMPO21, IMAGES.DAY_RIVER_COMPO26];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"011_011_010\")] = [IMAGES.DAY_RIVER_COMPO1, IMAGES.DAY_RIVER_COMPO2, IMAGES.DAY_RIVER_COMPO3, IMAGES.DAY_RIVER_COMPO11, IMAGES.DAY_RIVER_COMPO17, IMAGES.DAY_RIVER_COMPO18, IMAGES.DAY_RIVER_COMPO19, IMAGES.DAY_RIVER_COMPO20, IMAGES.DAY_RIVER_COMPO21, IMAGES.DAY_RIVER_COMPO26, IMAGES.DAY_RIVER_COMPO28];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"011_011_011\")] = [IMAGES.DAY_RIVER_COMPO6, IMAGES.DAY_RIVER_COMPO5, IMAGES.DAY_RIVER_COMPO4, IMAGES.DAY_RIVER_COMPO3, IMAGES.DAY_RIVER_COMPO2, IMAGES.DAY_RIVER_COMPO1, IMAGES.DAY_RIVER_COMPO15];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"011_111_000\")] = sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"011_011_010\")];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"011_111_010\")] = [IMAGES.DAY_RIVER_COMPO1, IMAGES.DAY_RIVER_COMPO2, IMAGES.DAY_RIVER_COMPO3, IMAGES.DAY_RIVER_COMPO5, IMAGES.DAY_RIVER_COMPO6, IMAGES.DAY_RIVER_COMPO7, IMAGES.DAY_RIVER_COMPO11, IMAGES.DAY_RIVER_COMPO13, IMAGES.DAY_RIVER_COMPO15, IMAGES.DAY_RIVER_COMPO16, IMAGES.DAY_RIVER_COMPO17, IMAGES.DAY_RIVER_COMPO18, IMAGES.DAY_RIVER_COMPO19, IMAGES.DAY_RIVER_COMPO20, IMAGES.DAY_RIVER_COMPO21, IMAGES.DAY_RIVER_COMPO22, IMAGES.DAY_RIVER_COMPO23, IMAGES.DAY_RIVER_COMPO24, IMAGES.DAY_RIVER_COMPO25, IMAGES.DAY_RIVER_COMPO26, IMAGES.DAY_RIVER_COMPO28];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"011_111_011\")] = sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"011_111_010\")];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"011_111_110\")] = sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"011_111_010\")];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"011_111_111\")] = [IMAGES.DAY_RIVER_COMPO1, IMAGES.DAY_RIVER_COMPO2, IMAGES.DAY_RIVER_COMPO3, IMAGES.DAY_RIVER_COMPO4, IMAGES.DAY_RIVER_COMPO5, IMAGES.DAY_RIVER_COMPO6, IMAGES.DAY_RIVER_COMPO7, IMAGES.DAY_RIVER_COMPO9, IMAGES.DAY_RIVER_COMPO11, IMAGES.DAY_RIVER_COMPO13, IMAGES.DAY_RIVER_COMPO15, IMAGES.DAY_RIVER_COMPO16, IMAGES.DAY_RIVER_COMPO17, IMAGES.DAY_RIVER_COMPO18, IMAGES.DAY_RIVER_COMPO19, IMAGES.DAY_RIVER_COMPO20, IMAGES.DAY_RIVER_COMPO21, IMAGES.DAY_RIVER_COMPO22, IMAGES.DAY_RIVER_COMPO23, IMAGES.DAY_RIVER_COMPO24, IMAGES.DAY_RIVER_COMPO25, IMAGES.DAY_RIVER_COMPO26, IMAGES.DAY_RIVER_COMPO28];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"110_110_000\")] = [IMAGES.DAY_RIVER_COMPO10, IMAGES.DAY_RIVER_COMPO11, IMAGES.DAY_RIVER_COMPO12, IMAGES.DAY_RIVER_COMPO17, IMAGES.DAY_RIVER_COMPO20, IMAGES.DAY_RIVER_COMPO28];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"110_110_010\")] = [IMAGES.DAY_RIVER_COMPO7, IMAGES.DAY_RIVER_COMPO10, IMAGES.DAY_RIVER_COMPO11, IMAGES.DAY_RIVER_COMPO16, IMAGES.DAY_RIVER_COMPO17, IMAGES.DAY_RIVER_COMPO20, IMAGES.DAY_RIVER_COMPO25, IMAGES.DAY_RIVER_COMPO28];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"110_110_110\")] = [IMAGES.DAY_RIVER_COMPO7, IMAGES.DAY_RIVER_COMPO9, IMAGES.DAY_RIVER_COMPO10, IMAGES.DAY_RIVER_COMPO11, IMAGES.DAY_RIVER_COMPO16, IMAGES.DAY_RIVER_COMPO17, IMAGES.DAY_RIVER_COMPO20, IMAGES.DAY_RIVER_COMPO25, IMAGES.DAY_RIVER_COMPO28];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"110_111_000\")] = [IMAGES.DAY_RIVER_COMPO2, IMAGES.DAY_RIVER_COMPO3, IMAGES.DAY_RIVER_COMPO10, IMAGES.DAY_RIVER_COMPO11, IMAGES.DAY_RIVER_COMPO12, IMAGES.DAY_RIVER_COMPO14, IMAGES.DAY_RIVER_COMPO17, IMAGES.DAY_RIVER_COMPO18, IMAGES.DAY_RIVER_COMPO19, IMAGES.DAY_RIVER_COMPO20, IMAGES.DAY_RIVER_COMPO21, IMAGES.DAY_RIVER_COMPO26, IMAGES.DAY_RIVER_COMPO28];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"110_111_110\")] = [IMAGES.DAY_RIVER_COMPO2, IMAGES.DAY_RIVER_COMPO3, IMAGES.DAY_RIVER_COMPO5, IMAGES.DAY_RIVER_COMPO6, IMAGES.DAY_RIVER_COMPO7, IMAGES.DAY_RIVER_COMPO9, IMAGES.DAY_RIVER_COMPO10, IMAGES.DAY_RIVER_COMPO11, IMAGES.DAY_RIVER_COMPO13, IMAGES.DAY_RIVER_COMPO14, IMAGES.DAY_RIVER_COMPO15, IMAGES.DAY_RIVER_COMPO16, IMAGES.DAY_RIVER_COMPO17, IMAGES.DAY_RIVER_COMPO18, IMAGES.DAY_RIVER_COMPO19, IMAGES.DAY_RIVER_COMPO20, IMAGES.DAY_RIVER_COMPO21, IMAGES.DAY_RIVER_COMPO22, IMAGES.DAY_RIVER_COMPO23, IMAGES.DAY_RIVER_COMPO24, IMAGES.DAY_RIVER_COMPO25, IMAGES.DAY_RIVER_COMPO26, IMAGES.DAY_RIVER_COMPO28];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"110_111_111\")] = sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"110_111_110\")];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"110_111_011\")] = sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"110_111_110\")];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"110_111_010\")] = sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"110_111_110\")];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"111_111_110\")] = [IMAGES.DAY_RIVER_COMPO28, IMAGES.DAY_RIVER_COMPO26, IMAGES.DAY_RIVER_COMPO25, IMAGES.DAY_RIVER_COMPO24, IMAGES.DAY_RIVER_COMPO23, IMAGES.DAY_RIVER_COMPO22, IMAGES.DAY_RIVER_COMPO21, IMAGES.DAY_RIVER_COMPO20, IMAGES.DAY_RIVER_COMPO19, IMAGES.DAY_RIVER_COMPO18, IMAGES.DAY_RIVER_COMPO17, IMAGES.DAY_RIVER_COMPO16, IMAGES.DAY_RIVER_COMPO15, IMAGES.DAY_RIVER_COMPO14, IMAGES.DAY_RIVER_COMPO13, IMAGES.DAY_RIVER_COMPO11, IMAGES.DAY_RIVER_COMPO10, IMAGES.DAY_RIVER_COMPO7, IMAGES.DAY_RIVER_COMPO6, IMAGES.DAY_RIVER_COMPO5, IMAGES.DAY_RIVER_COMPO3, IMAGES.DAY_RIVER_COMPO2, IMAGES.DAY_RIVER_COMPO1];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"111_111_011\")] = sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"111_111_110\")];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"111_111_000\")] = [IMAGES.DAY_RIVER_COMPO12, IMAGES.DAY_RIVER_COMPO11, IMAGES.DAY_RIVER_COMPO10, IMAGES.DAY_RIVER_COMPO3, IMAGES.DAY_RIVER_COMPO2, IMAGES.DAY_RIVER_COMPO1, IMAGES.DAY_RIVER_COMPO14];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"111_111_111\")] = [IMAGES.DAY_RIVER_COMPO1, IMAGES.DAY_RIVER_COMPO2, IMAGES.DAY_RIVER_COMPO3, IMAGES.DAY_RIVER_COMPO4, IMAGES.DAY_RIVER_COMPO5, IMAGES.DAY_RIVER_COMPO6, IMAGES.DAY_RIVER_COMPO7, IMAGES.DAY_RIVER_COMPO9, IMAGES.DAY_RIVER_COMPO10, IMAGES.DAY_RIVER_COMPO11, IMAGES.DAY_RIVER_COMPO13, IMAGES.DAY_RIVER_COMPO15, IMAGES.DAY_RIVER_COMPO16, IMAGES.DAY_RIVER_COMPO17, IMAGES.DAY_RIVER_COMPO18, IMAGES.DAY_RIVER_COMPO19, IMAGES.DAY_RIVER_COMPO20, IMAGES.DAY_RIVER_COMPO21, IMAGES.DAY_RIVER_COMPO22, IMAGES.DAY_RIVER_COMPO23, IMAGES.DAY_RIVER_COMPO24, IMAGES.DAY_RIVER_COMPO25, IMAGES.DAY_RIVER_COMPO26, IMAGES.DAY_RIVER_COMPO28];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"111_111_010\")] = sprite[SPRITE.RIVER_DECO][SPRITE.DAY][codeToTile(\"111_111_110\")];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT] = [];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"000_010_000\")] = [IMAGES.NIGHT_RIVER_COMPO21, IMAGES.NIGHT_RIVER_COMPO20];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"000_010_010\")] = sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"000_010_000\")];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"000_011_000\")] = sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"000_010_000\")];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"000_011_010\")] = [IMAGES.NIGHT_RIVER_COMPO5, IMAGES.NIGHT_RIVER_COMPO6, IMAGES.NIGHT_RIVER_COMPO20, IMAGES.NIGHT_RIVER_COMPO21, IMAGES.NIGHT_RIVER_COMPO22, IMAGES.NIGHT_RIVER_COMPO23, IMAGES.NIGHT_RIVER_COMPO24];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"000_011_011\")] = [IMAGES.NIGHT_RIVER_COMPO4, IMAGES.NIGHT_RIVER_COMPO5, IMAGES.NIGHT_RIVER_COMPO6, IMAGES.NIGHT_RIVER_COMPO20, IMAGES.NIGHT_RIVER_COMPO21, IMAGES.NIGHT_RIVER_COMPO22, IMAGES.NIGHT_RIVER_COMPO23, IMAGES.NIGHT_RIVER_COMPO24, IMAGES.NIGHT_RIVER_COMPO25];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"000_110_000\")] = [IMAGES.NIGHT_RIVER_COMPO11, IMAGES.NIGHT_RIVER_COMPO20];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"000_110_010\")] = [IMAGES.NIGHT_RIVER_COMPO7, IMAGES.NIGHT_RIVER_COMPO11, IMAGES.NIGHT_RIVER_COMPO17, IMAGES.NIGHT_RIVER_COMPO20, IMAGES.NIGHT_RIVER_COMPO21, IMAGES.NIGHT_RIVER_COMPO25, IMAGES.NIGHT_RIVER_COMPO26, IMAGES.NIGHT_RIVER_COMPO27];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"000_110_110\")] = [IMAGES.NIGHT_RIVER_COMPO7, IMAGES.NIGHT_RIVER_COMPO8, IMAGES.NIGHT_RIVER_COMPO9, IMAGES.NIGHT_RIVER_COMPO11, IMAGES.NIGHT_RIVER_COMPO17, IMAGES.NIGHT_RIVER_COMPO20, IMAGES.NIGHT_RIVER_COMPO25, IMAGES.NIGHT_RIVER_COMPO26, IMAGES.NIGHT_RIVER_COMPO27];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"000_111_000\")] = [IMAGES.NIGHT_RIVER_COMPO11, IMAGES.NIGHT_RIVER_COMPO17, IMAGES.NIGHT_RIVER_COMPO18, IMAGES.NIGHT_RIVER_COMPO19];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"000_111_111\")] = [IMAGES.NIGHT_RIVER_COMPO11, IMAGES.NIGHT_RIVER_COMPO9, IMAGES.NIGHT_RIVER_COMPO7, IMAGES.NIGHT_RIVER_COMPO6, IMAGES.NIGHT_RIVER_COMPO5, IMAGES.NIGHT_RIVER_COMPO4, IMAGES.NIGHT_RIVER_COMPO13];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"010_010_000\")] = [IMAGES.NIGHT_RIVER_COMPO20];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"010_010_010\")] = [IMAGES.NIGHT_RIVER_COMPO16, IMAGES.NIGHT_RIVER_COMPO20, IMAGES.NIGHT_RIVER_COMPO21];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"010_011_000\")] = [IMAGES.NIGHT_RIVER_COMPO3, IMAGES.NIGHT_RIVER_COMPO20, IMAGES.NIGHT_RIVER_COMPO21, IMAGES.NIGHT_RIVER_COMPO26];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"010_110_000\")] = [IMAGES.NIGHT_RIVER_COMPO11, IMAGES.NIGHT_RIVER_COMPO17, IMAGES.NIGHT_RIVER_COMPO20, IMAGES.NIGHT_RIVER_COMPO26, IMAGES.NIGHT_RIVER_COMPO28];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"010_110_110\")] = [IMAGES.NIGHT_RIVER_COMPO2, IMAGES.NIGHT_RIVER_COMPO3, IMAGES.NIGHT_RIVER_COMPO5, IMAGES.NIGHT_RIVER_COMPO6, IMAGES.NIGHT_RIVER_COMPO7, IMAGES.NIGHT_RIVER_COMPO9, IMAGES.NIGHT_RIVER_COMPO11, IMAGES.NIGHT_RIVER_COMPO13, IMAGES.NIGHT_RIVER_COMPO15, IMAGES.NIGHT_RIVER_COMPO16, IMAGES.NIGHT_RIVER_COMPO17, IMAGES.NIGHT_RIVER_COMPO18, IMAGES.NIGHT_RIVER_COMPO19, IMAGES.NIGHT_RIVER_COMPO20, IMAGES.NIGHT_RIVER_COMPO21, IMAGES.NIGHT_RIVER_COMPO22, IMAGES.NIGHT_RIVER_COMPO23, IMAGES.NIGHT_RIVER_COMPO24, IMAGES.NIGHT_RIVER_COMPO25, IMAGES.NIGHT_RIVER_COMPO26, IMAGES.NIGHT_RIVER_COMPO28];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"010_011_010\")] = sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"010_110_110\")];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"010_011_011\")] = sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"010_110_110\")];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"000_111_011\")] = sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"010_110_110\")];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"010_110_010\")] = sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"010_110_110\")];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"010_111_000\")] = sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"010_110_110\")];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"010_111_010\")] = sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"010_110_110\")];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"010_111_011\")] = sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"010_110_110\")];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"010_111_110\")] = sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"010_110_110\")];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"010_111_111\")] = sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"010_110_110\")];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"000_111_110\")] = sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"010_110_110\")];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"000_111_010\")] = sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"010_110_110\")];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"011_011_000\")] = [IMAGES.NIGHT_RIVER_COMPO1, IMAGES.NIGHT_RIVER_COMPO2, IMAGES.NIGHT_RIVER_COMPO3, IMAGES.NIGHT_RIVER_COMPO20, IMAGES.NIGHT_RIVER_COMPO21, IMAGES.NIGHT_RIVER_COMPO26];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"011_011_010\")] = [IMAGES.NIGHT_RIVER_COMPO1, IMAGES.NIGHT_RIVER_COMPO2, IMAGES.NIGHT_RIVER_COMPO3, IMAGES.NIGHT_RIVER_COMPO11, IMAGES.NIGHT_RIVER_COMPO17, IMAGES.NIGHT_RIVER_COMPO18, IMAGES.NIGHT_RIVER_COMPO19, IMAGES.NIGHT_RIVER_COMPO20, IMAGES.NIGHT_RIVER_COMPO21, IMAGES.NIGHT_RIVER_COMPO26, IMAGES.NIGHT_RIVER_COMPO28];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"011_011_011\")] = [IMAGES.NIGHT_RIVER_COMPO6, IMAGES.NIGHT_RIVER_COMPO5, IMAGES.NIGHT_RIVER_COMPO4, IMAGES.NIGHT_RIVER_COMPO3, IMAGES.NIGHT_RIVER_COMPO2, IMAGES.NIGHT_RIVER_COMPO1, IMAGES.NIGHT_RIVER_COMPO15];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"011_111_000\")] = sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"011_011_010\")];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"011_111_010\")] = [IMAGES.NIGHT_RIVER_COMPO1, IMAGES.NIGHT_RIVER_COMPO2, IMAGES.NIGHT_RIVER_COMPO3, IMAGES.NIGHT_RIVER_COMPO5, IMAGES.NIGHT_RIVER_COMPO6, IMAGES.NIGHT_RIVER_COMPO7, IMAGES.NIGHT_RIVER_COMPO11, IMAGES.NIGHT_RIVER_COMPO13, IMAGES.NIGHT_RIVER_COMPO15, IMAGES.NIGHT_RIVER_COMPO16, IMAGES.NIGHT_RIVER_COMPO17, IMAGES.NIGHT_RIVER_COMPO18, IMAGES.NIGHT_RIVER_COMPO19, IMAGES.NIGHT_RIVER_COMPO20, IMAGES.NIGHT_RIVER_COMPO21, IMAGES.NIGHT_RIVER_COMPO22, IMAGES.NIGHT_RIVER_COMPO23, IMAGES.NIGHT_RIVER_COMPO24, IMAGES.NIGHT_RIVER_COMPO25, IMAGES.NIGHT_RIVER_COMPO26, IMAGES.NIGHT_RIVER_COMPO28];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"011_111_011\")] = sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"011_111_010\")];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"011_111_110\")] = sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"011_111_010\")];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"011_111_111\")] = [IMAGES.NIGHT_RIVER_COMPO1, IMAGES.NIGHT_RIVER_COMPO2, IMAGES.NIGHT_RIVER_COMPO3, IMAGES.NIGHT_RIVER_COMPO4, IMAGES.NIGHT_RIVER_COMPO5, IMAGES.NIGHT_RIVER_COMPO6, IMAGES.NIGHT_RIVER_COMPO7, IMAGES.NIGHT_RIVER_COMPO9, IMAGES.NIGHT_RIVER_COMPO11, IMAGES.NIGHT_RIVER_COMPO13, IMAGES.NIGHT_RIVER_COMPO15, IMAGES.NIGHT_RIVER_COMPO16, IMAGES.NIGHT_RIVER_COMPO17, IMAGES.NIGHT_RIVER_COMPO18, IMAGES.NIGHT_RIVER_COMPO19, IMAGES.NIGHT_RIVER_COMPO20, IMAGES.NIGHT_RIVER_COMPO21, IMAGES.NIGHT_RIVER_COMPO22, IMAGES.NIGHT_RIVER_COMPO23, IMAGES.NIGHT_RIVER_COMPO24, IMAGES.NIGHT_RIVER_COMPO25, IMAGES.NIGHT_RIVER_COMPO26, IMAGES.NIGHT_RIVER_COMPO28];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"110_110_000\")] = [IMAGES.NIGHT_RIVER_COMPO10, IMAGES.NIGHT_RIVER_COMPO11, IMAGES.NIGHT_RIVER_COMPO12, IMAGES.NIGHT_RIVER_COMPO17, IMAGES.NIGHT_RIVER_COMPO20, IMAGES.NIGHT_RIVER_COMPO28];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"110_110_010\")] = [IMAGES.NIGHT_RIVER_COMPO7, IMAGES.NIGHT_RIVER_COMPO10, IMAGES.NIGHT_RIVER_COMPO11, IMAGES.NIGHT_RIVER_COMPO16, IMAGES.NIGHT_RIVER_COMPO17, IMAGES.NIGHT_RIVER_COMPO20, IMAGES.NIGHT_RIVER_COMPO25, IMAGES.NIGHT_RIVER_COMPO28];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"110_110_110\")] = [IMAGES.NIGHT_RIVER_COMPO7, IMAGES.NIGHT_RIVER_COMPO9, IMAGES.NIGHT_RIVER_COMPO10, IMAGES.NIGHT_RIVER_COMPO11, IMAGES.NIGHT_RIVER_COMPO16, IMAGES.NIGHT_RIVER_COMPO17, IMAGES.NIGHT_RIVER_COMPO20, IMAGES.NIGHT_RIVER_COMPO25, IMAGES.NIGHT_RIVER_COMPO28];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"110_111_000\")] = [IMAGES.NIGHT_RIVER_COMPO2, IMAGES.NIGHT_RIVER_COMPO3, IMAGES.NIGHT_RIVER_COMPO10, IMAGES.NIGHT_RIVER_COMPO11, IMAGES.NIGHT_RIVER_COMPO12, IMAGES.NIGHT_RIVER_COMPO14, IMAGES.NIGHT_RIVER_COMPO17, IMAGES.NIGHT_RIVER_COMPO18, IMAGES.NIGHT_RIVER_COMPO19, IMAGES.NIGHT_RIVER_COMPO20, IMAGES.NIGHT_RIVER_COMPO21, IMAGES.NIGHT_RIVER_COMPO26, IMAGES.NIGHT_RIVER_COMPO28];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"110_111_110\")] = [IMAGES.NIGHT_RIVER_COMPO2, IMAGES.NIGHT_RIVER_COMPO3, IMAGES.NIGHT_RIVER_COMPO5, IMAGES.NIGHT_RIVER_COMPO6, IMAGES.NIGHT_RIVER_COMPO7, IMAGES.NIGHT_RIVER_COMPO9, IMAGES.NIGHT_RIVER_COMPO10, IMAGES.NIGHT_RIVER_COMPO11, IMAGES.NIGHT_RIVER_COMPO13, IMAGES.NIGHT_RIVER_COMPO14, IMAGES.NIGHT_RIVER_COMPO15, IMAGES.NIGHT_RIVER_COMPO16, IMAGES.NIGHT_RIVER_COMPO17, IMAGES.NIGHT_RIVER_COMPO18, IMAGES.NIGHT_RIVER_COMPO19, IMAGES.NIGHT_RIVER_COMPO20, IMAGES.NIGHT_RIVER_COMPO21, IMAGES.NIGHT_RIVER_COMPO22, IMAGES.NIGHT_RIVER_COMPO23, IMAGES.NIGHT_RIVER_COMPO24, IMAGES.NIGHT_RIVER_COMPO25, IMAGES.NIGHT_RIVER_COMPO26, IMAGES.NIGHT_RIVER_COMPO28];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"110_111_111\")] = sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"110_111_110\")];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"110_111_011\")] = sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"110_111_110\")];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"110_111_010\")] = sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"110_111_110\")];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"111_111_110\")] = [IMAGES.NIGHT_RIVER_COMPO28, IMAGES.NIGHT_RIVER_COMPO26, IMAGES.NIGHT_RIVER_COMPO25, IMAGES.NIGHT_RIVER_COMPO24, IMAGES.NIGHT_RIVER_COMPO23, IMAGES.NIGHT_RIVER_COMPO22, IMAGES.NIGHT_RIVER_COMPO21, IMAGES.NIGHT_RIVER_COMPO20, IMAGES.NIGHT_RIVER_COMPO19, IMAGES.NIGHT_RIVER_COMPO18, IMAGES.NIGHT_RIVER_COMPO17, IMAGES.NIGHT_RIVER_COMPO16, IMAGES.NIGHT_RIVER_COMPO15, IMAGES.NIGHT_RIVER_COMPO14, IMAGES.NIGHT_RIVER_COMPO13, IMAGES.NIGHT_RIVER_COMPO11, IMAGES.NIGHT_RIVER_COMPO10, IMAGES.NIGHT_RIVER_COMPO7, IMAGES.NIGHT_RIVER_COMPO6, IMAGES.NIGHT_RIVER_COMPO5, IMAGES.NIGHT_RIVER_COMPO3, IMAGES.NIGHT_RIVER_COMPO2, IMAGES.NIGHT_RIVER_COMPO1];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"111_111_011\")] = sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"111_111_110\")];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"111_111_000\")] = [IMAGES.NIGHT_RIVER_COMPO12, IMAGES.NIGHT_RIVER_COMPO11, IMAGES.NIGHT_RIVER_COMPO10, IMAGES.NIGHT_RIVER_COMPO3, IMAGES.NIGHT_RIVER_COMPO2, IMAGES.NIGHT_RIVER_COMPO1, IMAGES.NIGHT_RIVER_COMPO14];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"111_111_111\")] = [IMAGES.NIGHT_RIVER_COMPO1, IMAGES.NIGHT_RIVER_COMPO2, IMAGES.NIGHT_RIVER_COMPO3, IMAGES.NIGHT_RIVER_COMPO4, IMAGES.NIGHT_RIVER_COMPO5, IMAGES.NIGHT_RIVER_COMPO6, IMAGES.NIGHT_RIVER_COMPO7, IMAGES.NIGHT_RIVER_COMPO9, IMAGES.NIGHT_RIVER_COMPO10, IMAGES.NIGHT_RIVER_COMPO11, IMAGES.NIGHT_RIVER_COMPO13, IMAGES.NIGHT_RIVER_COMPO15, IMAGES.NIGHT_RIVER_COMPO16, IMAGES.NIGHT_RIVER_COMPO17, IMAGES.NIGHT_RIVER_COMPO18, IMAGES.NIGHT_RIVER_COMPO19, IMAGES.NIGHT_RIVER_COMPO20, IMAGES.NIGHT_RIVER_COMPO21, IMAGES.NIGHT_RIVER_COMPO22, IMAGES.NIGHT_RIVER_COMPO23, IMAGES.NIGHT_RIVER_COMPO24, IMAGES.NIGHT_RIVER_COMPO25, IMAGES.NIGHT_RIVER_COMPO26, IMAGES.NIGHT_RIVER_COMPO28];\r\n    sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"111_111_010\")] = sprite[SPRITE.RIVER_DECO][SPRITE.NIGHT][codeToTile(\"111_111_110\")];\r\n    sprite[SPRITE.RIVER] = [];\r\n    sprite[SPRITE.RIVER][SPRITE.DAY] = [];\r\n    sprite[SPRITE.RIVER][SPRITE.DAY][codeToTile(\"000_010_000\")] = IMAGES.DAY_RIVER_000_010_000;\r\n    sprite[SPRITE.RIVER][SPRITE.DAY][codeToTile(\"000_010_010\")] = IMAGES.DAY_RIVER_000_010_010;\r\n    sprite[SPRITE.RIVER][SPRITE.DAY][codeToTile(\"000_011_000\")] = IMAGES.DAY_RIVER_000_011_000;\r\n    sprite[SPRITE.RIVER][SPRITE.DAY][codeToTile(\"000_011_010\")] = IMAGES.DAY_RIVER_000_011_010;\r\n    sprite[SPRITE.RIVER][SPRITE.DAY][codeToTile(\"000_011_011\")] = IMAGES.DAY_RIVER_000_011_011;\r\n    sprite[SPRITE.RIVER][SPRITE.DAY][codeToTile(\"000_110_000\")] = IMAGES.DAY_RIVER_000_110_000;\r\n    sprite[SPRITE.RIVER][SPRITE.DAY][codeToTile(\"000_110_010\")] = IMAGES.DAY_RIVER_000_110_010;\r\n    sprite[SPRITE.RIVER][SPRITE.DAY][codeToTile(\"000_110_110\")] = IMAGES.DAY_RIVER_000_110_110;\r\n    sprite[SPRITE.RIVER][SPRITE.DAY][codeToTile(\"000_111_000\")] = IMAGES.DAY_RIVER_000_111_000;\r\n    sprite[SPRITE.RIVER][SPRITE.DAY][codeToTile(\"000_111_010\")] = IMAGES.DAY_RIVER_000_111_010;\r\n    sprite[SPRITE.RIVER][SPRITE.DAY][codeToTile(\"000_111_011\")] = IMAGES.DAY_RIVER_000_111_011;\r\n    sprite[SPRITE.RIVER][SPRITE.DAY][codeToTile(\"000_111_110\")] = IMAGES.DAY_RIVER_000_111_110;\r\n    sprite[SPRITE.RIVER][SPRITE.DAY][codeToTile(\"000_111_111\")] = IMAGES.DAY_RIVER_000_111_111;\r\n    sprite[SPRITE.RIVER][SPRITE.DAY][codeToTile(\"010_010_000\")] = IMAGES.DAY_RIVER_010_010_000;\r\n    sprite[SPRITE.RIVER][SPRITE.DAY][codeToTile(\"010_010_010\")] = IMAGES.DAY_RIVER_010_010_010;\r\n    sprite[SPRITE.RIVER][SPRITE.DAY][codeToTile(\"010_011_000\")] = IMAGES.DAY_RIVER_010_011_000;\r\n    sprite[SPRITE.RIVER][SPRITE.DAY][codeToTile(\"010_011_010\")] = IMAGES.DAY_RIVER_010_011_010;\r\n    sprite[SPRITE.RIVER][SPRITE.DAY][codeToTile(\"010_011_011\")] = IMAGES.DAY_RIVER_010_011_011;\r\n    sprite[SPRITE.RIVER][SPRITE.DAY][codeToTile(\"010_110_000\")] = IMAGES.DAY_RIVER_010_110_000;\r\n    sprite[SPRITE.RIVER][SPRITE.DAY][codeToTile(\"010_110_010\")] = IMAGES.DAY_RIVER_010_110_010;\r\n    sprite[SPRITE.RIVER][SPRITE.DAY][codeToTile(\"010_110_110\")] = IMAGES.DAY_RIVER_010_110_110;\r\n    sprite[SPRITE.RIVER][SPRITE.DAY][codeToTile(\"010_111_000\")] = IMAGES.DAY_RIVER_010_111_000;\r\n    sprite[SPRITE.RIVER][SPRITE.DAY][codeToTile(\"010_111_010\")] = IMAGES.DAY_RIVER_010_111_010;\r\n    sprite[SPRITE.RIVER][SPRITE.DAY][codeToTile(\"010_111_011\")] = IMAGES.DAY_RIVER_010_111_011;\r\n    sprite[SPRITE.RIVER][SPRITE.DAY][codeToTile(\"010_111_110\")] = IMAGES.DAY_RIVER_010_111_110;\r\n    sprite[SPRITE.RIVER][SPRITE.DAY][codeToTile(\"010_111_111\")] = IMAGES.DAY_RIVER_010_111_111;\r\n    sprite[SPRITE.RIVER][SPRITE.DAY][codeToTile(\"011_011_000\")] = IMAGES.DAY_RIVER_011_011_000;\r\n    sprite[SPRITE.RIVER][SPRITE.DAY][codeToTile(\"011_011_010\")] = IMAGES.DAY_RIVER_011_011_010;\r\n    sprite[SPRITE.RIVER][SPRITE.DAY][codeToTile(\"011_011_011\")] = IMAGES.DAY_RIVER_011_011_011;\r\n    sprite[SPRITE.RIVER][SPRITE.DAY][codeToTile(\"011_111_000\")] = IMAGES.DAY_RIVER_011_111_000;\r\n    sprite[SPRITE.RIVER][SPRITE.DAY][codeToTile(\"011_111_010\")] = IMAGES.DAY_RIVER_011_111_010;\r\n    sprite[SPRITE.RIVER][SPRITE.DAY][codeToTile(\"011_111_011\")] = IMAGES.DAY_RIVER_011_111_011;\r\n    sprite[SPRITE.RIVER][SPRITE.DAY][codeToTile(\"011_111_110\")] = IMAGES.DAY_RIVER_011_111_110;\r\n    sprite[SPRITE.RIVER][SPRITE.DAY][codeToTile(\"011_111_111\")] = IMAGES.DAY_RIVER_011_111_111;\r\n    sprite[SPRITE.RIVER][SPRITE.DAY][codeToTile(\"110_110_000\")] = IMAGES.DAY_RIVER_110_110_000;\r\n    sprite[SPRITE.RIVER][SPRITE.DAY][codeToTile(\"110_110_010\")] = IMAGES.DAY_RIVER_110_110_010;\r\n    sprite[SPRITE.RIVER][SPRITE.DAY][codeToTile(\"110_110_110\")] = IMAGES.DAY_RIVER_110_110_110;\r\n    sprite[SPRITE.RIVER][SPRITE.DAY][codeToTile(\"110_111_000\")] = IMAGES.DAY_RIVER_110_111_000;\r\n    sprite[SPRITE.RIVER][SPRITE.DAY][codeToTile(\"110_111_010\")] = IMAGES.DAY_RIVER_110_111_010;\r\n    sprite[SPRITE.RIVER][SPRITE.DAY][codeToTile(\"110_111_011\")] = IMAGES.DAY_RIVER_110_111_011;\r\n    sprite[SPRITE.RIVER][SPRITE.DAY][codeToTile(\"110_111_110\")] = IMAGES.DAY_RIVER_110_111_110;\r\n    sprite[SPRITE.RIVER][SPRITE.DAY][codeToTile(\"110_111_111\")] = IMAGES.DAY_RIVER_110_111_111;\r\n    sprite[SPRITE.RIVER][SPRITE.DAY][codeToTile(\"111_111_011\")] = IMAGES.DAY_RIVER_111_111_011;\r\n    sprite[SPRITE.RIVER][SPRITE.DAY][codeToTile(\"111_111_110\")] = IMAGES.DAY_RIVER_111_111_110;\r\n    sprite[SPRITE.RIVER][SPRITE.DAY][codeToTile(\"111_111_011\")] = IMAGES.DAY_RIVER_111_111_011;\r\n    sprite[SPRITE.RIVER][SPRITE.DAY][codeToTile(\"111_111_000\")] = IMAGES.DAY_RIVER_111_111_000;\r\n    sprite[SPRITE.RIVER][SPRITE.DAY][codeToTile(\"111_111_111\")] = IMAGES.DAY_RIVER_111_111_111;\r\n    sprite[SPRITE.RIVER][SPRITE.DAY][codeToTile(\"111_111_010\")] = IMAGES.DAY_RIVER_111_111_010;\r\n    sprite[SPRITE.RIVER][SPRITE.NIGHT] = [];\r\n    sprite[SPRITE.RIVER][SPRITE.NIGHT][codeToTile(\"000_010_000\")] = IMAGES.NIGHT_RIVER_000_010_000;\r\n    sprite[SPRITE.RIVER][SPRITE.NIGHT][codeToTile(\"000_010_010\")] = IMAGES.NIGHT_RIVER_000_010_010;\r\n    sprite[SPRITE.RIVER][SPRITE.NIGHT][codeToTile(\"000_011_000\")] = IMAGES.NIGHT_RIVER_000_011_000;\r\n    sprite[SPRITE.RIVER][SPRITE.NIGHT][codeToTile(\"000_011_010\")] = IMAGES.NIGHT_RIVER_000_011_010;\r\n    sprite[SPRITE.RIVER][SPRITE.NIGHT][codeToTile(\"000_011_011\")] = IMAGES.NIGHT_RIVER_000_011_011;\r\n    sprite[SPRITE.RIVER][SPRITE.NIGHT][codeToTile(\"000_110_000\")] = IMAGES.NIGHT_RIVER_000_110_000;\r\n    sprite[SPRITE.RIVER][SPRITE.NIGHT][codeToTile(\"000_110_010\")] = IMAGES.NIGHT_RIVER_000_110_010;\r\n    sprite[SPRITE.RIVER][SPRITE.NIGHT][codeToTile(\"000_110_110\")] = IMAGES.NIGHT_RIVER_000_110_110;\r\n    sprite[SPRITE.RIVER][SPRITE.NIGHT][codeToTile(\"000_111_000\")] = IMAGES.NIGHT_RIVER_000_111_000;\r\n    sprite[SPRITE.RIVER][SPRITE.NIGHT][codeToTile(\"000_111_010\")] = IMAGES.NIGHT_RIVER_000_111_010;\r\n    sprite[SPRITE.RIVER][SPRITE.NIGHT][codeToTile(\"000_111_011\")] = IMAGES.NIGHT_RIVER_000_111_011;\r\n    sprite[SPRITE.RIVER][SPRITE.NIGHT][codeToTile(\"000_111_110\")] = IMAGES.NIGHT_RIVER_000_111_110;\r\n    sprite[SPRITE.RIVER][SPRITE.NIGHT][codeToTile(\"000_111_111\")] = IMAGES.NIGHT_RIVER_000_111_111;\r\n    sprite[SPRITE.RIVER][SPRITE.NIGHT][codeToTile(\"010_010_000\")] = IMAGES.NIGHT_RIVER_010_010_000;\r\n    sprite[SPRITE.RIVER][SPRITE.NIGHT][codeToTile(\"010_010_010\")] = IMAGES.NIGHT_RIVER_010_010_010;\r\n    sprite[SPRITE.RIVER][SPRITE.NIGHT][codeToTile(\"010_011_000\")] = IMAGES.NIGHT_RIVER_010_011_000;\r\n    sprite[SPRITE.RIVER][SPRITE.NIGHT][codeToTile(\"010_011_010\")] = IMAGES.NIGHT_RIVER_010_011_010;\r\n    sprite[SPRITE.RIVER][SPRITE.NIGHT][codeToTile(\"010_011_011\")] = IMAGES.NIGHT_RIVER_010_011_011;\r\n    sprite[SPRITE.RIVER][SPRITE.NIGHT][codeToTile(\"010_110_000\")] = IMAGES.NIGHT_RIVER_010_110_000;\r\n    sprite[SPRITE.RIVER][SPRITE.NIGHT][codeToTile(\"010_110_010\")] = IMAGES.NIGHT_RIVER_010_110_010;\r\n    sprite[SPRITE.RIVER][SPRITE.NIGHT][codeToTile(\"010_110_110\")] = IMAGES.NIGHT_RIVER_010_110_110;\r\n    sprite[SPRITE.RIVER][SPRITE.NIGHT][codeToTile(\"010_111_000\")] = IMAGES.NIGHT_RIVER_010_111_000;\r\n    sprite[SPRITE.RIVER][SPRITE.NIGHT][codeToTile(\"010_111_010\")] = IMAGES.NIGHT_RIVER_010_111_010;\r\n    sprite[SPRITE.RIVER][SPRITE.NIGHT][codeToTile(\"010_111_011\")] = IMAGES.NIGHT_RIVER_010_111_011;\r\n    sprite[SPRITE.RIVER][SPRITE.NIGHT][codeToTile(\"010_111_110\")] = IMAGES.NIGHT_RIVER_010_111_110;\r\n    sprite[SPRITE.RIVER][SPRITE.NIGHT][codeToTile(\"010_111_111\")] = IMAGES.NIGHT_RIVER_010_111_111;\r\n    sprite[SPRITE.RIVER][SPRITE.NIGHT][codeToTile(\"011_011_000\")] = IMAGES.NIGHT_RIVER_011_011_000;\r\n    sprite[SPRITE.RIVER][SPRITE.NIGHT][codeToTile(\"011_011_010\")] = IMAGES.NIGHT_RIVER_011_011_010;\r\n    sprite[SPRITE.RIVER][SPRITE.NIGHT][codeToTile(\"011_011_011\")] = IMAGES.NIGHT_RIVER_011_011_011;\r\n    sprite[SPRITE.RIVER][SPRITE.NIGHT][codeToTile(\"011_111_000\")] = IMAGES.NIGHT_RIVER_011_111_000;\r\n    sprite[SPRITE.RIVER][SPRITE.NIGHT][codeToTile(\"011_111_010\")] = IMAGES.NIGHT_RIVER_011_111_010;\r\n    sprite[SPRITE.RIVER][SPRITE.NIGHT][codeToTile(\"011_111_011\")] = IMAGES.NIGHT_RIVER_011_111_011;\r\n    sprite[SPRITE.RIVER][SPRITE.NIGHT][codeToTile(\"011_111_110\")] = IMAGES.NIGHT_RIVER_011_111_110;\r\n    sprite[SPRITE.RIVER][SPRITE.NIGHT][codeToTile(\"011_111_111\")] = IMAGES.NIGHT_RIVER_011_111_111;\r\n    sprite[SPRITE.RIVER][SPRITE.NIGHT][codeToTile(\"110_110_000\")] = IMAGES.NIGHT_RIVER_110_110_000;\r\n    sprite[SPRITE.RIVER][SPRITE.NIGHT][codeToTile(\"110_110_010\")] = IMAGES.NIGHT_RIVER_110_110_010;\r\n    sprite[SPRITE.RIVER][SPRITE.NIGHT][codeToTile(\"110_110_110\")] = IMAGES.NIGHT_RIVER_110_110_110;\r\n    sprite[SPRITE.RIVER][SPRITE.NIGHT][codeToTile(\"110_111_000\")] = IMAGES.NIGHT_RIVER_110_111_000;\r\n    sprite[SPRITE.RIVER][SPRITE.NIGHT][codeToTile(\"110_111_010\")] = IMAGES.NIGHT_RIVER_110_111_010;\r\n    sprite[SPRITE.RIVER][SPRITE.NIGHT][codeToTile(\"110_111_011\")] = IMAGES.NIGHT_RIVER_110_111_011;\r\n    sprite[SPRITE.RIVER][SPRITE.NIGHT][codeToTile(\"110_111_110\")] = IMAGES.NIGHT_RIVER_110_111_110;\r\n    sprite[SPRITE.RIVER][SPRITE.NIGHT][codeToTile(\"110_111_111\")] = IMAGES.NIGHT_RIVER_110_111_111;\r\n    sprite[SPRITE.RIVER][SPRITE.NIGHT][codeToTile(\"111_111_011\")] = IMAGES.NIGHT_RIVER_111_111_011;\r\n    sprite[SPRITE.RIVER][SPRITE.NIGHT][codeToTile(\"111_111_110\")] = IMAGES.NIGHT_RIVER_111_111_110;\r\n    sprite[SPRITE.RIVER][SPRITE.NIGHT][codeToTile(\"111_111_011\")] = IMAGES.NIGHT_RIVER_111_111_011;\r\n    sprite[SPRITE.RIVER][SPRITE.NIGHT][codeToTile(\"111_111_000\")] = IMAGES.NIGHT_RIVER_111_111_000;\r\n    sprite[SPRITE.RIVER][SPRITE.NIGHT][codeToTile(\"111_111_111\")] = IMAGES.NIGHT_RIVER_111_111_111;\r\n    sprite[SPRITE.RIVER][SPRITE.NIGHT][codeToTile(\"111_111_010\")] = IMAGES.NIGHT_RIVER_111_111_010;\r\n    sprite[SPRITE.PICK_REIDITE] = [];\r\n    sprite[SPRITE.PICK_REIDITE][SPRITE.DAY] = IMAGES.PICK_REIDITED;\r\n    sprite[SPRITE.PICK_REIDITE][SPRITE.NIGHT] = IMAGES.PICK_REIDITEN;\r\n    sprite[SPRITE.CARROT] = [];\r\n    sprite[SPRITE.CARROT][SPRITE.DAY] = IMAGES.CARROTD;\r\n    sprite[SPRITE.CARROT][SPRITE.NIGHT] = IMAGES.CARROTN;\r\n    sprite[SPRITE.TOMATO_MINI] = [];\r\n    sprite[SPRITE.TOMATO_MINI][SPRITE.DAY] = IMAGES.TOMATO_MINID;\r\n    sprite[SPRITE.TOMATO_MINI][SPRITE.NIGHT] = IMAGES.TOMATO_MININ;\r\n    sprite[SPRITE.TOMATO] = [];\r\n    sprite[SPRITE.TOMATO][SPRITE.DAY] = IMAGES.TOMATOD;\r\n    sprite[SPRITE.TOMATO][SPRITE.NIGHT] = IMAGES.TOMATON;\r\n    sprite[SPRITE.DRIED_CARROT] = [];\r\n    sprite[SPRITE.DRIED_CARROT][SPRITE.DAY] = IMAGES.CARROT_DRIEDD;\r\n    sprite[SPRITE.DRIED_CARROT][SPRITE.NIGHT] = IMAGES.CARROT_DRIEDN;\r\n    sprite[SPRITE.DRIED_TOMATO_MINI] = [];\r\n    sprite[SPRITE.DRIED_TOMATO_MINI][SPRITE.DAY] = IMAGES.TOMATO_MINI_DRIEDD;\r\n    sprite[SPRITE.DRIED_TOMATO_MINI][SPRITE.NIGHT] = IMAGES.TOMATO_MINI_DRIEDN;\r\n    sprite[SPRITE.WATERMELON] = [];\r\n    sprite[SPRITE.WATERMELON][SPRITE.DAY] = IMAGES.WATERMELOND;\r\n    sprite[SPRITE.WATERMELON][SPRITE.NIGHT] = IMAGES.WATERMELONN;\r\n    sprite[SPRITE.DRIED_WATERMELON] = [];\r\n    sprite[SPRITE.DRIED_WATERMELON][SPRITE.DAY] = IMAGES.DRIED_WATERMELOND;\r\n    sprite[SPRITE.DRIED_WATERMELON][SPRITE.NIGHT] = IMAGES.DRIED_WATERMELONN;\r\n    sprite[SPRITE.ALOE_VERA_GROWN] = [];\r\n    sprite[SPRITE.ALOE_VERA_GROWN][SPRITE.DAY] = IMAGES.ALOE_VERA_GROWND;\r\n    sprite[SPRITE.ALOE_VERA_GROWN][SPRITE.NIGHT] = IMAGES.ALOE_VERA_GROWNN;\r\n    sprite[SPRITE.DRIED_ALOE_VERA] = [];\r\n    sprite[SPRITE.DRIED_ALOE_VERA][SPRITE.DAY] = IMAGES.ALOE_VERA_DRIEDD;\r\n    sprite[SPRITE.DRIED_ALOE_VERA][SPRITE.NIGHT] = IMAGES.ALOE_VERAN_DRIEDN;\r\n    sprite[SPRITE.CACTUS] = [];\r\n    sprite[SPRITE.CACTUS][SPRITE.DAY] = [IMAGES.CACTUSD];\r\n    sprite[SPRITE.CACTUS][SPRITE.NIGHT] = [IMAGES.CACTUSN];\r\n    sprite[SPRITE.REIDITE_WALL] = [], sprite[SPRITE.REIDITE_WALL][SPRITE.DAY] = IMAGES.REIDITE_WALLD;\r\n    sprite[SPRITE.REIDITE_WALL][SPRITE.NIGHT] = IMAGES.REIDITE_WALLN;\r\n    sprite[SPRITE.REIDITE_SPIKE] = [], sprite[SPRITE.REIDITE_SPIKE][SPRITE.DAY] = IMAGES.REIDITE_SPIKED;\r\n    sprite[SPRITE.REIDITE_SPIKE][SPRITE.NIGHT] = IMAGES.REIDITE_SPIKEN;\r\n    sprite[SPRITE.REIDITE_DOOR] = [];\r\n    sprite[SPRITE.REIDITE_DOOR][SPRITE.DAY] = IMAGES.REIDITE_DOORD;\r\n    sprite[SPRITE.REIDITE_DOOR][SPRITE.NIGHT] = IMAGES.REIDITE_DOORN;\r\n    sprite[SPRITE.WOOD_DOOR_SPIKE] = [];\r\n    sprite[SPRITE.WOOD_DOOR_SPIKE][SPRITE.DAY] = IMAGES.WOOD_DOOR_SPIKED;\r\n    sprite[SPRITE.WOOD_DOOR_SPIKE][SPRITE.NIGHT] = IMAGES.WOOD_DOOR_SPIKEN;\r\n    sprite[SPRITE.STONE_DOOR_SPIKE] = [];\r\n    sprite[SPRITE.STONE_DOOR_SPIKE][SPRITE.DAY] = IMAGES.STONE_DOOR_SPIKED;\r\n    sprite[SPRITE.STONE_DOOR_SPIKE][SPRITE.NIGHT] = IMAGES.STONE_DOOR_SPIKEN;\r\n    sprite[SPRITE.GOLD_DOOR_SPIKE] = [];\r\n    sprite[SPRITE.GOLD_DOOR_SPIKE][SPRITE.DAY] = IMAGES.GOLD_DOOR_SPIKED;\r\n    sprite[SPRITE.GOLD_DOOR_SPIKE][SPRITE.NIGHT] = IMAGES.GOLD_DOOR_SPIKEN;\r\n    sprite[SPRITE.DIAMOND_DOOR_SPIKE] = [];\r\n    sprite[SPRITE.DIAMOND_DOOR_SPIKE][SPRITE.DAY] = IMAGES.DIAMOND_DOOR_SPIKED;\r\n    sprite[SPRITE.DIAMOND_DOOR_SPIKE][SPRITE.NIGHT] = IMAGES.DIAMOND_DOOR_SPIKEN;\r\n    sprite[SPRITE.AMETHYST_DOOR_SPIKE] = [];\r\n    sprite[SPRITE.AMETHYST_DOOR_SPIKE][SPRITE.DAY] = IMAGES.AMETHYST_DOOR_SPIKED;\r\n    sprite[SPRITE.AMETHYST_DOOR_SPIKE][SPRITE.NIGHT] = IMAGES.AMETHYST_DOOR_SPIKEN;\r\n    sprite[SPRITE.REIDITE_DOOR_SPIKE] = [];\r\n    sprite[SPRITE.REIDITE_DOOR_SPIKE][SPRITE.DAY] = IMAGES.REIDITE_DOOR_SPIKED;\r\n    sprite[SPRITE.REIDITE_DOOR_SPIKE][SPRITE.NIGHT] = IMAGES.REIDITE_DOOR_SPIKEN;\r\n    sprite[SPRITE.GOLDEN_HEN] = [];\r\n    sprite[SPRITE.GOLDEN_HEN][SPRITE.DAY] = IMAGES.HEND;\r\n    sprite[SPRITE.GOLDEN_HEN][SPRITE.NIGHT] = IMAGES.HENN;\r\n    sprite[SPRITE.GOLDEN_CHICKEN] = [];\r\n    sprite[SPRITE.GOLDEN_CHICKEN][SPRITE.DAY] = IMAGES.CHICKEND;\r\n    sprite[SPRITE.GOLDEN_CHICKEN][SPRITE.NIGHT] = IMAGES.CHICKENN;\r\n    sprite[SPRITE.HAMMER_REIDITE] = [];\r\n    sprite[SPRITE.HAMMER_REIDITE][SPRITE.DAY] = IMAGES.HAMMER_REIDITED;\r\n    sprite[SPRITE.HAMMER_REIDITE][SPRITE.NIGHT] = IMAGES.HAMMER_REIDITEN;\r\n    sprite[SPRITE.HURT_GOLDEN_HEN] = IMAGES.HURT_GOLDEN_HEN;\r\n    sprite[SPRITE.HURT_GOLDEN_CHICKEN] = IMAGES.HURT_GOLDEN_CHICKEN;\r\n    sprite[SPRITE.FOG] = [];\r\n    sprite[SPRITE.FOG][SPRITE.DAY] = [];\r\n    sprite[SPRITE.FOG][SPRITE.NIGHT] = [];\r\n    sprite[SPRITE.FOG][SPRITE.DAY].push(IMAGES.FOG0D);\r\n    sprite[SPRITE.FOG][SPRITE.DAY].push(IMAGES.FOG1D);\r\n    sprite[SPRITE.FOG][SPRITE.DAY].push(IMAGES.FOG2D);\r\n    sprite[SPRITE.FOG][SPRITE.NIGHT].push(IMAGES.FOG0N);\r\n    sprite[SPRITE.FOG][SPRITE.NIGHT].push(IMAGES.FOG1N);\r\n    sprite[SPRITE.FOG][SPRITE.NIGHT].push(IMAGES.FOG2N);\r\n    sprite[SPRITE.FOD] = [];\r\n    sprite[SPRITE.FOD][SPRITE.DAY] = [];\r\n    sprite[SPRITE.FOD][SPRITE.NIGHT] = [];\r\n    sprite[SPRITE.FOD][SPRITE.DAY].push(IMAGES.FOD0D);\r\n    sprite[SPRITE.FOD][SPRITE.DAY].push(IMAGES.FOD1D);\r\n    sprite[SPRITE.FOD][SPRITE.DAY].push(IMAGES.FOD2D);\r\n    sprite[SPRITE.FOD][SPRITE.NIGHT].push(IMAGES.FOD0N);\r\n    sprite[SPRITE.FOD][SPRITE.NIGHT].push(IMAGES.FOD1N);\r\n    sprite[SPRITE.FOD][SPRITE.NIGHT].push(IMAGES.FOD2N);\r\n    sprite[SPRITE.MARKER] = [];\r\n    sprite[SPRITE.MARKER][SPRITE.DAY] = [];\r\n    sprite[SPRITE.MARKER][SPRITE.NIGHT] = [];\r\n    sprite[SPRITE.MARKER][SPRITE.DAY].push(IMAGES.MARKER0D);\r\n    sprite[SPRITE.MARKER][SPRITE.DAY].push(IMAGES.MARKER1D);\r\n    sprite[SPRITE.MARKER][SPRITE.DAY].push(IMAGES.MARKER2D);\r\n    sprite[SPRITE.MARKER][SPRITE.DAY].push(IMAGES.MARKER3D);\r\n    sprite[SPRITE.MARKER][SPRITE.NIGHT].push(IMAGES.MARKER0N);\r\n    sprite[SPRITE.MARKER][SPRITE.NIGHT].push(IMAGES.MARKER1N);\r\n    sprite[SPRITE.MARKER][SPRITE.NIGHT].push(IMAGES.MARKER2N);\r\n    sprite[SPRITE.MARKER][SPRITE.NIGHT].push(IMAGES.MARKER3N);\r\n    sprite[SPRITE.LAVA_DRAGON] = [];\r\n    sprite[SPRITE.LAVA_DRAGON][SPRITE.DAY] = IMAGES.LAVA_DRAGOND;\r\n    sprite[SPRITE.LAVA_DRAGON][SPRITE.NIGHT] = IMAGES.LAVA_DRAGONN;\r\n    sprite[SPRITE.LAVA_WING_LEFT] = [];\r\n    sprite[SPRITE.LAVA_WING_LEFT][SPRITE.DAY] = IMAGES.LAVA_WING_LEFTD;\r\n    sprite[SPRITE.LAVA_WING_LEFT][SPRITE.NIGHT] = IMAGES.LAVA_WING_LEFTN;\r\n    sprite[SPRITE.LAVA_WING_RIGHT] = [];\r\n    sprite[SPRITE.LAVA_WING_RIGHT][SPRITE.DAY] = IMAGES.LAVA_WING_RIGHTD;\r\n    sprite[SPRITE.LAVA_WING_RIGHT][SPRITE.NIGHT] = IMAGES.LAVA_WING_RIGHTN;\r\n    sprite[SPRITE.HURT_LAVA_DRAGON] = IMAGES.HURT_LAVA_DRAGON;\r\n    sprite[SPRITE.HURT_LAVA_WING_LEFT] = IMAGES.HURT_LAVA_WING_LEFT;\r\n    sprite[SPRITE.HURT_LAVA_WING_RIGHT] = IMAGES.HURT_LAVA_WING_RIGHT;\r\n    sprite[SPRITE.DIAMOND_PROTECTION] = [];\r\n    sprite[SPRITE.DIAMOND_PROTECTION][SPRITE.DAY] = IMAGES.DIAMOND_PROTECTIOND;\r\n    sprite[SPRITE.DIAMOND_PROTECTION][SPRITE.NIGHT] = IMAGES.DIAMOND_PROTECTIONN;\r\n    sprite[SPRITE.GLOVES_DIAMOND_PROTECTION] = [];\r\n    sprite[SPRITE.GLOVES_DIAMOND_PROTECTION][SPRITE.DAY] = IMAGES.HAND_DIAMOND_PROTECTIOND;\r\n    sprite[SPRITE.GLOVES_DIAMOND_PROTECTION][SPRITE.NIGHT] = IMAGES.HAND_DIAMOND_PROTECTIONN;\r\n    sprite[SPRITE.AMETHYST_PROTECTION] = [];\r\n    sprite[SPRITE.AMETHYST_PROTECTION][SPRITE.DAY] = IMAGES.AMETHYST_PROTECTIOND;\r\n    sprite[SPRITE.AMETHYST_PROTECTION][SPRITE.NIGHT] = IMAGES.AMETHYST_PROTECTIONN;\r\n    sprite[SPRITE.GLOVES_AMETHYST_PROTECTION] = [];\r\n    sprite[SPRITE.GLOVES_AMETHYST_PROTECTION][SPRITE.DAY] = IMAGES.HAND_DIAMOND_PROTECTIOND;\r\n    sprite[SPRITE.GLOVES_AMETHYST_PROTECTION][SPRITE.NIGHT] = IMAGES.HAND_DIAMOND_PROTECTIONN;\r\n    sprite[SPRITE.REIDITE_HELMET] = [];\r\n    sprite[SPRITE.REIDITE_HELMET][SPRITE.DAY] = IMAGES.REIDITE_HELMETD;\r\n    sprite[SPRITE.REIDITE_HELMET][SPRITE.NIGHT] = IMAGES.REIDITE_HELMETN;\r\n    sprite[SPRITE.REIDITE_SWORD] = [];\r\n    sprite[SPRITE.REIDITE_SWORD][SPRITE.DAY] = IMAGES.REIDITE_SWORDD;\r\n    sprite[SPRITE.REIDITE_SWORD][SPRITE.NIGHT] = IMAGES.REIDITE_SWORDN;\r\n    sprite[SPRITE.REIDITE_SPEAR] = [];\r\n    sprite[SPRITE.REIDITE_SPEAR][SPRITE.DAY] = IMAGES.REIDITE_SPEARD;\r\n    sprite[SPRITE.REIDITE_SPEAR][SPRITE.NIGHT] = IMAGES.REIDITE_SPEARN;\r\n    sprite[SPRITE.LAVA_SPEAR] = [];\r\n    sprite[SPRITE.LAVA_SPEAR][SPRITE.DAY] = IMAGES.LAVA_SPEARD;\r\n    sprite[SPRITE.LAVA_SPEAR][SPRITE.NIGHT] = IMAGES.LAVA_SPEARN;\r\n    sprite[SPRITE.LAVA_SWORD] = [];\r\n    sprite[SPRITE.LAVA_SWORD][SPRITE.DAY] = IMAGES.LAVA_SWORDD;\r\n    sprite[SPRITE.LAVA_SWORD][SPRITE.NIGHT] = IMAGES.LAVA_SWORDN;\r\n    sprite[SPRITE.LAVA_HELMET] = [];\r\n    sprite[SPRITE.LAVA_HELMET][SPRITE.DAY] = IMAGES.LAVA_HELMETD;\r\n    sprite[SPRITE.LAVA_HELMET][SPRITE.NIGHT] = IMAGES.LAVA_HELMETN;\r\n    sprite[SPRITE.WITCH] = [];\r\n    sprite[SPRITE.WITCH][SPRITE.DAY] = IMAGES.WITCHD;\r\n    sprite[SPRITE.WITCH][SPRITE.NIGHT] = IMAGES.WITCHN;\r\n    sprite[SPRITE.NIMBUS] = [];\r\n    sprite[SPRITE.NIMBUS][SPRITE.DAY] = IMAGES.NIMBUSD;\r\n    sprite[SPRITE.NIMBUS][SPRITE.NIGHT] = IMAGES.NIMBUSN;\r\n    sprite[SPRITE.WOOD_SHIELD] = [];\r\n    sprite[SPRITE.WOOD_SHIELD][SPRITE.DAY] = IMAGES.WOOD_SHIELDD;\r\n    sprite[SPRITE.WOOD_SHIELD][SPRITE.NIGHT] = IMAGES.WOOD_SHIELDN;\r\n    sprite[SPRITE.STONE_SHIELD] = [];\r\n    sprite[SPRITE.STONE_SHIELD][SPRITE.DAY] = IMAGES.STONE_SHIELDD;\r\n    sprite[SPRITE.STONE_SHIELD][SPRITE.NIGHT] = IMAGES.STONE_SHIELDN;\r\n    sprite[SPRITE.GOLD_SHIELD] = [];\r\n    sprite[SPRITE.GOLD_SHIELD][SPRITE.DAY] = IMAGES.GOLD_SHIELDD;\r\n    sprite[SPRITE.GOLD_SHIELD][SPRITE.NIGHT] = IMAGES.GOLD_SHIELDN;\r\n    sprite[SPRITE.DIAMOND_SHIELD] = [];\r\n    sprite[SPRITE.DIAMOND_SHIELD][SPRITE.DAY] = IMAGES.DIAMOND_SHIELDD;\r\n    sprite[SPRITE.DIAMOND_SHIELD][SPRITE.NIGHT] = IMAGES.DIAMOND_SHIELDN;\r\n    sprite[SPRITE.AMETHYST_SHIELD] = [];\r\n    sprite[SPRITE.AMETHYST_SHIELD][SPRITE.DAY] = IMAGES.AMETHYST_SHIELDD;\r\n    sprite[SPRITE.AMETHYST_SHIELD][SPRITE.NIGHT] = IMAGES.AMETHYST_SHIELDN;\r\n    sprite[SPRITE.REIDITE_SHIELD] = [];\r\n    sprite[SPRITE.REIDITE_SHIELD][SPRITE.DAY] = IMAGES.REIDITE_SHIELDD;\r\n    sprite[SPRITE.REIDITE_SHIELD][SPRITE.NIGHT] = IMAGES.REIDITE_SHIELDN;\r\n    sprite[SPRITE.WOOD_ARROW] = [];\r\n    sprite[SPRITE.WOOD_ARROW][SPRITE.DAY] = IMAGES.WOOD_ARROWD;\r\n    sprite[SPRITE.WOOD_ARROW][SPRITE.NIGHT] = IMAGES.WOOD_ARROWN;\r\n    sprite[SPRITE.WOOD_BOW] = [];\r\n    sprite[SPRITE.WOOD_BOW][SPRITE.DAY] = IMAGES.WOOD_BOWD;\r\n    sprite[SPRITE.WOOD_BOW][SPRITE.NIGHT] = IMAGES.WOOD_BOWN;\r\n    sprite[SPRITE.STONE_ARROW] = [];\r\n    sprite[SPRITE.STONE_ARROW][SPRITE.DAY] = IMAGES.STONE_ARROWD;\r\n    sprite[SPRITE.STONE_ARROW][SPRITE.NIGHT] = IMAGES.STONE_ARROWN;\r\n    sprite[SPRITE.STONE_BOW] = [];\r\n    sprite[SPRITE.STONE_BOW][SPRITE.DAY] = IMAGES.STONE_BOWD;\r\n    sprite[SPRITE.STONE_BOW][SPRITE.NIGHT] = IMAGES.STONE_BOWN;\r\n    sprite[SPRITE.GOLD_ARROW] = [];\r\n    sprite[SPRITE.GOLD_ARROW][SPRITE.DAY] = IMAGES.GOLD_ARROWD;\r\n    sprite[SPRITE.GOLD_ARROW][SPRITE.NIGHT] = IMAGES.GOLD_ARROWN;\r\n    sprite[SPRITE.GOLD_BOW] = [];\r\n    sprite[SPRITE.GOLD_BOW][SPRITE.DAY] = IMAGES.GOLD_BOWD;\r\n    sprite[SPRITE.GOLD_BOW][SPRITE.NIGHT] = IMAGES.GOLD_BOWN;\r\n    sprite[SPRITE.DIAMOND_ARROW] = [];\r\n    sprite[SPRITE.DIAMOND_ARROW][SPRITE.DAY] = IMAGES.DIAMOND_ARROWD;\r\n    sprite[SPRITE.DIAMOND_ARROW][SPRITE.NIGHT] = IMAGES.DIAMOND_ARROWN;\r\n    sprite[SPRITE.DIAMOND_BOW] = [];\r\n    sprite[SPRITE.DIAMOND_BOW][SPRITE.DAY] = IMAGES.DIAMOND_BOWD;\r\n    sprite[SPRITE.DIAMOND_BOW][SPRITE.NIGHT] = IMAGES.DIAMOND_BOWN;\r\n    sprite[SPRITE.AMETHYST_ARROW] = [];\r\n    sprite[SPRITE.AMETHYST_ARROW][SPRITE.DAY] = IMAGES.AMETHYST_ARROWD;\r\n    sprite[SPRITE.AMETHYST_ARROW][SPRITE.NIGHT] = IMAGES.AMETHYST_ARROWN;\r\n    sprite[SPRITE.AMETHYST_BOW] = [];\r\n    sprite[SPRITE.AMETHYST_BOW][SPRITE.DAY] = IMAGES.AMETHYST_BOWD;\r\n    sprite[SPRITE.AMETHYST_BOW][SPRITE.NIGHT] = IMAGES.AMETHYST_BOWN;\r\n    sprite[SPRITE.REIDITE_ARROW] = [];\r\n    sprite[SPRITE.REIDITE_ARROW][SPRITE.DAY] = IMAGES.REIDITE_ARROWD;\r\n    sprite[SPRITE.REIDITE_ARROW][SPRITE.NIGHT] = IMAGES.REIDITE_ARROWN;\r\n    sprite[SPRITE.REIDITE_BOW] = [];\r\n    sprite[SPRITE.REIDITE_BOW][SPRITE.DAY] = IMAGES.REIDITE_BOWD;\r\n    sprite[SPRITE.REIDITE_BOW][SPRITE.NIGHT] = IMAGES.REIDITE_BOWN;\r\n    sprite[SPRITE.DRAGON_ARROW] = [];\r\n    sprite[SPRITE.DRAGON_ARROW][SPRITE.DAY] = IMAGES.DRAGON_ARROWD;\r\n    sprite[SPRITE.DRAGON_ARROW][SPRITE.NIGHT] = IMAGES.DRAGON_ARROWN;\r\n    sprite[SPRITE.DRAGON_BOW] = [];\r\n    sprite[SPRITE.DRAGON_BOW][SPRITE.DAY] = IMAGES.DRAGON_BOWD;\r\n    sprite[SPRITE.DRAGON_BOW][SPRITE.NIGHT] = IMAGES.DRAGON_BOWN;\r\n    sprite[SPRITE.TURBAN1] = [];\r\n    sprite[SPRITE.TURBAN1][SPRITE.DAY] = IMAGES.TURBAN1D;\r\n    sprite[SPRITE.TURBAN1][SPRITE.NIGHT] = IMAGES.TURBAN1N;\r\n    sprite[SPRITE.TURBAN2] = [];\r\n    sprite[SPRITE.TURBAN2][SPRITE.DAY] = IMAGES.TURBAN2D;\r\n    sprite[SPRITE.TURBAN2][SPRITE.NIGHT] = IMAGES.TURBAN2N;\r\n    sprite[SPRITE.REIDITE_PROTECTION] = [];\r\n    sprite[SPRITE.REIDITE_PROTECTION][SPRITE.DAY] = IMAGES.REIDITE_PROTECTIOND;\r\n    sprite[SPRITE.REIDITE_PROTECTION][SPRITE.NIGHT] = IMAGES.REIDITE_PROTECTIONN;\r\n    sprite[SPRITE.GLOVES_REIDITE_PROTECTION] = [];\r\n    sprite[SPRITE.GLOVES_REIDITE_PROTECTION][SPRITE.DAY] = IMAGES.HAND_REIDITE_PROTECTIOND;\r\n    sprite[SPRITE.GLOVES_REIDITE_PROTECTION][SPRITE.NIGHT] = IMAGES.HAND_REIDITE_PROTECTIONN;\r\n    sprite[SPRITE.LAVA_SHINGLE] = [];\r\n    sprite[SPRITE.LAVA_SHINGLE][SPRITE.DAY] = [];\r\n    sprite[SPRITE.LAVA_SHINGLE][SPRITE.NIGHT] = [];\r\n    sprite[SPRITE.LAVA_SHINGLE][SPRITE.DAY].push(IMAGES.LAVA_SHINGLES0D);\r\n    sprite[SPRITE.LAVA_SHINGLE][SPRITE.DAY].push(IMAGES.LAVA_SHINGLES1D);\r\n    sprite[SPRITE.LAVA_SHINGLE][SPRITE.NIGHT].push(IMAGES.LAVA_SHINGLES1D);\r\n    sprite[SPRITE.LAVA_SHINGLE][SPRITE.NIGHT].push(IMAGES.LAVA_SHINGLES1N);\r\n    sprite[SPRITE.LAVA_BUBBLE] = [];\r\n    sprite[SPRITE.LAVA_BUBBLE][SPRITE.DAY] = [];\r\n    sprite[SPRITE.LAVA_BUBBLE][SPRITE.NIGHT] = [];\r\n    sprite[SPRITE.LAVA_BUBBLE][SPRITE.DAY].push(IMAGES.LAVA_BUBLE0D);\r\n    sprite[SPRITE.LAVA_BUBBLE][SPRITE.DAY].push(IMAGES.LAVA_BUBLE1D);\r\n    sprite[SPRITE.LAVA_BUBBLE][SPRITE.DAY].push(IMAGES.LAVA_BUBLE2D);\r\n    sprite[SPRITE.LAVA_BUBBLE][SPRITE.NIGHT].push(IMAGES.LAVA_BUBLE0N);\r\n    sprite[SPRITE.LAVA_BUBBLE][SPRITE.NIGHT].push(IMAGES.LAVA_BUBLE1N);\r\n    sprite[SPRITE.LAVA_BUBBLE][SPRITE.NIGHT].push(IMAGES.LAVA_BUBLE2N);\r\n    sprite[SPRITE.PITCHFORK] = [];\r\n    sprite[SPRITE.PITCHFORK][SPRITE.DAY] = IMAGES.PITCHFORKD;\r\n    sprite[SPRITE.PITCHFORK][SPRITE.NIGHT] = IMAGES.PITCHFORKN;\r\n    sprite[SPRITE.PITCHFORK2] = [];\r\n    sprite[SPRITE.PITCHFORK2][SPRITE.DAY] = IMAGES.PITCHFORK2D;\r\n    sprite[SPRITE.PITCHFORK2][SPRITE.NIGHT] = IMAGES.PITCHFORK2N;\r\n    sprite[SPRITE.EMERALD] = [];\r\n    sprite[SPRITE.EMERALD][SPRITE.DAY] = [];\r\n    sprite[SPRITE.EMERALD][SPRITE.NIGHT] = [];\r\n    sprite[SPRITE.EMERALD][SPRITE.DAY].push(IMAGES.EMERALD0D);\r\n    sprite[SPRITE.EMERALD][SPRITE.DAY].push(IMAGES.EMERALD1D);\r\n    sprite[SPRITE.EMERALD][SPRITE.DAY].push(IMAGES.EMERALD2D);\r\n    sprite[SPRITE.EMERALD][SPRITE.NIGHT].push(IMAGES.EMERALD0N);\r\n    sprite[SPRITE.EMERALD][SPRITE.NIGHT].push(IMAGES.EMERALD1N);\r\n    sprite[SPRITE.EMERALD][SPRITE.NIGHT].push(IMAGES.EMERALD2N);\r\n    sprite[SPRITE.REIDITE] = [];\r\n    sprite[SPRITE.REIDITE][SPRITE.DAY] = [];\r\n    sprite[SPRITE.REIDITE][SPRITE.NIGHT] = [];\r\n    sprite[SPRITE.REIDITE][SPRITE.DAY].push(IMAGES.REIDITE0D);\r\n    sprite[SPRITE.REIDITE][SPRITE.DAY].push(IMAGES.REIDITE1D);\r\n    sprite[SPRITE.REIDITE][SPRITE.DAY].push(IMAGES.REIDITE2D);\r\n    sprite[SPRITE.REIDITE][SPRITE.NIGHT].push(IMAGES.REIDITE0N);\r\n    sprite[SPRITE.REIDITE][SPRITE.NIGHT].push(IMAGES.REIDITE1N);\r\n    sprite[SPRITE.REIDITE][SPRITE.NIGHT].push(IMAGES.REIDITE2N);\r\n    sprite[SPRITE.MAGMA] = [];\r\n    sprite[SPRITE.MAGMA][SPRITE.DAY] = [];\r\n    sprite[SPRITE.MAGMA][SPRITE.NIGHT] = [];\r\n    sprite[SPRITE.MAGMA][SPRITE.DAY].push(IMAGES.MAGMA1D);\r\n    sprite[SPRITE.MAGMA][SPRITE.DAY].push(IMAGES.MAGMA2D);\r\n    sprite[SPRITE.MAGMA][SPRITE.DAY].push(IMAGES.MAGMA3D);\r\n    sprite[SPRITE.MAGMA][SPRITE.DAY].push(IMAGES.MAGMA4D);\r\n    sprite[SPRITE.MAGMA][SPRITE.DAY].push(IMAGES.MAGMA5D);\r\n    sprite[SPRITE.MAGMA][SPRITE.DAY].push(IMAGES.MAGMA6D);\r\n    sprite[SPRITE.MAGMA][SPRITE.NIGHT].push(IMAGES.MAGMA1N);\r\n    sprite[SPRITE.MAGMA][SPRITE.NIGHT].push(IMAGES.MAGMA2N);\r\n    sprite[SPRITE.MAGMA][SPRITE.NIGHT].push(IMAGES.MAGMA3N);\r\n    sprite[SPRITE.MAGMA][SPRITE.NIGHT].push(IMAGES.MAGMA4N);\r\n    sprite[SPRITE.MAGMA][SPRITE.NIGHT].push(IMAGES.MAGMA5N);\r\n    sprite[SPRITE.MAGMA][SPRITE.NIGHT].push(IMAGES.MAGMA6N);\r\n    sprite[SPRITE.LAVA_GROUND] = [];\r\n    sprite[SPRITE.LAVA_GROUND][SPRITE.DAY] = [];\r\n    sprite[SPRITE.LAVA_GROUND][SPRITE.NIGHT] = [];\r\n    sprite[SPRITE.LAVA_GROUND][SPRITE.DAY].push(IMAGES.LAVA_GROUND1D);\r\n    sprite[SPRITE.LAVA_GROUND][SPRITE.DAY].push(IMAGES.LAVA_GROUND2D);\r\n    sprite[SPRITE.LAVA_GROUND][SPRITE.DAY].push(IMAGES.LAVA_GROUND3D);\r\n    sprite[SPRITE.LAVA_GROUND][SPRITE.DAY].push(IMAGES.LAVA_GROUND4D);\r\n    sprite[SPRITE.LAVA_GROUND][SPRITE.DAY].push(IMAGES.LAVA_GROUND5D);\r\n    sprite[SPRITE.LAVA_GROUND][SPRITE.DAY].push(IMAGES.LAVA_GROUND6D);\r\n    sprite[SPRITE.LAVA_GROUND][SPRITE.NIGHT].push(IMAGES.LAVA_GROUND1N);\r\n    sprite[SPRITE.LAVA_GROUND][SPRITE.NIGHT].push(IMAGES.LAVA_GROUND2N);\r\n    sprite[SPRITE.LAVA_GROUND][SPRITE.NIGHT].push(IMAGES.LAVA_GROUND3N);\r\n    sprite[SPRITE.LAVA_GROUND][SPRITE.NIGHT].push(IMAGES.LAVA_GROUND4N);\r\n    sprite[SPRITE.LAVA_GROUND][SPRITE.NIGHT].push(IMAGES.LAVA_GROUND5N);\r\n    sprite[SPRITE.LAVA_GROUND][SPRITE.NIGHT].push(IMAGES.LAVA_GROUND6N);\r\n    sprite[SPRITE.FIRE_MOB] = [];\r\n    sprite[SPRITE.FIRE_MOB][SPRITE.DAY] = IMAGES.FIRE_MOBD;\r\n    sprite[SPRITE.FIRE_MOB][SPRITE.NIGHT] = IMAGES.FIRE_MOBN;\r\n    sprite[SPRITE.HURT_FIRE_MOB] = IMAGES.FIRE_MOB_HURT;\r\n    sprite[SPRITE.MACHETE] = [];\r\n    sprite[SPRITE.MACHETE][SPRITE.DAY] = IMAGES.MACHETED;\r\n    sprite[SPRITE.MACHETE][SPRITE.NIGHT] = IMAGES.MACHETEN;\r\n    sprite[SPRITE.BOAT] = [];\r\n    sprite[SPRITE.BOAT][SPRITE.DAY] = IMAGES.BOATD;\r\n    sprite[SPRITE.BOAT][SPRITE.NIGHT] = IMAGES.BOATN;\r\n    sprite[SPRITE.SLED] = [];\r\n    sprite[SPRITE.SLED][SPRITE.DAY] = IMAGES.SLEDD;\r\n    sprite[SPRITE.SLED][SPRITE.NIGHT] = IMAGES.SLEDN;\r\n    sprite[SPRITE.PLANE] = [];\r\n    sprite[SPRITE.PLANE][SPRITE.DAY] = IMAGES.PLANED;\r\n    sprite[SPRITE.PLANE][SPRITE.NIGHT] = IMAGES.PLANEN;\r\n    sprite[SPRITE.PENGUIN] = [];\r\n    sprite[SPRITE.PENGUIN][SPRITE.DAY] = IMAGES.PENGUIND;\r\n    sprite[SPRITE.PENGUIN][SPRITE.NIGHT] = IMAGES.PENGUINN;\r\n    sprite[SPRITE.HURT_PENGUIN] = IMAGES.HURT_PENGUIN;\r\n    sprite[SPRITE.SAND_WORM1] = [];\r\n    sprite[SPRITE.SAND_WORM1][SPRITE.DAY] = IMAGES.SAND_WORM1D;\r\n    sprite[SPRITE.SAND_WORM1][SPRITE.NIGHT] = IMAGES.SAND_WORM1N;\r\n    sprite[SPRITE.SAND_WORM2] = [];\r\n    sprite[SPRITE.SAND_WORM2][SPRITE.DAY] = IMAGES.SAND_WORM2D;\r\n    sprite[SPRITE.SAND_WORM2][SPRITE.NIGHT] = IMAGES.SAND_WORM2N;\r\n    sprite[SPRITE.HURT_SAND_WORM0] = IMAGES.HURT_SAND_WORM0;\r\n    sprite[SPRITE.HURT_SAND_WORM1] = IMAGES.HURT_SAND_WORM1;\r\n    sprite[SPRITE.HURT_SAND_WORM2] = IMAGES.HURT_SAND_WORM2;\r\n    sprite[SPRITE.SCORPION] = [];\r\n    sprite[SPRITE.SCORPION][SPRITE.DAY] = IMAGES.SCORPIOND;\r\n    sprite[SPRITE.SCORPION][SPRITE.NIGHT] = IMAGES.SCORPIONN;\r\n    sprite[SPRITE.SCORPION_HAND_LEFT] = [];\r\n    sprite[SPRITE.SCORPION_HAND_LEFT][SPRITE.DAY] = IMAGES.SCORPION_HAND_LEFTD;\r\n    sprite[SPRITE.SCORPION_HAND_LEFT][SPRITE.NIGHT] = IMAGES.SCORPION_HAND_LEFTN;\r\n    sprite[SPRITE.SCORPION_HAND_RIGHT] = [];\r\n    sprite[SPRITE.SCORPION_HAND_RIGHT][SPRITE.DAY] = IMAGES.SCORPION_HAND_RIGHTD;\r\n    sprite[SPRITE.SCORPION_HAND_RIGHT][SPRITE.NIGHT] = IMAGES.SCORPION_HAND_RIGHTN;\r\n    sprite[SPRITE.HURT_SCORPION] = IMAGES.HURT_SCORPION;\r\n    sprite[SPRITE.HURT_SCORPION_HAND_RIGHT] = IMAGES.HURT_SCORPION_HAND_RIGHT;\r\n    sprite[SPRITE.HURT_SCORPION_HAND_LEFT] = IMAGES.HURT_SCORPION_HAND_LEFT;\r\n    sprite[SPRITE.CRAB_BOSS_ATTACK] = [];\r\n    sprite[SPRITE.CRAB_BOSS_ATTACK][SPRITE.DAY] = IMAGES.CRAB_BOSS_ATTACKD;\r\n    sprite[SPRITE.CRAB_BOSS_ATTACK][SPRITE.NIGHT] = IMAGES.CRAB_BOSS_ATTACKN;\r\n    sprite[SPRITE.CRAB_BOSS_TAMED] = [];\r\n    sprite[SPRITE.CRAB_BOSS_TAMED][SPRITE.DAY] = IMAGES.CRAB_BOSS_TAMEDD;\r\n    sprite[SPRITE.CRAB_BOSS_TAMED][SPRITE.NIGHT] = IMAGES.CRAB_BOSS_TAMEDN;\r\n    sprite[SPRITE.CRAB_BOSS] = [];\r\n    sprite[SPRITE.CRAB_BOSS][SPRITE.DAY] = IMAGES.CRAB_BOSSD;\r\n    sprite[SPRITE.CRAB_BOSS][SPRITE.NIGHT] = IMAGES.CRAB_BOSSN;\r\n    sprite[SPRITE.CRAB_BOSS_CLAW_LEFT] = [];\r\n    sprite[SPRITE.CRAB_BOSS_CLAW_LEFT][SPRITE.DAY] = IMAGES.CRAB_BOSS_CLAW_LEFTD;\r\n    sprite[SPRITE.CRAB_BOSS_CLAW_LEFT][SPRITE.NIGHT] = IMAGES.CRAB_BOSS_CLAW_LEFTN;\r\n    sprite[SPRITE.CRAB_BOSS_CLAW_RIGHT] = [];\r\n    sprite[SPRITE.CRAB_BOSS_CLAW_RIGHT][SPRITE.DAY] = IMAGES.CRAB_BOSS_CLAW_RIGHTD;\r\n    sprite[SPRITE.CRAB_BOSS_CLAW_RIGHT][SPRITE.NIGHT] = IMAGES.CRAB_BOSS_CLAW_RIGHTN;\r\n    sprite[SPRITE.CRAB_BOSS_CLAW_LEFT_ATTACK] = [];\r\n    sprite[SPRITE.CRAB_BOSS_CLAW_LEFT_ATTACK][SPRITE.DAY] = IMAGES.CRAB_BOSS_CLAW_LEFT_ATTACKD;\r\n    sprite[SPRITE.CRAB_BOSS_CLAW_LEFT_ATTACK][SPRITE.NIGHT] = IMAGES.CRAB_BOSS_CLAW_LEFT_ATTACKN;\r\n    sprite[SPRITE.CRAB_BOSS_CLAW_RIGHT_ATTACK] = [];\r\n    sprite[SPRITE.CRAB_BOSS_CLAW_RIGHT_ATTACK][SPRITE.DAY] = IMAGES.CRAB_BOSS_CLAW_RIGHT_ATTACKD;\r\n    sprite[SPRITE.CRAB_BOSS_CLAW_RIGHT_ATTACK][SPRITE.NIGHT] = IMAGES.CRAB_BOSS_CLAW_RIGHT_ATTACKN;\r\n    sprite[SPRITE.HURT_CRAB_BOSS] = IMAGES.HURT_CRAB_BOSS;\r\n    sprite[SPRITE.HURT_CRAB_BOSS_CLAW_LEFT] = IMAGES.HURT_CRAB_BOSS_CLAW_LEFT;\r\n    sprite[SPRITE.HURT_CRAB_BOSS_CLAW_RIGHT] = IMAGES.HURT_CRAB_BOSS_CLAW_RIGHT;\r\n    sprite[SPRITE.HEAL_CRAB_BOSS] = IMAGES.HEAL_CRAB_BOSS;\r\n    sprite[SPRITE.HEAL_CRAB_BOSS_CLAW_LEFT] = IMAGES.HEAL_CRAB_BOSS_CLAW_LEFT;\r\n    sprite[SPRITE.HEAL_CRAB_BOSS_CLAW_RIGHT] = IMAGES.HEAL_CRAB_BOSS_CLAW_RIGHT;\r\n    sprite[SPRITE.BABY_MAMMOTH_ATTACK] = [];\r\n    sprite[SPRITE.BABY_MAMMOTH_ATTACK][SPRITE.DAY] = IMAGES.BABY_MAMMOTH_ATTACKD;\r\n    sprite[SPRITE.BABY_MAMMOTH_ATTACK][SPRITE.NIGHT] = IMAGES.BABY_MAMMOTH_ATTACKN;\r\n    sprite[SPRITE.BABY_MAMMOTH] = [];\r\n    sprite[SPRITE.BABY_MAMMOTH][SPRITE.DAY] = IMAGES.BABY_MAMMOTHD;\r\n    sprite[SPRITE.BABY_MAMMOTH][SPRITE.NIGHT] = IMAGES.BABY_MAMMOTHN;\r\n    sprite[SPRITE.MAMMOTH] = [];\r\n    sprite[SPRITE.MAMMOTH][SPRITE.DAY] = IMAGES.MAMMOTHD;\r\n    sprite[SPRITE.MAMMOTH][SPRITE.NIGHT] = IMAGES.MAMMOTHN;\r\n    sprite[SPRITE.BABY_MAMMOTH_TAMED] = [];\r\n    sprite[SPRITE.BABY_MAMMOTH_TAMED][SPRITE.DAY] = IMAGES.BABY_MAMMOTH_TAMEDD;\r\n    sprite[SPRITE.BABY_MAMMOTH_TAMED][SPRITE.NIGHT] = IMAGES.BABY_MAMMOTH_TAMEDN;\r\n    sprite[SPRITE.HURT_BABY_MAMMOTH] = IMAGES.HURT_BABY_MAMMOTH;\r\n    sprite[SPRITE.HURT_MAMMOTH] = IMAGES.HURT_MAMMOTH;\r\n    sprite[SPRITE.BABY_DRAGON_ATTACK] = [];\r\n    sprite[SPRITE.BABY_DRAGON_ATTACK][SPRITE.DAY] = IMAGES.BABY_DRAGON_ATTACKD;\r\n    sprite[SPRITE.BABY_DRAGON_ATTACK][SPRITE.NIGHT] = IMAGES.BABY_DRAGON_ATTACKN;\r\n    sprite[SPRITE.BABY_DRAGON] = [];\r\n    sprite[SPRITE.BABY_DRAGON][SPRITE.DAY] = IMAGES.BABY_DRAGOND;\r\n    sprite[SPRITE.BABY_DRAGON][SPRITE.NIGHT] = IMAGES.BABY_DRAGONN;\r\n    sprite[SPRITE.BABY_DRAGON_TAMED] = [];\r\n    sprite[SPRITE.BABY_DRAGON_TAMED][SPRITE.DAY] = IMAGES.BABY_DRAGON_TAMEDD;\r\n    sprite[SPRITE.BABY_DRAGON_TAMED][SPRITE.NIGHT] = IMAGES.BABY_DRAGON_TAMEDN;\r\n    sprite[SPRITE.BABY_DRAGON_WING_LEFT] = [];\r\n    sprite[SPRITE.BABY_DRAGON_WING_LEFT][SPRITE.DAY] = IMAGES.BABY_DRAGON_WING_LEFTD;\r\n    sprite[SPRITE.BABY_DRAGON_WING_LEFT][SPRITE.NIGHT] = IMAGES.BABY_DRAGON_WING_LEFTN;\r\n    sprite[SPRITE.BABY_DRAGON_WING_RIGHT] = [];\r\n    sprite[SPRITE.BABY_DRAGON_WING_RIGHT][SPRITE.DAY] = IMAGES.BABY_DRAGON_WING_RIGHTD;\r\n    sprite[SPRITE.BABY_DRAGON_WING_RIGHT][SPRITE.NIGHT] = IMAGES.BABY_DRAGON_WING_RIGHTN;\r\n    sprite[SPRITE.BABY_DRAGON_WING_LEFT_ATTACK] = [];\r\n    sprite[SPRITE.BABY_DRAGON_WING_LEFT_ATTACK][SPRITE.DAY] = IMAGES.BABY_DRAGON_WING_LEFT_ATTACKD;\r\n    sprite[SPRITE.BABY_DRAGON_WING_LEFT_ATTACK][SPRITE.NIGHT] = IMAGES.BABY_DRAGON_WING_LEFT_ATTACKN;\r\n    sprite[SPRITE.BABY_DRAGON_WING_RIGHT_ATTACK] = [];\r\n    sprite[SPRITE.BABY_DRAGON_WING_RIGHT_ATTACK][SPRITE.DAY] = IMAGES.BABY_DRAGON_WING_RIGHT_ATTACKD;\r\n    sprite[SPRITE.BABY_DRAGON_WING_RIGHT_ATTACK][SPRITE.NIGHT] = IMAGES.BABY_DRAGON_WING_RIGHT_ATTACKN;\r\n    sprite[SPRITE.BABY_DRAGON_WING_LEFT_TAMED] = [];\r\n    sprite[SPRITE.BABY_DRAGON_WING_LEFT_TAMED][SPRITE.DAY] = IMAGES.BABY_DRAGON_WING_LEFT_TAMEDD;\r\n    sprite[SPRITE.BABY_DRAGON_WING_LEFT_TAMED][SPRITE.NIGHT] = IMAGES.BABY_DRAGON_WING_LEFT_TAMEDN;\r\n    sprite[SPRITE.BABY_DRAGON_WING_RIGHT_TAMED] = [];\r\n    sprite[SPRITE.BABY_DRAGON_WING_RIGHT_TAMED][SPRITE.DAY] = IMAGES.BABY_DRAGON_WING_RIGHT_TAMEDD;\r\n    sprite[SPRITE.BABY_DRAGON_WING_RIGHT_TAMED][SPRITE.NIGHT] = IMAGES.BABY_DRAGON_WING_RIGHT_TAMEDN;\r\n    sprite[SPRITE.HURT_BABY_DRAGON] = IMAGES.HURT_BABY_DRAGON;\r\n    sprite[SPRITE.HURT_BABY_DRAGON_WING_LEFT] = IMAGES.HURT_BABY_DRAGON_WING_LEFT;\r\n    sprite[SPRITE.HURT_BABY_DRAGON_WING_RIGHT] = IMAGES.HURT_BABY_DRAGON_WING_RIGHT;\r\n    sprite[SPRITE.BABY_LAVA_ATTACK] = [];\r\n    sprite[SPRITE.BABY_LAVA_ATTACK][SPRITE.DAY] = IMAGES.BABY_LAVA_ATTACKD;\r\n    sprite[SPRITE.BABY_LAVA_ATTACK][SPRITE.NIGHT] = IMAGES.BABY_LAVA_ATTACKN;\r\n    sprite[SPRITE.BABY_LAVA] = [];\r\n    sprite[SPRITE.BABY_LAVA][SPRITE.DAY] = IMAGES.BABY_LAVAD;\r\n    sprite[SPRITE.BABY_LAVA][SPRITE.NIGHT] = IMAGES.BABY_LAVAN;\r\n    sprite[SPRITE.BABY_LAVA_TAMED] = [];\r\n    sprite[SPRITE.BABY_LAVA_TAMED][SPRITE.DAY] = IMAGES.BABY_LAVA_TAMEDD;\r\n    sprite[SPRITE.BABY_LAVA_TAMED][SPRITE.NIGHT] = IMAGES.BABY_LAVA_TAMEDN;\r\n    sprite[SPRITE.BABY_LAVA_WING_LEFT] = [];\r\n    sprite[SPRITE.BABY_LAVA_WING_LEFT][SPRITE.DAY] = IMAGES.BABY_LAVA_WING_LEFTD;\r\n    sprite[SPRITE.BABY_LAVA_WING_LEFT][SPRITE.NIGHT] = IMAGES.BABY_LAVA_WING_LEFTN;\r\n    sprite[SPRITE.BABY_LAVA_WING_RIGHT] = [];\r\n    sprite[SPRITE.BABY_LAVA_WING_RIGHT][SPRITE.DAY] = IMAGES.BABY_LAVA_WING_RIGHTD;\r\n    sprite[SPRITE.BABY_LAVA_WING_RIGHT][SPRITE.NIGHT] = IMAGES.BABY_LAVA_WING_RIGHTN;\r\n    sprite[SPRITE.BABY_LAVA_WING_LEFT_ATTACK] = [];\r\n    sprite[SPRITE.BABY_LAVA_WING_LEFT_ATTACK][SPRITE.DAY] = IMAGES.BABY_LAVA_WING_LEFT_ATTACKD;\r\n    sprite[SPRITE.BABY_LAVA_WING_LEFT_ATTACK][SPRITE.NIGHT] = IMAGES.BABY_LAVA_WING_LEFT_ATTACKN;\r\n    sprite[SPRITE.BABY_LAVA_WING_RIGHT_ATTACK] = [];\r\n    sprite[SPRITE.BABY_LAVA_WING_RIGHT_ATTACK][SPRITE.DAY] = IMAGES.BABY_LAVA_WING_RIGHT_ATTACKD;\r\n    sprite[SPRITE.BABY_LAVA_WING_RIGHT_ATTACK][SPRITE.NIGHT] = IMAGES.BABY_LAVA_WING_RIGHT_ATTACKN;\r\n    sprite[SPRITE.BABY_LAVA_WING_LEFT_TAMED] = [];\r\n    sprite[SPRITE.BABY_LAVA_WING_LEFT_TAMED][SPRITE.DAY] = IMAGES.BABY_LAVA_WING_LEFT_TAMEDD;\r\n    sprite[SPRITE.BABY_LAVA_WING_LEFT_TAMED][SPRITE.NIGHT] = IMAGES.BABY_LAVA_WING_LEFT_TAMEDN;\r\n    sprite[SPRITE.BABY_LAVA_WING_RIGHT_TAMED] = [];\r\n    sprite[SPRITE.BABY_LAVA_WING_RIGHT_TAMED][SPRITE.DAY] = IMAGES.BABY_LAVA_WING_RIGHT_TAMEDD;\r\n    sprite[SPRITE.BABY_LAVA_WING_RIGHT_TAMED][SPRITE.NIGHT] = IMAGES.BABY_LAVA_WING_RIGHT_TAMEDN;\r\n    sprite[SPRITE.HURT_BABY_LAVA] = IMAGES.HURT_BABY_LAVA;\r\n    sprite[SPRITE.HURT_BABY_LAVA_WING_LEFT] = IMAGES.HURT_BABY_LAVA_WING_LEFT;\r\n    sprite[SPRITE.HURT_BABY_LAVA_WING_RIGHT] = IMAGES.HURT_BABY_LAVA_WING_RIGHT;\r\n    sprite[SPRITE.HAWK_ATTACK] = [];\r\n    sprite[SPRITE.HAWK_ATTACK][SPRITE.DAY] = IMAGES.HAWK_ATTACKD;\r\n    sprite[SPRITE.HAWK_ATTACK][SPRITE.NIGHT] = IMAGES.HAWK_ATTACKN;\r\n    sprite[SPRITE.HAWK] = [];\r\n    sprite[SPRITE.HAWK][SPRITE.DAY] = IMAGES.HAWKD;\r\n    sprite[SPRITE.HAWK][SPRITE.NIGHT] = IMAGES.HAWKN;\r\n    sprite[SPRITE.HURT_HAWK_GROUND] = IMAGES.HURT_HAWK_GROUND;\r\n    sprite[SPRITE.HAWK_GROUND] = [];\r\n    sprite[SPRITE.HAWK_GROUND][SPRITE.DAY] = IMAGES.HAWK_GROUNDD;\r\n    sprite[SPRITE.HAWK_GROUND][SPRITE.NIGHT] = IMAGES.HAWK_GROUNDN;\r\n    sprite[SPRITE.HAWK_GROUND_ATTACK] = [];\r\n    sprite[SPRITE.HAWK_GROUND_ATTACK][SPRITE.DAY] = IMAGES.HAWK_GROUND_ATTACKD;\r\n    sprite[SPRITE.HAWK_GROUND_ATTACK][SPRITE.NIGHT] = IMAGES.HAWK_GROUND_ATTACKN;\r\n    sprite[SPRITE.HAWK_TAMED] = [];\r\n    sprite[SPRITE.HAWK_TAMED][SPRITE.DAY] = IMAGES.HAWK_TAMEDD;\r\n    sprite[SPRITE.HAWK_TAMED][SPRITE.NIGHT] = IMAGES.HAWK_TAMEDN;\r\n    sprite[SPRITE.HAWK_WING_LEFT] = [];\r\n    sprite[SPRITE.HAWK_WING_LEFT][SPRITE.DAY] = IMAGES.HAWK_WING_LEFTD;\r\n    sprite[SPRITE.HAWK_WING_LEFT][SPRITE.NIGHT] = IMAGES.HAWK_WING_LEFTN;\r\n    sprite[SPRITE.HAWK_WING_RIGHT] = [];\r\n    sprite[SPRITE.HAWK_WING_RIGHT][SPRITE.DAY] = IMAGES.HAWK_WING_RIGHTD;\r\n    sprite[SPRITE.HAWK_WING_RIGHT][SPRITE.NIGHT] = IMAGES.HAWK_WING_RIGHTN;\r\n    sprite[SPRITE.HAWK_WING_LEFT_ATTACK] = [];\r\n    sprite[SPRITE.HAWK_WING_LEFT_ATTACK][SPRITE.DAY] = IMAGES.HAWK_WING_LEFT_ATTACKD;\r\n    sprite[SPRITE.HAWK_WING_LEFT_ATTACK][SPRITE.NIGHT] = IMAGES.HAWK_WING_LEFT_ATTACKN;\r\n    sprite[SPRITE.HAWK_WING_RIGHT_ATTACK] = [];\r\n    sprite[SPRITE.HAWK_WING_RIGHT_ATTACK][SPRITE.DAY] = IMAGES.HAWK_WING_RIGHT_ATTACKD;\r\n    sprite[SPRITE.HAWK_WING_RIGHT_ATTACK][SPRITE.NIGHT] = IMAGES.HAWK_WING_RIGHT_ATTACKN;\r\n    sprite[SPRITE.HAWK_WING_LEFT_TAMED] = [];\r\n    sprite[SPRITE.HAWK_WING_LEFT_TAMED][SPRITE.DAY] = IMAGES.HAWK_WING_LEFT_TAMEDD;\r\n    sprite[SPRITE.HAWK_WING_LEFT_TAMED][SPRITE.NIGHT] = IMAGES.HAWK_WING_LEFT_TAMEDN;\r\n    sprite[SPRITE.HAWK_WING_RIGHT_TAMED] = [];\r\n    sprite[SPRITE.HAWK_WING_RIGHT_TAMED][SPRITE.DAY] = IMAGES.HAWK_WING_RIGHT_TAMEDD;\r\n    sprite[SPRITE.HAWK_WING_RIGHT_TAMED][SPRITE.NIGHT] = IMAGES.HAWK_WING_RIGHT_TAMEDN;\r\n    sprite[SPRITE.HURT_HAWK] = IMAGES.HURT_HAWK;\r\n    sprite[SPRITE.HURT_HAWK_WING_LEFT] = IMAGES.HURT_HAWK_WING_LEFT;\r\n    sprite[SPRITE.HURT_HAWK_WING_RIGHT] = IMAGES.HURT_HAWK_WING_RIGHT;\r\n    sprite[SPRITE.VULTURE_ATTACK] = [];\r\n    sprite[SPRITE.VULTURE_ATTACK][SPRITE.DAY] = IMAGES.VULTURE_ATTACKD;\r\n    sprite[SPRITE.VULTURE_ATTACK][SPRITE.NIGHT] = IMAGES.VULTURE_ATTACKN;\r\n    sprite[SPRITE.VULTURE] = [];\r\n    sprite[SPRITE.VULTURE][SPRITE.DAY] = IMAGES.VULTURED;\r\n    sprite[SPRITE.VULTURE][SPRITE.NIGHT] = IMAGES.VULTUREN;\r\n    sprite[SPRITE.HURT_VULTURE_GROUND] = IMAGES.HURT_VULTURE_GROUND;\r\n    sprite[SPRITE.VULTURE_GROUND] = [];\r\n    sprite[SPRITE.VULTURE_GROUND][SPRITE.DAY] = IMAGES.VULTURE_GROUNDD;\r\n    sprite[SPRITE.VULTURE_GROUND][SPRITE.NIGHT] = IMAGES.VULTURE_GROUNDN;\r\n    sprite[SPRITE.VULTURE_GROUND_ATTACK] = [];\r\n    sprite[SPRITE.VULTURE_GROUND_ATTACK][SPRITE.DAY] = IMAGES.VULTURE_GROUND_ATTACKD;\r\n    sprite[SPRITE.VULTURE_GROUND_ATTACK][SPRITE.NIGHT] = IMAGES.VULTURE_GROUND_ATTACKN;\r\n    sprite[SPRITE.VULTURE_TAMED] = [];\r\n    sprite[SPRITE.VULTURE_TAMED][SPRITE.DAY] = IMAGES.VULTURE_TAMEDD;\r\n    sprite[SPRITE.VULTURE_TAMED][SPRITE.NIGHT] = IMAGES.VULTURE_TAMEDN;\r\n    sprite[SPRITE.VULTURE_WING_LEFT] = [];\r\n    sprite[SPRITE.VULTURE_WING_LEFT][SPRITE.DAY] = IMAGES.VULTURE_WING_LEFTD;\r\n    sprite[SPRITE.VULTURE_WING_LEFT][SPRITE.NIGHT] = IMAGES.VULTURE_WING_LEFTN;\r\n    sprite[SPRITE.VULTURE_WING_RIGHT] = [];\r\n    sprite[SPRITE.VULTURE_WING_RIGHT][SPRITE.DAY] = IMAGES.VULTURE_WING_RIGHTD;\r\n    sprite[SPRITE.VULTURE_WING_RIGHT][SPRITE.NIGHT] = IMAGES.VULTURE_WING_RIGHTN;\r\n    sprite[SPRITE.VULTURE_WING_LEFT_ATTACK] = [];\r\n    sprite[SPRITE.VULTURE_WING_LEFT_ATTACK][SPRITE.DAY] = IMAGES.VULTURE_WING_LEFT_ATTACKD;\r\n    sprite[SPRITE.VULTURE_WING_LEFT_ATTACK][SPRITE.NIGHT] = IMAGES.VULTURE_WING_LEFT_ATTACKN;\r\n    sprite[SPRITE.VULTURE_WING_RIGHT_ATTACK] = [];\r\n    sprite[SPRITE.VULTURE_WING_RIGHT_ATTACK][SPRITE.DAY] = IMAGES.VULTURE_WING_RIGHT_ATTACKD;\r\n    sprite[SPRITE.VULTURE_WING_RIGHT_ATTACK][SPRITE.NIGHT] = IMAGES.VULTURE_WING_RIGHT_ATTACKN;\r\n    sprite[SPRITE.VULTURE_WING_LEFT_TAMED] = [];\r\n    sprite[SPRITE.VULTURE_WING_LEFT_TAMED][SPRITE.DAY] = IMAGES.VULTURE_WING_LEFT_TAMEDD;\r\n    sprite[SPRITE.VULTURE_WING_LEFT_TAMED][SPRITE.NIGHT] = IMAGES.VULTURE_WING_LEFT_TAMEDN;\r\n    sprite[SPRITE.VULTURE_WING_RIGHT_TAMED] = [];\r\n    sprite[SPRITE.VULTURE_WING_RIGHT_TAMED][SPRITE.DAY] = IMAGES.VULTURE_WING_RIGHT_TAMEDD;\r\n    sprite[SPRITE.VULTURE_WING_RIGHT_TAMED][SPRITE.NIGHT] = IMAGES.VULTURE_WING_RIGHT_TAMEDN;\r\n    sprite[SPRITE.HURT_VULTURE] = IMAGES.HURT_VULTURE;\r\n    sprite[SPRITE.HURT_VULTURE_WING_LEFT] = IMAGES.HURT_VULTURE_WING_LEFT;\r\n    sprite[SPRITE.HURT_VULTURE_WING_RIGHT] = IMAGES.HURT_VULTURE_WING_RIGHT;\r\n    sprite[SPRITE.BOAR] = [];\r\n    sprite[SPRITE.BOAR][SPRITE.DAY] = IMAGES.BOARD;\r\n    sprite[SPRITE.BOAR][SPRITE.NIGHT] = IMAGES.BOARN;\r\n    sprite[SPRITE.BOAR_TAMED] = [];\r\n    sprite[SPRITE.BOAR_TAMED][SPRITE.DAY] = IMAGES.BOAR_TAMEDD;\r\n    sprite[SPRITE.BOAR_TAMED][SPRITE.NIGHT] = IMAGES.BOAR_TAMEDN;\r\n    sprite[SPRITE.BOAR_ATTACK] = [];\r\n    sprite[SPRITE.BOAR_ATTACK][SPRITE.DAY] = IMAGES.BOAR_ANGRYD;\r\n    sprite[SPRITE.BOAR_ATTACK][SPRITE.NIGHT] = IMAGES.BOAR_ANGRYN;\r\n    sprite[SPRITE.BOAR_STEP] = [];\r\n    sprite[SPRITE.BOAR_STEP][SPRITE.DAY] = IMAGES.BOAR_STEP;\r\n    sprite[SPRITE.BOAR_STEP][SPRITE.NIGHT] = IMAGES.BOAR_STEP;\r\n    sprite[SPRITE.CRAB_STEP] = [];\r\n    sprite[SPRITE.CRAB_STEP][SPRITE.DAY] = IMAGES.CRAB_STEP;\r\n    sprite[SPRITE.CRAB_STEP][SPRITE.NIGHT] = IMAGES.CRAB_STEP;\r\n    sprite[SPRITE.BABY_MAMMOTH_STEP] = [];\r\n    sprite[SPRITE.BABY_MAMMOTH_STEP][SPRITE.DAY] = IMAGES.BABY_MAMMOTH_STEP;\r\n    sprite[SPRITE.BABY_MAMMOTH_STEP][SPRITE.NIGHT] = IMAGES.BABY_MAMMOTH_STEP;\r\n    sprite[SPRITE.HURT_BOAR] = IMAGES.HURT_BOAR;\r\n    sprite[SPRITE.SADDLE] = [];\r\n    sprite[SPRITE.SADDLE][SPRITE.DAY] = IMAGES.SADDLED;\r\n    sprite[SPRITE.SADDLE][SPRITE.NIGHT] = IMAGES.SADDLEN;\r\n    sprite[SPRITE.WAND1] = [];\r\n    sprite[SPRITE.WAND1][SPRITE.DAY] = IMAGES.WAND1D;\r\n    sprite[SPRITE.WAND1][SPRITE.NIGHT] = IMAGES.WAND1N;\r\n    sprite[SPRITE.SPELL] = [];\r\n    sprite[SPRITE.SPELL][SPRITE.DAY] = [IMAGES.LIGHT_WAND0D, IMAGES.LIGHT_WAND1D, IMAGES.WOOD_ARROWD, IMAGES.STONE_ARROWD, IMAGES.GOLD_ARROWD, IMAGES.DIAMOND_ARROWD, IMAGES.AMETHYST_ARROWD, IMAGES.REIDITE_ARROWD, IMAGES.DRAGON_ARROWD];\r\n    sprite[SPRITE.SPELL][SPRITE.NIGHT] = [IMAGES.LIGHT_WAND0N, IMAGES.LIGHT_WAND1N, IMAGES.WOOD_ARROWN, IMAGES.STONE_ARROWN, IMAGES.GOLD_ARROWN, IMAGES.DIAMOND_ARROWN, IMAGES.AMETHYST_ARROWN, IMAGES.REIDITE_ARROWD, IMAGES.DRAGON_ARROWN];\r\n    sprite[SPRITE.WAND2] = [];\r\n    sprite[SPRITE.WAND2][SPRITE.DAY] = IMAGES.WAND2D;\r\n    sprite[SPRITE.WAND2][SPRITE.NIGHT] = IMAGES.WAND2N;\r\n    sprite[SPRITE.BOAT_WAVE] = [];\r\n    sprite[SPRITE.BOAT_WAVE][SPRITE.DAY] = IMAGES.BOAT_WAVED;\r\n    sprite[SPRITE.BOAT_WAVE][SPRITE.NIGHT] = IMAGES.BOAT_WAVEN;\r\n    sprite[SPRITE.SLED_WAVE] = [];\r\n    sprite[SPRITE.SLED_WAVE][SPRITE.DAY] = IMAGES.SLED_WAVED;\r\n    sprite[SPRITE.SLED_WAVE][SPRITE.NIGHT] = IMAGES.SLED_WAVEN;\r\n    sprite[SPRITE.PIRATE_HAT] = [];\r\n    sprite[SPRITE.PIRATE_HAT][SPRITE.DAY] = IMAGES.PIRATE_HATD;\r\n    sprite[SPRITE.PIRATE_HAT][SPRITE.NIGHT] = IMAGES.PIRATE_HATN;\r\n    sprite[SPRITE.FUR_HAT] = [];\r\n    sprite[SPRITE.FUR_HAT][SPRITE.DAY] = IMAGES.FUR_HATD;\r\n    sprite[SPRITE.FUR_HAT][SPRITE.NIGHT] = IMAGES.FUR_HATN;\r\n    sprite[SPRITE.FLOWER_HAT] = [];\r\n    sprite[SPRITE.FLOWER_HAT][SPRITE.DAY] = IMAGES.FLOWER_HATD;\r\n    sprite[SPRITE.FLOWER_HAT][SPRITE.NIGHT] = IMAGES.FLOWER_HATN;\r\n    sprite[SPRITE.PILOT_HELMET] = [];\r\n    sprite[SPRITE.PILOT_HELMET][SPRITE.DAY] = IMAGES.PILOT_HELMETD;\r\n    sprite[SPRITE.PILOT_HELMET][SPRITE.NIGHT] = IMAGES.PILOT_HELMETN;\r\n    sprite[SPRITE.LAKE_EDGE] = [];\r\n    sprite[SPRITE.LAKE_EDGE][SPRITE.DAY] = [];\r\n    sprite[SPRITE.LAKE_EDGE][SPRITE.NIGHT] = [];\r\n    sprite[SPRITE.LAKE_EDGE][SPRITE.DAY].push(IMAGES.LAKE0D_EDGE);\r\n    sprite[SPRITE.LAKE_EDGE][SPRITE.DAY].push(IMAGES.LAKE1D_EDGE);\r\n    sprite[SPRITE.LAKE_EDGE][SPRITE.DAY].push(IMAGES.LAKE2D_EDGE);\r\n    sprite[SPRITE.LAKE_EDGE][SPRITE.NIGHT].push(IMAGES.LAKE0N_EDGE);\r\n    sprite[SPRITE.LAKE_EDGE][SPRITE.NIGHT].push(IMAGES.LAKE1N_EDGE);\r\n    sprite[SPRITE.LAKE_EDGE][SPRITE.NIGHT].push(IMAGES.LAKE2N_EDGE);\r\n    sprite[SPRITE.LAKE_DEEP] = [];\r\n    sprite[SPRITE.LAKE_DEEP][SPRITE.DAY] = [];\r\n    sprite[SPRITE.LAKE_DEEP][SPRITE.NIGHT] = [];\r\n    sprite[SPRITE.LAKE_DEEP][SPRITE.DAY].push(IMAGES.LAKE0D_DEEP);\r\n    sprite[SPRITE.LAKE_DEEP][SPRITE.DAY].push(IMAGES.LAKE1D_DEEP);\r\n    sprite[SPRITE.LAKE_DEEP][SPRITE.DAY].push(IMAGES.LAKE2D_DEEP);\r\n    sprite[SPRITE.LAKE_DEEP][SPRITE.NIGHT].push(IMAGES.LAKE0N_DEEP);\r\n    sprite[SPRITE.LAKE_DEEP][SPRITE.NIGHT].push(IMAGES.LAKE1N_DEEP);\r\n    sprite[SPRITE.LAKE_DEEP][SPRITE.NIGHT].push(IMAGES.LAKE2N_DEEP);\r\n    sprite[SPRITE.LAKE] = [];\r\n    sprite[SPRITE.LAKE][SPRITE.DAY] = [];\r\n    sprite[SPRITE.LAKE][SPRITE.NIGHT] = [];\r\n    sprite[SPRITE.LAKE][SPRITE.DAY].push(IMAGES.LAKE0D);\r\n    sprite[SPRITE.LAKE][SPRITE.DAY].push(IMAGES.LAKE1D);\r\n    sprite[SPRITE.LAKE][SPRITE.DAY].push(IMAGES.LAKE2D);\r\n    sprite[SPRITE.LAKE][SPRITE.NIGHT].push(IMAGES.LAKE0N);\r\n    sprite[SPRITE.LAKE][SPRITE.NIGHT].push(IMAGES.LAKE1N);\r\n    sprite[SPRITE.LAKE][SPRITE.NIGHT].push(IMAGES.LAKE2N);\r\n    MINIMAP_UTILS.g = [];\r\n    MINIMAP_UTILS.g[0] = [IMAGES.MAPDAY_GOLD1, IMAGES.MAPNIGHT_GOLD1];\r\n    MINIMAP_UTILS.g[1] = MINIMAP_UTILS.g[0];\r\n    MINIMAP_UTILS.g[2] = [IMAGES.MAPDAY_GOLD2, IMAGES.MAPNIGHT_GOLD2];\r\n    MINIMAP_UTILS.m = [];\r\n    MINIMAP_UTILS.m[0] = [IMAGES.MAPDAY_EMERALD1, IMAGES.MAPNIGHT_EMERALD1];\r\n    MINIMAP_UTILS.m[1] = MINIMAP_UTILS.m[0];\r\n    MINIMAP_UTILS.m[2] = [IMAGES.MAPDAY_EMERALD2, IMAGES.MAPNIGHT_EMERALD2];\r\n    MINIMAP_UTILS.la = [];\r\n    MINIMAP_UTILS.la[0] = [IMAGES.MAPDAY_MAGMA, IMAGES.MAPNIGHT_MAGMA];\r\n    MINIMAP_UTILS.la[1] = MINIMAP_UTILS.la[0];\r\n    MINIMAP_UTILS.la[2] = MINIMAP_UTILS.la[0];\r\n    MINIMAP_UTILS.la[3] = MINIMAP_UTILS.la[0];\r\n    MINIMAP_UTILS.la[4] = MINIMAP_UTILS.la[0];\r\n    MINIMAP_UTILS.la[5] = MINIMAP_UTILS.la[0];\r\n    MINIMAP_UTILS.s = [];\r\n    MINIMAP_UTILS.s[0] = [IMAGES.MAPDAY_STONE1, IMAGES.MAPNIGHT_STONE1];\r\n    MINIMAP_UTILS.s[1] = MINIMAP_UTILS.s[0];\r\n    MINIMAP_UTILS.s[2] = [IMAGES.MAPDAY_STONE2, IMAGES.MAPNIGHT_STONE2];\r\n    MINIMAP_UTILS.p = [];\r\n    MINIMAP_UTILS.p[0] = [IMAGES.MAPDAY_BERRY, IMAGES.MAPDAY_BERRY];\r\n    MINIMAP_UTILS.a = [];\r\n    MINIMAP_UTILS.a[0] = [IMAGES.MAPDAY_AMETHYST, IMAGES.MAPNIGHT_AMETHYST];\r\n    MINIMAP_UTILS.a[1] = MINIMAP_UTILS.a[0];\r\n    MINIMAP_UTILS.a[2] = MINIMAP_UTILS.a[0];\r\n    MINIMAP_UTILS.d = [];\r\n    MINIMAP_UTILS.d[0] = [IMAGES.MAPDAY_DIAMOND, IMAGES.MAPNIGHT_DIAMOND];\r\n    MINIMAP_UTILS.d[1] = MINIMAP_UTILS.d[0];\r\n    MINIMAP_UTILS.d[2] = MINIMAP_UTILS.d[0];\r\n    MINIMAP_UTILS.re = [];\r\n    MINIMAP_UTILS.re[0] = [IMAGES.MAPDAY_REIDITE, IMAGES.MAPNIGHT_REIDITE];\r\n    MINIMAP_UTILS.re[1] = MINIMAP_UTILS.re[0];\r\n    MINIMAP_UTILS.re[2] = MINIMAP_UTILS.re[0];\r\n    MINIMAP_UTILS.f = [];\r\n    MINIMAP_UTILS.f[0] = [IMAGES.MAPDAY_FIR_TREE, IMAGES.MAPNIGHT_FIR_TREE];\r\n    MINIMAP_UTILS.f[1] = MINIMAP_UTILS.f[0];\r\n    MINIMAP_UTILS.f[2] = MINIMAP_UTILS.f[0];\r\n    MINIMAP_UTILS.isl = [];\r\n    MINIMAP_UTILS.isl[0] = [IMAGES.MAPDAY_ISLAND, IMAGES.MAPNIGHT_ISLAND];\r\n    MINIMAP_UTILS.isl[1] = MINIMAP_UTILS.isl[0];\r\n    MINIMAP_UTILS.isl[2] = MINIMAP_UTILS.isl[0];\r\n    MINIMAP_UTILS.c = [];\r\n    MINIMAP_UTILS.c[0] = [IMAGES.MAPDAY_CACTUS, IMAGES.MAPNIGHT_CACTUS];\r\n    MINIMAP_UTILS.c[1] = MINIMAP_UTILS.c[0];\r\n    MINIMAP_UTILS.c[2] = MINIMAP_UTILS.c[0];\r\n    MINIMAP_UTILS.wtb = [];\r\n    MINIMAP_UTILS.wtb[0] = [IMAGES.MAPDAY_RIVER, IMAGES.MAPNIGHT_RIVER];\r\n    MINIMAP_UTILS.PIRANHA = [IMAGES.MAPDAY_PIRANHA, IMAGES.MAPNIGHT_PIRANHA];\r\n    MINIMAP_UTILS.KRAKEN = [IMAGES.MAPDAY_KRAKEN, IMAGES.MAPNIGHT_KRAKEN];\r\n    MINIMAP_UTILS.FOX = [IMAGES.MAPDAY_FOX, IMAGES.MAPNIGHT_FOX];\r\n    MINIMAP_UTILS.WOLF = [IMAGES.MAPDAY_WOLF, IMAGES.MAPNIGHT_WOLF];\r\n    MINIMAP_UTILS.SPIDER = [IMAGES.MAPDAY_SPIDER, IMAGES.MAPNIGHT_SPIDER];\r\n    MINIMAP_UTILS.BEAR = [IMAGES.MAPDAY_BEAR, IMAGES.MAPNIGHT_BEAR];\r\n    MINIMAP_UTILS.CAVE = [IMAGES.MAPDAY_CAVE, IMAGES.MAPNIGHT_CAVE];\r\n    MINIMAP_UTILS.MAP = [IMAGES.BIGDAY, IMAGES.BIGNIGHT];\r\n    MINIMAP_UTILS.FOREST = [IMAGES.MAPDAY_FOREST, IMAGES.MAPNIGHT_FOREST];\r\n    MINIMAP_UTILS.WINTER = [IMAGES.MAPDAY_WINTER, IMAGES.MAPNIGHT_WINTER];\r\n    MINIMAP_UTILS.DESERT = [IMAGES.MAPDAY_DESERT, IMAGES.MAPNIGHT_DESERT];\r\n    MINIMAP_UTILS.LAVA = [IMAGES.MAPDAY_LAVA, IMAGES.MAPNIGHT_LAVA];\r\n    for (var _key in MINIMAP_UTILS) {\r\n        var _utils = MINIMAP_UTILS[_key];\r\n        for (var i = 0; i < _utils.length; i++) {\r\n            var _subutils = _utils[i];\r\n            if (_subutils.tryLoad !== undefined) _subutils.tryLoad(); else if (_subutils.length > 0) {\r\n                for (var j = 0; j < _subutils.length; j++) {\r\n                    if (_subutils[j].tryLoad !== undefined) _subutils[j].tryLoad();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    console.log(\"Load images\", Date.now() - TIMEDEBUG);\r\n}\r\n;\r\n;\r\nfunction create_images() {\r\n    var scale = 1;\r\n    var TIMEDEBUG = (new Date).getTime();\r\n    _load_images();\r\n    render_inventory();\r\n    sprite[SPRITE.BUBBLES] = [];\r\n    sprite[SPRITE.BUBBLES][SPRITE.DAY] = [];\r\n    sprite[SPRITE.BUBBLES][SPRITE.NIGHT] = [];\r\n    for (var i = 0; i < SPRITE.BUBBLES_SIZES; i++) {\r\n        sprite[SPRITE.BUBBLES][SPRITE.DAY].push(CTI(create_flake(scale, 4 + i, \"#59B8CE\")));\r\n        sprite[SPRITE.BUBBLES][SPRITE.NIGHT].push(CTI(create_flake(scale, 4 + i, \"#90DDD9\")));\r\n    }\r\n    sprite[SPRITE.FLAKES] = [];\r\n    sprite[SPRITE.FLAKES][SPRITE.DAY] = [];\r\n    sprite[SPRITE.FLAKES][SPRITE.NIGHT] = [];\r\n    for (var i = 0; i < SPRITE.FLAKES_SIZES; i++) {\r\n        sprite[SPRITE.FLAKES][SPRITE.DAY].push(CTI(create_flake(scale, 4 + i, \"#fff\")));\r\n        sprite[SPRITE.FLAKES][SPRITE.NIGHT].push(CTI(create_flake(scale, 4 + i, \"#fff\")));\r\n    }\r\n    sprite[SPRITE.DESERT] = [];\r\n    sprite[SPRITE.DESERT][SPRITE.DAY] = [];\r\n    sprite[SPRITE.DESERT][SPRITE.NIGHT] = [];\r\n    for (var i = 0; i < SPRITE.FLAKES_SIZES; i++) {\r\n        sprite[SPRITE.DESERT][SPRITE.DAY].push(CTI(create_flake(scale, 6 + i, \"#DDCD8A\")));\r\n        sprite[SPRITE.DESERT][SPRITE.NIGHT].push(CTI(create_flake(scale, 6 + i, \"#155E57\")));\r\n    }\r\n    sprite[SPRITE.ASHES] = [];\r\n    sprite[SPRITE.ASHES][SPRITE.DAY] = [];\r\n    sprite[SPRITE.ASHES][SPRITE.NIGHT] = [];\r\n    for (var i = 0; i < SPRITE.ASHES_SIZES; i++) {\r\n        sprite[SPRITE.ASHES][SPRITE.DAY].push(CTI(create_flake(scale, 4 + i, \"#353326\")));\r\n        sprite[SPRITE.ASHES][SPRITE.NIGHT].push(CTI(create_flake(scale, 4 + i, \"#1D2526\")));\r\n    }\r\n    sprite[SPRITE.GARLAND] = [];\r\n    sprite[SPRITE.GARLAND][SPRITE.DAY] = CTI(create_garland(scale * 1.5, true, [\"#ee71a9\"]));\r\n    sprite[SPRITE.GARLAND][SPRITE.NIGHT] = CTI(create_garland(scale * 1.5, true, [\"#ee71a9\"]));\r\n    sprite[SPRITE.GARLANDS] = [sprite[SPRITE.GARLAND]];\r\n    sprite[SPRITE.GARLANDS][1] = [];\r\n    sprite[SPRITE.GARLANDS][2] = [];\r\n    sprite[SPRITE.GARLANDS][3] = [];\r\n    sprite[SPRITE.GARLANDS][4] = [];\r\n    sprite[SPRITE.GARLANDS][1][SPRITE.DAY] = CTI(create_garland(scale * 1.5, true, [\"#e2d63b\"]));\r\n    sprite[SPRITE.GARLANDS][1][SPRITE.NIGHT] = CTI(create_garland(scale * 1.5, true, [\"#e2d63b\"]));\r\n    sprite[SPRITE.GARLANDS][2][SPRITE.DAY] = CTI(create_garland(scale * 1.5, true, [\"#309cbd\"]));\r\n    sprite[SPRITE.GARLANDS][2][SPRITE.NIGHT] = CTI(create_garland(scale * 1.5, true, [\"#309cbd\"]));\r\n    sprite[SPRITE.GARLANDS][3][SPRITE.DAY] = CTI(create_garland(scale * 1.5, true, [\"#cd232d\"]));\r\n    sprite[SPRITE.GARLANDS][3][SPRITE.NIGHT] = CTI(create_garland(scale * 1.5, true, [\"#cd232d\"]));\r\n    sprite[SPRITE.GARLANDS][4][SPRITE.DAY] = CTI(create_garland(scale * 1.5, true, [\"#42b672\"]));\r\n    sprite[SPRITE.GARLANDS][4][SPRITE.NIGHT] = CTI(create_garland(scale * 1.5, true, [\"#42b672\"]));\r\n    var cti = Utils.gup(\"cti\", window.location.href);\r\n    if (cti) document.getElementById(\"version\").innerHTML += \"[CTI]\"; else CTI = function (a) {\r\n        a.loaded = 1;\r\n        return a;\r\n    };\r\n    sprite[SPRITE.MARKET_BGD] = CTI(create_background_market());\r\n    sprite[SPRITE.STONES] = [];\r\n    sprite[SPRITE.STONES][SPRITE.DAY] = [];\r\n    sprite[SPRITE.STONES][SPRITE.NIGHT] = [];\r\n    sprite[SPRITE.STONES][SPRITE.DAY].push(CTI(create_stone(scale * 1.1, false, [\"#0a2d18\", \"#c3d1cb\", \"#e4efe8\"])));\r\n    sprite[SPRITE.STONES][SPRITE.DAY].push(CTI(create_stone(scale * 0.9, false, [\"#0a2d18\", \"#c3d1cb\", \"#e4efe8\"])));\r\n    sprite[SPRITE.STONES][SPRITE.DAY].push(CTI(create_stone(scale * 0.6, false, [\"#0a2d18\", \"#c3d1cb\", \"#e4efe8\"])));\r\n    sprite[SPRITE.STONES][SPRITE.NIGHT].push(CTI(create_stone(scale * 1.1, false, [\"#0a2728\", \"#3c8e88\", \"#40a39b\"])));\r\n    sprite[SPRITE.STONES][SPRITE.NIGHT].push(CTI(create_stone(scale * 0.9, false, [\"#0a2728\", \"#3c8e88\", \"#40a39b\"])));\r\n    sprite[SPRITE.STONES][SPRITE.NIGHT].push(CTI(create_stone(scale * 0.6, false, [\"#0a2728\", \"#3c8e88\", \"#40a39b\"])));\r\n    sprite[SPRITE.GOLD] = [];\r\n    sprite[SPRITE.GOLD][SPRITE.DAY] = [];\r\n    sprite[SPRITE.GOLD][SPRITE.NIGHT] = [];\r\n    sprite[SPRITE.GOLD][SPRITE.DAY].push(CTI(create_gold(scale * 1.5, false, [\"#2b280a\", \"#ddcf8a\", \"#f4efc6\"])));\r\n    sprite[SPRITE.GOLD][SPRITE.DAY].push(CTI(create_gold(scale * 1.3, false, [\"#2b280a\", \"#ddcf8a\", \"#f4efc6\"])));\r\n    sprite[SPRITE.GOLD][SPRITE.DAY].push(CTI(create_gold(scale * 1.1, false, [\"#2b280a\", \"#ddcf8a\", \"#f4efc6\"])));\r\n    sprite[SPRITE.GOLD][SPRITE.NIGHT].push(CTI(create_gold(scale * 1.5, false, [\"#030d14\", \"#1b4444\", \"#16605a\"])));\r\n    sprite[SPRITE.GOLD][SPRITE.NIGHT].push(CTI(create_gold(scale * 1.3, false, [\"#030d14\", \"#1b4444\", \"#16605a\"])));\r\n    sprite[SPRITE.GOLD][SPRITE.NIGHT].push(CTI(create_gold(scale * 1.1, false, [\"#030d14\", \"#1b4444\", \"#16605a\"])));\r\n    sprite[SPRITE.DIAMOND] = [];\r\n    sprite[SPRITE.DIAMOND][SPRITE.DAY] = [];\r\n    sprite[SPRITE.DIAMOND][SPRITE.NIGHT] = [];\r\n    sprite[SPRITE.DIAMOND][SPRITE.DAY].push(CTI(create_diamond(scale * 1.1, false, [\"#232828\", \"#3fc9c9\", \"#74ede6\"])));\r\n    sprite[SPRITE.DIAMOND][SPRITE.DAY].push(CTI(create_diamond(scale * 0.9, false, [\"#232828\", \"#3fc9c9\", \"#74ede6\"])));\r\n    sprite[SPRITE.DIAMOND][SPRITE.DAY].push(CTI(create_diamond(scale * 0.7, false, [\"#232828\", \"#3fc9c9\", \"#74ede6\"])));\r\n    sprite[SPRITE.DIAMOND][SPRITE.NIGHT].push(CTI(create_diamond(scale * 1.1, false, [\"#030d14\", \"#2b9390\", \"#57bcb5\"])));\r\n    sprite[SPRITE.DIAMOND][SPRITE.NIGHT].push(CTI(create_diamond(scale * 0.9, false, [\"#030d14\", \"#2b9390\", \"#57bcb5\"])));\r\n    sprite[SPRITE.DIAMOND][SPRITE.NIGHT].push(CTI(create_diamond(scale * 0.7, false, [\"#030d14\", \"#2b9390\", \"#57bcb5\"])));\r\n    sprite[SPRITE.ALOE_VERA] = [];\r\n    sprite[SPRITE.ALOE_VERA][SPRITE.DAY] = IMAGES.ALOE_VERAD;\r\n    sprite[SPRITE.ALOE_VERA][SPRITE.NIGHT] = IMAGES.ALOE_VERAN;\r\n    sprite[SPRITE.HAND_SHADOW] = [];\r\n    sprite[SPRITE.HAND_SHADOW][SPRITE.DAY] = CTI(create_hand_shadow(scale * 0.6, [\"#0d1b1c\"]));\r\n    sprite[SPRITE.HAND_SHADOW][SPRITE.NIGHT] = CTI(create_hand_shadow(scale * 0.6, [\"#030d14\"]));\r\n    sprite[SPRITE.GLOVES_HOOD] = [];\r\n    sprite[SPRITE.GLOVES_HOOD][SPRITE.DAY] = CTI(create_hand(scale * 0.6, [\"#2a2938\", \"#242330\"]));\r\n    sprite[SPRITE.GLOVES_HOOD][SPRITE.NIGHT] = CTI(create_hand(scale * 0.6, [\"#1b1e30\", \"#161921\"]));\r\n    sprite[SPRITE.ZOMBIE_BODY] = [];\r\n    sprite[SPRITE.ZOMBIE_BODY][SPRITE.DAY] = CTI(create_zombie_boss(scale * 0.6, true, [\"#0d1b1c\", \"#759e6e\", \"#55604b\", \"#7d7252\", \"#575043\"]));\r\n    sprite[SPRITE.ZOMBIE_BODY][SPRITE.NIGHT] = CTI(create_zombie_boss(scale * 0.6, true, [\"#030d14\", \"#11635e\", \"#02373e\", \"#0b524d\", \"#07423f\"]));\r\n    sprite[SPRITE.ZOMBIE_HEAD] = [];\r\n    sprite[SPRITE.ZOMBIE_HEAD][SPRITE.DAY] = CTI(create_zombie_head(scale * 0.6, true, [\"#0d1b1c\", \"#759e6e\", \"#55604b\", \"#f9ccd4\", \"#891a1e\", \"#da232e\", \"#a52026\", \"#a02d28\", \"#721819\", \"#FFFFFF\"]));\r\n    sprite[SPRITE.ZOMBIE_HEAD][SPRITE.NIGHT] = CTI(create_zombie_head(scale * 0.6, true, [\"#030d14\", \"#11635e\", \"#02373e\", \"#167771\", \"#0c5752\", \"#401d49\", \"#2e1336\", \"#261336\", \"#23163c\", \"#FFFFFF\"]));\r\n    sprite[SPRITE.ZOMBIE_HAND] = [];\r\n    sprite[SPRITE.ZOMBIE_HAND][SPRITE.DAY] = CTI(create_zombie_hand(scale * 0.4, [\"#0d1b1c\", \"#759e6e\", \"#55604b\"]));\r\n    sprite[SPRITE.ZOMBIE_HAND][SPRITE.NIGHT] = CTI(create_zombie_hand(scale * 0.4, [\"#030d14\", \"#11635e\", \"#02373e\"]));\r\n    sprite[SPRITE.ZOMBIE_HURT] = CTI(create_zombie_hurt(scale * 0.6, [\"#BB0000\"]));\r\n    sprite[SPRITE.ZOMBIE_HUNGER] = CTI(create_zombie_hurt(scale * 0.6, [\"#DBE71C\"]));\r\n    sprite[SPRITE.ZOMBIE_HEAL] = CTI(create_zombie_hurt(scale * 0.6, [\"#00BB00\"]));\r\n    sprite[SPRITE.TREE] = [];\r\n    sprite[SPRITE.TREE][SPRITE.DAY] = [];\r\n    sprite[SPRITE.TREE][SPRITE.NIGHT] = [];\r\n    sprite[SPRITE.TREE][SPRITE.DAY].push(create_apricot_tree(scale * 1.1, [\"#242503\", \"#8e7c0c\", \"#6d5903\", \"#9e8320\", \"#f0f4f0\", \"#FFFFFF\"], false, 0));\r\n    sprite[SPRITE.TREE][SPRITE.DAY].push(create_apricot_tree(scale * 1.1, [\"#242503\", \"#8e7c0c\", \"#6d5903\", \"#9e8320\", \"#f0f4f0\", \"#FFFFFF\"], true, 0));\r\n    sprite[SPRITE.TREE][SPRITE.DAY].push(create_apricot_tree(scale * 0.9, [\"#242503\", \"#898e0c\", \"#757303\", \"#9e9b20\", \"#f0f4f0\", \"#FFFFFF\"], false, 0));\r\n    sprite[SPRITE.TREE][SPRITE.DAY].push(create_apricot_tree(scale * 0.9, [\"#242503\", \"#963400\", \"#7c2200\", \"#a83204\", \"#f0f4f0\", \"#FFFFFF\"], true, 0));\r\n    sprite[SPRITE.TREE][SPRITE.DAY].push(create_apricot_tree(scale * 0.7, [\"#242503\", \"#6d5a09\", \"#77591a\", \"#7b5a1f\", \"#f0f4f0\", \"#FFFFFF\"], false, 0));\r\n    sprite[SPRITE.TREE][SPRITE.DAY].push(create_apricot_tree(scale * 0.7, [\"#242503\", \"#703700\", \"#813009\", \"#813009\", \"#f0f4f0\", \"#FFFFFF\"], true, 0));\r\n    sprite[SPRITE.TREE][SPRITE.NIGHT].push(create_apricot_tree(scale * 1.1, [\"#030d14\", \"#12493d\", \"#0e3831\", \"#155247\", \"#f0f4f0\", \"#16695f\"], false, 0));\r\n    sprite[SPRITE.TREE][SPRITE.NIGHT].push(create_apricot_tree(scale * 1.1, [\"#030d14\", \"#12493d\", \"#0e3831\", \"#155247\", \"#16695f\"], true, 0));\r\n    sprite[SPRITE.TREE][SPRITE.NIGHT].push(create_apricot_tree(scale * 0.9, [\"#030d14\", \"#0b3629\", \"#144437\", \"#174235\", \"#16695f\"], false, 0));\r\n    sprite[SPRITE.TREE][SPRITE.NIGHT].push(create_apricot_tree(scale * 0.9, [\"#030d14\", \"#0d2522\", \"#0c2821\", \"#0d2a28\", \"#16695f\"], true, 0));\r\n    sprite[SPRITE.TREE][SPRITE.NIGHT].push(create_apricot_tree(scale * 0.7, [\"#030d14\", \"#082b1f\", \"#073328\", \"#073327\", \"#16695f\"], false, 0));\r\n    sprite[SPRITE.TREE][SPRITE.NIGHT].push(create_apricot_tree(scale * 0.7, [\"#030d14\", \"#0c2823\", \"#0b2b23\", \"#0c2d24\", \"#16695f\"], true, 0));\r\n    sprite[SPRITE.TREE_BRANCH] = [];\r\n    sprite[SPRITE.TREE_BRANCH][SPRITE.DAY] = [];\r\n    sprite[SPRITE.TREE_BRANCH][SPRITE.NIGHT] = [];\r\n    sprite[SPRITE.TREE_BRANCH][SPRITE.DAY].push(CTI(create_apricot_forest(create_tree_branch(scale * 1.1, [\"#242503\", \"#4d2d14\", \"#432516\", \"#756608\", \"#5b4a02\", \"#8b731b\"], false), sprite[SPRITE.TREE][SPRITE.DAY][0])));\r\n    sprite[SPRITE.TREE_BRANCH][SPRITE.DAY].push(CTI(create_apricot_forest(create_tree_branch(scale * 1.1, [\"#242503\", \"#4d2d14\", \"#432516\", \"#756608\", \"#5b4a02\", \"#8b731b\"], true), sprite[SPRITE.TREE][SPRITE.DAY][1])));\r\n    sprite[SPRITE.TREE_BRANCH][SPRITE.NIGHT].push(CTI(create_apricot_forest(create_tree_branch(scale * 1.1, [\"#030d14\", \"#031619\", \"#041c21\", \"#0e3b31\", \"#0b2e28\", \"#10443a\"], false), sprite[SPRITE.TREE][SPRITE.NIGHT][0])));\r\n    sprite[SPRITE.TREE_BRANCH][SPRITE.NIGHT].push(CTI(create_apricot_forest(create_tree_branch(scale * 1.1, [\"#030d14\", \"#031619\", \"#041c21\", \"#0e3b31\", \"#0b2e28\", \"#10443a\"], true), sprite[SPRITE.TREE][SPRITE.NIGHT][1])));\r\n    sprite[SPRITE.TREE_BRANCH][SPRITE.DAY].push(CTI(create_apricot_forest(create_tree_branch(scale * 0.9, [\"#242503\", \"#4d2d14\", \"#432516\", \"#6d6c09\", \"#686609\", \"#777310\"], false), sprite[SPRITE.TREE][SPRITE.DAY][2])));\r\n    sprite[SPRITE.TREE_BRANCH][SPRITE.DAY].push(CTI(create_apricot_forest(create_tree_branch(scale * 0.9, [\"#242503\", \"#4d2d14\", \"#432516\", \"#6d6c09\", \"#686609\", \"#777310\"], true), sprite[SPRITE.TREE][SPRITE.DAY][2])));\r\n    sprite[SPRITE.TREE_BRANCH][SPRITE.NIGHT].push(CTI(create_apricot_forest(create_tree_branch(scale * 0.9, [\"#030d14\", \"#031619\", \"#041c21\", \"#0d2522\", \"#0c2821\", \"#0d2a28\"], false), sprite[SPRITE.TREE][SPRITE.NIGHT][2])));\r\n    sprite[SPRITE.TREE_BRANCH][SPRITE.NIGHT].push(CTI(create_apricot_forest(create_tree_branch(scale * 0.9, [\"#030d14\", \"#031619\", \"#041c21\", \"#0c2823\", \"#0b2b23\", \"#0c2d24\"], true), sprite[SPRITE.TREE][SPRITE.NIGHT][3])));\r\n    sprite[SPRITE.TREE][SPRITE.DAY][5] = CTI(sprite[SPRITE.TREE][SPRITE.DAY][5]);\r\n    sprite[SPRITE.TREE][SPRITE.DAY][4] = CTI(sprite[SPRITE.TREE][SPRITE.DAY][4]);\r\n    sprite[SPRITE.TREE][SPRITE.DAY][3] = CTI(sprite[SPRITE.TREE][SPRITE.DAY][3]);\r\n    sprite[SPRITE.TREE][SPRITE.DAY][2] = CTI(sprite[SPRITE.TREE][SPRITE.DAY][2]);\r\n    sprite[SPRITE.TREE][SPRITE.DAY][1] = CTI(sprite[SPRITE.TREE][SPRITE.DAY][1]);\r\n    sprite[SPRITE.TREE][SPRITE.DAY][0] = CTI(sprite[SPRITE.TREE][SPRITE.DAY][0]);\r\n    sprite[SPRITE.TREE][SPRITE.NIGHT][5] = CTI(sprite[SPRITE.TREE][SPRITE.NIGHT][5]);\r\n    sprite[SPRITE.TREE][SPRITE.NIGHT][4] = CTI(sprite[SPRITE.TREE][SPRITE.NIGHT][4]);\r\n    sprite[SPRITE.TREE][SPRITE.NIGHT][3] = CTI(sprite[SPRITE.TREE][SPRITE.NIGHT][3]);\r\n    sprite[SPRITE.TREE][SPRITE.NIGHT][2] = CTI(sprite[SPRITE.TREE][SPRITE.NIGHT][2]);\r\n    sprite[SPRITE.TREE][SPRITE.NIGHT][1] = CTI(sprite[SPRITE.TREE][SPRITE.NIGHT][1]);\r\n    sprite[SPRITE.TREE][SPRITE.NIGHT][0] = CTI(sprite[SPRITE.TREE][SPRITE.NIGHT][0]);\r\n    sprite[SPRITE.PICK_WOOD] = [];\r\n    sprite[SPRITE.PICK_WOOD][SPRITE.DAY] = CTI(create_rotated_img(4, create_pickaxe(scale * 0.75, true, [\"#0d1b1c\", \"#000000\", \"#0d1b1c\", \"#4d2d14\", \"#432516\", \"#4d2d14\", \"#432516\"])));\r\n    sprite[SPRITE.PICK_WOOD][SPRITE.NIGHT] = CTI(create_rotated_img(4, create_pickaxe(scale * 0.75, true, [\"#030d14\", \"#000000\", \"#030d14\", \"#0d2e33\", \"#0b2326\", \"#0d2e33\", \"#0b2326\"])));\r\n    sprite[SPRITE.PICK] = [];\r\n    sprite[SPRITE.PICK][SPRITE.DAY] = CTI(create_rotated_img(4, create_pickaxe(scale * 0.75, true, [\"#0d1b1c\", \"#000000\", \"#0d1b1c\", \"#4d2d14\", \"#432516\", \"#939393\", \"#5f6061\"])));\r\n    sprite[SPRITE.PICK][SPRITE.NIGHT] = CTI(create_rotated_img(4, create_pickaxe(scale * 0.75, true, [\"#030d14\", \"#000000\", \"#030d14\", \"#0d2e33\", \"#0b2326\", \"#485e66\", \"#1f343f\"])));\r\n    sprite[SPRITE.PICK_GOLD] = [];\r\n    sprite[SPRITE.PICK_GOLD][SPRITE.DAY] = CTI(create_rotated_img(4, create_pickaxe(scale * 0.75, true, [\"#0d1b1c\", \"#000000\", \"#0d1b1c\", \"#493e26\", \"#382e19\", \"#c4bc51\", \"#b29c32\"])));\r\n    sprite[SPRITE.PICK_GOLD][SPRITE.NIGHT] = CTI(create_rotated_img(4, create_pickaxe(scale * 0.75, true, [\"#030d14\", \"#000000\", \"#030d14\", \"#263947\", \"#263947\", \"#43aa82\", \"#29997c\"])));\r\n    sprite[SPRITE.PICK_DIAMOND] = [];\r\n    sprite[SPRITE.PICK_DIAMOND][SPRITE.DAY] = CTI(create_rotated_img(4, create_pickaxe(scale * 0.75, true, [\"#0d1b1c\", \"#000000\", \"#0d1b1c\", \"#262114\", \"#211108\", \"#63c9d6\", \"#29aaa1\"])));\r\n    sprite[SPRITE.PICK_DIAMOND][SPRITE.NIGHT] = CTI(create_rotated_img(4, create_pickaxe(scale * 0.75, true, [\"#030d14\", \"#000000\", \"#030d14\", \"#111316\", \"#0a0b0c\", \"#73dde5\", \"#3dc4c0\"])));\r\n    sprite[SPRITE.PICK_AMETHYST] = [];\r\n    sprite[SPRITE.PICK_AMETHYST][SPRITE.DAY] = CTI(create_rotated_img(4, create_pickaxe(scale * 0.75, true, [\"#0d1b1c\", \"#000000\", \"#0d1b1c\", \"#262114\", \"#211108\", \"#b864d6\", \"#8c29aa\"])));\r\n    sprite[SPRITE.PICK_AMETHYST][SPRITE.NIGHT] = CTI(create_rotated_img(4, create_pickaxe(scale * 0.75, true, [\"#030d14\", \"#000000\", \"#030d14\", \"#111316\", \"#0a0b0c\", \"#8359d3\", \"#764eb5\"])));\r\n    sprite[SPRITE.PIRATE_SWORD] = [];\r\n    sprite[SPRITE.PIRATE_SWORD][SPRITE.DAY] = CTI(create_rotated_img(3, create_pirate_sword(scale * 0.17, true, [\"#0d1b1c\", \"#4a3a22\", \"#362818\", \"#c7c7c7\", \"#909090\", \"#eceaea\", \"#bbbbbb\", \"#d6d1d1\"])));\r\n    sprite[SPRITE.PIRATE_SWORD][SPRITE.NIGHT] = CTI(create_rotated_img(3, create_pirate_sword(scale * 0.17, true, [\"#0d1b1c\", \"#0d2e33\", \"#0b2326\", \"#59737d\", \"#364f59\", \"#618395\", \"#4d768c\", \"#54859f\"])));\r\n    sprite[SPRITE.SUGAR_CAN] = [];\r\n    sprite[SPRITE.SUGAR_CAN][SPRITE.DAY] = CTI(create_rotated_img(3, create_sugar_can(scale * 0.32, true, [\"#0d1b1c\", \"#ffffff\", \"#5f6061\", \"#eb2933\", \"#57b74e\", \"#42a54d\", \"#ac222a\", \"#e6636a\"])));\r\n    sprite[SPRITE.SUGAR_CAN][SPRITE.NIGHT] = CTI(create_rotated_img(3, create_sugar_can(scale * 0.42, true, [\"#0d1b1c\", \"#485e66\", \"#1f343f\", \"#0d2e33\", \"#0b2326\"])));\r\n    sprite[SPRITE.SWORD_WOOD] = [];\r\n    sprite[SPRITE.SWORD_WOOD][SPRITE.DAY] = CTI(create_rotated_img(3, create_sword_wood(scale * 0.4, true, [\"#0d1b1c\", \"#73583e\", \"#493425\", \"#7d6144\", \"#5e4530\", \"#473221\", \"#745840\"])));\r\n    sprite[SPRITE.SWORD_WOOD][SPRITE.NIGHT] = CTI(create_rotated_img(3, create_sword_wood(scale * 0.4, true, [\"#0d1b1c\", \"#0b3d3a\", \"#092b2a\", \"#144642\", \"#082927\", \"#092b29\"])));\r\n    sprite[SPRITE.SWORD] = [];\r\n    sprite[SPRITE.SWORD][SPRITE.DAY] = CTI(create_rotated_img(3, create_stonesword(scale * 0.4, true, [\"#0d1b1c\", \"#939393\", \"#5f6061\", \"#b1afaf\", \"#493d36\", \"#332b28\"])));\r\n    sprite[SPRITE.SWORD][SPRITE.NIGHT] = CTI(create_rotated_img(3, create_stonesword(scale * 0.4, true, [\"#0d1b1c\", \"#485e66\", \"#1f343f\", \"#5d757e\", \"#0d2e33\", \"#0b2326\"])));\r\n    sprite[SPRITE.SWORD_GOLD] = [];\r\n    sprite[SPRITE.SWORD_GOLD][SPRITE.DAY] = CTI(create_rotated_img(3, create_goldsword(scale * 0.4, true, [\"#0d1b1c\", \"#c4bc51\", \"#b29c32\", \"#c4bc51\", \"#493e26\", \"#382e19\"])));\r\n    sprite[SPRITE.SWORD_GOLD][SPRITE.NIGHT] = CTI(create_rotated_img(3, create_goldsword(scale * 0.4, true, [\"#0d1b1c\", \"#43aa82\", \"#29997c\", \"#54bf96\", \"#263947\", \"#182935\"])));\r\n    sprite[SPRITE.SWORD_DIAMOND] = [];\r\n    sprite[SPRITE.SWORD_DIAMOND][SPRITE.DAY] = CTI(create_rotated_img(3, create_diamondsword(scale * 0.4, true, [\"#0d1b1c\", \"#6ad9e8\", \"#29aaa1\", \"#95e9f5\", \"#022320\", \"#011e19\", \"#FFFFFF\"])));\r\n    sprite[SPRITE.SWORD_DIAMOND][SPRITE.NIGHT] = CTI(create_rotated_img(3, create_diamondsword(scale * 0.4, true, [\"#0d1b1c\", \"#73dde5\", \"#3dc4c0\", \"#93eaf1\", \"#111316\", \"#0a0b0c\"])));\r\n    sprite[SPRITE.SWORD_AMETHYST] = [];\r\n    sprite[SPRITE.SWORD_AMETHYST][SPRITE.DAY] = CTI(create_rotated_img(3, create_amesword(scale * 0.4, true, [\"#0d1b1c\", \"#b864d6\", \"#8c29aa\", \"#cc81e7\", \"#262114\", \"#211108\", \"#FFFFFF\"])));\r\n    sprite[SPRITE.SWORD_AMETHYST][SPRITE.NIGHT] = CTI(create_rotated_img(3, create_amesword(scale * 0.4, true, [\"#0d1b1c\", \"#8359d3\", \"#764eb5\", \"#966de6\", \"#111316\", \"#0a0b0c\"])));\r\n    sprite[SPRITE.HERB] = [];\r\n    sprite[SPRITE.HERB][SPRITE.DAY] = [];\r\n    sprite[SPRITE.HERB][SPRITE.NIGHT] = [];\r\n    sprite[SPRITE.HERB][SPRITE.DAY].push(CTI(create_herb(scale * 0.9, false, [\"#0d4f35\"], 0)));\r\n    sprite[SPRITE.HERB][SPRITE.DAY].push(CTI(create_herb(scale * 0.9, false, [\"#0d4f35\"], 1)));\r\n    sprite[SPRITE.HERB][SPRITE.DAY].push(CTI(create_herb(scale * 0.9, false, [\"#0d4f35\"], 2)));\r\n    sprite[SPRITE.HERB][SPRITE.NIGHT].push(CTI(create_herb(scale * 0.9, false, [\"#053339\"], 0)));\r\n    sprite[SPRITE.HERB][SPRITE.NIGHT].push(CTI(create_herb(scale * 0.9, false, [\"#053339\"], 1)));\r\n    sprite[SPRITE.HERB][SPRITE.NIGHT].push(CTI(create_herb(scale * 0.9, false, [\"#053339\"], 2)));\r\n    sprite[SPRITE.HERB][SPRITE.DAY].push(CTI(create_leaf(scale * 0.8, [\"#241301\", \"#ba6b0e\", \"#6d3f04\"])));\r\n    sprite[SPRITE.HERB][SPRITE.DAY].push(CTI(create_leaf(scale * 0.8, [\"#292002\", \"#ba930e\", \"#6d5704\"])));\r\n    sprite[SPRITE.HERB][SPRITE.NIGHT].push(CTI(create_leaf(scale * 0.9, [\"#052919\", \"#0a4738\", \"#06321f\"])));\r\n    sprite[SPRITE.HERB][SPRITE.NIGHT].push(CTI(create_leaf(scale * 0.8, [\"#052918\", \"#08491c\", \"#063417\"])));\r\n    sprite[SPRITE.SIGN] = [];\r\n    sprite[SPRITE.SIGN][SPRITE.DAY] = CTI(create_rotated_img(Math.PI / 2, create_sign(scale * 0.25, true, [\"#0d1b1c\", \"#44301b\", \"#57442a\", \"#523e26\"])));\r\n    sprite[SPRITE.SIGN][SPRITE.NIGHT] = CTI(create_rotated_img(Math.PI / 2, create_sign(scale * 0.25, true, [\"#030d14\", \"#082b22\", \"#0a2f2b\", \"#072824\"])));\r\n    sprite[SPRITE.SIGN_BUTTON] = [];\r\n    sprite[SPRITE.SIGN_BUTTON].push(CTI(create_sign_button(scale * 0.25, [\"#44301b\", \"#57442a\", \"#523e26\"], 0)));\r\n    sprite[SPRITE.SIGN_BUTTON].push(CTI(create_sign_button(scale * 0.25, [\"#4f371e\", \"#624d30\", \"#5e472c\", \"#eda80d\"], 1)));\r\n    sprite[SPRITE.SIGN_BUTTON].push(CTI(create_sign_button(scale * 0.25, [\"#382715\", \"#4e3c25\", \"#473620\", \"#d7990c\"], 2)));\r\n    sprite[SPRITE.SYMBOLS] = [];\r\n    sprite[SPRITE.SYMBOLS][SPRITE.DAY] = [];\r\n    sprite[SPRITE.SYMBOLS][SPRITE.NIGHT] = [];\r\n    sprite[SPRITE.SYMBOLS][SPRITE.DAY].push(CTI(create_rotated_img(Math.PI / 2, create_symbols(scale * 0.25, false, [\"#0d1b1c\", \"#44301b\", \"#57442a\", \"#523e26\", \"#9b2b25\"], 1))));\r\n    sprite[SPRITE.SYMBOLS][SPRITE.NIGHT].push(CTI(create_rotated_img(Math.PI / 2, create_symbols(scale * 0.25, false, [\"#030d14\", \"#082b22\", \"#0a2f2b\", \"#072824\", \"#9b2b25\"], 1))));\r\n    sprite[SPRITE.SYMBOLS][SPRITE.DAY].push(CTI(create_rotated_img(Math.PI / 2, create_symbols(scale * 0.25, false, [\"#0d1b1c\", \"#44301b\", \"#57442a\", \"#523e26\", \"#4f9246\"], 2))));\r\n    sprite[SPRITE.SYMBOLS][SPRITE.NIGHT].push(CTI(create_rotated_img(Math.PI / 2, create_symbols(scale * 0.25, false, [\"#030d14\", \"#082b22\", \"#0a2f2b\", \"#072824\", \"#4f9246\"], 2))));\r\n    sprite[SPRITE.SYMBOLS][SPRITE.DAY].push(CTI(create_rotated_img(Math.PI / 2, create_symbols(scale * 0.25, false, [\"#0d1b1c\", \"#44301b\", \"#57442a\", \"#523e26\", \"#9b2b25\", \"#ffffff\"], 3))));\r\n    sprite[SPRITE.SYMBOLS][SPRITE.NIGHT].push(CTI(create_rotated_img(Math.PI / 2, create_symbols(scale * 0.25, false, [\"#030d14\", \"#082b22\", \"#0a2f2b\", \"#072824\", \"#9b2b25\", \"#ffffff\"], 3))));\r\n    sprite[SPRITE.SYMBOLS][SPRITE.DAY].push(CTI(create_rotated_img(Math.PI / 2, create_symbols(scale * 0.25, false, [\"#0d1b1c\", \"#44301b\", \"#57442a\", \"#523e26\", \"#9b2b25\", \"#362513\"], 4))));\r\n    sprite[SPRITE.SYMBOLS][SPRITE.NIGHT].push(CTI(create_rotated_img(Math.PI / 2, create_symbols(scale * 0.25, false, [\"#030d14\", \"#082b22\", \"#0a2f2b\", \"#072824\", \"#9b2b25\", \"#664d2e\"], 4))));\r\n    sprite[SPRITE.PLANT] = [];\r\n    sprite[SPRITE.PLANT][SPRITE.DAY] = [CTI(create_plant(scale * 1.2, true, [\"#352b10\", \"#80500b\", \"#7c4908\"]))];\r\n    sprite[SPRITE.PLANT][SPRITE.NIGHT] = [CTI(create_plant(scale * 1.2, true, [\"#030d14\", \"#0a3429\", \"#0a2f2b\"]))];\r\n    sprite[SPRITE.DRIED_PLANT] = [];\r\n    sprite[SPRITE.DRIED_PLANT][SPRITE.DAY] = CTI(create_plant(scale * 0.8, true, [\"#0e3022\", \"#68622D\", \"#665329\"]));\r\n    sprite[SPRITE.DRIED_PLANT][SPRITE.NIGHT] = CTI(create_plant(scale * 0.8, true, [\"#030d14\", \"#0F3A24\", \"#083326\"]));\r\n    sprite[SPRITE.PUMPKIN] = [];\r\n    sprite[SPRITE.PUMPKIN][SPRITE.DAY] = CTI(create_pumpkin(scale * 0.5, true, [\"#1b170c\", \"#c67933\", \"#a6692f\", \"#bd7533\", \"#86683e\", \"#6e502d\"]));\r\n    sprite[SPRITE.PUMPKIN][SPRITE.NIGHT] = CTI(create_pumpkin(scale * 0.5, true, [\"#030d14\", \"#0a3429\", \"#0a2f2b\", \"#082f25\", \"#082925\", \"#0a3630\"]));\r\n    sprite[SPRITE.GARLIC] = [];\r\n    sprite[SPRITE.GARLIC][SPRITE.DAY] = CTI(create_garlic(scale * 0.5, true, [\"#1b170c\", \"#e8e8e8\", \"#d2cfcf\", \"#e0e1e0\", \"#c4c4c4\"]));\r\n    sprite[SPRITE.GARLIC][SPRITE.NIGHT] = CTI(create_garlic(scale * 0.5, true, [\"#030d14\", \"#2b5254\", \"#264a46\", \"#396260\", \"#244743\"]));\r\n    sprite[SPRITE.THORNBUSH] = [];\r\n    sprite[SPRITE.THORNBUSH][SPRITE.DAY] = CTI(create_brambles(scale * 0.5, true, [\"#1b170c\", \"#349970\", \"#245c45\", \"#348361\", \"#e8e8e8\", \"#bbbbbb\"]));\r\n    sprite[SPRITE.THORNBUSH][SPRITE.NIGHT] = CTI(create_brambles(scale * 0.5, true, [\"#030d14\", \"#0d5551\", \"#074440\", \"#0f5c58\", \"#4e8784\", \"#3f7572\"]));\r\n    sprite[SPRITE.PLANT_MINI] = [];\r\n    sprite[SPRITE.PLANT_MINI][SPRITE.DAY] = CTI(create_plant(scale * 0.8, true, [\"#1b170c\", \"#0b8052\", \"#077b49\"]));\r\n    sprite[SPRITE.PLANT_MINI][SPRITE.NIGHT] = CTI(create_plant(scale * 0.8, true, [\"#030d14\", \"#084442\", \"#0a4049\"]));\r\n    sprite[SPRITE.DRIED_PUMPKIN] = [];\r\n    sprite[SPRITE.DRIED_PUMPKIN][SPRITE.DAY] = CTI(create_pumpkin(scale * 0.5, true, [\"#1b170c\", \"#68622D\", \"#665329\", \"#5e5823\", \"#86683e\", \"#6e502d\"]));\r\n    sprite[SPRITE.DRIED_PUMPKIN][SPRITE.NIGHT] = CTI(create_pumpkin(scale * 0.5, true, [\"#030d14\", \"#0F3A24\", \"#083326\", \"#0c301e\", \"#062a1f\", \"#083b2b\"]));\r\n    sprite[SPRITE.DRIED_GARLIC] = [];\r\n    sprite[SPRITE.DRIED_GARLIC][SPRITE.DAY] = CTI(create_garlic(scale * 0.5, true, [\"#1b170c\", \"#adbe9e\", \"#7e9178\", \"#84aa84\", \"#527556\"]));\r\n    sprite[SPRITE.DRIED_GARLIC][SPRITE.NIGHT] = CTI(create_garlic(scale * 0.5, true, [\"#030d14\", \"#164a44\", \"#124244\", \"#13373b\", \"#133e3e\"]));\r\n    sprite[SPRITE.DRIED_THORNBUSH] = [];\r\n    sprite[SPRITE.DRIED_THORNBUSH][SPRITE.DAY] = CTI(create_brambles(scale * 0.5, true, [\"#1b170c\", \"#7a9160\", \"#4a5e3c\", \"#637e5a\", \"#c5cfc0\", \"#8a9685\"]));\r\n    sprite[SPRITE.DRIED_THORNBUSH][SPRITE.NIGHT] = CTI(create_brambles(scale * 0.5, true, [\"#030d14\", \"#3e5d5b\", \"#2f4442\", \"#354e4c\", \"#637d7c\", \"#556b6a\"]));\r\n    sprite[SPRITE.GIFT] = [];\r\n    sprite[SPRITE.GIFT][SPRITE.DAY] = CTI(create_present(scale * 0.45, true, [\"#0e3022\", \"#ac222a\", \"#98171e\", \"#22a84f\", \"#1f924a\"]));\r\n    sprite[SPRITE.GIFT][SPRITE.NIGHT] = CTI(create_present(scale * 0.45, true, [\"#0e3022\", \"#19386e\", \"#0b2752\", \"#124252\", \"#0d3441\"]));\r\n    sprite[SPRITE.HURT_GIFT] = CTI(create_present(scale * 0.65, true, [\"rgba(14, 48, 34, 0)\", \"#BB0000\", \"#BB0000\", \"#BB0000\", \"#BB0000\"]));\r\n    sprite[SPRITE.FRUIT] = [];\r\n    sprite[SPRITE.FRUIT][SPRITE.DAY] = CTI(create_fruit(scale * 1.4, false, [\"#3d2a6e\", \"#8255b5\"]));\r\n    sprite[SPRITE.FRUIT][SPRITE.NIGHT] = CTI(create_fruit(scale * 1.4, false, [\"#26124f\", \"#524082\"]));\r\n    sprite[SPRITE.FIRE] = [];\r\n    sprite[SPRITE.FIRE][SPRITE.DAY] = CTI(create_fire(scale * 0.9, false, [\"#efd435\", \"#ec8d35\", \"#e96132\"]));\r\n    sprite[SPRITE.FIRE][SPRITE.NIGHT] = CTI(create_fire(scale * 0.9, false, [\"#efdb7b\", \"#efe854\", \"#e8ef62\"]));\r\n    sprite[SPRITE.BIG_FIRE_WOOD] = [];\r\n    sprite[SPRITE.BIG_FIRE_WOOD][SPRITE.DAY] = CTI(create_big_fire_wood(scale * 0.9, false, [\"#4d2d14\", \"#432516\"]));\r\n    sprite[SPRITE.BIG_FIRE_WOOD][SPRITE.NIGHT] = CTI(create_big_fire_wood(scale * 0.9, false, [\"#282404\", \"#0a0a01\"]));\r\n    sprite[SPRITE.WOOD_FIRE] = [];\r\n    sprite[SPRITE.WOOD_FIRE][SPRITE.DAY] = CTI(create_wood_fire(scale * 0.9, false, [\"#4d2d14\", \"#432516\"]));\r\n    sprite[SPRITE.WOOD_FIRE][SPRITE.NIGHT] = CTI(create_wood_fire(scale * 0.9, false, [\"#282404\", \"#0a0a01\"]));\r\n    sprite[SPRITE.HALO_FIRE] = [];\r\n    sprite[SPRITE.HALO_FIRE][SPRITE.DAY] = CTI(create_halo_fire(scale * 0.9, false, [\"#efd435\"]));\r\n    sprite[SPRITE.HALO_FIRE][SPRITE.NIGHT] = CTI(create_halo_fire(scale * 0.9, false, [\"#fffabb\"]));\r\n    sprite[SPRITE.GROUND_FIRE] = [];\r\n    sprite[SPRITE.GROUND_FIRE][SPRITE.DAY] = CTI(create_ground_fire(scale * 0.9, false, [\"#efd435\"]));\r\n    sprite[SPRITE.GROUND_FIRE][SPRITE.NIGHT] = CTI(create_ground_fire(scale * 0.9, false, [\"#fffabb\"]));\r\n    sprite[SPRITE.HALO_FIRE_PUMPKIN] = [];\r\n    sprite[SPRITE.HALO_FIRE_PUMPKIN][SPRITE.DAY] = CTI(create_halo_fire(scale * 0.9, false, [\"#efd435\"]));\r\n    sprite[SPRITE.HALO_FIRE_PUMPKIN][SPRITE.NIGHT] = CTI(create_halo_fire(scale * 0.9, false, [\"rgba(255, 84, 0, 1)\"]));\r\n    sprite[SPRITE.GROUND_FIRE_PUMPKIN] = [];\r\n    sprite[SPRITE.GROUND_FIRE_PUMPKIN][SPRITE.DAY] = CTI(create_ground_fire(scale * 0.9, false, [\"#efd435\"]));\r\n    sprite[SPRITE.GROUND_FIRE_PUMPKIN][SPRITE.NIGHT] = CTI(create_ground_fire(scale * 0.9, false, [\"#ff5704\"]));\r\n    sprite[SPRITE.GEAR] = CTI(create_gear(scale, \"#ffffff\", 1));\r\n    sprite[SPRITE.GEAR2] = CTI(create_gear(scale * 1.5, \"#ffffff\", 1));\r\n    sprite[SPRITE.YOUR_SCORE] = CTI(create_text(scale, \"Your score:\", 15 * scale, \"#FFF\"));\r\n    sprite[SPRITE.WINDMILL_CASES] = CTI(create_windmill_chest(scale * 0.9, [\"#596560\", \"#394841\", \"#543B1C\", \"#694D28\", \"#4D3C1A\", \"#694D28\", \"#DEE2E0\", \"#CDCCCC\", \"#7B5A31\", \"#7E8A85\"]));\r\n    sprite[SPRITE.EXTRACTOR_CASES] = IMAGES.EXTRACTOR_CASES;\r\n    sprite[SPRITE.WINDMILL] = [];\r\n    sprite[SPRITE.WINDMILL][SPRITE.DAY] = CTI(create_windmill(scale * 1.5, true, [\"#0d1b1c\", \"#596560\", \"#394841\", \"#67766F\", \"#46554D\", \"#4C3B19\", \"#674C2A\", \"#7C5A29\", \"#596560\", \"#394841\"]));\r\n    sprite[SPRITE.WINDMILL][SPRITE.NIGHT] = CTI(create_windmill(scale * 1.5, true, [\"#030d14\", \"#163A3A\", \"#214C4B\", \"#1a4545\", \"#225755\", \"#07393D\", \"#07454a\", \"#0c484d\", \"#163A3A\", \"#214C4B\"]));\r\n    sprite[SPRITE.WINDMILL_WINGS] = [];\r\n    sprite[SPRITE.WINDMILL_WINGS][SPRITE.DAY] = CTI(create_windmill_wing(scale * 2, true, [\"#0d1b1c\", \"#596560\", \"#394841\", \"#67766F\", \"#46554D\", \"#4C3B19\", \"#674C2A\", \"#7C5A29\", \"#596560\", \"#394841\"]));\r\n    sprite[SPRITE.WINDMILL_WINGS][SPRITE.NIGHT] = CTI(create_windmill_wing(scale * 2, true, [\"#030d14\", \"#163A3A\", \"#214C4B\", \"#1a4545\", \"#225755\", \"#07393D\", \"#07454a\", \"#0c484d\", \"#163A3A\", \"#214C4B\"]));\r\n    sprite[SPRITE.WINDMILL_HEAD] = [];\r\n    sprite[SPRITE.WINDMILL_HEAD][SPRITE.DAY] = CTI(create_windmill_head(scale * 1.5, true, [\"#0d1b1c\", \"#596560\", \"#394841\", \"#67766F\", \"#46554D\", \"#4C3B19\", \"#674C2A\", \"#7C5A29\", \"#596560\", \"#394841\"]));\r\n    sprite[SPRITE.WINDMILL_HEAD][SPRITE.NIGHT] = CTI(create_windmill_head(scale * 1.5, true, [\"#030d14\", \"#163A3A\", \"#214C4B\", \"#1a4545\", \"#225755\", \"#07393D\", \"#07454a\", \"#0c484d\", \"#163A3A\", \"#214C4B\"]));\r\n    sprite[SPRITE.WILD_WHEAT] = [];\r\n    sprite[SPRITE.WILD_WHEAT][SPRITE.DAY] = CTI(create_wheat(scale * 2.2, true, [\"#A89F67\", \"#9E8456\"]));\r\n    sprite[SPRITE.WILD_WHEAT][SPRITE.NIGHT] = CTI(create_wheat(scale * 2.2, true, [\"#0B4049\", \"#08383D\"]));\r\n    sprite[SPRITE.DRIED_WHEAT] = [];\r\n    sprite[SPRITE.DRIED_WHEAT][SPRITE.DAY] = CTI(create_wheat(scale * 2.2, true, [\"#68622D\", \"#665329\"]));\r\n    sprite[SPRITE.DRIED_WHEAT][SPRITE.NIGHT] = CTI(create_wheat(scale * 2.2, true, [\"#0F3A24\", \"#083326\"]));\r\n    sprite[SPRITE.WHEAT_MOB] = [];\r\n    sprite[SPRITE.WHEAT_MOB][SPRITE.DAY] = CTI(create_seed(scale * 0.8, true, [\"#A89F67\", \"#9E8456\"]));\r\n    sprite[SPRITE.WHEAT_MOB][SPRITE.NIGHT] = CTI(create_seed(scale * 0.8, true, [\"#15514F\", \"#0F3F3D\"]));\r\n    sprite[SPRITE.PUMPKIN_SEED_MOB] = [];\r\n    sprite[SPRITE.PUMPKIN_SEED_MOB][SPRITE.DAY] = CTI(create_seed(scale * 0.8, true, [\"#c67933\", \"#b17238\"]));\r\n    sprite[SPRITE.PUMPKIN_SEED_MOB][SPRITE.NIGHT] = CTI(create_seed(scale * 0.8, true, [\"#043c37\", \"#032b23\"]));\r\n    sprite[SPRITE.ALOE_VERA_SEED_MOB] = [];\r\n    sprite[SPRITE.ALOE_VERA_SEED_MOB][SPRITE.DAY] = CTI(create_seed(scale * 0.8, true, [\"#3a8214\", \"#4a9c1e\"]));\r\n    sprite[SPRITE.ALOE_VERA_SEED_MOB][SPRITE.NIGHT] = CTI(create_seed(scale * 0.8, true, [\"#032d29\", \"#044640\"]));\r\n    sprite[SPRITE.GARLIC_SEED_MOB] = [];\r\n    sprite[SPRITE.GARLIC_SEED_MOB][SPRITE.DAY] = CTI(create_seed(scale * 0.8, true, [\"#e8e8e8\", \"#bbbbbb\"]));\r\n    sprite[SPRITE.GARLIC_SEED_MOB][SPRITE.NIGHT] = CTI(create_seed(scale * 0.8, true, [\"#1c6161\", \"#07413f\"]));\r\n    sprite[SPRITE.THORNBUSH_SEED_MOB] = [];\r\n    sprite[SPRITE.THORNBUSH_SEED_MOB][SPRITE.DAY] = CTI(create_seed(scale * 0.8, true, [\"#328a56\", \"#449573\"]));\r\n    sprite[SPRITE.THORNBUSH_SEED_MOB][SPRITE.NIGHT] = CTI(create_seed(scale * 0.8, true, [\"#043c37\", \"#032b23\"]));\r\n    sprite[SPRITE.CARROT_SEED_MOB] = [];\r\n    sprite[SPRITE.CARROT_SEED_MOB][SPRITE.DAY] = CTI(create_seed(scale * 0.8, true, [\"#c98e2f\", \"#a36b11\"]));\r\n    sprite[SPRITE.CARROT_SEED_MOB][SPRITE.NIGHT] = CTI(create_seed(scale * 0.8, true, [\"#043c37\", \"#032b23\"]));\r\n    sprite[SPRITE.TOMATO_SEED_MOB] = [];\r\n    sprite[SPRITE.TOMATO_SEED_MOB][SPRITE.DAY] = CTI(create_seed(scale * 0.8, true, [\"#b22419\", \"#99110e\"]));\r\n    sprite[SPRITE.TOMATO_SEED_MOB][SPRITE.NIGHT] = CTI(create_seed(scale * 0.8, true, [\"#04323c\", \"#03222b\"]));\r\n    sprite[SPRITE.WATERMELON_SEED_MOB] = [];\r\n    sprite[SPRITE.WATERMELON_SEED_MOB][SPRITE.DAY] = CTI(create_seed(scale * 0.8, true, [\"#13a56d\", \"#098a58\"]));\r\n    sprite[SPRITE.WATERMELON_SEED_MOB][SPRITE.NIGHT] = CTI(create_seed(scale * 0.8, true, [\"#043c37\", \"#032b23\"]));\r\n    sprite[SPRITE.WINDMILL_WHEAT_SEED] = create_craft_button(1, [{f: create_wheat, x: 0, y: 0, a: 1, r: 0, c: [\"#A89F67\", \"#9E8456\"]}], 1.2, [\"#d2c77b\", \"#e7dc8f\", \"#bfb360\"], 0.7);\r\n    sprite[SPRITE.BREAD_OVEN_WOOD] = create_craft_button(1, [{f: create_wood_fire, x: 0, y: 0, a: 1, r: -Math.PI / 5, c: [\"#4d2d14\", \"#432516\"]}], 0.3, [\"#d2c77b\", \"#e7dc8f\", \"#bfb360\"], 0.7);\r\n    sprite[SPRITE.BREAD_OVEN_BREAD] = create_craft_button(1, [{f: create_bread, x: 0, y: -5, a: 1, r: 0, c: [\"#1d051e\", \"#bf8d51\", \"#7d5133\", \"#e8d6bf\", \"#e0c8a9\", \"#ab7a3f\"]}], 0.15, [\"#d2c77b\", \"#e7dc8f\", \"#bfb360\"], 0.7);\r\n    sprite[SPRITE.EMPTY_SLOT] = create_craft_button(0.9, [], 0.3, [\"#2b5c48\", \"#2b5c48\", \"#2b5c48\"], 0.5);\r\n    sprite[SPRITE.PLANT_SEED] = [];\r\n    sprite[SPRITE.PLANT_SEED][SPRITE.DAY] = CTI(create_plant_seed(scale * 0.9, false, [\"#7d613e\", \"#9e7e5a\"]));\r\n    sprite[SPRITE.PLANT_SEED][SPRITE.NIGHT] = CTI(create_plant_seed(scale * 0.9, false, [\"#084442\", \"#125e5a\"]));\r\n    sprite[SPRITE.WHEAT_SEED] = [];\r\n    sprite[SPRITE.WHEAT_SEED][SPRITE.DAY] = CTI(create_plant_seed(scale * 0.9, false, [\"#9E8456\", \"#A89F67\"]));\r\n    sprite[SPRITE.WHEAT_SEED][SPRITE.NIGHT] = CTI(create_plant_seed(scale * 0.9, false, [\"#1b6f6a\", \"#0d4e4c\"]));\r\n    sprite[SPRITE.WHEAT_SEED_DRIED] = [];\r\n    sprite[SPRITE.WHEAT_SEED_DRIED][SPRITE.DAY] = CTI(create_plant_seed(scale * 0.9, false, [\"#665329\", \"#68622D\"]));\r\n    sprite[SPRITE.WHEAT_SEED_DRIED][SPRITE.NIGHT] = CTI(create_plant_seed(scale * 0.9, false, [\"#083326\", \"#0F3A24\"]));\r\n    sprite[SPRITE.PLANT_PUMPKIN] = [];\r\n    sprite[SPRITE.PLANT_PUMPKIN][SPRITE.DAY] = CTI(create_plant_seed(scale * 0.9, false, [\"#c67933\", \"#ec952d\"]));\r\n    sprite[SPRITE.PLANT_PUMPKIN][SPRITE.NIGHT] = CTI(create_plant_seed(scale * 0.9, false, [\"#0e6553\", \"#094437\"]));\r\n    sprite[SPRITE.PLANT_ALOE_VERA] = [];\r\n    sprite[SPRITE.PLANT_ALOE_VERA][SPRITE.DAY] = CTI(create_plant_seed(scale * 0.9, false, [\"#375809\", \"#4b770e\"]));\r\n    sprite[SPRITE.PLANT_ALOE_VERA][SPRITE.NIGHT] = CTI(create_plant_seed(scale * 0.9, false, [\"#09542d\", \"#0d5d2f\"]));\r\n    sprite[SPRITE.PLANT_ALOE_VERA_DRIED] = [];\r\n    sprite[SPRITE.PLANT_ALOE_VERA_DRIED][SPRITE.DAY] = CTI(create_plant_seed(scale * 0.9, false, [\"#585809\", \"#72770e\"]));\r\n    sprite[SPRITE.PLANT_ALOE_VERA_DRIED][SPRITE.NIGHT] = CTI(create_plant_seed(scale * 0.9, false, [\"#295209\", \"#305d0d\"]));\r\n    sprite[SPRITE.PLANT_GARLIC] = [];\r\n    sprite[SPRITE.PLANT_GARLIC][SPRITE.DAY] = CTI(create_plant_seed(scale * 0.9, false, [\"#b9b094\", \"#e2d2c0\"]));\r\n    sprite[SPRITE.PLANT_GARLIC][SPRITE.NIGHT] = CTI(create_plant_seed(scale * 0.9, false, [\"#126366\", \"#0d484b\"]));\r\n    sprite[SPRITE.PLANT_THORNBUSH] = [];\r\n    sprite[SPRITE.PLANT_THORNBUSH][SPRITE.DAY] = CTI(create_plant_seed(scale * 0.9, false, [\"#3f8662\", \"#30915d\"]));\r\n    sprite[SPRITE.PLANT_THORNBUSH][SPRITE.NIGHT] = CTI(create_plant_seed(scale * 0.9, false, [\"#0e6553\", \"#094437\"]));\r\n    sprite[SPRITE.PLANT_PUMPKIN_DRIED] = [];\r\n    sprite[SPRITE.PLANT_PUMPKIN_DRIED][SPRITE.DAY] = CTI(create_plant_seed(scale * 0.9, false, [\"#c79153\", \"#dfa868\"]));\r\n    sprite[SPRITE.PLANT_PUMPKIN_DRIED][SPRITE.NIGHT] = CTI(create_plant_seed(scale * 0.9, false, [\"#073927\", \"#075040\"]));\r\n    sprite[SPRITE.PLANT_GARLIC_DRIED] = [];\r\n    sprite[SPRITE.PLANT_GARLIC_DRIED][SPRITE.DAY] = CTI(create_plant_seed(scale * 0.9, false, [\"#768b5b\", \"#819984\"]));\r\n    sprite[SPRITE.PLANT_GARLIC_DRIED][SPRITE.NIGHT] = CTI(create_plant_seed(scale * 0.9, false, [\"#0c4540\", \"#0e5153\"]));\r\n    sprite[SPRITE.PLANT_THORNBUSH_DRIED] = [];\r\n    sprite[SPRITE.PLANT_THORNBUSH_DRIED][SPRITE.DAY] = CTI(create_plant_seed(scale * 0.9, false, [\"#567465\", \"#627c6e\"]));\r\n    sprite[SPRITE.PLANT_THORNBUSH_DRIED][SPRITE.NIGHT] = CTI(create_plant_seed(scale * 0.9, false, [\"#073927\", \"#075040\"]));\r\n    sprite[SPRITE.PLANT_CARROT] = [];\r\n    sprite[SPRITE.PLANT_CARROT][SPRITE.DAY] = CTI(create_plant_seed(scale * 0.9, false, [\"#996b3a\", \"#bf956b\"]));\r\n    sprite[SPRITE.PLANT_CARROT][SPRITE.NIGHT] = CTI(create_plant_seed(scale * 0.9, false, [\"#0e6553\", \"#094437\"]));\r\n    sprite[SPRITE.PLANT_CARROT_DRIED] = [];\r\n    sprite[SPRITE.PLANT_CARROT_DRIED][SPRITE.DAY] = CTI(create_plant_seed(scale * 0.9, false, [\"#7a634a\", \"#a68f77\"]));\r\n    sprite[SPRITE.PLANT_CARROT_DRIED][SPRITE.NIGHT] = CTI(create_plant_seed(scale * 0.9, false, [\"#1e4d43\", \"#113c32\"]));\r\n    sprite[SPRITE.PLANT_TOMATO] = [];\r\n    sprite[SPRITE.PLANT_TOMATO][SPRITE.DAY] = CTI(create_plant_seed(scale * 0.9, false, [\"#99403c\", \"#bc796c\"]));\r\n    sprite[SPRITE.PLANT_TOMATO][SPRITE.NIGHT] = CTI(create_plant_seed(scale * 0.9, false, [\"#1e434d\", \"#11303c\"]));\r\n    sprite[SPRITE.PLANT_TOMATO_DRIED] = [];\r\n    sprite[SPRITE.PLANT_TOMATO_DRIED][SPRITE.DAY] = CTI(create_plant_seed(scale * 0.9, false, [\"#88504e\", \"#b3857c\"]));\r\n    sprite[SPRITE.PLANT_TOMATO_DRIED][SPRITE.NIGHT] = CTI(create_plant_seed(scale * 0.9, false, [\"#253b41\", \"#162930\"]));\r\n    sprite[SPRITE.PLANT_WATERMELON] = [];\r\n    sprite[SPRITE.PLANT_WATERMELON][SPRITE.DAY] = CTI(create_plant_seed(scale * 0.9, false, [\"#0f8870\", \"#23af93\"]));\r\n    sprite[SPRITE.PLANT_WATERMELON][SPRITE.NIGHT] = CTI(create_plant_seed(scale * 0.9, false, [\"#032829\", \"#083233\"]));\r\n    sprite[SPRITE.PLANT_WATERMELON_DRIED] = [];\r\n    sprite[SPRITE.PLANT_WATERMELON_DRIED][SPRITE.DAY] = CTI(create_plant_seed(scale * 0.9, false, [\"#618a20\", \"#84a74e\"]));\r\n    sprite[SPRITE.PLANT_WATERMELON_DRIED][SPRITE.NIGHT] = CTI(create_plant_seed(scale * 0.9, false, [\"#1f4632\", \"#335d47\"]));\r\n    sprite[SPRITE.WORKBENCH] = [];\r\n    sprite[SPRITE.WORKBENCH][SPRITE.DAY] = CTI(create_workbench(scale * 1.2, true, [\"#0d1b1c\", \"#4d2d14\", \"#432516\", \"#756e52\", \"#663f22\", \"#9e9577\"]));\r\n    sprite[SPRITE.WORKBENCH][SPRITE.NIGHT] = CTI(create_workbench(scale * 1.2, true, [\"#030d14\", \"#0d2e33\", \"#072322\", \"#3e706b\", \"#123d3f\", \"#4e827c\"]));\r\n    sprite[SPRITE.WALL] = [], sprite[SPRITE.WALL][SPRITE.DAY] = CTI(create_wall(scale * 1, true, [\"#0d1b1c\", \"#4c3a15\", \"#634828\", \"#564021\", \"#634828\", \"#4c3a15\"]));\r\n    sprite[SPRITE.WALL][SPRITE.NIGHT] = CTI(create_wall(scale * 1, true, [\"#030d14\", \"#0d2e33\", \"#184747\", \"#123b3f\", \"#0d2e33\", \"#174444\"]));\r\n    sprite[SPRITE.DIAMOND_WALL] = [], sprite[SPRITE.DIAMOND_WALL][SPRITE.DAY] = CTI(create_wall_diamond(scale * 1, true, [\"#0d1b1c\", \"#5cc5ce\", \"#89d1d4\", \"#86d0d1\", \"#95d5d8\", \"#e0f2f6\", \"#b3e0e3\"]));\r\n    sprite[SPRITE.DIAMOND_WALL][SPRITE.NIGHT] = CTI(create_wall_diamond(scale * 1, true, [\"#030d14\", \"#2b9390\", \"#43b5af\", \"#43b5af\", \"#4bbcb4\", \"#83ddd4\", \"#59c9c0\"]));\r\n    sprite[SPRITE.AMETHYST_WALL] = [], sprite[SPRITE.AMETHYST_WALL][SPRITE.DAY] = CTI(create_wall_stone(scale * 1, true, [\"#0d1b1c\", \"#b15ecf\", \"#8c29aa\", \"#c26de0\", \"#af59cd\", \"#d588f1\"]));\r\n    sprite[SPRITE.AMETHYST_WALL][SPRITE.NIGHT] = CTI(create_wall_stone(scale * 1, true, [\"#030d14\", \"#8359d3\", \"#764eb5\", \"#8f65de\", \"#7f55cc\", \"#9d77e6\"]));\r\n    sprite[SPRITE.STONE_WALL] = [], sprite[SPRITE.STONE_WALL][SPRITE.DAY] = CTI(create_wall_stone(scale * 1, true, [\"#0d1b1c\", \"#6a7570\", \"#939995\", \"#9baaa3\", \"#adbcb5\", \"#8a938e\"]));\r\n    sprite[SPRITE.STONE_WALL][SPRITE.NIGHT] = CTI(create_wall_stone(scale * 1, true, [\"#030d14\", \"#163a3a\", \"#214c4b\", \"#1f4948\", \"#295957\", \"#1f5955\"]));\r\n    sprite[SPRITE.GOLD_WALL] = [], sprite[SPRITE.GOLD_WALL][SPRITE.DAY] = CTI(create_wall_gold(scale * 1, true, [\"#0d1b1c\", \"#877d36\", \"#a08f47\", \"#a7983c\", \"#b29e4d\", \"#c1b06b\"]));\r\n    sprite[SPRITE.GOLD_WALL][SPRITE.NIGHT] = CTI(create_wall_gold(scale * 1, true, [\"#030d14\", \"#1f4948\", \"#215e55\", \"#1f6058\", \"#2a7773\", \"#2c7a70\"]));\r\n    sprite[SPRITE.SPIKE] = [], sprite[SPRITE.SPIKE][SPRITE.DAY] = CTI(create_spike(scale * 0.8, true, [\"#0d1b1c\", \"#5f6061\", \"#939393\", \"#4c3a15\", \"#634828\", \"#564021\", \"#634828\", \"#4c3a15\"]));\r\n    sprite[SPRITE.SPIKE][SPRITE.NIGHT] = CTI(create_spike(scale * 0.8, true, [\"#030d14\", \"#1f343f\", \"#485e66\", \"#0d2e33\", \"#184747\", \"#123b3f\", \"#0d2e33\", \"#174444\"]));\r\n    sprite[SPRITE.GOLD_SPIKE] = [], sprite[SPRITE.GOLD_SPIKE][SPRITE.DAY] = CTI(create_spike_gold(scale * 0.8, true, [\"#0d1b1c\", \"#69685a\", \"#9c9683\", \"#877d36\", \"#a08f47\", \"#a7983c\", \"#b29e4d\", \"#c1b06b\"]));\r\n    sprite[SPRITE.GOLD_SPIKE][SPRITE.NIGHT] = CTI(create_spike_gold(scale * 0.8, true, [\"#030d14\", \"#1a3732\", \"#1e544c\", \"#1f4948\", \"#215e55\", \"#1f6058\", \"#2a7773\", \"#2c7a70\"]));\r\n    sprite[SPRITE.DIAMOND_SPIKE] = [], sprite[SPRITE.DIAMOND_SPIKE][SPRITE.DAY] = CTI(create_spike_diamond(scale * 0.8, true, [\"#0d1b1c\", \"#7d8b90\", \"#9facaa\", \"#5cc5ce\", \"#89d1d4\", \"#86d0d1\", \"#95d5d8\", \"#e0f2f6\", \"#b3e0e3\"]));\r\n    sprite[SPRITE.DIAMOND_SPIKE][SPRITE.NIGHT] = CTI(create_spike_diamond(scale * 0.8, true, [\"#030d14\", \"#2c4b55\", \"#546d77\", \"#2b9390\", \"#43b5af\", \"#43b5af\", \"#4bbcb4\", \"#83ddd4\", \"#59c9c0\"]));\r\n    sprite[SPRITE.STONE_SPIKE] = [], sprite[SPRITE.STONE_SPIKE][SPRITE.DAY] = CTI(create_spike_stone(scale * 0.8, true, [\"#0d1b1c\", \"#6a7570\", \"#939393\", \"#6a7570\", \"#939995\", \"#9baaa3\", \"#adbcb5\", \"#8a938e\"]));\r\n    sprite[SPRITE.STONE_SPIKE][SPRITE.NIGHT] = CTI(create_spike_stone(scale * 0.8, true, [\"#030d14\", \"#1f343f\", \"#485e66\", \"#163a3a\", \"#214c4b\", \"#1f4948\", \"#295957\", \"#1f5955\"]));\r\n    sprite[SPRITE.AMETHYST_SPIKE] = [], sprite[SPRITE.AMETHYST_SPIKE][SPRITE.DAY] = CTI(create_spike_stone(scale * 0.8, true, [\"#0d1b1c\", \"#6a7570\", \"#939393\", \"#b15ecf\", \"#8c29aa\", \"#c26de0\", \"#af59cd\", \"#d588f1\"]));\r\n    sprite[SPRITE.AMETHYST_SPIKE][SPRITE.NIGHT] = CTI(create_spike_stone(scale * 0.8, true, [\"#030d14\", \"#1f343f\", \"#485e66\", \"#8359d3\", \"#764eb5\", \"#8f65de\", \"#7f55cc\", \"#9d77e6\"]));\r\n    sprite[SPRITE.DOOR_WOOD_CLOSE] = [];\r\n    sprite[SPRITE.DOOR_WOOD_CLOSE][SPRITE.DAY] = CTI(create_door_wood(scale * 1.5, true, [\"#0d1b1c\", \"#4c3b19\", \"#574122\", \"#644928\", \"#574122\", \"#735534\", \"#23a54e\", \"#1f934a\", \"#208e48\", \"#b12c2a\", \"#9c2625\", \"#ebd6a4\", \"#cca73f\"]));\r\n    sprite[SPRITE.DOOR_WOOD_CLOSE][SPRITE.NIGHT] = CTI(create_door_wood(scale * 1.5, true, [\"#030d14\", \"#0d2e33\", \"#184747\", \"#123b3f\", \"#0d2e33\", \"#174444\"]));\r\n    sprite[SPRITE.DOOR_WOOD_OPEN] = [];\r\n    sprite[SPRITE.DOOR_WOOD_OPEN][SPRITE.DAY] = CTI(create_door_wood(scale * 1, false, [\"#133a2b\", \"#133a2b\", \"#1a4935\", \"#1a4935\", \"#133a2b\", \"#1a4935\"]));\r\n    sprite[SPRITE.DOOR_WOOD_OPEN][SPRITE.NIGHT] = CTI(create_door_wood(scale * 1, false, [\"#042b30\", \"#042b30\", \"#0b342b\", \"#0b342b\", \"#042b30\", \"#0b342b\"]));\r\n    sprite[SPRITE.DOOR_STONE_CLOSE] = [];\r\n    sprite[SPRITE.DOOR_STONE_CLOSE][SPRITE.DAY] = CTI(create_door_stone(scale * 1.5, true, [\"#0d1b1c\", \"#6a7570\", \"#939995\", \"#9baaa3\", \"#8a938e\", \"#adbcb5\"]));\r\n    sprite[SPRITE.DOOR_STONE_CLOSE][SPRITE.NIGHT] = CTI(create_door_stone(scale * 1.5, true, [\"#030d14\", \"#163a3a\", \"#214c4b\", \"#1f4948\", \"#164542\", \"#295957\"]));\r\n    sprite[SPRITE.DOOR_STONE_OPEN] = [];\r\n    sprite[SPRITE.DOOR_STONE_OPEN][SPRITE.DAY] = CTI(create_door_stone(scale * 1, false, [\"#133a2b\", \"#133a2b\", \"#1a4935\", \"#1a4935\", \"#133a2b\", \"#1a4935\"]));\r\n    sprite[SPRITE.DOOR_STONE_OPEN][SPRITE.NIGHT] = CTI(create_door_stone(scale * 1, false, [\"#032428\", \"#032428\", \"#07393d\", \"#07393d\", \"#032428\", \"#07393d\"]));\r\n    sprite[SPRITE.DOOR_AMETHYST_CLOSE] = [];\r\n    sprite[SPRITE.DOOR_AMETHYST_CLOSE][SPRITE.DAY] = CTI(create_door_stone(scale * 1.5, true, [\"#0d1b1c\", \"#b15ecf\", \"#8c29aa\", \"#c26de0\", \"#af59cd\", \"#d588f1\"]));\r\n    sprite[SPRITE.DOOR_AMETHYST_CLOSE][SPRITE.NIGHT] = CTI(create_door_stone(scale * 1.5, true, [\"#030d14\", \"#8359d3\", \"#764eb5\", \"#8f65de\", \"#7f55cc\", \"#9d77e6\"]));\r\n    sprite[SPRITE.DOOR_AMETHYST_OPEN] = [];\r\n    sprite[SPRITE.DOOR_AMETHYST_OPEN][SPRITE.DAY] = CTI(create_door_stone(scale * 1, false, [\"#133a2b\", \"#133a2b\", \"#1a4935\", \"#1a4935\", \"#133a2b\", \"#1a4935\"]));\r\n    sprite[SPRITE.DOOR_AMETHYST_OPEN][SPRITE.NIGHT] = CTI(create_door_stone(scale * 1, false, [\"#032428\", \"#032428\", \"#07393d\", \"#07393d\", \"#032428\", \"#07393d\"]));\r\n    sprite[SPRITE.DOOR_GOLD_CLOSE] = [];\r\n    sprite[SPRITE.DOOR_GOLD_CLOSE][SPRITE.DAY] = CTI(create_door_gold(scale * 1.5, true, [\"#0d1b1c\", \"#877d36\", \"#a08f47\", \"#a7983c\", \"#9a8636\", \"#c1b06b\"]));\r\n    sprite[SPRITE.DOOR_GOLD_CLOSE][SPRITE.NIGHT] = CTI(create_door_gold(scale * 1.5, true, [\"#030d14\", \"#1f4948\", \"#215e55\", \"#1f6058\", \"#1f605c\", \"#2c7a70\"]));\r\n    sprite[SPRITE.DOOR_GOLD_OPEN] = [];\r\n    sprite[SPRITE.DOOR_GOLD_OPEN][SPRITE.DAY] = CTI(create_door_gold(scale * 1, false, [\"#133a2b\", \"#133a2b\", \"#1a4935\", \"#1a4935\", \"#133a2b\", \"#1a4935\"]));\r\n    sprite[SPRITE.DOOR_GOLD_OPEN][SPRITE.NIGHT] = CTI(create_door_gold(scale * 1, false, [\"#032428\", \"#032428\", \"#07393d\", \"#07393d\", \"#032428\", \"#07393d\"]));\r\n    sprite[SPRITE.DOOR_DIAMOND_CLOSE] = [];\r\n    sprite[SPRITE.DOOR_DIAMOND_CLOSE][SPRITE.DAY] = CTI(create_door_diamond(scale * 1.5, true, [\"#0d1b1c\", \"#5cc5ce\", \"#89d1d4\", \"#86d0d1\", \"#95d5d8\", \"#e0f2f6\", \"#b3e0e3\"]));\r\n    sprite[SPRITE.DOOR_DIAMOND_CLOSE][SPRITE.NIGHT] = CTI(create_door_diamond(scale * 1.5, true, [\"#030d14\", \"#2b9390\", \"#43b5af\", \"#43b5af\", \"#4bbcb4\", \"#83ddd4\", \"#59c9c0\"]));\r\n    sprite[SPRITE.DOOR_DIAMOND_OPEN] = [];\r\n    sprite[SPRITE.DOOR_DIAMOND_OPEN][SPRITE.DAY] = CTI(create_door_diamond(scale * 1, false, [\"#133a2b\", \"#133a2b\", \"#1a4935\", \"#1a4935\", \"#133a2b\", \"#1a4935\"]));\r\n    sprite[SPRITE.DOOR_DIAMOND_OPEN][SPRITE.NIGHT] = CTI(create_door_diamond(scale * 1, false, [\"#032428\", \"#032428\", \"#07393d\", \"#07393d\", \"#032428\", \"#07393d\"]));\r\n    sprite[SPRITE.CHEST] = [];\r\n    sprite[SPRITE.CHEST][SPRITE.DAY] = CTI(create_chest(scale * 0.5, true, [\"#133a2b\", \"#9e8838\", \"#c4a23a\", \"#4c3b19\", \"#614627\", \"#614627\", \"#614627\", \"#c4a23a\", \"#c4a23a\", \"#c4a23a\"]));\r\n    sprite[SPRITE.CHEST][SPRITE.NIGHT] = CTI(create_chest(scale * 0.5, true, [\"#032428\", \"#266161\", \"#2b6664\", \"#123335\", \"#1f5453\", \"#1f5453\", \"#1f5453\", \"#2b6664\", \"#2b6664\", \"#2b6664\"]));\r\n    sprite[SPRITE.TREASURE_CHEST] = [];\r\n    sprite[SPRITE.TREASURE_CHEST][SPRITE.DAY] = CTI(create_treasure_chest(scale * 0.5, [\"#133a2b\", \"#9e8838\", \"#c4a23a\", \"#4c3b19\", \"#614627\"]));\r\n    sprite[SPRITE.TREASURE_CHEST][SPRITE.NIGHT] = CTI(create_treasure_chest(scale * 0.5, [\"#032428\", \"#266161\", \"#2b6664\", \"#123335\", \"#1f5453\"]));\r\n    sprite[SPRITE.RABBIT] = [];\r\n    sprite[SPRITE.RABBIT][SPRITE.DAY] = CTI(create_rabbit(scale * 0.9, [\"#0e3022\", \"#ee97bf\", \"#FFFFFF\", \"#000000\", \"#ffffff\"]));\r\n    sprite[SPRITE.RABBIT][SPRITE.NIGHT] = CTI(create_rabbit(scale * 0.9, [\"#030d14\", \"#4d1b59\", \"#5d3f77\", \"#220e26\", \"#ffffff\"]));\r\n    sprite[SPRITE.SPIDER] = [];\r\n    sprite[SPRITE.SPIDER][SPRITE.DAY] = CTI(create_rotated_img(Math.PI, create_spider(scale * 0.9, [\"#000000\", \"#b7252c\", \"#b7252c\", \"#b7252c\", \"#FFFFFF\", \"#000000\"])));\r\n    sprite[SPRITE.SPIDER][SPRITE.NIGHT] = CTI(create_rotated_img(Math.PI, create_spider(scale * 0.9, [\"#030d14\", \"#401d49\", \"#b7252c\", \"#401d49\", \"#FFFFFF\", \"#000000\"])));\r\n    sprite[SPRITE.WEB] = CTI(create_web(scale * 0.6, [\"#FFFFFF\"]));\r\n    sprite[SPRITE.WOLF] = [];\r\n    sprite[SPRITE.WOLF][SPRITE.DAY] = CTI(create_wolf(scale * 1.1, [\"#0e3022\", \"#231f20\", \"#b7252c\", \"#7d7679\", \"#ffffff\"]));\r\n    sprite[SPRITE.WOLF][SPRITE.NIGHT] = CTI(create_wolf(scale * 1.1, [\"#030d14\", \"#1e181c\", \"#462966\", \"#3e3e4a\", \"#ffffff\"]));\r\n    sprite[SPRITE.EARMUFFS] = [];\r\n    sprite[SPRITE.EARMUFFS][SPRITE.DAY] = CTI(create_earmuff(scale * 0.6, true, [\"#f9efeb\", \"#dfd1cb\", \"#3e3c25\", \"#4d4a2e\"]));\r\n    sprite[SPRITE.EARMUFFS][SPRITE.NIGHT] = CTI(create_earmuff(scale * 0.6, true, [\"#478e8b\", \"#327e73\", \"#073030\", \"#08403f\"]));\r\n    sprite[SPRITE.COAT] = [];\r\n    sprite[SPRITE.COAT][SPRITE.DAY] = CTI(create_coat(scale * 0.6, true, [\"#3e3c25\", \"#4d4a2e\", \"#f9efeb\", \"#dfd1cb\"]));\r\n    sprite[SPRITE.COAT][SPRITE.NIGHT] = CTI(create_coat(scale * 0.6, true, [\"#073030\", \"#08403f\", \"#478e8b\", \"#327e73\"]));\r\n    sprite[SPRITE.CAP_SCARF] = [];\r\n    sprite[SPRITE.CAP_SCARF][SPRITE.DAY] = CTI(create_cap_scarf(scale * 0.63, true, [\"#171a19\", \"#dee7e7\", \"#b8cccb\", \"#ffffff\", \"#e3e8e8\"]));\r\n    sprite[SPRITE.CAP_SCARF][SPRITE.NIGHT] = CTI(create_cap_scarf(scale * 0.63, true, [\"#073030\", \"#368981\", \"#1c635e\", \"#7bbab4\", \"#469e95\"]));\r\n    sprite[SPRITE.CHRISTMAS_HAT] = [];\r\n    sprite[SPRITE.CHRISTMAS_HAT][SPRITE.DAY] = CTI(create_christmas_hat(scale * 0.6, true, [\"#171a19\", \"#c5232c\", \"#84191d\", \"#a72027\", \"#fef4f4\", \"#e9dad9\"]));\r\n    sprite[SPRITE.CHRISTMAS_HAT][SPRITE.NIGHT] = CTI(create_christmas_hat(scale * 0.6, true, [\"#073030\", \"#392966\", \"#2a194f\", \"#433379\", \"#66aaa3\", \"#469e95\"]));\r\n    sprite[SPRITE.ELF_HAT] = [];\r\n    sprite[SPRITE.ELF_HAT][SPRITE.DAY] = CTI(create_elf_hat(scale * 0.6, true, [\"#171a19\", \"#0f964c\", \"#106e3b\", \"#138344\", \"#fef4f4\", \"#e9dad9\", \"#C5232C\", \"#A92D2D\"]));\r\n    sprite[SPRITE.ELF_HAT][SPRITE.NIGHT] = CTI(create_elf_hat(scale * 0.6, true, [\"#073030\", \"#124949\", \"#0e3838\", \"#15514f\", \"#66aaa3\", \"#469e95\", \"#292f66\", \"#202559\"]));\r\n    sprite[SPRITE.BREAD_OVEN_ON] = [];\r\n    sprite[SPRITE.BREAD_OVEN_ON][SPRITE.DAY] = CTI(create_bread_oven(scale * 0.42, true, [\"#0d1b1c\", \"#515C57\", \"#3A4942\", \"#68736F\", \"#C1C0C0\", \"#be8d50\", \"#7d5234\", \"#222825\", \"#4D5752\", \"#e48727\", \"#d4a872\", \"#343d39\"]));\r\n    sprite[SPRITE.BREAD_OVEN_ON][SPRITE.NIGHT] = CTI(create_bread_oven(scale * 0.42, true, [\"#0d1b1c\", \"#485E66\", \"#1F343F\", \"#60757D\", \"#C1C0C0\", \"#be8d50\", \"#7d5234\", \"#1F343F\", \"#344B51\", \"#D8E57F\", \"#dfa64e\", \"#192225\"]));\r\n    sprite[SPRITE.BREAD_LIGHT_UP] = [];\r\n    sprite[SPRITE.BREAD_LIGHT_UP][SPRITE.DAY] = CTI(create_bread_light_up(scale * 0.9, [\"#e4c027\"]));\r\n    sprite[SPRITE.BREAD_LIGHT_UP][SPRITE.NIGHT] = CTI(create_bread_light_up(scale * 0.9, [\"#D8E57F\"]));\r\n    sprite[SPRITE.BREAD_OVEN_OFF] = [];\r\n    sprite[SPRITE.BREAD_OVEN_OFF][SPRITE.DAY] = CTI(create_bread_oven_off(scale * 0.42, true, [\"#0d1b1c\", \"#515C57\", \"#3A4942\", \"#68736F\", \"#C1C0C0\", \"#be8d50\", \"#7d5234\", \"#222825\", \"#4D5752\", \"#e48727\", \"#d4a872\", \"#232a27\"]));\r\n    sprite[SPRITE.BREAD_OVEN_OFF][SPRITE.NIGHT] = CTI(create_bread_oven_off(scale * 0.42, true, [\"#0d1b1c\", \"#485E66\", \"#1F343F\", \"#60757D\", \"#C1C0C0\", \"#be8d50\", \"#7d5234\", \"#1F343F\", \"#344B51\", \"#D8E57F\", \"#dfa64e\", \"#1b2529\"]));\r\n    sprite[SPRITE.BREAD_OVEN_UI] = CTI(create_bread_oven_ui(scale * 1, [\"#596560\", \"#394841\", \"#543B1C\", \"#694D28\", \"#7E8A85\", \"#384740\", \"#525956\"]));\r\n    sprite[SPRITE.FURNACE_ON] = [];\r\n    sprite[SPRITE.FURNACE_ON][SPRITE.DAY] = CTI(create_furnace_on(scale * 0.5, true, [\"#0d1b1c\", \"#939393\", \"#5f6061\", \"#c0c0c0\", \"#ffad22\", \"#fffdd5\", \"#fee764\"]));\r\n    sprite[SPRITE.FURNACE_ON][SPRITE.NIGHT] = CTI(create_furnace_on(scale * 0.5, true, [\"#0d1b1c\", \"#485e66\", \"#1f343f\", \"#60757d\", \"#ffdc73\", \"#fffce2\", \"#fef259\"]));\r\n    sprite[SPRITE.FURNACE_OFF] = [];\r\n    sprite[SPRITE.FURNACE_OFF][SPRITE.DAY] = CTI(create_furnace_off(scale * 0.5, true, [\"#0d1b1c\", \"#939393\", \"#5f6061\", \"#c0c0c0\", \"#4f4f4f\", \"#6c6c6c\", \"#454545\"]));\r\n    sprite[SPRITE.FURNACE_OFF][SPRITE.NIGHT] = CTI(create_furnace_off(scale * 0.5, true, [\"#0d1b1c\", \"#485e66\", \"#1f343f\", \"#60757d\", \"#152229\", \"#0c1113\", \"#0c1113\"]));\r\n    sprite[SPRITE.FURNACE_SLOT] = CTI(create_furnace_slot(scale * 0.8, true, [\"#5f6061\", \"#939393\"]));\r\n    sprite[SPRITE.FURNACE_BUTTON] = create_craft_button(1, [{f: create_wood_fire, x: 0, y: 0, a: 1, r: Math.PI / 2.5, c: [\"#4d2d14\", \"#432516\"]}], 0.3, [\"#494949\", \"#5b5858\", \"#3d3b3b\"], 1);\r\n    sprite[SPRITE.BED] = [];\r\n    sprite[SPRITE.BED][SPRITE.DAY] = CTI(create_bed(scale * 1, true, [\"#0d1b1c\", \"#554139\", \"#3f332a\", \"#261912\", \"#eee6c5\", \"#d1c599\", \"#554139\", \"#3f332a\", \"#86509b\", \"#703a99\"]));\r\n    sprite[SPRITE.BED][SPRITE.NIGHT] = CTI(create_bed(scale * 1, true, [\"#0d1b1c\", \"#0b3432\", \"#092b29\", \"#052120\", \"#104d5b\", \"#0b424f\", \"#0b3432\", \"#092b29\", \"#2b0b4a\", \"#23073e\"]));\r\n    sprite[SPRITE.BED_TOP] = [];\r\n    sprite[SPRITE.BED_TOP][SPRITE.DAY] = CTI(create_bed_top(scale * 1, true, [\"#0d1b1c\", \"#554139\", \"#3f332a\", \"#261912\", \"#eee6c5\", \"#d1c599\", \"#554139\", \"#3f332a\", \"#86509b\", \"#703a99\"]));\r\n    sprite[SPRITE.BED_TOP][SPRITE.NIGHT] = CTI(create_bed_top(scale * 1, true, [\"#0d1b1c\", \"#0b3432\", \"#092b29\", \"#052120\", \"#104d5b\", \"#083b37\", \"#0b3432\", \"#092b29\", \"#2b0b4a\", \"#23073e\"]));\r\n    sprite[SPRITE.CRAB_SPEAR] = [];\r\n    sprite[SPRITE.CRAB_SPEAR][SPRITE.DAY] = CTI(create_rotated_img(3, create_crab_spear(scale * 0.7, true, [\"#0d1b1c\", \"#58452b\", \"#47341d\", \"#ee593d\", \"#c04933\", \"#c04933\", \"#a33e2b\", \"#c3be9a\", \"#7f6d52\"])));\r\n    sprite[SPRITE.CRAB_SPEAR][SPRITE.NIGHT] = CTI(create_rotated_img(3, create_crab_spear(scale * 0.7, true, [\"#0d1b1c\", \"#0b3432\", \"#092b29\", \"#34255d\", \"#281b4e\", \"#2f2157\", \"#281b4e\", \"#104d5b\", \"#083b37\"])));\r\n    sprite[SPRITE.WOOD_SPEAR] = [];\r\n    sprite[SPRITE.WOOD_SPEAR][SPRITE.DAY] = CTI(create_rotated_img(3, create_wood_spear(scale * 0.7, true, [\"#0d1b1c\", \"#58452b\", \"#47341d\", \"#765d42\", \"#c3be9a\", \"#7f6d52\"])));\r\n    sprite[SPRITE.WOOD_SPEAR][SPRITE.NIGHT] = CTI(create_rotated_img(3, create_wood_spear(scale * 0.7, true, [\"#0d1b1c\", \"#0b3432\", \"#092b29\", \"#0e4d49\", \"#1a6c67\", \"#07322f\"])));\r\n    sprite[SPRITE.SPEAR] = [];\r\n    sprite[SPRITE.SPEAR][SPRITE.DAY] = CTI(create_rotated_img(3, create_stonespear(scale * 0.65, true, [\"#0d1b1c\", \"#4d2d14\", \"#432516\", \"#c3be9a\", \"#7f6d52\", \"#7a7575\", \"#454749\", \"#8c8787\", \"#939393\", \"#5f6061\", \"#aaa6a6\"])));\r\n    sprite[SPRITE.SPEAR][SPRITE.NIGHT] = CTI(create_rotated_img(3, create_stonespear(scale * 0.65, true, [\"#0d1b1c\", \"#0d2e33\", \"#0b2326\", \"#1a6c67\", \"#07322f\", \"#374950\", \"#101f26\", \"#2c3c42\", \"#485e66\", \"#1f343f\", \"#546e78\"])));\r\n    sprite[SPRITE.GOLD_SPEAR] = [];\r\n    sprite[SPRITE.GOLD_SPEAR][SPRITE.DAY] = CTI(create_rotated_img(3, create_goldspear(scale * 0.67, true, [\"#0d1b1c\", \"#493e26\", \"#382e19\", \"#a69e39\", \"#9c8828\", \"#bab143\", \"#c4bc51\", \"#b29c32\", \"#d2ca59\"])));\r\n    sprite[SPRITE.GOLD_SPEAR][SPRITE.NIGHT] = CTI(create_rotated_img(3, create_goldspear(scale * 0.67, true, [\"#030d14\", \"#263947\", \"#182935\", \"#33916d\", \"#197c62\", \"#3eab81\", \"#43aa82\", \"#29997c\", \"#52be94\"])));\r\n    sprite[SPRITE.DIAMOND_SPEAR] = [];\r\n    sprite[SPRITE.DIAMOND_SPEAR][SPRITE.DAY] = CTI(create_rotated_img(3, create_diamondspear(scale * 0.67, true, [\"#0d1b1c\", \"#262114\", \"#211108\", \"#4ba8b4\", \"#198a82\", \"#6ccad7\", \"#63c9d6\", \"#29aaa1\", \"#7bd9e6\"])));\r\n    sprite[SPRITE.DIAMOND_SPEAR][SPRITE.NIGHT] = CTI(create_rotated_img(3, create_diamondspear(scale * 0.67, true, [\"#0d1b1c\", \"#111316\", \"#0a0b0c\", \"#4bbbc3\", \"#23a19d\", \"#54c5cd\", \"#4ad2ce\", \"#3dc4c0\", \"#73dde5\"])));\r\n    sprite[SPRITE.AMETHYST_SPEAR] = [];\r\n    sprite[SPRITE.AMETHYST_SPEAR][SPRITE.DAY] = CTI(create_rotated_img(3, create_amespear(scale * 0.67, true, [\"#0d1b1c\", \"#262114\", \"#211108\", \"#9443b1\", \"#6f1988\", \"#a752c6\", \"#9e35be\", \"#8c29aa\", \"#b864d6\"])));\r\n    sprite[SPRITE.AMETHYST_SPEAR][SPRITE.NIGHT] = CTI(create_rotated_img(3, create_amespear(scale * 0.67, true, [\"#0d1b1c\", \"#111316\", \"#0a0b0c\", \"#6e43bf\", \"#673fa4\", \"#784bcc\", \"#845bc6\", \"#764eb5\", \"#966be7\"])));\r\n    sprite[SPRITE.DRAGON_SPEAR] = [];\r\n    sprite[SPRITE.DRAGON_SPEAR][SPRITE.DAY] = CTI(create_rotated_img(3, create_dragon_spear(scale * 1, true, [\"#0d1b1c\", \"#1e2b34\", \"#151c24\", \"#99d7dd\", \"#7dcbd1\", \"#c6e8eb\", \"#aadee8\", \"#b7e2e5\"])));\r\n    sprite[SPRITE.DRAGON_SPEAR][SPRITE.NIGHT] = CTI(create_rotated_img(3, create_dragon_spear(scale * 1, true, [\"#0d1b1c\", \"#1c2026\", \"#0a0b0c\", \"#7dc6d9\", \"#6cbacf\", \"#87d2e6\", \"#49b2cf\", \"#87d2e6\"])));\r\n    sprite[SPRITE.HAMMER] = [];\r\n    sprite[SPRITE.HAMMER][SPRITE.DAY] = CTI(create_rotated_img(3, create_hammer(scale * 1, true, [\"#0d1b1c\", \"#4d2d14\", \"#432516\", \"#939393\", \"#5f6061\"])));\r\n    sprite[SPRITE.HAMMER][SPRITE.NIGHT] = CTI(create_rotated_img(3, create_hammer(scale * 1, true, [\"#030d14\", \"#263947\", \"#182935\", \"#485e66\", \"#1f343f\"])));\r\n    sprite[SPRITE.SPANNER] = [];\r\n    sprite[SPRITE.SPANNER][SPRITE.DAY] = CTI(create_rotated_img(3, create_spanner(scale * 0.5, true, [\"#0d1b1c\", \"#939393\", \"#5f6061\"])));\r\n    sprite[SPRITE.SPANNER][SPRITE.NIGHT] = CTI(create_rotated_img(3, create_spanner(scale * 0.5, true, [\"#030d14\", \"#485e66\", \"#1f343f\"])));\r\n    sprite[SPRITE.SUPER_HAMMER] = [];\r\n    sprite[SPRITE.SUPER_HAMMER][SPRITE.DAY] = CTI(create_rotated_img(3, create_superhammer(scale * 1, true, [\"#0d1b1c\", \"#9b5927\", \"#7a3610\", \"#1e0302\", \"#0d825b\", \"#6bd16e\", \"#17915d\", \"#89e5aa\", \"#16935d\", \"#a0efc4\", \"#28b26d\", \"#cdf4cb\"])));\r\n    sprite[SPRITE.SUPER_HAMMER][SPRITE.NIGHT] = CTI(create_rotated_img(3, create_superhammer(scale * 1, true, [\"#0d1b1c\", \"#2a4f4a\", \"#1e423d\", \"#1e0302\", \"#096b3f\", \"#3db76f\", \"#118254\", \"#40c696\", \"#0c7a50\", \"#59d8a4\", \"#249376\", \"#80d8c7\"])));\r\n    sprite[SPRITE.HAMMER_GOLD] = [];\r\n    sprite[SPRITE.HAMMER_GOLD][SPRITE.DAY] = CTI(create_rotated_img(3, create_hammer(scale * 1, true, [\"#0d1b1c\", \"#493e26\", \"#382e19\", \"#c4bc51\", \"#b29c32\"])));\r\n    sprite[SPRITE.HAMMER_GOLD][SPRITE.NIGHT] = CTI(create_rotated_img(3, create_hammer(scale * 1, true, [\"#0d1b1c\", \"#0d2e33\", \"#0b2326\", \"#43aa82\", \"#29997c\"])));\r\n    sprite[SPRITE.HAMMER_DIAMOND] = [];\r\n    sprite[SPRITE.HAMMER_DIAMOND][SPRITE.DAY] = CTI(create_rotated_img(3, create_hammer(scale * 1, true, [\"#0d1b1c\", \"#262114\", \"#211108\", \"#63c9d6\", \"#29aaa1\"])));\r\n    sprite[SPRITE.HAMMER_DIAMOND][SPRITE.NIGHT] = CTI(create_rotated_img(3, create_hammer(scale * 1, true, [\"#0d1b1c\", \"#111316\", \"#0a0b0c\", \"#73dde5\", \"#3dc4c0\"])));\r\n    sprite[SPRITE.HAMMER_AMETHYST] = [];\r\n    sprite[SPRITE.HAMMER_AMETHYST][SPRITE.DAY] = CTI(create_rotated_img(3, create_hammer(scale * 1, true, [\"#0d1b1c\", \"#262114\", \"#211108\", \"#b864d6\", \"#8c29aa\"])));\r\n    sprite[SPRITE.HAMMER_AMETHYST][SPRITE.NIGHT] = CTI(create_rotated_img(3, create_hammer(scale * 1, true, [\"#0d1b1c\", \"#111316\", \"#0a0b0c\", \"#8359d3\", \"#764eb5\"])));\r\n    sprite[SPRITE.LOCK] = [];\r\n    sprite[SPRITE.LOCK][SPRITE.DAY] = CTI(create_lock(scale * 0.55, false, [\"#141414\", \"#816511\", \"#c4a23a\", \"#3a3a3a\"]));\r\n    sprite[SPRITE.LOCK][SPRITE.NIGHT] = CTI(create_lock(scale * 0.55, false, [\"#080707\", \"#133d3c\", \"#2b6664\", \"#1b2529\"]));\r\n    sprite[SPRITE.PADLOCK] = [];\r\n    sprite[SPRITE.PADLOCK].push(CTI(create_lock(scale * 0.8, false, [\"#141414\", \"#816511\", \"#c4a23a\", \"#3a3a3a\"])));\r\n    sprite[SPRITE.PADLOCK].push(CTI(create_lock(scale * 0.8, false, [\"#141414\", \"#9f7d17\", \"#dab33c\", \"#474545\"])));\r\n    sprite[SPRITE.PADLOCK].push(CTI(create_lock(scale * 0.8, false, [\"#141414\", \"#73590d\", \"#a88a2c\", \"#2a2828\"])));\r\n    sprite[SPRITE.LOCKED] = [];\r\n    sprite[SPRITE.LOCKED].push(sprite[SPRITE.PADLOCK][0]);\r\n    sprite[SPRITE.LOCKED].push(sprite[SPRITE.PADLOCK][0]);\r\n    sprite[SPRITE.LOCKED].push(sprite[SPRITE.PADLOCK][0]);\r\n    sprite[SPRITE.LOCKPICK] = [];\r\n    sprite[SPRITE.LOCKPICK][SPRITE.DAY] = CTI(create_lockpick(scale * 0.06, false, [\"#141414\", \"#c4a23a\", \"#816511\"]));\r\n    sprite[SPRITE.LOCKPICK][SPRITE.NIGHT] = CTI(create_lockpick(scale * 0.06, false, [\"#030d14\", \"#2b6664\", \"#133d3c\"]));\r\n    sprite[SPRITE.KEY] = [];\r\n    sprite[SPRITE.KEY].push(CTI(create_lockpick(scale * 0.08, false, [\"#141414\", \"#c4a23a\", \"#816511\"])));\r\n    sprite[SPRITE.KEY].push(CTI(create_lockpick(scale * 0.08, false, [\"#141414\", \"#e2bd4e\", \"#a38018\"])));\r\n    sprite[SPRITE.KEY].push(CTI(create_lockpick(scale * 0.08, false, [\"#141414\", \"#b0902e\", \"#634d09\"])));\r\n    sprite[SPRITE.DRAGON_HEART] = create_craft_button(1.5, [{f: create_dragon_heart, x: 0, y: 0, a: 1, r: 0, c: [\"#141414\", \"#178a99\", \"#0a6372\", \"#03282e\"]}], 0.45, [\"#5bbcc9\", \"#73d2df\", \"#4daab6\"], 0.9);\r\n    sprite[SPRITE.RESURRECTION_GROUND] = [];\r\n    sprite[SPRITE.RESURRECTION_GROUND][SPRITE.DAY] = CTI(create_resurrection_ground(scale * 0.8, true, [\"#347f93\", \"#54a4ba\"]));\r\n    sprite[SPRITE.RESURRECTION_GROUND][SPRITE.NIGHT] = CTI(create_resurrection_ground(scale * 0.8, true, [\"#98ede3\", \"#94f2e7\"]));\r\n    sprite[SPRITE.RESURRECTION_HOLE] = [];\r\n    sprite[SPRITE.RESURRECTION_HOLE][SPRITE.DAY] = CTI(create_resurrection_hole(scale * 0.8, true, [\"#a9e4ed\", \"#86d4e0\", \"#418ba5\", \"#59b8ce\"]));\r\n    sprite[SPRITE.RESURRECTION_HOLE][SPRITE.NIGHT] = CTI(create_resurrection_hole(scale * 0.8, true, [\"#59c9c0\", \"#83ddd4\", \"#3fa097\", \"#90ddd9\"]));\r\n    sprite[SPRITE.RESURRECTION_ROTATE] = [];\r\n    sprite[SPRITE.RESURRECTION_ROTATE][SPRITE.DAY] = CTI(create_resurrection_rotate(scale * 0.8, true, [\"#a9e4ed\", \"#86d4e0\"]));\r\n    sprite[SPRITE.RESURRECTION_ROTATE][SPRITE.NIGHT] = CTI(create_resurrection_rotate(scale * 0.8, true, [\"#83ddd4\", \"#485e66\"]));\r\n    sprite[SPRITE.RESURRECTION] = [];\r\n    sprite[SPRITE.RESURRECTION][SPRITE.DAY] = CTI(create_resurrection(scale * 0.8, true, [\"#347f93\", \"#54a4ba\", \"#1c2528\", \"#a9e4ed\", \"#86d4e0\", \"#959da0\", \"#697072\", \"#929da0\", \"#afb9bc\"]));\r\n    sprite[SPRITE.RESURRECTION][SPRITE.NIGHT] = CTI(create_resurrection(scale * 0.8, true, [\"#98ede3\", \"#94f2e7\", \"#1f343f\", \"#59c9c0\", \"#83ddd4\", \"#485e66\", \"#2d484f\", \"#546d6d\", \"#597b84\"]));\r\n    sprite[SPRITE.EMERALD_MACHINE_GROUND] = [];\r\n    sprite[SPRITE.EMERALD_MACHINE_GROUND][SPRITE.DAY] = IMAGES.EMERALD_MACHINE_GROUNDD;\r\n    sprite[SPRITE.EMERALD_MACHINE_GROUND][SPRITE.NIGHT] = IMAGES.EMERALD_MACHINE_GROUNDN;\r\n    sprite[SPRITE.EMERALD_MACHINE_HOLE] = [];\r\n    sprite[SPRITE.EMERALD_MACHINE_HOLE][SPRITE.DAY] = IMAGES.EMERALD_MACHINE_HOLED;\r\n    sprite[SPRITE.EMERALD_MACHINE_HOLE][SPRITE.NIGHT] = IMAGES.EMERALD_MACHINE_HOLEN;\r\n    sprite[SPRITE.EMERALD_MACHINE_ROTATE] = [];\r\n    sprite[SPRITE.EMERALD_MACHINE_ROTATE][SPRITE.DAY] = IMAGES.EMERALD_MACHINE_ROTATED;\r\n    sprite[SPRITE.EMERALD_MACHINE_ROTATE][SPRITE.NIGHT] = IMAGES.EMERALD_MACHINE_ROTATEN;\r\n    sprite[SPRITE.EMERALD_MACHINE] = [];\r\n    sprite[SPRITE.EMERALD_MACHINE][SPRITE.DAY] = IMAGES.EMERALD_MACHINED;\r\n    sprite[SPRITE.EMERALD_MACHINE][SPRITE.NIGHT] = IMAGES.EMERALD_MACHINEN;\r\n    sprite[SPRITE.EXTRACTOR_MACHINE0_STONE] = [];\r\n    sprite[SPRITE.EXTRACTOR_MACHINE0_STONE][SPRITE.DAY] = IMAGES.EXTRACTOR_MACHINE0_STONED;\r\n    sprite[SPRITE.EXTRACTOR_MACHINE0_STONE][SPRITE.NIGHT] = IMAGES.EXTRACTOR_MACHINE0_STONEN;\r\n    sprite[SPRITE.EXTRACTOR_MACHINE_STONE] = [];\r\n    sprite[SPRITE.EXTRACTOR_MACHINE_STONE][SPRITE.DAY] = IMAGES.EXTRACTOR_MACHINE_STONED;\r\n    sprite[SPRITE.EXTRACTOR_MACHINE_STONE][SPRITE.NIGHT] = IMAGES.EXTRACTOR_MACHINE_STONEN;\r\n    sprite[SPRITE.EXTRACTOR_MACHINE0_GOLD] = [];\r\n    sprite[SPRITE.EXTRACTOR_MACHINE0_GOLD][SPRITE.DAY] = IMAGES.EXTRACTOR_MACHINE0_GOLDD;\r\n    sprite[SPRITE.EXTRACTOR_MACHINE0_GOLD][SPRITE.NIGHT] = IMAGES.EXTRACTOR_MACHINE0_GOLDN;\r\n    sprite[SPRITE.EXTRACTOR_MACHINE_GOLD] = [];\r\n    sprite[SPRITE.EXTRACTOR_MACHINE_GOLD][SPRITE.DAY] = IMAGES.EXTRACTOR_MACHINE_GOLDD;\r\n    sprite[SPRITE.EXTRACTOR_MACHINE_GOLD][SPRITE.NIGHT] = IMAGES.EXTRACTOR_MACHINE_GOLDN;\r\n    sprite[SPRITE.EXTRACTOR_MACHINE0_DIAMOND] = [];\r\n    sprite[SPRITE.EXTRACTOR_MACHINE0_DIAMOND][SPRITE.DAY] = IMAGES.EXTRACTOR_MACHINE0_DIAMONDD;\r\n    sprite[SPRITE.EXTRACTOR_MACHINE0_DIAMOND][SPRITE.NIGHT] = IMAGES.EXTRACTOR_MACHINE0_DIAMONDN;\r\n    sprite[SPRITE.EXTRACTOR_MACHINE_DIAMOND] = [];\r\n    sprite[SPRITE.EXTRACTOR_MACHINE_DIAMOND][SPRITE.DAY] = IMAGES.EXTRACTOR_MACHINE_DIAMONDD;\r\n    sprite[SPRITE.EXTRACTOR_MACHINE_DIAMOND][SPRITE.NIGHT] = IMAGES.EXTRACTOR_MACHINE_DIAMONDN;\r\n    sprite[SPRITE.EXTRACTOR_MACHINE0_AMETHYST] = [];\r\n    sprite[SPRITE.EXTRACTOR_MACHINE0_AMETHYST][SPRITE.DAY] = IMAGES.EXTRACTOR_MACHINE0_AMETHYSTD;\r\n    sprite[SPRITE.EXTRACTOR_MACHINE0_AMETHYST][SPRITE.NIGHT] = IMAGES.EXTRACTOR_MACHINE0_AMETHYSTN;\r\n    sprite[SPRITE.EXTRACTOR_MACHINE_AMETHYST] = [];\r\n    sprite[SPRITE.EXTRACTOR_MACHINE_AMETHYST][SPRITE.DAY] = IMAGES.EXTRACTOR_MACHINE_AMETHYSTD;\r\n    sprite[SPRITE.EXTRACTOR_MACHINE_AMETHYST][SPRITE.NIGHT] = IMAGES.EXTRACTOR_MACHINE_AMETHYSTN;\r\n    sprite[SPRITE.EXTRACTOR_MACHINE0_REIDITE] = [];\r\n    sprite[SPRITE.EXTRACTOR_MACHINE0_REIDITE][SPRITE.DAY] = IMAGES.EXTRACTOR_MACHINE0_REIDITED;\r\n    sprite[SPRITE.EXTRACTOR_MACHINE0_REIDITE][SPRITE.NIGHT] = IMAGES.EXTRACTOR_MACHINE0_REIDITEN;\r\n    sprite[SPRITE.EXTRACTOR_MACHINE_REIDITE] = [];\r\n    sprite[SPRITE.EXTRACTOR_MACHINE_REIDITE][SPRITE.DAY] = IMAGES.EXTRACTOR_MACHINE_REIDITED;\r\n    sprite[SPRITE.EXTRACTOR_MACHINE_REIDITE][SPRITE.NIGHT] = IMAGES.EXTRACTOR_MACHINE_REIDITEN;\r\n    sprite[SPRITE.FIREFLY] = [];\r\n    sprite[SPRITE.FIREFLY][SPRITE.DAY] = IMAGES.FIREFLYD;\r\n    sprite[SPRITE.FIREFLY][SPRITE.NIGHT] = IMAGES.FIREFLYN;\r\n    sprite[SPRITE.HURT_FIREFLY] = IMAGES.HURT_FIREFLY;\r\n    sprite[SPRITE.TOTEM] = [], sprite[SPRITE.TOTEM][SPRITE.DAY] = CTI(create_totem(scale * 0.75, true, [\"#0d1b1c\", \"#4c3a15\", \"#634828\", \"#564021\"]));\r\n    sprite[SPRITE.TOTEM][SPRITE.NIGHT] = CTI(create_totem(scale * 0.75, true, [\"#030d14\", \"#0d2e33\", \"#184747\", \"#123b3f\"]));\r\n    sprite[SPRITE.ICON_MEMBER] = CTI(create_icon_team(scale * 0.3, [\"#092813\", \"#1f773d\"], 0));\r\n    sprite[SPRITE.ICON_LEADER] = CTI(create_icon_team(scale * 0.3, [\"#092813\", \"#1f773d\"], 1));\r\n    sprite[SPRITE.VERIFIED] = CTI(create_verified(scale * 0.6, [\"#092813\", \"#1f773d\"]));\r\n    sprite[SPRITE.TEAM_BUTTON] = [];\r\n    sprite[SPRITE.TEAM_BUTTON].push(CTI(create_team_button(scale * 0.7, [\"#092813\", \"#1f773d\", \"#165b2b\", \"#4c3a15\", \"#1f773d\"], 0)));\r\n    sprite[SPRITE.TEAM_BUTTON].push(CTI(create_team_button(scale * 0.7, [\"#0b3719\", \"#228745\", \"#1a7034\", \"#614a1a\", \"#238845\"], 0)));\r\n    sprite[SPRITE.TEAM_BUTTON].push(CTI(create_team_button(scale * 0.7, [\"#092a14\", \"#186733\", \"#124a23\", \"#4c3a15\", \"#1b6735\"], 0)));\r\n    sprite[SPRITE.FULL_TEAM_BUTTON] = [];\r\n    var img = CTI(create_team_button(scale * 0.7, [\"#280e09\", \"#77371f\", \"#280e09\", \"#2e2410\", \"#77371f\"], 0));\r\n    sprite[SPRITE.FULL_TEAM_BUTTON].push(img);\r\n    sprite[SPRITE.FULL_TEAM_BUTTON].push(img);\r\n    sprite[SPRITE.FULL_TEAM_BUTTON].push(img);\r\n    sprite[SPRITE.MANAGE_TEAM_BUTTON] = [];\r\n    sprite[SPRITE.MANAGE_TEAM_BUTTON].push(CTI(create_team_button(scale * 0.7, [\"#092813\", \"#1f773d\", \"#165b2b\", \"#4c3a15\", \"#1f773d\"], 1)));\r\n    sprite[SPRITE.MANAGE_TEAM_BUTTON].push(CTI(create_team_button(scale * 0.7, [\"#0b3719\", \"#228745\", \"#1a7034\", \"#614a1a\", \"#238845\"], 1)));\r\n    sprite[SPRITE.MANAGE_TEAM_BUTTON].push(CTI(create_team_button(scale * 0.7, [\"#092a14\", \"#186733\", \"#124a23\", \"#4c3a15\", \"#1b6735\"], 1)));\r\n    sprite[SPRITE.DELAY_SPIKE] = CTI(create_spiketimer(scale * 0.3, [\"#FFFFFF\"]));\r\n    sprite[SPRITE.DELAY_WALL] = CTI(create_delay_wall(scale * 0.3, [\"#FFFFFF\"]));\r\n    sprite[SPRITE.DELAY_TEAM] = CTI(create_icon_team(scale * 0.4, [\"rgba(255, 255, 255, 0)\", \"#FFFFFF\"], 0));\r\n    sprite[SPRITE.DELAY_DRINK] = CTI(create_rotated_img(Math.PI / 5, create_drink_delay(scale * 0.2, [\"#FFFFFF\"])));\r\n    sprite[SPRITE.AMETHYST_HELMET] = [], sprite[SPRITE.AMETHYST_HELMET][SPRITE.DAY] = CTI(create_amethyst_helmet(scale * 0.85, true, [\"#0d1b1c\", \"#8c55b7\", \"#652d8e\", \"#79359e\", \"#5eccd1\", \"#4badad\", \"#9e6ac6\"]));\r\n    sprite[SPRITE.AMETHYST_HELMET][SPRITE.NIGHT] = CTI(create_amethyst_helmet(scale * 0.85, true, [\"#0d1b1c\", \"#4e4e93\", \"#393977\", \"#444187\", \"#2b9390\", \"#277a74\", \"#7da8db\"]));\r\n    sprite[SPRITE.SHOW_TEAM_BUTTON] = [];\r\n    sprite[SPRITE.SHOW_TEAM_BUTTON].push(CTI(create_team_button(scale * 0.7, [\"#280e09\", \"#77371f\", \"#280e09\", \"#2e2410\", \"#77371f\"], 1)));\r\n    sprite[SPRITE.SHOW_TEAM_BUTTON].push(CTI(create_team_button(scale * 0.7, [\"#38130C\", \"#853D22\", \"#391402\", \"#3D3016\", \"#873E22\"], 1)));\r\n    sprite[SPRITE.SHOW_TEAM_BUTTON].push(CTI(create_team_button(scale * 0.7, [\"#1C0A06\", \"#6B3019\", \"#1D0A06\", \"#251D0C\", \"#6A301A\"], 1)));\r\n    sprite[SPRITE.HOOD] = [], sprite[SPRITE.HOOD][SPRITE.DAY] = CTI(create_hood(scale * 0.37, true, [\"#2a2938\", \"#242330\", \"#313041\"]));\r\n    sprite[SPRITE.HOOD][SPRITE.NIGHT] = CTI(create_hood(scale * 0.37, true, [\"#1b1e30\", \"#161921\", \"#252f3e\"]));\r\n    sprite[SPRITE.WINTER_HOOD] = [], sprite[SPRITE.WINTER_HOOD][SPRITE.DAY] = CTI(create_winter_hood(scale * 0.17, true, [\"#2a2938\", \"#242330\", \"#313041\", \"#1b1a25\", \"#d62c0e\"]));\r\n    sprite[SPRITE.WINTER_HOOD][SPRITE.NIGHT] = CTI(create_winter_hood(scale * 0.17, true, [\"#1b1e30\", \"#161921\", \"#252f3e\", \"#0a0c11\", \"#d62c0e\"]));\r\n    sprite[SPRITE.WINTER_PEASANT] = [], sprite[SPRITE.WINTER_PEASANT][SPRITE.DAY] = CTI(create_peasant(scale * 0.55, true, [\"#1d1d22\", \"#e2e1e1\", \"#d2cbcb\", \"#cfcbc8\", \"#beb5b5\", \"#ada0a0\"], 1));\r\n    sprite[SPRITE.WINTER_PEASANT][SPRITE.NIGHT] = CTI(create_peasant(scale * 0.55, true, [\"#1d1d22\", \"#216661\", \"#134945\", \"#2b8079\", \"#17504c\"], 1));\r\n    sprite[SPRITE.PEASANT] = [], sprite[SPRITE.PEASANT][SPRITE.DAY] = CTI(create_peasant(scale * 0.55, true, [\"#1d1d22\", \"#8c7654\", \"#785f4c\", \"#a88e6c\", \"#785f4c\", \"#705845\"], 0));\r\n    sprite[SPRITE.PEASANT][SPRITE.NIGHT] = CTI(create_peasant(scale * 0.55, true, [\"#1d1d22\", \"#1b5752\", \"#0e3b37\", \"#23706a\", \"#11413e\", \"#0b322f\"], 0));\r\n    sprite[SPRITE.CROWN_GREEN] = [], sprite[SPRITE.CROWN_GREEN][SPRITE.DAY] = CTI(create_crown_life(scale * 0.2, true, [\"#0d1b1c\", \"#A5A244\", \"#D8DC74\", \"#C0BF55\", \"#49B669\", \"#19994C\", \"#71C187\"]));\r\n    sprite[SPRITE.CROWN_GREEN][SPRITE.NIGHT] = CTI(create_crown_life(scale * 0.2, true, [\"#2b7c57\", \"#114933\", \"#1b6656\", \"#1a7961\", \"#3db76f\", \"#118254\", \"#40c696\"]));\r\n    sprite[SPRITE.CROWN_ORANGE] = [], sprite[SPRITE.CROWN_ORANGE][SPRITE.DAY] = CTI(create_crown_life(scale * 0.2, true, [\"#0d1b1c\", \"#A5A244\", \"#D8DC74\", \"#C0BF55\", \"#C45727\", \"#994617\", \"#DB9358\"]));\r\n    sprite[SPRITE.CROWN_ORANGE][SPRITE.NIGHT] = CTI(create_crown_life(scale * 0.2, true, [\"#2b7c57\", \"#114933\", \"#1b6656\", \"#1a7961\", \"#69b681\", \"#509a75\", \"#7ec387\"]));\r\n    sprite[SPRITE.CROWN_BLUE] = [], sprite[SPRITE.CROWN_BLUE][SPRITE.DAY] = CTI(create_crown_life(scale * 0.2, true, [\"#0d1b1c\", \"#A5A244\", \"#D8DC74\", \"#C0BF55\", \"#2792C1\", \"#196599\", \"#59C0D8\"]));\r\n    sprite[SPRITE.CROWN_BLUE][SPRITE.NIGHT] = CTI(create_crown_life(scale * 0.2, true, [\"#2b7c57\", \"#114933\", \"#1b6656\", \"#1a7961\", \"#19899e\", \"#16688b\", \"#4ea3c7\"]));\r\n    sprite[SPRITE.CROWN_CRAB] = [], sprite[SPRITE.CROWN_CRAB][SPRITE.DAY] = CTI(create_crab_crown(scale * 0.24, true, [\"#000000\", \"#b03431\", \"#94312d\", \"#bd3c33\", \"#e45936\"]));\r\n    sprite[SPRITE.CROWN_CRAB][SPRITE.NIGHT] = CTI(create_crab_crown(scale * 0.24, true, [\"#000000\", \"#1b103e\", \"#190f3b\", \"#261a4e\", \"#34255d\"]));\r\n    sprite[SPRITE.DRAGON_HELMET] = [], sprite[SPRITE.DRAGON_HELMET][SPRITE.DAY] = CTI(create_dragon_helmet(scale * 0.32, true, [\"#0d1b1c\", \"#cae9eb\", \"#75bcae\", \"#ffffff\", \"#51736d\", \"#2b4d48\", \"#1b3a3a\", \"#80ccca\", \"#59ada7\"]));\r\n    sprite[SPRITE.DRAGON_HELMET][SPRITE.NIGHT] = CTI(create_dragon_helmet(scale * 0.32, true, [\"#0d1b1c\", \"#70c1d6\", \"#49b2cf\", \"#87cad9\", \"#367c93\", \"#113743\", \"#0c2c36\", \"#51a2b8\", \"#3a8ea4\"]));\r\n    sprite[SPRITE.DRAGON_SWORD] = [];\r\n    sprite[SPRITE.DRAGON_SWORD][SPRITE.DAY] = CTI(create_rotated_img(3, create_dragon_sword(scale * 0.9, true, [\"#0d1b1c\", \"#284c4a\", \"#193533\", \"#c8efef\", \"#7eccbb\"])));\r\n    sprite[SPRITE.DRAGON_SWORD][SPRITE.NIGHT] = CTI(create_rotated_img(3, create_dragon_sword(scale * 0.9, true, [\"#0d1b1c\", \"#18332e\", \"#112320\", \"#87d2e6\", \"#49b2cf\"])));\r\n    sprite[SPRITE.DRAGON_SWORD_HALO] = [];\r\n    sprite[SPRITE.DRAGON_SWORD_HALO][SPRITE.DAY] = CTI(create_rotated_img(3, create_dragon_sword(scale * 1, true, [undefined, undefined, undefined, \"#c8efef\", \"#c8efef\"])));\r\n    sprite[SPRITE.DRAGON_SWORD_HALO][SPRITE.NIGHT] = CTI(create_rotated_img(3, create_dragon_sword(scale * 1, true, [undefined, undefined, undefined, \"#87d2e6\", \"#87d2e6\"])));\r\n    sprite[SPRITE.QUEST_BUTTON] = [];\r\n    sprite[SPRITE.QUEST_BUTTON].push(CTI(create_quest_button(scale * 0.3, true, [\"#0d1b1c\", \"#392C16\", \"#5E3E1A\", \"#704821\", \"#654320\", \"#eda80d\"], 0)));\r\n    sprite[SPRITE.QUEST_BUTTON].push(CTI(create_quest_button(scale * 0.3, true, [\"#0d1b1c\", \"#392C16\", \"#5E3E1A\", \"#704821\", \"#654320\", \"#eda80d\"], 1)));\r\n    sprite[SPRITE.QUEST_BUTTON].push(CTI(create_quest_button(scale * 0.3, true, [\"#0d1b1c\", \"#392C16\", \"#5E3E1A\", \"#704821\", \"#654320\", \"#d7990c\"], 1)));\r\n    sprite[SPRITE.MARKET_BUTTON] = [];\r\n    sprite[SPRITE.MARKET_BUTTON].push(CTI(create_market_button(scale * 0.7, [\"#392C16\", \"#5E3E1A\", \"#85592c\", \"#eda80d\"], 0)));\r\n    sprite[SPRITE.MARKET_BUTTON].push(CTI(create_market_button(scale * 0.7, [\"#392C16\", \"#5E3E1A\", \"#85592c\", \"#eda80d\"], 1)));\r\n    sprite[SPRITE.MARKET_BUTTON].push(CTI(create_market_button(scale * 0.7, [\"#392C16\", \"#5E3E1A\", \"#85592c\", \"#eda80d\"], 1)));\r\n    sprite[SPRITE.SOUND_BUTTON_ON] = [];\r\n    sprite[SPRITE.SOUND_BUTTON_ON].push(CTI(create_music_button(scale * 0.4, [\"#0d1b1c\", \"#392C16\", \"#5E3E1A\", \"#eda80d\"], 0, 1)));\r\n    sprite[SPRITE.SOUND_BUTTON_ON].push(CTI(create_music_button(scale * 0.4, [\"#0d1b1c\", \"#392C16\", \"#5E3E1A\", \"#eda80d\"], 1, 1)));\r\n    sprite[SPRITE.SOUND_BUTTON_ON].push(CTI(create_music_button(scale * 0.4, [\"#0d1b1c\", \"#392C16\", \"#5E3E1A\", \"#d7990c\"], 1, 1)));\r\n    sprite[SPRITE.SOUND_BUTTON_OFF] = [];\r\n    sprite[SPRITE.SOUND_BUTTON_OFF].push(CTI(create_music_button(scale * 0.4, [\"#0d1b1c\", \"#392C16\", \"#5E3E1A\", \"#eda80d\"], 0, 0)));\r\n    sprite[SPRITE.SOUND_BUTTON_OFF].push(CTI(create_music_button(scale * 0.4, [\"#0d1b1c\", \"#392C16\", \"#5E3E1A\", \"#eda80d\"], 1, 0)));\r\n    sprite[SPRITE.SOUND_BUTTON_OFF].push(CTI(create_music_button(scale * 0.4, [\"#0d1b1c\", \"#392C16\", \"#5E3E1A\", \"#d7990c\"], 1, 0)));\r\n    sprite[SPRITE.SHOVEL] = [];\r\n    sprite[SPRITE.SHOVEL][SPRITE.DAY] = CTI(create_rotated_img(3, create_shovel(scale * 0.7, true, [\"#0d1b1c\", \"#6d5041\", \"#4f3d35\", \"#939393\", \"#5f6061\", \"#757575\"])));\r\n    sprite[SPRITE.SHOVEL][SPRITE.NIGHT] = CTI(create_rotated_img(3, create_shovel(scale * 0.7, true, [\"#0d1b1c\", \"#0d2e33\", \"#0b2326\", \"#485e66\", \"#1f343f\", \"#274352\"])));\r\n    sprite[SPRITE.SHOVEL_GOLD] = [];\r\n    sprite[SPRITE.SHOVEL_GOLD][SPRITE.DAY] = CTI(create_rotated_img(3, create_shovel(scale * 0.7, true, [\"#0d1b1c\", \"#493e26\", \"#382e19\", \"#c4bc51\", \"#b29c32\", \"#ada437\"])));\r\n    sprite[SPRITE.SHOVEL_GOLD][SPRITE.NIGHT] = CTI(create_rotated_img(3, create_shovel(scale * 0.7, true, [\"#0d1b1c\", \"#263947\", \"#182935\", \"#43aa82\", \"#29997c\", \"#32916c\"])));\r\n    sprite[SPRITE.SHOVEL_DIAMOND] = [];\r\n    sprite[SPRITE.SHOVEL_DIAMOND][SPRITE.DAY] = CTI(create_rotated_img(3, create_shovel(scale * 0.7, true, [\"#0d1b1c\", \"#262114\", \"#211108\", \"#63c9d6\", \"#29aaa1\", \"#42aab8\"])));\r\n    sprite[SPRITE.SHOVEL_DIAMOND][SPRITE.NIGHT] = CTI(create_rotated_img(3, create_shovel(scale * 0.7, true, [\"#0d1b1c\", \"#111316\", \"#0a0b0c\", \"#73dde5\", \"#3dc4c0\", \"#49bdc6\"])));\r\n    sprite[SPRITE.SHOVEL_AMETHYST] = [];\r\n    sprite[SPRITE.SHOVEL_AMETHYST][SPRITE.DAY] = CTI(create_rotated_img(3, create_shovel(scale * 0.7, true, [\"#0d1b1c\", \"#262114\", \"#211108\", \"#b864d6\", \"#8c29aa\", \"#9641b5\"])));\r\n    sprite[SPRITE.SHOVEL_AMETHYST][SPRITE.NIGHT] = CTI(create_rotated_img(3, create_shovel(scale * 0.7, true, [\"#0d1b1c\", \"#111316\", \"#0a0b0c\", \"#8359d3\", \"#764eb5\", \"#6f45c2\"])));\r\n    sprite[SPRITE.SHOP] = [];\r\n    sprite[SPRITE.SHOP].push(CTI(create_shop(scale * 0.7, [\"#3b330d\", \"#b5a118\", \"#c8ac16\"], 0)));\r\n    sprite[SPRITE.SHOP].push(CTI(create_shop(scale * 0.7, [\"#524712\", \"#c7b11c\", \"#d9ba18\"], 0)));\r\n    sprite[SPRITE.SHOP].push(CTI(create_shop(scale * 0.7, [\"#2a2409\", \"#9f8e14\", \"#ad9511\"], 0)));\r\n    sprite[SPRITE.HURT_WOLF] = CTI(create_hurt_wolf(scale * 1.1, [\"#BB0000\"]));\r\n    sprite[SPRITE.HURT_SPIDER] = CTI(create_rotated_img(Math.PI, create_hurt_spider(scale * 0.9, \"#BB0000\")));\r\n    sprite[SPRITE.EXPLORER_HAT] = [];\r\n    sprite[SPRITE.EXPLORER_HAT][SPRITE.DAY] = CTI(create_explorer_hat(scale * 0.55, true, [\"#c9a65f\", \"#ae863f\", \"#655530\", \"#4a391c\", \"#ebdd79\", \"#4a421c\"]));\r\n    sprite[SPRITE.EXPLORER_HAT][SPRITE.NIGHT] = CTI(create_explorer_hat(scale * 0.55, true, [\"#15514f\", \"#0f3f3d\", \"#123335\", \"#0d2d2b\", \"#2b6664\", \"#070d16\"]));\r\n    sprite[SPRITE.WOOD_HELMET] = [];\r\n    sprite[SPRITE.WOOD_HELMET][SPRITE.DAY] = CTI(create_wooden_helmet(scale * 0.55, true, [\"#252525\", \"#73583e\", \"#573f29\", \"#7d6144\"]));\r\n    sprite[SPRITE.WOOD_HELMET][SPRITE.NIGHT] = CTI(create_wooden_helmet(scale * 0.55, true, [\"#0d3b39\", \"#144642\", \"#0b3230\", \"#154f4b\"]));\r\n    sprite[SPRITE.STONE_HELMET] = [];\r\n    sprite[SPRITE.STONE_HELMET][SPRITE.DAY] = CTI(create_viking_hat(scale * 0.6, true, [\"#252525\", \"#808080\", \"#4a4a4a\", \"#9e9c8b\", \"#615c53\", \"#686969\", \"#8a8776\", \"#555555\", \"#747474\", \"#969696\", \"#454545\"]));\r\n    sprite[SPRITE.STONE_HELMET][SPRITE.NIGHT] = CTI(create_viking_hat(scale * 0.6, true, [\"#030d14\", \"#1c4a4a\", \"#102d2d\", \"#255756\", \"#163d3c\", \"#194544\", \"#1f5252\", \"#184141\", \"#1c4a4a\", \"#255756\", \"#163a3a\"]));\r\n    sprite[SPRITE.GOLD_HELMET] = [];\r\n    sprite[SPRITE.GOLD_HELMET][SPRITE.DAY] = CTI(create_gold_helmet(scale * 0.58, true, [\"#dbce71\", \"#b29c32\", \"#c4bc51\"]));\r\n    sprite[SPRITE.GOLD_HELMET][SPRITE.NIGHT] = CTI(create_gold_helmet(scale * 0.58, true, [\"#2b7c57\", \"#15543c\", \"#1a7961\"]));\r\n    sprite[SPRITE.DIAMOND_HELMET] = [];\r\n    sprite[SPRITE.DIAMOND_HELMET][SPRITE.DAY] = CTI(create_diamond_helmet(scale * 0.69, true, [\"#717171\", \"#485252\", \"#555555\", \"#65c7cd\", \"#4aadad\", \"#358d8b\", \"#c1e6ea\", \"#a6dce4\"]));\r\n    sprite[SPRITE.DIAMOND_HELMET][SPRITE.NIGHT] = CTI(create_diamond_helmet(scale * 0.69, true, [\"#183f3f\", \"#092121\", \"#123335\", \"#2b9390\", \"#277a74\", \"#1f665f\", \"#83ddd4\", \"#59c9c0\"]));\r\n    sprite[SPRITE.FIR] = [];\r\n    sprite[SPRITE.FIR][SPRITE.DAY] = [];\r\n    sprite[SPRITE.FIR][SPRITE.NIGHT] = [];\r\n    sprite[SPRITE.FIR][SPRITE.DAY].push(CTI(create_fir_three(scale * 1.3, [\"#0a2d18\", \"#124c34\", \"#227248\", \"#ccedd9\", \"#2d7a55\", \"#3c9660\", \"#afddc1\", \"#bbefd0\", \"#0a2d18\", \"#e4efe8\"])));\r\n    sprite[SPRITE.FIR][SPRITE.DAY].push(CTI(create_fir_two(scale * 1.5, [\"#191919\", \"#134d35\", \"#247349\", \"#afddc1\", \"#bbefd0\", \"#e4efe8\"])));\r\n    sprite[SPRITE.FIR][SPRITE.DAY].push(CTI(create_fir_one(scale * 1.5, [\"#191919\", \"#134d35\", \"#247349\", \"#cde7d6\", \"#122d1c\", \"#e3eee7\"])));\r\n    sprite[SPRITE.FIR][SPRITE.NIGHT].push(CTI(create_fir_three(scale * 1.3, [\"#000000\", \"#0e3638\", \"#174a51\", \"#328587\", \"#174a51\", \"#1d5559\", \"#328587\", \"#48a8aa\", \"#0a2728\", \"#56afac\"])));\r\n    sprite[SPRITE.FIR][SPRITE.NIGHT].push(CTI(create_fir_two(scale * 1.5, [\"#000000\", \"#0e3638\", \"#174a51\", \"#328587\", \"#48a8aa\", \"#56afac\"])));\r\n    sprite[SPRITE.FIR][SPRITE.NIGHT].push(CTI(create_fir_one(scale * 1.5, [\"#000000\", \"#0e3638\", \"#174a51\", \"#328587\", \"#0a2728\", \"#56afac\"])));\r\n    sprite[SPRITE.DRAGON] = [];\r\n    sprite[SPRITE.DRAGON][SPRITE.DAY] = CTI(create_dragon(scale * 1, [\"#292b2b\", \"#57aba6\", \"#80ccca\", \"#c42333\", \"#a4dad9\", \"#3e8294\", \"#ffffff\", \"#57aba6\", \"#ffffff\"]));\r\n    sprite[SPRITE.DRAGON][SPRITE.NIGHT] = CTI(create_dragon(scale * 1, [\"#050505\", \"#1d3a38\", \"#0b514a\", \"#200333\", \"#327570\", \"#1d3a38\", \"#ffffff\", \"#0b514a\", \"#63afa9\"]));\r\n    sprite[SPRITE.WING_LEFT] = [];\r\n    sprite[SPRITE.WING_LEFT][SPRITE.DAY] = CTI(create_wingleft(scale * 1, [\"#292b2b\", \"#a4dad9\", \"#1f3f3f\", \"#c1233b\"]));\r\n    sprite[SPRITE.WING_LEFT][SPRITE.NIGHT] = CTI(create_wingleft(scale * 1, [\"#050505\", \"#327570\", \"#021724\", \"#200333\"]));\r\n    sprite[SPRITE.WING_RIGHT] = [];\r\n    sprite[SPRITE.WING_RIGHT][SPRITE.DAY] = CTI(create_wingright(scale * 1, [\"#292b2b\", \"#a4dad9\", \"#1f3f3f\", \"#c1233b\"]));\r\n    sprite[SPRITE.WING_RIGHT][SPRITE.NIGHT] = CTI(create_wingright(scale * 1, [\"#050505\", \"#327570\", \"#021724\", \"#200333\"]));\r\n    sprite[SPRITE.DECORATION] = [];\r\n    sprite[SPRITE.DECORATION][SPRITE.DAY] = [];\r\n    sprite[SPRITE.DECORATION][SPRITE.NIGHT] = [];\r\n    sprite[SPRITE.DECORATION][SPRITE.DAY] = [IMAGES.DECORATION_0D, IMAGES.DECORATION_1D, IMAGES.DECORATION_2D, IMAGES.DECORATION_3D, IMAGES.DECORATION_4D, IMAGES.DECORATION_5D, IMAGES.DECORATION_6D, IMAGES.DECORATION_7D, IMAGES.DECORATION_8D, IMAGES.DECORATION_9D, IMAGES.DECORATION_10D, IMAGES.DECORATION_11D, IMAGES.DECORATION_12D, IMAGES.DECORATION_13D, IMAGES.DECORATION_14D, IMAGES.DECORATION_15D, IMAGES.DECORATION_16D, IMAGES.DECORATION_17D, IMAGES.DECORATION_18D, IMAGES.DECORATION_19D, IMAGES.DECORATION_20D, IMAGES.DECORATION_21D, IMAGES.DECORATION_22D, IMAGES.DECORATION_23D, IMAGES.DECORATION_24D, IMAGES.DECORATION_25D, IMAGES.DECORATION_26D, IMAGES.DECORATION_27D, IMAGES.DECORATION_28D, IMAGES.DECORATION_29D, IMAGES.DECORATION_30D, IMAGES.DECORATION_31D, IMAGES.DECORATION_32D, IMAGES.DECORATION_33D, IMAGES.DECORATION_34D, IMAGES.DECORATION_35D, IMAGES.DECORATION_36D, IMAGES.DECORATION_37D, IMAGES.DECORATION_38D, IMAGES.DECORATION_39D, IMAGES.DECORATION_40D, IMAGES.DECORATION_41D, IMAGES.DECORATION_42D, IMAGES.DECORATION_43D, IMAGES.DECORATION_44D, IMAGES.DECORATION_45D, IMAGES.DECORATION_46D, IMAGES.DECORATION_47D, IMAGES.DECORATION_48D, IMAGES.DECORATION_49D, IMAGES.DECORATION_50D, IMAGES.DECORATION_51D, IMAGES.DECORATION_52D, IMAGES.DECORATION_53D, IMAGES.DECORATION_54D, IMAGES.DECORATION_55D];\r\n    sprite[SPRITE.DECORATION][SPRITE.NIGHT] = [IMAGES.DECORATION_0N, IMAGES.DECORATION_1N, IMAGES.DECORATION_2N, IMAGES.DECORATION_3N, IMAGES.DECORATION_4N, IMAGES.DECORATION_5N, IMAGES.DECORATION_6N, IMAGES.DECORATION_7N, IMAGES.DECORATION_8N, IMAGES.DECORATION_9N, IMAGES.DECORATION_10N, IMAGES.DECORATION_11N, IMAGES.DECORATION_12N, IMAGES.DECORATION_13N, IMAGES.DECORATION_14N, IMAGES.DECORATION_15N, IMAGES.DECORATION_16N, IMAGES.DECORATION_17N, IMAGES.DECORATION_18N, IMAGES.DECORATION_19N, IMAGES.DECORATION_20N, IMAGES.DECORATION_21N, IMAGES.DECORATION_22N, IMAGES.DECORATION_23N, IMAGES.DECORATION_24N, IMAGES.DECORATION_25N, IMAGES.DECORATION_26N, IMAGES.DECORATION_27N, IMAGES.DECORATION_28N, IMAGES.DECORATION_29N, IMAGES.DECORATION_30N, IMAGES.DECORATION_31N, IMAGES.DECORATION_32N, IMAGES.DECORATION_33N, IMAGES.DECORATION_34N, IMAGES.DECORATION_35N, IMAGES.DECORATION_36N, IMAGES.DECORATION_37N, IMAGES.DECORATION_38N, IMAGES.DECORATION_39N, IMAGES.DECORATION_40N, IMAGES.DECORATION_41N, IMAGES.DECORATION_42N, IMAGES.DECORATION_43N, IMAGES.DECORATION_44N, IMAGES.DECORATION_45N, IMAGES.DECORATION_46N, IMAGES.DECORATION_47N, IMAGES.DECORATION_48N, IMAGES.DECORATION_49N, IMAGES.DECORATION_50N, IMAGES.DECORATION_51N, IMAGES.DECORATION_52N, IMAGES.DECORATION_53N, IMAGES.DECORATION_54N, IMAGES.DECORATION_55N];\r\n    sprite[SPRITE.CAVE_STONES] = [];\r\n    sprite[SPRITE.CAVE_STONES][SPRITE.DAY] = [];\r\n    sprite[SPRITE.CAVE_STONES][SPRITE.NIGHT] = [];\r\n    sprite[SPRITE.CAVE_STONES][SPRITE.DAY].push(CTI(create_cave_stone(scale * 1.1, false, [\"#252B28\", \"#747471\", \"#83827e\"], 0)));\r\n    sprite[SPRITE.CAVE_STONES][SPRITE.DAY].push(CTI(create_cave_stone(scale * 0.9, false, [\"#252B28\", \"#747471\", \"#83827e\"], 1)));\r\n    sprite[SPRITE.CAVE_STONES][SPRITE.DAY].push(CTI(create_cave_stone(scale * 1, false, [\"#252B28\", \"#747471\", \"#83827e\"], 2)));\r\n    sprite[SPRITE.CAVE_STONES][SPRITE.DAY].push(CTI(create_cave_stone(scale * 0.9, false, [\"#252B28\", \"#747471\", \"#83827e\"], 2)));\r\n    sprite[SPRITE.CAVE_STONES][SPRITE.NIGHT].push(CTI(create_cave_stone(scale * 1.1, false, [\"#030d14\", \"#123335\", \"#183f3f\"], 0)));\r\n    sprite[SPRITE.CAVE_STONES][SPRITE.NIGHT].push(CTI(create_cave_stone(scale * 0.9, false, [\"#030d14\", \"#123335\", \"#183f3f\"], 1)));\r\n    sprite[SPRITE.CAVE_STONES][SPRITE.NIGHT].push(CTI(create_cave_stone(scale * 1, false, [\"#030d14\", \"#123335\", \"#183f3f\"], 2)));\r\n    sprite[SPRITE.CAVE_STONES][SPRITE.NIGHT].push(CTI(create_cave_stone(scale * 0.9, false, [\"#030d14\", \"#123335\", \"#183f3f\"], 2)));\r\n    sprite[SPRITE.SHADOW_CAVE_STONES] = [];\r\n    sprite[SPRITE.SHADOW_CAVE_STONES][SPRITE.DAY] = [];\r\n    sprite[SPRITE.SHADOW_CAVE_STONES][SPRITE.NIGHT] = [];\r\n    sprite[SPRITE.SHADOW_CAVE_STONES][SPRITE.DAY].push(CTI(create_cave_stone(scale * 1.1, true, [\"#252B28\", \"#58645F\", \"#75827D\"], 2)));\r\n    sprite[SPRITE.SHADOW_CAVE_STONES][SPRITE.DAY].push(CTI(create_cave_stone(scale * 0.9, true, [\"#252B28\", \"#58645F\", \"#75827D\"], 2)));\r\n    sprite[SPRITE.SHADOW_CAVE_STONES][SPRITE.DAY].push(CTI(create_cave_stone(scale * 1, true, [\"#252B28\", \"#58645F\", \"#75827D\"], 2)));\r\n    sprite[SPRITE.SHADOW_CAVE_STONES][SPRITE.DAY].push(CTI(create_cave_stone(scale * 0.9, true, [\"#252B28\", \"#58645F\", \"#75827D\"], 2)));\r\n    sprite[SPRITE.SHADOW_CAVE_STONES][SPRITE.NIGHT].push(CTI(create_cave_stone(scale * 1.1, true, [\"#030d14\", \"#123335\", \"#183f3f\"], 2)));\r\n    sprite[SPRITE.SHADOW_CAVE_STONES][SPRITE.NIGHT].push(CTI(create_cave_stone(scale * 0.9, true, [\"#030d14\", \"#123335\", \"#183f3f\"], 2)));\r\n    sprite[SPRITE.SHADOW_CAVE_STONES][SPRITE.NIGHT].push(CTI(create_cave_stone(scale * 1, true, [\"#030d14\", \"#123335\", \"#183f3f\"], 2)));\r\n    sprite[SPRITE.SHADOW_CAVE_STONES][SPRITE.NIGHT].push(CTI(create_cave_stone(scale * 0.9, true, [\"#030d14\", \"#123335\", \"#183f3f\"], 2)));\r\n    sprite[SPRITE.GOLD_WINTER] = [];\r\n    sprite[SPRITE.GOLD_WINTER][SPRITE.DAY] = [];\r\n    sprite[SPRITE.GOLD_WINTER][SPRITE.NIGHT] = [];\r\n    sprite[SPRITE.GOLD_WINTER][SPRITE.DAY].push(CTI(create_gold(scale * 1.5, false, [\"#2b280a\", \"#ddcf8a\", \"#f4efc6\"])));\r\n    sprite[SPRITE.GOLD_WINTER][SPRITE.DAY].push(CTI(create_gold(scale * 1.3, false, [\"#2b280a\", \"#ddcf8a\", \"#f4efc6\"])));\r\n    sprite[SPRITE.GOLD_WINTER][SPRITE.DAY].push(CTI(create_gold(scale * 1.1, false, [\"#2b280a\", \"#ddcf8a\", \"#f4efc6\"])));\r\n    sprite[SPRITE.GOLD_WINTER][SPRITE.NIGHT].push(CTI(create_gold(scale * 1.5, false, [\"#0a2728\", \"#3e8989\", \"#50a09c\"])));\r\n    sprite[SPRITE.GOLD_WINTER][SPRITE.NIGHT].push(CTI(create_gold(scale * 1.3, false, [\"#0a2728\", \"#3e8989\", \"#50a09c\"])));\r\n    sprite[SPRITE.GOLD_WINTER][SPRITE.NIGHT].push(CTI(create_gold(scale * 1.1, false, [\"#0a2728\", \"#3e8989\", \"#50a09c\"])));\r\n    sprite[SPRITE.DIAMOND_WINTER] = [];\r\n    sprite[SPRITE.DIAMOND_WINTER][SPRITE.DAY] = [];\r\n    sprite[SPRITE.DIAMOND_WINTER][SPRITE.NIGHT] = [];\r\n    sprite[SPRITE.DIAMOND_WINTER][SPRITE.DAY].push(CTI(create_diamond(scale * 1.1, false, [\"#123d38\", \"#70e0dd\", \"#95efea\"])));\r\n    sprite[SPRITE.DIAMOND_WINTER][SPRITE.DAY].push(CTI(create_diamond(scale * 0.9, false, [\"#123d38\", \"#70e0dd\", \"#95efea\"])));\r\n    sprite[SPRITE.DIAMOND_WINTER][SPRITE.DAY].push(CTI(create_diamond(scale * 0.7, false, [\"#123d38\", \"#70e0dd\", \"#95efea\"])));\r\n    sprite[SPRITE.DIAMOND_WINTER][SPRITE.NIGHT].push(CTI(create_diamond(scale * 1.1, false, [\"#123d38\", \"#47b2ac\", \"#5cccc4\"])));\r\n    sprite[SPRITE.DIAMOND_WINTER][SPRITE.NIGHT].push(CTI(create_diamond(scale * 0.9, false, [\"#123d38\", \"#47b2ac\", \"#5cccc4\"])));\r\n    sprite[SPRITE.DIAMOND_WINTER][SPRITE.NIGHT].push(CTI(create_diamond(scale * 0.7, false, [\"#123d38\", \"#47b2ac\", \"#5cccc4\"])));\r\n    sprite[SPRITE.AMETHYST] = [];\r\n    sprite[SPRITE.AMETHYST][SPRITE.DAY] = [];\r\n    sprite[SPRITE.AMETHYST][SPRITE.NIGHT] = [];\r\n    sprite[SPRITE.AMETHYST][SPRITE.DAY].push(CTI(create_amethyst(scale * 1.7, true, [\"#1d051e\", \"#c27add\", \"#cd98e5\"])));\r\n    sprite[SPRITE.AMETHYST][SPRITE.DAY].push(CTI(create_amethyst(scale * 1.5, true, [\"#1d051e\", \"#c27add\", \"#cd98e5\"])));\r\n    sprite[SPRITE.AMETHYST][SPRITE.DAY].push(CTI(create_amethyst(scale * 1.3, true, [\"#1d051e\", \"#c27add\", \"#cd98e5\"])));\r\n    sprite[SPRITE.AMETHYST][SPRITE.NIGHT].push(CTI(create_amethyst(scale * 1.7, true, [\"#1d051e\", \"#41aaa0\", \"#5cccc4\"])));\r\n    sprite[SPRITE.AMETHYST][SPRITE.NIGHT].push(CTI(create_amethyst(scale * 1.5, true, [\"#1d051e\", \"#41aaa0\", \"#5cccc4\"])));\r\n    sprite[SPRITE.AMETHYST][SPRITE.NIGHT].push(CTI(create_amethyst(scale * 1.3, true, [\"#1d051e\", \"#41aaa0\", \"#5cccc4\"])));\r\n    sprite[SPRITE.WATERBLOCK] = [];\r\n    sprite[SPRITE.WATERBLOCK][SPRITE.DAY] = [];\r\n    sprite[SPRITE.WATERBLOCK][SPRITE.NIGHT] = [];\r\n    sprite[SPRITE.WATERBLOCK][SPRITE.DAY].push(CTI(create_dragon_ground(scale, [\"#2d53c4\"])));\r\n    sprite[SPRITE.WATERBLOCK][SPRITE.NIGHT].push(CTI(create_dragon_ground(scale, [\"#2d53c4\"])));\r\n    sprite[SPRITE.ISLAND_BLOCK] = [];\r\n    sprite[SPRITE.ISLAND_BLOCK][SPRITE.DAY] = [];\r\n    sprite[SPRITE.ISLAND_BLOCK][SPRITE.NIGHT] = [];\r\n    sprite[SPRITE.ISLAND_BLOCK][SPRITE.DAY].push(CTI(create_dragon_ground(scale, [\"#c4912d\"])));\r\n    sprite[SPRITE.ISLAND_BLOCK][SPRITE.NIGHT].push(CTI(create_dragon_ground(scale, [\"#c4912d\"])));\r\n    sprite[SPRITE.CAVE_STEP] = [];\r\n    sprite[SPRITE.CAVE_STEP][SPRITE.DAY] = CTI(create_snow_step(scale, [\"#414040\"]));\r\n    sprite[SPRITE.CAVE_STEP][SPRITE.NIGHT] = CTI(create_snow_step(scale, [\"#153635\"]));\r\n    sprite[SPRITE.DOOR_WOOD_OPEN_WINTER] = [];\r\n    sprite[SPRITE.DOOR_WOOD_OPEN_WINTER][SPRITE.DAY] = CTI(create_door_wood(scale * 1, false, [\"#EBF2F0\", \"#EBF2F0\", \"#b2d4d1\", \"#b2d4d1\", \"#EBF2F0\", \"#b2d4d1\"]));\r\n    sprite[SPRITE.DOOR_WOOD_OPEN_WINTER][SPRITE.NIGHT] = CTI(create_door_wood(scale * 1, false, [\"#136167\", \"#136167\", \"#24878f\", \"#24878f\", \"#136167\", \"#24878f\"]));\r\n    sprite[SPRITE.DOOR_STONE_OPEN_WINTER] = [];\r\n    sprite[SPRITE.DOOR_STONE_OPEN_WINTER][SPRITE.DAY] = CTI(create_door_stone(scale * 1, false, [\"#EBF2F0\", \"#EBF2F0\", \"#b2d4d1\", \"#b2d4d1\", \"#EBF2F0\", \"#b2d4d1\"]));\r\n    sprite[SPRITE.DOOR_STONE_OPEN_WINTER][SPRITE.NIGHT] = CTI(create_door_stone(scale * 1, false, [\"#136167\", \"#136167\", \"#24878f\", \"#24878f\", \"#136167\", \"#24878f\"]));\r\n    sprite[SPRITE.DOOR_AMETHYST_OPEN_WINTER] = [];\r\n    sprite[SPRITE.DOOR_AMETHYST_OPEN_WINTER][SPRITE.DAY] = CTI(create_door_stone(scale * 1, false, [\"#EBF2F0\", \"#EBF2F0\", \"#b2d4d1\", \"#b2d4d1\", \"#EBF2F0\", \"#b2d4d1\"]));\r\n    sprite[SPRITE.DOOR_AMETHYST_OPEN_WINTER][SPRITE.NIGHT] = CTI(create_door_stone(scale * 1, false, [\"#136167\", \"#136167\", \"#24878f\", \"#24878f\", \"#136167\", \"#24878f\"]));\r\n    sprite[SPRITE.DOOR_DIAMOND_OPEN_WINTER] = [];\r\n    sprite[SPRITE.DOOR_DIAMOND_OPEN_WINTER][SPRITE.DAY] = CTI(create_door_diamond(scale * 1, false, [\"#EBF2F0\", \"#EBF2F0\", \"#b2d4d1\", \"#b2d4d1\", \"#EBF2F0\", \"#b2d4d1\"]));\r\n    sprite[SPRITE.DOOR_DIAMOND_OPEN_WINTER][SPRITE.NIGHT] = CTI(create_door_diamond(scale * 1, false, [\"#136167\", \"#136167\", \"#24878f\", \"#24878f\", \"#136167\", \"#24878f\"]));\r\n    sprite[SPRITE.DOOR_GOLD_OPEN_WINTER] = [];\r\n    sprite[SPRITE.DOOR_GOLD_OPEN_WINTER][SPRITE.DAY] = CTI(create_door_gold(scale * 1, false, [\"#EBF2F0\", \"#EBF2F0\", \"#b2d4d1\", \"#b2d4d1\", \"#EBF2F0\", \"#b2d4d1\"]));\r\n    sprite[SPRITE.DOOR_GOLD_OPEN_WINTER][SPRITE.NIGHT] = CTI(create_door_gold(scale * 1, false, [\"#136167\", \"#136167\", \"#24878f\", \"#24878f\", \"#136167\", \"#24878f\"]));\r\n    sprite[SPRITE.FOX] = [];\r\n    sprite[SPRITE.FOX][SPRITE.DAY] = CTI(create_winter_fox(scale * 0.9, [\"#1d051e\", \"#ffffff\", \"#c41c50\", \"#2c2e2d\", \"#c63450\", \"#f7e7f0\"]));\r\n    sprite[SPRITE.FOX][SPRITE.NIGHT] = CTI(create_winter_fox(scale * 0.9, [\"#123d38\", \"#1a847f\", \"#200333\", \"#131919\", \"#01333a\", \"#b6f2db\"]));\r\n    sprite[SPRITE.BEAR] = [];\r\n    sprite[SPRITE.BEAR][SPRITE.DAY] = CTI(create_polar_bear(scale * 0.9, [\"#1d051e\", \"#ffffff\", \"#c41c50\", \"#c63450\", \"#ffffff\", \"#f7e7f0\", \"#2b2d2d\"]));\r\n    sprite[SPRITE.BEAR][SPRITE.NIGHT] = CTI(create_polar_bear(scale * 0.9, [\"#123d38\", \"#1a847f\", \"#200333\", \"#01333a\", \"#ffffff\", \"#b6f2db\", \"#2b2d2d\"]));\r\n    sprite[SPRITE.MINIMAP] = [];\r\n    sprite[SPRITE.MINIMAP_CTX] = [];\r\n    sprite[SPRITE.BIGMAP] = [];\r\n    sprite[SPRITE.BIGMAP_CTX] = [];\r\n    for (var i = 0; i < 2; i++) {\r\n        sprite[SPRITE.MINIMAP][i] = document.createElement(\"canvas\");\r\n        sprite[SPRITE.MINIMAP][i].width = 193;\r\n        sprite[SPRITE.MINIMAP][i].height = 193;\r\n        sprite[SPRITE.MINIMAP_CTX][i] = sprite[SPRITE.MINIMAP][i].getContext(\"2d\");\r\n        sprite[SPRITE.BIGMAP][i] = document.createElement(\"canvas\");\r\n        sprite[SPRITE.BIGMAP][i].width = 600;\r\n        sprite[SPRITE.BIGMAP][i].height = 600;\r\n        sprite[SPRITE.BIGMAP_CTX][i] = sprite[SPRITE.BIGMAP][i].getContext(\"2d\");\r\n    }\r\n    sprite[SPRITE.SNOW_STEP] = [];\r\n    sprite[SPRITE.SNOW_STEP][SPRITE.DAY] = CTI(create_snow_step(scale, [\"#c8e0de\"]));\r\n    sprite[SPRITE.SNOW_STEP][SPRITE.NIGHT] = CTI(create_snow_step(scale, [\"#147071\"]));\r\n    sprite[SPRITE.LAVA_STEP] = [];\r\n    sprite[SPRITE.LAVA_STEP][SPRITE.DAY] = CTI(create_snow_step(scale, [\"#231912\"]));\r\n    sprite[SPRITE.LAVA_STEP][SPRITE.NIGHT] = CTI(create_snow_step(scale, [\"#021719\"]));\r\n    sprite[SPRITE.HURT_TREASURE_CHEST] = CTI(create_hurt_treasure_chest(scale * 0.5, [\"#BB0000\"]));\r\n    sprite[SPRITE.HURT_FOX] = CTI(create_hurt_fox_winter(scale * 0.9, \"#BB0000\"));\r\n    sprite[SPRITE.HURT_BEAR] = CTI(create_hurt_polar_bear(scale * 0.9, \"#BB0000\"));\r\n    sprite[SPRITE.HURT_DRAGON] = CTI(create_hurt_dragon(scale * 1, [\"#BB0000\"]));\r\n    sprite[SPRITE.HURT_WING_LEFT] = CTI(create_hurt_wingleft(scale * 0.8, \"#BB0000\"));\r\n    sprite[SPRITE.HURT_WING_RIGHT] = CTI(create_hurt_wingright(scale * 0.8, \"#BB0000\"));\r\n    sprite[SPRITE.HURT_RABBIT] = CTI(create_hurt_rabbit(scale * 0.9, \"#BB0000\"));\r\n    sprite[SPRITE.HURT] = CTI(create_hurt_player(scale * 0.6, \"#BB0000\"));\r\n    sprite[SPRITE.COLD] = CTI(create_hurt_player(scale * 0.6, \"#1CE7E0\"));\r\n    sprite[SPRITE.HUNGER] = CTI(create_hurt_player(scale * 0.6, \"#DBE71C\"));\r\n    sprite[SPRITE.HEAL] = CTI(create_hurt_player(scale * 0.6, \"#00BB00\"));\r\n    sprite[SPRITE.SAND_STEP] = [];\r\n    sprite[SPRITE.SAND_STEP][SPRITE.DAY] = CTI(create_snow_step(scale, [\"#dac291\"]));\r\n    sprite[SPRITE.SAND_STEP][SPRITE.NIGHT] = CTI(create_snow_step(scale, [\"#0D423D\"]));\r\n    sprite[SPRITE.ISLAND_STEP] = [];\r\n    sprite[SPRITE.ISLAND_STEP][SPRITE.DAY] = CTI(create_snow_step(scale, [\"#dac291\"]));\r\n    sprite[SPRITE.ISLAND_STEP][SPRITE.NIGHT] = CTI(create_snow_step(scale, [\"#0D423D\"]));\r\n    sprite[SPRITE.WELL_FULL] = [];\r\n    sprite[SPRITE.WELL_FULL][SPRITE.DAY] = CTI(create_well(scale * 0.3, true, [\"#1e2021\", \"#717273\", \"#606162\", \"#a09f9f\", \"#878787\", \"#1a6470\"]));\r\n    sprite[SPRITE.WELL_FULL][SPRITE.NIGHT] = CTI(create_well(scale * 0.3, true, [\"#1e2021\", \"#1a4545\", \"#163a3a\", \"#245d5d\", \"#1f5454\", \"#09373F\"]));\r\n    sprite[SPRITE.WELL_EMPTY] = [];\r\n    sprite[SPRITE.WELL_EMPTY][SPRITE.DAY] = CTI(create_well(scale * 0.3, true, [\"#1e2021\", \"#717273\", \"#606162\", \"#a09f9f\", \"#878787\", \"#454545\"]));\r\n    sprite[SPRITE.WELL_EMPTY][SPRITE.NIGHT] = CTI(create_well(scale * 0.3, true, [\"#1e2021\", \"#1a4545\", \"#163a3a\", \"#245d5d\", \"#1f5454\", \"#0b2121\"]));\r\n    sprite[SPRITE.BOTTLE_FULL] = [CTI(create_bottle(scale, true, [\"#C6AF81\", \"#C98435\", \"#B26F31\", \"#53A4D5\", \"#388AC7\", \"#C1C0C0\", \"#EAEAEA\"]))];\r\n    sprite[SPRITE.BOTTLE_EMPTY] = [CTI(create_bottle(scale, true, [\"#C6AF81\", \"#C98435\", \"#B26F31\", \"#53A4D5\", \"#388AC7\", \"#C1C0C0\", \"#EAEAEA\"]))];\r\n    sprite[SPRITE.OCEAN] = [];\r\n    sprite[SPRITE.OCEAN][SPRITE.DAY] = [];\r\n    sprite[SPRITE.OCEAN][SPRITE.NIGHT] = [];\r\n    sprite[SPRITE.OCEAN][SPRITE.DAY].push(CTI(create_snow_one(scale * 1, [\"#0B6A84\"])));\r\n    sprite[SPRITE.OCEAN][SPRITE.DAY].push(CTI(create_snow_two(scale * 1, [\"#0B6A84\"])));\r\n    sprite[SPRITE.OCEAN][SPRITE.DAY].push(CTI(create_snow_three(scale * 1, [\"#0B6A84\"])));\r\n    sprite[SPRITE.OCEAN][SPRITE.DAY].push(CTI(create_snow_four(scale * 1, [\"#0B6A84\"])));\r\n    sprite[SPRITE.OCEAN][SPRITE.DAY].push(CTI(create_snow_five(scale * 1, [\"#0B6A84\"])));\r\n    sprite[SPRITE.OCEAN][SPRITE.DAY].push(CTI(create_snow_six(scale * 1, [\"#0B6A84\"])));\r\n    sprite[SPRITE.OCEAN][SPRITE.DAY].push(CTI(create_snow_sept(scale * 1, [\"#0B6A84\"])));\r\n    sprite[SPRITE.OCEAN][SPRITE.NIGHT].push(CTI(create_snow_one(scale * 1, [\"#09373F\"])));\r\n    sprite[SPRITE.OCEAN][SPRITE.NIGHT].push(CTI(create_snow_two(scale * 1, [\"#09373F\"])));\r\n    sprite[SPRITE.OCEAN][SPRITE.NIGHT].push(CTI(create_snow_three(scale * 1, [\"#09373F\"])));\r\n    sprite[SPRITE.OCEAN][SPRITE.NIGHT].push(CTI(create_snow_four(scale * 1, [\"#09373F\"])));\r\n    sprite[SPRITE.OCEAN][SPRITE.NIGHT].push(CTI(create_snow_five(scale * 1, [\"#09373F\"])));\r\n    sprite[SPRITE.OCEAN][SPRITE.NIGHT].push(CTI(create_snow_six(scale * 1, [\"#09373F\"])));\r\n    sprite[SPRITE.OCEAN][SPRITE.NIGHT].push(CTI(create_snow_sept(scale * 1, [\"#09373F\"])));\r\n    sprite[SPRITE.ISLAND] = [];\r\n    sprite[SPRITE.ISLAND][SPRITE.DAY] = [];\r\n    sprite[SPRITE.ISLAND][SPRITE.NIGHT] = [];\r\n    sprite[SPRITE.ISLAND][SPRITE.DAY].push(CTI(create_island(scale * 1.7, [\"#FBEFBC\"], 0)));\r\n    sprite[SPRITE.ISLAND][SPRITE.DAY].push(CTI(create_island(scale * 1.9, [\"#FBEFBC\"], 1)));\r\n    sprite[SPRITE.ISLAND][SPRITE.DAY].push(CTI(create_island(scale * 1.7, [\"#FBEFBC\"], 2)));\r\n    sprite[SPRITE.ISLAND][SPRITE.NIGHT].push(CTI(create_island(scale * 1.7, [\"#0F4C48\"], 0)));\r\n    sprite[SPRITE.ISLAND][SPRITE.NIGHT].push(CTI(create_island(scale * 1.9, [\"#0F4C48\"], 1)));\r\n    sprite[SPRITE.ISLAND][SPRITE.NIGHT].push(CTI(create_island(scale * 1.7, [\"#0F4C48\"], 2)));\r\n    sprite[SPRITE.WAVE_ONE] = [];\r\n    sprite[SPRITE.WAVE_ONE][SPRITE.DAY] = [];\r\n    sprite[SPRITE.WAVE_ONE][SPRITE.NIGHT] = [];\r\n    sprite[SPRITE.WAVE_ONE][SPRITE.DAY].push(CTI(create_island(scale * 1.8, [\"#A9D6D3\"], 0)));\r\n    sprite[SPRITE.WAVE_ONE][SPRITE.DAY].push(CTI(create_island(scale * 2, [\"#A9D6D3\"], 1)));\r\n    sprite[SPRITE.WAVE_ONE][SPRITE.DAY].push(CTI(create_island(scale * 1.8, [\"#A9D6D3\"], 2)));\r\n    sprite[SPRITE.WAVE_ONE][SPRITE.NIGHT].push(CTI(create_island(scale * 1.8, [\"#115E60\"], 0)));\r\n    sprite[SPRITE.WAVE_ONE][SPRITE.NIGHT].push(CTI(create_island(scale * 2, [\"#115E60\"], 1)));\r\n    sprite[SPRITE.WAVE_ONE][SPRITE.NIGHT].push(CTI(create_island(scale * 1.8, [\"#115E60\"], 2)));\r\n    sprite[SPRITE.WAVE_TWO] = [];\r\n    sprite[SPRITE.WAVE_TWO][SPRITE.DAY] = [];\r\n    sprite[SPRITE.WAVE_TWO][SPRITE.NIGHT] = [];\r\n    sprite[SPRITE.WAVE_TWO][SPRITE.DAY].push(CTI(create_island(scale * 1.9, [\"#2A8B9B\"], 0)));\r\n    sprite[SPRITE.WAVE_TWO][SPRITE.DAY].push(CTI(create_island(scale * 2.1, [\"#2A8B9B\"], 1)));\r\n    sprite[SPRITE.WAVE_TWO][SPRITE.DAY].push(CTI(create_island(scale * 1.9, [\"#2A8B9B\"], 2)));\r\n    sprite[SPRITE.WAVE_TWO][SPRITE.NIGHT].push(CTI(create_island(scale * 1.9, [\"#0F464C\"], 0)));\r\n    sprite[SPRITE.WAVE_TWO][SPRITE.NIGHT].push(CTI(create_island(scale * 2.1, [\"#0F464C\"], 1)));\r\n    sprite[SPRITE.WAVE_TWO][SPRITE.NIGHT].push(CTI(create_island(scale * 1.9, [\"#0F464C\"], 2)));\r\n    sprite[SPRITE.PALM] = [];\r\n    sprite[SPRITE.PALM][SPRITE.DAY] = [];\r\n    sprite[SPRITE.PALM][SPRITE.NIGHT] = [];\r\n    sprite[SPRITE.PALM][SPRITE.DAY].push(CTI(create_palm(scale * 0.8, [\"#231F20\", \"#0c8e5b\", \"#037542\", \"#077b49\"])));\r\n    sprite[SPRITE.PALM][SPRITE.DAY].push(CTI(create_palm(scale * 1, [\"#231F20\", \"#0c8e5b\", \"#037542\", \"#077b49\"])));\r\n    sprite[SPRITE.PALM][SPRITE.DAY].push(CTI(create_palm(scale * 1.2, [\"#231F20\", \"#0c8e5b\", \"#037542\", \"#077b49\"])));\r\n    sprite[SPRITE.PALM][SPRITE.NIGHT].push(CTI(create_palm(scale * 0.8, [\"#041e22\", \"#124949\", \"#0e3838\", \"#0a4049\"])));\r\n    sprite[SPRITE.PALM][SPRITE.NIGHT].push(CTI(create_palm(scale * 1, [\"#041e22\", \"#124949\", \"#0e3838\", \"#0a4049\"])));\r\n    sprite[SPRITE.PALM][SPRITE.NIGHT].push(CTI(create_palm(scale * 1.2, [\"#041e22\", \"#124949\", \"#0e3838\", \"#0a4049\"])));\r\n    sprite[SPRITE.KRAKEN] = [];\r\n    sprite[SPRITE.KRAKEN][SPRITE.DAY] = CTI(create_kraken(scale * 0.8, [\"#1e2021\", \"#B6222A\", \"#201851\", \"#342C7C\", \"#F4F4F4\", \"#D3D3D3\", \"#6765CE\", \"#593CC6\", \"#433BAD\", \"#342C7C\", \"#052830\", \"#EAEAEA\", \"#B6222A\", \"#FFFFFF\"]));\r\n    sprite[SPRITE.KRAKEN][SPRITE.NIGHT] = CTI(create_kraken(scale * 0.8, [\"#0c0c0d\", \"#462966\", \"#081B2D\", \"#342C7C\", \"#9AAAAD\", \"#72898C\", \"#133556\", \"#296D9B\", \"#25557C\", \"#133556\", \"#0D2A42\", \"#EAEAEA\", \"#462966\", \"#72898C\"]));\r\n    sprite[SPRITE.HURT_KRAKEN] = CTI(create_hurt_kraken(scale * 0.8, [\"#B6222A\"]));\r\n    sprite[SPRITE.PIRANHA] = [];\r\n    sprite[SPRITE.PIRANHA][SPRITE.DAY] = CTI(create_pirahna(scale * 0.8, true, [\"#1e2021\", \"#961B1B\", \"#702727\", \"#C43B3B\", \"#d15151\", \"#B71C1C\", \"#E8E8E8\", \"#752E2E\", \"#891818\"]));\r\n    sprite[SPRITE.PIRANHA][SPRITE.NIGHT] = CTI(create_pirahna(scale * 0.8, true, [\"#0c0c0d\", \"#21112D\", \"#281A49\", \"#462966\", \"#321C56\", \"#1C073D\", \"#FFFFFF\", \"#1C0833\", \"#1B1238\"]));\r\n    sprite[SPRITE.HURT_PIRANHA] = CTI(create_hurt_pirahna(scale * 0.8, [\"#B6222A\"]));\r\n    sprite[SPRITE.FISH1] = [];\r\n    sprite[SPRITE.FISH1][SPRITE.DAY] = CTI(create_fish1(scale * 0.4, true, [\"#1e2021\", \"#db6f26\", \"#ffffff\", \"#000000\", \"#833813\"], 0));\r\n    sprite[SPRITE.FISH1][SPRITE.NIGHT] = CTI(create_fish1(scale * 0.4, true, [\"#0c0c0d\", \"#21112D\", \"#281A49\", \"#462966\"], 0));\r\n    sprite[SPRITE.FISH2] = [];\r\n    sprite[SPRITE.FISH2][SPRITE.DAY] = CTI(create_fish1(scale * 0.4, true, [\"#1e2021\", \"#d35e35\", \"#ffffff\", \"#000000\", \"#000000\"], 1));\r\n    sprite[SPRITE.FISH2][SPRITE.NIGHT] = CTI(create_fish1(scale * 0.4, true, [\"#0c0c0d\", \"#21112D\", \"#281A49\", \"#462966\"], 1));\r\n    sprite[SPRITE.FISH3] = [];\r\n    sprite[SPRITE.FISH3][SPRITE.DAY] = CTI(create_fish1(scale * 0.4, true, [\"#1e2021\", \"#2973a5\", \"#ffffff\", \"#ffff00\", \"#000000\", \"#03243f\", \"#f2ec30\", \"#162f6d\"], 0));\r\n    sprite[SPRITE.FISH3][SPRITE.NIGHT] = CTI(create_fish1(scale * 0.4, true, [\"#0c0c0d\", \"#21112D\", \"#281A49\", \"#462966\"], 0));\r\n    sprite[SPRITE.HURT_FISH1] = CTI(create_hurt_fish1(scale * 0.4, [\"#B6222A\"]));\r\n    sprite[SPRITE.HURT_FISH2] = CTI(create_hurt_fish1(scale * 0.4, [\"#B6222A\"]));\r\n    sprite[SPRITE.HURT_FISH3] = CTI(create_hurt_fish1(scale * 0.4, [\"#B6222A\"]));\r\n    sprite[SPRITE.CRAB_LOOT] = CTI(create_crab_loot(scale * 0.35, true, [\"#0d1b1c\", \"#c04933\", \"#a33e2b\", \"#ee593d\", \"#c04933\"], 1));\r\n    sprite[SPRITE.CRAB_STICK] = CTI(create_crab_stick(scale * 0.35, true, [\"#1e2021\", \"#ed5f4f\", \"#ce4545\", \"#ffffff\", \"#e2dad7\"], 1));\r\n    sprite[SPRITE.CRAB_ATTACK] = [];\r\n    sprite[SPRITE.CRAB_ATTACK][SPRITE.DAY] = CTI(create_crab(scale * 0.35, true, [\"#1e2021\", \"#e45936\", \"#B6222A\", \"#B6222A\", \"#FFFFFF\"], 1));\r\n    sprite[SPRITE.CRAB_ATTACK][SPRITE.NIGHT] = CTI(create_crab(scale * 0.35, true, [\"#0c0c0d\", \"#613577\", \"#462966\", \"#1C073D\", \"#FFFFFF\"], 1));\r\n    sprite[SPRITE.CRAB] = [];\r\n    sprite[SPRITE.CRAB][SPRITE.DAY] = CTI(create_crab(scale * 0.35, true, [\"#1e2021\", \"#e45936\", \"#ffffff\", \"#181414\", \"#FFFFFF\"], 0));\r\n    sprite[SPRITE.CRAB][SPRITE.NIGHT] = CTI(create_crab(scale * 0.35, true, [\"#0c0c0d\", \"#34255d\", \"#563f83\", \"#180f21\", \"#FFFFFF\"], 0));\r\n    sprite[SPRITE.CRAB_CLAW_LEFT] = [];\r\n    sprite[SPRITE.CRAB_CLAW_LEFT][SPRITE.DAY] = CTI(create_crab_claw_left(scale * 0.35, true, [\"#1e2021\", \"#e45936\", \"#ffffff\"]));\r\n    sprite[SPRITE.CRAB_CLAW_LEFT][SPRITE.NIGHT] = CTI(create_crab_claw_left(scale * 0.35, true, [\"#0c0c0d\", \"#34255d\", \"#563f83\"]));\r\n    sprite[SPRITE.CRAB_CLAW_RIGHT] = [];\r\n    sprite[SPRITE.CRAB_CLAW_RIGHT][SPRITE.DAY] = CTI(create_crab_claw_right(scale * 0.42, true, [\"#1e2021\", \"#e45936\", \"#ffffff\"]));\r\n    sprite[SPRITE.CRAB_CLAW_RIGHT][SPRITE.NIGHT] = CTI(create_crab_claw_right(scale * 0.42, true, [\"#0c0c0d\", \"#34255d\", \"#563f83\"]));\r\n    sprite[SPRITE.CRAB_CLAW_LEFT_ATTACK] = [];\r\n    sprite[SPRITE.CRAB_CLAW_LEFT_ATTACK][SPRITE.DAY] = CTI(create_crab_claw_left(scale * 0.35, true, [\"#1e2021\", \"#e45936\", \"#B6222A\"]));\r\n    sprite[SPRITE.CRAB_CLAW_LEFT_ATTACK][SPRITE.NIGHT] = CTI(create_crab_claw_left(scale * 0.35, true, [\"#0c0c0d\", \"#613577\", \"#462966\"]));\r\n    sprite[SPRITE.CRAB_CLAW_RIGHT_ATTACK] = [];\r\n    sprite[SPRITE.CRAB_CLAW_RIGHT_ATTACK][SPRITE.DAY] = CTI(create_crab_claw_right(scale * 0.42, true, [\"#1e2021\", \"#e45936\", \"#B6222A\"]));\r\n    sprite[SPRITE.CRAB_CLAW_RIGHT_ATTACK][SPRITE.NIGHT] = CTI(create_crab_claw_right(scale * 0.42, true, [\"#0c0c0d\", \"#613577\", \"#462966\"]));\r\n    sprite[SPRITE.HURT_CRAB] = CTI(create_hurt_crab(scale * 0.35, [\"#B6222A\"]));\r\n    sprite[SPRITE.HURT_CRAB_CLAW_LEFT] = CTI(create_crab_claw_left(scale * 0.35, true, [undefined, \"#B6222A\"]));\r\n    sprite[SPRITE.HURT_CRAB_CLAW_RIGHT] = CTI(create_crab_claw_right(scale * 0.35, true, [undefined, \"#B6222A\"]));\r\n    sprite[SPRITE.HEAL_CRAB] = CTI(create_hurt_crab(scale * 0.35, [\"#22E066\"]));\r\n    sprite[SPRITE.HEAL_CRAB_CLAW_LEFT] = CTI(create_crab_claw_left(scale * 0.35, true, [undefined, \"#22E066\"]));\r\n    sprite[SPRITE.HEAL_CRAB_CLAW_RIGHT] = CTI(create_crab_claw_right(scale * 0.35, true, [undefined, \"#22E066\"]));\r\n    sprite[SPRITE.DIVING_MASK] = [];\r\n    sprite[SPRITE.DIVING_MASK][SPRITE.DAY] = CTI(create_divingmask(scale * 0.3, true, [\"#1e2021\", \"#65A8B7\", \"#2E85A0\", \"#14275B\", \"#081826\", \"#1A3163\", \"#0C1944\", \"#89C4CE\", \"#2E85A0\"]));\r\n    sprite[SPRITE.DIVING_MASK][SPRITE.NIGHT] = CTI(create_divingmask(scale * 0.3, true, [\"#0c0c0d\", \"#89C9C7\", \"#469E95\", \"#092C38\", \"#072021\", \"#0E343D\", \"#071F2D\", \"#9FD3D3\", \"#135367\"]));\r\n    sprite[SPRITE.SUPER_DIVING_SUIT] = [];\r\n    sprite[SPRITE.SUPER_DIVING_SUIT][SPRITE.DAY] = CTI(create_superdivingsuit(scale * 0.45, true, [\"#C4BC51\", \"#B29C32\", \"#201851\", \"#652D8E\", \"#1e2021\", \"#2E85A0\"]));\r\n    sprite[SPRITE.SUPER_DIVING_SUIT][SPRITE.NIGHT] = CTI(create_superdivingsuit(scale * 0.45, true, [\"#235050\", \"#357472\", \"#081B2D\", \"#342C7C\", \"#0c0c0d\", \"#135367\"]));\r\n    sprite[SPRITE.PLOT] = [];\r\n    sprite[SPRITE.PLOT][SPRITE.DAY] = CTI(create_plot(scale * 0.63, true, [\"#1e2021\", \"#352E1E\", \"#4C3B19\", \"#574122\"]));\r\n    sprite[SPRITE.PLOT][SPRITE.NIGHT] = CTI(create_plot(scale * 0.63, true, [\"#0c0c0d\", \"#071f22\", \"#0d2e33\", \"#184747\"]));\r\n    sprite[SPRITE.BRIDGE] = [];\r\n    sprite[SPRITE.BRIDGE][SPRITE.DAY] = CTI(create_bridge(scale, true, [\"#1e2021\", \"#332715\", \"#4C3B19\", \"#574122\"]));\r\n    sprite[SPRITE.BRIDGE][SPRITE.NIGHT] = CTI(create_bridge(scale, true, [\"#0c0c0d\", \"#071f22\", \"#0d2e33\", \"#184747\"]));\r\n    sprite[SPRITE.WOOD_TOWER] = [];\r\n    sprite[SPRITE.WOOD_TOWER][SPRITE.DAY] = IMAGES.WOOD_TOWERD;\r\n    sprite[SPRITE.WOOD_TOWER][SPRITE.NIGHT] = IMAGES.WOOD_TOWERN;\r\n    sprite[SPRITE.ROOF] = [];\r\n    sprite[SPRITE.ROOF][SPRITE.DAY] = CTI(create_roof(scale * 0.59, true, [\"#0d1b1c\", \"#44301b\", \"#57442a\", \"#523e26\"]));\r\n    sprite[SPRITE.ROOF][SPRITE.NIGHT] = CTI(create_roof(scale * 0.59, true, [\"#0c0c0d\", \"#062124\", \"#10373d\", \"#0f3333\"]));\r\n    sprite[SPRITE.ROOFS] = [sprite[SPRITE.ROOF]];\r\n    sprite[SPRITE.ROOFS][1] = [];\r\n    sprite[SPRITE.ROOFS][2] = [];\r\n    sprite[SPRITE.ROOFS][1][SPRITE.DAY] = CTI(create_roof1(scale * 0.59, true, [\"#0d1b1c\", \"#44301b\", \"#57442a\", \"#523e26\"]));\r\n    sprite[SPRITE.ROOFS][1][SPRITE.NIGHT] = CTI(create_roof1(scale * 0.59, true, [\"#0c0c0d\", \"#062124\", \"#10373d\", \"#0f3333\"]));\r\n    sprite[SPRITE.ROOFS][2][SPRITE.DAY] = CTI(create_roof2(scale * 0.59, true, [\"#0d1b1c\", \"#44301b\", \"#57442a\", \"#523e26\"]));\r\n    sprite[SPRITE.ROOFS][2][SPRITE.NIGHT] = CTI(create_roof2(scale * 0.59, true, [\"#0c0c0d\", \"#062124\", \"#10373d\", \"#0f3333\"]));\r\n    sprite[SPRITE.WATERING_CAN_FULL] = [];\r\n    sprite[SPRITE.WATERING_CAN_FULL][SPRITE.DAY] = CTI(create_rotated_img(3 - Math.PI / 2, create_watering_can(scale * 0.6, true, [\"#1e2021\", \"#674C2A\", \"#4C3B19\", \"#594225\", \"#1678a2\"])));\r\n    sprite[SPRITE.WATERING_CAN_FULL][SPRITE.NIGHT] = CTI(create_rotated_img(3 - Math.PI / 2, create_watering_can(scale * 0.6, true, [\"#0c0c0d\", \"#07383c\", \"#0c4e53\", \"#042b2e\", \"#0c5975\", \"#11546c\"])));\r\n    sprite[SPRITE.DEAD_BOX] = [];\r\n    sprite[SPRITE.DEAD_BOX][SPRITE.DAY] = CTI(create_dead_box(scale * 0.3, [\"#ad8850\", \"#714f24\", \"#9f7d4a\", \"#b38e59\", \"#8b1008\"], 0));\r\n    sprite[SPRITE.DEAD_BOX][SPRITE.NIGHT] = CTI(create_dead_box(scale * 0.3, [\"#1F5453\", \"#123335\", \"#1D4947\", \"#1F5453\", \"#0c2629\"], 0));\r\n    sprite[SPRITE.DEAD_BOX_UI] = CTI(create_dead_box_ui(scale * 0.3, [\"#ad8850\", \"#714f24\", \"#9f7d4a\", \"#b38e59\", \"#413624\"]));\r\n    sprite[SPRITE.HURT_DEAD_BOX] = CTI(create_hurt_dead_box(scale * 0.3, [\"#BB0000\"]));\r\n    sprite[SPRITE.WINDMILL_FLOUR] = create_craft_button(1, [{f: create_flour, x: 0, y: 0, a: 1, r: 0, c: [\"#B3AA8E\", \"#817961\", \"#EBEAE2\", \"#E0DFD8\"]}], 0.25, [\"#d2c77b\", \"#e7dc8f\", \"#bfb360\"], 0.7);\r\n    sprite[SPRITE.LAVA_HEART] = create_craft_button(1.5, [{f: create_dragon_heart, x: 0, y: 0, a: 1, r: 0, c: [\"#120202\", \"#750a0a\", \"#991616\", \"#120202\"]}], 0.45, [\"#5bbcc9\", \"#73d2df\", \"#4daab6\"], 0.9);\r\n    sprite[SPRITE.HEART_SYMBOL_HUD] = create_symbol_hud(scale * 0.35, [\"#072428\", \"#67A242\", \"#67A242\"], 0);\r\n    sprite[SPRITE.COLD_SYMBOL_HUD] = create_symbol_hud(scale * 0.35, [\"#172130\", \"#649BB2\", \"#FFFFFF\", \"#FFFFFF\", \"#90C2D3\", \"#649BB2\", \"#84BDD1\", \"#2F5866\"], 1);\r\n    sprite[SPRITE.FOOD_SYMBOL_HUD] = create_symbol_hud(scale * 0.35, [\"#3F0B11\", \"#B13424\", \"#FFFFFF\", \"#B13424\", \"#7e180b\"], 2);\r\n    sprite[SPRITE.WATER_SYMBOL_HUD] = create_symbol_hud(scale * 0.35, [\"#1B2F4C\", \"#29488E\", \"#76c3e8\", \"#ffffff\"], 3);\r\n    if (!mobile) sprite[SPRITE.LEADERBOARD] = CTI(create_leaderboard(scale)); else sprite[SPRITE.LEADERBOARD] = CTI(create_leaderboard_mobile(scale));\r\n    if (!mobile) sprite[SPRITE.GAUGES] = CTI(create_gauges(scale)); else sprite[SPRITE.GAUGES] = CTI(create_gauges_mobile(0.75));\r\n    if (!mobile) sprite[SPRITE.OXYGEN] = CTI(create_oxygen_gauges(scale)); else sprite[SPRITE.OXYGEN] = CTI(create_oxygen_gauges(0.75));\r\n    sprite[SPRITE.DELAY_HELMET] = CTI(create_viking_hat(scale * 0.16, true, [\"rgba(0, 0, 0, 0)\", \"#FFFFFF\", \"#FFFFFF\", \"#FFFFFF\", \"#FFFFFF\"]));\r\n    sprite[SPRITE.DELAY_WEAPON] = CTI(create_rotated_img(5.8, create_sword(scale * 0.15, true, [\"rgba(0, 0, 0, 0)\", \"#FFFFFF\", \"#FFFFFF\", \"#FFFFFF\", \"#FFFFFF\"])));\r\n    sprite[SPRITE.COUNTER] = [];\r\n    sprite[SPRITE.SLOT_NUMBER] = [];\r\n    for (var i = 0; i < WORLD.WITH_BAG + 2; i++) sprite[SPRITE.SLOT_NUMBER][i] = create_text(scale, \"\" + (i + 1), 12, \"#FFF\");\r\n    sprite[SPRITE.RECIPE_BUTTON] = [];\r\n    sprite[SPRITE.RECIPE_BUTTON].push(CTI(create_recipe_button(scale * 0.12, [\"#442F19\", \"#2C2112\", \"#C09D6F\", \"#A37943\", \"#eda80d\"])));\r\n    sprite[SPRITE.RECIPE_BUTTON].push(CTI(create_recipe_button(scale * 0.12, [\"#553b20\", \"#3e2f1a\", \"#d1ad7d\", \"#b3864c\", \"#eda80d\"], 1)));\r\n    sprite[SPRITE.RECIPE_BUTTON].push(CTI(create_recipe_button(scale * 0.12, [\"#30200f\", \"#20180c\", \"#a78559\", \"#855f2f\", \"#b37d08\"], 1)));\r\n    sprite[SPRITE.CLOCK] = [];\r\n    sprite[SPRITE.CLOCK].push(CTI(create_clock_day(scale * 0.22)));\r\n    sprite[SPRITE.CLOCK].push(CTI(create_clock_night(scale * 0.22)));\r\n    sprite[SPRITE.ARROW_CLOCK] = CTI(create_arrow_clock(scale * 0.22));\r\n    sprite[SPRITE.OPTION_BUTTON] = [];\r\n    sprite[SPRITE.OPTION_BUTTON].push(CTI(create_gear_option(scale * 1.5, [\"#795026\", \"#654320\", \"#eda80d\"], 0)));\r\n    sprite[SPRITE.OPTION_BUTTON].push(CTI(create_gear_option(scale * 1.5, [\"#8f5e2c\", \"#7a5126\", \"#eda80d\"], 1)));\r\n    sprite[SPRITE.OPTION_BUTTON].push(CTI(create_gear_option(scale * 1.5, [\"#67441f\", \"#573819\", \"#9c6e08\"], 1)));\r\n    sprite[SPRITE.AUTO_FEED] = IMAGES.AUTO_FEED;\r\n    sprite[SPRITE.BANDAGE_ACTIVATED] = IMAGES.BANDAGE_ACTIVATED;\r\n    sprite[SPRITE.STOP_REGENERATION] = IMAGES.STOP_REGENERATION;\r\n    sprite[SPRITE.STOP_REGENERATION_BLIZZARD] = IMAGES.STOP_REGENERATION_BLIZZARD;\r\n    sprite[SPRITE.SHOW_SPECTATORS] = create_text(scale, \"Show spectators\", 25, \"#FFF\", undefined, undefined, \"#000\", 5, 220);\r\n    sprite[SPRITE.RECONNECT] = create_text(scale, \"Reconnecting...\", 30, \"#FFF\");\r\n    console.log(\"Load canvas\", Date.now() - TIMEDEBUG);\r\n}\r\n;\r\nfunction init_fake_world() {\r\n    document.getElementById(\"game_body\").style.backgroundColor = SPRITE.GROUND[fake_world.time];\r\n    fake_world.items.push(new Item(ITEMS.FIRE, 0, 0, 0, 0, Math.random() * Math.PI * 2, 2, 1));\r\n    fake_world.items.push(new Item(ITEMS.FRUIT, 0, 0, 0, 0, 0, 0, 5));\r\n    fake_world.items.push(new Item(ITEMS.WORKBENCH, 0, 0, 0, 0, Math.PI / 4, 0, 0));\r\n    fake_world.items.push(new Item(ITEMS.FRUIT, 0, 0, 0, 0, 0, 0, 5));\r\n}\r\n;\r\nfunction draw_fake_world() {\r\n    var scale = 1;\r\n    var time = fake_world.time;\r\n    if (sprite[SPRITE.HERB]) {\r\n        ctx.drawImage(sprite[SPRITE.HERB][time][1], canw2 + 480, canh2 + 190);\r\n        ctx.drawImage(sprite[SPRITE.HERB][time][2], canw2 + 180, canh2 - 430);\r\n        ctx.drawImage(sprite[SPRITE.HERB][time][1], canw2 - 855, canh2 + 100);\r\n        ctx.drawImage(sprite[SPRITE.HERB][time][0], canw2 - 550, canh2 - 300);\r\n        ctx.drawImage(sprite[SPRITE.HERB][time][0], canw2 - 1020, canh2 - 520);\r\n    }\r\n    if (sprite[SPRITE.STONES]) {\r\n        ctx.drawImage(sprite[SPRITE.STONES][time][1], canw2 - 80, canh2 - 640);\r\n        ctx.drawImage(sprite[SPRITE.STONES][time][1], canw2 + 80, canh2 + 490);\r\n        ctx.drawImage(sprite[SPRITE.STONES][time][2], canw2 - 180, canh2 - 700);\r\n        ctx.drawImage(sprite[SPRITE.STONES][time][0], canw2 + 550, canh2 + 100);\r\n        ctx.drawImage(sprite[SPRITE.STONES][time][1], canw2 + 450, canh2 + 300);\r\n        ctx.drawImage(sprite[SPRITE.STONES][time][1], canw2 + 780, canh2 + 300);\r\n        ctx.drawImage(sprite[SPRITE.STONES][time][2], canw2 + 980, canh2 + 200);\r\n        ctx.drawImage(sprite[SPRITE.STONES][time][2], canw2 + 680, canh2 + 600);\r\n        ctx.drawImage(sprite[SPRITE.STONES][time][2], canw2 - 380, canh2 + 100);\r\n        ctx.drawImage(sprite[SPRITE.STONES][time][2], canw2 + 280, canh2 + 250);\r\n    }\r\n    if (sprite[SPRITE.PLANT]) {\r\n        ctx.drawImage(sprite[SPRITE.PLANT][time][0], canw2 - 590, canh2);\r\n        ctx.drawImage(sprite[SPRITE.PLANT][time][0], canw2 + 120, canh2 - 390);\r\n        ctx.drawImage(sprite[SPRITE.PLANT][time][0], canw2 - 270, canh2 + 340);\r\n    }\r\n    if (sprite[SPRITE.TREE]) {\r\n        ctx.drawImage(sprite[SPRITE.TREE][time][4], canw2 - 700, canh2 - 600);\r\n        ctx.drawImage(sprite[SPRITE.TREE][time][2], canw2 - 970, canh2 - 250);\r\n        ctx.drawImage(sprite[SPRITE.TREE][time][5], canw2 - 720, canh2 - 200);\r\n        ctx.drawImage(sprite[SPRITE.TREE][time][2], canw2 - 1020, canh2 + 340);\r\n        ctx.drawImage(sprite[SPRITE.TREE][time][0], canw2 - 1120, canh2 - 0);\r\n        ctx.drawImage(sprite[SPRITE.TREE][time][1], canw2 - 650, canh2 - 330);\r\n        ctx.drawImage(sprite[SPRITE.TREE][time][4], canw2 - 495, canh2 - 90);\r\n        ctx.drawImage(sprite[SPRITE.TREE][time][3], canw2 - 520, canh2 + 340);\r\n        ctx.drawImage(sprite[SPRITE.TREE][time][2], canw2 + 830, canh2 - 520);\r\n    }\r\n    if (sprite[SPRITE.FIR]) {}\r\n    if (user && world) {\r\n        var x = user.cam.x;\r\n        var y = user.cam.y;\r\n        user.cam.x = canw2;\r\n        user.cam.y = canh2;\r\n        var real_time = world.time;\r\n        world.time = fake_world.time;\r\n        var items = fake_world.items;\r\n        items[2].x = 400;\r\n        items[2].y = 100;\r\n        items[2].draw(SPRITE.WORKBENCH);\r\n        var fruits = items[1];\r\n        fruits.x = -500;\r\n        fruits.y = 100;\r\n        fruits.fruits[0].x = fruits.x - 20.5;\r\n        fruits.fruits[0].y = fruits.y - 22.5;\r\n        fruits.fruits[1].x = fruits.x - 35.5;\r\n        fruits.fruits[1].y = fruits.y + 7.5;\r\n        fruits.fruits[2].x = fruits.x + 7.5;\r\n        fruits.fruits[2].y = fruits.y - 30;\r\n        fruits.fruits[3].x = fruits.x + 22.5;\r\n        fruits.fruits[3].y = fruits.y;\r\n        fruits.fruits[4].x = fruits.x - 7.5;\r\n        fruits.fruits[4].y = fruits.y + 14.5;\r\n        for (var i = 0; i < fruits.info; i++) {\r\n            fruits.fruits[i].draw(SPRITE.FRUIT);\r\n        }\r\n        var fruits = items[3];\r\n        fruits.x = 210;\r\n        fruits.y = -290;\r\n        fruits.fruits[0].x = fruits.x - 20.5;\r\n        fruits.fruits[0].y = fruits.y - 22.5;\r\n        fruits.fruits[1].x = fruits.x - 35.5;\r\n        fruits.fruits[1].y = fruits.y + 7.5;\r\n        fruits.fruits[2].x = fruits.x + 7.5;\r\n        fruits.fruits[2].y = fruits.y - 30;\r\n        fruits.fruits[3].x = fruits.x + 22.5;\r\n        fruits.fruits[3].y = fruits.y;\r\n        fruits.fruits[4].x = fruits.x - 7.5;\r\n        fruits.fruits[4].y = fruits.y + 14.5;\r\n        for (var i = 0; i < fruits.info; i++) {\r\n            fruits.fruits[i].draw(SPRITE.FRUIT);\r\n        }\r\n        items[0].x = 450;\r\n        items[0].y = -100;\r\n        items[0].draw_bg(SPRITE.WOOD_FIRE);\r\n        items[0].draw_fg();\r\n        user.cam.x = x;\r\n        user.cam.y = y;\r\n        world.time = real_time;\r\n    }\r\n}\r\n;\r\nfunction render_inventory() {\r\n    sprite[SPRITE.INV_PUMPKIN] = create_craft_button(1, [{f: create_pumpkin, x: 0, y: 0, a: 1, r: 0, c: [\"#352b10\", \"#c06937\", \"#cd733b\", \"#b25e34\", \"#244e2b\", \"#214224\", \"#6f4424\", \"#3c3009\"]}], 0.2, [\"#3ba578\", \"#4eb687\", \"#3da34d\"], 0.5);\r\n    sprite[SPRITE.CHEST_PUMPKIN] = sprite[SPRITE.INV_PUMPKIN];\r\n    sprite[SPRITE.INV_CARROT] = [];\r\n    sprite[SPRITE.INV_CARROT][0] = IMAGES.INV_CARROT_OUT;\r\n    sprite[SPRITE.INV_CARROT][1] = IMAGES.INV_CARROT_IN;\r\n    sprite[SPRITE.INV_CARROT][2] = IMAGES.INV_CARROT_CLICK;\r\n    sprite[SPRITE.CHEST_CARROT] = sprite[SPRITE.INV_CARROT];\r\n    sprite[SPRITE.INV_WATERMELON] = [];\r\n    sprite[SPRITE.INV_WATERMELON][0] = IMAGES.INV_WATERMELON_OUT;\r\n    sprite[SPRITE.INV_WATERMELON][1] = IMAGES.INV_WATERMELON_IN;\r\n    sprite[SPRITE.INV_WATERMELON][2] = IMAGES.INV_WATERMELON_CLICK;\r\n    sprite[SPRITE.CHEST_WATERMELON] = sprite[SPRITE.INV_WATERMELON];\r\n    sprite[SPRITE.INV_ALOE_VERA] = [];\r\n    sprite[SPRITE.INV_ALOE_VERA][0] = IMAGES.INV_ALOE_VERA_OUT;\r\n    sprite[SPRITE.INV_ALOE_VERA][1] = IMAGES.INV_ALOE_VERA_IN;\r\n    sprite[SPRITE.INV_ALOE_VERA][2] = IMAGES.INV_ALOE_VERA_CLICK;\r\n    sprite[SPRITE.CHEST_ALOE_VERA] = sprite[SPRITE.INV_ALOE_VERA];\r\n    sprite[SPRITE.INV_CACTUS] = [];\r\n    sprite[SPRITE.INV_CACTUS][0] = IMAGES.INV_CACTUS_OUT;\r\n    sprite[SPRITE.INV_CACTUS][1] = IMAGES.INV_CACTUS_IN;\r\n    sprite[SPRITE.INV_CACTUS][2] = IMAGES.INV_CACTUS_CLICK;\r\n    sprite[SPRITE.CHEST_CACTUS] = sprite[SPRITE.INV_CACTUS];\r\n    sprite[SPRITE.INV_TOMATO] = [];\r\n    sprite[SPRITE.INV_TOMATO][0] = IMAGES.INV_TOMATO_OUT;\r\n    sprite[SPRITE.INV_TOMATO][1] = IMAGES.INV_TOMATO_IN;\r\n    sprite[SPRITE.INV_TOMATO][2] = IMAGES.INV_TOMATO_CLICK;\r\n    sprite[SPRITE.CHEST_TOMATO] = sprite[SPRITE.INV_TOMATO];\r\n    sprite[SPRITE.INV_BOAT] = [];\r\n    sprite[SPRITE.INV_BOAT][0] = IMAGES.INV_BOAT_OUT;\r\n    sprite[SPRITE.INV_BOAT][1] = IMAGES.INV_BOAT_IN;\r\n    sprite[SPRITE.INV_BOAT][2] = IMAGES.INV_BOAT_CLICK;\r\n    sprite[SPRITE.CHEST_BOAT] = sprite[SPRITE.INV_BOAT];\r\n    sprite[SPRITE.CRAFT_BOAT] = sprite[SPRITE.INV_BOAT];\r\n    sprite[SPRITE.INV_MACHETE] = [];\r\n    sprite[SPRITE.INV_MACHETE][0] = IMAGES.INV_MACHETE_OUT;\r\n    sprite[SPRITE.INV_MACHETE][1] = IMAGES.INV_MACHETE_IN;\r\n    sprite[SPRITE.INV_MACHETE][2] = IMAGES.INV_MACHETE_CLICK;\r\n    sprite[SPRITE.CHEST_MACHETE] = sprite[SPRITE.INV_MACHETE];\r\n    sprite[SPRITE.CRAFT_MACHETE] = sprite[SPRITE.INV_MACHETE];\r\n    sprite[SPRITE.INV_SLED] = [];\r\n    sprite[SPRITE.INV_SLED][0] = IMAGES.INV_SLED_OUT;\r\n    sprite[SPRITE.INV_SLED][1] = IMAGES.INV_SLED_IN;\r\n    sprite[SPRITE.INV_SLED][2] = IMAGES.INV_SLED_CLICK;\r\n    sprite[SPRITE.CHEST_SLED] = sprite[SPRITE.INV_SLED];\r\n    sprite[SPRITE.CRAFT_SLED] = sprite[SPRITE.INV_SLED];\r\n    sprite[SPRITE.INV_PIRATE_HAT] = [];\r\n    sprite[SPRITE.INV_PIRATE_HAT][0] = IMAGES.INV_PIRATE_HAT_OUT;\r\n    sprite[SPRITE.INV_PIRATE_HAT][1] = IMAGES.INV_PIRATE_HAT_IN;\r\n    sprite[SPRITE.INV_PIRATE_HAT][2] = IMAGES.INV_PIRATE_HAT_CLICK;\r\n    sprite[SPRITE.CHEST_PIRATE_HAT] = sprite[SPRITE.INV_PIRATE_HAT];\r\n    sprite[SPRITE.CRAFT_PIRATE_HAT] = sprite[SPRITE.INV_PIRATE_HAT];\r\n    sprite[SPRITE.INV_FUR_MAMMOTH] = [];\r\n    sprite[SPRITE.INV_FUR_MAMMOTH][0] = IMAGES.INV_FUR_MAMMOTH_OUT;\r\n    sprite[SPRITE.INV_FUR_MAMMOTH][1] = IMAGES.INV_FUR_MAMMOTH_IN;\r\n    sprite[SPRITE.INV_FUR_MAMMOTH][2] = IMAGES.INV_FUR_MAMMOTH_CLICK;\r\n    sprite[SPRITE.CHEST_FUR_MAMMOTH] = sprite[SPRITE.INV_FUR_MAMMOTH];\r\n    sprite[SPRITE.INV_FUR_HAT] = [];\r\n    sprite[SPRITE.INV_FUR_HAT][0] = IMAGES.INV_FUR_HAT_OUT;\r\n    sprite[SPRITE.INV_FUR_HAT][1] = IMAGES.INV_FUR_HAT_IN;\r\n    sprite[SPRITE.INV_FUR_HAT][2] = IMAGES.INV_FUR_HAT_CLICK;\r\n    sprite[SPRITE.CHEST_FUR_HAT] = sprite[SPRITE.INV_FUR_HAT];\r\n    sprite[SPRITE.CRAFT_FUR_HAT] = sprite[SPRITE.INV_FUR_HAT];\r\n    sprite[SPRITE.INV_WOOD_BOW] = [];\r\n    sprite[SPRITE.INV_WOOD_BOW][0] = IMAGES.INV_WOOD_BOW_OUT;\r\n    sprite[SPRITE.INV_WOOD_BOW][1] = IMAGES.INV_WOOD_BOW_IN;\r\n    sprite[SPRITE.INV_WOOD_BOW][2] = IMAGES.INV_WOOD_BOW_CLICK;\r\n    sprite[SPRITE.CHEST_WOOD_BOW] = sprite[SPRITE.INV_WOOD_BOW];\r\n    sprite[SPRITE.CRAFT_WOOD_BOW] = sprite[SPRITE.INV_WOOD_BOW];\r\n    sprite[SPRITE.INV_WOOD_ARROW] = [];\r\n    sprite[SPRITE.INV_WOOD_ARROW][0] = IMAGES.INV_WOOD_ARROW_OUT;\r\n    sprite[SPRITE.INV_WOOD_ARROW][1] = IMAGES.INV_WOOD_ARROW_IN;\r\n    sprite[SPRITE.INV_WOOD_ARROW][2] = IMAGES.INV_WOOD_ARROW_CLICK;\r\n    sprite[SPRITE.CHEST_WOOD_ARROW] = sprite[SPRITE.INV_WOOD_ARROW];\r\n    sprite[SPRITE.CRAFT_WOOD_ARROW] = sprite[SPRITE.INV_WOOD_ARROW];\r\n    sprite[SPRITE.INV_STONE_BOW] = [];\r\n    sprite[SPRITE.INV_STONE_BOW][0] = IMAGES.INV_STONE_BOW_OUT;\r\n    sprite[SPRITE.INV_STONE_BOW][1] = IMAGES.INV_STONE_BOW_IN;\r\n    sprite[SPRITE.INV_STONE_BOW][2] = IMAGES.INV_STONE_BOW_CLICK;\r\n    sprite[SPRITE.CHEST_STONE_BOW] = sprite[SPRITE.INV_STONE_BOW];\r\n    sprite[SPRITE.CRAFT_STONE_BOW] = sprite[SPRITE.INV_STONE_BOW];\r\n    sprite[SPRITE.INV_STONE_ARROW] = [];\r\n    sprite[SPRITE.INV_STONE_ARROW][0] = IMAGES.INV_STONE_ARROW_OUT;\r\n    sprite[SPRITE.INV_STONE_ARROW][1] = IMAGES.INV_STONE_ARROW_IN;\r\n    sprite[SPRITE.INV_STONE_ARROW][2] = IMAGES.INV_STONE_ARROW_CLICK;\r\n    sprite[SPRITE.CHEST_STONE_ARROW] = sprite[SPRITE.INV_STONE_ARROW];\r\n    sprite[SPRITE.CRAFT_STONE_ARROW] = sprite[SPRITE.INV_STONE_ARROW];\r\n    sprite[SPRITE.INV_GOLD_BOW] = [];\r\n    sprite[SPRITE.INV_GOLD_BOW][0] = IMAGES.INV_GOLD_BOW_OUT;\r\n    sprite[SPRITE.INV_GOLD_BOW][1] = IMAGES.INV_GOLD_BOW_IN;\r\n    sprite[SPRITE.INV_GOLD_BOW][2] = IMAGES.INV_GOLD_BOW_CLICK;\r\n    sprite[SPRITE.CHEST_GOLD_BOW] = sprite[SPRITE.INV_GOLD_BOW];\r\n    sprite[SPRITE.CRAFT_GOLD_BOW] = sprite[SPRITE.INV_GOLD_BOW];\r\n    sprite[SPRITE.INV_GOLD_ARROW] = [];\r\n    sprite[SPRITE.INV_GOLD_ARROW][0] = IMAGES.INV_GOLD_ARROW_OUT;\r\n    sprite[SPRITE.INV_GOLD_ARROW][1] = IMAGES.INV_GOLD_ARROW_IN;\r\n    sprite[SPRITE.INV_GOLD_ARROW][2] = IMAGES.INV_GOLD_ARROW_CLICK;\r\n    sprite[SPRITE.CHEST_GOLD_ARROW] = sprite[SPRITE.INV_GOLD_ARROW];\r\n    sprite[SPRITE.CRAFT_GOLD_ARROW] = sprite[SPRITE.INV_GOLD_ARROW];\r\n    sprite[SPRITE.INV_DIAMOND_BOW] = [];\r\n    sprite[SPRITE.INV_DIAMOND_BOW][0] = IMAGES.INV_DIAMOND_BOW_OUT;\r\n    sprite[SPRITE.INV_DIAMOND_BOW][1] = IMAGES.INV_DIAMOND_BOW_IN;\r\n    sprite[SPRITE.INV_DIAMOND_BOW][2] = IMAGES.INV_DIAMOND_BOW_CLICK;\r\n    sprite[SPRITE.CHEST_DIAMOND_BOW] = sprite[SPRITE.INV_DIAMOND_BOW];\r\n    sprite[SPRITE.CRAFT_DIAMOND_BOW] = sprite[SPRITE.INV_DIAMOND_BOW];\r\n    sprite[SPRITE.INV_DIAMOND_ARROW] = [];\r\n    sprite[SPRITE.INV_DIAMOND_ARROW][0] = IMAGES.INV_DIAMOND_ARROW_OUT;\r\n    sprite[SPRITE.INV_DIAMOND_ARROW][1] = IMAGES.INV_DIAMOND_ARROW_IN;\r\n    sprite[SPRITE.INV_DIAMOND_ARROW][2] = IMAGES.INV_DIAMOND_ARROW_CLICK;\r\n    sprite[SPRITE.CHEST_DIAMOND_ARROW] = sprite[SPRITE.INV_DIAMOND_ARROW];\r\n    sprite[SPRITE.CRAFT_DIAMOND_ARROW] = sprite[SPRITE.INV_DIAMOND_ARROW];\r\n    sprite[SPRITE.INV_AMETHYST_BOW] = [];\r\n    sprite[SPRITE.INV_AMETHYST_BOW][0] = IMAGES.INV_AMETHYST_BOW_OUT;\r\n    sprite[SPRITE.INV_AMETHYST_BOW][1] = IMAGES.INV_AMETHYST_BOW_IN;\r\n    sprite[SPRITE.INV_AMETHYST_BOW][2] = IMAGES.INV_AMETHYST_BOW_CLICK;\r\n    sprite[SPRITE.CHEST_AMETHYST_BOW] = sprite[SPRITE.INV_AMETHYST_BOW];\r\n    sprite[SPRITE.CRAFT_AMETHYST_BOW] = sprite[SPRITE.INV_AMETHYST_BOW];\r\n    sprite[SPRITE.INV_AMETHYST_ARROW] = [];\r\n    sprite[SPRITE.INV_AMETHYST_ARROW][0] = IMAGES.INV_AMETHYST_ARROW_OUT;\r\n    sprite[SPRITE.INV_AMETHYST_ARROW][1] = IMAGES.INV_AMETHYST_ARROW_IN;\r\n    sprite[SPRITE.INV_AMETHYST_ARROW][2] = IMAGES.INV_AMETHYST_ARROW_CLICK;\r\n    sprite[SPRITE.CHEST_AMETHYST_ARROW] = sprite[SPRITE.INV_AMETHYST_ARROW];\r\n    sprite[SPRITE.CRAFT_AMETHYST_ARROW] = sprite[SPRITE.INV_AMETHYST_ARROW];\r\n    sprite[SPRITE.INV_REIDITE_BOW] = [];\r\n    sprite[SPRITE.INV_REIDITE_BOW][0] = IMAGES.INV_REIDITE_BOW_OUT;\r\n    sprite[SPRITE.INV_REIDITE_BOW][1] = IMAGES.INV_REIDITE_BOW_IN;\r\n    sprite[SPRITE.INV_REIDITE_BOW][2] = IMAGES.INV_REIDITE_BOW_CLICK;\r\n    sprite[SPRITE.CHEST_REIDITE_BOW] = sprite[SPRITE.INV_REIDITE_BOW];\r\n    sprite[SPRITE.CRAFT_REIDITE_BOW] = sprite[SPRITE.INV_REIDITE_BOW];\r\n    sprite[SPRITE.INV_REIDITE_ARROW] = [];\r\n    sprite[SPRITE.INV_REIDITE_ARROW][0] = IMAGES.INV_REIDITE_ARROW_OUT;\r\n    sprite[SPRITE.INV_REIDITE_ARROW][1] = IMAGES.INV_REIDITE_ARROW_IN;\r\n    sprite[SPRITE.INV_REIDITE_ARROW][2] = IMAGES.INV_REIDITE_ARROW_CLICK;\r\n    sprite[SPRITE.CHEST_REIDITE_ARROW] = sprite[SPRITE.INV_REIDITE_ARROW];\r\n    sprite[SPRITE.CRAFT_REIDITE_ARROW] = sprite[SPRITE.INV_REIDITE_ARROW];\r\n    sprite[SPRITE.INV_DRAGON_BOW] = [];\r\n    sprite[SPRITE.INV_DRAGON_BOW][0] = IMAGES.INV_DRAGON_BOW_OUT;\r\n    sprite[SPRITE.INV_DRAGON_BOW][1] = IMAGES.INV_DRAGON_BOW_IN;\r\n    sprite[SPRITE.INV_DRAGON_BOW][2] = IMAGES.INV_DRAGON_BOW_CLICK;\r\n    sprite[SPRITE.CHEST_DRAGON_BOW] = sprite[SPRITE.INV_DRAGON_BOW];\r\n    sprite[SPRITE.CRAFT_DRAGON_BOW] = sprite[SPRITE.INV_DRAGON_BOW];\r\n    sprite[SPRITE.INV_DRAGON_ARROW] = [];\r\n    sprite[SPRITE.INV_DRAGON_ARROW][0] = IMAGES.INV_DRAGON_ARROW_OUT;\r\n    sprite[SPRITE.INV_DRAGON_ARROW][1] = IMAGES.INV_DRAGON_ARROW_IN;\r\n    sprite[SPRITE.INV_DRAGON_ARROW][2] = IMAGES.INV_DRAGON_ARROW_CLICK;\r\n    sprite[SPRITE.CHEST_DRAGON_ARROW] = sprite[SPRITE.INV_DRAGON_ARROW];\r\n    sprite[SPRITE.CRAFT_DRAGON_ARROW] = sprite[SPRITE.INV_DRAGON_ARROW];\r\n    sprite[SPRITE.INV_WOOD_SHIELD] = [];\r\n    sprite[SPRITE.INV_WOOD_SHIELD][0] = IMAGES.INV_WOOD_SHIELD_OUT;\r\n    sprite[SPRITE.INV_WOOD_SHIELD][1] = IMAGES.INV_WOOD_SHIELD_IN;\r\n    sprite[SPRITE.INV_WOOD_SHIELD][2] = IMAGES.INV_WOOD_SHIELD_CLICK;\r\n    sprite[SPRITE.CHEST_WOOD_SHIELD] = sprite[SPRITE.INV_WOOD_SHIELD];\r\n    sprite[SPRITE.CRAFT_WOOD_SHIELD] = sprite[SPRITE.INV_WOOD_SHIELD];\r\n    sprite[SPRITE.INV_STONE_SHIELD] = [];\r\n    sprite[SPRITE.INV_STONE_SHIELD][0] = IMAGES.INV_STONE_SHIELD_OUT;\r\n    sprite[SPRITE.INV_STONE_SHIELD][1] = IMAGES.INV_STONE_SHIELD_IN;\r\n    sprite[SPRITE.INV_STONE_SHIELD][2] = IMAGES.INV_STONE_SHIELD_CLICK;\r\n    sprite[SPRITE.CHEST_STONE_SHIELD] = sprite[SPRITE.INV_STONE_SHIELD];\r\n    sprite[SPRITE.CRAFT_STONE_SHIELD] = sprite[SPRITE.INV_STONE_SHIELD];\r\n    sprite[SPRITE.INV_GOLD_SHIELD] = [];\r\n    sprite[SPRITE.INV_GOLD_SHIELD][0] = IMAGES.INV_GOLD_SHIELD_OUT;\r\n    sprite[SPRITE.INV_GOLD_SHIELD][1] = IMAGES.INV_GOLD_SHIELD_IN;\r\n    sprite[SPRITE.INV_GOLD_SHIELD][2] = IMAGES.INV_GOLD_SHIELD_CLICK;\r\n    sprite[SPRITE.CHEST_GOLD_SHIELD] = sprite[SPRITE.INV_GOLD_SHIELD];\r\n    sprite[SPRITE.CRAFT_GOLD_SHIELD] = sprite[SPRITE.INV_GOLD_SHIELD];\r\n    sprite[SPRITE.INV_DIAMOND_SHIELD] = [];\r\n    sprite[SPRITE.INV_DIAMOND_SHIELD][0] = IMAGES.INV_DIAMOND_SHIELD_OUT;\r\n    sprite[SPRITE.INV_DIAMOND_SHIELD][1] = IMAGES.INV_DIAMOND_SHIELD_IN;\r\n    sprite[SPRITE.INV_DIAMOND_SHIELD][2] = IMAGES.INV_DIAMOND_SHIELD_CLICK;\r\n    sprite[SPRITE.CHEST_DIAMOND_SHIELD] = sprite[SPRITE.INV_DIAMOND_SHIELD];\r\n    sprite[SPRITE.CRAFT_DIAMOND_SHIELD] = sprite[SPRITE.INV_DIAMOND_SHIELD];\r\n    sprite[SPRITE.INV_AMETHYST_SHIELD] = [];\r\n    sprite[SPRITE.INV_AMETHYST_SHIELD][0] = IMAGES.INV_AMETHYST_SHIELD_OUT;\r\n    sprite[SPRITE.INV_AMETHYST_SHIELD][1] = IMAGES.INV_AMETHYST_SHIELD_IN;\r\n    sprite[SPRITE.INV_AMETHYST_SHIELD][2] = IMAGES.INV_AMETHYST_SHIELD_CLICK;\r\n    sprite[SPRITE.CHEST_AMETHYST_SHIELD] = sprite[SPRITE.INV_AMETHYST_SHIELD];\r\n    sprite[SPRITE.CRAFT_AMETHYST_SHIELD] = sprite[SPRITE.INV_AMETHYST_SHIELD];\r\n    sprite[SPRITE.INV_REIDITE_SHIELD] = [];\r\n    sprite[SPRITE.INV_REIDITE_SHIELD][0] = IMAGES.INV_REIDITE_SHIELD_OUT;\r\n    sprite[SPRITE.INV_REIDITE_SHIELD][1] = IMAGES.INV_REIDITE_SHIELD_IN;\r\n    sprite[SPRITE.INV_REIDITE_SHIELD][2] = IMAGES.INV_REIDITE_SHIELD_CLICK;\r\n    sprite[SPRITE.CHEST_REIDITE_SHIELD] = sprite[SPRITE.INV_REIDITE_SHIELD];\r\n    sprite[SPRITE.CRAFT_REIDITE_SHIELD] = sprite[SPRITE.INV_REIDITE_SHIELD];\r\n    sprite[SPRITE.INV_FLOWER_HAT] = [];\r\n    sprite[SPRITE.INV_FLOWER_HAT][0] = IMAGES.INV_FLOWER_HAT_OUT;\r\n    sprite[SPRITE.INV_FLOWER_HAT][1] = IMAGES.INV_FLOWER_HAT_IN;\r\n    sprite[SPRITE.INV_FLOWER_HAT][2] = IMAGES.INV_FLOWER_HAT_CLICK;\r\n    sprite[SPRITE.CHEST_FLOWER_HAT] = sprite[SPRITE.INV_FLOWER_HAT];\r\n    sprite[SPRITE.CRAFT_FLOWER_HAT] = sprite[SPRITE.INV_FLOWER_HAT];\r\n    sprite[SPRITE.INV_SANDWORM_JUICE] = [];\r\n    sprite[SPRITE.INV_SANDWORM_JUICE][0] = IMAGES.INV_SANDWORM_JUICE_OUT;\r\n    sprite[SPRITE.INV_SANDWORM_JUICE][1] = IMAGES.INV_SANDWORM_JUICE_IN;\r\n    sprite[SPRITE.INV_SANDWORM_JUICE][2] = IMAGES.INV_SANDWORM_JUICE_CLICK;\r\n    sprite[SPRITE.CHEST_SANDWORM_JUICE] = sprite[SPRITE.INV_SANDWORM_JUICE];\r\n    sprite[SPRITE.CRAFT_SANDWORM_JUICE] = sprite[SPRITE.INV_SANDWORM_JUICE];\r\n    sprite[SPRITE.INV_GARLIC] = create_craft_button(1, [{f: create_garlic, x: 0, y: 0, a: 1, r: 0, c: [\"#352b10\", \"#e8e8e8\", \"#bbbbbb\", \"#e0e1e0\", \"#c4c4c4\"]}], 0.22, [\"#3ba578\", \"#4eb687\", \"#3da34d\"], 0.5);\r\n    sprite[SPRITE.CHEST_GARLIC] = sprite[SPRITE.INV_GARLIC];\r\n    sprite[SPRITE.INV_THORNBUSH] = create_craft_button(1, [{f: create_brambles, x: 0, y: 0, a: 1, r: 0, c: [\"#352b10\", \"#349970\", \"#245c45\", \"#348361\", \"#e8e8e8\", \"#bbbbbb\"]}], 0.2, [\"#3ba578\", \"#4eb687\", \"#3da34d\"], 0.5);\r\n    sprite[SPRITE.CHEST_THORNBUSH] = sprite[SPRITE.INV_THORNBUSH];\r\n    sprite[SPRITE.INV_WINDMILL] = create_craft_button(1, [{f: create_windmill, x: -1, y: 0, a: 1, r: 0, c: [\"#0d1b1c\", \"#596560\", \"#394841\", \"#67766F\", \"#46554D\", \"#4C3B19\", \"#674C2A\", \"#7C5A29\", \"#596560\", \"#394841\"]}, {f: create_windmill_wing, x: -1, y: 0, a: 1, r: 0, c: [\"#0d1b1c\", \"#596560\", \"#394841\", \"#67766F\", \"#46554D\", \"#4C3B19\", \"#674C2A\", \"#7C5A29\", \"#596560\", \"#394841\"]}, {f: create_windmill_head, x: -1, y: 0, a: 1, r: 0, c: [\"#0d1b1c\", \"#596560\", \"#394841\", \"#67766F\", \"#46554D\", \"#4C3B19\", \"#674C2A\", \"#7C5A29\", \"#596560\", \"#394841\"]}], 0.4, [\"#3ba578\", \"#4eb687\", \"#3da34d\"], 0.5);\r\n    sprite[SPRITE.CRAFT_WINDMILL] = sprite[SPRITE.INV_WINDMILL];\r\n    sprite[SPRITE.INV_WILD_WHEAT] = create_craft_button(1, [{f: create_wheat, x: 0, y: 0, a: 1, r: 0, c: [\"#A89F67\", \"#9E8456\"]}], 1.2, [\"#3ba578\", \"#4eb687\", \"#3da34d\"], 0.5);\r\n    sprite[SPRITE.INV_SIGN] = create_craft_button(1, [{f: create_sign, x: 0, y: 0, a: 1, r: 0, c: [\"#0d1b1c\", \"#44301b\", \"#57442a\", \"#523e26\"]}], 0.14, [\"#3ba578\", \"#4eb687\", \"#3da34d\"], 0.5);\r\n    sprite[SPRITE.CRAFT_SIGN] = sprite[SPRITE.INV_SIGN];\r\n    sprite[SPRITE.INV_WHEAT_SEED] = create_craft_button(1, [{f: create_seed, x: 0, y: 0, a: 1, r: 0, c: [\"#A89F67\", \"#9E8456\"]}], 0.6, [\"#3ba578\", \"#4eb687\", \"#3da34d\"], 0.5);\r\n    sprite[SPRITE.CRAFT_WHEAT_SEED] = sprite[SPRITE.INV_WHEAT_SEED];\r\n    sprite[SPRITE.INV_SEED] = create_craft_button(1, [{f: create_seed, x: 0, y: 0, a: 1, r: 0, c: [\"#493d36\", \"#332b28\"]}], 0.7, [\"#3ba578\", \"#4eb687\", \"#3da34d\"], 0.5);\r\n    sprite[SPRITE.CRAFT_SEED] = sprite[SPRITE.INV_SEED];\r\n    sprite[SPRITE.INV_PUMPKIN_SEED] = create_craft_button(1, [{f: create_seed, x: 0, y: 0, a: 1, r: 0, c: [\"#c67933\", \"#b17238\"]}], 0.6, [\"#3ba578\", \"#4eb687\", \"#3da34d\"], 0.5);\r\n    sprite[SPRITE.CRAFT_PUMPKIN_SEED] = sprite[SPRITE.INV_PUMPKIN_SEED];\r\n    sprite[SPRITE.INV_GARLIC_SEED] = create_craft_button(1, [{f: create_seed, x: 0, y: 0, a: 1, r: 0, c: [\"#e8e8e8\", \"#bbbbbb\"]}], 0.6, [\"#3ba578\", \"#4eb687\", \"#3da34d\"], 0.5);\r\n    sprite[SPRITE.CRAFT_GARLIC_SEED] = sprite[SPRITE.INV_GARLIC_SEED];\r\n    sprite[SPRITE.INV_THORNBUSH_SEED] = create_craft_button(1, [{f: create_seed, x: 0, y: 0, a: 1, r: 0, c: [\"#328a56\", \"#449573\"]}], 0.6, [\"#3ba578\", \"#4eb687\", \"#3da34d\"], 0.5);\r\n    sprite[SPRITE.CRAFT_THORNBUSH_SEED] = sprite[SPRITE.INV_THORNBUSH_SEED];\r\n    sprite[SPRITE.INV_CARROT_SEED] = create_craft_button(1, [{f: create_seed, x: 0, y: 0, a: 1, r: 0, c: [\"#c98e2f\", \"#a36b11\"]}], 0.6, [\"#3ba578\", \"#4eb687\", \"#3da34d\"], 0.5);\r\n    sprite[SPRITE.CRAFT_CARROT_SEED] = sprite[SPRITE.INV_CARROT_SEED];\r\n    sprite[SPRITE.CHEST_CARROT_SEED] = sprite[SPRITE.INV_CARROT_SEED];\r\n    sprite[SPRITE.INV_WATERMELON_SEED] = create_craft_button(1, [{f: create_seed, x: 0, y: 0, a: 1, r: 0, c: [\"#13a56d\", \"#098a58\"]}], 0.6, [\"#3ba578\", \"#4eb687\", \"#3da34d\"], 0.5);\r\n    sprite[SPRITE.CRAFT_WATERMELON_SEED] = sprite[SPRITE.INV_WATERMELON_SEED];\r\n    sprite[SPRITE.CHEST_WATERMELON_SEED] = sprite[SPRITE.INV_WATERMELON_SEED];\r\n    sprite[SPRITE.INV_ALOE_VERA_SEED] = create_craft_button(1, [{f: create_seed, x: 0, y: 0, a: 1, r: 0, c: [\"#3a8214\", \"#4a9c1e\"]}], 0.6, [\"#3ba578\", \"#4eb687\", \"#3da34d\"], 0.5);\r\n    sprite[SPRITE.CRAFT_ALOE_VERA_SEED] = sprite[SPRITE.INV_ALOE_VERA_SEED];\r\n    sprite[SPRITE.CHEST_ALOE_VERA_SEED] = sprite[SPRITE.INV_ALOE_VERA_SEED];\r\n    sprite[SPRITE.INV_TOMATO_SEED] = create_craft_button(1, [{f: create_seed, x: 0, y: 0, a: 1, r: 0, c: [\"#b22419\", \"#99110e\"]}], 0.6, [\"#3ba578\", \"#4eb687\", \"#3da34d\"], 0.5);\r\n    sprite[SPRITE.CRAFT_TOMATO_SEED] = sprite[SPRITE.INV_TOMATO_SEED];\r\n    sprite[SPRITE.CHEST_TOMATO_SEED] = sprite[SPRITE.INV_TOMATO_SEED];\r\n    sprite[SPRITE.INV_FIRE] = create_craft_button(1, [{f: create_wood_fire, x: -2, y: -2, a: 1, r: -Math.PI / 7, c: [\"#4d2d14\", \"#432516\"]}, {f: create_fire, x: -2, y: -2, a: 1, r: -Math.PI / 7, c: [\"#efd435\", \"#ec8d35\", \"#e96132\"]}], 0.3, [\"#3ba578\", \"#4eb687\", \"#3da34d\"], 0.5);\r\n    sprite[SPRITE.CRAFT_FIRE] = sprite[SPRITE.INV_FIRE];\r\n    sprite[SPRITE.INV_BIG_FIRE] = create_craft_button(1, [{f: create_big_fire_wood, x: -2, y: -1, a: 1, r: -Math.PI / 7, c: [\"#4d2d14\", \"#432516\", \"#58645F\", \"#75827D\", \"#0c2c2e\"]}, {f: create_fire, x: -2, y: -1, a: 1, r: -Math.PI / 7, c: [\"#efd435\", \"#ec8d35\", \"#e96132\"]}], 0.3, [\"#3ba578\", \"#4eb687\", \"#3da34d\"], 0.5);\r\n    sprite[SPRITE.CRAFT_BIG_FIRE] = sprite[SPRITE.INV_BIG_FIRE];\r\n    sprite[SPRITE.INV_PIRATE_SWORD] = create_craft_button(1, [{f: create_pirate_sword, x: 2, y: 0, a: 1, r: Math.PI / 5, c: [\"#0d1b1c\", \"#4a3a22\", \"#362818\", \"#c7c7c7\", \"#909090\", \"#eceaea\", \"#bbbbbb\", \"#d6d1d1\"]}], 0.1, [\"#35b1b5\", \"#46c2c9\", \"#33b4e4\"], 0.5);\r\n    sprite[SPRITE.INV_SUGAR_CAN] = create_craft_button(1, [{f: create_sugar_can, x: 2, y: 0, a: 1, r: Math.PI / 5, c: [\"#0d1b1c\", \"#ffffff\", \"#5f6061\", \"#eb2933\", \"#57b74e\", \"#42a54d\", \"#ac222a\", \"#e6636a\"]}], 0.3, [\"#35b1b5\", \"#46c2c9\", \"#33b4e4\"], 0.5);\r\n    sprite[SPRITE.INV_SWORD_WOOD] = create_craft_button(1, [{f: create_sword_wood, x: 2, y: 0, a: 1, r: Math.PI / 5, c: [\"#252525\", \"#73583e\", \"#493425\", \"#7d6144\", \"#5e4530\", \"#563e2b\"]}], 0.15, [\"#35b1b5\", \"#46c2c9\", \"#33b4e4\"], 0.5);\r\n    sprite[SPRITE.INV_SWORD] = create_craft_button(1, [{f: create_stonesword, x: 2, y: 0, a: 1, r: Math.PI / 5, c: [\"#0d1b1c\", \"#939393\", \"#5f6061\", \"#b1afaf\", \"#493d36\", \"#332b28\"]}], 0.15, [\"#35b1b5\", \"#46c2c9\", \"#33b4e4\"], 0.5);\r\n    sprite[SPRITE.INV_SWORD_GOLD] = create_craft_button(1, [{f: create_goldsword, x: 2, y: 0, a: 1, r: Math.PI / 5, c: [\"#0d1b1c\", \"#c4bc51\", \"#b29c32\", \"#c4bc51\", \"#493e26\", \"#382e19\"]}], 0.15, [\"#35b1b5\", \"#46c2c9\", \"#33b4e4\"], 0.5);\r\n    sprite[SPRITE.INV_SWORD_DIAMOND] = create_craft_button(1, [{f: create_diamondsword, x: 2, y: 0, a: 1, r: Math.PI / 5, c: [\"#0d1b1c\", \"#6ad9e8\", \"#29aaa1\", \"#95e9f5\", \"#022320\", \"#011e19\", \"#FFFFFF\"]}], 0.15, [\"#35b1b5\", \"#46c2c9\", \"#33b4e4\"], 0.5);\r\n    sprite[SPRITE.INV_SWORD_AMETHYST] = create_craft_button(1, [{f: create_amesword, x: 2, y: 0, a: 1, r: Math.PI / 5, c: [\"#0d1b1c\", \"#b864d6\", \"#8c29aa\", \"#cc81e7\", \"#262114\", \"#211108\", \"#FFFFFF\"]}], 0.15, [\"#35b1b5\", \"#46c2c9\", \"#33b4e4\"], 0.5);\r\n    sprite[SPRITE.INV_PICK_WOOD] = create_craft_button(1, [{f: create_pickaxe, x: -2, y: 5, a: 1, r: -Math.PI / 5, c: [\"#0d1b1c\", \"#000000\", \"#0d1b1c\", \"#4d2d14\", \"#432516\", \"#4d2d14\", \"#432516\"]}], 0.45, [\"#35b1b5\", \"#46c2c9\", \"#33b4e4\"], 0.5);\r\n    sprite[SPRITE.INV_PICK] = create_craft_button(1, [{f: create_pickaxe, x: -2, y: 5, a: 1, r: -Math.PI / 5, c: [\"#0d1b1c\", \"#000000\", \"#0d1b1c\", \"#4d2d14\", \"#432516\", \"#939393\", \"#5f6061\"]}], 0.45, [\"#35b1b5\", \"#46c2c9\", \"#33b4e4\"], 0.5);\r\n    sprite[SPRITE.INV_PICK_GOLD] = create_craft_button(1, [{f: create_pickaxe, x: -2, y: 5, a: 1, r: -Math.PI / 5, c: [\"#0d1b1c\", \"#000000\", \"#0d1b1c\", \"#493e26\", \"#382e19\", \"#c4bc51\", \"#b29c32\"]}], 0.45, [\"#35b1b5\", \"#46c2c9\", \"#33b4e4\"], 0.5);\r\n    sprite[SPRITE.INV_PICK_DIAMOND] = create_craft_button(1, [{f: create_pickaxe, x: -2, y: 5, a: 1, r: -Math.PI / 5, c: [\"#0d1b1c\", \"#000000\", \"#0d1b1c\", \"#262114\", \"#211108\", \"#63c9d6\", \"#29aaa1\"]}], 0.45, [\"#35b1b5\", \"#46c2c9\", \"#33b4e4\"], 0.5);\r\n    sprite[SPRITE.INV_PICK_AMETHYST] = create_craft_button(1, [{f: create_pickaxe, x: -2, y: 5, a: 1, r: -Math.PI / 5, c: [\"#0d1b1c\", \"#000000\", \"#0d1b1c\", \"#262114\", \"#211108\", \"#b864d6\", \"#8c29aa\"]}], 0.45, [\"#35b1b5\", \"#46c2c9\", \"#33b4e4\"], 0.5);\r\n    sprite[SPRITE.INV_PICK_REIDITE] = [];\r\n    sprite[SPRITE.INV_PICK_REIDITE][0] = IMAGES.INV_PICK_REIDITE_OUT;\r\n    sprite[SPRITE.INV_PICK_REIDITE][1] = IMAGES.INV_PICK_REIDITE_IN;\r\n    sprite[SPRITE.INV_PICK_REIDITE][2] = IMAGES.INV_PICK_REIDITE_CLICK;\r\n    sprite[SPRITE.CRAFT_PICK_REIDITE] = sprite[SPRITE.INV_PICK_REIDITE];\r\n    sprite[SPRITE.CHEST_PICK_REIDITE] = sprite[SPRITE.INV_PICK_REIDITE];\r\n    sprite[SPRITE.INV_STONE] = create_craft_button(1, [{f: create_stone, x: -5, y: -5, a: 1, r: 0, c: [\"#252B28\", \"#58645F\", \"#75827D\"]}], 0.23, [\"#2b5c48\", \"#2b5c48\", \"#2b5c48\"], 0.5);\r\n    sprite[SPRITE.INV_GOLD] = create_craft_button(1, [{f: create_gold, x: -5, y: -5, a: 1, r: 0, c: [\"#282823\", \"#877c2d\", \"#c4bc51\"]}], 0.43, [\"#2b5c48\", \"#2b5c48\", \"#2b5c48\"], 0.5);\r\n    sprite[SPRITE.INV_DIAMOND] = create_craft_button(1, [{f: create_diamond, x: -5, y: -5, a: 1, r: 0, c: [\"#232828\", \"#3fc9c9\", \"#74ede6\"]}], 0.33, [\"#2b5c48\", \"#2b5c48\", \"#2b5c48\"], 0.5);\r\n    sprite[SPRITE.INV_WOOD] = create_craft_button(1, [{f: create_wood_fire, x: 0, y: -5, a: 1, r: Math.PI / 2.5, c: [\"#4d2d14\", \"#432516\"]}], 0.3, [\"#2b5c48\", \"#2b5c48\", \"#2b5c48\"], 0.5);\r\n    sprite[SPRITE.CRAFT_SWORD_WOOD] = sprite[SPRITE.INV_SWORD_WOOD];\r\n    sprite[SPRITE.CRAFT_SWORD] = sprite[SPRITE.INV_SWORD];\r\n    sprite[SPRITE.CRAFT_SWORD_GOLD] = sprite[SPRITE.INV_SWORD_GOLD];\r\n    sprite[SPRITE.CRAFT_SWORD_DIAMOND] = sprite[SPRITE.INV_SWORD_DIAMOND];\r\n    sprite[SPRITE.CRAFT_SWORD_AMETHYST] = sprite[SPRITE.INV_SWORD_AMETHYST];\r\n    sprite[SPRITE.CRAFT_PICK_WOOD] = sprite[SPRITE.INV_PICK_WOOD];\r\n    sprite[SPRITE.CRAFT_PICK] = sprite[SPRITE.INV_PICK];\r\n    sprite[SPRITE.CRAFT_PICK_GOLD] = sprite[SPRITE.INV_PICK_GOLD];\r\n    sprite[SPRITE.CRAFT_PICK_DIAMOND] = sprite[SPRITE.INV_PICK_DIAMOND];\r\n    sprite[SPRITE.CRAFT_PICK_AMETHYST] = sprite[SPRITE.INV_PICK_AMETHYST];\r\n    sprite[SPRITE.INV_PLANT] = create_craft_button(1, [{f: create_food_plant, x: 0, y: 0, a: 1, r: 0}], 0.4, [\"#3ba578\", \"#4eb687\", \"#3da34d\"], 0.5);\r\n    sprite[SPRITE.INV_WORK] = create_craft_button(1, [{f: create_workbench, x: 0, y: 0, a: 1, r: 0, c: [\"#0d1b1c\", \"#4d2d14\", \"#432516\", \"#756e52\", \"#663f22\", \"#9e9577\"]}], 0.45, [\"#3ba578\", \"#4eb687\", \"#3da34d\"], 0.5);\r\n    sprite[SPRITE.CRAFT_WORK] = sprite[SPRITE.INV_WORK];\r\n    sprite[SPRITE.INV_STONE_WALL] = create_craft_button(1, [{f: create_wall_stone, x: -2, y: -2, a: 1, r: 0, c: [\"#0d1b1c\", \"#6a7570\", \"#939995\", \"#9baaa3\", \"#adbcb5\", \"#8a938e\"]}], 0.4, [\"#3ba578\", \"#4eb687\", \"#3da34d\"], 0.5);\r\n    sprite[SPRITE.CRAFT_STONE_WALL] = sprite[SPRITE.INV_STONE_WALL];\r\n    sprite[SPRITE.INV_DIAMOND_WALL] = create_craft_button(1, [{f: create_wall_diamond, x: 0, y: 0, a: 1, r: 0, c: [\"#0d1b1c\", \"#5cc5ce\", \"#89d1d4\", \"#86d0d1\", \"#95d5d8\", \"#e0f2f6\", \"#b3e0e3\"]}], 0.4, [\"#3ba578\", \"#4eb687\", \"#3da34d\"], 0.5);\r\n    sprite[SPRITE.CRAFT_DIAMOND_WALL] = sprite[SPRITE.INV_DIAMOND_WALL];\r\n    sprite[SPRITE.INV_AMETHYST_WALL] = create_craft_button(1, [{f: create_wall_stone, x: 0, y: 0, a: 1, r: 0, c: [\"#0d1b1c\", \"#b15ecf\", \"#8c29aa\", \"#c26de0\", \"#af59cd\", \"#d588f1\"]}], 0.4, [\"#3ba578\", \"#4eb687\", \"#3da34d\"], 0.5);\r\n    sprite[SPRITE.CRAFT_AMETHYST_WALL] = sprite[SPRITE.INV_AMETHYST_WALL];\r\n    sprite[SPRITE.INV_GOLD_WALL] = create_craft_button(1, [{f: create_wall_gold, x: 0, y: 0, a: 1, r: 0, c: [\"#0d1b1c\", \"#877d36\", \"#a08f47\", \"#a7983c\", \"#b29e4d\", \"#c1b06b\"]}], 0.4, [\"#3ba578\", \"#4eb687\", \"#3da34d\"], 0.5);\r\n    sprite[SPRITE.CRAFT_GOLD_WALL] = sprite[SPRITE.INV_GOLD_WALL];\r\n    sprite[SPRITE.INV_WALL] = create_craft_button(1, [{f: create_wall, x: 0, y: 0, a: 1, r: 0, c: [\"#0d1b1c\", \"#4c3a15\", \"#634828\", \"#564021\", \"#634828\", \"#4c3a15\"]}], 0.45, [\"#3ba578\", \"#4eb687\", \"#3da34d\"], 0.5);\r\n    sprite[SPRITE.CRAFT_WALL] = sprite[SPRITE.INV_WALL];\r\n    sprite[SPRITE.INV_SPIKE] = create_craft_button(1, [{f: create_spike, x: 0, y: 0, a: 1, r: 0, c: [\"#0d1b1c\", \"#5f6061\", \"#939393\", \"#4c3a15\", \"#634828\", \"#564021\", \"#634828\", \"#4c3a15\"]}], 0.35, [\"#3ba578\", \"#4eb687\", \"#3da34d\"], 0.5);\r\n    sprite[SPRITE.CRAFT_SPIKE] = sprite[SPRITE.INV_SPIKE];\r\n    sprite[SPRITE.INV_GOLD_SPIKE] = create_craft_button(1, [{f: create_spike_gold, x: 0, y: 0, a: 1, r: 0, c: [\"#0d1b1c\", \"#5f6061\", \"#939393\", \"#877d36\", \"#a08f47\", \"#a7983c\", \"#b29e4d\", \"#c1b06b\"]}], 0.35, [\"#3ba578\", \"#4eb687\", \"#3da34d\"], 0.5);\r\n    sprite[SPRITE.CRAFT_GOLD_SPIKE] = sprite[SPRITE.INV_GOLD_SPIKE];\r\n    sprite[SPRITE.INV_DIAMOND_SPIKE] = create_craft_button(1, [{f: create_spike_gold, x: 0, y: 0, a: 1, r: 0, c: [\"#0d1b1c\", \"#7d8b90\", \"#9facaa\", \"#5cc5ce\", \"#89d1d4\", \"#86d0d1\", \"#95d5d8\", \"#e0f2f6\", \"#b3e0e3\"]}], 0.35, [\"#3ba578\", \"#4eb687\", \"#3da34d\"], 0.5);\r\n    sprite[SPRITE.CRAFT_DIAMOND_SPIKE] = sprite[SPRITE.INV_DIAMOND_SPIKE];\r\n    sprite[SPRITE.INV_STONE_SPIKE] = create_craft_button(1, [{f: create_spike_stone, x: 0, y: 0, a: 1, r: 0, c: [\"#0d1b1c\", \"#5f6061\", \"#939393\", \"#6a7570\", \"#939995\", \"#9baaa3\", \"#adbcb5\", \"#8a938e\"]}], 0.35, [\"#3ba578\", \"#4eb687\", \"#3da34d\"], 0.5);\r\n    sprite[SPRITE.CRAFT_STONE_SPIKE] = sprite[SPRITE.INV_STONE_SPIKE];\r\n    sprite[SPRITE.INV_AMETHYST_SPIKE] = create_craft_button(1, [{f: create_spike_stone, x: 0, y: 0, a: 1, r: 0, c: [\"#0d1b1c\", \"#5f6061\", \"#939393\", \"#b15ecf\", \"#8c29aa\", \"#c26de0\", \"#af59cd\", \"#d588f1\"]}], 0.35, [\"#3ba578\", \"#4eb687\", \"#3da34d\"], 0.5);\r\n    sprite[SPRITE.CRAFT_AMETHYST_SPIKE] = sprite[SPRITE.INV_AMETHYST_SPIKE];\r\n    sprite[SPRITE.INV_DOOR_WOOD_CLOSE] = create_craft_button(1, [{f: create_door_wood, x: 0, y: 0, a: 1, r: 0, c: [\"#0d1b1c\", \"#4c3b19\", \"#574122\", \"#644928\", \"#574122\", \"#735534\"]}], 0.6, [\"#3ba578\", \"#4eb687\", \"#3da34d\"], 0.5);\r\n    sprite[SPRITE.CRAFT_DOOR_WOOD_CLOSE] = sprite[SPRITE.INV_DOOR_WOOD_CLOSE];\r\n    sprite[SPRITE.INV_DOOR_STONE_CLOSE] = create_craft_button(1, [{f: create_door_stone, x: 0, y: 0, a: 1, r: 0, c: [\"#0d1b1c\", \"#6a7570\", \"#939995\", \"#9baaa3\", \"#8a938e\", \"#adbcb5\"]}], 0.6, [\"#3ba578\", \"#4eb687\", \"#3da34d\"], 0.5);\r\n    sprite[SPRITE.CRAFT_DOOR_STONE_CLOSE] = sprite[SPRITE.INV_DOOR_STONE_CLOSE];\r\n    sprite[SPRITE.INV_DOOR_AMETHYST_CLOSE] = create_craft_button(1, [{f: create_door_stone, x: 0, y: 0, a: 1, r: 0, c: [\"#0d1b1c\", \"#b15ecf\", \"#8c29aa\", \"#c26de0\", \"#af59cd\", \"#d588f1\"]}], 0.6, [\"#3ba578\", \"#4eb687\", \"#3da34d\"], 0.5);\r\n    sprite[SPRITE.CRAFT_DOOR_AMETHYST_CLOSE] = sprite[SPRITE.INV_DOOR_AMETHYST_CLOSE];\r\n    sprite[SPRITE.INV_DOOR_GOLD_CLOSE] = create_craft_button(1, [{f: create_door_gold, x: 0, y: 0, a: 1, r: 0, c: [\"#0d1b1c\", \"#877d36\", \"#a08f47\", \"#a7983c\", \"#9a8636\", \"#c1b06b\"]}], 0.6, [\"#3ba578\", \"#4eb687\", \"#3da34d\"], 0.5);\r\n    sprite[SPRITE.CRAFT_DOOR_GOLD_CLOSE] = sprite[SPRITE.INV_DOOR_GOLD_CLOSE];\r\n    sprite[SPRITE.INV_DOOR_DIAMOND_CLOSE] = create_craft_button(1, [{f: create_door_diamond, x: 0, y: 0, a: 1, r: 0, c: [\"#0d1b1c\", \"#5cc5ce\", \"#89d1d4\", \"#86d0d1\", \"#95d5d8\", \"#e0f2f6\", \"#b3e0e3\"]}], 0.6, [\"#3ba578\", \"#4eb687\", \"#3da34d\"], 0.5);\r\n    sprite[SPRITE.CRAFT_DOOR_DIAMOND_CLOSE] = sprite[SPRITE.INV_DOOR_DIAMOND_CLOSE];\r\n    sprite[SPRITE.INV_CHEST] = create_craft_button(1, [{f: create_chest, x: 0, y: 2, a: 1, r: 0, c: [\"#133a2b\", \"#9e8838\", \"#c4a23a\", \"#4c3b19\", \"#614627\", \"#614627\", \"#614627\", \"#c4a23a\", \"#c4a23a\", \"#c4a23a\"]}], 0.35, [\"#3ba578\", \"#4eb687\", \"#3da34d\"], 0.5);\r\n    sprite[SPRITE.CRAFT_CHEST] = sprite[SPRITE.INV_CHEST];\r\n    sprite[SPRITE.INV_MEAT] = create_craft_button(1, [{f: create_meat, x: 0, y: -3, a: 1, r: 0, c: [\"#dd5d57\", \"#ffffff\", \"#5e5d5e\", \"#ffffff\"]}], 1.4, [\"#3ba578\", \"#4eb687\", \"#3da34d\"], 0.5);\r\n    sprite[SPRITE.INV_COOKED_MEAT] = create_craft_button(1, [{f: create_meat, x: 0, y: -3, a: 1, r: 0, c: [\"#602920\", \"#844f49\", \"#5e5d5e\", \"#d3ccc7\"]}], 1.4, [\"#3ba578\", \"#4eb687\", \"#3da34d\"], 0.5);\r\n    sprite[SPRITE.CRAFT_COOKED_MEAT] = sprite[SPRITE.INV_COOKED_MEAT];\r\n    sprite[SPRITE.INV_CORD] = create_craft_button(1, [{f: create_cord, x: -3, y: -3, a: 1, r: 0, c: [\"#cec0c4\", \"#ffffff\", \"#6d6768\"]}], 0.9, [\"#3ba578\", \"#4eb687\", \"#3da34d\"], 0.5);\r\n    sprite[SPRITE.INV_BLUE_CORD] = create_craft_button(1, [{f: create_cord, x: -3, y: -3, a: 1, r: 0, c: [\"#d4e9ec\", \"#37b1d7\", \"#506c71\"]}], 0.9, [\"#3ba578\", \"#4eb687\", \"#3da34d\"], 0.5);\r\n    sprite[SPRITE.CRAFT_BLUE_CORD] = sprite[SPRITE.INV_BLUE_CORD];\r\n    sprite[SPRITE.INV_FUR] = create_craft_button(1, [{f: create_fur, x: -3, y: -3, a: 1, r: 0, c: [\"#ef96be\", \"#ffffff\"]}], 0.5, [\"#2b5c48\", \"#2b5c48\", \"#2b5c48\"], 0.5);\r\n    sprite[SPRITE.INV_FUR_BOAR] = create_craft_button(1, [{f: create_fur, x: -3, y: -3, a: 1, r: 0, c: [\"#55423e\", \"#ffffff\"]}], 0.5, [\"#2b5c48\", \"#2b5c48\", \"#2b5c48\"], 0.5);\r\n    sprite[SPRITE.INV_SPECIAL_FUR] = create_craft_button(1, [{f: create_special_fur, x: 0, y: 0, a: 1, r: 0, c: [\"#ffffff\", \"#e7e2e2\", \"#b35c46\", \"#a34d37\"]}], 0.25, [\"#2b5c48\", \"#2b5c48\", \"#2b5c48\"], 0.5);\r\n    sprite[SPRITE.INV_SPECIAL_FUR_2] = create_craft_button(1, [{f: create_special_fur, x: 0, y: 0, a: 1, r: 0, c: [\"#14151b\", \"#000000\", \"#b35c46\", \"#a34d37\"]}], 0.25, [\"#2b5c48\", \"#2b5c48\", \"#2b5c48\"], 0.5);\r\n    sprite[SPRITE.INV_KRAKEN_SKIN] = create_craft_button(1, [{f: create_fur, x: 0, y: 0, a: 1, r: 0, c: [\"#201851\", \"#b6222a\"]}], 0.5, [\"#2b5c48\", \"#2b5c48\", \"#2b5c48\"], 0.5);\r\n    sprite[SPRITE.INV_FUR_WOLF] = create_craft_button(1, [{f: create_fur, x: -3, y: -3, a: 1, r: 0, c: [\"#231f20\", \"#b6222a\"]}], 0.5, [\"#2b5c48\", \"#2b5c48\", \"#2b5c48\"], 0.5);\r\n    sprite[SPRITE.INV_FUR_WINTER] = create_craft_button(1, [{f: create_fur, x: -3, y: -3, a: 1, r: 0, c: [\"#ffffff\", \"#b6222a\"]}], 0.5, [\"#2b5c48\", \"#2b5c48\", \"#2b5c48\"], 0.5);\r\n    sprite[SPRITE.INV_EARMUFFS] = create_craft_button(1, [{f: create_earmuff, x: 0, y: 0, a: 1, r: 0, c: [\"#f9efeb\", \"#dfd1cb\", \"#3e3c25\", \"#4d4a2e\"]}], 0.4, [\"#35b1b5\", \"#46c2c9\", \"#33b4e4\"], 0.5);\r\n    sprite[SPRITE.CRAFT_EARMUFFS] = sprite[SPRITE.INV_EARMUFFS];\r\n    sprite[SPRITE.INV_COAT] = create_craft_button(1, [{f: create_coat, x: 0, y: 0, a: 1, r: 0, c: [\"#3e3c25\", \"#4d4a2e\", \"#f9efeb\", \"#dfd1cb\"]}], 0.4, [\"#35b1b5\", \"#46c2c9\", \"#33b4e4\"], 0.5);\r\n    sprite[SPRITE.CRAFT_COAT] = sprite[SPRITE.INV_COAT];\r\n    sprite[SPRITE.INV_CAP_SCARF] = create_craft_button(1, [{f: create_cap_scarf, x: 0, y: 0, a: 1, r: 0, c: [\"#171a19\", \"#dee7e7\", \"#b8cccb\", \"#ffffff\", \"#e3e8e8\"]}], 0.4, [\"#35b1b5\", \"#46c2c9\", \"#33b4e4\"], 0.5);\r\n    sprite[SPRITE.CRAFT_CAP_SCARF] = sprite[SPRITE.INV_CAP_SCARF];\r\n    sprite[SPRITE.INV_CHRISTMAS_HAT] = create_craft_button(1, [{f: create_christmas_hat, x: 0, y: 5, a: 1, r: 0, c: [\"#171a19\", \"#c5232c\", \"#84191d\", \"#a72027\", \"#fef4f4\", \"#e9dad9\"]}], 0.35, [\"#35b1b5\", \"#46c2c9\", \"#33b4e4\"], 0.5);\r\n    sprite[SPRITE.CHEST_CHRISTMAS_HAT] = sprite[SPRITE.INV_CHRISTMAS_HAT];\r\n    sprite[SPRITE.INV_ELF_HAT] = create_craft_button(1, [{f: create_elf_hat, x: 0, y: 5, a: 1, r: 0, c: [\"#171a19\", \"#0f964c\", \"#106e3b\", \"#138344\", \"#fef4f4\", \"#e9dad9\", \"#C5232C\", \"#A92D2D\"]}], 0.35, [\"#35b1b5\", \"#46c2c9\", \"#33b4e4\"], 0.5);\r\n    sprite[SPRITE.CHEST_ELF_HAT] = sprite[SPRITE.INV_ELF_HAT];\r\n    sprite[SPRITE.INV_BANDAGE] = create_craft_button(1, [{f: create_bandage, x: -2, y: -2, a: 1, r: 0, c: [\"#ffffff\", \"#cec0c4\"]}], 0.35, [\"#3ba578\", \"#4eb687\", \"#3da34d\"], 0.5);\r\n    sprite[SPRITE.CRAFT_BANDAGE] = sprite[SPRITE.INV_BANDAGE];\r\n    sprite[SPRITE.INV_BAG] = [];\r\n    sprite[SPRITE.INV_BAG][0] = IMAGES.INV_BAG_OUT;\r\n    sprite[SPRITE.INV_BAG][1] = IMAGES.INV_BAG_IN;\r\n    sprite[SPRITE.INV_BAG][2] = IMAGES.INV_BAG_CLICK;\r\n    sprite[SPRITE.CRAFT_BAG] = sprite[SPRITE.INV_BAG];\r\n    sprite[SPRITE.INV_PITCHFORK] = [];\r\n    sprite[SPRITE.INV_PITCHFORK][0] = IMAGES.INV_PITCHFORK_OUT;\r\n    sprite[SPRITE.INV_PITCHFORK][1] = IMAGES.INV_PITCHFORK_IN;\r\n    sprite[SPRITE.INV_PITCHFORK][2] = IMAGES.INV_PITCHFORK_CLICK;\r\n    sprite[SPRITE.CRAFT_PITCHFORK] = sprite[SPRITE.INV_PITCHFORK];\r\n    sprite[SPRITE.CHEST_PITCHFORK] = sprite[SPRITE.INV_PITCHFORK];\r\n    sprite[SPRITE.INV_PITCHFORK2] = [];\r\n    sprite[SPRITE.INV_PITCHFORK2][0] = IMAGES.INV_PITCHFORK2_OUT;\r\n    sprite[SPRITE.INV_PITCHFORK2][1] = IMAGES.INV_PITCHFORK2_IN;\r\n    sprite[SPRITE.INV_PITCHFORK2][2] = IMAGES.INV_PITCHFORK2_CLICK;\r\n    sprite[SPRITE.CRAFT_PITCHFORK2] = sprite[SPRITE.INV_PITCHFORK2];\r\n    sprite[SPRITE.CHEST_PITCHFORK2] = sprite[SPRITE.INV_PITCHFORK2];\r\n    sprite[SPRITE.INV_PITCHFORK_PART] = [];\r\n    sprite[SPRITE.INV_PITCHFORK_PART][0] = IMAGES.INV_PITCHFORK_PART_CLICK;\r\n    sprite[SPRITE.INV_PITCHFORK_PART][1] = IMAGES.INV_PITCHFORK_PART_CLICK;\r\n    sprite[SPRITE.INV_PITCHFORK_PART][2] = IMAGES.INV_PITCHFORK_PART_CLICK;\r\n    sprite[SPRITE.CHEST_PITCHFORK_PART] = sprite[SPRITE.INV_PITCHFORK_PART];\r\n    sprite[SPRITE.INV_PILOT_HELMET] = [];\r\n    sprite[SPRITE.INV_PILOT_HELMET][0] = IMAGES.INV_PILOT_HELMET_OUT;\r\n    sprite[SPRITE.INV_PILOT_HELMET][1] = IMAGES.INV_PILOT_HELMET_IN;\r\n    sprite[SPRITE.INV_PILOT_HELMET][2] = IMAGES.INV_PILOT_HELMET_CLICK;\r\n    sprite[SPRITE.CRAFT_PILOT_HELMET] = sprite[SPRITE.INV_PILOT_HELMET];\r\n    sprite[SPRITE.CHEST_PILOT_HELMET] = sprite[SPRITE.INV_PILOT_HELMET];\r\n    sprite[SPRITE.INV_PILOT_GLASSES] = [];\r\n    sprite[SPRITE.INV_PILOT_GLASSES][0] = IMAGES.INV_PILOT_GLASSES_CLICK;\r\n    sprite[SPRITE.INV_PILOT_GLASSES][1] = IMAGES.INV_PILOT_GLASSES_CLICK;\r\n    sprite[SPRITE.INV_PILOT_GLASSES][2] = IMAGES.INV_PILOT_GLASSES_CLICK;\r\n    sprite[SPRITE.CHEST_PILOT_GLASSES] = sprite[SPRITE.INV_PILOT_GLASSES];\r\n    sprite[SPRITE.INV_WOOD_TOWER] = [];\r\n    sprite[SPRITE.INV_WOOD_TOWER][0] = IMAGES.INV_WOOD_TOWER_OUT;\r\n    sprite[SPRITE.INV_WOOD_TOWER][1] = IMAGES.INV_WOOD_TOWER_IN;\r\n    sprite[SPRITE.INV_WOOD_TOWER][2] = IMAGES.INV_WOOD_TOWER_CLICK;\r\n    sprite[SPRITE.CRAFT_WOOD_TOWER] = sprite[SPRITE.INV_WOOD_TOWER];\r\n    sprite[SPRITE.CHEST_WOOD_TOWER] = sprite[SPRITE.INV_WOOD_TOWER];\r\n    sprite[SPRITE.INV_WOOD_DOOR_SPIKE] = [];\r\n    sprite[SPRITE.INV_WOOD_DOOR_SPIKE][0] = IMAGES.INV_WOOD_DOOR_SPIKE_OUT;\r\n    sprite[SPRITE.INV_WOOD_DOOR_SPIKE][1] = IMAGES.INV_WOOD_DOOR_SPIKE_IN;\r\n    sprite[SPRITE.INV_WOOD_DOOR_SPIKE][2] = IMAGES.INV_WOOD_DOOR_SPIKE_CLICK;\r\n    sprite[SPRITE.CRAFT_WOOD_DOOR_SPIKE] = sprite[SPRITE.INV_WOOD_DOOR_SPIKE];\r\n    sprite[SPRITE.CHEST_WOOD_DOOR_SPIKE] = sprite[SPRITE.INV_WOOD_DOOR_SPIKE];\r\n    sprite[SPRITE.INV_STONE_DOOR_SPIKE] = [];\r\n    sprite[SPRITE.INV_STONE_DOOR_SPIKE][0] = IMAGES.INV_STONE_DOOR_SPIKE_OUT;\r\n    sprite[SPRITE.INV_STONE_DOOR_SPIKE][1] = IMAGES.INV_STONE_DOOR_SPIKE_IN;\r\n    sprite[SPRITE.INV_STONE_DOOR_SPIKE][2] = IMAGES.INV_STONE_DOOR_SPIKE_CLICK;\r\n    sprite[SPRITE.CRAFT_STONE_DOOR_SPIKE] = sprite[SPRITE.INV_STONE_DOOR_SPIKE];\r\n    sprite[SPRITE.CHEST_STONE_DOOR_SPIKE] = sprite[SPRITE.INV_STONE_DOOR_SPIKE];\r\n    sprite[SPRITE.INV_GOLD_DOOR_SPIKE] = [];\r\n    sprite[SPRITE.INV_GOLD_DOOR_SPIKE][0] = IMAGES.INV_GOLD_DOOR_SPIKE_OUT;\r\n    sprite[SPRITE.INV_GOLD_DOOR_SPIKE][1] = IMAGES.INV_GOLD_DOOR_SPIKE_IN;\r\n    sprite[SPRITE.INV_GOLD_DOOR_SPIKE][2] = IMAGES.INV_GOLD_DOOR_SPIKE_CLICK;\r\n    sprite[SPRITE.CRAFT_GOLD_DOOR_SPIKE] = sprite[SPRITE.INV_GOLD_DOOR_SPIKE];\r\n    sprite[SPRITE.CHEST_GOLD_DOOR_SPIKE] = sprite[SPRITE.INV_GOLD_DOOR_SPIKE];\r\n    sprite[SPRITE.INV_DIAMOND_DOOR_SPIKE] = [];\r\n    sprite[SPRITE.INV_DIAMOND_DOOR_SPIKE][0] = IMAGES.INV_DIAMOND_DOOR_SPIKE_OUT;\r\n    sprite[SPRITE.INV_DIAMOND_DOOR_SPIKE][1] = IMAGES.INV_DIAMOND_DOOR_SPIKE_IN;\r\n    sprite[SPRITE.INV_DIAMOND_DOOR_SPIKE][2] = IMAGES.INV_DIAMOND_DOOR_SPIKE_CLICK;\r\n    sprite[SPRITE.CRAFT_DIAMOND_DOOR_SPIKE] = sprite[SPRITE.INV_DIAMOND_DOOR_SPIKE];\r\n    sprite[SPRITE.CHEST_DIAMOND_DOOR_SPIKE] = sprite[SPRITE.INV_DIAMOND_DOOR_SPIKE];\r\n    sprite[SPRITE.INV_AMETHYST_DOOR_SPIKE] = [];\r\n    sprite[SPRITE.INV_AMETHYST_DOOR_SPIKE][0] = IMAGES.INV_AMETHYST_DOOR_SPIKE_OUT;\r\n    sprite[SPRITE.INV_AMETHYST_DOOR_SPIKE][1] = IMAGES.INV_AMETHYST_DOOR_SPIKE_IN;\r\n    sprite[SPRITE.INV_AMETHYST_DOOR_SPIKE][2] = IMAGES.INV_AMETHYST_DOOR_SPIKE_CLICK;\r\n    sprite[SPRITE.CRAFT_AMETHYST_DOOR_SPIKE] = sprite[SPRITE.INV_AMETHYST_DOOR_SPIKE];\r\n    sprite[SPRITE.CHEST_AMETHYST_DOOR_SPIKE] = sprite[SPRITE.INV_AMETHYST_DOOR_SPIKE];\r\n    sprite[SPRITE.INV_REIDITE_DOOR_SPIKE] = [];\r\n    sprite[SPRITE.INV_REIDITE_DOOR_SPIKE][0] = IMAGES.INV_REIDITE_DOOR_SPIKE_OUT;\r\n    sprite[SPRITE.INV_REIDITE_DOOR_SPIKE][1] = IMAGES.INV_REIDITE_DOOR_SPIKE_IN;\r\n    sprite[SPRITE.INV_REIDITE_DOOR_SPIKE][2] = IMAGES.INV_REIDITE_DOOR_SPIKE_CLICK;\r\n    sprite[SPRITE.CRAFT_REIDITE_DOOR_SPIKE] = sprite[SPRITE.INV_REIDITE_DOOR_SPIKE];\r\n    sprite[SPRITE.CHEST_REIDITE_DOOR_SPIKE] = sprite[SPRITE.INV_REIDITE_DOOR_SPIKE];\r\n    sprite[SPRITE.INV_REIDITE_DOOR] = [];\r\n    sprite[SPRITE.INV_REIDITE_DOOR][0] = IMAGES.INV_REIDITE_DOOR_OUT;\r\n    sprite[SPRITE.INV_REIDITE_DOOR][1] = IMAGES.INV_REIDITE_DOOR_IN;\r\n    sprite[SPRITE.INV_REIDITE_DOOR][2] = IMAGES.INV_REIDITE_DOOR_CLICK;\r\n    sprite[SPRITE.CRAFT_REIDITE_DOOR] = sprite[SPRITE.INV_REIDITE_DOOR];\r\n    sprite[SPRITE.CHEST_REIDITE_DOOR] = sprite[SPRITE.INV_REIDITE_DOOR];\r\n    sprite[SPRITE.INV_REIDITE_SPIKE] = [];\r\n    sprite[SPRITE.INV_REIDITE_SPIKE][0] = IMAGES.INV_REIDITE_SPIKE_OUT;\r\n    sprite[SPRITE.INV_REIDITE_SPIKE][1] = IMAGES.INV_REIDITE_SPIKE_IN;\r\n    sprite[SPRITE.INV_REIDITE_SPIKE][2] = IMAGES.INV_REIDITE_SPIKE_CLICK;\r\n    sprite[SPRITE.CRAFT_REIDITE_SPIKE] = sprite[SPRITE.INV_REIDITE_SPIKE];\r\n    sprite[SPRITE.CHEST_REIDITE_SPIKE] = sprite[SPRITE.INV_REIDITE_SPIKE];\r\n    sprite[SPRITE.INV_REIDITE_WALL] = [];\r\n    sprite[SPRITE.INV_REIDITE_WALL][0] = IMAGES.INV_REIDITE_WALL_OUT;\r\n    sprite[SPRITE.INV_REIDITE_WALL][1] = IMAGES.INV_REIDITE_WALL_IN;\r\n    sprite[SPRITE.INV_REIDITE_WALL][2] = IMAGES.INV_REIDITE_WALL_CLICK;\r\n    sprite[SPRITE.CRAFT_REIDITE_WALL] = sprite[SPRITE.INV_REIDITE_WALL];\r\n    sprite[SPRITE.CHEST_REIDITE_WALL] = sprite[SPRITE.INV_REIDITE_WALL];\r\n    sprite[SPRITE.INV_PENGUIN_FEATHER] = [];\r\n    sprite[SPRITE.INV_PENGUIN_FEATHER][0] = IMAGES.INV_PENGUIN_FEATHER;\r\n    sprite[SPRITE.INV_PENGUIN_FEATHER][1] = IMAGES.INV_PENGUIN_FEATHER;\r\n    sprite[SPRITE.INV_PENGUIN_FEATHER][2] = IMAGES.INV_PENGUIN_FEATHER;\r\n    sprite[SPRITE.CRAFT_PENGUIN_FEATHER] = sprite[SPRITE.INV_PENGUIN_FEATHER];\r\n    sprite[SPRITE.CHEST_PENGUIN_FEATHER] = sprite[SPRITE.INV_PENGUIN_FEATHER];\r\n    sprite[SPRITE.INV_HAWK_FEATHER] = [];\r\n    sprite[SPRITE.INV_HAWK_FEATHER][0] = IMAGES.INV_HAWK_FEATHER;\r\n    sprite[SPRITE.INV_HAWK_FEATHER][1] = IMAGES.INV_HAWK_FEATHER;\r\n    sprite[SPRITE.INV_HAWK_FEATHER][2] = IMAGES.INV_HAWK_FEATHER;\r\n    sprite[SPRITE.CRAFT_HAWK_FEATHER] = sprite[SPRITE.INV_HAWK_FEATHER];\r\n    sprite[SPRITE.CHEST_HAWK_FEATHER] = sprite[SPRITE.INV_HAWK_FEATHER];\r\n    sprite[SPRITE.INV_VULTURE_FEATHER] = [];\r\n    sprite[SPRITE.INV_VULTURE_FEATHER][0] = IMAGES.INV_VULTURE_FEATHER;\r\n    sprite[SPRITE.INV_VULTURE_FEATHER][1] = IMAGES.INV_VULTURE_FEATHER;\r\n    sprite[SPRITE.INV_VULTURE_FEATHER][2] = IMAGES.INV_VULTURE_FEATHER;\r\n    sprite[SPRITE.CRAFT_VULTURE_FEATHER] = sprite[SPRITE.INV_VULTURE_FEATHER];\r\n    sprite[SPRITE.CHEST_VULTURE_FEATHER] = sprite[SPRITE.INV_VULTURE_FEATHER];\r\n    sprite[SPRITE.INV_EMERALD] = [];\r\n    sprite[SPRITE.INV_EMERALD][0] = IMAGES.INV_EMERALD;\r\n    sprite[SPRITE.INV_EMERALD][1] = IMAGES.INV_EMERALD;\r\n    sprite[SPRITE.INV_EMERALD][2] = IMAGES.INV_EMERALD;\r\n    sprite[SPRITE.CHEST_EMERALD] = sprite[SPRITE.INV_EMERALD];\r\n    sprite[SPRITE.INV_SADDLE] = [];\r\n    sprite[SPRITE.INV_SADDLE][0] = IMAGES.INV_SADDLE_OUT;\r\n    sprite[SPRITE.INV_SADDLE][1] = IMAGES.INV_SADDLE_IN;\r\n    sprite[SPRITE.INV_SADDLE][2] = IMAGES.INV_SADDLE_CLICK;\r\n    sprite[SPRITE.CRAFT_SADDLE] = sprite[SPRITE.INV_SADDLE];\r\n    sprite[SPRITE.CHEST_SADDLE] = sprite[SPRITE.INV_SADDLE];\r\n    sprite[SPRITE.INV_WAND1] = [];\r\n    sprite[SPRITE.INV_WAND1][0] = IMAGES.INV_WAND1_OUT;\r\n    sprite[SPRITE.INV_WAND1][1] = IMAGES.INV_WAND1_IN;\r\n    sprite[SPRITE.INV_WAND1][2] = IMAGES.INV_WAND1_CLICK;\r\n    sprite[SPRITE.CRAFT_WAND1] = sprite[SPRITE.INV_WAND1];\r\n    sprite[SPRITE.CHEST_WAND1] = sprite[SPRITE.INV_WAND1];\r\n    sprite[SPRITE.INV_WAND2] = [];\r\n    sprite[SPRITE.INV_WAND2][0] = IMAGES.INV_WAND2_OUT;\r\n    sprite[SPRITE.INV_WAND2][1] = IMAGES.INV_WAND2_IN;\r\n    sprite[SPRITE.INV_WAND2][2] = IMAGES.INV_WAND2_CLICK;\r\n    sprite[SPRITE.CRAFT_WAND2] = sprite[SPRITE.INV_WAND2];\r\n    sprite[SPRITE.CHEST_WAND2] = sprite[SPRITE.INV_WAND2];\r\n    sprite[SPRITE.INV_MOUNT_BOAR] = [];\r\n    sprite[SPRITE.INV_MOUNT_BOAR][0] = IMAGES.INV_MOUNT_BOAR_OUT;\r\n    sprite[SPRITE.INV_MOUNT_BOAR][1] = IMAGES.INV_MOUNT_BOAR_IN;\r\n    sprite[SPRITE.INV_MOUNT_BOAR][2] = IMAGES.INV_MOUNT_BOAR_CLICK;\r\n    sprite[SPRITE.CRAFT_MOUNT_BOAR] = sprite[SPRITE.INV_MOUNT_BOAR];\r\n    sprite[SPRITE.CHEST_MOUNT_BOAR] = sprite[SPRITE.INV_MOUNT_BOAR];\r\n    sprite[SPRITE.INV_CRAB_BOSS] = [];\r\n    sprite[SPRITE.INV_CRAB_BOSS][0] = IMAGES.INV_CRAB_BOSS_OUT;\r\n    sprite[SPRITE.INV_CRAB_BOSS][1] = IMAGES.INV_CRAB_BOSS_IN;\r\n    sprite[SPRITE.INV_CRAB_BOSS][2] = IMAGES.INV_CRAB_BOSS_CLICK;\r\n    sprite[SPRITE.CRAFT_CRAB_BOSS] = sprite[SPRITE.INV_CRAB_BOSS];\r\n    sprite[SPRITE.CHEST_CRAB_BOSS] = sprite[SPRITE.INV_CRAB_BOSS];\r\n    sprite[SPRITE.INV_HAWK] = [];\r\n    sprite[SPRITE.INV_HAWK][0] = IMAGES.INV_HAWK_OUT;\r\n    sprite[SPRITE.INV_HAWK][1] = IMAGES.INV_HAWK_IN;\r\n    sprite[SPRITE.INV_HAWK][2] = IMAGES.INV_HAWK_CLICK;\r\n    sprite[SPRITE.CRAFT_HAWK] = sprite[SPRITE.INV_HAWK];\r\n    sprite[SPRITE.CHEST_HAWK] = sprite[SPRITE.INV_HAWK];\r\n    sprite[SPRITE.INV_VULTURE] = [];\r\n    sprite[SPRITE.INV_VULTURE][0] = IMAGES.INV_VULTURE_OUT;\r\n    sprite[SPRITE.INV_VULTURE][1] = IMAGES.INV_VULTURE_IN;\r\n    sprite[SPRITE.INV_VULTURE][2] = IMAGES.INV_VULTURE_CLICK;\r\n    sprite[SPRITE.CRAFT_VULTURE] = sprite[SPRITE.INV_VULTURE];\r\n    sprite[SPRITE.CHEST_VULTURE] = sprite[SPRITE.INV_VULTURE];\r\n    sprite[SPRITE.INV_TURBAN1] = [];\r\n    sprite[SPRITE.INV_TURBAN1][0] = IMAGES.INV_TURBAN1_OUT;\r\n    sprite[SPRITE.INV_TURBAN1][1] = IMAGES.INV_TURBAN1_IN;\r\n    sprite[SPRITE.INV_TURBAN1][2] = IMAGES.INV_TURBAN1_CLICK;\r\n    sprite[SPRITE.CRAFT_TURBAN1] = sprite[SPRITE.INV_TURBAN1];\r\n    sprite[SPRITE.CHEST_TURBAN1] = sprite[SPRITE.INV_TURBAN1];\r\n    sprite[SPRITE.INV_TURBAN2] = [];\r\n    sprite[SPRITE.INV_TURBAN2][0] = IMAGES.INV_TURBAN2_OUT;\r\n    sprite[SPRITE.INV_TURBAN2][1] = IMAGES.INV_TURBAN2_IN;\r\n    sprite[SPRITE.INV_TURBAN2][2] = IMAGES.INV_TURBAN2_CLICK;\r\n    sprite[SPRITE.CRAFT_TURBAN2] = sprite[SPRITE.INV_TURBAN2];\r\n    sprite[SPRITE.CHEST_TURBAN2] = sprite[SPRITE.INV_TURBAN2];\r\n    sprite[SPRITE.INV_PLANE] = [];\r\n    sprite[SPRITE.INV_PLANE][0] = IMAGES.INV_PLANE_OUT;\r\n    sprite[SPRITE.INV_PLANE][1] = IMAGES.INV_PLANE_IN;\r\n    sprite[SPRITE.INV_PLANE][2] = IMAGES.INV_PLANE_CLICK;\r\n    sprite[SPRITE.CRAFT_PLANE] = sprite[SPRITE.INV_PLANE];\r\n    sprite[SPRITE.CHEST_PLANE] = sprite[SPRITE.INV_PLANE];\r\n    sprite[SPRITE.INV_BABY_DRAGON] = [];\r\n    sprite[SPRITE.INV_BABY_DRAGON][0] = IMAGES.INV_BABY_DRAGON_OUT;\r\n    sprite[SPRITE.INV_BABY_DRAGON][1] = IMAGES.INV_BABY_DRAGON_IN;\r\n    sprite[SPRITE.INV_BABY_DRAGON][2] = IMAGES.INV_BABY_DRAGON_CLICK;\r\n    sprite[SPRITE.CRAFT_BABY_DRAGON] = sprite[SPRITE.INV_BABY_DRAGON];\r\n    sprite[SPRITE.CHEST_BABY_DRAGON] = sprite[SPRITE.INV_BABY_DRAGON];\r\n    sprite[SPRITE.INV_BABY_MAMMOTH] = [];\r\n    sprite[SPRITE.INV_BABY_MAMMOTH][0] = IMAGES.INV_BABY_MAMMOTH_OUT;\r\n    sprite[SPRITE.INV_BABY_MAMMOTH][1] = IMAGES.INV_BABY_MAMMOTH_IN;\r\n    sprite[SPRITE.INV_BABY_MAMMOTH][2] = IMAGES.INV_BABY_MAMMOTH_CLICK;\r\n    sprite[SPRITE.CRAFT_BABY_MAMMOTH] = sprite[SPRITE.INV_BABY_MAMMOTH];\r\n    sprite[SPRITE.CHEST_BABY_MAMMOTH] = sprite[SPRITE.INV_BABY_MAMMOTH];\r\n    sprite[SPRITE.INV_BABY_LAVA] = [];\r\n    sprite[SPRITE.INV_BABY_LAVA][0] = IMAGES.INV_BABY_LAVA_OUT;\r\n    sprite[SPRITE.INV_BABY_LAVA][1] = IMAGES.INV_BABY_LAVA_IN;\r\n    sprite[SPRITE.INV_BABY_LAVA][2] = IMAGES.INV_BABY_LAVA_CLICK;\r\n    sprite[SPRITE.CRAFT_BABY_LAVA] = sprite[SPRITE.INV_BABY_LAVA];\r\n    sprite[SPRITE.CHEST_BABY_LAVA] = sprite[SPRITE.INV_BABY_LAVA];\r\n    sprite[SPRITE.INV_BREAD_OVEN] = create_craft_button(1, [{f: create_bread_oven, x: 0, y: 0, a: 1, r: 0, c: [\"#0d1b1c\", \"#515C57\", \"#3A4942\", \"#68736F\", \"#C1C0C0\", \"#be8d50\", \"#7d5234\", \"#222825\", \"#4D5752\", \"#e48727\", \"#d4a872\", \"#232a27\"]}, {f: create_bread_light_up, x: 0, y: 0, a: 1, r: 0, c: [\"#e4c027\"]}], 0.14, [\"#3ba578\", \"#4eb687\", \"#3da34d\"], 0.5);\r\n    sprite[SPRITE.CRAFT_BREAD_OVEN] = sprite[SPRITE.INV_BREAD_OVEN];\r\n    sprite[SPRITE.INV_FURNACE] = create_craft_button(1, [{f: create_furnace_on, x: 0, y: 0, a: 1, r: 0, c: [\"#0d1b1c\", \"#939393\", \"#5f6061\", \"#c0c0c0\", \"#ffad22\", \"#fffdd5\", \"#fee764\"]}], 0.18, [\"#3ba578\", \"#4eb687\", \"#3da34d\"], 0.5);\r\n    sprite[SPRITE.CRAFT_FURNACE] = sprite[SPRITE.INV_FURNACE];\r\n    sprite[SPRITE.INV_BED] = create_craft_button(1, [{f: create_bed, x: 0, y: 0, a: 1, r: 0, c: [\"#0d1b1c\", \"#554139\", \"#3f332a\", \"#261912\", \"#eee6c5\", \"#d1c599\", \"#554139\", \"#3f332a\", \"#86509b\", \"#703a99\", \"#ded4b4\", \"#d6ceab\", \"#c796c2\", \"#bc83b7\", \"#ffffff\", \"#87519c\", \"#703e94\", \"#3eb67f\", \"#218f65\", \"#efe7c5\", \"#d093c4\"]}], 0.32, [\"#3ba578\", \"#4eb687\", \"#3da34d\"], 0.5);\r\n    sprite[SPRITE.CRAFT_BED] = sprite[SPRITE.INV_BED];\r\n    sprite[SPRITE.CHEST_BED] = sprite[SPRITE.INV_BED];\r\n    sprite[SPRITE.INV_CRAB_LOOT] = create_craft_button(1, [{f: create_crab_loot, x: 0, y: 0, a: 1, r: 0, c: [\"#0d1b1c\", \"#c04933\", \"#a33e2b\", \"#ee593d\", \"#c04933\"]}], 0.17, [\"#3ba578\", \"#4eb687\", \"#3da34d\"], 0.5);\r\n    sprite[SPRITE.CHEST_CRAB_LOOT] = sprite[SPRITE.INV_CRAB_LOOT];\r\n    sprite[SPRITE.INV_CRAB_SPEAR] = create_craft_button(1, [{f: create_crab_spear, x: 2, y: 0, a: 1, r: Math.PI / 5, c: [\"#0d1b1c\", \"#58452b\", \"#47341d\", \"#ee593d\", \"#c04933\", \"#c04933\", \"#a33e2b\", \"#c3be9a\", \"#7f6d52\"]}], 0.12, [\"#35b1b5\", \"#46c2c9\", \"#33b4e4\"], 0.5);\r\n    sprite[SPRITE.CRAFT_CRAB_SPEAR] = sprite[SPRITE.INV_CRAB_SPEAR];\r\n    sprite[SPRITE.CHEST_CRAB_SPEAR] = sprite[SPRITE.INV_CRAB_SPEAR];\r\n    sprite[SPRITE.INV_WOOD_SPEAR] = create_craft_button(1, [{f: create_wood_spear, x: 2, y: 0, a: 1, r: Math.PI / 5, c: [\"#0d1b1c\", \"#58452b\", \"#47341d\", \"#765d42\", \"#c3be9a\", \"#7f6d52\"]}], 0.12, [\"#35b1b5\", \"#46c2c9\", \"#33b4e4\"], 0.5);\r\n    sprite[SPRITE.CRAFT_WOOD_SPEAR] = sprite[SPRITE.INV_WOOD_SPEAR];\r\n    sprite[SPRITE.INV_SPEAR] = create_craft_button(1, [{f: create_stonespear, x: 2, y: 0, a: 1, r: Math.PI / 5, c: [\"#0d1b1c\", \"#4d2d14\", \"#432516\", \"#c3be9a\", \"#7f6d52\", \"#7a7575\", \"#454749\", \"#8c8787\", \"#939393\", \"#5f6061\", \"#aaa6a6\"]}], 0.12, [\"#35b1b5\", \"#46c2c9\", \"#33b4e4\"], 0.5);\r\n    sprite[SPRITE.CRAFT_SPEAR] = sprite[SPRITE.INV_SPEAR];\r\n    sprite[SPRITE.INV_GOLD_SPEAR] = create_craft_button(1, [{f: create_goldspear, x: 2, y: 0, a: 1, r: Math.PI / 5, c: [\"#0d1b1c\", \"#493e26\", \"#382e19\", \"#a69e39\", \"#9c8828\", \"#bab143\", \"#c4bc51\", \"#b29c32\", \"#d2ca59\"]}], 0.12, [\"#35b1b5\", \"#46c2c9\", \"#33b4e4\"], 0.5);\r\n    sprite[SPRITE.CRAFT_GOLD_SPEAR] = sprite[SPRITE.INV_GOLD_SPEAR];\r\n    sprite[SPRITE.INV_DIAMOND_SPEAR] = create_craft_button(1, [{f: create_diamondspear, x: 2, y: 0, a: 1, r: Math.PI / 5, c: [\"#0d1b1c\", \"#262114\", \"#211108\", \"#4ba8b4\", \"#198a82\", \"#6ccad7\", \"#63c9d6\", \"#29aaa1\", \"#7bd9e6\"]}], 0.12, [\"#35b1b5\", \"#46c2c9\", \"#33b4e4\"], 0.5);\r\n    sprite[SPRITE.CRAFT_DIAMOND_SPEAR] = sprite[SPRITE.INV_DIAMOND_SPEAR];\r\n    sprite[SPRITE.INV_AMETHYST_SPEAR] = create_craft_button(1, [{f: create_amespear, x: 2, y: 0, a: 1, r: Math.PI / 5, c: [\"#0d1b1c\", \"#262114\", \"#211108\", \"#9443b1\", \"#6f1988\", \"#a752c6\", \"#9e35be\", \"#8c29aa\", \"#b864d6\"]}], 0.12, [\"#35b1b5\", \"#46c2c9\", \"#33b4e4\"], 0.5);\r\n    sprite[SPRITE.CRAFT_AMETHYST_SPEAR] = sprite[SPRITE.INV_AMETHYST_SPEAR];\r\n    sprite[SPRITE.INV_DRAGON_SPEAR] = create_craft_button(1, [{f: create_dragon_spear, x: 2, y: 0, a: 1, r: Math.PI / 5, c: [\"#0d1b1c\", \"#1e2b34\", \"#151c24\", \"#99d7dd\", \"#7dcbd1\", \"#c6e8eb\", \"#aadee8\", \"#b7e2e5\"]}], 0.38, [\"#35b1b5\", \"#46c2c9\", \"#33b4e4\"], 0.5);\r\n    sprite[SPRITE.CRAFT_DRAGON_SPEAR] = sprite[SPRITE.INV_DRAGON_SPEAR];\r\n    sprite[SPRITE.CHEST_DRAGON_SPEAR] = sprite[SPRITE.INV_DRAGON_SPEAR];\r\n    sprite[SPRITE.INV_HAMMER] = create_craft_button(1, [{f: create_hammer, x: 2, y: 0, a: 1, r: Math.PI / 5, c: [\"#0d1b1c\", \"#4d2d14\", \"#432516\", \"#939393\", \"#5f6061\"]}], 0.52, [\"#35b1b5\", \"#46c2c9\", \"#33b4e4\"], 0.5);\r\n    sprite[SPRITE.CRAFT_HAMMER] = sprite[SPRITE.INV_HAMMER];\r\n    sprite[SPRITE.INV_SPANNER] = create_craft_button(1, [{f: create_spanner, x: 0, y: 0, a: 1, r: Math.PI / 5, c: [\"#0d1b1c\", \"#939393\", \"#5f6061\"]}], 0.3, [\"#35b1b5\", \"#46c2c9\", \"#33b4e4\"], 0.5);\r\n    sprite[SPRITE.CRAFT_SPANNER] = sprite[SPRITE.INV_SPANNER];\r\n    sprite[SPRITE.INV_SUPER_HAMMER] = create_craft_button(1, [{f: create_superhammer, x: 2, y: 0, a: 1, r: Math.PI / 5, c: [\"#0d1b1c\", \"#9b5927\", \"#7a3610\", \"#1e0302\", \"#0d825b\", \"#6bd16e\", \"#17915d\", \"#89e5aa\", \"#16935d\", \"#a0efc4\", \"#28b26d\", \"#cdf4cb\", \"#42cc90\"]}], 0.52, [\"#35b1b5\", \"#46c2c9\", \"#33b4e4\"], 0.5);\r\n    sprite[SPRITE.CRAFT_SUPER_HAMMER] = sprite[SPRITE.INV_SUPER_HAMMER];\r\n    sprite[SPRITE.INV_HAMMER_GOLD] = create_craft_button(1, [{f: create_hammer, x: 2, y: 0, a: 1, r: Math.PI / 5, c: [\"#0d1b1c\", \"#493e26\", \"#382e19\", \"#c4bc51\", \"#b29c32\"]}], 0.52, [\"#35b1b5\", \"#46c2c9\", \"#33b4e4\"], 0.5);\r\n    sprite[SPRITE.CRAFT_HAMMER_GOLD] = sprite[SPRITE.INV_HAMMER_GOLD];\r\n    sprite[SPRITE.INV_HAMMER_DIAMOND] = create_craft_button(1, [{f: create_hammer, x: 2, y: 0, a: 1, r: Math.PI / 5, c: [\"#0d1b1c\", \"#262114\", \"#211108\", \"#63c9d6\", \"#29aaa1\"]}], 0.52, [\"#35b1b5\", \"#46c2c9\", \"#33b4e4\"], 0.5);\r\n    sprite[SPRITE.CRAFT_HAMMER_DIAMOND] = sprite[SPRITE.INV_HAMMER_DIAMOND];\r\n    sprite[SPRITE.INV_HAMMER_AMETHYST] = create_craft_button(1, [{f: create_hammer, x: 2, y: 0, a: 1, r: Math.PI / 5, c: [\"#0d1b1c\", \"#262114\", \"#211108\", \"#b864d6\", \"#8c29aa\"]}], 0.52, [\"#35b1b5\", \"#46c2c9\", \"#33b4e4\"], 0.5);\r\n    sprite[SPRITE.CRAFT_HAMMER_AMETHYST] = sprite[SPRITE.INV_HAMMER_AMETHYST];\r\n    sprite[SPRITE.INV_HAMMER_REIDITE] = [];\r\n    sprite[SPRITE.INV_HAMMER_REIDITE][0] = IMAGES.INV_HAMMER_REIDITE_OUT;\r\n    sprite[SPRITE.INV_HAMMER_REIDITE][1] = IMAGES.INV_HAMMER_REIDITE_IN;\r\n    sprite[SPRITE.INV_HAMMER_REIDITE][2] = IMAGES.INV_HAMMER_REIDITE_CLICK;\r\n    sprite[SPRITE.CHEST_HAMMER_REIDITE] = sprite[SPRITE.INV_HAMMER_REIDITE];\r\n    sprite[SPRITE.CRAFT_HAMMER_REIDITE] = sprite[SPRITE.INV_HAMMER_REIDITE];\r\n    sprite[SPRITE.INV_EMERALD_MACHINE] = [];\r\n    sprite[SPRITE.INV_EMERALD_MACHINE][0] = IMAGES.INV_EMERALD_MACHINE_OUT;\r\n    sprite[SPRITE.INV_EMERALD_MACHINE][1] = IMAGES.INV_EMERALD_MACHINE_IN;\r\n    sprite[SPRITE.INV_EMERALD_MACHINE][2] = IMAGES.INV_EMERALD_MACHINE_CLICK;\r\n    sprite[SPRITE.CHEST_EMERALD_MACHINE] = sprite[SPRITE.INV_EMERALD_MACHINE];\r\n    sprite[SPRITE.CRAFT_EMERALD_MACHINE] = sprite[SPRITE.INV_EMERALD_MACHINE];\r\n    sprite[SPRITE.INV_EXTRACTOR_MACHINE_STONE] = [];\r\n    sprite[SPRITE.INV_EXTRACTOR_MACHINE_STONE][0] = IMAGES.INV_EXTRACTOR_MACHINE_STONE_OUT;\r\n    sprite[SPRITE.INV_EXTRACTOR_MACHINE_STONE][1] = IMAGES.INV_EXTRACTOR_MACHINE_STONE_IN;\r\n    sprite[SPRITE.INV_EXTRACTOR_MACHINE_STONE][2] = IMAGES.INV_EXTRACTOR_MACHINE_STONE_CLICK;\r\n    sprite[SPRITE.CHEST_EXTRACTOR_MACHINE_STONE] = sprite[SPRITE.INV_EXTRACTOR_MACHINE_STONE];\r\n    sprite[SPRITE.CRAFT_EXTRACTOR_MACHINE_STONE] = sprite[SPRITE.INV_EXTRACTOR_MACHINE_STONE];\r\n    sprite[SPRITE.INV_EXTRACTOR_MACHINE_GOLD] = [];\r\n    sprite[SPRITE.INV_EXTRACTOR_MACHINE_GOLD][0] = IMAGES.INV_EXTRACTOR_MACHINE_GOLD_OUT;\r\n    sprite[SPRITE.INV_EXTRACTOR_MACHINE_GOLD][1] = IMAGES.INV_EXTRACTOR_MACHINE_GOLD_IN;\r\n    sprite[SPRITE.INV_EXTRACTOR_MACHINE_GOLD][2] = IMAGES.INV_EXTRACTOR_MACHINE_GOLD_CLICK;\r\n    sprite[SPRITE.CHEST_EXTRACTOR_MACHINE_GOLD] = sprite[SPRITE.INV_EXTRACTOR_MACHINE_GOLD];\r\n    sprite[SPRITE.CRAFT_EXTRACTOR_MACHINE_GOLD] = sprite[SPRITE.INV_EXTRACTOR_MACHINE_GOLD];\r\n    sprite[SPRITE.INV_EXTRACTOR_MACHINE_DIAMOND] = [];\r\n    sprite[SPRITE.INV_EXTRACTOR_MACHINE_DIAMOND][0] = IMAGES.INV_EXTRACTOR_MACHINE_DIAMOND_OUT;\r\n    sprite[SPRITE.INV_EXTRACTOR_MACHINE_DIAMOND][1] = IMAGES.INV_EXTRACTOR_MACHINE_DIAMOND_IN;\r\n    sprite[SPRITE.INV_EXTRACTOR_MACHINE_DIAMOND][2] = IMAGES.INV_EXTRACTOR_MACHINE_DIAMOND_CLICK;\r\n    sprite[SPRITE.CHEST_EXTRACTOR_MACHINE_DIAMOND] = sprite[SPRITE.INV_EXTRACTOR_MACHINE_DIAMOND];\r\n    sprite[SPRITE.CRAFT_EXTRACTOR_MACHINE_DIAMOND] = sprite[SPRITE.INV_EXTRACTOR_MACHINE_DIAMOND];\r\n    sprite[SPRITE.INV_EXTRACTOR_MACHINE_AMETHYST] = [];\r\n    sprite[SPRITE.INV_EXTRACTOR_MACHINE_AMETHYST][0] = IMAGES.INV_EXTRACTOR_MACHINE_AMETHYST_OUT;\r\n    sprite[SPRITE.INV_EXTRACTOR_MACHINE_AMETHYST][1] = IMAGES.INV_EXTRACTOR_MACHINE_AMETHYST_IN;\r\n    sprite[SPRITE.INV_EXTRACTOR_MACHINE_AMETHYST][2] = IMAGES.INV_EXTRACTOR_MACHINE_AMETHYST_CLICK;\r\n    sprite[SPRITE.CHEST_EXTRACTOR_MACHINE_AMETHYST] = sprite[SPRITE.INV_EXTRACTOR_MACHINE_AMETHYST];\r\n    sprite[SPRITE.CRAFT_EXTRACTOR_MACHINE_AMETHYST] = sprite[SPRITE.INV_EXTRACTOR_MACHINE_AMETHYST];\r\n    sprite[SPRITE.INV_EXTRACTOR_MACHINE_REIDITE] = [];\r\n    sprite[SPRITE.INV_EXTRACTOR_MACHINE_REIDITE][0] = IMAGES.INV_EXTRACTOR_MACHINE_REIDITE_OUT;\r\n    sprite[SPRITE.INV_EXTRACTOR_MACHINE_REIDITE][1] = IMAGES.INV_EXTRACTOR_MACHINE_REIDITE_IN;\r\n    sprite[SPRITE.INV_EXTRACTOR_MACHINE_REIDITE][2] = IMAGES.INV_EXTRACTOR_MACHINE_REIDITE_CLICK;\r\n    sprite[SPRITE.CHEST_EXTRACTOR_MACHINE_REIDITE] = sprite[SPRITE.INV_EXTRACTOR_MACHINE_REIDITE];\r\n    sprite[SPRITE.CRAFT_EXTRACTOR_MACHINE_REIDITE] = sprite[SPRITE.INV_EXTRACTOR_MACHINE_REIDITE];\r\n    sprite[SPRITE.INV_LOCK] = create_craft_button(1, [{f: create_lock, x: -2, y: -2, a: 1, r: 0, c: [\"#141414\", \"#816511\", \"#c4a23a\", \"#3a3a3a\"]}], 0.8, [\"#2b5c48\", \"#2b5c48\", \"#2b5c48\"], 0.5);\r\n    sprite[SPRITE.CRAFT_LOCK] = sprite[SPRITE.INV_LOCK];\r\n    sprite[SPRITE.INV_LOCKPICK] = create_craft_button(1, [{f: create_lockpick, x: -2, y: -2, a: 1, r: -Math.PI / 5, c: [\"#141414\", \"#c4a23a\", \"#816511\"]}], 0.08, [\"#2b5c48\", \"#2b5c48\", \"#2b5c48\"], 0.5);\r\n    sprite[SPRITE.CRAFT_LOCKPICK] = sprite[SPRITE.INV_LOCKPICK];\r\n    sprite[SPRITE.INV_DRAGON_HEART] = create_craft_button(1, [{f: create_dragon_heart, x: -2, y: -2, a: 1, r: 0, c: [\"#141414\", \"#178a99\", \"#0a6372\", \"#03282e\"]}], 0.3, [\"#2b5c48\", \"#2b5c48\", \"#2b5c48\"], 0.7);\r\n    sprite[SPRITE.INV_LAVA_HEART] = create_craft_button(1, [{f: create_dragon_heart, x: -2, y: -2, a: 1, r: 0, c: [\"#120202\", \"#991616\", \"#750a0a\", \"#120202\"]}], 0.3, [\"#2b5c48\", \"#2b5c48\", \"#2b5c48\"], 0.7);\r\n    sprite[SPRITE.INV_RESURRECTION] = create_craft_button(1, [{f: create_resurrection_ground, x: 0, y: 0, a: 1, r: 0, c: [\"#347f93\", \"#54a4ba\"]}, {f: create_resurrection, x: 0, y: 0, a: 1, r: 0, c: [\"#347f93\", \"#54a4ba\", \"#1c2528\", \"#a9e4ed\", \"#86d4e0\", \"#959da0\", \"#697072\", \"#929da0\", \"#afb9bc\", \"#418ba5\", \"#59b8ce\"]}, {f: create_resurrection_rotate, x: 0, y: 0, a: 1, r: 0, c: [\"#a9e4ed\", \"#86d4e0\"]}, {f: create_resurrection_hole, x: 0, y: 0, a: 1, r: 0, c: [\"#a9e4ed\", \"#86d4e0\", \"#418ba5\", \"#59b8ce\"]}], 0.3, [\"#3ba578\", \"#4eb687\", \"#3da34d\"], 0.5);\r\n    sprite[SPRITE.CRAFT_RESURRECTION] = sprite[SPRITE.INV_RESURRECTION];\r\n    sprite[SPRITE.INV_TOTEM] = create_craft_button(1, [{f: create_headtotem, x: 45, y: 70, a: 1, r: 0, c: [\"#0d1b1c\", \"#4c3a15\", \"#634828\", \"#564021\"]}], 0.6, [\"#3ba578\", \"#4eb687\", \"#3da34d\"], 0.5);\r\n    sprite[SPRITE.CRAFT_TOTEM] = sprite[SPRITE.INV_TOTEM];\r\n    sprite[SPRITE.INV_AMETHYST_HELMET] = create_craft_button(1, [{f: create_amethyst_helmet, x: 0, y: 0, a: 1, r: 0, c: [\"#0d1b1c\", \"#8c55b7\", \"#652d8e\", \"#79359e\", \"#5eccd1\", \"#4badad\", \"#9e6ac6\"]}], 0.52, [\"#35b1b5\", \"#46c2c9\", \"#33b4e4\"], 0.5);\r\n    sprite[SPRITE.CRAFT_AMETHYST_HELMET] = sprite[SPRITE.INV_AMETHYST_HELMET];\r\n    sprite[SPRITE.INV_WINTER_HOOD] = create_craft_button(1, [{f: create_winter_hood, x: 0, y: 0, a: 1, r: 0, c: [\"#2a2938\", \"#242330\", \"#313041\", \"#1b1a25\"]}], 0.12, [\"#35b1b5\", \"#46c2c9\", \"#33b4e4\"], 0.5);\r\n    sprite[SPRITE.CRAFT_WINTER_HOOD] = sprite[SPRITE.INV_WINTER_HOOD];\r\n    sprite[SPRITE.INV_HOOD] = create_craft_button(1, [{f: create_hood, x: 0, y: 0, a: 1, r: 0, c: [\"#2a2938\", \"#242330\", \"#313041\"]}], 0.25, [\"#35b1b5\", \"#46c2c9\", \"#33b4e4\"], 0.5);\r\n    sprite[SPRITE.CRAFT_HOOD] = sprite[SPRITE.INV_HOOD];\r\n    sprite[SPRITE.INV_WINTER_PEASANT] = create_craft_button(1, [{f: create_peasant, x: 0, y: 3, a: 1, r: 0, c: [\"#1d1d22\", \"#e2e1e1\", \"#d2cbcb\", \"#cfcbc8\", \"#beb5b5\", \"#ada0a0\"]}], 0.39, [\"#35b1b5\", \"#46c2c9\", \"#33b4e4\"], 0.5);\r\n    sprite[SPRITE.CRAFT_WINTER_PEASANT] = sprite[SPRITE.INV_WINTER_PEASANT];\r\n    sprite[SPRITE.INV_PEASANT] = create_craft_button(1, [{f: create_peasant, x: 0, y: 3, a: 1, r: 0, c: [\"#1d1d22\", \"#8c7654\", \"#785f4c\", \"#a88e6c\", \"#785f4c\", \"#705845\"]}], 0.39, [\"#35b1b5\", \"#46c2c9\", \"#33b4e4\"], 0.5);\r\n    sprite[SPRITE.CRAFT_PEASANT] = sprite[SPRITE.INV_PEASANT];\r\n    sprite[SPRITE.INV_CROWN_GREEN] = create_craft_button(1, [{f: create_crown_life, x: 0, y: 10, a: 1, r: 0, c: [\"#0d1b1c\", \"#A5A244\", \"#D8DC74\", \"#C0BF55\", \"#49B669\", \"#19994C\", \"#71C187\"]}], 0.15, [\"#35b1b5\", \"#46c2c9\", \"#33b4e4\"], 0.5);\r\n    sprite[SPRITE.CRAFT_CROWN_GREEN] = sprite[SPRITE.INV_CROWN_GREEN];\r\n    sprite[SPRITE.INV_CROWN_ORANGE] = create_craft_button(1, [{f: create_crown_life, x: 0, y: 10, a: 1, r: 0, c: [\"#0d1b1c\", \"#A5A244\", \"#D8DC74\", \"#C0BF55\", \"#C45727\", \"#994617\", \"#DB9358\"]}], 0.15, [\"#35b1b5\", \"#46c2c9\", \"#33b4e4\"], 0.5);\r\n    sprite[SPRITE.CRAFT_CROWN_ORANGE] = sprite[SPRITE.INV_CROWN_ORANGE];\r\n    sprite[SPRITE.INV_CROWN_BLUE] = create_craft_button(1, [{f: create_crown_life, x: 0, y: 10, a: 1, r: 0, c: [\"#0d1b1c\", \"#A5A244\", \"#D8DC74\", \"#C0BF55\", \"#2792C1\", \"#196599\", \"#59C0D8\"]}], 0.15, [\"#35b1b5\", \"#46c2c9\", \"#33b4e4\"], 0.5);\r\n    sprite[SPRITE.CRAFT_CROWN_BLUE] = sprite[SPRITE.INV_CROWN_BLUE];\r\n    sprite[SPRITE.INV_CROWN_CRAB] = create_craft_button(1, [{f: create_crab_crown, x: -1, y: 0, a: 1, r: 0, c: [\"#000000\", \"#b03431\", \"#94312d\", \"#bd3c33\", \"#de5445\"]}], 0.15, [\"#35b1b5\", \"#46c2c9\", \"#33b4e4\"], 0.5);\r\n    sprite[SPRITE.CRAFT_CROWN_CRAB] = sprite[SPRITE.INV_CROWN_CRAB];\r\n    sprite[SPRITE.CHEST_CROWN_CRAB] = sprite[SPRITE.INV_CROWN_CRAB];\r\n    sprite[SPRITE.INV_DRAGON_HELMET] = create_craft_button(1, [{f: create_dragon_helmet, x: 0, y: 0, a: 1, r: 0, c: [\"#0d1b1c\", \"#cae9eb\", \"#75bcae\", \"#ffffff\", \"#51736d\", \"#2b4d48\", \"#1b3a3a\", \"#80ccca\", \"#59ada7\"]}], 0.2, [\"#35b1b5\", \"#46c2c9\", \"#33b4e4\"], 0.5);\r\n    sprite[SPRITE.CRAFT_DRAGON_HELMET] = sprite[SPRITE.INV_DRAGON_HELMET];\r\n    sprite[SPRITE.INV_DRAGON_SWORD] = create_craft_button(1, [{f: create_dragon_sword, x: 0, y: 0, a: 1, r: Math.PI / 5, c: [\"#0d1b1c\", \"#284c4a\", \"#193533\", \"#c7efef\", \"#7fccca\"]}], 0.75, [\"#35b1b5\", \"#46c2c9\", \"#33b4e4\"], 0.5);\r\n    sprite[SPRITE.CRAFT_DRAGON_SWORD] = sprite[SPRITE.INV_DRAGON_SWORD];\r\n    sprite[SPRITE.INV_DRAGON_CUBE] = create_craft_button(1, [{f: create_dragon_cube, x: 0, y: 0, a: 1, r: 0, c: [\"#44bae0\", \"#9fdae9\", \"#7dd1ea\", \"#c6e8ef\"]}], 0.55, [\"#2b5c48\", \"#2b5c48\", \"#2b5c48\"], 0.5);\r\n    sprite[SPRITE.INV_DRAGON_ORB] = create_craft_button(1, [{f: create_blue_orb, x: 0, y: 0, a: 1, r: 0, c: [\"#44bae0\", \"#9fdae9\", \"#7dd1ea\", \"#c6e8ef\"]}], 0.55, [\"#2b5c48\", \"#2b5c48\", \"#2b5c48\"], 0.5);\r\n    sprite[SPRITE.INV_LAVA_CUBE] = create_craft_button(1, [{f: create_dragon_cube, x: 0, y: 0, a: 1, r: 0, c: [\"#e04444\", \"#e99f9f\", \"#eb7e7e\", \"#eec6c6\"]}], 0.55, [\"#2b5c48\", \"#2b5c48\", \"#2b5c48\"], 0.5);\r\n    sprite[SPRITE.INV_LAVA_ORB] = create_craft_button(1, [{f: create_blue_orb, x: 0, y: 0, a: 1, r: 0, c: [\"#e04444\", \"#e99f9f\", \"#eb7e7e\", \"#eec6c6\"]}], 0.55, [\"#2b5c48\", \"#2b5c48\", \"#2b5c48\"], 0.5);\r\n    sprite[SPRITE.INV_GEMME_GREEN] = create_craft_button(1, [{f: create_gemme_green, x: 0, y: 0, a: 1, r: 0, c: [\"#59ba72\", \"#94d966\", \"#5aa628\", \"#0d1b1c\", \"#38874d\"]}], 0.35, [\"#2b5c48\", \"#2b5c48\", \"#2b5c48\"], 0.5);\r\n    sprite[SPRITE.INV_GEMME_ORANGE] = create_craft_button(1, [{f: create_gemme_green, x: 0, y: 0, a: 1, r: 0, c: [\"#C45727\", \"#de7d46\", \"#DB9358\", \"#0d1b1c\", \"#994617\"]}], 0.35, [\"#2b5c48\", \"#2b5c48\", \"#2b5c48\"], 0.5);\r\n    sprite[SPRITE.INV_GEMME_BLUE] = create_craft_button(1, [{f: create_gemme_green, x: 0, y: 0, a: 1, r: 0, c: [\"#3a9dbd\", \"#59C0D8\", \"#48abcb\", \"#0d1b1c\", \"#196599\"]}], 0.35, [\"#2b5c48\", \"#2b5c48\", \"#2b5c48\"], 0.5);\r\n    sprite[SPRITE.INV_SHOVEL] = create_craft_button(1, [{f: create_shovel, x: 0, y: 0, a: 1, r: Math.PI / 5, c: [\"#0d1b1c\", \"#6d5041\", \"#4f3d35\", \"#939393\", \"#5f6061\", \"#757575\"]}], 0.45, [\"#35b1b5\", \"#46c2c9\", \"#33b4e4\"], 0.5);\r\n    sprite[SPRITE.CRAFT_SHOVEL] = sprite[SPRITE.INV_SHOVEL];\r\n    sprite[SPRITE.INV_SHOVEL_GOLD] = create_craft_button(1, [{f: create_shovel, x: 0, y: 0, a: 1, r: Math.PI / 5, c: [\"#0d1b1c\", \"#493e26\", \"#382e19\", \"#c4bc51\", \"#b29c32\", \"#b4ac45\"]}], 0.45, [\"#35b1b5\", \"#46c2c9\", \"#33b4e4\"], 0.5);\r\n    sprite[SPRITE.CRAFT_SHOVEL_GOLD] = sprite[SPRITE.INV_SHOVEL_GOLD];\r\n    sprite[SPRITE.INV_SHOVEL_DIAMOND] = create_craft_button(1, [{f: create_shovel, x: 0, y: 0, a: 1, r: Math.PI / 5, c: [\"#0d1b1c\", \"#262114\", \"#211108\", \"#63c9d6\", \"#29aaa1\", \"#42aab8\"]}], 0.45, [\"#35b1b5\", \"#46c2c9\", \"#33b4e4\"], 0.5);\r\n    sprite[SPRITE.CRAFT_SHOVEL_DIAMOND] = sprite[SPRITE.INV_SHOVEL_DIAMOND];\r\n    sprite[SPRITE.INV_SHOVEL_AMETHYST] = create_craft_button(1, [{f: create_shovel, x: 0, y: 0, a: 1, r: Math.PI / 5, c: [\"#0d1b1c\", \"#262114\", \"#211108\", \"#b864d6\", \"#8c29aa\", \"#a853c7\"]}], 0.45, [\"#35b1b5\", \"#46c2c9\", \"#33b4e4\"], 0.5);\r\n    sprite[SPRITE.CRAFT_SHOVEL_AMETHYST] = sprite[SPRITE.INV_SHOVEL_AMETHYST];\r\n    sprite[SPRITE.INV_EXPLORER_HAT] = create_craft_button(1, [{f: create_explorer_hat, x: 0, y: 0, a: 1, r: 0, c: [\"#c9a65f\", \"#ae863f\", \"#655530\", \"#4a391c\", \"#ebdd79\", \"#4a421c\"]}], 0.35, [\"#35b1b5\", \"#46c2c9\", \"#33b4e4\"], 0.5);\r\n    sprite[SPRITE.CRAFT_EXPLORER_HAT] = sprite[SPRITE.INV_EXPLORER_HAT];\r\n    sprite[SPRITE.INV_WOOD_HELMET] = create_craft_button(1, [{f: create_wooden_helmet, x: 0, y: 0, a: 1, r: 0, c: [\"#252525\", \"#73583e\", \"#493425\", \"#7d6144\"]}], 0.35, [\"#35b1b5\", \"#46c2c9\", \"#33b4e4\"], 0.5);\r\n    sprite[SPRITE.CRAFT_WOOD_HELMET] = sprite[SPRITE.INV_WOOD_HELMET];\r\n    sprite[SPRITE.INV_STONE_HELMET] = create_craft_button(1, [{f: create_viking_hat, x: 0, y: -2, a: 1, r: 0, c: [\"#252525\", \"#808080\", \"#4a4a4a\", \"#9e9c8b\", \"#615c53\", \"#686969\", \"#8a8776\", \"#555555\", \"#747474\", \"#969696\", \"#454545\"]}], 0.4, [\"#35b1b5\", \"#46c2c9\", \"#33b4e4\"], 0.5);\r\n    sprite[SPRITE.CRAFT_STONE_HELMET] = sprite[SPRITE.INV_STONE_HELMET];\r\n    sprite[SPRITE.INV_GOLD_HELMET] = create_craft_button(1, [{f: create_gold_helmet, x: 0, y: 0, a: 1, r: 0, c: [\"#dbce71\", \"#b29c32\", \"#c4bc51\"]}], 0.35, [\"#35b1b5\", \"#46c2c9\", \"#33b4e4\"], 0.5);\r\n    sprite[SPRITE.CRAFT_GOLD_HELMET] = sprite[SPRITE.INV_GOLD_HELMET];\r\n    sprite[SPRITE.INV_DIAMOND_HELMET] = create_craft_button(1, [{f: create_diamond_helmet, x: 0, y: 0, a: 1, r: 0, c: [\"#717171\", \"#485252\", \"#555555\", \"#65c7cd\", \"#4aadad\", \"#358d8b\", \"#c1e6ea\", \"#a6dce4\"]}], 0.45, [\"#35b1b5\", \"#46c2c9\", \"#33b4e4\"], 0.5);\r\n    sprite[SPRITE.CRAFT_DIAMOND_HELMET] = sprite[SPRITE.INV_DIAMOND_HELMET];\r\n    sprite[SPRITE.INV_BOOK] = create_craft_button(1, [{f: create_book, x: 0, y: 0, a: 1, r: 0, c: [\"#511f00\", \"#2f1300\", \"#ffffff\", \"#d4d4d4\", \"#5b2400\", \"#984e21\"]}], 0.15, [\"#35b1b5\", \"#46c2c9\", \"#33b4e4\"], 0.5);\r\n    sprite[SPRITE.CRAFT_BOOK] = sprite[SPRITE.INV_BOOK];\r\n    sprite[SPRITE.INV_PAPER] = create_craft_button(1, [{f: create_paper, x: 0, y: 0, a: 1, r: 0, c: [\"#221e1b\", \"#ffffff\", \"#f6f0e7\"]}], 0.3, [\"#2b5c48\", \"#2b5c48\", \"#2b5c48\"], 0.5);\r\n    sprite[SPRITE.CRAFT_PAPER] = sprite[SPRITE.INV_PAPER];\r\n    sprite[SPRITE.INV_AMETHYST] = create_craft_button(1, [{f: create_amethyst, x: -5, y: -5, a: 1, r: 0, c: [\"#1d051e\", \"#c27add\", \"#cd98e5\"]}], 0.31, [\"#2b5c48\", \"#2b5c48\", \"#2b5c48\"], 0.5);\r\n    sprite[SPRITE.INV_SAND] = create_craft_button(1, [{f: create_sand, x: 0, y: 0, a: 1, r: 0, c: [\"#D7C393\", \"#a48c6c\"]}], 0.22, [\"#2b5c48\", \"#2b5c48\", \"#2b5c48\"], 0.5);\r\n    sprite[SPRITE.INV_ICE] = create_craft_button(1, [{f: create_ice, x: 0, y: 0, a: 1, r: 0, c: [\"#93CBCE\", \"#E9F6F6\"]}], 0.3, [\"#35b1b5\", \"#46c2c9\", \"#33b4e4\"], 0.5);\r\n    sprite[SPRITE.INV_GROUND] = create_craft_button(1, [{f: create_sand, x: 0, y: 0, a: 1, r: 0, c: [\"#866432\", \"#6b4f25\"]}], 0.22, [\"#2b5c48\", \"#2b5c48\", \"#2b5c48\"], 0.5);\r\n    sprite[SPRITE.INV_BUCKET_FULL] = create_craft_button(1, [{f: create_bucket_full, x: 3, y: 2, a: 1, r: 0, c: [\"#1e2021\", \"#674C2A\", \"#4C3B19\", \"#2f2211\", \"#785931\", \"#1678a2\"]}], 0.22, [\"#2b5c48\", \"#2b5c48\", \"#2b5c48\"], 0.5);\r\n    sprite[SPRITE.INV_BUCKET_EMPTY] = create_craft_button(1, [{f: create_bucket_empty, x: 3, y: 2, a: 1, r: 0, c: [\"#1e2021\", \"#674C2A\", \"#4C3B19\", \"#2f2211\", \"#785931\", \"#1678a2\"]}], 0.22, [\"#2b5c48\", \"#2b5c48\", \"#2b5c48\"], 0.5);\r\n    sprite[SPRITE.CRAFT_BUCKET_FULL] = sprite[SPRITE.INV_BUCKET_FULL];\r\n    sprite[SPRITE.CRAFT_BUCKET_EMPTY] = sprite[SPRITE.INV_BUCKET_EMPTY];\r\n    sprite[SPRITE.INV_WELL] = create_craft_button(1, [{f: create_well, x: 0, y: 0, a: 1, r: 0, c: [\"#1e2021\", \"#717273\", \"#606162\", \"#a09f9f\", \"#878787\", \"#454545\"]}], 0.1, [\"#3ba578\", \"#4eb687\", \"#3da34d\"], 0.5);\r\n    sprite[SPRITE.CRAFT_WELL] = sprite[SPRITE.INV_WELL];\r\n    sprite[SPRITE.INV_BOTTLE_FULL] = create_craft_button(1, [{f: create_bottle, x: 0, y: 0, a: 1, r: Math.PI / 5, c: [\"#C6AF81\", \"#C98435\", \"#B26F31\", \"#53A4D5\", \"#388AC7\", \"#C1C0C0\", \"#EAEAEA\"]}], 0.18, [\"#3ba578\", \"#4eb687\", \"#3da34d\"], 0.5);\r\n    sprite[SPRITE.INV_BOTTLE_EMPTY] = create_craft_button(1, [{f: create_bottle_full, x: 0, y: 0, a: 1, r: Math.PI / 5, c: [\"#C6AF81\", \"#C98435\", \"#B26F31\", \"#53A4D5\", \"#388AC7\", \"#C1C0C0\", \"#EAEAEA\"]}], 0.18, [\"#2b5c48\", \"#2b5c48\", \"#2b5c48\"], 0.5);\r\n    sprite[SPRITE.CRAFT_BOTTLE_FULL] = sprite[SPRITE.INV_BOTTLE_FULL];\r\n    sprite[SPRITE.CRAFT_BOTTLE_EMPTY] = sprite[SPRITE.INV_BOTTLE_EMPTY];\r\n    sprite[SPRITE.INV_COOKIE] = create_craft_button(1, [{f: create_cookie, x: 0, y: 0, a: 1, r: 0, c: [\"#eedacc\", \"#dfbda7\", \"#dab094\", \"#63391a\", \"#523124\"]}], 0.3, [\"#3ba578\", \"#4eb687\", \"#3da34d\"], 0.5);\r\n    sprite[SPRITE.CRAFT_COOKIE] = sprite[SPRITE.INV_COOKIE];\r\n    sprite[SPRITE.INV_CANDY] = create_craft_button(1, [{f: create_candy, x: 0, y: 0, a: 1, r: 0, c: [\"#1a1011\", \"#e29c2b\", \"#b76413\", \"#d6c418\", \"#e0bf32\", \"#b78a1a\", \"#aa1a17\", \"#cc9f2f\", \"#cc741d\", \"#b51524\", \"#bc1522\", \"#991922\", \"#a01ed5\", \"#d51e81\"]}], 0.3, [\"#3ba578\", \"#4eb687\", \"#3da34d\"], 0.5);\r\n    sprite[SPRITE.INV_FERRERO] = create_craft_button(1, [{f: create_ferrero_rocher, x: 0, y: 0, a: 1, r: 0, c: [\"#1a1011\", \"#693c2a\", \"#54311f\", \"#9f7a3d\", \"#492d1d\", \"#dbb175\", \"#54311f\", \"#9f7a3d\", \"#604720\"]}], 0.6, [\"#3ba578\", \"#4eb687\", \"#3da34d\"], 0.5);\r\n    sprite[SPRITE.INV_BREAD] = create_craft_button(1, [{f: create_bread, x: 0, y: -2, a: 1, r: 0, c: [\"#1d051e\", \"#bf8d51\", \"#7d5133\", \"#e8d6bf\", \"#e0c8a9\", \"#ab7a3f\"]}], 0.17, [\"#3ba578\", \"#4eb687\", \"#3da34d\"], 0.5);\r\n    sprite[SPRITE.CRAFT_BREAD] = sprite[SPRITE.INV_BREAD];\r\n    sprite[SPRITE.INV_FOODFISH] = create_craft_button(1, [{f: create_fishfood, x: -3, y: -5, a: 1, r: 0, c: [\"#1d051e\", \"#63767c\", \"#424f51\", \"#6c8288\", \"#536468\", \"#202020\", \"#ffffff\", \"#806f60\", \"#514942\", \"#756557\"]}], 0.23, [\"#3ba578\", \"#4eb687\", \"#3da34d\"], 0.5);\r\n    sprite[SPRITE.INV_FOODFISH_COOKED] = create_craft_button(1, [{f: create_fishfood_cooked, x: 0, y: 0, a: 1, r: 0, c: [\"#1d051e\", \"#42261A\", \"#281818\"]}], 0.23, [\"#3ba578\", \"#4eb687\", \"#3da34d\"], 0.5);\r\n    sprite[SPRITE.CRAFT_FOODFISH_COOKED] = sprite[SPRITE.INV_FOODFISH_COOKED];\r\n    sprite[SPRITE.INV_DIVING_MASK] = create_craft_button(1, [{f: create_divingmask, x: -3, y: 0, a: 1, r: 0, c: [\"#1e2021\", \"#65A8B7\", \"#2E85A0\", \"#14275B\", \"#081826\", \"#1A3163\", \"#0C1944\", \"#89C4CE\", \"#2E85A0\"]}], 0.2, [\"#35b1b5\", \"#46c2c9\", \"#33b4e4\"], 0.5);\r\n    sprite[SPRITE.CRAFT_DIVING_MASK] = sprite[SPRITE.INV_DIVING_MASK];\r\n    sprite[SPRITE.INV_SCALES] = create_craft_button(1, [{f: create_scales, x: 0, y: 0, a: 1, r: 0, c: [\"#1e2021\", \"#961B1B\", \"#702727\", \"#C43B3B\"]}], 0.15, [\"#2b5c48\", \"#2b5c48\", \"#2b5c48\"], 0.5);\r\n    sprite[SPRITE.INV_SUPER_DIVING_SUIT] = create_craft_button(1, [{f: create_superdivingsuit, x: 0, y: 0, a: 1, r: 0, c: [\"#F0D200\", \"#B09A00\", \"#79359E\", \"#652D8E\", \"#1e2021\"]}], 0.3, [\"#35b1b5\", \"#46c2c9\", \"#33b4e4\"], 0.5);\r\n    sprite[SPRITE.CRAFT_SUPER_DIVING_SUIT] = sprite[SPRITE.INV_SUPER_DIVING_SUIT];\r\n    sprite[SPRITE.INV_PLOT] = create_craft_button(1, [{f: create_plot, x: 0, y: 0, a: 1, r: 0, c: [\"#1e2021\", \"#352E1E\", \"#4C3B19\", \"#574122\"]}], 0.3, [\"#3ba578\", \"#4eb687\", \"#3da34d\"], 0.5);\r\n    sprite[SPRITE.CRAFT_PLOT] = sprite[SPRITE.INV_PLOT];\r\n    sprite[SPRITE.INV_GARLAND] = create_craft_button(1, [{f: create_garland_inv, x: -5, y: -5, a: 1, r: 0, c: [\"#e2d63b\", \"#ee71a9\", \"#42b672\"]}], 1, [\"#3ba578\", \"#4eb687\", \"#3da34d\"], 0.5);\r\n    sprite[SPRITE.CHEST_GARLAND] = sprite[SPRITE.INV_GARLAND];\r\n    sprite[SPRITE.INV_BRIDGE] = create_craft_button(1, [{f: create_bridge, x: 0, y: 0, a: 1, r: 0, c: [\"#1e2021\", \"#332715\", \"#4C3B19\", \"#574122\"]}], 0.5, [\"#3ba578\", \"#4eb687\", \"#3da34d\"], 0.5);\r\n    sprite[SPRITE.CRAFT_BRIDGE] = sprite[SPRITE.INV_BRIDGE];\r\n    sprite[SPRITE.INV_ROOF] = create_craft_button(1, [{f: create_roof, x: 0, y: 0, a: 1, r: 0, c: [\"#1e2021\", \"#352618\", \"#402b18\", \"#4c3b19\", \"#574122\", \"#52391e\"]}], 0.3, [\"#3ba578\", \"#4eb687\", \"#3da34d\"], 0.5);\r\n    sprite[SPRITE.CRAFT_ROOF] = sprite[SPRITE.INV_ROOF];\r\n    sprite[SPRITE.INV_WATERING_CAN_FULL] = create_craft_button(1, [{f: create_watering_can, x: -1, y: 0, a: 1, r: -Math.PI / 5, c: [\"#1e2021\", \"#674C2A\", \"#4C3B19\", \"#594225\", \"#1678a2\"]}], 0.4, [\"#35b1b5\", \"#46c2c9\", \"#33b4e4\"], 0.7);\r\n    sprite[SPRITE.CRAFT_WATERING_CAN_FULL] = sprite[SPRITE.INV_WATERING_CAN_FULL];\r\n    sprite[SPRITE.INV_WATERING_CAN] = create_craft_button(1, [{f: create_watering_can, x: -1, y: 0, a: 1, r: -Math.PI / 5, c: [\"#1e2021\", \"#674C2A\", \"#4C3B19\", \"#594225\", \"#3F2D18\", \"#2D2112\"]}], 0.4, [\"#2b5c48\", \"#2b5c48\", \"#2b5c48\"], 0.5);\r\n    sprite[SPRITE.CRAFT_WATERING_CAN] = sprite[SPRITE.INV_WATERING_CAN];\r\n    sprite[SPRITE.INV_FLOUR] = create_craft_button(1, [{f: create_flour, x: 0, y: 0, a: 1, r: 0, c: [\"#B3AA8E\", \"#817961\", \"#EBEAE2\", \"#E0DFD8\"]}], 0.25, [\"#2b5c48\", \"#2b5c48\", \"#2b5c48\"], 0.5);\r\n    sprite[SPRITE.INV_CRAB_STICK] = create_craft_button(1, [{f: create_crab_stick, x: 0, y: 0, a: 1, r: 0, c: [\"#1e2021\", \"#ed5f4f\", \"#ce4545\", \"#ffffff\", \"#e2dad7\"]}], 0.2, [\"#3ba578\", \"#4eb687\", \"#3da34d\"], 0.5);\r\n    sprite[SPRITE.CHEST_CRAB_STICK] = sprite[SPRITE.INV_CRAB_STICK];\r\n    sprite[SPRITE.INV_CAKE] = create_craft_button(1, [{f: create_cake, x: 0, y: 0, a: 1, r: 0, c: [\"#1e2021\", \"#63391a\", \"#523124\", \"#d2c4b9\", \"#c1aca2\", \"#d8cbc2\", \"#c8b5ac\", \"#ac222a\", \"#e6636a\"]}], 0.25, [\"#3ba578\", \"#4eb687\", \"#3da34d\"], 0.5);\r\n    sprite[SPRITE.CRAFT_CAKE] = sprite[SPRITE.INV_CAKE];\r\n    sprite[SPRITE.INV_SANDWICH] = create_craft_button(1, [{f: create_SANDWICH, x: -2, y: -8, a: 1, r: 0, c: [\"#dfd6bc\", \"#7b5139\", \"#bf8d50\", \"#834e49\", \"#602820\", \"#d7ccaa\"]}], 0.25, [\"#3ba578\", \"#4eb687\", \"#3da34d\"], 0.5);\r\n    sprite[SPRITE.CRAFT_SANDWICH] = sprite[SPRITE.INV_SANDWICH];\r\n    sprite[SPRITE.INV_LAVA_SWORD] = [];\r\n    sprite[SPRITE.INV_LAVA_SWORD][0] = IMAGES.INV_LAVA_SWORD_OUT;\r\n    sprite[SPRITE.INV_LAVA_SWORD][1] = IMAGES.INV_LAVA_SWORD_IN;\r\n    sprite[SPRITE.INV_LAVA_SWORD][2] = IMAGES.INV_LAVA_SWORD_CLICK;\r\n    sprite[SPRITE.CRAFT_LAVA_SWORD] = sprite[SPRITE.INV_LAVA_SWORD];\r\n    sprite[SPRITE.CHEST_LAVA_SWORD] = sprite[SPRITE.INV_LAVA_SWORD];\r\n    sprite[SPRITE.INV_LAVA_SPEAR] = [];\r\n    sprite[SPRITE.INV_LAVA_SPEAR][0] = IMAGES.INV_LAVA_SPEAR_OUT;\r\n    sprite[SPRITE.INV_LAVA_SPEAR][1] = IMAGES.INV_LAVA_SPEAR_IN;\r\n    sprite[SPRITE.INV_LAVA_SPEAR][2] = IMAGES.INV_LAVA_SPEAR_CLICK;\r\n    sprite[SPRITE.CRAFT_LAVA_SPEAR] = sprite[SPRITE.INV_LAVA_SPEAR];\r\n    sprite[SPRITE.CHEST_LAVA_SPEAR] = sprite[SPRITE.INV_LAVA_SPEAR];\r\n    sprite[SPRITE.CRAFT_REIDITE_SWORD] = sprite[SPRITE.INV_REIDITE_SWORD];\r\n    sprite[SPRITE.CHEST_REIDITE_SWORD] = sprite[SPRITE.INV_REIDITE_SWORD];\r\n    sprite[SPRITE.INV_REIDITE_SWORD] = [];\r\n    sprite[SPRITE.INV_REIDITE_SWORD][0] = IMAGES.INV_REIDITE_SWORD_OUT;\r\n    sprite[SPRITE.INV_REIDITE_SWORD][1] = IMAGES.INV_REIDITE_SWORD_IN;\r\n    sprite[SPRITE.INV_REIDITE_SWORD][2] = IMAGES.INV_REIDITE_SWORD_CLICK;\r\n    sprite[SPRITE.CRAFT_REIDITE_SWORD] = sprite[SPRITE.INV_REIDITE_SWORD];\r\n    sprite[SPRITE.CHEST_REIDITE_SWORD] = sprite[SPRITE.INV_REIDITE_SWORD];\r\n    sprite[SPRITE.INV_REIDITE_SPEAR] = [];\r\n    sprite[SPRITE.INV_REIDITE_SPEAR][0] = IMAGES.INV_REIDITE_SPEAR_OUT;\r\n    sprite[SPRITE.INV_REIDITE_SPEAR][1] = IMAGES.INV_REIDITE_SPEAR_IN;\r\n    sprite[SPRITE.INV_REIDITE_SPEAR][2] = IMAGES.INV_REIDITE_SPEAR_CLICK;\r\n    sprite[SPRITE.CRAFT_REIDITE_SPEAR] = sprite[SPRITE.INV_REIDITE_SPEAR];\r\n    sprite[SPRITE.CHEST_REIDITE_SPEAR] = sprite[SPRITE.INV_REIDITE_SPEAR];\r\n    sprite[SPRITE.INV_DIAMOND_PROTECTION] = [];\r\n    sprite[SPRITE.INV_DIAMOND_PROTECTION][0] = IMAGES.INV_DIAMOND_PROTECTION_OUT;\r\n    sprite[SPRITE.INV_DIAMOND_PROTECTION][1] = IMAGES.INV_DIAMOND_PROTECTION_IN;\r\n    sprite[SPRITE.INV_DIAMOND_PROTECTION][2] = IMAGES.INV_DIAMOND_PROTECTION_CLICK;\r\n    sprite[SPRITE.CRAFT_DIAMOND_PROTECTION] = sprite[SPRITE.INV_DIAMOND_PROTECTION];\r\n    sprite[SPRITE.CHEST_DIAMOND_PROTECTION] = sprite[SPRITE.INV_DIAMOND_PROTECTION];\r\n    sprite[SPRITE.INV_AMETHYST_PROTECTION] = [];\r\n    sprite[SPRITE.INV_AMETHYST_PROTECTION][0] = IMAGES.INV_AMETHYST_PROTECTION_OUT;\r\n    sprite[SPRITE.INV_AMETHYST_PROTECTION][1] = IMAGES.INV_AMETHYST_PROTECTION_IN;\r\n    sprite[SPRITE.INV_AMETHYST_PROTECTION][2] = IMAGES.INV_AMETHYST_PROTECTION_CLICK;\r\n    sprite[SPRITE.CRAFT_AMETHYST_PROTECTION] = sprite[SPRITE.INV_AMETHYST_PROTECTION];\r\n    sprite[SPRITE.CHEST_AMETHYST_PROTECTION] = sprite[SPRITE.INV_AMETHYST_PROTECTION];\r\n    sprite[SPRITE.INV_REIDITE_PROTECTION] = [];\r\n    sprite[SPRITE.INV_REIDITE_PROTECTION][0] = IMAGES.INV_REIDITE_PROTECTION_OUT;\r\n    sprite[SPRITE.INV_REIDITE_PROTECTION][1] = IMAGES.INV_REIDITE_PROTECTION_IN;\r\n    sprite[SPRITE.INV_REIDITE_PROTECTION][2] = IMAGES.INV_REIDITE_PROTECTION_CLICK;\r\n    sprite[SPRITE.CRAFT_REIDITE_PROTECTION] = sprite[SPRITE.INV_REIDITE_PROTECTION];\r\n    sprite[SPRITE.CHEST_REIDITE_PROTECTION] = sprite[SPRITE.INV_REIDITE_PROTECTION];\r\n    sprite[SPRITE.INV_REIDITE_HELMET] = [];\r\n    sprite[SPRITE.INV_REIDITE_HELMET][0] = IMAGES.INV_REIDITE_HELMET_OUT;\r\n    sprite[SPRITE.INV_REIDITE_HELMET][1] = IMAGES.INV_REIDITE_HELMET_IN;\r\n    sprite[SPRITE.INV_REIDITE_HELMET][2] = IMAGES.INV_REIDITE_HELMET_CLICK;\r\n    sprite[SPRITE.CRAFT_REIDITE_HELMET] = sprite[SPRITE.INV_REIDITE_HELMET];\r\n    sprite[SPRITE.CHEST_REIDITE_HELMET] = sprite[SPRITE.INV_REIDITE_HELMET];\r\n    sprite[SPRITE.INV_LAVA_HELMET] = [];\r\n    sprite[SPRITE.INV_LAVA_HELMET][0] = IMAGES.INV_LAVA_HELMET_OUT;\r\n    sprite[SPRITE.INV_LAVA_HELMET][1] = IMAGES.INV_LAVA_HELMET_IN;\r\n    sprite[SPRITE.INV_LAVA_HELMET][2] = IMAGES.INV_LAVA_HELMET_CLICK;\r\n    sprite[SPRITE.CRAFT_LAVA_HELMET] = sprite[SPRITE.INV_LAVA_HELMET];\r\n    sprite[SPRITE.CHEST_LAVA_HELMET] = sprite[SPRITE.INV_LAVA_HELMET];\r\n    sprite[SPRITE.INV_FIREFLY] = [];\r\n    sprite[SPRITE.INV_FIREFLY][0] = IMAGES.INV_FIREFLY_OUT;\r\n    sprite[SPRITE.INV_FIREFLY][1] = IMAGES.INV_FIREFLY_IN;\r\n    sprite[SPRITE.INV_FIREFLY][2] = IMAGES.INV_FIREFLY_CLICK;\r\n    sprite[SPRITE.CRAFT_FIREFLY] = sprite[SPRITE.INV_FIREFLY];\r\n    sprite[SPRITE.CHEST_FIREFLY] = sprite[SPRITE.INV_FIREFLY];\r\n    sprite[SPRITE.INV_WITCH] = [];\r\n    sprite[SPRITE.INV_WITCH][0] = IMAGES.INV_WITCH_OUT;\r\n    sprite[SPRITE.INV_WITCH][1] = IMAGES.INV_WITCH_IN;\r\n    sprite[SPRITE.INV_WITCH][2] = IMAGES.INV_WITCH_CLICK;\r\n    sprite[SPRITE.CRAFT_WITCH] = sprite[SPRITE.INV_WITCH];\r\n    sprite[SPRITE.CHEST_WITCH] = sprite[SPRITE.INV_WITCH];\r\n    sprite[SPRITE.INV_NIMBUS] = [];\r\n    sprite[SPRITE.INV_NIMBUS][0] = IMAGES.INV_NIMBUS_OUT;\r\n    sprite[SPRITE.INV_NIMBUS][1] = IMAGES.INV_NIMBUS_IN;\r\n    sprite[SPRITE.INV_NIMBUS][2] = IMAGES.INV_NIMBUS_CLICK;\r\n    sprite[SPRITE.CRAFT_NIMBUS] = sprite[SPRITE.INV_NIMBUS];\r\n    sprite[SPRITE.CHEST_NIMBUS] = sprite[SPRITE.INV_NIMBUS];\r\n    sprite[SPRITE.INV_REIDITE] = [];\r\n    sprite[SPRITE.INV_REIDITE][0] = IMAGES.INV_REIDITE_OUT;\r\n    sprite[SPRITE.INV_REIDITE][1] = IMAGES.INV_REIDITE_IN;\r\n    sprite[SPRITE.INV_REIDITE][2] = IMAGES.INV_REIDITE_CLICK;\r\n    sprite[SPRITE.CHEST_REIDITE] = sprite[SPRITE.INV_REIDITE];\r\n    sprite[SPRITE.INV_FLAME] = [];\r\n    sprite[SPRITE.INV_FLAME][0] = IMAGES.INV_FLAME_OUT;\r\n    sprite[SPRITE.INV_FLAME][1] = IMAGES.INV_FLAME_IN;\r\n    sprite[SPRITE.INV_FLAME][2] = IMAGES.INV_FLAME_CLICK;\r\n    sprite[SPRITE.CHEST_FLAME] = sprite[SPRITE.INV_FLAME];\r\n    sprite[SPRITE.CHEST_SHOVEL] = sprite[SPRITE.INV_SHOVEL];\r\n    sprite[SPRITE.CHEST_SHOVEL_GOLD] = sprite[SPRITE.INV_SHOVEL_GOLD];\r\n    sprite[SPRITE.CHEST_SHOVEL_DIAMOND] = sprite[SPRITE.INV_SHOVEL_DIAMOND];\r\n    sprite[SPRITE.CHEST_SHOVEL_AMETHYST] = sprite[SPRITE.INV_SHOVEL_AMETHYST];\r\n    sprite[SPRITE.CHEST_SEED] = sprite[SPRITE.INV_SEED];\r\n    sprite[SPRITE.CHEST_WHEAT_SEED] = sprite[SPRITE.INV_WHEAT_SEED];\r\n    sprite[SPRITE.CHEST_WINDMILL] = sprite[SPRITE.INV_WINDMILL];\r\n    sprite[SPRITE.CHEST_WILD_WHEAT] = sprite[SPRITE.INV_WILD_WHEAT];\r\n    sprite[SPRITE.CHEST_FIRE] = sprite[SPRITE.INV_FIRE];\r\n    sprite[SPRITE.CHEST_DRAGON_ORB] = sprite[SPRITE.INV_DRAGON_ORB];\r\n    sprite[SPRITE.CHEST_DRAGON_CUBE] = sprite[SPRITE.INV_DRAGON_CUBE];\r\n    sprite[SPRITE.CHEST_LAVA_ORB] = sprite[SPRITE.INV_LAVA_ORB];\r\n    sprite[SPRITE.CHEST_LAVA_CUBE] = sprite[SPRITE.INV_LAVA_CUBE];\r\n    sprite[SPRITE.CHEST_BIG_FIRE] = sprite[SPRITE.INV_BIG_FIRE];\r\n    sprite[SPRITE.CHEST_SUGAR_CAN] = sprite[SPRITE.INV_SUGAR_CAN];\r\n    sprite[SPRITE.CHEST_PIRATE_SWORD] = sprite[SPRITE.INV_PIRATE_SWORD];\r\n    sprite[SPRITE.CHEST_SWORD_WOOD] = sprite[SPRITE.INV_SWORD_WOOD];\r\n    sprite[SPRITE.CHEST_SWORD] = sprite[SPRITE.INV_SWORD];\r\n    sprite[SPRITE.CHEST_CURSED_SWORD] = sprite[SPRITE.INV_CURSED_SWORD];\r\n    sprite[SPRITE.CHEST_SWORD_GOLD] = sprite[SPRITE.INV_SWORD_GOLD];\r\n    sprite[SPRITE.CHEST_SWORD_DIAMOND] = sprite[SPRITE.INV_SWORD_DIAMOND];\r\n    sprite[SPRITE.CHEST_SWORD_AMETHYST] = sprite[SPRITE.INV_SWORD_AMETHYST];\r\n    sprite[SPRITE.CHEST_PICK_WOOD] = sprite[SPRITE.INV_PICK_WOOD];\r\n    sprite[SPRITE.CHEST_PICK] = sprite[SPRITE.INV_PICK];\r\n    sprite[SPRITE.CHEST_PICK_GOLD] = sprite[SPRITE.INV_PICK_GOLD];\r\n    sprite[SPRITE.CHEST_PICK_DIAMOND] = sprite[SPRITE.INV_PICK_DIAMOND];\r\n    sprite[SPRITE.CHEST_PICK_AMETHYST] = sprite[SPRITE.INV_PICK_AMETHYST];\r\n    sprite[SPRITE.CHEST_STONE] = sprite[SPRITE.INV_STONE];\r\n    sprite[SPRITE.CHEST_GOLD] = sprite[SPRITE.INV_GOLD];\r\n    sprite[SPRITE.CHEST_DIAMOND] = sprite[SPRITE.INV_DIAMOND];\r\n    sprite[SPRITE.CHEST_WOOD] = sprite[SPRITE.INV_WOOD];\r\n    sprite[SPRITE.CHEST_PLANT] = sprite[SPRITE.INV_PLANT];\r\n    sprite[SPRITE.CHEST_WORKBENCH] = sprite[SPRITE.INV_WORK];\r\n    sprite[SPRITE.CHEST_STONE_WALL] = sprite[SPRITE.INV_STONE_WALL];\r\n    sprite[SPRITE.CHEST_DIAMOND_WALL] = sprite[SPRITE.INV_DIAMOND_WALL];\r\n    sprite[SPRITE.CHEST_GOLD_WALL] = sprite[SPRITE.INV_GOLD_WALL];\r\n    sprite[SPRITE.CHEST_AMETHYST_WALL] = sprite[SPRITE.INV_AMETHYST_WALL];\r\n    sprite[SPRITE.CHEST_WALL] = sprite[SPRITE.INV_WALL];\r\n    sprite[SPRITE.CHEST_SPIKE] = sprite[SPRITE.INV_SPIKE];\r\n    sprite[SPRITE.CHEST_MEAT] = sprite[SPRITE.INV_MEAT];\r\n    sprite[SPRITE.CHEST_COOKED_MEAT] = sprite[SPRITE.INV_COOKED_MEAT];\r\n    sprite[SPRITE.CHEST_CORD] = sprite[SPRITE.INV_CORD];\r\n    sprite[SPRITE.CHEST_BLUE_CORD] = sprite[SPRITE.INV_BLUE_CORD];\r\n    sprite[SPRITE.CHEST_BANDAGE] = sprite[SPRITE.INV_BANDAGE];\r\n    sprite[SPRITE.CHEST_LOCK] = sprite[SPRITE.INV_LOCK];\r\n    sprite[SPRITE.CHEST_LOCKPICK] = sprite[SPRITE.INV_LOCKPICK];\r\n    sprite[SPRITE.CHEST_RESURRECTION] = sprite[SPRITE.INV_RESURRECTION];\r\n    sprite[SPRITE.CHEST_DRAGON_HEART] = sprite[SPRITE.INV_DRAGON_HEART];\r\n    sprite[SPRITE.CHEST_LAVA_HEART] = sprite[SPRITE.INV_LAVA_HEART];\r\n    sprite[SPRITE.CHEST_DRAGON_SWORD] = sprite[SPRITE.INV_DRAGON_SWORD];\r\n    sprite[SPRITE.CHEST_TOTEM] = sprite[SPRITE.INV_TOTEM];\r\n    sprite[SPRITE.CHEST_DOOR_WOOD_CLOSE] = sprite[SPRITE.INV_DOOR_WOOD_CLOSE];\r\n    sprite[SPRITE.CHEST_CHEST] = sprite[SPRITE.INV_CHEST];\r\n    sprite[SPRITE.CHEST_SLOT] = CTI(create_chest_slot(0.8, true, [\"#4c3b19\", \"#c4a23a\", \"#c4a23a\", \"#c4a23a\"]));\r\n    sprite[SPRITE.CHEST_PLUS] = create_craft_button(0.5, [{f: create_plus_chest, x: 0, y: 2, a: 1, r: 0, c: [\"#ffffff\"]}], 0.16, [\"#c4a23a\", \"#d0ad41\", \"#b89733\"], 0.9);\r\n    sprite[SPRITE.CHEST_STONE_SPIKE] = sprite[SPRITE.INV_STONE_SPIKE];\r\n    sprite[SPRITE.CHEST_GOLD_SPIKE] = sprite[SPRITE.INV_GOLD_SPIKE];\r\n    sprite[SPRITE.CHEST_DIAMOND_SPIKE] = sprite[SPRITE.INV_DIAMOND_SPIKE];\r\n    sprite[SPRITE.CHEST_AMETHYST_SPIKE] = sprite[SPRITE.INV_AMETHYST_SPIKE];\r\n    sprite[SPRITE.CHEST_BAG] = sprite[SPRITE.INV_BAG];\r\n    sprite[SPRITE.CHEST_SPECIAL_FUR] = sprite[SPRITE.INV_SPECIAL_FUR];\r\n    sprite[SPRITE.CHEST_SPECIAL_FUR_2] = sprite[SPRITE.INV_SPECIAL_FUR_2];\r\n    sprite[SPRITE.CHEST_FUR] = sprite[SPRITE.INV_FUR];\r\n    sprite[SPRITE.CHEST_KRAKEN_SKIN] = sprite[SPRITE.INV_KRAKEN_SKIN];\r\n    sprite[SPRITE.CHEST_FUR_WOLF] = sprite[SPRITE.INV_FUR_WOLF];\r\n    sprite[SPRITE.CHEST_FUR_BOAR] = sprite[SPRITE.INV_FUR_BOAR];\r\n    sprite[SPRITE.CHEST_FUR_WINTER] = sprite[SPRITE.INV_FUR_WINTER];\r\n    sprite[SPRITE.CHEST_EARMUFFS] = sprite[SPRITE.INV_EARMUFFS];\r\n    sprite[SPRITE.CHEST_CAP_SCARF] = sprite[SPRITE.INV_CAP_SCARF];\r\n    sprite[SPRITE.CHEST_DOOR_STONE_CLOSE] = sprite[SPRITE.INV_DOOR_STONE_CLOSE];\r\n    sprite[SPRITE.CHEST_DOOR_GOLD_CLOSE] = sprite[SPRITE.INV_DOOR_GOLD_CLOSE];\r\n    sprite[SPRITE.CHEST_DOOR_DIAMOND_CLOSE] = sprite[SPRITE.INV_DOOR_DIAMOND_CLOSE];\r\n    sprite[SPRITE.CHEST_DOOR_AMETHYST_CLOSE] = sprite[SPRITE.INV_DOOR_AMETHYST_CLOSE];\r\n    sprite[SPRITE.CHEST_COAT] = sprite[SPRITE.INV_COAT];\r\n    sprite[SPRITE.CHEST_WOOD_SPEAR] = sprite[SPRITE.INV_WOOD_SPEAR];\r\n    sprite[SPRITE.CHEST_SPEAR] = sprite[SPRITE.INV_SPEAR];\r\n    sprite[SPRITE.CHEST_GOLD_SPEAR] = sprite[SPRITE.INV_GOLD_SPEAR];\r\n    sprite[SPRITE.CHEST_DIAMOND_SPEAR] = sprite[SPRITE.INV_DIAMOND_SPEAR];\r\n    sprite[SPRITE.CHEST_AMETHYST_SPEAR] = sprite[SPRITE.INV_AMETHYST_SPEAR];\r\n    sprite[SPRITE.CHEST_DRAGON_SPEAR] = sprite[SPRITE.INV_DRAGON_SPEAR];\r\n    sprite[SPRITE.CHEST_SUPER_HAMMER] = sprite[SPRITE.INV_SUPER_HAMMER];\r\n    sprite[SPRITE.CHEST_SPANNER] = sprite[SPRITE.INV_SPANNER];\r\n    sprite[SPRITE.CHEST_HAMMER] = sprite[SPRITE.INV_HAMMER];\r\n    sprite[SPRITE.CHEST_HAMMER_GOLD] = sprite[SPRITE.INV_HAMMER_GOLD];\r\n    sprite[SPRITE.CHEST_HAMMER_DIAMOND] = sprite[SPRITE.INV_HAMMER_DIAMOND];\r\n    sprite[SPRITE.CHEST_HAMMER_AMETHYST] = sprite[SPRITE.INV_HAMMER_AMETHYST];\r\n    sprite[SPRITE.CHEST_FURNACE] = sprite[SPRITE.INV_FURNACE];\r\n    sprite[SPRITE.CHEST_BREAD_OVEN] = sprite[SPRITE.INV_BREAD_OVEN];\r\n    sprite[SPRITE.CHEST_EXPLORER_HAT] = sprite[SPRITE.INV_EXPLORER_HAT];\r\n    sprite[SPRITE.CHEST_STONE_HELMET] = sprite[SPRITE.INV_STONE_HELMET];\r\n    sprite[SPRITE.CHEST_GOLD_HELMET] = sprite[SPRITE.INV_GOLD_HELMET];\r\n    sprite[SPRITE.CHEST_DIAMOND_HELMET] = sprite[SPRITE.INV_DIAMOND_HELMET];\r\n    sprite[SPRITE.CHEST_AMETHYST_HELMET] = sprite[SPRITE.INV_AMETHYST_HELMET];\r\n    sprite[SPRITE.CHEST_DRAGON_HELMET] = sprite[SPRITE.INV_DRAGON_HELMET];\r\n    sprite[SPRITE.CHEST_BOOK] = sprite[SPRITE.INV_BOOK];\r\n    sprite[SPRITE.CHEST_PAPER] = sprite[SPRITE.INV_PAPER];\r\n    sprite[SPRITE.CHEST_AMETHYST] = sprite[SPRITE.INV_AMETHYST];\r\n    sprite[SPRITE.CHEST_BRIDGE] = sprite[SPRITE.INV_BRIDGE];\r\n    sprite[SPRITE.CHEST_ROOF] = sprite[SPRITE.INV_ROOF];\r\n    sprite[SPRITE.CHEST_PLOT] = sprite[SPRITE.INV_PLOT];\r\n    sprite[SPRITE.CHEST_SAND] = sprite[SPRITE.INV_SAND];\r\n    sprite[SPRITE.CHEST_BREAD] = sprite[SPRITE.INV_BREAD];\r\n    sprite[SPRITE.CHEST_ICE] = sprite[SPRITE.INV_ICE];\r\n    sprite[SPRITE.CHEST_GROUND] = sprite[SPRITE.INV_GROUND];\r\n    sprite[SPRITE.CHEST_BOTTLE_FULL] = sprite[SPRITE.INV_BOTTLE_FULL];\r\n    sprite[SPRITE.CHEST_BOTTLE_EMPTY] = sprite[SPRITE.INV_BOTTLE_EMPTY];\r\n    sprite[SPRITE.CHEST_WATERING_CAN] = sprite[SPRITE.INV_WATERING_CAN];\r\n    sprite[SPRITE.CHEST_FLOUR] = sprite[SPRITE.INV_FLOUR];\r\n    sprite[SPRITE.CHEST_COOKIE] = sprite[SPRITE.INV_COOKIE];\r\n    sprite[SPRITE.CHEST_CANDY] = sprite[SPRITE.INV_CANDY];\r\n    sprite[SPRITE.CHEST_FERRERO] = sprite[SPRITE.INV_FERRERO];\r\n    sprite[SPRITE.CHEST_SUPER_DIVING_SUIT] = sprite[SPRITE.INV_SUPER_DIVING_SUIT];\r\n    sprite[SPRITE.CHEST_DIVING_MASK] = sprite[SPRITE.INV_DIVING_MASK];\r\n    sprite[SPRITE.CHEST_WATERING_CAN_FULL] = sprite[SPRITE.INV_WATERING_CAN_FULL];\r\n    sprite[SPRITE.CHEST_CAKE] = sprite[SPRITE.INV_CAKE];\r\n    sprite[SPRITE.CHEST_CRAB_STICK] = sprite[SPRITE.INV_CRAB_STICK];\r\n    sprite[SPRITE.CHEST_FOODFISH] = sprite[SPRITE.INV_FOODFISH];\r\n    sprite[SPRITE.CHEST_FOODFISH_COOKED] = sprite[SPRITE.INV_FOODFISH_COOKED];\r\n    sprite[SPRITE.CHEST_SCALES] = sprite[SPRITE.INV_SCALES];\r\n    sprite[SPRITE.CHEST_SANDWICH] = sprite[SPRITE.INV_SANDWICH];\r\n    sprite[SPRITE.CHEST_CROWN_GREEN] = sprite[SPRITE.INV_CROWN_GREEN];\r\n    sprite[SPRITE.CHEST_GEMME_GREEN] = sprite[SPRITE.INV_GEMME_GREEN];\r\n    sprite[SPRITE.CHEST_CROWN_ORANGE] = sprite[SPRITE.INV_CROWN_ORANGE];\r\n    sprite[SPRITE.CHEST_GEMME_ORANGE] = sprite[SPRITE.INV_GEMME_ORANGE];\r\n    sprite[SPRITE.CHEST_CROWN_BLUE] = sprite[SPRITE.INV_CROWN_BLUE];\r\n    sprite[SPRITE.CHEST_GEMME_BLUE] = sprite[SPRITE.INV_GEMME_BLUE];\r\n    sprite[SPRITE.CHEST_HOOD] = sprite[SPRITE.INV_HOOD];\r\n    sprite[SPRITE.CHEST_PEASANT] = sprite[SPRITE.INV_PEASANT];\r\n    sprite[SPRITE.CHEST_WINTER_PEASANT] = sprite[SPRITE.INV_WINTER_PEASANT];\r\n    sprite[SPRITE.CHEST_WINTER_HOOD] = sprite[SPRITE.INV_WINTER_HOOD];\r\n    sprite[SPRITE.CHEST_BUCKET_EMPTY] = sprite[SPRITE.INV_BUCKET_EMPTY];\r\n    sprite[SPRITE.CHEST_BUCKET_FULL] = sprite[SPRITE.INV_BUCKET_FULL];\r\n    sprite[SPRITE.CHEST_WELL] = sprite[SPRITE.INV_WELL];\r\n    sprite[SPRITE.CHEST_SIGN] = sprite[SPRITE.INV_SIGN];\r\n    sprite[SPRITE.CHEST_PUMPKIN_SEED] = sprite[SPRITE.INV_PUMPKIN_SEED];\r\n    sprite[SPRITE.CHEST_GARLIC_SEED] = sprite[SPRITE.INV_GARLIC_SEED];\r\n    sprite[SPRITE.CHEST_THORNBUSH_SEED] = sprite[SPRITE.INV_THORNBUSH_SEED];\r\n    sprite[SPRITE.CHEST_WOOD_HELMET] = sprite[SPRITE.INV_WOOD_HELMET];\r\n}\r\n;\r\nINFO_BOX = [];\r\nPLAYER_LEVEL = [];\r\nfunction ctxDrawImage(ctx, img, b, c, d, e, f, g, h, i) {\r\n    if (xray){\r\n        ctx.globalAlpha = 0.4;\r\n    }\r\n    if (img.tryLoad === undefined || img.tryLoad() === 1) {\r\n        if (i !== undefined) ctx.drawImage(img, b, c, Math.max(1, d), Math.max(1, e), f, g, h, i); else if (e !== undefined) ctx.drawImage(img, b, c, d, e); else ctx.drawImage(img, b, c);\r\n    }\r\n}\r\n;\r\nfunction draw_info_box() {\r\n    var box = game.info_box;\r\n    var inv = box.id;\r\n    if (box.activated === 1 && box.display === 1) {\r\n        if (INFO_BOX[inv] === undefined) INFO_BOX[inv] = create_info_box(inv);\r\n        if (box.craft === 1) ctxDrawImage(ctx, INFO_BOX[inv], box.x, box.y); else {\r\n            if (box.x - 80 + INFO_BOX[inv].width > canw) ctxDrawImage(ctx, INFO_BOX[inv], canw - INFO_BOX[inv].width - 10, box.y - INFO_BOX[inv].height - 10); else ctxDrawImage(ctx, INFO_BOX[inv], box.x - 80, box.y - INFO_BOX[inv].height - 10);\r\n        }\r\n    }\r\n}\r\n;\r\nfunction draw_slot_number(n, button, push) {\r\n    var img = sprite[SPRITE.SLOT_NUMBER][n];\r\n    var x = button.info.translate.x + 5 * scale;\r\n    var y = button.info.translate.y + 5 * scale;\r\n    if (button.info.state == BUTTON_CLICK || push) y += scale * 5;\r\n    ctxDrawImage(ctx, img, x, y);\r\n}\r\n;\r\nfunction draw_amount(n, button) {\r\n    if (!sprite[SPRITE.COUNTER][n]) sprite[SPRITE.COUNTER][n] = create_text(scale, \"x\" + n, 17, \"#FFF\");\r\n    var img = sprite[SPRITE.COUNTER][n];\r\n    var x = button.info.translate.x + button.info.img[0].width - img.width - 14 * scale;\r\n    var y = button.info.translate.y + button.info.img[0].height - img.height - 19 * scale;\r\n    if (button.info.state == BUTTON_CLICK) y += scale * 5;\r\n    ctxDrawImage(ctx, img, x, y);\r\n}\r\n;\r\nfunction draw_well_inventory() {\r\n    if (user.chest.open || user.furnace.open || user.windmill.open || user.bread_oven.open || user.extractor.open) return;\r\n    user.well.open = false;\r\n    var p = world.fast_units[user.uid];\r\n    var min = WORLD.DIST_WELL;\r\n    if (!p) return;\r\n    for (var i = 0; i < world.units[ITEMS.WELL].length; i++) {\r\n        var well = world.units[ITEMS.WELL][i];\r\n        var m = Utils.dist(well, p);\r\n        if (m < min) {\r\n            min = m;\r\n            user.well.open = true;\r\n            user.well.pid = well.pid;\r\n            user.well.iid = well.id;\r\n        }\r\n    }\r\n}\r\n;\r\nfunction draw_sign_button() {\r\n    if (user.chest.open || user.furnace.open || user.windmill.open || user.bread_oven.open || user.extractor.open) return;\r\n    user.sign.open = false;\r\n    var p = world.fast_units[user.uid];\r\n    var min = WORLD.DIST_SIGN;\r\n    if (!p) return;\r\n    for (var i = 0; i < world.units[ITEMS.SIGN].length; i++) {\r\n        var sign = world.units[ITEMS.SIGN][i];\r\n        var m = Utils.dist(sign, p);\r\n        if (m < min && sign.info === 0 && sign.pid === user.id) {\r\n            user.sign.open = true;\r\n            min = m;\r\n            user.sign.iid = sign.id;\r\n        }\r\n    }\r\n    if (min < WORLD.DIST_SIGN) {\r\n        var button = game.sign.button;\r\n        button.draw(ctx);\r\n    }\r\n}\r\n;\r\n;\r\nfunction draw_bread_oven_inventory() {\r\n    if (user.chest.open || user.furnace.open || user.windmill.open || user.extractor.open) return;\r\n    user.bread_oven.open = false;\r\n    var p = world.fast_units[user.uid];\r\n    var min = WORLD.DIST_BREAD_OVEN;\r\n    if (!p) return;\r\n    for (var i = 0; i < world.units[ITEMS.BREAD_OVEN].length; i++) {\r\n        var bread_oven = world.units[ITEMS.BREAD_OVEN][i];\r\n        var m = Utils.dist(bread_oven, p);\r\n        if (m < min) {\r\n            min = m;\r\n            user.bread_oven.open = true;\r\n            user.bread_oven.amount_wood = bread_oven.info & 31;\r\n            user.bread_oven.amount_flour = (bread_oven.info & 992) >> 5;\r\n            user.bread_oven.amount_bread = (bread_oven.info & 31744) >> 10;\r\n            user.bread_oven.pid = bread_oven.pid;\r\n            user.bread_oven.iid = bread_oven.id;\r\n        }\r\n    }\r\n    if (min < WORLD.DIST_BREAD_OVEN) {\r\n        var img = sprite[SPRITE.BREAD_OVEN_UI];\r\n        var button = game.bread_oven_wood_button;\r\n        var x = button.info.translate.x - 32;\r\n        ctxDrawImage(ctx, img, x, 0);\r\n        if (user.bread_oven.amount_wood > 0) {\r\n            button.draw(ctx);\r\n            var n = user.bread_oven.amount_wood;\r\n            if (n > 1) draw_amount(n, button);\r\n        }\r\n        var button = game.bread_oven_bread_button;\r\n        if (user.bread_oven.amount_bread > 0) {\r\n            button.draw(ctx);\r\n            var n = user.bread_oven.amount_bread;\r\n            if (n > 1) draw_amount(n, button);\r\n        }\r\n        var button = game.bread_oven_flour_button;\r\n        if (user.bread_oven.amount_flour > 0) {\r\n            button.draw(ctx);\r\n            var n = user.bread_oven.amount_flour;\r\n            if (n > 1) draw_amount(n, button);\r\n        }\r\n    }\r\n}\r\n;\r\nfunction draw_extractor_inventory() {\r\n    if (user.chest.open || user.furnace.open) return;\r\n    user.extractor.open = false;\r\n    var p = world.fast_units[user.uid];\r\n    var min = WORLD.DIST_EXTRACTOR_MACHINE;\r\n    if (!p) return;\r\n    for (var j = 0; j < EXTRACTORS.length; j++) {\r\n        var type = EXTRACTORS[j][0];\r\n        var mineral = EXTRACTORS[j][1];\r\n        for (var i = 0; i < world.units[type].length; i++) {\r\n            var extractor = world.units[type][i];\r\n            var m = Utils.dist(extractor, p);\r\n            if (m < min) {\r\n                min = m;\r\n                user.extractor.mineral = mineral;\r\n                user.extractor.type = type;\r\n                user.extractor.open = true;\r\n                user.extractor.amount_wood = extractor.info & 255;\r\n                user.extractor.amount_mineral = (extractor.info & 65280) >> 8;\r\n                user.extractor.pid = extractor.pid;\r\n                user.extractor.iid = extractor.id;\r\n            }\r\n        }\r\n    }\r\n    if (min < WORLD.DIST_EXTRACTOR_MACHINE) {\r\n        var img = sprite[SPRITE.EXTRACTOR_CASES];\r\n        var button = game.extractor_wood_button;\r\n        var x = button.info.translate.x - 33;\r\n        ctxDrawImage(ctx, img, x, 0);\r\n        if (user.extractor.amount_wood > 0) {\r\n            button.draw(ctx);\r\n            var n = user.extractor.amount_wood;\r\n            if (n > 1) draw_amount(n, button);\r\n        }\r\n        switch (user.extractor.mineral) {\r\n            case INV.STONE:\r\n                var button = game.extractor_stone_button;\r\n                break;\r\n            case INV.GOLD:\r\n                var button = game.extractor_gold_button;\r\n                break;\r\n            case INV.DIAMOND:\r\n                var button = game.extractor_diamond_button;\r\n                break;\r\n            case INV.AMETHYST:\r\n                var button = game.extractor_amethyst_button;\r\n                break;\r\n            case INV.REIDITE:\r\n                var button = game.extractor_reidite_button;\r\n                break;\r\n        }\r\n        if (user.extractor.amount_mineral > 0) {\r\n            button.draw(ctx);\r\n            var n = user.extractor.amount_mineral;\r\n            if (n > 1) draw_amount(n, button);\r\n        }\r\n    }\r\n}\r\n;\r\nfunction draw_windmill_inventory() {\r\n    if (user.chest.open || user.furnace.open) return;\r\n    user.windmill.open = false;\r\n    var p = world.fast_units[user.uid];\r\n    var min = WORLD.DIST_WINDMILL;\r\n    if (!p) return;\r\n    for (var i = 0; i < world.units[ITEMS.WINDMILL].length; i++) {\r\n        var windmill = world.units[ITEMS.WINDMILL][i];\r\n        var m = Utils.dist(windmill, p);\r\n        if (m < min) {\r\n            min = m;\r\n            user.windmill.open = true;\r\n            user.windmill.amount_wheat = windmill.info & 255;\r\n            user.windmill.amount_flour = (windmill.info & 65280) >> 8;\r\n            user.windmill.pid = windmill.pid;\r\n            user.windmill.iid = windmill.id;\r\n        }\r\n    }\r\n    if (min < WORLD.DIST_WINDMILL) {\r\n        var img = sprite[SPRITE.WINDMILL_CASES];\r\n        var button = game.windmill_wheat_button;\r\n        var x = button.info.translate.x - 33;\r\n        ctxDrawImage(ctx, img, x, 0);\r\n        if (user.windmill.amount_wheat > 0) {\r\n            button.draw(ctx);\r\n            var n = user.windmill.amount_wheat;\r\n            if (n > 1) draw_amount(n, button);\r\n        }\r\n        var button = game.windmill_flour_button;\r\n        if (user.windmill.amount_flour > 0) {\r\n            button.draw(ctx);\r\n            var n = user.windmill.amount_flour;\r\n            if (n > 1) draw_amount(n, button);\r\n        }\r\n    }\r\n}\r\n;\r\nfunction draw_furnace_inventory() {\r\n    if (user.chest.open) return;\r\n    user.furnace.amount = 0;\r\n    user.furnace.open = false;\r\n    var p = world.fast_units[user.uid];\r\n    var min = WORLD.DIST_FURNACE;\r\n    if (!p) return;\r\n    for (var i = 0; i < world.units[ITEMS.FURNACE].length; i++) {\r\n        var furnace = world.units[ITEMS.FURNACE][i];\r\n        var m = Utils.dist(furnace, p);\r\n        if (m < min) {\r\n            min = m;\r\n            user.furnace.open = true;\r\n            user.furnace.amount = furnace.info;\r\n            user.furnace.pid = furnace.pid;\r\n            user.furnace.iid = furnace.id;\r\n        }\r\n    }\r\n    if (min < WORLD.DIST_FURNACE) {\r\n        var img = sprite[SPRITE.FURNACE_SLOT];\r\n        var button = game.furnace_button;\r\n        var x = Math.floor(button.info.translate.x + (button.info.img[0].width - img.width) / 2);\r\n        var y = Math.floor(button.info.translate.y + (button.info.img[0].height - img.height) / 2) + 3;\r\n        ctxDrawImage(ctx, img, x, y);\r\n        if (user.furnace.amount > 0) {\r\n            button.draw(ctx);\r\n            var n = user.furnace.amount;\r\n            if (n > 1) draw_amount(n, button);\r\n        }\r\n    }\r\n}\r\n;\r\nfunction draw_resurrection_inventory() {\r\n    user.resurrection.open = false;\r\n    var p = world.fast_units[user.uid];\r\n    var min = WORLD.DIST_RESURRECTION;\r\n    if (!p) return;\r\n    for (var i = 0; i < world.units[ITEMS.RESURRECTION].length; i++) {\r\n        var resurrection = world.units[ITEMS.RESURRECTION][i];\r\n        var m = Utils.dist(resurrection, p);\r\n        if (m < min) {\r\n            min = m;\r\n            user.resurrection.open = true;\r\n            user.resurrection.pid = resurrection.pid;\r\n            user.resurrection.iid = resurrection.id;\r\n        }\r\n    }\r\n    if (min < WORLD.DIST_RESURRECTION) game.resurrection.draw(ctx);\r\n}\r\n;\r\nfunction draw_team_buttons() {\r\n    user.totem.id = -1;\r\n    user.totem.pid = -1;\r\n    if (user.spectator || user.totem.wait || user.zombie) return;\r\n    var p = world.fast_units[user.uid];\r\n    var min = WORLD.DIST_TOTEM;\r\n    if (p) {\r\n        for (var i = 0; i < world.units[ITEMS.TOTEM].length; i++) {\r\n            var totem = world.units[ITEMS.TOTEM][i];\r\n            var m = Utils.dist(totem, p);\r\n            if (m < min) {\r\n                min = m;\r\n                user.totem.id = totem.id;\r\n                user.totem.pid = totem.pid;\r\n                user.totem.info = totem.info;\r\n                user.totem.lock = (totem.info & 16) >> 4;\r\n            }\r\n        }\r\n    }\r\n    var before = game.team_buttons_id;\r\n    game.team_buttons_id = -1;\r\n    if (user.totem.pid != -1 && (user.team.length == 0 || user.id == user.totem.pid)) {\r\n        if (user.team.length == 0 && user.totem.info >= 8) game.team_buttons_id = CLIENT.TEAM_FULL; else if (user.team.length == 0) game.team_buttons_id = CLIENT.TEAM_JOIN; else game.team_buttons_id = CLIENT.TEAM_MANAGE;\r\n    } else if (user.team.length != 0 && user.team[0] != user.id) game.team_buttons_id = CLIENT.TEAM_LEAVE; else if (user.team.length != 0 && user.team[0] == user.id) game.team_buttons_id = CLIENT.TEAM_SHOW; else if (user.team.length != 0) game.team_buttons_id = CLIENT.TEAM_JOIN;\r\n    if (game.team_buttons_id != -1) game.team_buttons[game.team_buttons_id].button.draw(ctx);\r\n    var style = document.getElementById(\"team_box\").style;\r\n    if (game.team_buttons_id != -1 && game.team_buttons_id != before && style.display == \"inline-block\") game.team_buttons[game.team_buttons_id].action();\r\n}\r\n;\r\nfunction draw_chest_inventory() {\r\n    user.chest.id = -1;\r\n    user.chest.lock = false;\r\n    user.chest.locked = false;\r\n    user.chest.lockpick = false;\r\n    user.chest.padlock = false;\r\n    user.chest.open = false;\r\n    var p = world.fast_units[user.uid];\r\n    var min = WORLD.DIST_CHEST;\r\n    if (!p) return;\r\n    for (var i = 0; i < world.units[ITEMS.CHEST].length; i++) {\r\n        var chest = world.units[ITEMS.CHEST][i];\r\n        var m = Utils.dist(chest, p);\r\n        if (m < min) {\r\n            min = m;\r\n            user.chest.open = true;\r\n            user.chest.id = chest.action < 2 ? -1 : Math.floor((chest.action - 1) / 2);\r\n            user.chest.amount = chest.info;\r\n            user.chest.pid = chest.pid;\r\n            user.chest.iid = chest.id;\r\n            user.chest.locked = chest.lock;\r\n            user.chest.lock = chest.lock && user.id != chest.pid && !user.in_team(chest.pid) ? true : false;\r\n            user.chest.padlock = chest.pid === user.id && !user.chest.locked && user.inv.find_item(INV.LOCK) != -1 ? true : false;\r\n            if (user.chest.locked && user.inv.find_item(INV.LOCKPICK) != -1) user.chest.lockpick = true;\r\n        }\r\n    }\r\n    if (min < WORLD.DIST_CHEST) {\r\n        var img = sprite[SPRITE.CHEST_SLOT];\r\n        var button = game.chest_buttons[0];\r\n        var x = Math.floor(button.info.translate.x + (button.info.img[0].width - img.width) / 2);\r\n        var y = Math.floor(button.info.translate.y + (button.info.img[0].height - img.height) / 2) + 3;\r\n        ctxDrawImage(ctx, img, x, y);\r\n        if (!user.chest.lock || user.chest.pid === user.id) {\r\n            if (user.chest.id >= 0) {\r\n                var button = game.chest_buttons[user.chest.id];\r\n                button.draw(ctx);\r\n                var n = user.chest.amount;\r\n                if (n > 1) draw_amount(n, button);\r\n            }\r\n        }\r\n        if (!user.chest.lock) {\r\n            if (user.chest.padlock) game.chest_padlock.draw(ctx);\r\n        } else game.chest_locked.draw(ctx);\r\n        if (user.chest.lockpick) game.chest_lockpick.draw(ctx);\r\n    }\r\n}\r\n;\r\nfunction draw_bigmap() {\r\n    if (!user.bigmap) return;\r\n    ctx.globalAlpha = 0.5;\r\n    ctx.fillStyle = \"#000\";\r\n    ctx.fillRect(0, 0, canw, canh);\r\n    ctx.globalAlpha = 0.8;\r\n    var img = sprite[SPRITE.BIGMAP][world.time];\r\n    var x = canw2 - img.width / 2;\r\n    var y = canh2 - img.height / 2;\r\n    ctxDrawImage(ctx, img, x, y);\r\n    ctx.globalAlpha = 1;\r\n    if (game.minimap.marker.x > -1) {\r\n        ctx.fillStyle = \"#660000\";\r\n        circle(ctx, x + game.minimap.marker.x * 3 * scale, y + game.minimap.marker.y * 3 * scale, scale * 14);\r\n        ctx.fill();\r\n    }\r\n    var players = game.minimap.players;\r\n    for (var i = 0; i < players.length; i++) {\r\n        var p = players[i];\r\n        ctx.fillStyle = !world.time ? \"#ff0000\" : \"#ff0000\";\r\n        circle(ctx, x + 600 * (p.x / (world.nw * 100)) * scale, y + 600 * (p.y / (world.nh * 100)) * scale, scale * 6);\r\n        ctx.fill();\r\n    }\r\n    var u = world.fast_units[user.uid];\r\n    if (u) {\r\n        ctx.fillStyle = !world.time ? \"#e39716\" : \"#fff\";\r\n        circle(ctx, x + 600 * (u.x / (world.nw * 100)) * scale, y + 600 * (u.y / (world.nh * 100)) * scale, scale * 12);\r\n        ctx.fill();\r\n    }\r\n}\r\n;\r\nfunction draw_reconnect() {\r\n    if (user.reconnect.enabled) {\r\n        ctx.globalAlpha = 0.9;\r\n        ctx.fillStyle = \"#000\";\r\n        round_rect(ctx, canw2 - 150, canh2 - 90, 300, 180, 15);\r\n        ctx.fill();\r\n        ctx.globalAlpha = 1;\r\n        var img = sprite[SPRITE.GEAR2];\r\n        ctx.save();\r\n        user.reconnect.rotate = (user.reconnect.rotate + delta * 2) % (Math.PI * 2);\r\n        ctx.translate(canw / 2, canh / 2 - 25);\r\n        ctx.rotate(user.reconnect.rotate);\r\n        ctxDrawImage(ctx, img, -img.width / 2, -img.height / 2);\r\n        ctx.restore();\r\n        var img = sprite[SPRITE.RECONNECT];\r\n        ctxDrawImage(ctx, img, (canw - img.width) / 2, (canh - img.height) / 2 + 25);\r\n    }\r\n}\r\n;\r\nfunction draw_minimap() {\r\n    if (user.inv.can_select.length > 0) var minimap = {x: game.minimap.translate.x, y: game.minimap.translate.y - 120 * scale}; else var minimap = {x: game.minimap.translate.x, y: game.minimap.translate.y - 50 * scale};\r\n    ctx.globalAlpha = 0.8;\r\n    var img = sprite[SPRITE.MINIMAP][world.time];\r\n    ctxDrawImage(ctx, img, minimap.x, minimap.y);\r\n    ctx.globalAlpha = 1;\r\n    if (game.minimap.marker.x > -1) {\r\n        ctx.fillStyle = \"#660000\";\r\n        circle(ctx, minimap.x + game.minimap.marker.x * scale, minimap.y + game.minimap.marker.y * scale, scale * 5);\r\n        ctx.fill();\r\n    }\r\n    var old_scale = scale;\r\n    var players = game.minimap.players;\r\n    for (var i = 0; i < players.length; i++) {\r\n        var p = players[i];\r\n        ctx.fillStyle = !world.time ? \"#ff0000\" : \"#ff0000\";\r\n        circle(ctx, minimap.x + 193 * (p.x / (world.nw * 100)) * scale, minimap.y + 193 * (p.y / (world.nh * 100)) * scale, scale * 2);\r\n        ctx.fill();\r\n    }\r\n    var u = world.fast_units[user.uid];\r\n    if (u) {\r\n        ctx.fillStyle = !world.time ? \"#e39716\" : \"#fff\";\r\n        circle(ctx, minimap.x + 193 * (u.x / (world.nw * 100)) * scale, minimap.y + 193 * (u.y / (world.nh * 100)) * scale, scale * 4);\r\n        ctx.fill();\r\n    }\r\n    scale = old_scale;\r\n}\r\n;\r\nvar __BANDAGE__ = [];\r\nfunction draw_status() {\r\n    var y = -8;\r\n    if (user.auto_feed.enabled) {\r\n        var img = sprite[SPRITE.AUTO_FEED];\r\n        ctxDrawImage(ctx, img, user.auto_feed.translate.x, user.auto_feed.translate.y + y);\r\n        y += 70;\r\n    }\r\n    if (user.blizzard === 1) {\r\n        var img = sprite[SPRITE.STOP_REGENERATION_BLIZZARD];\r\n        ctxDrawImage(ctx, img, user.auto_feed.translate.x, user.auto_feed.translate.y + y);\r\n        y += 70;\r\n    } else if (user.gauges.cold.x < 0.25 || user.gauges.hunger.x < 0.25 || user.gauges.thirst.x < 0.25 || user.gauges.oxygen.x < 0.25 || user.gauges.warm.x < 0.25) {\r\n        var img = sprite[SPRITE.STOP_REGENERATION];\r\n        ctxDrawImage(ctx, img, user.auto_feed.translate.x, user.auto_feed.translate.y + y);\r\n        y += 70;\r\n    }\r\n    if (user.bandage > 0) {\r\n        var img = sprite[SPRITE.BANDAGE_ACTIVATED];\r\n        ctxDrawImage(ctx, img, user.auto_feed.translate.x, user.auto_feed.translate.y + y);\r\n        var bandage = __BANDAGE__[user.bandage];\r\n        if (bandage === undefined) {\r\n            bandage = create_text(scale, user.bandage + \"\", 30, \"#FDFDFD\", null, null, null, null, null, \"#C8BBBF\", 6);\r\n            __BANDAGE__[user.bandage] = bandage;\r\n        }\r\n        if (user.bandage < 9) ctxDrawImage(ctx, bandage, user.auto_feed.translate.x - 39, user.auto_feed.translate.y + y + 20); else ctxDrawImage(ctx, bandage, user.auto_feed.translate.x - 46, user.auto_feed.translate.y + y + 20);\r\n    }\r\n}\r\n;\r\nfunction draw_leaderboard() {\r\n    var ldb = user.ldb;\r\n    var game_ldb = game.leaderboard;\r\n    if (ldb.update) {\r\n        ldb.update = false;\r\n        var ids = ldb.ids;\r\n        var w = game_ldb.can.width;\r\n        var h = game_ldb.can.height;\r\n        var ctx2 = game_ldb.ctx;\r\n        var players = world.players;\r\n        var in_ldb = false;\r\n        ctx2.clearRect(0, 0, w, h);\r\n        ctx2.drawImage(game_ldb.img, 0, 0);\r\n        for (var i = 0; i < ids.length; i++) {\r\n            var p = players[ids[i]];\r\n            if (world.mode === WORLD.MODE_HUNGER_GAMES && p.nickname === \"spectator\") continue;\r\n            if (world.mode === WORLD.MODE_ZOMBIES && p.skin === WORLD.ZOMBIE_SKIN) continue;\r\n            if (ids[i] == user.id) {\r\n                in_ldb = true;\r\n                if (world.mode === WORLD.MODE_VAMPIRES && p.skin === WORLD.VAMPIRE_SKIN) color = \"#FF0000\"; else color = \"#FFF\";\r\n            } else {\r\n                if (world.mode === WORLD.MODE_VAMPIRES && p.skin === WORLD.VAMPIRE_SKIN) color = \"#990000\"; else color = \"#A1BDCD\";\r\n            }\r\n            ctx2.drawImage(create_text(scale, \"\" + (i + 1), 15 * scale, color), 20 * scale, (40 + i * 22) * scale);\r\n            if (!p.ldb_label) p.ldb_label = create_text(scale, p.nickname, 15 * scale, color, undefined, undefined, undefined, undefined, 110 * scale);\r\n            ctx2.drawImage(p.ldb_label, 39 * scale, (40 + i * 22) * scale);\r\n            ctx2.drawImage(create_text(scale, Utils.simplify_number(p.score), 15 * scale, color), 156 * scale, (40 + i * 22) * scale);\r\n        }\r\n        if (!in_ldb) {\r\n            if (world.mode === WORLD.MODE_PVP || world.mode === WORLD.MODE_VAMPIRES || world.mode === WORLD.MODE_LEGACY || world.mode === WORLD.MODE_BR || world.mode === WORLD.MODE_EXPERIMENTAL || world.mode === WORLD.MODE_HUNGER_GAMES && !user.spectator || world.mode === WORLD.MODE_ZOMBIES && !user.zombie) {\r\n                ctx2.drawImage(sprite[SPRITE.YOUR_SCORE], 15 * scale, (46 + i * 22) * scale);\r\n                ctx2.drawImage(create_text(scale, Utils.simplify_number(world.players[user.id].score), 15 * scale, \"#FFF\"), 100 * scale, (46 + i * 22) * scale);\r\n            }\r\n        }\r\n    }\r\n    ctxDrawImage(ctx, game_ldb.can, game_ldb.translate.x, game_ldb.translate.y);\r\n}\r\n;\r\nfunction draw_totem_delay() {\r\n    var totem = user.totem;\r\n    if (totem.wait) {\r\n        var ret = totem.timeout.update();\r\n        ctx.save();\r\n        var img = sprite[SPRITE.DELAY_TEAM];\r\n        var gap = sprite[SPRITE.DELAY_WEAPON].height + 25 * scale;\r\n        ctx.translate(img.width, game.gauges.translate.y - 188 * scale - gap);\r\n        var x = -img.width / 2 - 2;\r\n        var y = -img.height / 2 - 4;\r\n        ctxDrawImage(ctx, img, x + 2, y);\r\n        ctx.beginPath();\r\n        ctx.lineWidth = 5 * scale;\r\n        ctx.strokeStyle = SPRITE.WEAPON_LOADING[world.time];\r\n        ctx.lineCap = \"round\";\r\n        ctx.arc(0, y + img.height / 2, 25 * scale, 0, Math.PI * 2 * totem.timeout.v);\r\n        ctx.stroke();\r\n        ctx.restore();\r\n        if (ret) {\r\n            totem.wait = false;\r\n            totem.timeout.v = 0;\r\n            totem.timeout.o = false;\r\n        }\r\n    }\r\n}\r\n;\r\nfunction draw_clock() {\r\n    var c = world.clock;\r\n    var img = sprite[SPRITE.CLOCK][world.time];\r\n    ctxDrawImage(ctx, img, c.translate.x, c.translate.y);\r\n    ctx.save();\r\n    ctx.translate(c.translate.x + img.width / 2, c.translate.y + img.height / 2);\r\n    world.clock.now = ((new Date).getTime() - c.init + c.hour) % WORLD.DAY;\r\n    var angle = Math.PI * 2 * world.clock.now / WORLD.DAY - Math.PI / 2;\r\n    ctx.rotate(angle);\r\n    ctxDrawImage(ctx, sprite[SPRITE.ARROW_CLOCK], -img.width / 2, -img.height / 2);\r\n    ctx.restore();\r\n}\r\n;\r\nfunction draw_build_delay() {\r\n    var build = user.build;\r\n    if (build.wait) {\r\n        var ret = build.timeout.update();\r\n        ctx.save();\r\n        var img = sprite[SPRITE.DELAY_WALL];\r\n        ctx.translate(img.width - 12 * scale, game.gauges.translate.y - 190 * scale);\r\n        var x = -img.width / 2 + 9;\r\n        var y = -img.height / 2 - 4;\r\n        ctxDrawImage(ctx, img, x, y);\r\n        ctx.beginPath();\r\n        ctx.lineWidth = 5 * scale;\r\n        ctx.strokeStyle = SPRITE.HELMET_LOADING[world.time];\r\n        ctx.lineCap = \"round\";\r\n        ctx.arc(9, y + img.height / 2, 25 * scale, 0, Math.PI * 2 * build.timeout.v);\r\n        ctx.stroke();\r\n        ctx.restore();\r\n        if (ret) {\r\n            build.wait = false;\r\n            build.timeout.v = 0;\r\n            build.timeout.o = false;\r\n        }\r\n    }\r\n}\r\n;\r\nfunction draw_helmet_switch_delay() {\r\n    var helmet = user.helmet;\r\n    if (helmet.wait) {\r\n        var ret = helmet.timeout.update();\r\n        ctx.save();\r\n        var img = sprite[SPRITE.DELAY_HELMET];\r\n        ctx.translate(img.width - 2 * scale, game.gauges.translate.y - 125 * scale);\r\n        var x = -img.width / 2 + 10;\r\n        var y = -img.height / 2 - 4;\r\n        ctxDrawImage(ctx, img, x, y);\r\n        ctx.beginPath();\r\n        ctx.lineWidth = 5 * scale;\r\n        ctx.strokeStyle = SPRITE.HELMET_LOADING[world.time];\r\n        ctx.lineCap = \"round\";\r\n        ctx.arc(9, y + img.height / 2, 25 * scale, 0, Math.PI * 2 * helmet.timeout.v);\r\n        ctx.stroke();\r\n        ctx.restore();\r\n        if (ret) {\r\n            helmet.wait = false;\r\n            helmet.timeout.v = 0;\r\n            helmet.timeout.o = false;\r\n        }\r\n    }\r\n}\r\n;\r\nfunction draw_weapon_switch_delay() {\r\n    var weapon = user.weapon;\r\n    if (weapon.wait) {\r\n        var ret = weapon.timeout.update();\r\n        ctx.save();\r\n        var img = sprite[SPRITE.DELAY_WEAPON];\r\n        ctx.translate(img.width - 2 * scale, game.gauges.translate.y - 60 * scale);\r\n        var x = -img.width / 2 - 2;\r\n        var y = -img.height / 2 - 4;\r\n        ctxDrawImage(ctx, img, x, y);\r\n        ctx.beginPath();\r\n        ctx.lineWidth = 5 * scale;\r\n        ctx.strokeStyle = SPRITE.WEAPON_LOADING[world.time];\r\n        ctx.lineCap = \"round\";\r\n        ctx.arc(0, y + img.height / 2, 25 * scale, 0, Math.PI * 2 * weapon.timeout.v);\r\n        ctx.stroke();\r\n        ctx.restore();\r\n        if (ret) {\r\n            weapon.wait = false;\r\n            weapon.timeout.v = 0;\r\n            weapon.timeout.o = false;\r\n        }\r\n    }\r\n}\r\n;\r\nfunction draw_ui_gear() {\r\n    var craft = user.craft;\r\n    if (craft.crafting) {\r\n        var u = world.fast_units[user.uid];\r\n        ctx.save();\r\n        ctx.translate(user.cam.x + u.x, user.cam.y + u.y);\r\n        var img = sprite[SPRITE.GEAR];\r\n        var x = -img.width / 2;\r\n        var y = -img.height / 2 - 125 * scale;\r\n        ctxDrawImage(ctx, img, x, y);\r\n        ctx.beginPath();\r\n        ctx.lineWidth = 5 * scale;\r\n        ctx.strokeStyle = SPRITE.CRAFT_LOADING[world.time];\r\n        ctx.lineCap = \"round\";\r\n        ctx.arc(0, y + img.height / 2, 25 * scale, 0, Math.PI * 2 * craft.timeout.v);\r\n        ctx.stroke();\r\n        ctx.restore();\r\n    }\r\n}\r\n;\r\nfunction draw_ui_crafting() {\r\n    var craft = user.craft;\r\n    if (!craft.crafting && craft.preview > 0) {\r\n        var u = world.fast_units[user.uid];\r\n        if (!u) return;\r\n        ctx.save();\r\n        if (INV_INFOS[craft.preview].grid === 0 && craft.mode === 0) {\r\n            ctx.translate(user.cam.x + u.x, user.cam.y + u.y);\r\n            ctx.rotate(u.angle);\r\n            ctx.translate(120, 0);\r\n        } else {\r\n            var x = Math.floor(u.x + Math.cos(u.angle) * 120);\r\n            var y = Math.floor(u.y + Math.sin(u.angle) * 120);\r\n            x = user.cam.x + (x - x % 100 + 50);\r\n            y = user.cam.y + (y - y % 100 + 50);\r\n            ctx.translate(x, y);\r\n        }\r\n        var img = sprite[craft.preview][world.time];\r\n        ctx.globalAlpha = 0.5;\r\n        ctxDrawImage(ctx, img, -img.width / 2, -img.height / 2);\r\n        ctx.globalAlpha = 1;\r\n        ctx.restore();\r\n        if (INV_INFOS[craft.preview].grid === 0) {\r\n            if (!craft.label[craft.mode]) {\r\n                if (craft.mode === 0) craft.label[0] = create_text(scale, LANG[TEXT.MODE_FREE], 20, \"#e2c340\"); else craft.label[1] = create_text(scale, LANG[TEXT.MODE_GRID], 20, \"#e2c340\");\r\n            }\r\n            var img = craft.label[craft.mode];\r\n            ctxDrawImage(ctx, img, canw2 + -img.width / 2, game.gauges.y - 26);\r\n        }\r\n    }\r\n    if (craft.crafting) {\r\n        var ret = craft.timeout.update();\r\n        for (var i = 0; i < craft.can_craft.length; i++) {\r\n            var button = craft.can_craft[i];\r\n            if (craft.id == button.id) {\r\n                var h = scale * 42;\r\n                var h2 = scale * 17;\r\n                round_rect(ctx, button.info.translate.x, button.info.translate.y + h * (1 - craft.timeout.v), button.info.width, h * craft.timeout.v + h2, scale * 10);\r\n                ctx.fillStyle = \"#55B973\";\r\n                ctx.fill();\r\n                ctx.globalAlpha = 0.8;\r\n                button.draw(ctx);\r\n            } else {\r\n                ctx.globalAlpha = 0.5;\r\n                button.draw(ctx);\r\n            }\r\n            ctx.globalAlpha = 1;\r\n        }\r\n        if (ret) {\r\n            craft.crafting = false;\r\n            craft.timeout.v = 0;\r\n            craft.timeout.o = false;\r\n        }\r\n        return true;\r\n    } else {\r\n        for (var i = 0; i < craft.can_craft.length; i++) craft.can_craft[i].draw(ctx);\r\n    }\r\n    return false;\r\n}\r\n;\r\nfunction draw_ui_chat() {\r\n    var players = world.units[ITEMS.PLAYERS];\r\n    if (world.mode === WORLD.MODE_PVP || world.mode === WORLD.MODE_EXPERIMENTAL || world.mode === WORLD.MODE_ZOMBIES || world.mode === WORLD.MODE_LEGACY || world.mode === WORLD.MODE_BR || world.mode === WORLD.MODE_VAMPIRES) {\r\n        for (var i = 0; i < players.length; i++) {\r\n            players[i].draw_text();\r\n        }\r\n    } else if (world.mode === WORLD.MODE_HUNGER_GAMES) {\r\n        for (var i = 0; i < players.length; i++) {\r\n            if (user.spectator || user.show_spectators.enabled) players[i].draw_text(); else if (players[i].player.nickname !== \"spectator\") players[i].draw_text();\r\n        }\r\n    }\r\n}\r\n;\r\nfunction draw_ui_inventory() {\r\n    var inv = user.inv;\r\n    var p = world.fast_units[user.uid];\r\n    for (var i = 0; i < inv.can_select.length; i++) {\r\n        var button = inv.can_select[i];\r\n        var push = false;\r\n        var p = world.fast_units[user.uid];\r\n        if (p && (p.right == button.id || p.clothe == button.id && p.clothe > 0)) {\r\n            push = true;\r\n            ctxDrawImage(ctx, button.info.img[2], button.info.translate.x, button.info.translate.y, button.info.width, button.info.height);\r\n        } else button.draw(ctx);\r\n        var n = user.inv.n[button.id];\r\n        if (n > 1) draw_amount(n, button);\r\n        if (n > 0) draw_slot_number(i, button, push);\r\n        var chest = user.chest;\r\n        if (chest.open && (chest.id < 0 || chest.id == button.id) && (!chest.lock || chest.pid == user.id)) game.plus_buttons[button.id].draw(ctx);\r\n        var furnace = user.furnace;\r\n        if (furnace.open && INV.WOOD == button.id) game.plus_buttons[button.id].draw(ctx);\r\n        var well = user.well;\r\n        if (well.open && INV.BUCKET_FULL == button.id) game.plus_buttons[button.id].draw(ctx);\r\n        var windmill = user.windmill;\r\n        if (windmill.open && INV.WILD_WHEAT == button.id) game.plus_buttons[button.id].draw(ctx);\r\n        var extractor = user.extractor;\r\n        if (extractor.open && INV.WOOD == button.id) game.plus_buttons[button.id].draw(ctx);\r\n        var bread_oven = user.bread_oven;\r\n        if (bread_oven.open && (INV.WOOD == button.id || INV.FLOUR == button.id)) game.plus_buttons[button.id].draw(ctx);\r\n    }\r\n    if (button && i < inv.max) {\r\n        var img = sprite[SPRITE.EMPTY_SLOT][2];\r\n        x = button.info.translate.x;\r\n        y = button.info.translate.y;\r\n        for (j = 1; i < inv.max; i++, j++) ctxDrawImage(ctx, img, x + j * (img.width + 5), y);\r\n    }\r\n}\r\n;\r\nfunction draw_gauges() {\r\n    ctx.save();\r\n    var old_scale = scale;\r\n    if (user.gauges.life.x < 0.25) ctx.globalAlpha = user.gauges.warn_life.v;\r\n    var y = user.inv.can_select.length > 0 ? -70 : 0;\r\n    if (user.chest.open || user.furnace.open && -1 != user.inv.find_item(INV.WOOD) || user.windmill.open && -1 != user.inv.find_item(INV.WILD_WHEAT) || user.extractor.open && -1 != user.inv.find_item(INV.WOOD) || user.well.open && -1 != user.inv.find_item(INV.BUCKET_FULL) || user.bread_oven.open && (-1 != user.inv.find_item(INV.WOOD) || -1 != user.inv.find_item(INV.FLOUR))) y -= 50 * scale;\r\n    ctx.translate((canw - 950 * scale) / 2, y);\r\n    ctx.fillStyle = \"#69A148\";\r\n    ctx.strokeStyle = \"black\";\r\n    ctx.font = \"24px Baloo Paaji\";\r\n    ctx.textAlign = \"start\";\r\n    ctx.lineWidth = 2.5;\r\n    ctx.fillRect(this.translate.x + 37 * scale, this.translate.y + 17 * scale, user.gauges.life.x * 178 * scale, 18 * scale);\r\n    ctx.fillText(JSON.stringify(Math.round(user.gauges.l*200)),this.translate.x + 37 * scale + 74, this.translate.y + 17 * scale - 12);\r\n    ctx.strokeText(JSON.stringify(Math.round(user.gauges.l*200)),this.translate.x + 37 * scale + 74, this.translate.y + 17 * scale - 12);\r\n    ctx.fillText((10-(Date.now()-healtime)/1000).toFixed(1)+\"s\",this.translate.x + 37 * scale + 180, this.translate.y + 17 * scale + 12);\r\n    ctx.strokeText((10-(Date.now()-healtime)/1000).toFixed(1)+\"s\",this.translate.x + 37 * scale + 180, this.translate.y + 17 * scale + 12);\r\n    ctx.globalAlpha = 1;\r\n    if (user.gauges.hunger.x < 0.35) {\r\n        ctx.fillStyle = \"#8F050A\";\r\n        ctx.globalAlpha = user.gauges.warn_hunger.v;\r\n        ctx.fillRect(this.translate.x + 277 * scale, this.translate.y + 17 * scale, 178 * scale, 18 * scale);\r\n        ctx.globalAlpha = 1;\r\n    }\r\n    ctx.fillStyle = \"#AF352A\";\r\n    ctx.fillRect(this.translate.x + 277 * scale, this.translate.y + 17 * scale, user.gauges.hunger.x * 178 * scale, 18 * scale);\r\n    ctx.fillText(JSON.stringify(Math.round(user.gauges.h*100)),this.translate.x + 277 * scale + 74, this.translate.y + 17 * scale - 12);\r\n    ctx.fillText(gaugesTimer.toFixed(1)+\"s\",this.translate.x + 277 * scale + 180, this.translate.y + 17 * scale + 12);\r\n    ctx.strokeText(gaugesTimer.toFixed(1)+\"s\",this.translate.x + 277 * scale + 180, this.translate.y + 17 * scale + 12);\r\n    ctx.strokeText(JSON.stringify(Math.round(user.gauges.h*100)),this.translate.x + 277 * scale + 74, this.translate.y + 17 * scale - 12);\r\n\r\n    if (user.gauges.cold.x < 0.35) {\r\n        ctx.fillStyle = \"#366B91\";\r\n        ctx.globalAlpha = user.gauges.warn_cold.v;\r\n        ctx.fillRect(this.translate.x + 517 * scale, this.translate.y + 17 * scale, 178 * scale, 18 * scale);\r\n        ctx.globalAlpha = 1;\r\n    }\r\n    ctx.fillStyle = \"#669BB1\";\r\n    ctx.fillRect(this.translate.x + 517 * scale, this.translate.y + 17 * scale, user.gauges.cold.x * 178 * scale, 18 * scale);\r\n    ctx.fillText(JSON.stringify(Math.round((1 - user.gauges.wa + user.gauges.c)*100)),this.translate.x + 517 * scale + 74, this.translate.y + 17 * scale +-12);\r\n    ctx.strokeText(JSON.stringify(Math.round((1 - user.gauges.wa + user.gauges.c)*100)),this.translate.x + 517 * scale + 74, this.translate.y + 17 * scale - 12);\r\n    if (user.gauges.cold.x > 0.99) {\r\n        if (user.gauges.warm.x < 0.35) {\r\n            ctx.fillStyle = \"#6C4036\";\r\n            ctx.globalAlpha = user.gauges.warn_warm.v;\r\n            ctx.fillRect(this.translate.x + 517 * scale, this.translate.y + 17 * scale, 178 * scale, 18 * scale);\r\n            ctx.globalAlpha = 1;\r\n        }\r\n        ctx.fillStyle = \"#9C4036\";\r\n        ctx.fillRect(this.translate.x + 517 * scale, this.translate.y + 17 * scale, (1 - user.gauges.warm.x) * 178 * scale, 18 * scale);\r\n    }\r\n    if (user.gauges.thirst.x < 0.35) {\r\n        ctx.fillStyle = \"#001A57\";\r\n        ctx.globalAlpha = user.gauges.warn_thirst.v;\r\n        ctx.fillRect(this.translate.x + 757 * scale, this.translate.y + 17 * scale, 178 * scale, 18 * scale);\r\n        ctx.globalAlpha = 1;\r\n    }\r\n    ctx.fillStyle = \"#074A87\";\r\n    ctx.fillRect(this.translate.x + 757 * scale, this.translate.y + 17 * scale, user.gauges.thirst.x * 178 * scale, 18 * scale);\r\n    ctx.fillText(JSON.stringify(Math.round(user.gauges.t*100)),this.translate.x + 757 * scale + 74, this.translate.y + 17 * scale - 12);\r\n    ctx.strokeText(JSON.stringify(Math.round(user.gauges.t*100)),this.translate.x + 757 * scale + 74, this.translate.y + 17 * scale - 12);\r\n    scale = old_scale;\r\n    ctxDrawImage(ctx, this.img, this.translate.x, this.translate.y);\r\n    this.y = this.translate.y + y;\r\n    ctx.restore();\r\n    if (user.gauges.oxygen.x < 0.99) {\r\n        var x = Math.floor(canw2 - sprite[SPRITE.OXYGEN].width / 2);\r\n        y += this.translate.y - sprite[SPRITE.OXYGEN].height - 5 * scale;\r\n        ctx.fillStyle = \"#BBE8EF\";\r\n        ctx.fillRect(x + 5, y + 5 * scale, 588 * scale * user.gauges.oxygen.x, 10 * scale);\r\n        if (user.gauges.oxygen.x < 0.35) {\r\n            ctx.fillStyle = \"#9BA8AF\";\r\n            ctx.globalAlpha = user.gauges.warn_oxygen.v;\r\n            ctx.fillRect(x + 5, y + 5, 588 * scale, 10 * scale);\r\n            ctx.globalAlpha = 1;\r\n        }\r\n        ctxDrawImage(ctx, sprite[SPRITE.OXYGEN], x, y);\r\n        this.y = y;\r\n    }\r\n}\r\n;\r\nfunction draw_door(id) {\r\n    ctx.save();\r\n    ctx.translate(user.cam.x + this.x, user.cam.y + this.y);\r\n    ctx.rotate(this.angle);\r\n    if (this.hit.update) {\r\n        if (this.hit.anim.update() && this.hit.anim.o == false) this.hit.update = false;\r\n        var v = (1 - this.hit.anim.v) * delta * 600 * scale;\r\n        var x = Math.cos(this.hit.angle - this.angle) * v;\r\n        var y = Math.sin(this.hit.angle - this.angle) * v;\r\n    } else {\r\n        var x = 0;\r\n        var y = 0;\r\n    }\r\n    ;\r\n    var img = sprite[id][world.time];\r\n    w = -img.width;\r\n    h = -img.height;\r\n    ctxDrawImage(ctx, img, -w / 2 + x, -h / 2 + y, w, h);\r\n    ctx.restore();\r\n}\r\n;\r\nfunction draw_chest() {\r\n    ctx.save();\r\n    ctx.translate(user.cam.x + this.x, user.cam.y + this.y);\r\n    ctx.rotate(this.angle);\r\n    if (this.hit.update) {\r\n        if (this.hit.anim.update() && this.hit.anim.o == false) this.hit.update = false;\r\n        var v = (1 - this.hit.anim.v) * delta * 600 * scale;\r\n        var x = Math.cos(this.hit.angle - this.angle) * v;\r\n        var y = Math.sin(this.hit.angle - this.angle) * v;\r\n    } else {\r\n        var x = 0;\r\n        var y = 0;\r\n    }\r\n    ;\r\n    img = sprite[SPRITE.CHEST][world.time];\r\n    w = -img.width;\r\n    h = -img.height;\r\n    ctxDrawImage(ctx, img, -w / 2 + x, -h / 2 + y, w, h);\r\n    if (this.lock) {\r\n        img = sprite[SPRITE.LOCK][world.time];\r\n        w = -img.width;\r\n        h = -img.height;\r\n        ctxDrawImage(ctx, img, -w / 2 + x - 1 * scale, -h / 2 + y, w, h);\r\n    }\r\n    ctx.restore();\r\n}\r\n;\r\nfunction draw_thornbush_seed() {\r\n    ctx.save();\r\n    ctx.translate(user.cam.x + this.x, user.cam.y + this.y);\r\n    ctx.rotate(this.angle);\r\n    img = sprite[SPRITE.THORNBUSH_SEED_MOB][world.time];\r\n    w = -img.width;\r\n    h = -img.height;\r\n    ctxDrawImage(ctx, img, -w / 2, -h / 2, w, h);\r\n    ctx.restore();\r\n}\r\n;\r\nfunction draw_garlic_seed() {\r\n    ctx.save();\r\n    ctx.translate(user.cam.x + this.x, user.cam.y + this.y);\r\n    ctx.rotate(this.angle);\r\n    img = sprite[SPRITE.GARLIC_SEED_MOB][world.time];\r\n    w = -img.width;\r\n    h = -img.height;\r\n    ctxDrawImage(ctx, img, -w / 2, -h / 2, w, h);\r\n    ctx.restore();\r\n}\r\n;\r\nfunction draw_pumpkin_seed() {\r\n    ctx.save();\r\n    ctx.translate(user.cam.x + this.x, user.cam.y + this.y);\r\n    ctx.rotate(this.angle);\r\n    img = sprite[SPRITE.PUMPKIN_SEED_MOB][world.time];\r\n    w = -img.width;\r\n    h = -img.height;\r\n    ctxDrawImage(ctx, img, -w / 2, -h / 2, w, h);\r\n    ctx.restore();\r\n}\r\n;\r\nfunction draw_aloe_vera_mob() {\r\n    ctx.save();\r\n    ctx.translate(user.cam.x + this.x, user.cam.y + this.y);\r\n    ctx.rotate(this.angle);\r\n    img = sprite[SPRITE.ALOE_VERA][world.time];\r\n    w = -img.width;\r\n    h = -img.height;\r\n    ctxDrawImage(ctx, img, -w / 2, -h / 2, w, h);\r\n    ctx.restore();\r\n}\r\n;\r\nfunction draw_wheat_seed() {\r\n    ctx.save();\r\n    ctx.translate(user.cam.x + this.x, user.cam.y + this.y);\r\n    ctx.rotate(this.angle);\r\n    img = sprite[SPRITE.WHEAT_MOB][world.time];\r\n    w = -img.width;\r\n    h = -img.height;\r\n    ctxDrawImage(ctx, img, -w / 2, -h / 2, w, h);\r\n    ctx.restore();\r\n}\r\n;\r\nfunction draw_life_small(life) {\r\n    var life = life / 100;\r\n    if (life > 0.8) return;\r\n    ctx.save();\r\n    ctx.translate(user.cam.x + this.x, user.cam.y + this.y);\r\n    ctx.rotate(this.angle);\r\n    if (this.hit.update) {\r\n        if (this.hit.anim.update() && this.hit.anim.o == false) this.hit.update = false;\r\n        var v = (1 - this.hit.anim.v) * delta * 600 * scale;\r\n        var x = Math.cos(this.hit.angle - this.angle) * v;\r\n        var y = Math.sin(this.hit.angle - this.angle) * v;\r\n    } else {\r\n        var x = 0;\r\n        var y = 0;\r\n    }\r\n    ;\r\n    ctx.globalAlpha = 0.5;\r\n    circle_angle(ctx, x, y, 18 * scale, life);\r\n    fill_path(ctx, null, \"#000000\", 18 * scale);\r\n    ctx.globalAlpha = 1;\r\n    circle_angle(ctx, x, y, 18 * scale, life);\r\n    fill_path(ctx, null, SPRITE.BROWN_LIFE[world.time], 6 * scale);\r\n    ctx.restore();\r\n}\r\n;\r\nfunction draw_life(life) {\r\n    var life = life / 100;\r\n    if (life > 0.95) return;\r\n    ctx.save();\r\n    ctx.translate(user.cam.x + this.x, user.cam.y + this.y);\r\n    ctx.rotate(this.angle);\r\n    if (this.hit.update) {\r\n        if (this.hit.anim.update() && this.hit.anim.o == false) this.hit.update = false;\r\n        var v = (1 - this.hit.anim.v) * delta * 600 * scale;\r\n        var x = Math.cos(this.hit.angle - this.angle) * v;\r\n        var y = Math.sin(this.hit.angle - this.angle) * v;\r\n    } else {\r\n        var x = 0;\r\n        var y = 0;\r\n    }\r\n    ;\r\n    ctx.globalAlpha = 0.5;\r\n    circle_angle(ctx, x, y, 28 * scale, life);\r\n    fill_path(ctx, null, \"#000000\", 18 * scale);\r\n    ctx.globalAlpha = 1;\r\n    circle_angle(ctx, x, y, 28 * scale, life);\r\n    fill_path(ctx, null, SPRITE.CRAFT_LOADING[world.time], 6 * scale);\r\n    ctx.restore();\r\n}\r\n;\r\nfunction draw_roof(id) {\r\n    ctx.save();\r\n    ctx.translate(user.cam.x + this.x, user.cam.y + this.y);\r\n    ctx.rotate(this.angle);\r\n    if (this.hit.update) {\r\n        if (this.hit.anim.update() && this.hit.anim.o == false) this.hit.update = false;\r\n        var v = (1 - this.hit.anim.v) * delta * 600 * scale;\r\n        var x = Math.cos(this.hit.angle - this.angle) * v;\r\n        var y = Math.sin(this.hit.angle - this.angle) * v;\r\n    } else {\r\n        var x = 0;\r\n        var y = 0;\r\n    }\r\n    ;\r\n    var len = sprite[SPRITE.ROOFS].length;\r\n    img = sprite[SPRITE.ROOFS][(this.j + this.i % 2) % len][world.time];\r\n    w = -img.width;\r\n    h = -img.height;\r\n    var p = world.fast_units[user.uid];\r\n    if (p && (user.id === this.pid || user.in_team(this.pid))) {\r\n        if (Utils.dist(this, p) < 550) this.opacity = Math.max(this.opacity - delta, 0.3); else this.opacity = Math.min(this.opacity + delta, 1);\r\n    } else if (p && Utils.dist(this, world.fast_units[user.uid]) < 150) this.opacity = Math.max(this.opacity - delta, 0.3); else this.opacity = Math.min(this.opacity + delta, 1);\r\n    var old = ctx.globalAlpha;\r\n    ctx.globalAlpha *= this.opacity;\r\n    ctxDrawImage(ctx, img, -w / 2 + x, -h / 2 + y, w, h);\r\n    ctx.globalAlpha = old;\r\n    ctx.restore();\r\n}\r\n;\r\nfunction draw_garland(id) {\r\n    ctx.save();\r\n    ctx.translate(user.cam.x + this.x, user.cam.y + this.y);\r\n    ctx.rotate(this.angle);\r\n    if (this.hit.update) {\r\n        if (this.hit.anim.update() && this.hit.anim.o == false) this.hit.update = false;\r\n        var v = (1 - this.hit.anim.v) * delta * 600 * scale;\r\n        var x = Math.cos(this.hit.angle - this.angle) * v;\r\n        var y = Math.sin(this.hit.angle - this.angle) * v;\r\n    } else {\r\n        var x = 0;\r\n        var y = 0;\r\n    }\r\n    ;\r\n    if (this.halo.update()) this.color += 0.2 + Math.random() * 0.3;\r\n    img = sprite[SPRITE.GARLANDS][Math.floor(this.id + this.color) % 5][world.time];\r\n    w = -img.width * this.halo.v;\r\n    h = -img.height * this.halo.v;\r\n    ctxDrawImage(ctx, img, -w / 2 + x, -h / 2 + y, w, h);\r\n    ctx.restore();\r\n}\r\n;\r\nfunction draw_bed(id) {\r\n    ctx.save();\r\n    ctx.translate(user.cam.x + this.x, user.cam.y + this.y);\r\n    ctx.rotate(this.angle);\r\n    if (this.hit.update) {\r\n        if (this.hit.anim.update() && this.hit.anim.o == false) this.hit.update = false;\r\n        var v = (1 - this.hit.anim.v) * delta * 600 * scale;\r\n        var x = Math.cos(this.hit.angle - this.angle) * v;\r\n        var y = Math.sin(this.hit.angle - this.angle) * v;\r\n    } else {\r\n        var x = 0;\r\n        var y = 0;\r\n    }\r\n    ;\r\n    if (id === SPRITE.BED_TOP && !world.transition) {\r\n        var opacity = 0;\r\n        var players = world.units[ITEMS.PLAYERS];\r\n        for (var i = 0; i < players.length; i++) {\r\n            var dist = Utils.dist(players[i], this);\r\n            if (dist < 140 && dist > 35) {\r\n                opacity = 0;\r\n                break;\r\n            } else if (dist <= 35) opacity = 1;\r\n        }\r\n        if (opacity === 0) this.opacity = Math.max(0.5, this.opacity - delta / 1.5); else this.opacity = Math.min(1, this.opacity + delta / 1.5);\r\n        ctx.globalAlpha = this.opacity;\r\n    }\r\n    img = sprite[id][world.time];\r\n    w = -img.width;\r\n    h = -img.height;\r\n    ctxDrawImage(ctx, img, -w / 2 + x, -h / 2 + y, w, h);\r\n    ctx.globalAlpha = 1;\r\n    ctx.restore();\r\n}\r\n;\r\nfunction draw_simple_item(id) {\r\n    ctx.save();\r\n    ctx.translate(user.cam.x + this.x, user.cam.y + this.y);\r\n    ctx.rotate(this.angle);\r\n    if (this.hit.update) {\r\n        if (this.hit.anim.update() && this.hit.anim.o == false) this.hit.update = false;\r\n        var v = (1 - this.hit.anim.v) * delta * 600 * scale;\r\n        var x = Math.cos(this.hit.angle - this.angle) * v;\r\n        var y = Math.sin(this.hit.angle - this.angle) * v;\r\n    } else {\r\n        var x = 0;\r\n        var y = 0;\r\n    }\r\n    ;\r\n    img = sprite[id][world.time];\r\n    w = -img.width;\r\n    h = -img.height;\r\n    ctxDrawImage(ctx, img, -w / 2 + x, -h / 2 + y, w, h);\r\n    ctx.restore();\r\n}\r\n;\r\nvar __wave = 0;\r\nfunction draw_river_tile(is, ie, js, je, id, t, max, min, rand) {\r\n    if (min === undefined) min = 0;\r\n    for (var i = is; i <= ie; i++) {\r\n        for (var j = js; j <= je; j++) {\r\n            var tile = MAP.tiles[i][j];\r\n            if (tile === undefined || tile[t] === undefined) continue;\r\n            var object = tile[t];\r\n            var img = sprite[id][world.time][object.river];\r\n            ctxDrawImage(ctx, img, user.cam.x + object.x - img.width / (4 * _scale_object), user.cam.y + object.y - img.height / (4 * _scale_object), img.width / (2 * _scale_object), img.height / (2 * _scale_object));\r\n            if (ui.quality) {\r\n                var m = 2147483648;\r\n                var a = 1103515245;\r\n                var c = 12345;\r\n                var _id = (a * (i * 1e3 + j) + c) % m / m;\r\n                if (_id < 0.2) {\r\n                    _id = Math.floor(sprite[SPRITE.RIVER_DECO][world.time][object.river].length * (_id * 5));\r\n                    var img = sprite[SPRITE.RIVER_DECO][world.time][object.river][_id];\r\n                    ctxDrawImage(ctx, img, user.cam.x + object.x - img.width / (4 * _scale_object), user.cam.y + object.y - img.height / (4 * _scale_object), img.width / (2 * _scale_object), img.height / (2 * _scale_object));\r\n                } else if (object.current !== 0) {\r\n                    var img = sprite[SPRITE.RIVER_WAVE][world.time];\r\n                    var _wave = (__wave + i % 2 * 30) % 60;\r\n                    ctx.globalAlpha = _wave < 30 ? _wave / 30 : 1 - (_wave - 30) / 30;\r\n                    ctxDrawImage(ctx, img, user.cam.x + object.x - img.width / (4 * _scale_object), user.cam.y + object.y - img.height / (4 * _scale_object) - 30 + _wave, img.width / (2 * _scale_object), img.height / (2 * _scale_object));\r\n                    ctx.globalAlpha = 1;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n;\r\n;\r\nfunction draw_sand_worm_ground() {\r\n    if ((this.info & 1) === 1) this.dig = Math.min(this.dig + delta, 2.2); else {\r\n        this.dig = Math.max(this.dig - delta, 0);\r\n        this.groundTimer += delta;\r\n        if (this.groundTimer > 0.1) {\r\n            this.groundTimer = 0;\r\n            var ground = {x: this.x + Math.random() * 60 - 30, y: this.y + Math.random() * 60 - 30, a: 0, r: Math.random() * 30 + 30};\r\n            this.ground.push(ground);\r\n        }\r\n    }\r\n    for (var i = 0; i < this.ground.length; i++) {\r\n        var ground = this.ground[i];\r\n        ctx.save();\r\n        ctx.translate(user.cam.x + ground.x, user.cam.y + ground.y);\r\n        ground.a = Math.min(1, ground.a + delta / 2);\r\n        var _alpha = ground.a;\r\n        if (_alpha < 0.2) _alpha *= 5; else if (_alpha > 0.8) _alpha = (1 - _alpha) * 5; else _alpha = 1;\r\n        ctx.globalAlpha = _alpha * 0.8;\r\n        circle(ctx, 0, 0, ground.r);\r\n        fill_path(ctx, SPRITE.SAND_WORM_GROUND[world.time]);\r\n        ctx.restore();\r\n        if (ground.a === 1) {\r\n            this.ground.splice(i, 1);\r\n            i--;\r\n        }\r\n    }\r\n    ;\r\n}\r\n;\r\n;\r\nfunction draw_sand_worm() {\r\n    var img = undefined;\r\n    var imgHurt = undefined;\r\n    ctx.save();\r\n    ctx.translate(user.cam.x + this.x, user.cam.y + this.y);\r\n    ctx.rotate(this.angle);\r\n    this.breath.update();\r\n    this.rotate.update();\r\n    if (this.dig >= 0.1 && this.dig <= 1.1) {\r\n        var _alpha = Math.max(0, Math.min(1, this.dig - 0.1));\r\n        if (_alpha < 0.2) _alpha *= 5; else if (_alpha > 0.8) _alpha = (1 - _alpha) * 5; else _alpha = 1;\r\n        var img = sprite[SPRITE.SAND_WORM1][world.time];\r\n        w = -img.width * this.breath.v;\r\n        h = -img.height * this.breath.v;\r\n        ctx.globalAlpha = _alpha;\r\n        ctxDrawImage(ctx, img, -w / 4, -h / 4, w / 2, h / 2);\r\n        var imgHurt = sprite[SPRITE.HURT_SAND_WORM1];\r\n    }\r\n    if (this.dig >= 0.9) {\r\n        var _alpha = Math.max(0, Math.min(1, this.dig - 0.9));\r\n        if (_alpha < 0.2) _alpha *= 5; else _alpha = 1;\r\n        var img = sprite[SPRITE.SAND_WORM2][world.time];\r\n        w = -img.width * this.breath.v;\r\n        h = -img.height * this.breath.v;\r\n        ctx.globalAlpha = _alpha;\r\n        ctxDrawImage(ctx, img, -w / 4, -h / 4, w / 2, h / 2);\r\n        var imgHurt = sprite[SPRITE.HURT_SAND_WORM2];\r\n    }\r\n    if (this.action & STATE.HURT && imgHurt !== undefined) {\r\n        if (this.hit.update() && this.hit.o == false) this.action -= STATE.HURT;\r\n        ctx.globalAlpha = (0.6 - this.hit.v) * _alpha;\r\n        w = -imgHurt.width * this.breath.v;\r\n        h = -imgHurt.height * this.breath.v;\r\n        ctxDrawImage(ctx, imgHurt, -w / 4, -h / 4, w / 2, h / 2);\r\n    }\r\n    ctx.globalAlpha = 1;\r\n    ctx.restore();\r\n}\r\n;\r\n;\r\nfunction draw_vulture() {\r\n    ctx.save();\r\n    ctx.translate(user.cam.x + this.x, user.cam.y + this.y);\r\n    ctx.rotate(this.angle);\r\n    var dist = Utils.dist(this, this.r);\r\n    if (dist > 350) this.scale = Math.min(this.scale + delta / 2, 1.8); else this.scale = Math.max(this.scale - delta, 1);\r\n    this.breath.update();\r\n    this.rotate.update();\r\n    if (dist < 350) this._alpha = Math.max(0, this._alpha - delta * 2.2); else this._alpha = Math.min(1, this._alpha + delta * 2.2);\r\n    img = sprite[SPRITE.VULTURE_GROUND_ATTACK][world.time];\r\n    w = -img.width * this.breath.v * this.scale;\r\n    h = -img.height * this.breath.v * this.scale;\r\n    ctx.globalAlpha = 1 - this._alpha;\r\n    ctxDrawImage(ctx, img, -w / 4, -h / 4, w / 2, h / 2);\r\n    img = sprite[SPRITE.VULTURE_ATTACK][world.time];\r\n    w = -img.width * this.breath.v * this.scale;\r\n    h = -img.height * this.breath.v * this.scale;\r\n    ctx.globalAlpha = this._alpha;\r\n    ctxDrawImage(ctx, img, -w / 4, -h / 4, w / 2, h / 2);\r\n    if (this.action & STATE.HURT) {\r\n        if (this.hit.update() && this.hit.o == false) this.action -= STATE.HURT;\r\n        ctx.globalAlpha = (0.6 - this.hit.v) * (1 - this._alpha);\r\n        var img = sprite[SPRITE.HURT_VULTURE_GROUND];\r\n        w = -img.width * this.breath.v * this.scale;\r\n        h = -img.height * this.breath.v * this.scale;\r\n        ctxDrawImage(ctx, img, -w / 4, -h / 4, w / 2, h / 2);\r\n        ctx.globalAlpha = (0.6 - this.hit.v) * this._alpha;\r\n        var img = sprite[SPRITE.HURT_VULTURE];\r\n        w = -img.width * this.breath.v * this.scale;\r\n        h = -img.height * this.breath.v * this.scale;\r\n        ctxDrawImage(ctx, img, -w / 4, -h / 4, w / 2, h / 2);\r\n        ctx.globalAlpha = 1;\r\n    }\r\n    img = sprite[SPRITE.VULTURE_WING_LEFT_ATTACK][world.time];\r\n    w = -img.width * this.breath.v * this.scale;\r\n    h = -img.height * this.breath.v * this.scale;\r\n    ctx.save();\r\n    ctx.translate(-40 * scale, 80 * scale);\r\n    ctx.rotate(this.rotate.v);\r\n    ctx.globalAlpha = this._alpha;\r\n    ctxDrawImage(ctx, img, -w * scale / 4, -h * scale / 4, w / 2, h / 2);\r\n    if (this.action & STATE.HURT) {\r\n        ctx.globalAlpha = (0.6 - this.hit.v) * this._alpha;\r\n        var img = sprite[SPRITE.HURT_VULTURE_WING_LEFT];\r\n        ctxDrawImage(ctx, img, -w * scale / 4, -h * scale / 4, w / 2, h / 2);\r\n        ctx.globalAlpha = 1;\r\n    }\r\n    ctx.restore();\r\n    img = sprite[SPRITE.VULTURE_WING_RIGHT_ATTACK][world.time];\r\n    ctx.save();\r\n    ctx.translate(40 * scale, 80 * scale);\r\n    ctx.rotate(-this.rotate.v);\r\n    ctx.globalAlpha = this._alpha;\r\n    ctxDrawImage(ctx, img, -w * scale / 4, -h * scale / 4, w / 2, h / 2);\r\n    if (this.action & STATE.HURT) {\r\n        ctx.globalAlpha = (0.6 - this.hit.v) * this._alpha;\r\n        var img = sprite[SPRITE.HURT_VULTURE_WING_RIGHT];\r\n        ctxDrawImage(ctx, img, -w * scale / 4, -h * scale / 4, w / 2, h / 2);\r\n        ctx.globalAlpha = 1;\r\n    }\r\n    ctx.globalAlpha = 1;\r\n    ctx.restore();\r\n    ctx.restore();\r\n}\r\n;\r\nfunction draw_hawk() {\r\n    ctx.save();\r\n    ctx.translate(user.cam.x + this.x, user.cam.y + this.y);\r\n    ctx.rotate(this.angle);\r\n    var dist = Utils.dist(this, this.r);\r\n    if (dist > 350) this.scale = Math.min(this.scale + delta / 2, 1.8); else this.scale = Math.max(this.scale - delta, 1);\r\n    this.breath.update();\r\n    this.rotate.update();\r\n    if (dist < 350) this._alpha = Math.max(0, this._alpha - delta * 2.2); else this._alpha = Math.min(1, this._alpha + delta * 2.2);\r\n    if ((this.info & 1) === 0) img = sprite[SPRITE.HAWK_GROUND][world.time]; else img = sprite[SPRITE.HAWK_GROUND_ATTACK][world.time];\r\n    w = -img.width * this.breath.v * this.scale;\r\n    h = -img.height * this.breath.v * this.scale;\r\n    ctx.globalAlpha = 1 - this._alpha;\r\n    ctxDrawImage(ctx, img, -w / 4, -h / 4, w / 2, h / 2);\r\n    if ((this.info & 1) === 0) img = sprite[SPRITE.HAWK][world.time]; else img = sprite[SPRITE.HAWK_ATTACK][world.time];\r\n    w = -img.width * this.breath.v * this.scale;\r\n    h = -img.height * this.breath.v * this.scale;\r\n    ctx.globalAlpha = this._alpha;\r\n    ctxDrawImage(ctx, img, -w / 4, -h / 4, w / 2, h / 2);\r\n    if (this.action & STATE.HURT) {\r\n        if (this.hit.update() && this.hit.o == false) this.action -= STATE.HURT;\r\n        ctx.globalAlpha = (0.6 - this.hit.v) * (1 - this._alpha);\r\n        var img = sprite[SPRITE.HURT_HAWK_GROUND];\r\n        w = -img.width * this.breath.v * this.scale;\r\n        h = -img.height * this.breath.v * this.scale;\r\n        ctxDrawImage(ctx, img, -w / 4, -h / 4, w / 2, h / 2);\r\n        ctx.globalAlpha = (0.6 - this.hit.v) * this._alpha;\r\n        var img = sprite[SPRITE.HURT_HAWK];\r\n        w = -img.width * this.breath.v * this.scale;\r\n        h = -img.height * this.breath.v * this.scale;\r\n        ctxDrawImage(ctx, img, -w / 4, -h / 4, w / 2, h / 2);\r\n        ctx.globalAlpha = 1;\r\n    }\r\n    if ((this.info & 1) === 0) img = sprite[SPRITE.HAWK_WING_LEFT][world.time]; else img = sprite[SPRITE.HAWK_WING_LEFT_ATTACK][world.time];\r\n    w = -img.width * this.breath.v * this.scale;\r\n    h = -img.height * this.breath.v * this.scale;\r\n    ctx.save();\r\n    ctx.translate(-20 * scale, 0 * scale);\r\n    ctx.rotate(this.rotate.v);\r\n    ctx.globalAlpha = this._alpha;\r\n    ctxDrawImage(ctx, img, -w * scale / 4, -h * scale / 4, w / 2, h / 2);\r\n    if (this.action & STATE.HURT) {\r\n        ctx.globalAlpha = (0.6 - this.hit.v) * this._alpha;\r\n        var img = sprite[SPRITE.HURT_HAWK_WING_LEFT];\r\n        ctxDrawImage(ctx, img, -w * scale / 4, -h * scale / 4, w / 2, h / 2);\r\n        ctx.globalAlpha = 1;\r\n    }\r\n    ctx.restore();\r\n    if ((this.info & 1) === 0) img = sprite[SPRITE.HAWK_WING_RIGHT][world.time]; else img = sprite[SPRITE.HAWK_WING_RIGHT_ATTACK][world.time];\r\n    ctx.save();\r\n    ctx.translate(20 * scale, 0 * scale);\r\n    ctx.rotate(-this.rotate.v);\r\n    ctx.globalAlpha = this._alpha;\r\n    ctxDrawImage(ctx, img, -w * scale / 4, -h * scale / 4, w / 2, h / 2);\r\n    if (this.action & STATE.HURT) {\r\n        ctx.globalAlpha = (0.6 - this.hit.v) * this._alpha;\r\n        var img = sprite[SPRITE.HURT_HAWK_WING_RIGHT];\r\n        ctxDrawImage(ctx, img, -w * scale / 4, -h * scale / 4, w / 2, h / 2);\r\n        ctx.globalAlpha = 1;\r\n    }\r\n    ctx.globalAlpha = 1;\r\n    ctx.restore();\r\n    ctx.restore();\r\n}\r\n;\r\nfunction draw_baby_lava() {\r\n    ctx.save();\r\n    ctx.translate(user.cam.x + this.x, user.cam.y + this.y);\r\n    ctx.rotate(this.angle);\r\n    if (Utils.dist(this, this.r) > 300) this.scale = Math.min(this.scale + delta / 2, 1.8); else this.scale = Math.max(this.scale - delta, 1);\r\n    this.breath.update();\r\n    this.rotate.update();\r\n    if (this.info === 0) img = sprite[SPRITE.BABY_LAVA][world.time]; else img = sprite[SPRITE.BABY_LAVA_ATTACK][world.time];\r\n    w = -img.width * this.breath.v * this.scale;\r\n    h = -img.height * this.breath.v * this.scale;\r\n    ctxDrawImage(ctx, img, -w / 4, -h / 4, w / 2, h / 2);\r\n    if (this.action & STATE.HURT) {\r\n        if (this.hit.update() && this.hit.o == false) this.action -= STATE.HURT;\r\n        ctx.globalAlpha = 0.6 - this.hit.v;\r\n        var img = sprite[SPRITE.HURT_BABY_LAVA];\r\n        ctxDrawImage(ctx, img, -w / 4, -h / 4, w / 2, h / 2);\r\n        ctx.globalAlpha = 1;\r\n    }\r\n    if (this.info === 0) img = sprite[SPRITE.BABY_LAVA_WING_LEFT][world.time]; else img = sprite[SPRITE.BABY_LAVA_WING_LEFT_ATTACK][world.time];\r\n    w = -img.width * this.breath.v * this.scale;\r\n    h = -img.height * this.breath.v * this.scale;\r\n    ctx.save();\r\n    ctx.translate(-40 * scale, 10 * scale);\r\n    ctx.rotate(this.rotate.v);\r\n    ctxDrawImage(ctx, img, -w * scale / 4, -h * scale / 4, w / 2, h / 2);\r\n    if (this.action & STATE.HURT) {\r\n        ctx.globalAlpha = 0.6 - this.hit.v;\r\n        var img = sprite[SPRITE.HURT_BABY_LAVA_WING_LEFT];\r\n        ctxDrawImage(ctx, img, -w * scale / 4, -h * scale / 4, w / 2, h / 2);\r\n        ctx.globalAlpha = 1;\r\n    }\r\n    ctx.restore();\r\n    if (this.info === 0) img = sprite[SPRITE.BABY_LAVA_WING_RIGHT][world.time]; else img = sprite[SPRITE.BABY_LAVA_WING_RIGHT_ATTACK][world.time];\r\n    ctx.save();\r\n    ctx.translate(40 * scale, 10 * scale);\r\n    ctx.rotate(-this.rotate.v);\r\n    ctxDrawImage(ctx, img, -w * scale / 4, -h * scale / 4, w / 2, h / 2);\r\n    if (this.action & STATE.HURT) {\r\n        ctx.globalAlpha = 0.6 - this.hit.v;\r\n        var img = sprite[SPRITE.HURT_BABY_LAVA_WING_RIGHT];\r\n        ctxDrawImage(ctx, img, -w * scale / 4, -h * scale / 4, w / 2, h / 2);\r\n        ctx.globalAlpha = 1;\r\n    }\r\n    ctx.restore();\r\n    ctx.restore();\r\n}\r\n;\r\nfunction draw_baby_dragon() {\r\n    ctx.save();\r\n    ctx.translate(user.cam.x + this.x, user.cam.y + this.y);\r\n    ctx.rotate(this.angle);\r\n    if (Utils.dist(this, this.r) > 300) this.scale = Math.min(this.scale + delta / 2, 1.8); else this.scale = Math.max(this.scale - delta, 1);\r\n    this.breath.update();\r\n    this.rotate.update();\r\n    if (this.info === 0) img = sprite[SPRITE.BABY_DRAGON][world.time]; else img = sprite[SPRITE.BABY_DRAGON_ATTACK][world.time];\r\n    w = -img.width * this.breath.v * this.scale;\r\n    h = -img.height * this.breath.v * this.scale;\r\n    ctxDrawImage(ctx, img, -w / 4, -h / 4, w / 2, h / 2);\r\n    if (this.action & STATE.HURT) {\r\n        if (this.hit.update() && this.hit.o == false) this.action -= STATE.HURT;\r\n        ctx.globalAlpha = 0.6 - this.hit.v;\r\n        var img = sprite[SPRITE.HURT_BABY_DRAGON];\r\n        ctxDrawImage(ctx, img, -w / 4, -h / 4, w / 2, h / 2);\r\n        ctx.globalAlpha = 1;\r\n    }\r\n    if (this.info === 0) img = sprite[SPRITE.BABY_DRAGON_WING_LEFT][world.time]; else img = sprite[SPRITE.BABY_DRAGON_WING_LEFT_ATTACK][world.time];\r\n    w = -img.width * this.breath.v * this.scale;\r\n    h = -img.height * this.breath.v * this.scale;\r\n    ctx.save();\r\n    ctx.translate(-40 * scale, 10 * scale);\r\n    ctx.rotate(this.rotate.v);\r\n    ctxDrawImage(ctx, img, -w * scale / 4, -h * scale / 4, w / 2, h / 2);\r\n    if (this.action & STATE.HURT) {\r\n        ctx.globalAlpha = 0.6 - this.hit.v;\r\n        var img = sprite[SPRITE.HURT_BABY_DRAGON_WING_LEFT];\r\n        ctxDrawImage(ctx, img, -w * scale / 4, -h * scale / 4, w / 2, h / 2);\r\n        ctx.globalAlpha = 1;\r\n    }\r\n    ctx.restore();\r\n    if (this.info === 0) img = sprite[SPRITE.BABY_DRAGON_WING_RIGHT][world.time]; else img = sprite[SPRITE.BABY_DRAGON_WING_RIGHT_ATTACK][world.time];\r\n    ctx.save();\r\n    ctx.translate(40 * scale, 10 * scale);\r\n    ctx.rotate(-this.rotate.v);\r\n    ctxDrawImage(ctx, img, -w * scale / 4, -h * scale / 4, w / 2, h / 2);\r\n    if (this.action & STATE.HURT) {\r\n        ctx.globalAlpha = 0.6 - this.hit.v;\r\n        var img = sprite[SPRITE.HURT_BABY_DRAGON_WING_RIGHT];\r\n        ctxDrawImage(ctx, img, -w * scale / 4, -h * scale / 4, w / 2, h / 2);\r\n        ctx.globalAlpha = 1;\r\n    }\r\n    ctx.restore();\r\n    ctx.restore();\r\n}\r\n;\r\nfunction draw_lava_dragon() {\r\n    ctx.save();\r\n    ctx.translate(user.cam.x + this.x, user.cam.y + this.y);\r\n    ctx.rotate(this.angle);\r\n    if (Utils.dist(this, this.r) > 300) this.scale = Math.min(this.scale + delta / 2, 1.8); else this.scale = Math.max(this.scale - delta, 1);\r\n    this.breath.update();\r\n    this.rotate.update();\r\n    img = sprite[SPRITE.LAVA_DRAGON][world.time];\r\n    w = -img.width * this.breath.v * this.scale;\r\n    h = -img.height * this.breath.v * this.scale;\r\n    ctxDrawImage(ctx, img, -w / 4, -h / 4, w / 2, h / 2);\r\n    if (this.action & STATE.HURT) {\r\n        if (this.hit.update() && this.hit.o == false) this.action -= STATE.HURT;\r\n        ctx.globalAlpha = 0.6 - this.hit.v;\r\n        var img = sprite[SPRITE.HURT_LAVA_DRAGON];\r\n        ctxDrawImage(ctx, img, -w / 4, -h / 4, w / 2, h / 2);\r\n        ctx.globalAlpha = 1;\r\n    }\r\n    img = sprite[SPRITE.LAVA_WING_LEFT][world.time];\r\n    w = -img.width * this.breath.v * this.scale;\r\n    h = -img.height * this.breath.v * this.scale;\r\n    ctx.save();\r\n    ctx.translate(-60 * scale, 20 * scale);\r\n    ctx.rotate(this.rotate.v);\r\n    ctxDrawImage(ctx, img, -w * scale / 4, -h * scale / 4, w / 2, h / 2);\r\n    if (this.action & STATE.HURT) {\r\n        ctx.globalAlpha = 0.6 - this.hit.v;\r\n        var img = sprite[SPRITE.HURT_LAVA_WING_LEFT];\r\n        ctxDrawImage(ctx, img, -w * scale / 4, -h * scale / 4, w / 2, h / 2);\r\n        ctx.globalAlpha = 1;\r\n    }\r\n    ctx.restore();\r\n    img = sprite[SPRITE.LAVA_WING_RIGHT][world.time];\r\n    ctx.save();\r\n    ctx.translate(60 * scale, 20 * scale);\r\n    ctx.rotate(-this.rotate.v);\r\n    ctxDrawImage(ctx, img, -w * scale / 4, -h * scale / 4, w / 2, h / 2);\r\n    if (this.action & STATE.HURT) {\r\n        ctx.globalAlpha = 0.6 - this.hit.v;\r\n        var img = sprite[SPRITE.HURT_LAVA_WING_RIGHT];\r\n        ctxDrawImage(ctx, img, -w * scale / 4, -h * scale / 4, w / 2, h / 2);\r\n        ctx.globalAlpha = 1;\r\n    }\r\n    ctx.restore();\r\n    ctx.restore();\r\n}\r\n;\r\nfunction draw_dragon() {\r\n    ctx.save();\r\n    ctx.translate(user.cam.x + this.x, user.cam.y + this.y);\r\n    ctx.rotate(this.angle);\r\n    if (Utils.dist(this, this.r) > 300) this.scale = Math.min(this.scale + delta / 2, 1.8); else this.scale = Math.max(this.scale - delta, 1);\r\n    this.breath.update();\r\n    this.rotate.update();\r\n    img = sprite[SPRITE.DRAGON][world.time];\r\n    w = -img.width * this.breath.v * this.scale;\r\n    h = -img.height * this.breath.v * this.scale;\r\n    ctxDrawImage(ctx, img, -w / 2, -h / 2, w, h);\r\n    if (this.action & STATE.HURT) {\r\n        if (this.hit.update() && this.hit.o == false) this.action -= STATE.HURT;\r\n        ctx.globalAlpha = 0.6 - this.hit.v;\r\n        var img = sprite[SPRITE.HURT_DRAGON];\r\n        ctxDrawImage(ctx, img, -w / 2, -h / 2, w, h);\r\n        ctx.globalAlpha = 1;\r\n    }\r\n    img = sprite[SPRITE.WING_LEFT][world.time];\r\n    w = -img.width * this.breath.v * this.scale;\r\n    h = -img.height * this.breath.v * this.scale;\r\n    ctx.save();\r\n    ctx.translate(-30 * scale, 70 * scale);\r\n    ctx.rotate(this.rotate.v);\r\n    ctxDrawImage(ctx, img, -10 * scale, -40 * scale, w, h);\r\n    if (this.action & STATE.HURT) {\r\n        ctx.globalAlpha = 0.6 - this.hit.v;\r\n        var img = sprite[SPRITE.HURT_WING_LEFT];\r\n        ctxDrawImage(ctx, img, -10 * scale, -40 * scale, w, h);\r\n        ctx.globalAlpha = 1;\r\n    }\r\n    ctx.restore();\r\n    img = sprite[SPRITE.WING_RIGHT][world.time];\r\n    ctx.save();\r\n    ctx.translate(30 * scale, 70 * scale);\r\n    ctx.rotate(-this.rotate.v);\r\n    ctxDrawImage(ctx, img, 10 * scale - w, -40 * scale, w, h);\r\n    if (this.action & STATE.HURT) {\r\n        ctx.globalAlpha = 0.6 - this.hit.v;\r\n        var img = sprite[SPRITE.HURT_WING_RIGHT];\r\n        ctxDrawImage(ctx, img, 10 * scale - w, -40 * scale, w, h);\r\n        ctx.globalAlpha = 1;\r\n    }\r\n    ctx.restore();\r\n    ctx.restore();\r\n}\r\n;\r\nfunction draw_crate(id, _hurt) {\r\n    ctx.save();\r\n    ctx.translate(user.cam.x + this.x, user.cam.y + this.y);\r\n    ctx.rotate(this.angle);\r\n    if (id === SPRITE.GIFT) {\r\n        id = SPRITE.CRATE;\r\n        this.info = 36;\r\n    }\r\n    img = sprite[id][this.info][world.time];\r\n    w = -img.width / 2;\r\n    h = -img.height / 2;\r\n    ctxDrawImage(ctx, img, -w / 2, -h / 2, w, h);\r\n    if (this.action & STATE.HURT) {\r\n        if (this.hit.update() && this.hit.o == false) this.action -= STATE.HURT;\r\n        ctx.globalAlpha = 0.6 - this.hit.v;\r\n        var hurt = get_image_effect(this.info, img, __EFFECT_BOX__);\r\n        ctxDrawImage(ctx, hurt, -w / 2, -h / 2, w, h);\r\n        ctx.globalAlpha = 1;\r\n    }\r\n    ctx.restore();\r\n}\r\n;\r\nfunction draw_simple_mobs_2(id, hurt) {\r\n    ctx.save();\r\n    ctx.translate(user.cam.x + this.x, user.cam.y + this.y);\r\n    ctx.rotate(this.angle);\r\n    img = sprite[id][world.time];\r\n    w = -img.width;\r\n    h = -img.height;\r\n    ctxDrawImage(ctx, img, -w / 2, -h / 2, w, h);\r\n    if (this.action & STATE.HURT) {\r\n        if (this.hit.update() && this.hit.o == false) this.action -= STATE.HURT;\r\n        ctx.globalAlpha = 0.6 - this.hit.v;\r\n        var img = sprite[hurt];\r\n        ctxDrawImage(ctx, img, -w / 2, -h / 2, w, h);\r\n        ctx.globalAlpha = 1;\r\n    }\r\n    ctx.restore();\r\n}\r\n;\r\nfunction draw_baby_mammoth() {\r\n    this.breath.update();\r\n    ctx.save();\r\n    ctx.translate(user.cam.x + this.x, user.cam.y + this.y);\r\n    ctx.rotate(this.angle);\r\n    if (this.info === 0) img = sprite[SPRITE.BABY_MAMMOTH][world.time]; else img = sprite[SPRITE.BABY_MAMMOTH_ATTACK][world.time];\r\n    w = -img.width * this.breath.v;\r\n    h = -img.height * this.breath.v;\r\n    ctxDrawImage(ctx, img, -w / 2, -h / 2, w, h);\r\n    if (this.action & STATE.HURT) {\r\n        if (this.hit.update() && this.hit.o == false) this.action -= STATE.HURT;\r\n        ctx.globalAlpha = 0.6 - this.hit.v;\r\n        var img = sprite[SPRITE.HURT_BABY_MAMMOTH];\r\n        ctxDrawImage(ctx, img, -w / 2, -h / 2, w, h);\r\n        ctx.globalAlpha = 1;\r\n    }\r\n    ctx.restore();\r\n}\r\n;\r\nfunction draw_boar() {\r\n    this.breath.update();\r\n    ctx.save();\r\n    ctx.translate(user.cam.x + this.x, user.cam.y + this.y);\r\n    ctx.rotate(this.angle);\r\n    if (this.info === 0) img = sprite[SPRITE.BOAR][world.time]; else img = sprite[SPRITE.BOAR_ATTACK][world.time];\r\n    w = -img.width * this.breath.v;\r\n    h = -img.height * this.breath.v;\r\n    ctxDrawImage(ctx, img, -w / 2, -h / 2, w, h);\r\n    if (this.action & STATE.HURT) {\r\n        if (this.hit.update() && this.hit.o == false) this.action -= STATE.HURT;\r\n        ctx.globalAlpha = 0.6 - this.hit.v;\r\n        var img = sprite[SPRITE.HURT_BOAR];\r\n        ctxDrawImage(ctx, img, -w / 2, -h / 2, w, h);\r\n        ctx.globalAlpha = 1;\r\n    }\r\n    ctx.restore();\r\n}\r\n;\r\nfunction draw_crab_boss() {\r\n    var pi2 = Math.PI / 2;\r\n    var pi4 = Math.PI / 4;\r\n    this.breath.update();\r\n    this.breathl.update();\r\n    this.breathr.update();\r\n    ctx.save();\r\n    ctx.translate(user.cam.x + this.x, user.cam.y + this.y);\r\n    ctx.rotate(this.angle);\r\n    if (this.info === 0) img = sprite[SPRITE.CRAB_BOSS][world.time]; else img = sprite[SPRITE.CRAB_BOSS_ATTACK][world.time];\r\n    w = -img.width * this.breath.v;\r\n    h = -img.height * this.breath.v;\r\n    ctxDrawImage(ctx, img, -w / 2, -h / 2, w, h);\r\n    if (this.action & STATE.HURT) {\r\n        if (this.hit.update() && this.hit.o == false) this.action -= STATE.HURT;\r\n        ctx.globalAlpha = 0.6 - this.hit.v;\r\n        var img = sprite[SPRITE.HURT_CRAB_BOSS];\r\n        ctxDrawImage(ctx, img, -w / 2, -h / 2, w, h);\r\n        ctx.globalAlpha = 1;\r\n    }\r\n    if (this.action & STATE.COLD) {\r\n        if (this.heal.update() && this.heal.o == false) this.action -= STATE.COLD;\r\n        ctx.globalAlpha = 0.6 - this.heal.v;\r\n        var img = sprite[SPRITE.HEAL_CRAB_BOSS];\r\n        ctxDrawImage(ctx, img, -w / 2, -h / 2, w, h);\r\n        ctx.globalAlpha = 1;\r\n    }\r\n    ctx.restore();\r\n    ctx.save();\r\n    ctx.translate(user.cam.x + this.x, user.cam.y + this.y);\r\n    ctx.rotate(this.angle + pi4);\r\n    ctx.translate(100, 0);\r\n    ctx.rotate(pi2);\r\n    if (this.info === 0) img = sprite[SPRITE.CRAB_BOSS_CLAW_LEFT][world.time]; else img = sprite[SPRITE.CRAB_BOSS_CLAW_LEFT_ATTACK][world.time];\r\n    w = -img.width * this.breathl.v;\r\n    h = -img.height * this.breathl.v;\r\n    ctxDrawImage(ctx, img, -w / 2, -h / 2, w, h);\r\n    if (this.action & STATE.HURT) {\r\n        ctx.globalAlpha = 0.6 - this.hit.v;\r\n        var img = sprite[SPRITE.HURT_CRAB_BOSS_CLAW_LEFT];\r\n        ctxDrawImage(ctx, img, -w / 2, -h / 2, w, h);\r\n        ctx.globalAlpha = 1;\r\n    }\r\n    if (this.action & STATE.COLD) {\r\n        ctx.globalAlpha = 0.6 - this.heal.v;\r\n        var img = sprite[SPRITE.HEAL_CRAB_BOSS_CLAW_LEFT];\r\n        ctxDrawImage(ctx, img, -w / 2, -h / 2, w, h);\r\n        ctx.globalAlpha = 1;\r\n    }\r\n    ctx.restore();\r\n    ctx.save();\r\n    ctx.translate(user.cam.x + this.x, user.cam.y + this.y);\r\n    ctx.rotate(this.angle + pi2 + pi4);\r\n    ctx.translate(100, 0);\r\n    ctx.rotate(pi2);\r\n    if (this.info === 0) img = sprite[SPRITE.CRAB_BOSS_CLAW_RIGHT][world.time]; else img = sprite[SPRITE.CRAB_BOSS_CLAW_RIGHT_ATTACK][world.time];\r\n    w = -img.width * this.breathr.v;\r\n    h = -img.height * this.breathr.v;\r\n    ctxDrawImage(ctx, img, -w / 2, -h / 2, w, h);\r\n    if (this.action & STATE.HURT) {\r\n        ctx.globalAlpha = 0.6 - this.hit.v;\r\n        var img = sprite[SPRITE.HURT_CRAB_BOSS_CLAW_RIGHT];\r\n        ctxDrawImage(ctx, img, -w / 2, -h / 2, w, h);\r\n        ctx.globalAlpha = 1;\r\n    }\r\n    if (this.action & STATE.COLD) {\r\n        ctx.globalAlpha = 0.6 - this.heal.v;\r\n        var img = sprite[SPRITE.HEAL_CRAB_BOSS_CLAW_RIGHT];\r\n        ctxDrawImage(ctx, img, -w / 2, -h / 2, w, h);\r\n        ctx.globalAlpha = 1;\r\n    }\r\n    ctx.restore();\r\n}\r\n;\r\nfunction draw_crab() {\r\n    var pi2 = Math.PI / 2;\r\n    var pi4 = Math.PI / 4;\r\n    this.breath.update();\r\n    this.breathl.update();\r\n    this.breathr.update();\r\n    ctx.save();\r\n    ctx.translate(user.cam.x + this.x, user.cam.y + this.y);\r\n    ctx.rotate(this.angle);\r\n    if (this.info === 0) img = sprite[SPRITE.CRAB][world.time]; else img = sprite[SPRITE.CRAB_ATTACK][world.time];\r\n    w = -img.width * this.breath.v;\r\n    h = -img.height * this.breath.v;\r\n    ctxDrawImage(ctx, img, -w / 2, -h / 2, w, h);\r\n    if (this.action & STATE.HURT) {\r\n        if (this.hit.update() && this.hit.o == false) this.action -= STATE.HURT;\r\n        ctx.globalAlpha = 0.6 - this.hit.v;\r\n        var img = sprite[SPRITE.HURT_CRAB];\r\n        ctxDrawImage(ctx, img, -w / 2, -h / 2, w, h);\r\n        ctx.globalAlpha = 1;\r\n    }\r\n    if (this.action & STATE.COLD) {\r\n        if (this.heal.update() && this.heal.o == false) this.action -= STATE.COLD;\r\n        ctx.globalAlpha = 0.6 - this.heal.v;\r\n        var img = sprite[SPRITE.HEAL_CRAB];\r\n        ctxDrawImage(ctx, img, -w / 2, -h / 2, w, h);\r\n        ctx.globalAlpha = 1;\r\n    }\r\n    ctx.restore();\r\n    ctx.save();\r\n    ctx.translate(user.cam.x + this.x, user.cam.y + this.y);\r\n    ctx.rotate(this.angle + pi4);\r\n    ctx.translate(55, 0);\r\n    ctx.rotate(pi2);\r\n    if (this.info === 0) img = sprite[SPRITE.CRAB_CLAW_LEFT][world.time]; else img = sprite[SPRITE.CRAB_CLAW_LEFT_ATTACK][world.time];\r\n    w = -img.width * this.breathl.v;\r\n    h = -img.height * this.breathl.v;\r\n    ctxDrawImage(ctx, img, -w / 2, -h / 2, w, h);\r\n    if (this.action & STATE.HURT) {\r\n        ctx.globalAlpha = 0.6 - this.hit.v;\r\n        var img = sprite[SPRITE.HURT_CRAB_CLAW_LEFT];\r\n        ctxDrawImage(ctx, img, -w / 2, -h / 2, w, h);\r\n        ctx.globalAlpha = 1;\r\n    }\r\n    if (this.action & STATE.COLD) {\r\n        ctx.globalAlpha = 0.6 - this.heal.v;\r\n        var img = sprite[SPRITE.HEAL_CRAB_CLAW_LEFT];\r\n        ctxDrawImage(ctx, img, -w / 2, -h / 2, w, h);\r\n        ctx.globalAlpha = 1;\r\n    }\r\n    ctx.restore();\r\n    ctx.save();\r\n    ctx.translate(user.cam.x + this.x, user.cam.y + this.y);\r\n    ctx.rotate(this.angle + pi2 + pi4);\r\n    ctx.translate(55, 0);\r\n    ctx.rotate(pi2);\r\n    if (this.info === 0) img = sprite[SPRITE.CRAB_CLAW_RIGHT][world.time]; else img = sprite[SPRITE.CRAB_CLAW_RIGHT_ATTACK][world.time];\r\n    w = -img.width * this.breathr.v;\r\n    h = -img.height * this.breathr.v;\r\n    ctxDrawImage(ctx, img, -w / 2, -h / 2, w, h);\r\n    if (this.action & STATE.HURT) {\r\n        ctx.globalAlpha = 0.6 - this.hit.v;\r\n        var img = sprite[SPRITE.HURT_CRAB_CLAW_RIGHT];\r\n        ctxDrawImage(ctx, img, -w / 2, -h / 2, w, h);\r\n        ctx.globalAlpha = 1;\r\n    }\r\n    if (this.action & STATE.COLD) {\r\n        ctx.globalAlpha = 0.6 - this.heal.v;\r\n        var img = sprite[SPRITE.HEAL_CRAB_CLAW_RIGHT];\r\n        ctxDrawImage(ctx, img, -w / 2, -h / 2, w, h);\r\n        ctx.globalAlpha = 1;\r\n    }\r\n    ctx.restore();\r\n}\r\n;\r\nfunction draw_spell() {\r\n    ctx.save();\r\n    ctx.translate(user.cam.x + this.x, user.cam.y + this.y);\r\n    ctx.rotate(this.angle);\r\n    this.born = Math.min(1, this.born + delta * 2);\r\n    ctx.globalAlpha = Math.min(1, Math.max(0, Utils.dist(this, this.r) / 80)) * this.born;\r\n    this.breath.update();\r\n    img = sprite[SPRITE.SPELL][world.time][this.spell];\r\n    if (this.spell < 2) {\r\n        w = -img.width * this.breath.v;\r\n        h = -img.height * this.breath.v;\r\n    } else {\r\n        if (this.fly === 0) {\r\n            w = -img.width;\r\n            h = -img.height;\r\n        } else {\r\n            w = -img.width * 1.35;\r\n            h = -img.height * 1.35;\r\n        }\r\n    }\r\n    ctxDrawImage(ctx, img, -w / 2, -h / 2, w, h);\r\n    ctx.globalAlpha = 1;\r\n    ctx.restore();\r\n}\r\n;\r\nfunction draw_simple_mobs(id, hurt) {\r\n    ctx.save();\r\n    ctx.translate(user.cam.x + this.x, user.cam.y + this.y);\r\n    ctx.rotate(this.angle);\r\n    this.breath.update();\r\n    img = sprite[id][world.time];\r\n    w = -img.width * this.breath.v;\r\n    h = -img.height * this.breath.v;\r\n    ctxDrawImage(ctx, img, -w / 2, -h / 2, w, h);\r\n    if (this.action & STATE.HURT) {\r\n        if (this.hit.update() && this.hit.o == false) this.action -= STATE.HURT;\r\n        ctx.globalAlpha = 0.6 - this.hit.v;\r\n        var img = sprite[hurt];\r\n        ctxDrawImage(ctx, img, -w / 2, -h / 2, w, h);\r\n        ctx.globalAlpha = 1;\r\n    }\r\n    ctx.restore();\r\n}\r\n;\r\nfunction draw_simple_mobs_hd(id, hurt) {\r\n    ctx.save();\r\n    ctx.translate(user.cam.x + this.x, user.cam.y + this.y);\r\n    ctx.rotate(this.angle);\r\n    this.breath.update();\r\n    img = sprite[id][world.time];\r\n    w = -img.width * this.breath.v;\r\n    h = -img.height * this.breath.v;\r\n    ctxDrawImage(ctx, img, -w / 4, -h / 4, w / 2, h / 2);\r\n    if (this.action & STATE.HURT) {\r\n        if (this.hit.update() && this.hit.o == false) this.action -= STATE.HURT;\r\n        ctx.globalAlpha = 0.6 - this.hit.v;\r\n        var img = sprite[hurt];\r\n        ctxDrawImage(ctx, img, -w / 4, -h / 4, w / 2, h / 2);\r\n        ctx.globalAlpha = 1;\r\n    }\r\n    ctx.restore();\r\n}\r\n;\r\nfunction draw_breath_2(id, x, y) {\r\n    ctx.save();\r\n    ctx.translate(user.cam.x + x, user.cam.y + y);\r\n    ctx.rotate(this.angle);\r\n    ctx.translate(this.x - x, this.y - y);\r\n    this.breath.update();\r\n    img = sprite[id][world.time];\r\n    w = -img.width * this.breath.v;\r\n    h = -img.height * this.breath.v;\r\n    ctxDrawImage(ctx, img, -w / 2, -h / 2, w, h);\r\n    ctx.restore();\r\n}\r\n;\r\nfunction draw_breath(id) {\r\n    ctx.save();\r\n    ctx.translate(user.cam.x + this.x, user.cam.y + this.y);\r\n    ctx.rotate(this.angle);\r\n    this.breath.update();\r\n    img = sprite[id][world.time];\r\n    w = -img.width * this.breath.v;\r\n    h = -img.height * this.breath.v;\r\n    ctxDrawImage(ctx, img, -w / 2, -h / 2, w, h);\r\n    ctx.restore();\r\n}\r\n;\r\nfunction draw_thornbush() {\r\n    ctx.save();\r\n    ctx.translate(user.cam.x + this.x, user.cam.y + this.y);\r\n    if (this.hit.update) {\r\n        if (this.hit.anim.update() && this.hit.anim.o == false) this.hit.update = false;\r\n        var v = (1 - this.hit.anim.v) * delta * 600 * scale;\r\n        var x = Math.cos(this.hit.angle - this.angle) * v;\r\n        var y = Math.sin(this.hit.angle - this.angle) * v;\r\n    } else {\r\n        var x = 0;\r\n        var y = 0;\r\n    }\r\n    ;\r\n    var amount = this.info & 15;\r\n    if (this.info === 10 || amount === 0) {\r\n        ctx.rotate(this.angle);\r\n        this.ground.update();\r\n        if (this.info & 16) var img = sprite[SPRITE.PLANT_THORNBUSH_DRIED][world.time]; else var img = sprite[SPRITE.PLANT_THORNBUSH][world.time];\r\n        var w = -img.width * this.ground.v;\r\n        var h = -img.height * this.ground.v;\r\n        ctxDrawImage(ctx, img, -w / 2 + x, -h / 2 + y, w, h);\r\n    } else {\r\n        if (this.info & 16) var img = sprite[SPRITE.DRIED_THORNBUSH][world.time]; else var img = sprite[SPRITE.THORNBUSH][world.time];\r\n        ctx.translate(0, img.height / 2);\r\n        ctxDrawImage(ctx, img, x - img.width / 2, -img.height + y);\r\n    }\r\n    ctx.restore();\r\n}\r\n;\r\nfunction draw_garlic() {\r\n    ctx.save();\r\n    ctx.translate(user.cam.x + this.x, user.cam.y + this.y);\r\n    if (this.hit.update) {\r\n        if (this.hit.anim.update() && this.hit.anim.o == false) this.hit.update = false;\r\n        var v = (1 - this.hit.anim.v) * delta * 600 * scale;\r\n        var x = Math.cos(this.hit.angle - this.angle) * v;\r\n        var y = Math.sin(this.hit.angle - this.angle) * v;\r\n    } else {\r\n        var x = 0;\r\n        var y = 0;\r\n    }\r\n    ;\r\n    var amount = this.info & 15;\r\n    if (this.info === 10 || amount === 0) {\r\n        ctx.rotate(this.angle);\r\n        this.ground.update();\r\n        if (this.info & 16) var img = sprite[SPRITE.PLANT_GARLIC_DRIED][world.time]; else var img = sprite[SPRITE.PLANT_GARLIC][world.time];\r\n        var w = -img.width * this.ground.v;\r\n        var h = -img.height * this.ground.v;\r\n        ctxDrawImage(ctx, img, -w / 2 + x, -h / 2 + y, w, h);\r\n    } else {\r\n        if (this.info & 16) var img = sprite[SPRITE.DRIED_GARLIC][world.time]; else var img = sprite[SPRITE.GARLIC][world.time];\r\n        ctx.translate(0, img.height / 2);\r\n        ctxDrawImage(ctx, img, x - img.width / 2, -img.height + y);\r\n    }\r\n    ctx.restore();\r\n}\r\n;\r\nfunction draw_aloe_vera() {\r\n    ctx.save();\r\n    ctx.translate(user.cam.x + this.x, user.cam.y + this.y);\r\n    if (this.hit.update) {\r\n        if (this.hit.anim.update() && this.hit.anim.o == false) this.hit.update = false;\r\n        var v = (1 - this.hit.anim.v) * delta * 600 * scale;\r\n        var x = Math.cos(this.hit.angle - this.angle) * v;\r\n        var y = Math.sin(this.hit.angle - this.angle) * v;\r\n    } else {\r\n        var x = 0;\r\n        var y = 0;\r\n    }\r\n    ;\r\n    var amount = this.info & 15;\r\n    if (this.info === 10 || amount === 0) {\r\n        ctx.rotate(this.angle);\r\n        this.ground.update();\r\n        if (this.info & 16) var img = sprite[SPRITE.PLANT_ALOE_VERA_DRIED][world.time]; else var img = sprite[SPRITE.PLANT_ALOE_VERA][world.time];\r\n        var w = -img.width * this.ground.v;\r\n        var h = -img.height * this.ground.v;\r\n        ctxDrawImage(ctx, img, -w / 2 + x, -h / 2 + y, w, h);\r\n    } else {\r\n        if (this.info & 16) var img = sprite[SPRITE.DRIED_ALOE_VERA][world.time]; else var img = sprite[SPRITE.ALOE_VERA_GROWN][world.time];\r\n        ctx.translate(0, img.height / 2);\r\n        ctxDrawImage(ctx, img, x - img.width / 2, -img.height + y);\r\n    }\r\n    ctx.restore();\r\n}\r\n;\r\nfunction draw_watermelon() {\r\n    ctx.save();\r\n    ctx.translate(user.cam.x + this.x, user.cam.y + this.y);\r\n    if (this.hit.update) {\r\n        if (this.hit.anim.update() && this.hit.anim.o == false) this.hit.update = false;\r\n        var v = (1 - this.hit.anim.v) * delta * 600 * scale;\r\n        var x = Math.cos(this.hit.angle - this.angle) * v;\r\n        var y = Math.sin(this.hit.angle - this.angle) * v;\r\n    } else {\r\n        var x = 0;\r\n        var y = 0;\r\n    }\r\n    ;\r\n    var amount = this.info & 15;\r\n    if (this.info === 10 || amount === 0) {\r\n        ctx.rotate(this.angle);\r\n        this.ground.update();\r\n        if (this.info & 16) var img = sprite[SPRITE.PLANT_WATERMELON_DRIED][world.time]; else var img = sprite[SPRITE.PLANT_WATERMELON][world.time];\r\n        var w = -img.width * this.ground.v;\r\n        var h = -img.height * this.ground.v;\r\n        ctxDrawImage(ctx, img, -w / 2 + x, -h / 2 + y, w, h);\r\n    } else {\r\n        if (this.info & 16) var img = sprite[SPRITE.DRIED_WATERMELON][world.time]; else var img = sprite[SPRITE.WATERMELON][world.time];\r\n        ctx.translate(0, img.height / 2);\r\n        ctxDrawImage(ctx, img, x - img.width / 2, -img.height + y);\r\n    }\r\n    ctx.restore();\r\n}\r\n;\r\nfunction draw_carrot() {\r\n    ctx.save();\r\n    ctx.translate(user.cam.x + this.x, user.cam.y + this.y);\r\n    if (this.hit.update) {\r\n        if (this.hit.anim.update() && this.hit.anim.o == false) this.hit.update = false;\r\n        var v = (1 - this.hit.anim.v) * delta * 600 * scale;\r\n        var x = Math.cos(this.hit.angle - this.angle) * v;\r\n        var y = Math.sin(this.hit.angle - this.angle) * v;\r\n    } else {\r\n        var x = 0;\r\n        var y = 0;\r\n    }\r\n    ;\r\n    var amount = this.info & 15;\r\n    if (this.info === 10 || amount === 0) {\r\n        ctx.rotate(this.angle);\r\n        this.ground.update();\r\n        if (this.info & 16) var img = sprite[SPRITE.PLANT_CARROT_DRIED][world.time]; else var img = sprite[SPRITE.PLANT_CARROT][world.time];\r\n        var w = -img.width * this.ground.v;\r\n        var h = -img.height * this.ground.v;\r\n        ctxDrawImage(ctx, img, -w / 2 + x, -h / 2 + y, w, h);\r\n    } else {\r\n        if (this.info & 16) var img = sprite[SPRITE.DRIED_CARROT][world.time]; else var img = sprite[SPRITE.CARROT][world.time];\r\n        ctx.translate(0, img.height / 2);\r\n        ctxDrawImage(ctx, img, x - img.width / 2, -img.height + y);\r\n    }\r\n    ctx.restore();\r\n}\r\n;\r\nfunction draw_pumpkin() {\r\n    ctx.save();\r\n    ctx.translate(user.cam.x + this.x, user.cam.y + this.y);\r\n    if (this.hit.update) {\r\n        if (this.hit.anim.update() && this.hit.anim.o == false) this.hit.update = false;\r\n        var v = (1 - this.hit.anim.v) * delta * 600 * scale;\r\n        var x = Math.cos(this.hit.angle - this.angle) * v;\r\n        var y = Math.sin(this.hit.angle - this.angle) * v;\r\n    } else {\r\n        var x = 0;\r\n        var y = 0;\r\n    }\r\n    ;\r\n    var amount = this.info & 15;\r\n    if (this.info === 10 || amount === 0) {\r\n        ctx.rotate(this.angle);\r\n        this.ground.update();\r\n        if (this.info & 16) var img = sprite[SPRITE.PLANT_PUMPKIN_DRIED][world.time]; else var img = sprite[SPRITE.PLANT_PUMPKIN][world.time];\r\n        var w = -img.width * this.ground.v;\r\n        var h = -img.height * this.ground.v;\r\n        ctxDrawImage(ctx, img, -w / 2 + x, -h / 2 + y, w, h);\r\n    } else {\r\n        if (this.info & 16) var img = sprite[SPRITE.DRIED_PUMPKIN][world.time]; else var img = sprite[SPRITE.PUMPKIN][world.time];\r\n        ctx.translate(0, img.height / 2);\r\n        ctxDrawImage(ctx, img, x - img.width / 2, -img.height + y);\r\n    }\r\n    ctx.restore();\r\n}\r\n;\r\nfunction draw_wheat() {\r\n    ctx.save();\r\n    ctx.translate(user.cam.x + this.x, user.cam.y + this.y);\r\n    if (this.hit.update) {\r\n        if (this.hit.anim.update() && this.hit.anim.o == false) this.hit.update = false;\r\n        var v = (1 - this.hit.anim.v) * delta * 600 * scale;\r\n        var x = Math.cos(this.hit.angle - this.angle) * v;\r\n        var y = Math.sin(this.hit.angle - this.angle) * v;\r\n    } else {\r\n        var x = 0;\r\n        var y = 0;\r\n    }\r\n    ;\r\n    var amount = this.info & 15;\r\n    if (this.info === 10 || amount === 0) {\r\n        ctx.rotate(this.angle);\r\n        this.ground.update();\r\n        if (this.info & 16) var img = sprite[SPRITE.WHEAT_SEED_DRIED][world.time]; else var img = sprite[SPRITE.WHEAT_SEED][world.time];\r\n        var w = -img.width * this.ground.v;\r\n        var h = -img.height * this.ground.v;\r\n        ctxDrawImage(ctx, img, -w / 2 + x, -h / 2 + y, w, h);\r\n    } else {\r\n        this.wind.update();\r\n        if (this.info & 16) var img = sprite[SPRITE.DRIED_WHEAT][world.time]; else var img = sprite[SPRITE.WILD_WHEAT][world.time];\r\n        ctx.translate(0, img.height / 2);\r\n        ctx.rotate(this.wind.v);\r\n        ctxDrawImage(ctx, img, x - img.width / 2, -img.height + y);\r\n    }\r\n    ctx.restore();\r\n}\r\n;\r\nfunction draw_seed() {\r\n    if (this.info < 10) return;\r\n    ctx.save();\r\n    ctx.translate(user.cam.x + this.x, user.cam.y + this.y);\r\n    ctx.rotate(this.angle);\r\n    if (this.hit.update) {\r\n        if (this.hit.anim.update() && this.hit.anim.o == false) this.hit.update = false;\r\n        var v = (1 - this.hit.anim.v) * delta * 600 * scale;\r\n        var x = Math.cos(this.hit.angle - this.angle) * v;\r\n        var y = Math.sin(this.hit.angle - this.angle) * v;\r\n    } else {\r\n        var x = 0;\r\n        var y = 0;\r\n    }\r\n    ;\r\n    this.ground.update();\r\n    var img = sprite[SPRITE.PLANT_SEED][world.time];\r\n    var w = -img.width * this.ground.v;\r\n    var h = -img.height * this.ground.v;\r\n    ctxDrawImage(ctx, img, -w / 2 + x, -h / 2 + y, w, h);\r\n    ctx.restore();\r\n}\r\n;\r\nfunction draw_plant() {\r\n    if (this.info === 10) return;\r\n    ctx.save();\r\n    ctx.translate(user.cam.x + this.x, user.cam.y + this.y);\r\n    ctx.rotate(this.angle);\r\n    if (this.hit.update) {\r\n        if (this.hit.anim.update() && this.hit.anim.o == false) this.hit.update = false;\r\n        var v = (1 - this.hit.anim.v) * delta * 600 * scale;\r\n        var x = Math.cos(this.hit.angle - this.angle) * v;\r\n        var y = Math.sin(this.hit.angle - this.angle) * v;\r\n    } else {\r\n        var x = 0;\r\n        var y = 0;\r\n    }\r\n    ;\r\n    if (this.info & 16) var img = sprite[SPRITE.DRIED_PLANT][world.time]; else var img = sprite[SPRITE.PLANT_MINI][world.time];\r\n    ctxDrawImage(ctx, img, -img.width / 2 + x, -img.width / 2 + y);\r\n    ctx.restore();\r\n    var amount = this.info & 15;\r\n    for (var i = 0; i < amount; i++) this.fruits[i].draw(SPRITE.FRUIT);\r\n}\r\n;\r\nfunction draw_tomato() {\r\n    if (this.info < 10) return;\r\n    ctx.save();\r\n    ctx.translate(user.cam.x + this.x, user.cam.y + this.y);\r\n    ctx.rotate(this.angle);\r\n    if (this.hit.update) {\r\n        if (this.hit.anim.update() && this.hit.anim.o == false) this.hit.update = false;\r\n        var v = (1 - this.hit.anim.v) * delta * 600 * scale;\r\n        var x = Math.cos(this.hit.angle - this.angle) * v;\r\n        var y = Math.sin(this.hit.angle - this.angle) * v;\r\n    } else {\r\n        var x = 0;\r\n        var y = 0;\r\n    }\r\n    ;\r\n    this.ground.update();\r\n    var img = sprite[SPRITE.PLANT_TOMATO][world.time];\r\n    var w = -img.width * this.ground.v;\r\n    var h = -img.height * this.ground.v;\r\n    ctxDrawImage(ctx, img, -w / 2 + x, -h / 2 + y, w, h);\r\n    ctx.restore();\r\n}\r\n;\r\nfunction draw_tomato_fruit() {\r\n    if (this.info === 10) return;\r\n    var amount = this.info & 15;\r\n    for (var i = 0; i < amount; i++) this.fruits[i].draw(SPRITE.TOMATO, this.x, this.y);\r\n    ctx.save();\r\n    ctx.translate(user.cam.x + this.x, user.cam.y + this.y);\r\n    ctx.rotate(this.angle);\r\n    if (this.hit.update) {\r\n        if (this.hit.anim.update() && this.hit.anim.o == false) this.hit.update = false;\r\n        var v = (1 - this.hit.anim.v) * delta * 600 * scale;\r\n        var x = Math.cos(this.hit.angle - this.angle) * v;\r\n        var y = Math.sin(this.hit.angle - this.angle) * v;\r\n    } else {\r\n        var x = 0;\r\n        var y = 0;\r\n    }\r\n    ;\r\n    if (this.info & 16) var img = sprite[SPRITE.DRIED_TOMATO_MINI][world.time]; else var img = sprite[SPRITE.TOMATO_MINI][world.time];\r\n    ctxDrawImage(ctx, img, -img.width / 2 + x, -img.width / 2 + y);\r\n    ctx.restore();\r\n}\r\n;\r\nfunction draw_furnace() {\r\n    ctx.save();\r\n    ctx.translate(user.cam.x + this.x, user.cam.y + this.y);\r\n    ctx.rotate(this.angle);\r\n    if (this.hit.update) {\r\n        if (this.hit.anim.update() && this.hit.anim.o == false) this.hit.update = false;\r\n        var v = (1 - this.hit.anim.v) * delta * 600 * scale;\r\n        var x = Math.cos(this.hit.angle - this.angle) * v;\r\n        var y = Math.sin(this.hit.angle - this.angle) * v;\r\n    } else {\r\n        var x = 0;\r\n        var y = 0;\r\n    }\r\n    ;\r\n    if (this.action == 2) img = sprite[SPRITE.FURNACE_ON][world.time]; else img = sprite[SPRITE.FURNACE_OFF][world.time];\r\n    ctxDrawImage(ctx, img, -img.width / 2 + x, -img.height / 2 + y);\r\n    ctx.restore();\r\n}\r\n;\r\nfunction draw_furnace_ground() {\r\n    ctx.save();\r\n    ctx.translate(user.cam.x + this.x, user.cam.y + this.y);\r\n    ctx.rotate(this.angle);\r\n    this.ground.update();\r\n    ctx.globalAlpha = 0.3;\r\n    var img = sprite[SPRITE.GROUND_FIRE][world.time];\r\n    var w = -img.width * this.ground.v;\r\n    var h = -img.height * this.ground.v;\r\n    ctxDrawImage(ctx, img, -w / 2, -h / 2, w, h);\r\n    ctx.globalAlpha = 1;\r\n    ctx.restore();\r\n}\r\n;\r\nfunction draw_bread_oven_smog() {\r\n    ctx.save();\r\n    ctx.translate(user.cam.x + this.x, user.cam.y + this.y);\r\n    ctx.rotate(this.angle);\r\n    if (this.info & 31 && this.info & 992 && (this.info & 31744) != 31744 && (this.smog.length == 0 || this.smog[this.smog.length - 1] <= SPRITE.SMOG_PUSH)) this.smog.push(SPRITE.SMOG);\r\n    for (var i = 0; i < this.smog.length; i++) {\r\n        this.smog[i] = Math.max(0, this.smog[i] - delta * SPRITE.SMOG_SPEED);\r\n        ctx.globalAlpha = this.smog[i] / 1.3;\r\n        var v = (1 - this.smog[i]) * 40;\r\n        var r = (1 - this.smog[i]) * 35 + 10;\r\n        circle(ctx, -68 * scale + Math.cos(-this.angle - Math.PI / 2) * v, -20 * scale + Math.sin(-this.angle - Math.PI / 2) * v, r);\r\n        fill_path(ctx, \"#333333\");\r\n    }\r\n    ctx.globalAlpha = 1;\r\n    if (this.smog.length > 0 && this.smog[0] === 0) this.smog.shift();\r\n    ctx.restore();\r\n}\r\n;\r\nfunction draw_fire_ground(id) {\r\n    ctx.save();\r\n    ctx.translate(user.cam.x + this.x, user.cam.y + this.y);\r\n    ctx.rotate(this.angle);\r\n    this.ground.update();\r\n    ctx.globalAlpha = 0.3;\r\n    var img = sprite[SPRITE.GROUND_FIRE][world.time];\r\n    var w = -img.width * this.ground.v;\r\n    var h = -img.height * this.ground.v;\r\n    ctxDrawImage(ctx, img, -w / 2, -h / 2, w, h);\r\n    ctx.globalAlpha = 1;\r\n    if (this.hit.update) {\r\n        if (this.hit.anim.update() && this.hit.anim.o == false) this.hit.update = false;\r\n        var v = (1 - this.hit.anim.v) * delta * 600 * scale;\r\n        var x = Math.cos(this.hit.angle - this.angle) * v;\r\n        var y = Math.sin(this.hit.angle - this.angle) * v;\r\n    } else {\r\n        var x = 0;\r\n        var y = 0;\r\n    }\r\n    ;\r\n    img = sprite[id][world.time];\r\n    ctxDrawImage(ctx, img, -img.width / 2 + x, -img.height / 2 + y);\r\n    ctx.restore();\r\n}\r\n;\r\nfunction draw_sign() {\r\n    ctx.save();\r\n    ctx.translate(user.cam.x + this.x, user.cam.y + this.y);\r\n    ctx.rotate(this.angle);\r\n    if (this.hit.update) {\r\n        if (this.hit.anim.update() && this.hit.anim.o == false) this.hit.update = false;\r\n        var v = (1 - this.hit.anim.v) * delta * 600 * scale;\r\n        var x = Math.cos(this.hit.angle - this.angle) * v;\r\n        var y = Math.sin(this.hit.angle - this.angle) * v;\r\n    } else {\r\n        var x = 0;\r\n        var y = 0;\r\n    }\r\n    ;\r\n    if (this.info === 0) img = sprite[SPRITE.SIGN][world.time]; else img = sprite[SPRITE.SYMBOLS][world.time][this.info - 1];\r\n    ctxDrawImage(ctx, img, -img.width / 2 + x, -img.height / 2 + y);\r\n    ctx.restore();\r\n}\r\n;\r\n;\r\nfunction draw_bread_oven() {\r\n    ctx.save();\r\n    ctx.translate(user.cam.x + this.x, user.cam.y + this.y);\r\n    ctx.rotate(this.angle);\r\n    if (this.hit.update) {\r\n        if (this.hit.anim.update() && this.hit.anim.o == false) this.hit.update = false;\r\n        var v = (1 - this.hit.anim.v) * delta * 600 * scale;\r\n        var x = Math.cos(this.hit.angle - this.angle) * v;\r\n        var y = Math.sin(this.hit.angle - this.angle) * v;\r\n    } else {\r\n        var x = 0;\r\n        var y = 0;\r\n    }\r\n    ;\r\n    if (this.info & 31 && this.info & 992 && (this.info & 31744) != 31744) {\r\n        img = sprite[SPRITE.BREAD_OVEN_ON][world.time];\r\n        ctxDrawImage(ctx, img, -img.width / 2 + x, -img.height / 2 + y);\r\n        this.up.update();\r\n        var img = sprite[SPRITE.BREAD_LIGHT_UP][world.time];\r\n        var w = -img.width * this.up.v;\r\n        var h = -img.height * this.up.v;\r\n        ctxDrawImage(ctx, img, -w / 2 + 1 * scale, -h / 2 + 3 * scale, w, h);\r\n    } else {\r\n        img = sprite[SPRITE.BREAD_OVEN_OFF][world.time];\r\n        ctxDrawImage(ctx, img, -img.width / 2 + x, -img.height / 2 + y);\r\n    }\r\n    ctx.restore();\r\n}\r\n;\r\nfunction draw_windmill_wings() {\r\n    if (this.hit.update) {\r\n        var v = (1 - this.hit.anim.v) * delta * 600 * scale;\r\n        var x = Math.cos(this.hit.angle - this.angle) * v;\r\n        var y = Math.sin(this.hit.angle - this.angle) * v;\r\n    } else {\r\n        var x = 0;\r\n        var y = 0;\r\n    }\r\n    ;\r\n    if (this.info & 255 && (this.info & 65280) != 65280) this.rotate = (this.rotate + delta * 0.5) % (Math.PI * 2);\r\n    ctx.save();\r\n    ctx.translate(user.cam.x + this.x + x, user.cam.y + this.y + y);\r\n    ctx.save();\r\n    ctx.rotate(this.rotate);\r\n    img = sprite[SPRITE.WINDMILL_WINGS][world.time];\r\n    ctxDrawImage(ctx, img, -img.width / 2, -img.height / 2);\r\n    ctx.restore();\r\n    ctx.save();\r\n    ctx.rotate(this.angl);\r\n    img = sprite[SPRITE.WINDMILL_HEAD][world.time];\r\n    ctxDrawImage(ctx, img, -img.width / 2, -img.height / 2);\r\n    ctx.restore();\r\n    ctx.restore();\r\n}\r\n;\r\nfunction draw_extractor_stone() {\r\n    if (this.hit.update) {\r\n        if (this.hit.anim.update() && this.hit.anim.o == false) this.hit.update = false;\r\n        var v = (1 - this.hit.anim.v) * delta * 600 * scale;\r\n        var x = Math.cos(this.hit.angle - this.angle) * v;\r\n        var y = Math.sin(this.hit.angle - this.angle) * v;\r\n    } else {\r\n        var x = 0;\r\n        var y = 0;\r\n    }\r\n    ;\r\n    ctx.save();\r\n    if (this.info & 255 && (this.info & 65280) != 65280) {\r\n        x += Math.random() * 2 - 1;\r\n        y += Math.random() * 2 - 1;\r\n    }\r\n    ctx.translate(user.cam.x + this.x + x, user.cam.y + this.y + y);\r\n    ctx.rotate(this.angle);\r\n    img = sprite[SPRITE.EXTRACTOR_MACHINE_STONE][world.time];\r\n    ctxDrawImage(ctx, img, -img.width / 2, -img.height / 2);\r\n    if (this.info & 255 && (this.info & 65280) != 65280) this.rotate = (this.rotate + delta * 3) % (Math.PI * 2);\r\n    ctx.rotate(this.rotate);\r\n    img = sprite[SPRITE.EXTRACTOR_MACHINE0_STONE][world.time];\r\n    ctxDrawImage(ctx, img, -img.width / 2, -img.height / 2);\r\n    ctx.restore();\r\n}\r\n;\r\nfunction draw_extractor_gold() {\r\n    if (this.hit.update) {\r\n        if (this.hit.anim.update() && this.hit.anim.o == false) this.hit.update = false;\r\n        var v = (1 - this.hit.anim.v) * delta * 600 * scale;\r\n        var x = Math.cos(this.hit.angle - this.angle) * v;\r\n        var y = Math.sin(this.hit.angle - this.angle) * v;\r\n    } else {\r\n        var x = 0;\r\n        var y = 0;\r\n    }\r\n    ;\r\n    ctx.save();\r\n    if (this.info & 255 && (this.info & 65280) != 65280) {\r\n        x += Math.random() * 2 - 1;\r\n        y += Math.random() * 2 - 1;\r\n    }\r\n    ctx.translate(user.cam.x + this.x + x, user.cam.y + this.y + y);\r\n    ctx.rotate(this.angle);\r\n    img = sprite[SPRITE.EXTRACTOR_MACHINE_GOLD][world.time];\r\n    ctxDrawImage(ctx, img, -img.width / 2, -img.height / 2);\r\n    if (this.info & 255 && (this.info & 65280) != 65280) this.rotate = (this.rotate + delta * 3) % (Math.PI * 2);\r\n    ctx.rotate(this.rotate);\r\n    img = sprite[SPRITE.EXTRACTOR_MACHINE0_GOLD][world.time];\r\n    ctxDrawImage(ctx, img, -img.width / 2, -img.height / 2);\r\n    ctx.restore();\r\n}\r\n;\r\nfunction draw_extractor_diamond() {\r\n    if (this.hit.update) {\r\n        if (this.hit.anim.update() && this.hit.anim.o == false) this.hit.update = false;\r\n        var v = (1 - this.hit.anim.v) * delta * 600 * scale;\r\n        var x = Math.cos(this.hit.angle - this.angle) * v;\r\n        var y = Math.sin(this.hit.angle - this.angle) * v;\r\n    } else {\r\n        var x = 0;\r\n        var y = 0;\r\n    }\r\n    ;\r\n    ctx.save();\r\n    if (this.info & 255 && (this.info & 65280) != 65280) {\r\n        x += Math.random() * 2 - 1;\r\n        y += Math.random() * 2 - 1;\r\n    }\r\n    ctx.translate(user.cam.x + this.x + x, user.cam.y + this.y + y);\r\n    ctx.rotate(this.angle);\r\n    img = sprite[SPRITE.EXTRACTOR_MACHINE_DIAMOND][world.time];\r\n    ctxDrawImage(ctx, img, -img.width / 2, -img.height / 2);\r\n    if (this.info & 255 && (this.info & 65280) != 65280) this.rotate = (this.rotate + delta * 3) % (Math.PI * 2);\r\n    ctx.rotate(this.rotate);\r\n    img = sprite[SPRITE.EXTRACTOR_MACHINE0_DIAMOND][world.time];\r\n    ctxDrawImage(ctx, img, -img.width / 2, -img.height / 2);\r\n    ctx.restore();\r\n}\r\n;\r\nfunction draw_extractor_amethyst() {\r\n    if (this.hit.update) {\r\n        if (this.hit.anim.update() && this.hit.anim.o == false) this.hit.update = false;\r\n        var v = (1 - this.hit.anim.v) * delta * 600 * scale;\r\n        var x = Math.cos(this.hit.angle - this.angle) * v;\r\n        var y = Math.sin(this.hit.angle - this.angle) * v;\r\n    } else {\r\n        var x = 0;\r\n        var y = 0;\r\n    }\r\n    ;\r\n    ctx.save();\r\n    if (this.info & 255 && (this.info & 65280) != 65280) {\r\n        x += Math.random() * 2 - 1;\r\n        y += Math.random() * 2 - 1;\r\n    }\r\n    ctx.translate(user.cam.x + this.x + x, user.cam.y + this.y + y);\r\n    ctx.rotate(this.angle);\r\n    img = sprite[SPRITE.EXTRACTOR_MACHINE_AMETHYST][world.time];\r\n    ctxDrawImage(ctx, img, -img.width / 2, -img.height / 2);\r\n    if (this.info & 255 && (this.info & 65280) != 65280) this.rotate = (this.rotate + delta * 3) % (Math.PI * 2);\r\n    ctx.rotate(this.rotate);\r\n    img = sprite[SPRITE.EXTRACTOR_MACHINE0_AMETHYST][world.time];\r\n    ctxDrawImage(ctx, img, -img.width / 2, -img.height / 2);\r\n    ctx.restore();\r\n}\r\n;\r\nfunction draw_extractor_reidite() {\r\n    if (this.hit.update) {\r\n        if (this.hit.anim.update() && this.hit.anim.o == false) this.hit.update = false;\r\n        var v = (1 - this.hit.anim.v) * delta * 600 * scale;\r\n        var x = Math.cos(this.hit.angle - this.angle) * v;\r\n        var y = Math.sin(this.hit.angle - this.angle) * v;\r\n    } else {\r\n        var x = 0;\r\n        var y = 0;\r\n    }\r\n    ;\r\n    ctx.save();\r\n    if (this.info & 255 && (this.info & 65280) != 65280) {\r\n        x += Math.random() * 2 - 1;\r\n        y += Math.random() * 2 - 1;\r\n    }\r\n    ctx.translate(user.cam.x + this.x + x, user.cam.y + this.y + y);\r\n    ctx.rotate(this.angle);\r\n    img = sprite[SPRITE.EXTRACTOR_MACHINE_REIDITE][world.time];\r\n    ctxDrawImage(ctx, img, -img.width / 2, -img.height / 2);\r\n    if (this.info & 255 && (this.info & 65280) != 65280) this.rotate = (this.rotate + delta * 3) % (Math.PI * 2);\r\n    ctx.rotate(this.rotate);\r\n    img = sprite[SPRITE.EXTRACTOR_MACHINE0_REIDITE][world.time];\r\n    ctxDrawImage(ctx, img, -img.width / 2, -img.height / 2);\r\n    ctx.restore();\r\n}\r\n;\r\nfunction draw_windmill_head() {\r\n    if (this.hit.update) {\r\n        if (this.hit.anim.update() && this.hit.anim.o == false) this.hit.update = false;\r\n        var v = (1 - this.hit.anim.v) * delta * 600 * scale;\r\n        var x = Math.cos(this.hit.angle - this.angle) * v;\r\n        var y = Math.sin(this.hit.angle - this.angle) * v;\r\n    } else {\r\n        var x = 0;\r\n        var y = 0;\r\n    }\r\n    ;\r\n    ctx.save();\r\n    ctx.translate(user.cam.x + this.x + x, user.cam.y + this.y + y);\r\n    ctx.rotate(this.angle);\r\n    img = sprite[SPRITE.WINDMILL][world.time];\r\n    ctxDrawImage(ctx, img, -img.width / 2, -img.height / 2);\r\n    ctx.restore();\r\n}\r\n;\r\nfunction draw_emerald_machine() {\r\n    if (this.hit.update) {\r\n        if (this.hit.anim.update() && this.hit.anim.o == false) this.hit.update = false;\r\n        var v = (1 - this.hit.anim.v) * delta * 600 * scale;\r\n        var x = Math.cos(this.hit.angle - this.angle) * v;\r\n        var y = Math.sin(this.hit.angle - this.angle) * v;\r\n    } else {\r\n        var x = 0;\r\n        var y = 0;\r\n    }\r\n    ;\r\n    this.rotate1 = (this.rotate1 + delta * 3) % (Math.PI * 2);\r\n    this.rotate2 = (this.rotate2 - delta * 3) % (Math.PI * 2);\r\n    ctx.save();\r\n    ctx.translate(user.cam.x + this.x + x, user.cam.y + this.y + y);\r\n    ctx.save();\r\n    ctx.rotate(this.angle);\r\n    img = sprite[SPRITE.EMERALD_MACHINE][world.time];\r\n    ctxDrawImage(ctx, img, -img.width / 2, -img.height / 2);\r\n    ctx.restore();\r\n    ctx.save();\r\n    ctx.rotate(this.rotate1);\r\n    img = sprite[SPRITE.EMERALD_MACHINE_ROTATE][world.time];\r\n    ctxDrawImage(ctx, img, -img.width / 2, -img.height / 2);\r\n    ctx.restore();\r\n    ctx.save();\r\n    ctx.rotate(this.rotate2);\r\n    img = sprite[SPRITE.EMERALD_MACHINE_HOLE][world.time];\r\n    ctxDrawImage(ctx, img, -img.width / 2, -img.height / 2);\r\n    ctx.restore();\r\n    ctx.restore();\r\n}\r\n;\r\nfunction draw_resurrection() {\r\n    if (this.hit.update) {\r\n        if (this.hit.anim.update() && this.hit.anim.o == false) this.hit.update = false;\r\n        var v = (1 - this.hit.anim.v) * delta * 600 * scale;\r\n        var x = Math.cos(this.hit.angle - this.angle) * v;\r\n        var y = Math.sin(this.hit.angle - this.angle) * v;\r\n    } else {\r\n        var x = 0;\r\n        var y = 0;\r\n    }\r\n    ;\r\n    this.rotate1 = (this.rotate1 + delta * 3) % (Math.PI * 2);\r\n    this.rotate2 = (this.rotate2 - delta * 3) % (Math.PI * 2);\r\n    ctx.save();\r\n    ctx.translate(user.cam.x + this.x + x, user.cam.y + this.y + y);\r\n    ctx.save();\r\n    ctx.rotate(this.angle);\r\n    img = sprite[SPRITE.RESURRECTION][world.time];\r\n    ctxDrawImage(ctx, img, -img.width / 2, -img.height / 2);\r\n    ctx.restore();\r\n    ctx.save();\r\n    ctx.rotate(this.rotate1);\r\n    img = sprite[SPRITE.RESURRECTION_ROTATE][world.time];\r\n    ctxDrawImage(ctx, img, -img.width / 2, -img.height / 2);\r\n    ctx.restore();\r\n    ctx.save();\r\n    ctx.rotate(this.rotate2);\r\n    img = sprite[SPRITE.RESURRECTION_HOLE][world.time];\r\n    ctxDrawImage(ctx, img, -img.width / 2, -img.height / 2);\r\n    ctx.restore();\r\n    ctx.restore();\r\n}\r\n;\r\nfunction draw_emerald_machine_halo() {\r\n    ctx.save();\r\n    ctx.translate(user.cam.x + this.x, user.cam.y + this.y);\r\n    ctx.rotate(this.angle);\r\n    this.halo.update();\r\n    img = sprite[SPRITE.EMERALD_MACHINE_GROUND][world.time];\r\n    w = -img.width * this.halo.v;\r\n    h = -img.height * this.halo.v;\r\n    ctxDrawImage(ctx, img, -w / 2, -h / 2, w, h);\r\n    ctx.restore();\r\n}\r\n;\r\nfunction draw_resurrection_halo() {\r\n    ctx.save();\r\n    ctx.translate(user.cam.x + this.x, user.cam.y + this.y);\r\n    ctx.rotate(this.angle);\r\n    this.halo.update();\r\n    img = sprite[SPRITE.RESURRECTION_GROUND][world.time];\r\n    w = -img.width * this.halo.v;\r\n    h = -img.height * this.halo.v;\r\n    ctxDrawImage(ctx, img, -w / 2, -h / 2, w, h);\r\n    ctx.restore();\r\n}\r\n;\r\nfunction draw_furnace_halo() {\r\n    ctx.save();\r\n    ctx.translate(user.cam.x + this.x, user.cam.y + this.y);\r\n    ctx.rotate(this.angle);\r\n    this.halo.update();\r\n    img = sprite[SPRITE.HALO_FIRE][world.time];\r\n    w = -img.width * this.halo.v;\r\n    h = -img.height * this.halo.v;\r\n    ctxDrawImage(ctx, img, -w / 2, -h / 2, w, h);\r\n    ctx.restore();\r\n}\r\n;\r\nfunction draw_fire_halo() {\r\n    ctx.save();\r\n    ctx.translate(user.cam.x + this.x, user.cam.y + this.y);\r\n    ctx.rotate(this.angle);\r\n    this.fire.update();\r\n    img = sprite[SPRITE.FIRE][world.time];\r\n    w = -img.width * this.fire.v;\r\n    h = -img.height * this.fire.v;\r\n    ctxDrawImage(ctx, img, -w / 2, -h / 2, w, h);\r\n    this.halo.update();\r\n    img = sprite[SPRITE.HALO_FIRE][world.time];\r\n    w = -img.width * this.halo.v;\r\n    h = -img.height * this.halo.v;\r\n    ctxDrawImage(ctx, img, -w / 2, -h / 2, w, h);\r\n    ctx.restore();\r\n}\r\n;\r\nfunction draw_player_effect(p) {\r\n    if (p.right >= 0) {\r\n        switch (p.right) {\r\n            case SPRITE.WATERING_CAN_FULL:\r\n                ctx.save();\r\n                var effect1 = -3 * p.attack.v / Math.PI;\r\n                if (p.attack.o) var effect2 = -Math.PI / 3 - (Math.PI / 3 + p.attack.v) / 3; else var effect2 = p.attack.v;\r\n                ctx.rotate(p.angle - Math.PI / 2 + effect2);\r\n                ctx.globalAlpha = effect1 / 1.2;\r\n                circle(ctx, -40 * scale, 90 * scale, 5 * scale);\r\n                fill_path(ctx, \"#0B6A84\");\r\n                ctx.globalAlpha = effect1 / 1.2;\r\n                circle(ctx, -52 * scale, 100 * scale, 8 * scale);\r\n                fill_path(ctx, \"#0B6A84\");\r\n                ctx.globalAlpha = effect1 / 1.2;\r\n                circle(ctx, -30 * scale, 95 * scale, 4 * scale);\r\n                fill_path(ctx, \"#0B6A84\");\r\n                ctx.globalAlpha = 1;\r\n                ctx.restore();\r\n                break;\r\n            case SPRITE.SHOVEL:\r\n            case SPRITE.SHOVEL_GOLD:\r\n            case SPRITE.SHOVEL_DIAMOND:\r\n            case SPRITE.SHOVEL_AMETHYST:\r\n                if (p.fly === 1) break;\r\n                if (p.dist_winter > 0) var id = SPRITE.ICE_SHOVEL_CO[world.time]; else if (p.dist_sand > 0 || p.dist_desert > 0) var id = SPRITE.SAND_SHOVEL_CO[world.time]; else var id = SPRITE.GRD_SHOVEL_CO[world.time];\r\n                var effect1 = -3 * p.attack.v / Math.PI;\r\n                if (p.attack.o) var effect2 = Math.max(0.5 - effect1 / 2 + 0.5, 0); else var effect2 = Math.max(effect1 / 2, 0);\r\n                if (effect2 === 0) p.angle_init = p.angle;\r\n                ctx.save();\r\n                ctx.rotate(p.angle_init - Math.PI / 2);\r\n                ctx.globalAlpha = effect1;\r\n                var effect3 = 25 * scale + effect2 * 25;\r\n                circle(ctx, effect3, 80 * scale, 15 * scale);\r\n                fill_path(ctx, id);\r\n                circle(ctx, -effect3, 80 * scale, 15 * scale);\r\n                fill_path(ctx, id);\r\n                ctx.globalAlpha = 1;\r\n                ctx.restore();\r\n                break;\r\n        }\r\n    }\r\n}\r\n;\r\nfunction draw_player_right_stuff_after(right, x, y) {\r\n    if (right >= 0) {\r\n        img = sprite[right][world.time];\r\n        switch (right) {\r\n            case SPRITE.WOOD_SHIELD:\r\n            case SPRITE.STONE_SHIELD:\r\n            case SPRITE.GOLD_SHIELD:\r\n                draw_image_transition_hd(right, img, -img.width / 4 - scale * (0 + x), -img.height / 4 + scale * (y + 35));\r\n                break;\r\n            case SPRITE.DIAMOND_SHIELD:\r\n                draw_image_transition_hd(right, img, -img.width / 4 - scale * (1 + x), -img.height / 4 + scale * (y + 45));\r\n                break;\r\n            case SPRITE.AMETHYST_SHIELD:\r\n            case SPRITE.REIDITE_SHIELD:\r\n                draw_image_transition_hd(right, img, -img.width / 4 - scale * (1 + x), -img.height / 4 + scale * (y + 40));\r\n                break;\r\n        }\r\n    }\r\n}\r\n;\r\n;\r\nfunction draw_player_right_stuff(right, x, y) {\r\n    if (right >= 0) {\r\n        img = sprite[right][world.time];\r\n        switch (right) {\r\n            case SPRITE.PICK:\r\n            case SPRITE.PICK_GOLD:\r\n            case SPRITE.PICK_DIAMOND:\r\n            case SPRITE.PICK_WOOD:\r\n            case SPRITE.PICK_AMETHYST:\r\n            case SPRITE.PICK_REIDITE:\r\n                draw_image_transition(right, img, -img.width / 2 - scale * (45 + x), -img.height / 2 + scale * (y + 22));\r\n                break;\r\n            case SPRITE.SWORD_WOOD:\r\n            case SPRITE.SWORD:\r\n            case SPRITE.SWORD_GOLD:\r\n            case SPRITE.SWORD_DIAMOND:\r\n                draw_image_transition_hd(right, img, -img.width / 4 - scale * (47 + x), -img.height / 4 + scale * (y + 45));\r\n                break;\r\n            case SPRITE.SWORD_AMETHYST:\r\n                draw_image_transition_hd(right, img, -img.width / 4 - scale * (52 + x), -img.height / 4 + scale * (y + 45));\r\n                break;\r\n            case SPRITE.REIDITE_SWORD:\r\n                draw_image_transition_hd(right, img, -img.width / 4 - scale * (47 + x), -img.height / 4 + scale * (y + 44));\r\n                break;\r\n            case SPRITE.PIRATE_SWORD:\r\n                draw_image_transition(right, img, -img.width / 2 - scale * (47 + x), -img.height / 2 + scale * (y + 44));\r\n                break;\r\n            case SPRITE.DRAGON_SWORD:\r\n                draw_image_transition(right, img, -img.width / 2 - scale * (40 + x), -img.height / 2 + scale * (y + 65));\r\n                break;\r\n            case SPRITE.WOOD_SPEAR:\r\n                draw_image_transition_hd(right, img, -img.width / 4 - scale * (37 + x), -img.height / 4 + scale * (y + 85));\r\n                break;\r\n            case SPRITE.REIDITE_SPEAR:\r\n                draw_image_transition_hd(right, img, -img.width / 4 - scale * (37 + x), -img.height / 4 + scale * (y + 85));\r\n                break;\r\n            case SPRITE.PITCHFORK2:\r\n            case SPRITE.PITCHFORK:\r\n                draw_image_transition_hd(right, img, -img.width / 4 - scale * (26 + x), -img.height / 4 + scale * (y + 77));\r\n                break;\r\n            case SPRITE.LAVA_SPEAR:\r\n                draw_image_transition_hd(right, img, -img.width / 4 - scale * (37 + x), -img.height / 4 + scale * (y + 85));\r\n                break;\r\n            case SPRITE.LAVA_SWORD:\r\n                draw_image_transition_hd(right, img, -img.width / 4 - scale * (47 + x), -img.height / 4 + scale * (y + 44));\r\n                break;\r\n            case SPRITE.WOOD_BOW:\r\n            case SPRITE.STONE_BOW:\r\n            case SPRITE.GOLD_BOW:\r\n            case SPRITE.DIAMOND_BOW:\r\n            case SPRITE.AMETHYST_BOW:\r\n            case SPRITE.REIDITE_BOW:\r\n            case SPRITE.DRAGON_BOW:\r\n                draw_image_transition_hd(right, img, -img.width / 4 - scale * (37 + x), -img.height / 4 + scale * (y + 30));\r\n                break;\r\n            case SPRITE.MACHETE:\r\n                draw_image_transition_hd(right, img, -img.width / 4 - scale * (47 + x), -img.height / 4 + scale * (y + 35));\r\n                break;\r\n            case SPRITE.WAND1:\r\n            case SPRITE.WAND2:\r\n                draw_image_transition_hd(right, img, -img.width / 4 - scale * (47 + x), -img.height / 4 + scale * (y + 40));\r\n                break;\r\n            case SPRITE.SADDLE:\r\n                draw_image_transition_hd(right, img, -img.width / 4 - scale * (47 + x), -img.height / 4 + scale * (y + 34));\r\n                break;\r\n            case SPRITE.SPEAR:\r\n            case SPRITE.GOLD_SPEAR:\r\n            case SPRITE.DIAMOND_SPEAR:\r\n            case SPRITE.AMETHYST_SPEAR:\r\n                draw_image_transition_hd(right, img, -img.width / 4 - scale * (37 + x), -img.height / 4 + scale * (y + 90));\r\n                break;\r\n            case SPRITE.CRAB_SPEAR:\r\n                draw_image_transition_hd(right, img, -img.width / 4 - scale * (40 + x), -img.height / 4 + scale * (y + 85));\r\n                break;\r\n            case SPRITE.DRAGON_SPEAR:\r\n                draw_image_transition(right, img, -img.width / 2 - scale * (39 + x), -img.height / 2 + scale * (y + 90));\r\n                break;\r\n            case SPRITE.HAMMER:\r\n            case SPRITE.HAMMER_GOLD:\r\n            case SPRITE.HAMMER_DIAMOND:\r\n            case SPRITE.HAMMER_AMETHYST:\r\n            case SPRITE.HAMMER_REIDITE:\r\n            case SPRITE.SUPER_HAMMER:\r\n                draw_image_transition(right, img, -img.width / 2 - scale * (46 + x), -img.height / 2 + scale * (y + 35));\r\n                break;\r\n            case SPRITE.WATERING_CAN_FULL:\r\n                draw_image_transition(right, img, -img.width / 2 - scale * (47 + x), -img.height / 2 + scale * (y + 54));\r\n                break;\r\n            case SPRITE.SHOVEL:\r\n            case SPRITE.SHOVEL_GOLD:\r\n            case SPRITE.SHOVEL_DIAMOND:\r\n            case SPRITE.SHOVEL_AMETHYST:\r\n                draw_image_transition(right, img, -img.width / 2 - scale * (46 + x), -img.height / 2 + scale * (y + 35));\r\n                break;\r\n            case SPRITE.SPANNER:\r\n                draw_image_transition(right, img, -img.width / 2 - scale * (47 + x), -img.height / 2 + scale * (y + 20));\r\n                break;\r\n        }\r\n    }\r\n}\r\n;\r\nvar draw_player_clothe = function (clothe) {\r\n    if (clothe > 0) {\r\n        var img = sprite[clothe][world.time];\r\n        switch (clothe) {\r\n            case SPRITE.WOOD_HELMET:\r\n                draw_image_transition(clothe, img, -img.width / 2 + 2 * scale, -img.height / 2 - scale * 5);\r\n                break;\r\n            case SPRITE.EARMUFFS:\r\n                draw_image_transition(clothe, img, -img.width / 2, -img.height / 2 - scale * 18);\r\n                break;\r\n            case SPRITE.COAT:\r\n                draw_image_transition(clothe, img, -img.width / 2, -img.height / 2 - scale * 10);\r\n                break;\r\n            case SPRITE.EXPLORER_HAT:\r\n                draw_image_transition(clothe, img, -img.width / 2, -img.height / 2 - scale * 19);\r\n                break;\r\n            case SPRITE.PIRATE_HAT:\r\n                draw_image_transition_hd(clothe, img, -img.width / 4, -img.height / 4 - 20 * scale);\r\n                break;\r\n            case SPRITE.STONE_HELMET:\r\n                draw_image_transition(clothe, img, -img.width / 2 - 1 * scale, -img.height / 2 - scale * 23);\r\n                break;\r\n            case SPRITE.GOLD_HELMET:\r\n                draw_image_transition(clothe, img, -img.width / 2, -img.height / 2 - scale * 5);\r\n                break;\r\n            case SPRITE.DIAMOND_HELMET:\r\n                draw_image_transition(clothe, img, -img.width / 2, -img.height / 2 - scale * 2);\r\n                break;\r\n            case SPRITE.AMETHYST_HELMET:\r\n                draw_image_transition(clothe, img, -img.width / 2 + 1.5 * scale, -img.height / 2 - 1 * scale);\r\n                break;\r\n            case SPRITE.REIDITE_HELMET:\r\n            case SPRITE.DIAMOND_PROTECTION:\r\n            case SPRITE.AMETHYST_PROTECTION:\r\n            case SPRITE.REIDITE_PROTECTION:\r\n            case SPRITE.TURBAN1:\r\n            case SPRITE.TURBAN2:\r\n            case SPRITE.PILOT_HELMET:\r\n            case SPRITE.LAVA_HELMET:\r\n            case SPRITE.WITCH:\r\n            case SPRITE.FUR_HAT:\r\n            case SPRITE.FLOWER_HAT:\r\n                draw_image_transition_hd(clothe, img, -img.width / 4, -img.height / 4 + 2 * scale);\r\n                break;\r\n            case SPRITE.CHRISTMAS_HAT:\r\n            case SPRITE.ELF_HAT:\r\n                draw_image_transition(clothe, img, -img.width / 2 - 5 * scale, -img.height / 2 - scale * 2);\r\n                break;\r\n            case SPRITE.CAP_SCARF:\r\n                draw_image_transition(clothe, img, -img.width / 2, -img.height / 2 - scale * 2);\r\n                break;\r\n            case SPRITE.WINTER_HOOD:\r\n                draw_image_transition(clothe, img, -img.width / 2, -img.height / 2 - scale * 2);\r\n                break;\r\n            case SPRITE.DIVING_MASK:\r\n                draw_image_transition(clothe, img, -img.width / 2, -img.height / 2 - scale * 2);\r\n                break;\r\n            case SPRITE.SUPER_DIVING_SUIT:\r\n                draw_image_transition(clothe, img, -img.width / 2 + 2 * scale, -img.height / 2);\r\n                break;\r\n            case SPRITE.DRAGON_HELMET:\r\n                draw_image_transition(clothe, img, -img.width / 2, -img.height / 2 - 5 * scale);\r\n                break;\r\n            case SPRITE.CROWN_GREEN:\r\n            case SPRITE.CROWN_ORANGE:\r\n            case SPRITE.CROWN_BLUE:\r\n                draw_image_transition(clothe, img, -img.width / 2 - 1 * scale, -img.height / 2);\r\n                break;\r\n            case SPRITE.HOOD:\r\n                draw_image_transition(clothe, img, -img.width / 2, -img.height / 2 + 2 * scale);\r\n                break;\r\n            case SPRITE.PEASANT:\r\n            case SPRITE.WINTER_PEASANT:\r\n                draw_image_transition(clothe, img, -img.width / 2, -img.height / 2 + 8 * scale);\r\n                break;\r\n            case SPRITE.CROWN_CRAB:\r\n                draw_image_transition(clothe, img, -img.width / 2, -img.height / 2 - 4 * scale);\r\n                break;\r\n        }\r\n    }\r\n};\r\nfunction draw_vehicle() {\r\n    if (this.ghost || this.vehicle === 0) return;\r\n    if (this.x != this.r.x || this.y != this.r.y) {\r\n        var angle = (Utils.get_angle_2(this.x, this.y, this.r.x, this.r.y) + Math.PI / 2) % (Math.PI * 2);\r\n        this.vehicle_fx2 = Utils.reduceAngle(angle, this.vehicle_fx2);\r\n        this.vehicle_fx2 = Utils.lerp(this.vehicle_fx2, angle, 0.018);\r\n    }\r\n    ctx.save();\r\n    ctx.translate(user.cam.x + this.x, user.cam.y + this.y);\r\n    ctx.rotate(this.vehicle_fx2);\r\n    if (this.vehicle === INV.BOAT) {\r\n        if (this.speed > 50 || this.vehicle_fx1 > 0) {\r\n            if (this.speed > 50) this.vehicle_fx1 = Math.min(1, this.vehicle_fx1 + delta); else this.vehicle_fx1 = Math.max(0, this.vehicle_fx1 - delta);\r\n            ctx.globalAlpha = this.vehicle_fx1;\r\n            var img = sprite[SPRITE.BOAT_WAVE][world.time];\r\n            draw_image_transition_hd(SPRITE.BOAT_WAVE, img, -img.width / 4, -img.height / 4);\r\n            ctx.globalAlpha = 1;\r\n        }\r\n        var img = sprite[SPRITE.BOAT][world.time];\r\n        draw_image_transition_hd(SPRITE.BOAT, img, -img.width / 4, -img.height / 4);\r\n    } else if (this.vehicle === INV.HAWK) {\r\n        this.vehicle_fx5 = Utils.lerp(this.vehicle_fx5, this.speed, 0.018);\r\n        this.vehicle_fx4.update();\r\n        if (this.speed > 85) this.vehicle_fx1 = Math.min(1, this.vehicle_fx1 + delta / 4); else this.vehicle_fx1 = Math.max(0.1, this.vehicle_fx1 - delta);\r\n        var img = sprite[SPRITE.HAWK_TAMED][world.time];\r\n        draw_image_transition_hd(SPRITE.HAWK_TAMED, img, -img.width / 4, -img.height / 4);\r\n        img = sprite[SPRITE.HAWK_WING_LEFT_TAMED][world.time];\r\n        w = -img.width;\r\n        h = -img.height;\r\n        ctx.save();\r\n        ctx.translate(-20 * scale, -20 * scale);\r\n        ctx.rotate(this.vehicle_fx4.v * this.vehicle_fx1);\r\n        ctxDrawImage(ctx, img, -w / 4, -h / 4, w / 2, h / 2);\r\n        ctx.restore();\r\n        img = sprite[SPRITE.HAWK_WING_RIGHT_TAMED][world.time];\r\n        ctx.save();\r\n        ctx.translate(20 * scale, -20 * scale);\r\n        ctx.rotate(-this.vehicle_fx4.v * this.vehicle_fx1);\r\n        ctxDrawImage(ctx, img, -w / 4, -h / 4, w / 2, h / 2);\r\n        ctx.restore();\r\n    } else if (this.vehicle === INV.BABY_LAVA) {\r\n        this.vehicle_fx5 = Utils.lerp(this.vehicle_fx5, this.speed, 0.018);\r\n        this.vehicle_fx4.update();\r\n        if (this.speed > 85) this.vehicle_fx1 = Math.min(1, this.vehicle_fx1 + delta / 4); else this.vehicle_fx1 = Math.max(0.1, this.vehicle_fx1 - delta);\r\n        var img = sprite[SPRITE.BABY_LAVA_TAMED][world.time];\r\n        draw_image_transition_hd(SPRITE.BABY_LAVA_TAMED, img, -img.width / 4, -img.height / 4);\r\n        img = sprite[SPRITE.BABY_LAVA_WING_LEFT_TAMED][world.time];\r\n        w = -img.width;\r\n        h = -img.height;\r\n        ctx.save();\r\n        ctx.translate(-40 * scale, -45 * scale);\r\n        ctx.rotate(this.vehicle_fx4.v * this.vehicle_fx1);\r\n        ctxDrawImage(ctx, img, -w / 4, -h / 4, w / 2, h / 2);\r\n        ctx.restore();\r\n        img = sprite[SPRITE.BABY_LAVA_WING_RIGHT_TAMED][world.time];\r\n        ctx.save();\r\n        ctx.translate(40 * scale, -45 * scale);\r\n        ctx.rotate(-this.vehicle_fx4.v * this.vehicle_fx1);\r\n        ctxDrawImage(ctx, img, -w / 4, -h / 4, w / 2, h / 2);\r\n        ctx.restore();\r\n    } else if (this.vehicle === INV.BABY_DRAGON) {\r\n        this.vehicle_fx5 = Utils.lerp(this.vehicle_fx5, this.speed, 0.018);\r\n        this.vehicle_fx4.update();\r\n        if (this.speed > 85) this.vehicle_fx1 = Math.min(1, this.vehicle_fx1 + delta / 4); else this.vehicle_fx1 = Math.max(0.1, this.vehicle_fx1 - delta);\r\n        var img = sprite[SPRITE.BABY_DRAGON_TAMED][world.time];\r\n        draw_image_transition_hd(SPRITE.BABY_DRAGON_TAMED, img, -img.width / 4, -img.height / 4);\r\n        img = sprite[SPRITE.BABY_DRAGON_WING_LEFT_TAMED][world.time];\r\n        w = -img.width;\r\n        h = -img.height;\r\n        ctx.save();\r\n        ctx.translate(-40 * scale, -45 * scale);\r\n        ctx.rotate(this.vehicle_fx4.v * this.vehicle_fx1);\r\n        ctxDrawImage(ctx, img, -w / 4, -h / 4, w / 2, h / 2);\r\n        ctx.restore();\r\n        img = sprite[SPRITE.BABY_DRAGON_WING_RIGHT_TAMED][world.time];\r\n        ctx.save();\r\n        ctx.translate(40 * scale, -45 * scale);\r\n        ctx.rotate(-this.vehicle_fx4.v * this.vehicle_fx1);\r\n        ctxDrawImage(ctx, img, -w / 4, -h / 4, w / 2, h / 2);\r\n        ctx.restore();\r\n    } else if (this.vehicle === INV.NIMBUS) {\r\n        this.vehicle_fx5 = Utils.lerp(this.vehicle_fx5, this.speed, 0.018);\r\n        var img = sprite[SPRITE.NIMBUS][world.time];\r\n        draw_image_transition_hd(SPRITE.NIMBUS, img, -img.width / 4, -img.height / 4);\r\n    } else if (this.vehicle === INV.PLANE) {\r\n        this.vehicle_fx5 = Utils.lerp(this.vehicle_fx5, this.speed, 0.018);\r\n        var img = sprite[SPRITE.PLANE][world.time];\r\n        draw_image_transition_hd(SPRITE.PLANE, img, -img.width / 4, -img.height / 4);\r\n    } else if (this.vehicle === INV.SLED) {\r\n        var img = sprite[SPRITE.SLED][world.time];\r\n        draw_image_transition_hd(SPRITE.SLED, img, -img.width / 4, -img.height / 4);\r\n    } else if (this.vehicle === INV.BABY_MAMMOTH) {\r\n        var img = sprite[SPRITE.BABY_MAMMOTH_TAMED][world.time];\r\n        if (this.speed > 85) this.vehicle_fx1 = Math.min(1, this.vehicle_fx1 + delta / 4); else this.vehicle_fx1 = Math.max(0, this.vehicle_fx1 - delta);\r\n        this.vehicle_fx3 += delta * 60;\r\n        if (this.vehicle_fx3 > 60) this.vehicle_fx3 -= 60;\r\n        var move = this.vehicle_fx1 * (-6 + 12 * (this.vehicle_fx3 < 30 ? this.vehicle_fx3 / 30 : 1 - (this.vehicle_fx3 - 30) / 30));\r\n        draw_image_transition_hd(SPRITE.BABY_MAMMOTH_TAMED, img, -img.width / 4, -img.height / 4 + move);\r\n    } else if (this.vehicle === INV.MOUNT_BOAR) {\r\n        var img = sprite[SPRITE.BOAR_TAMED][world.time];\r\n        if (this.speed > 85) this.vehicle_fx1 = Math.min(1, this.vehicle_fx1 + delta / 4); else this.vehicle_fx1 = Math.max(0, this.vehicle_fx1 - delta);\r\n        this.vehicle_fx3 += delta * 60;\r\n        if (this.vehicle_fx3 > 60) this.vehicle_fx3 -= 60;\r\n        var move = this.vehicle_fx1 * (-6 + 12 * (this.vehicle_fx3 < 30 ? this.vehicle_fx3 / 30 : 1 - (this.vehicle_fx3 - 30) / 30));\r\n        draw_image_transition_hd(SPRITE.BOAR_TAMED, img, -img.width / 4, -img.height / 4 + move);\r\n    } else if (this.vehicle === INV.CRAB_BOSS) {\r\n        var pi2 = Math.PI / 2;\r\n        var pi4 = Math.PI / 4;\r\n        var img = sprite[SPRITE.CRAB_BOSS_TAMED][world.time];\r\n        if (this.speed > 85) this.vehicle_fx1 = Math.min(1, this.vehicle_fx1 + delta / 4); else this.vehicle_fx1 = Math.max(0, this.vehicle_fx1 - delta);\r\n        this.vehicle_fx3 += delta * 60;\r\n        if (this.vehicle_fx3 > 60) this.vehicle_fx3 -= 60;\r\n        var move = this.vehicle_fx1 * (-6 + 12 * (this.vehicle_fx3 < 30 ? this.vehicle_fx3 / 30 : 1 - (this.vehicle_fx3 - 30) / 30));\r\n        draw_image_transition_hd(SPRITE.CRAB_BOSS_TAMED, img, -img.width / 4 + move, -img.height / 4);\r\n        ctx.restore();\r\n        ctx.save();\r\n        ctx.translate(user.cam.x + this.x, user.cam.y + this.y);\r\n        ctx.rotate(Math.PI + this.vehicle_fx2 + pi4);\r\n        ctx.translate(120, move);\r\n        ctx.rotate(pi2);\r\n        img = sprite[SPRITE.CRAB_BOSS_CLAW_LEFT][world.time];\r\n        w = -img.width;\r\n        h = -img.height;\r\n        ctxDrawImage(ctx, img, -w / 2, -h / 2, w, h);\r\n        ctx.restore();\r\n        ctx.save();\r\n        ctx.translate(user.cam.x + this.x, user.cam.y + this.y);\r\n        ctx.rotate(Math.PI + this.vehicle_fx2 + pi2 + pi4);\r\n        ctx.translate(120, move);\r\n        ctx.rotate(pi2);\r\n        img = sprite[SPRITE.CRAB_BOSS_CLAW_RIGHT][world.time];\r\n        w = -img.width;\r\n        h = -img.height;\r\n        ctxDrawImage(ctx, img, -w / 2, -h / 2, w, h);\r\n    }\r\n    ctx.restore();\r\n}\r\n;\r\n__EFFECT_HURT__ = 0;\r\n__EFFECT_HEAL__ = 1;\r\n__EFFECT_COLD__ = 2;\r\n__EFFECT_HUNGER__ = 3;\r\n__EFFECT_BOX__ = 4;\r\n__IMAGE_EFFECT__ = [[], [], [], [], []];\r\n__IMAGE_EFFECT_COLOR__ = [\"#BB0000\", \"#00BB00\", \"#1CE7E0\", \"#DBE71C\", \"#BB0000\"];\r\nfunction get_image_effect(image_id, image, effect) {\r\n    if (image.tryLoad() !== 1) return image;\r\n    var image_effect = __IMAGE_EFFECT__[effect][image_id];\r\n    if (image_effect === undefined) {\r\n        image_effect = document.createElement(\"canvas\");\r\n        var context = image_effect.getContext(\"2d\");\r\n        var width = image.width;\r\n        var height = image.height;\r\n        image_effect.width = width;\r\n        image_effect.height = height;\r\n        context.drawImage(image, 0, 0);\r\n        context.globalCompositeOperation = \"source-in\";\r\n        context.fillStyle = __IMAGE_EFFECT_COLOR__[effect];\r\n        context.fillRect(0, 0, width, height);\r\n        __IMAGE_EFFECT__[effect][image_id] = image_effect;\r\n    }\r\n    return image_effect;\r\n}\r\n;\r\n;\r\nfunction draw_player() {\r\n    var isShield = 0;\r\n    switch (this.right) {\r\n        case SPRITE.WOOD_SHIELD:\r\n        case SPRITE.STONE_SHIELD:\r\n        case SPRITE.GOLD_SHIELD:\r\n        case SPRITE.DIAMOND_SHIELD:\r\n        case SPRITE.AMETHYST_SHIELD:\r\n        case SPRITE.REIDITE_SHIELD:\r\n            var isShield = 1;\r\n            break;\r\n    }\r\n    if (this.ghost) {\r\n        for (var i = 0; i < this.bubbles.length; i++) {\r\n            var b = this.bubbles[i];\r\n            if (b.life > 0.5) var alpha = 1 - (b.life - 0.5) * 2; else var alpha = b.life * 2;\r\n            ctx.globalAlpha = alpha;\r\n            var img = sprite[SPRITE.BUBBLES][world.time][b.id];\r\n            ctxDrawImage(ctx, img, user.cam.x + b.x - img.width / 2, user.cam.y + b.y - img.height / 2);\r\n            ctx.globalAlpha = 1;\r\n        }\r\n        return;\r\n    }\r\n    ctx.save();\r\n    ctx.translate(user.cam.x + this.x, user.cam.y + this.y);\r\n    world.dist_from_biomes(this);\r\n    if (this.action & STATE.ATTACK) {\r\n        draw_player_effect(this);\r\n    }\r\n    ctx.save();\r\n    ctx.rotate(this.angle - Math.PI / 2);\r\n    if (!(this.action & STATE.ATTACK)) {\r\n        if (this.action & STATE.IDLE || this.vehicle !== 0) {\r\n            this.idle.update();\r\n        } else if (this.action & STATE.WALK) {\r\n            this.walk.update();\r\n        }\r\n    }\r\n    var x = this.idle.v;\r\n    var y = this.walk.v;\r\n    var spriteid;\r\n    if (this.clothe === SPRITE.WINTER_HOOD) {\r\n        img = sprite[SPRITE.GLOVES_HOOD][world.time];\r\n        spriteid = SPRITE.GLOVES_HOOD;\r\n    } else if (this.clothe === SPRITE.DIAMOND_PROTECTION) {\r\n        img = sprite[SPRITE.GLOVES_DIAMOND_PROTECTION][world.time];\r\n        spriteid = SPRITE.GLOVES_DIAMOND_PROTECTION;\r\n    } else if (this.clothe === SPRITE.AMETHYST_PROTECTION) {\r\n        img = sprite[SPRITE.GLOVES_AMETHYST_PROTECTION][world.time];\r\n        spriteid = SPRITE.GLOVES_AMETHYST_PROTECTION;\r\n    } else if (this.clothe === SPRITE.REIDITE_PROTECTION) {\r\n        img = sprite[SPRITE.GLOVES_REIDITE_PROTECTION][world.time];\r\n        spriteid = SPRITE.GLOVES_REIDITE_PROTECTION;\r\n    } else if (this.superzombie) {\r\n        img = sprite[SPRITE.ZOMBIE_HAND][world.time];\r\n        spriteid = SPRITE.ZOMBIE_HAND;\r\n    } else {\r\n        img = sprite[SPRITE.HAND][this.skin][world.time];\r\n        spriteid = SPRITE.HAND;\r\n    }\r\n    shadow = sprite[SPRITE.HAND_SHADOW][world.time];\r\n    var hand = img;\r\n    var handid = spriteid;\r\n    if (this.action & STATE.ATTACK) {\r\n        if (this.attack.update() && this.attack.o == false) {\r\n            this.hand = !this.hand;\r\n            this.action -= STATE.ATTACK;\r\n            if (this.uid == user.uid) user.control.mouse = 0;\r\n        }\r\n        if (this.right >= 0) this.hand = true;\r\n        var right = this.hand ? this.attack.v : -this.attack.v / 3;\r\n        var left = this.hand ? this.attack.v / 3 : -this.attack.v;\r\n        if (this.superzombie) {\r\n            ctx.save();\r\n            ctx.rotate(right);\r\n            draw_image_transition(spriteid, img, -img.width / 2 - scale * (66 + x), -img.height / 2 + (5 + y) * scale);\r\n            ctx.restore();\r\n            ctx.save();\r\n            ctx.rotate(left);\r\n            draw_image_transition(spriteid, img, -img.width / 2 + scale * (66 + x), -img.height / 2 + (5 + y) * scale);\r\n            ctx.restore();\r\n        } else {\r\n            if (isShield === 0) {\r\n                if (this.right === SPRITE.WOOD_BOW) right = -Utils.ease_out_quad(-right);\r\n                ctx.save();\r\n                ctx.rotate(right);\r\n                draw_image_transition(SPRITE.HAND_SHADOW, shadow, -shadow.width / 2 - scale * (49 + x), -shadow.height / 2 + (15 + y) * scale);\r\n                if (this.right === SPRITE.BOOK) {\r\n                    var _img = sprite[this.right][this.book][world.time];\r\n                    draw_image_transition_hd_2(this.right, this.book, _img, -_img.width / 4 - scale * (62 + x), -_img.height / 4 + scale * (y + 18));\r\n                } else draw_player_right_stuff(this.right, x, y);\r\n                if (spriteid >= SPRITE.GLOVES_DIAMOND_PROTECTION) draw_image_transition_hd(spriteid, img, -img.width / 4 - scale * (49 + x), -img.height / 4 + (11 + y) * scale); else if (spriteid !== SPRITE.GLOVES_HOOD) {\r\n                    draw_image_transition_hd_2(spriteid, this.skin, img, -img.width / 4 - scale * (49 + x), -img.height / 4 + (11 + y) * scale);\r\n                } else draw_image_transition(spriteid, img, -img.width / 2 - scale * (49 + x), -img.height / 2 + (11 + y) * scale);\r\n                ctx.restore();\r\n                ctx.save();\r\n                ctx.rotate(left);\r\n                draw_image_transition(SPRITE.HAND_SHADOW, shadow, -shadow.width / 2 + scale * (49 + x), -shadow.height / 2 + (15 + y) * scale);\r\n                if (spriteid >= SPRITE.GLOVES_DIAMOND_PROTECTION) draw_image_transition_hd(spriteid, img, -img.width / 4 + scale * (49 + x), -img.height / 4 + (11 + y) * scale); else if (spriteid !== SPRITE.GLOVES_HOOD) draw_image_transition_hd_2(spriteid, this.skin, img, -img.width / 4 + scale * (49 + x), -img.height / 4 + (11 + y) * scale); else draw_image_transition(spriteid, img, -img.width / 2 + scale * (49 + x), -img.height / 2 + (11 + y) * scale);\r\n                ctx.restore();\r\n            }\r\n        }\r\n    } else {\r\n        if (this.superzombie) {\r\n            draw_image_transition(spriteid, img, -img.width / 2 - scale * (66 + x), -img.height / 2 + (5 + y) * scale);\r\n            draw_image_transition(spriteid, img, -img.width / 2 + scale * (66 + x), -img.height / 2 + (5 + y) * scale);\r\n        } else {\r\n            if (isShield === 0) {\r\n                draw_image_transition(SPRITE.HAND_SHADOW, shadow, -shadow.width / 2 - scale * (49 + x), -shadow.height / 2 + (15 + y) * scale);\r\n                if (this.right === SPRITE.BOOK) {\r\n                    var _img = sprite[this.right][this.book][world.time];\r\n                    draw_image_transition_hd_2(this.right, this.book, _img, -_img.width / 4 - scale * (62 + x), -_img.height / 4 + scale * (y + 18));\r\n                } else draw_player_right_stuff(this.right, x, y);\r\n                if (spriteid >= SPRITE.GLOVES_DIAMOND_PROTECTION) draw_image_transition_hd(spriteid, img, -img.width / 4 - scale * (49 + x), -img.height / 4 + (11 + y) * scale); else if (spriteid !== SPRITE.GLOVES_HOOD) draw_image_transition_hd_2(spriteid, this.skin, img, -img.width / 4 - scale * (49 + x), -img.height / 4 + (11 + y) * scale); else draw_image_transition(spriteid, img, -img.width / 2 - scale * (49 + x), -img.height / 2 + (11 + y) * scale);\r\n                draw_image_transition(SPRITE.HAND_SHADOW, shadow, -shadow.width / 2 + scale * (49 + x), -shadow.height / 2 + (15 + y) * scale);\r\n                if (spriteid >= SPRITE.GLOVES_DIAMOND_PROTECTION) draw_image_transition_hd(spriteid, img, -img.width / 4 + scale * (49 + x), -img.height / 4 + (11 + y) * scale); else if (spriteid !== SPRITE.GLOVES_HOOD) draw_image_transition_hd_2(spriteid, this.skin, img, -img.width / 4 + scale * (49 + x), -img.height / 4 + (11 + y) * scale); else draw_image_transition(spriteid, img, -img.width / 2 + scale * (49 + x), -img.height / 2 + (11 + y) * scale);\r\n            }\r\n        }\r\n    }\r\n    if (this.bag && this.clothe < 1) {\r\n        var img = sprite[SPRITE.BAG][this.baglook][world.time];\r\n        draw_image_transition_hd_2(SPRITE.BAG, this.baglook, img, -img.width / 4, -img.height / 4 - 39 * scale);\r\n    }\r\n    if (this.superzombie) {\r\n        var img = sprite[SPRITE.ZOMBIE_BODY][world.time];\r\n        draw_image_transition(SPRITE.ZOMBIE_BODY, img, -img.width / 2, -img.height / 2);\r\n        this.move_head.update();\r\n        img = sprite[SPRITE.ZOMBIE_HEAD][world.time];\r\n        draw_image_transition(SPRITE.ZOMBIE_HEAD, img, -img.width / 2, -img.height / 2 + this.move_head.v);\r\n    } else {\r\n        var img = sprite[SPRITE.BODY][this.skin][world.time];\r\n        if (this.clothe !== SPRITE.WINTER_HOOD) {\r\n            draw_image_transition_hd_2(SPRITE.BODY, this.skin, img, -img.width / 4, -img.height / 4);\r\n            if (this.accessory > 0) {\r\n                var img = sprite[SPRITE.ACCESSORY][this.accessory][world.time];\r\n                draw_image_transition_hd_2(SPRITE.ACCESSORY, this.accessory, img, -img.width / 4, -img.height / 4);\r\n            }\r\n        }\r\n    }\r\n    if (this.action & STATE.HEAL) {\r\n        if (this.heal.update() && this.heal.o == false) this.action -= STATE.HEAL;\r\n        ctx.globalAlpha = 0.6 - this.heal.v;\r\n        if (this.superzombie) {\r\n            var img = sprite[SPRITE.ZOMBIE_HEAL];\r\n            ctxDrawImage(ctx, img, -img.width / 2, -img.height / 2);\r\n        } else {\r\n            var img = get_image_effect(this.skin, sprite[SPRITE.BODY][this.skin][0], __EFFECT_HEAL__);\r\n            ctxDrawImage(ctx, img, img.width / 4, img.height / 4, -img.width / 2, -img.height / 2);\r\n        }\r\n        ctx.globalAlpha = 1;\r\n    }\r\n    if (this.action & STATE.WEB) {\r\n        if (this.web.update() && this.web.o == false) this.action -= STATE.WEB;\r\n        ctx.globalAlpha = 0.6 - this.web.v;\r\n        var img = sprite[SPRITE.WEB];\r\n        ctxDrawImage(ctx, img, -img.width / 2, -img.height / 2);\r\n        ctx.globalAlpha = 1;\r\n    }\r\n    if (this.action & STATE.HURT) {\r\n        if (this.hit.update() && this.hit.o == false) this.action -= STATE.HURT;\r\n        ctx.globalAlpha = 0.6 - this.hit.v;\r\n        if (this.superzombie) {\r\n            var img = sprite[SPRITE.ZOMBIE_HURT];\r\n            ctxDrawImage(ctx, img, -img.width / 2, -img.height / 2);\r\n        } else {\r\n            var img = get_image_effect(this.skin, sprite[SPRITE.BODY][this.skin][0], __EFFECT_HURT__);\r\n            ctxDrawImage(ctx, img, img.width / 4, img.height / 4, -img.width / 2, -img.height / 2);\r\n        }\r\n        ctx.globalAlpha = 1;\r\n    }\r\n    if (this.action & STATE.COLD) {\r\n        if (this.freeze.update() && this.freeze.o == false) this.action -= STATE.COLD;\r\n        ctx.globalAlpha = 0.6 - this.freeze.v;\r\n        var img = get_image_effect(this.skin, sprite[SPRITE.BODY][this.skin][0], __EFFECT_COLD__);\r\n        ctxDrawImage(ctx, img, img.width / 4, img.height / 4, -img.width / 2, -img.height / 2);\r\n        ctx.globalAlpha = 1;\r\n    }\r\n    if (this.action & STATE.HUNGER) {\r\n        if (this.starve.update() && this.starve.o == false) this.action -= STATE.HUNGER;\r\n        ctx.globalAlpha = 0.6 - this.starve.v;\r\n        if (this.superzombie) {\r\n            var img = sprite[SPRITE.ZOMBIE_HUNGER];\r\n            ctxDrawImage(ctx, img, -img.width / 2, -img.height / 2);\r\n        } else {\r\n            var img = get_image_effect(this.skin, sprite[SPRITE.BODY][this.skin][0], __EFFECT_HUNGER__);\r\n            ctxDrawImage(ctx, img, img.width / 4, img.height / 4, -img.width / 2, -img.height / 2);\r\n        }\r\n        ctx.globalAlpha = 1;\r\n    }\r\n    draw_player_clothe(this.clothe);\r\n    if (isShield === 1) {\r\n        if (this.action & STATE.ATTACK) x += this.attack.v * 15;\r\n        draw_image_transition(SPRITE.HAND_SHADOW, shadow, -shadow.width / 2 - scale * 26, -shadow.height / 2 + (31 + y + x) * scale);\r\n        if (handid >= SPRITE.GLOVES_DIAMOND_PROTECTION) draw_image_transition_hd(handid, hand, -hand.width / 4 - scale * 26, -hand.height / 4 + (27 + y + x) * scale); else if (handid !== SPRITE.GLOVES_HOOD) draw_image_transition_hd_2(handid, this.skin, hand, -hand.width / 4 - scale * 26, -hand.height / 4 + (27 + y + x) * scale); else draw_image_transition(handid, hand, -hand.width / 2 - scale * 26, -hand.height / 2 + (27 + y + x) * scale);\r\n        draw_image_transition(SPRITE.HAND_SHADOW, shadow, -shadow.width / 2 + scale * 26, -shadow.height / 2 + (31 + y + x) * scale);\r\n        if (handid >= SPRITE.GLOVES_DIAMOND_PROTECTION) draw_image_transition_hd(handid, hand, -hand.width / 4 + scale * 26, -hand.height / 4 + (27 + y + x) * scale); else if (handid !== SPRITE.GLOVES_HOOD) draw_image_transition_hd_2(handid, this.skin, hand, -hand.width / 4 + scale * 26, -hand.height / 4 + (27 + y + x) * scale); else draw_image_transition(handid, hand, -hand.width / 2 + scale * 26, -hand.height / 2 + (27 + y + x) * scale);\r\n        draw_player_right_stuff_after(this.right, 0, y + x);\r\n    }\r\n    ctx.restore();\r\n    if (this.clothe !== SPRITE.HOOD && this.clothe !== SPRITE.WINTER_HOOD) {\r\n        if (this.dist_winter > 0) {\r\n            if (!this.player.label_winter) this.player.label_winter = create_text(scale, this.player.nickname + this.pid, 20, \"#187484\", \"#000\", 2, null, null, 300 * scale);\r\n            var img = this.player.label_winter;\r\n        } else {\r\n            if (!this.player.label) this.player.label = create_text(scale, this.player.nickname + this.pid, 20, \"#FFF\", \"#000\", 2, null, null, 300 * scale);\r\n            var img = this.player.label;\r\n        }\r\n        if (world.day == SPRITE.NIGHT) ctx.globalAlpha = 0.5;\r\n        var x = Math.floor(-img.width / 2);\r\n        var y = Math.floor(-img.height / 2 - 70 * scale);\r\n        ctxDrawImage(ctx, img, x, y);\r\n        if (this.player.level > 0) {\r\n            var x2 = x + img.width + 5;\r\n            img = sprite[SPRITE.VERIFIED];\r\n            if (PLAYER_LEVEL[this.player.level] === undefined) PLAYER_LEVEL[this.player.level] = create_text(scale, \"[\" + this.player.level + \"]\", 20, \"#F9E8A2\", \"#000\", 2, null, null, 50 * scale);\r\n            ctxDrawImage(ctx, PLAYER_LEVEL[this.player.level], x2, y);\r\n        }\r\n        ctx.globalAlpha = 1;\r\n    } else {\r\n        var y = Math.floor(-70 * scale);\r\n        var x = Math.floor(sprite[SPRITE.ICON_MEMBER].width / 1.5);\r\n    }\r\n    if (user.in_team(this.pid)) {\r\n        if (this.pid == user.team[0]) var img = sprite[SPRITE.ICON_LEADER]; else var img = sprite[SPRITE.ICON_MEMBER];\r\n        ctxDrawImage(ctx, img, x - img.width - 5, y - 6);\r\n    }\r\n    ctx.restore();\r\n}\r\n;\r\nfunction draw_alert_ghost() {\r\n    if (this.enabled && this.delay >= 0) {\r\n        var real = (new Date).getTime();\r\n        var time = real - this.delay;\r\n        var alpha = time % 1e3 / 1e3;\r\n        if (alpha > 0.5) {\r\n            alpha = 1 - (alpha - 0.5) * 2;\r\n        } else alpha *= 2;\r\n        time = Math.floor(time / 1e3);\r\n        if (time < WORLD.GHOST_DELAY) {\r\n            time = WORLD.GHOST_DELAY - time;\r\n            if (!this.label) {\r\n                this.label = create_text(scale, \" seconds before you die\", 40, \"#660000\", null, null, null, null, null, \"#000\", 10);\r\n            }\r\n            if (this.now != time || !this.sec) {\r\n                this.now = time;\r\n                this.sec = create_text(scale, \"\" + time, 40, \"#660000\", null, null, null, null, null, \"#000\", 10);\r\n            }\r\n            ctxDrawImage(ctx, this.label, (canw - this.label.width) / 2, 100 * scale);\r\n            ctx.globalAlpha = alpha;\r\n            ctxDrawImage(ctx, this.sec, (canw - this.label.width) / 2 - this.sec.width + 15 * scale, 100 * scale);\r\n            ctx.globalAlpha = 1;\r\n        }\r\n    }\r\n}\r\n;\r\nfunction draw_welcome_message() {\r\n    if (this.message !== undefined) {\r\n        var y = user.inv.can_select.length > 0 ? -95 : 0;\r\n        ctxDrawImage(ctx, this.message, 0, canh - this.message.height + y);\r\n    }\r\n}\r\n;\r\n;\r\nfunction draw_alert(color, stroke) {\r\n    if (this.text) {\r\n        if (!this.timeout.o) ctx.globalAlpha = 1; else ctx.globalAlpha = 1 - this.timeout.v;\r\n        if (!this.label) this.label = create_text(scale, this.text, 40, color, null, null, null, null, null, stroke, 10);\r\n        ctxDrawImage(ctx, this.label, (canw - this.label.width) / 2, 50 * scale);\r\n        ctx.globalAlpha = 1;\r\n        if (this.timeout.update() && this.timeout.o == false) {\r\n            this.text = this.list.shift();\r\n            this.label = null;\r\n        }\r\n    }\r\n}\r\n;\r\nfunction draw_chat() {\r\n    ctx.save();\r\n    ctx.translate(user.cam.x + this.x, user.cam.y + this.y);\r\n    if (this.text.length > 0) {\r\n        for (var i = 0; i < this.text.length && i < 2; i++) {\r\n            if (!this.label[i]) {\r\n                this.label[i] = create_message(scale, this.text[i]);\r\n                this.text_effect[i] = 0;\r\n                this.text_move[i] = 0;\r\n            }\r\n            if (i === 1) this.text_move[0] = Utils.ease_in_out_quad(this.text_ease) * 30;\r\n        }\r\n        this.text_effect[0] += delta;\r\n        if (this.text.length > 1) {\r\n            this.text_ease = Math.min(this.text_ease + delta, 1);\r\n            if (this.text_effect[0] > 1 && this.text_ease > 0.5) this.text_effect[1] += delta;\r\n        }\r\n        for (var i = 0; i < this.text.length && i < 2; i++) {\r\n            var effect = this.text_effect[i];\r\n            if (effect > 0) {\r\n                if (effect < 0.25) ctx.globalAlpha = effect * 4; else if (effect > 3.75) ctx.globalAlpha = Math.max((4 - effect) * 4, 0); else ctx.globalAlpha = 1;\r\n                ctxDrawImage(ctx, this.label[i], -this.label[i].width / 2, -this.text_move[i] + -this.label[i].height / 2 - 110 * scale);\r\n            }\r\n        }\r\n        if (this.text_effect[0] > 4) {\r\n            this.text_effect.shift();\r\n            this.text.shift();\r\n            this.text_move.shift();\r\n            this.label.shift();\r\n            this.text_ease = 0;\r\n        }\r\n    }\r\n    ctx.restore();\r\n}\r\n;\r\nvar __effect = 0;\r\nfunction draw_objects_effect(is, ie, js, je, id, t, max, min) {\r\n    if (min === undefined) min = 0;\r\n    for (var k = max; k >= min; k--) {\r\n        for (var i = is; i <= ie; i++) {\r\n            for (var j = js; j <= je; j++) {\r\n                var tile = MAP.tiles[i][j];\r\n                if (!tile || !tile[t]) continue;\r\n                var o = tile[t][k];\r\n                if (o === undefined) continue;\r\n                for (var l = 0; l < o.length; l++) {\r\n                    var object = o[l];\r\n                    var img = sprite[id][world.time][k];\r\n                    var _effect = (__effect + (i + j) * 3) % 60;\r\n                    var effect = _effect < 30 ? _effect / 30 : 1 - (_effect - 30) / 30;\r\n                    var w = -img.width * (1 + 0.9 * effect / 30);\r\n                    var h = -img.height * (1 + 0.9 * effect / 30);\r\n                    _effect = (__effect + (i + j) * 7) % 60;\r\n                    effect = _effect < 30 ? _effect / 30 : 1 - (_effect - 30) / 30;\r\n                    var _alpha = ctx.globalAlpha;\r\n                    ctx.globalAlpha = (0.9 + effect * 0.1) * _alpha;\r\n                    ctxDrawImage(ctx, img, user.cam.x + object.x - w / 2, user.cam.y + object.y - h / 2, w, h);\r\n                    ctx.globalAlpha = _alpha;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n;\r\nfunction draw_breath_objects(is, ie, js, je, id, t, max, min) {\r\n    if (min === undefined) min = 0;\r\n    world.breath[id].update();\r\n    for (var k = max; k >= min; k--) {\r\n        for (var i = is; i <= ie; i++) {\r\n            for (var j = js; j <= je; j++) {\r\n                var tile = MAP.tiles[i][j];\r\n                if (!tile || !tile[t]) continue;\r\n                var o = tile[t][k];\r\n                if (o === undefined) continue;\r\n                for (var l = 0; l < o.length; l++) {\r\n                    var object = o[l];\r\n                    if (object.update) {\r\n                        if (object.hit.update() && object.hit.o == false) {\r\n                            object.update = false;\r\n                        }\r\n                        var v = (1 - object.hit.v) * delta * 600 * scale;\r\n                        var x = Math.cos(object.angle) * v;\r\n                        var y = Math.sin(object.angle) * v;\r\n                    } else {\r\n                        var x = 0;\r\n                        var y = 0;\r\n                    }\r\n                    ;\r\n                    var img = sprite[id][world.time][k];\r\n                    var w = -img.width * world.breath[id].v;\r\n                    var h = -img.height * world.breath[id].v;\r\n                    ctxDrawImage(ctx, img, user.cam.x + object.x - w / 2 + x, user.cam.y + object.y - h / 2 + y, w, h);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n;\r\nvar randweb = [];\r\nfor (var i = 0; i < 100; i++) {\r\n    var r = 1;\r\n    if (Math.random() < 0.25) r = 0;\r\n    randweb.push(r);\r\n}\r\n_scale_object = 1;\r\nfunction draw_map_objects(is, ie, js, je, id, t, max, min, rand) {\r\n    if (min === undefined) min = 0;\r\n    for (var k = max; k >= min; k--) {\r\n        for (var i = is; i <= ie; i++) {\r\n            for (var j = js; j <= je; j++) {\r\n                if (rand > 0 && randweb[(i + j * rand) % randweb.length] === 1) continue;\r\n                var tile = MAP.tiles[i][j];\r\n                if (tile === undefined || tile[t] === undefined) continue;\r\n                var o = tile[t][k];\r\n                if (o === undefined) continue;\r\n                for (var l = 0; l < o.length; l++) {\r\n                    var object = o[l];\r\n                    if (object.update) {\r\n                        if (object.hit.update() && object.hit.o == false) {\r\n                            object.update = false;\r\n                        }\r\n                        var v = (1 - object.hit.v) * delta * 600 * scale;\r\n                        var x = Math.cos(object.angle) * v;\r\n                        var y = Math.sin(object.angle) * v;\r\n                    } else {\r\n                        var x = 0;\r\n                        var y = 0;\r\n                    }\r\n                    ;\r\n                    var img = sprite[id][world.time][k];\r\n                    ctxDrawImage(ctx, img, user.cam.x + object.x - img.width / (2 * _scale_object) + x, user.cam.y + object.y - img.height / (2 * _scale_object) + y, img.width / _scale_object, img.height / _scale_object);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n;\r\nfunction draw_map_decorations(is, ie, js, je, id, t, max, min, rand) {\r\n    if (min === undefined) min = 0;\r\n    for (var i = is; i <= ie; i++) {\r\n        for (var j = js; j <= je; j++) {\r\n            var tile = MAP.tiles[i][j];\r\n            if (tile === undefined || tile[t] === undefined) continue;\r\n            var o = tile[t];\r\n            if (o === undefined) continue;\r\n            if (o.scale === 1) {\r\n                var img = sprite[id][world.time][o._id];\r\n                ctx.save();\r\n                ctx.translate(user.cam.x + o.x, user.cam.y + o.y);\r\n                ctx.rotate(o.angle);\r\n                ctxDrawImage(ctx, img, -img.width / 4, -img.height / 4, img.width / 2, img.height / 2);\r\n                ctx.restore();\r\n            } else if (o.scale === 3) {\r\n                for (var k = 0; k < o.p.length; k++) {\r\n                    ctx.save();\r\n                    ctx.translate(user.cam.x + o.x, user.cam.y + o.y);\r\n                    ctx.rotate(o.p[k].angle);\r\n                    var img = sprite[id][world.time][o.p[k]._id];\r\n                    ctxDrawImage(ctx, img, -img.width / 3 + o.p[k].x, -img.height / 3 + o.p[k].y, img.width / 1.5, img.height / 1.5);\r\n                    ctx.restore();\r\n                }\r\n            } else {\r\n                var img = sprite[id][world.time][o._id];\r\n                ctx.save();\r\n                ctx.translate(user.cam.x + o.x, user.cam.y + o.y);\r\n                ctx.rotate(o.angle);\r\n                ctxDrawImage(ctx, img, -img.width / 2, -img.height / 2, img.width, img.height);\r\n                ctx.restore();\r\n            }\r\n        }\r\n    }\r\n}\r\n;\r\nfunction draw_lava_effect(is, ie, js, je, id, t, max, min, rand) {\r\n    if (min === undefined) min = 0;\r\n    for (var k = max; k >= min; k--) {\r\n        for (var i = is; i <= ie; i++) {\r\n            for (var j = js; j <= je; j++) {\r\n                var tile = MAP.tiles[i][j];\r\n                if (tile === undefined || tile[t] === undefined) continue;\r\n                var o = tile[t][k];\r\n                if (o === undefined) continue;\r\n                for (var l = 0; l < o.length; l++) {\r\n                    var object = o[l];\r\n                    if (object.update) {\r\n                        if (object.hit.update() && object.hit.o == false) {\r\n                            object.update = false;\r\n                        }\r\n                        var v = (1 - object.hit.v) * delta * 600 * scale;\r\n                        var x = Math.cos(object.angle) * v;\r\n                        var y = Math.sin(object.angle) * v;\r\n                    } else {\r\n                        var x = 0;\r\n                        var y = 0;\r\n                    }\r\n                    ;\r\n                    for (var _k = 0; _k < _bubble[k].amount; _k++) {\r\n                        if (world.lava[_k].last !== old_timestamp) {\r\n                            world.lava[_k].update();\r\n                            world.lava[_k].last = old_timestamp;\r\n                        }\r\n                        var img = sprite[SPRITE.LAVA_BUBBLE][world.time][_bubble[k].pos[_k].t];\r\n                        var w = -img.width * world.lava[_k].v;\r\n                        var h = -img.height * world.lava[_k].v;\r\n                        ctxDrawImage(ctx, img, user.cam.x + object.x - w / 4 + x + _bubble[k].pos[_k].x, user.cam.y + object.y - h / 4 + y + _bubble[k].pos[_k].y, w / 2, h / 2);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n;\r\n_bubble = [{amount: 10, pos: [{x: -128, y: -20, t: 0}, {x: -86, y: -4, t: 1}, {x: -60, y: -74, t: 2}, {x: -22, y: -144, t: 0}, {x: -58, y: 86, t: 0}, {x: 3, y: -30, t: 0}, {x: 65, y: -115, t: 1}, {x: 118, y: -50, t: 0}, {x: 73, y: 15, t: 1}, {x: 67, y: 79, t: 0}]}, {amount: 5, pos: [{x: -45, y: -26, t: 0}, {x: -45, y: 20, t: 2}, {x: 10, y: -60, t: 1}, {x: 52, y: -17, t: 1}, {x: 14, y: 45, t: 0}]}, {amount: 3, pos: [{x: -30, y: 3, t: 2}, {x: 7, y: -38, t: 2}, {x: 37, y: 5, t: 2}]}, {amount: 11, pos: [{x: -74, y: -87, t: 2}, {x: -11, y: -10, t: 1}, {x: -99, y: 17, t: 1}, {x: -66, y: 84, t: 0}, {x: -55, y: 123, t: 1}, {x: 10, y: 81, t: 2}, {x: 52, y: 50, t: 0}, {x: 138, y: 9, t: 1}, {x: 104, y: -28, t: 0}, {x: 67, y: -56, t: 2}, {x: 5, y: -112, t: 0}]}, {amount: 6, pos: [{x: -33, y: -66, t: 2}, {x: -58, y: 10, t: 0}, {x: -19, y: 44, t: 1}, {x: 44, y: 20, t: 0}, {x: 53, y: -36, t: 2}, {x: 7, y: -62, t: 0}]}, {amount: 3, pos: [{x: -19, y: -25, t: 1}, {x: -29, y: 13, t: 2}, {x: 12, y: 12, t: 0}]}];\r\nvar _js = 0;\r\nvar _je = 0;\r\nvar _is = 0;\r\nvar _ie = 0;\r\nfunction draw_world() {\r\n    var js = _js;\r\n    var je = _je;\r\n    var is = _is;\r\n    var ie = _ie;\r\n    if (ui.quality) draw_map_transition(draw_map_objects, is, ie, js, je, SPRITE.LAKE_EDGE, \"l\", 2);\r\n    if (ui.quality) draw_map_transition(draw_map_objects, is, ie, js, je, SPRITE.LAVA_GROUND, \"la\", 5);\r\n    draw_map_transition(draw_map_objects, is, ie, js, je, SPRITE.MAGMA, \"la\", 5);\r\n    draw_map_transition(draw_breath_objects, is, ie, js, je, SPRITE.LAKE, \"l\", 2);\r\n    if (ui.quality) {\r\n        draw_map_transition(draw_lava_effect, is, ie, js, je, SPRITE.MAGMA, \"la\", 5);\r\n        draw_map_transition(draw_breath_objects, is, ie, js, je, SPRITE.LAKE_DEEP, \"l\", 2);\r\n    }\r\n    draw_map_transition(draw_map_objects, is, ie, js, je, SPRITE.MARKER, \"ma\", 3);\r\n    var sand_worm = world.units[ITEMS.SAND_WORM];\r\n    for (var i = 0; i < sand_worm.length; i++) sand_worm[i].draw_ground();\r\n    var players = world.units[ITEMS.PLAYERS];\r\n    for (var i = 0; i < players.length; i++) {\r\n        var p = players[i];\r\n        for (var j = 0; j < p.swim.length; j++) draw_swim(p.swim[j]);\r\n    }\r\n    var bridge = world.units[ITEMS.BRIDGE];\r\n    for (var i = 0; i < bridge.length; i++) {\r\n        draw_transition(bridge[i], SPRITE.BRIDGE);\r\n        bridge[i].draw_life(bridge[i].info);\r\n    }\r\n    var furnace = world.units[ITEMS.FURNACE];\r\n    for (var i = 0; i < furnace.length; i++) {\r\n        if (furnace[i].action == 2) draw_bg_transition(furnace[i]);\r\n    }\r\n    var fire = world.units[ITEMS.FIRE];\r\n    for (var i = 0; i < fire.length; i++) draw_bg_transition(fire[i], SPRITE.WOOD_FIRE);\r\n    var resurrection = world.units[ITEMS.RESURRECTION];\r\n    for (var i = 0; i < resurrection.length; i++) draw_bg_transition(resurrection[i]);\r\n    var emerald_machine = world.units[ITEMS.EMERALD_MACHINE];\r\n    for (var i = 0; i < emerald_machine.length; i++) draw_bg_transition(emerald_machine[i]);\r\n    var big_fire = world.units[ITEMS.BIG_FIRE];\r\n    for (var i = 0; i < big_fire.length; i++) draw_bg_transition(big_fire[i], SPRITE.BIG_FIRE_WOOD);\r\n    var sign = world.units[ITEMS.SIGN];\r\n    for (var i = 0; i < sign.length; i++) draw_transition(sign[i]);\r\n    var plot = world.units[ITEMS.PLOT];\r\n    for (var i = 0; i < plot.length; i++) draw_transition(plot[i], SPRITE.PLOT);\r\n    var seed = world.units[ITEMS.SEED];\r\n    for (var i = 0; i < seed.length; i++) draw_bg_transition(seed[i]);\r\n    var seed = world.units[ITEMS.TOMATO_SEED];\r\n    for (var i = 0; i < seed.length; i++) draw_bg_transition(seed[i]);\r\n    var seed = world.units[ITEMS.SEED];\r\n    for (var i = 0; i < seed.length; i++) draw_fg_transition(seed[i]);\r\n    var carrot = world.units[ITEMS.CARROT_SEED];\r\n    for (var i = 0; i < carrot.length; i++) if ((carrot[i].info & 15) === 0 || carrot[i].info === 10) draw_transition(carrot[i]);\r\n    var watermelon = world.units[ITEMS.WATERMELON_SEED];\r\n    for (var i = 0; i < watermelon.length; i++) if ((watermelon[i].info & 15) === 0 || watermelon[i].info === 10) draw_transition(watermelon[i]);\r\n    var aloe_vera = world.units[ITEMS.ALOE_VERA_SEED];\r\n    for (var i = 0; i < aloe_vera.length; i++) if ((aloe_vera[i].info & 15) === 0 || aloe_vera[i].info === 10) draw_transition(aloe_vera[i]);\r\n    var wheat = world.units[ITEMS.WHEAT_MOB];\r\n    for (var i = 0; i < wheat.length; i++) draw_transition(wheat[i], SPRITE.WHEAT_SEED);\r\n    var garlic = world.units[ITEMS.GARLIC_SEED];\r\n    for (var i = 0; i < garlic.length; i++) if ((garlic[i].info & 15) === 0 || garlic[i].info === 10) draw_transition(garlic[i]);\r\n    var thornbush = world.units[ITEMS.THORNBUSH_SEED];\r\n    for (var i = 0; i < thornbush.length; i++) if ((thornbush[i].info & 15) === 0 || thornbush[i].info === 10) draw_transition(thornbush[i]);\r\n    var pumpkin = world.units[ITEMS.PUMPKIN_SEED];\r\n    for (var i = 0; i < pumpkin.length; i++) if ((pumpkin[i].info & 15) === 0 || pumpkin[i].info === 10) draw_transition(pumpkin[i]);\r\n    var wheat = world.units[ITEMS.WHEAT_SEED];\r\n    for (var i = 0; i < wheat.length; i++) draw_transition(wheat[i]);\r\n    var crate = world.units[ITEMS.CRATE];\r\n    for (var i = 0; i < crate.length; i++) draw_transition(crate[i], SPRITE.CRATE, SPRITE.HURT_DEAD_BOX);\r\n    var dead_box = world.units[ITEMS.DEAD_BOX];\r\n    for (var i = 0; i < dead_box.length; i++) draw_transition(dead_box[i], SPRITE.CRATE, SPRITE.HURT_DEAD_BOX);\r\n    var gift = world.units[ITEMS.GIFT];\r\n    for (var i = 0; i < gift.length; i++) draw_transition(gift[i], SPRITE.GIFT, SPRITE.HURT_GIFT);\r\n    var door = world.units[ITEMS.WOOD_DOOR_SPIKE];\r\n    for (var i = 0; i < door.length; i++) {\r\n        if (door[i].info & 1) draw_transition(door[i], SPRITE.DOOR_WOOD_OPEN);\r\n    }\r\n    var door = world.units[ITEMS.STONE_DOOR_SPIKE];\r\n    for (var i = 0; i < door.length; i++) {\r\n        if (door[i].info & 1) draw_transition(door[i], SPRITE.DOOR_STONE_OPEN);\r\n    }\r\n    var door = world.units[ITEMS.GOLD_DOOR_SPIKE];\r\n    for (var i = 0; i < door.length; i++) {\r\n        if (door[i].info) draw_transition(door[i], SPRITE.DOOR_GOLD_OPEN);\r\n    }\r\n    var door = world.units[ITEMS.DIAMOND_DOOR_SPIKE];\r\n    for (var i = 0; i < door.length; i++) {\r\n        if (door[i].info) draw_transition(door[i], SPRITE.DOOR_DIAMOND_OPEN);\r\n    }\r\n    var door = world.units[ITEMS.AMETHYST_DOOR_SPIKE];\r\n    for (var i = 0; i < door.length; i++) {\r\n        if (door[i].info) draw_transition(door[i], SPRITE.DOOR_AMETHYST_OPEN);\r\n    }\r\n    var door = world.units[ITEMS.REIDITE_DOOR_SPIKE];\r\n    for (var i = 0; i < door.length; i++) {\r\n        if (door[i].info) draw_transition(door[i], SPRITE.DOOR_GOLD_OPEN);\r\n    }\r\n    var door = world.units[ITEMS.WOOD_DOOR];\r\n    for (var i = 0; i < door.length; i++) {\r\n        if (door[i].info & 1) draw_transition(door[i], SPRITE.DOOR_WOOD_OPEN);\r\n    }\r\n    var door = world.units[ITEMS.STONE_DOOR];\r\n    for (var i = 0; i < door.length; i++) {\r\n        if (door[i].info & 1) draw_transition(door[i], SPRITE.DOOR_STONE_OPEN);\r\n    }\r\n    var door = world.units[ITEMS.GOLD_DOOR];\r\n    for (var i = 0; i < door.length; i++) {\r\n        if (door[i].info) draw_transition(door[i], SPRITE.DOOR_GOLD_OPEN);\r\n    }\r\n    var door = world.units[ITEMS.DIAMOND_DOOR];\r\n    for (var i = 0; i < door.length; i++) {\r\n        if (door[i].info) draw_transition(door[i], SPRITE.DOOR_DIAMOND_OPEN);\r\n    }\r\n    var door = world.units[ITEMS.AMETHYST_DOOR];\r\n    for (var i = 0; i < door.length; i++) {\r\n        if (door[i].info) draw_transition(door[i], SPRITE.DOOR_AMETHYST_OPEN);\r\n    }\r\n    var door = world.units[ITEMS.REIDITE_DOOR];\r\n    for (var i = 0; i < door.length; i++) {\r\n        if (door[i].info) draw_transition(door[i], SPRITE.DOOR_GOLD_OPEN);\r\n    }\r\n    var rabbit = world.units[ITEMS.RABBIT];\r\n    for (var i = 0; i < rabbit.length; i++) draw_transition(rabbit[i], SPRITE.RABBIT, SPRITE.HURT_RABBIT);\r\n    var bed = world.units[ITEMS.BED];\r\n    for (var i = 0; i < bed.length; i++) draw_transition(bed[i], SPRITE.BED);\r\n    var sand_worm = world.units[ITEMS.SAND_WORM];\r\n    for (var i = 0; i < sand_worm.length; i++) draw_transition(sand_worm[i], SPRITE.SAND_WORM, SPRITE.HURT_SAND_WORM);\r\n    var spell = world.units[ITEMS.SPELL];\r\n    for (var i = 0; i < spell.length; i++) {\r\n        if (spell[i].fly === 0) draw_transition(spell[i]);\r\n    }\r\n    var players = world.units[ITEMS.PLAYERS];\r\n    for (var i = 0; i < players.length; i++) {\r\n        var p = players[i];\r\n        if (players[i].vehicle !== INV.BABY_DRAGON && players[i].vehicle !== INV.BABY_LAVA && players[i].vehicle !== INV.HAWK && players[i].vehicle !== INV.PLANE && players[i].vehicle !== INV.NIMBUS) {\r\n            if (p.tower === 0) {\r\n                if (p.tower_fx > 0.001) {\r\n                    p.tower_fx = Utils.lerp(p.tower_fx, 0, 0.018);\r\n                    var spd = 1 + 0.18 * Math.min(1, Math.max(p.tower_fx, 0) / 100);\r\n                    ctx.save();\r\n                    ctx.scale(spd, spd);\r\n                    user.cam.x /= spd;\r\n                    user.cam.y /= spd;\r\n                    p.x /= spd;\r\n                    p.y /= spd;\r\n                    p.r.x /= spd;\r\n                    p.r.y /= spd;\r\n                    p.draw_vehicle();\r\n                    p.draw();\r\n                    user.cam.x *= spd;\r\n                    user.cam.y *= spd;\r\n                    p.x *= spd;\r\n                    p.y *= spd;\r\n                    p.r.x *= spd;\r\n                    p.r.y *= spd;\r\n                    ctx.restore();\r\n                } else {\r\n                    p.fly = 0;\r\n                    p.draw_vehicle();\r\n                    p.draw();\r\n                }\r\n            }\r\n        } else if (p.speed <= 180) {\r\n            ctx.save();\r\n            var spd = 1 + 0.35 * Math.min(1, Math.max(p.vehicle_fx5 - 30, 0) / 180);\r\n            ctx.scale(spd, spd);\r\n            user.cam.x /= spd;\r\n            user.cam.y /= spd;\r\n            p.x /= spd;\r\n            p.y /= spd;\r\n            p.r.x /= spd;\r\n            p.r.y /= spd;\r\n            p.fly = 0;\r\n            p.draw_vehicle();\r\n            p.draw();\r\n            user.cam.x *= spd;\r\n            user.cam.y *= spd;\r\n            p.x *= spd;\r\n            p.y *= spd;\r\n            p.r.x *= spd;\r\n            p.r.y *= spd;\r\n            ctx.restore();\r\n        }\r\n    }\r\n    var bed = world.units[ITEMS.BED];\r\n    for (var i = 0; i < bed.length; i++) draw_transition(bed[i], SPRITE.BED_TOP);\r\n    var crab = world.units[ITEMS.CRAB];\r\n    for (var i = 0; i < crab.length; i++) draw_transition(crab[i]);\r\n    var fox = world.units[ITEMS.FOX];\r\n    for (var i = 0; i < fox.length; i++) draw_transition(fox[i], SPRITE.FOX, SPRITE.HURT_FOX);\r\n    var boar = world.units[ITEMS.BOAR];\r\n    for (var i = 0; i < boar.length; i++) draw_transition(boar[i]);\r\n    var wolf = world.units[ITEMS.WOLF];\r\n    for (var i = 0; i < wolf.length; i++) draw_transition(wolf[i], SPRITE.WOLF, SPRITE.HURT_WOLF);\r\n    var baby_dragon = world.units[ITEMS.BABY_DRAGON];\r\n    for (var i = 0; i < baby_dragon.length; i++) draw_transition(baby_dragon[i], SPRITE.BABY_DRAGON, SPRITE.HURT_BABY_DRAGON);\r\n    var baby_lava = world.units[ITEMS.BABY_LAVA];\r\n    for (var i = 0; i < baby_lava.length; i++) draw_transition(baby_lava[i], SPRITE.BABY_LAVA, SPRITE.HURT_BABY_LAVA);\r\n    var carrot = world.units[ITEMS.CARROT_SEED];\r\n    for (var i = 0; i < carrot.length; i++) if ((carrot[i].info & 15) !== 0 && carrot[i].info !== 10) draw_transition(carrot[i]);\r\n    var watermelon = world.units[ITEMS.WATERMELON_SEED];\r\n    for (var i = 0; i < watermelon.length; i++) if ((watermelon[i].info & 15) !== 0 && watermelon[i].info !== 10) draw_transition(watermelon[i]);\r\n    var aloe_vera = world.units[ITEMS.ALOE_VERA_MOB];\r\n    for (var i = 0; i < aloe_vera.length; i++) draw_transition(aloe_vera[i], SPRITE.ALOE_VERA);\r\n    var aloe_vera = world.units[ITEMS.ALOE_VERA_SEED];\r\n    for (var i = 0; i < aloe_vera.length; i++) if ((aloe_vera[i].info & 15) !== 0 && aloe_vera[i].info !== 10) draw_transition(aloe_vera[i]);\r\n    var seed = world.units[ITEMS.TOMATO_SEED];\r\n    for (var i = 0; i < seed.length; i++) draw_fg_transition(seed[i]);\r\n    var garlic = world.units[ITEMS.GARLIC_SEED];\r\n    for (var i = 0; i < garlic.length; i++) if ((garlic[i].info & 15) !== 0 && garlic[i].info !== 10) draw_transition(garlic[i]);\r\n    var thornbush = world.units[ITEMS.THORNBUSH_SEED];\r\n    for (var i = 0; i < thornbush.length; i++) if ((thornbush[i].info & 15) !== 0 && thornbush[i].info !== 10) draw_transition(thornbush[i]);\r\n    var pumpkin = world.units[ITEMS.PUMPKIN_SEED];\r\n    for (var i = 0; i < pumpkin.length; i++) if ((pumpkin[i].info & 15) !== 0 && pumpkin[i].info !== 10) draw_transition(pumpkin[i]);\r\n    var treasure = world.units[ITEMS.TREASURE_CHEST];\r\n    for (var i = 0; i < treasure.length; i++) draw_transition(treasure[i], SPRITE.TREASURE_CHEST, SPRITE.HURT_TREASURE_CHEST);\r\n    var kraken = world.units[ITEMS.KRAKEN];\r\n    for (var i = 0; i < kraken.length; i++) draw_transition(kraken[i], SPRITE.KRAKEN, SPRITE.HURT_KRAKEN);\r\n    var pira = world.units[ITEMS.PIRANHA];\r\n    for (var i = 0; i < pira.length; i++) draw_transition(pira[i], SPRITE.PIRANHA, SPRITE.HURT_PIRANHA);\r\n    var spider = world.units[ITEMS.SPIDER];\r\n    for (var i = 0; i < spider.length; i++) draw_transition(spider[i], SPRITE.SPIDER, SPRITE.HURT_SPIDER);\r\n    var penguin = world.units[ITEMS.PENGUIN];\r\n    for (var i = 0; i < penguin.length; i++) draw_transition(penguin[i], SPRITE.PENGUIN, SPRITE.HURT_PENGUIN);\r\n    var bear = world.units[ITEMS.BEAR];\r\n    for (var i = 0; i < bear.length; i++) draw_transition(bear[i], SPRITE.BEAR, SPRITE.HURT_BEAR);\r\n    var baby_mammoth = world.units[ITEMS.BABY_MAMMOTH];\r\n    for (var i = 0; i < baby_mammoth.length; i++) draw_transition(baby_mammoth[i]);\r\n    var flame = world.units[ITEMS.FLAME];\r\n    for (var i = 0; i < flame.length; i++) draw_transition(flame[i], SPRITE.FIRE_MOB, SPRITE.HURT_FIRE_MOB);\r\n    var crab_boss = world.units[ITEMS.CRAB_BOSS];\r\n    for (var i = 0; i < crab_boss.length; i++) draw_transition(crab_boss[i]);\r\n    var mammoth = world.units[ITEMS.MAMMOTH];\r\n    for (var i = 0; i < mammoth.length; i++) draw_transition(mammoth[i], SPRITE.MAMMOTH, SPRITE.HURT_MAMMOTH);\r\n    var dragon = world.units[ITEMS.DRAGON];\r\n    for (var i = 0; i < dragon.length; i++) {\r\n        if (dragon[i].scale === 1) draw_transition(dragon[i], SPRITE.DRAGON, SPRITE.HURT_DRAGON);\r\n    }\r\n    var dragon = world.units[ITEMS.LAVA_DRAGON];\r\n    for (var i = 0; i < dragon.length; i++) {\r\n        if (dragon[i].scale === 1) draw_transition(dragon[i], SPRITE.LAVA_DRAGON, SPRITE.HURT_LAVA_DRAGON);\r\n    }\r\n    var chest = world.units[ITEMS.CHEST];\r\n    for (var i = 0; i < chest.length; i++) draw_transition(chest[i]);\r\n    var workbench = world.units[ITEMS.WORKBENCH];\r\n    for (var i = 0; i < workbench.length; i++) draw_transition(workbench[i], SPRITE.WORKBENCH);\r\n    var furnace = world.units[ITEMS.FURNACE];\r\n    for (var i = 0; i < furnace.length; i++) draw_transition(furnace[i]);\r\n    var bread_oven = world.units[ITEMS.BREAD_OVEN];\r\n    for (var i = 0; i < bread_oven.length; i++) draw_transition(bread_oven[i]);\r\n    var door = world.units[ITEMS.WOOD_DOOR];\r\n    for (var i = 0; i < door.length; i++) {\r\n        if (!(door[i].info & 1)) draw_transition(door[i], SPRITE.DOOR_WOOD_CLOSE);\r\n        door[i].draw_life(door[i].info >> 1);\r\n    }\r\n    var door = world.units[ITEMS.STONE_DOOR];\r\n    for (var i = 0; i < door.length; i++) {\r\n        if (!(door[i].info & 1)) draw_transition(door[i], SPRITE.DOOR_STONE_CLOSE);\r\n        door[i].draw_life(door[i].info >> 1);\r\n    }\r\n    var door = world.units[ITEMS.GOLD_DOOR];\r\n    for (var i = 0; i < door.length; i++) {\r\n        if (!(door[i].info & 1)) draw_transition(door[i], SPRITE.DOOR_GOLD_CLOSE);\r\n        door[i].draw_life(door[i].info >> 1);\r\n    }\r\n    var door = world.units[ITEMS.DIAMOND_DOOR];\r\n    for (var i = 0; i < door.length; i++) {\r\n        if (!(door[i].info & 1)) draw_transition(door[i], SPRITE.DOOR_DIAMOND_CLOSE);\r\n        door[i].draw_life(door[i].info >> 1);\r\n    }\r\n    var door = world.units[ITEMS.AMETHYST_DOOR];\r\n    for (var i = 0; i < door.length; i++) {\r\n        if (!(door[i].info & 1)) draw_transition(door[i], SPRITE.DOOR_AMETHYST_CLOSE);\r\n        door[i].draw_life(door[i].info >> 1);\r\n    }\r\n    var door = world.units[ITEMS.REIDITE_DOOR];\r\n    for (var i = 0; i < door.length; i++) {\r\n        if (!(door[i].info & 1)) draw_transition(door[i], SPRITE.REIDITE_DOOR);\r\n        door[i].draw_life(door[i].info >> 1);\r\n    }\r\n    var door = world.units[ITEMS.WOOD_DOOR_SPIKE];\r\n    for (var i = 0; i < door.length; i++) {\r\n        if (!(door[i].info & 1)) draw_transition(door[i], SPRITE.WOOD_DOOR_SPIKE);\r\n        door[i].draw_life(door[i].info >> 1);\r\n    }\r\n    var door = world.units[ITEMS.STONE_DOOR_SPIKE];\r\n    for (var i = 0; i < door.length; i++) {\r\n        if (!(door[i].info & 1)) draw_transition(door[i], SPRITE.STONE_DOOR_SPIKE);\r\n        door[i].draw_life(door[i].info >> 1);\r\n    }\r\n    var door = world.units[ITEMS.GOLD_DOOR_SPIKE];\r\n    for (var i = 0; i < door.length; i++) {\r\n        if (!(door[i].info & 1)) draw_transition(door[i], SPRITE.GOLD_DOOR_SPIKE);\r\n        door[i].draw_life(door[i].info >> 1);\r\n    }\r\n    var door = world.units[ITEMS.DIAMOND_DOOR_SPIKE];\r\n    for (var i = 0; i < door.length; i++) {\r\n        if (!(door[i].info & 1)) draw_transition(door[i], SPRITE.DIAMOND_DOOR_SPIKE);\r\n        door[i].draw_life(door[i].info >> 1);\r\n    }\r\n    var door = world.units[ITEMS.AMETHYST_DOOR_SPIKE];\r\n    for (var i = 0; i < door.length; i++) {\r\n        if (!(door[i].info & 1)) draw_transition(door[i], SPRITE.AMETHYST_DOOR_SPIKE);\r\n        door[i].draw_life(door[i].info >> 1);\r\n    }\r\n    var door = world.units[ITEMS.REIDITE_DOOR_SPIKE];\r\n    for (var i = 0; i < door.length; i++) {\r\n        if (!(door[i].info & 1)) draw_transition(door[i], SPRITE.REIDITE_DOOR_SPIKE);\r\n        door[i].draw_life(door[i].info >> 1);\r\n    }\r\n    var wall = world.units[ITEMS.WALL];\r\n    for (var i = 0; i < wall.length; i++) {\r\n        draw_transition(wall[i], SPRITE.WALL);\r\n        wall[i].draw_life(wall[i].info);\r\n    }\r\n    var wall = world.units[ITEMS.STONE_WALL];\r\n    for (var i = 0; i < wall.length; i++) {\r\n        draw_transition(wall[i], SPRITE.STONE_WALL);\r\n        wall[i].draw_life(wall[i].info);\r\n    }\r\n    var wall = world.units[ITEMS.GOLD_WALL];\r\n    for (var i = 0; i < wall.length; i++) {\r\n        draw_transition(wall[i], SPRITE.GOLD_WALL);\r\n        wall[i].draw_life(wall[i].info);\r\n    }\r\n    var wall = world.units[ITEMS.DIAMOND_WALL];\r\n    for (var i = 0; i < wall.length; i++) {\r\n        draw_transition(wall[i], SPRITE.DIAMOND_WALL);\r\n        wall[i].draw_life(wall[i].info);\r\n    }\r\n    var wall = world.units[ITEMS.AMETHYST_WALL];\r\n    for (var i = 0; i < wall.length; i++) {\r\n        draw_transition(wall[i], SPRITE.AMETHYST_WALL);\r\n        wall[i].draw_life(wall[i].info);\r\n    }\r\n    var wall = world.units[ITEMS.REIDITE_WALL];\r\n    for (var i = 0; i < wall.length; i++) {\r\n        draw_transition(wall[i], SPRITE.REIDITE_WALL);\r\n        wall[i].draw_life(wall[i].info);\r\n    }\r\n    var spike = world.units[ITEMS.SPIKE];\r\n    for (var i = 0; i < spike.length; i++) {\r\n        draw_transition(spike[i], SPRITE.SPIKE);\r\n        spike[i].draw_life(spike[i].info);\r\n    }\r\n    var spike = world.units[ITEMS.STONE_SPIKE];\r\n    for (var i = 0; i < spike.length; i++) {\r\n        draw_transition(spike[i], SPRITE.STONE_SPIKE);\r\n        spike[i].draw_life(spike[i].info);\r\n    }\r\n    var spike = world.units[ITEMS.GOLD_SPIKE];\r\n    for (var i = 0; i < spike.length; i++) {\r\n        draw_transition(spike[i], SPRITE.GOLD_SPIKE);\r\n        spike[i].draw_life(spike[i].info);\r\n    }\r\n    var spike = world.units[ITEMS.DIAMOND_SPIKE];\r\n    for (var i = 0; i < spike.length; i++) {\r\n        draw_transition(spike[i], SPRITE.DIAMOND_SPIKE);\r\n        spike[i].draw_life(spike[i].info);\r\n    }\r\n    var spike = world.units[ITEMS.AMETHYST_SPIKE];\r\n    for (var i = 0; i < spike.length; i++) {\r\n        draw_transition(spike[i], SPRITE.AMETHYST_SPIKE);\r\n        spike[i].draw_life(spike[i].info);\r\n    }\r\n    var spike = world.units[ITEMS.REIDITE_SPIKE];\r\n    for (var i = 0; i < spike.length; i++) {\r\n        draw_transition(spike[i], SPRITE.REIDITE_SPIKE);\r\n        spike[i].draw_life(spike[i].info);\r\n    }\r\n    var well = world.units[ITEMS.WELL];\r\n    for (var i = 0; i < well.length; i++) {\r\n        var w = well[i];\r\n        if (w.info > 0) draw_transition(w, SPRITE.WELL_FULL); else draw_transition(w, SPRITE.WELL_EMPTY);\r\n    }\r\n    var totem = world.units[ITEMS.TOTEM];\r\n    for (var i = 0; i < totem.length; i++) draw_transition(totem[i], SPRITE.TOTEM);\r\n    draw_map_transition(draw_map_objects, is, ie, js, je, SPRITE.GOLD, \"g\", 2);\r\n    draw_map_transition(draw_map_objects, is, ie, js, je, SPRITE.GOLD_WINTER, \"gw\", 2);\r\n    draw_map_transition(draw_map_objects, is, ie, js, je, SPRITE.DIAMOND, \"d\", 2);\r\n    draw_map_transition(draw_map_objects, is, ie, js, je, SPRITE.DIAMOND_WINTER, \"dw\", 2);\r\n    draw_map_transition(draw_map_objects, is, ie, js, je, SPRITE.PLANT, \"p\", 0);\r\n    draw_map_transition(draw_map_objects, is, ie, js, je, SPRITE.EMERALD, \"m\", 2);\r\n    draw_map_transition(draw_map_objects, is, ie, js, je, SPRITE.AMETHYST, \"a\", 2);\r\n    draw_map_transition(draw_map_objects, is, ie, js, je, SPRITE.REIDITE, \"re\", 2);\r\n    draw_map_transition(draw_map_objects, is, ie, js, je, SPRITE.SHADOW_CAVE_STONES, \"cs\", 3, 3);\r\n    draw_map_transition(draw_map_objects, is, ie, js, je, SPRITE.SHADOW_CAVE_STONES, \"cs\", 2, 2);\r\n    draw_map_transition(draw_map_objects, is, ie, js, je, SPRITE.SHADOW_CAVE_STONES, \"cs\", 1, 1);\r\n    draw_map_transition(draw_map_objects, is, ie, js, je, SPRITE.SHADOW_CAVE_STONES, \"cs\", 0, 0);\r\n    draw_map_transition(draw_map_objects, is, ie, js, je, SPRITE.CAVE_STONES, \"cs\", 3, 3);\r\n    draw_map_transition(draw_map_objects, is, ie, js, je, SPRITE.CAVE_STONES, \"cs\", 2, 2);\r\n    draw_map_transition(draw_map_objects, is, ie, js, je, SPRITE.CAVE_STONES, \"cs\", 1, 1);\r\n    draw_map_transition(draw_map_objects, is, ie, js, je, SPRITE.CAVE_STONES, \"cs\", 0, 0);\r\n    var fruits = world.units[ITEMS.FRUIT];\r\n    for (var i = 0; i < fruits.length; i++) {\r\n        for (var j = 0; j < fruits[i].info; j++) draw_transition(fruits[i].fruits[j], SPRITE.FRUIT);\r\n    }\r\n    draw_map_transition(draw_map_objects, is, ie, js, je, SPRITE.STONES, \"s\", 2);\r\n    var extractor = world.units[ITEMS.EXTRACTOR_MACHINE_STONE];\r\n    for (var i = 0; i < extractor.length; i++) draw_transition(extractor[i]);\r\n    var extractor = world.units[ITEMS.EXTRACTOR_MACHINE_GOLD];\r\n    for (var i = 0; i < extractor.length; i++) draw_transition(extractor[i]);\r\n    var extractor = world.units[ITEMS.EXTRACTOR_MACHINE_DIAMOND];\r\n    for (var i = 0; i < extractor.length; i++) draw_transition(extractor[i]);\r\n    var extractor = world.units[ITEMS.EXTRACTOR_MACHINE_AMETHYST];\r\n    for (var i = 0; i < extractor.length; i++) draw_transition(extractor[i]);\r\n    var extractor = world.units[ITEMS.EXTRACTOR_MACHINE_REIDITE];\r\n    for (var i = 0; i < extractor.length; i++) draw_transition(extractor[i]);\r\n    var windmill = world.units[ITEMS.WINDMILL];\r\n    for (var i = 0; i < windmill.length; i++) draw_bg_transition(windmill[i]);\r\n    var fire = world.units[ITEMS.FIRE];\r\n    for (var i = 0; i < fire.length; i++) draw_fg_transition(fire[i]);\r\n    var fire = world.units[ITEMS.BIG_FIRE];\r\n    for (var i = 0; i < fire.length; i++) draw_fg_transition(fire[i]);\r\n    var furnace = world.units[ITEMS.FURNACE];\r\n    for (var i = 0; i < furnace.length; i++) {\r\n        if (furnace[i].action == 2) draw_fg_transition(furnace[i]);\r\n    }\r\n    var bread_oven = world.units[ITEMS.BREAD_OVEN];\r\n    for (var i = 0; i < bread_oven.length; i++) {\r\n        draw_fg_transition(bread_oven[i]);\r\n    }\r\n    var resurrection = world.units[ITEMS.RESURRECTION];\r\n    for (var i = 0; i < resurrection.length; i++) draw_fg_transition(resurrection[i]);\r\n    var emerald_machine = world.units[ITEMS.EMERALD_MACHINE];\r\n    for (var i = 0; i < emerald_machine.length; i++) {\r\n        draw_fg_transition(emerald_machine[i]);\r\n        emerald_machine[i].draw_life(emerald_machine[i].info);\r\n    }\r\n    draw_map_transition(draw_map_objects, is, ie, js, je, SPRITE.CACTUS, \"c\", 0);\r\n    draw_map_transition(draw_map_objects, is, ie, js, je, SPRITE.TREE, \"t\", 5, 4);\r\n    draw_map_transition(draw_map_objects, is, ie, js, je, SPRITE.FIR, \"f\", 2, 2);\r\n    draw_map_transition(draw_map_objects, is, ie, js, je, SPRITE.PALM, \"plm\", 0, 0);\r\n    draw_map_transition(draw_map_objects, is, ie, js, je, SPRITE.TREE_BRANCH, \"b\", 3, 2);\r\n    draw_map_transition(draw_map_objects, is, ie, js, je, SPRITE.TREE, \"t\", 3, 2);\r\n    draw_map_transition(draw_map_objects, is, ie, js, je, SPRITE.TREE_BRANCH, \"b\", 1, 0);\r\n    draw_map_transition(draw_map_objects, is, ie, js, je, SPRITE.FIR, \"f\", 1, 1);\r\n    draw_map_transition(draw_map_objects, is, ie, js, je, SPRITE.PALM, \"plm\", 1, 1);\r\n    draw_map_transition(draw_map_objects, is, ie, js, je, SPRITE.TREE, \"t\", 1, 0);\r\n    draw_map_transition(draw_map_objects, is, ie, js, je, SPRITE.FIR, \"f\", 0, 0);\r\n    draw_map_transition(draw_map_objects, is, ie, js, je, SPRITE.PALM, \"plm\", 2, 2);\r\n    var windmill = world.units[ITEMS.WINDMILL];\r\n    for (var i = 0; i < windmill.length; i++) draw_fg_transition(windmill[i]);\r\n    var tower = world.units[ITEMS.WOOD_TOWER];\r\n    for (var i = 0; i < tower.length; i++) draw_transition(tower[i], SPRITE.WOOD_TOWER);\r\n    var players = world.units[ITEMS.PLAYERS];\r\n    for (var i = 0; i < players.length; i++) {\r\n        var p = players[i];\r\n        if (true) {\r\n            p.tower_fx = Utils.lerp(p.tower_fx, 100, 0.018);\r\n            var spd = 1 + 0.18 * Math.min(1, Math.max(p.tower_fx, 0) / 100);\r\n            ctx.save();\r\n            ctx.scale(spd, spd);\r\n            user.cam.x /= spd;\r\n            user.cam.y /= spd;\r\n            p.x /= spd;\r\n            p.y /= spd;\r\n            p.r.x /= spd;\r\n            p.r.y /= spd;\r\n            p.draw_vehicle();\r\n            p.draw();\r\n            user.cam.x *= spd;\r\n            user.cam.y *= spd;\r\n            p.x *= spd;\r\n            p.y *= spd;\r\n            p.r.x *= spd;\r\n            p.r.y *= spd;\r\n            ctx.lineWidth = 2;\r\n            ctx.moveTo(innerWidth/2,innerHeight/2);\r\n            ctx.lineTo(user.cam.x+players[i].x - 100,user.cam.y+players[i].y - 100);\r\n            ctx.stroke();\r\n            ctx.restore();\r\n        }\r\n    }\r\n    var roof = world.units[ITEMS.ROOF];\r\n    for (var i = 0; i < roof.length; i++) {\r\n        draw_transition(roof[i], SPRITE.ROOF);\r\n        roof[i].draw_life(roof[i].info);\r\n    }\r\n    var firefly = world.units[ITEMS.FIREFLY];\r\n    for (var i = 0; i < firefly.length; i++) draw_transition(firefly[i], SPRITE.FIREFLY, SPRITE.HURT_FIREFLY);\r\n    var garland = world.units[ITEMS.GARLAND];\r\n    for (var i = 0; i < garland.length; i++) draw_transition(garland[i], SPRITE.GARLAND);\r\n    var players = world.units[ITEMS.PLAYERS];\r\n    for (var i = 0; i < players.length; i++) {\r\n        var p = players[i];\r\n        if ((p.vehicle === INV.BABY_DRAGON || p.vehicle === INV.BABY_LAVA || p.vehicle === INV.NIMBUS || p.vehicle === INV.HAWK || p.vehicle === INV.PLANE) && p.speed > 180) {\r\n            p.fly = 1;\r\n            ctx.save();\r\n            var spd = 1 + 0.35 * Math.min(1, Math.max(p.vehicle_fx5 - 30, 0) / 180);\r\n            ctx.scale(spd, spd);\r\n            user.cam.x /= spd;\r\n            user.cam.y /= spd;\r\n            p.x /= spd;\r\n            p.y /= spd;\r\n            p.r.x /= spd;\r\n            p.r.y /= spd;\r\n            p.draw_vehicle();\r\n            p.draw();\r\n            user.cam.x *= spd;\r\n            user.cam.y *= spd;\r\n            p.x *= spd;\r\n            p.y *= spd;\r\n            p.r.x *= spd;\r\n            p.r.y *= spd;\r\n            ctx.restore();\r\n        }\r\n    }\r\n    var spell = world.units[ITEMS.SPELL];\r\n    for (var i = 0; i < spell.length; i++) {\r\n        if (spell[i].fly === 1) draw_transition(spell[i]);\r\n    }\r\n    var dragon = world.units[ITEMS.DRAGON];\r\n    for (var i = 0; i < dragon.length; i++) {\r\n        if (dragon[i].scale > 1) draw_transition(dragon[i], SPRITE.DRAGON, SPRITE.HURT_DRAGON);\r\n    }\r\n    var dragon = world.units[ITEMS.LAVA_DRAGON];\r\n    for (var i = 0; i < dragon.length; i++) {\r\n        if (dragon[i].scale > 1) draw_transition(dragon[i], SPRITE.LAVA_DRAGON, SPRITE.HURT_LAVA_DRAGON);\r\n    }\r\n    var hawk = world.units[ITEMS.HAWK];\r\n    for (var i = 0; i < hawk.length; i++) draw_transition(hawk[i], SPRITE.HAWK, SPRITE.HURT_HAWK);\r\n    var vulture = world.units[ITEMS.VULTURE];\r\n    for (var i = 0; i < vulture.length; i++) draw_transition(vulture[i], SPRITE.VULTURE, SPRITE.HURT_VULTURE);\r\n    __effect += delta * 15;\r\n    if (__effect > 60) __effect -= 60;\r\n    draw_map_transition(draw_objects_effect, is, ie, js, je, SPRITE.FOG, \"fo\", 2);\r\n    draw_map_transition(draw_objects_effect, is, ie, js, je, SPRITE.FOD, \"fod\", 2);\r\n}\r\n;\r\nfunction draw_bg_transition(o, a) {\r\n    if (world.transition) {\r\n        ctx.globalAlpha = 1;\r\n        o.draw_bg(a);\r\n        world.time = world.time ? 0 : 1;\r\n        ctx.globalAlpha = 1 - world.shade.v;\r\n        o.draw_bg(a);\r\n        world.time = world.time ? 0 : 1;\r\n        ctx.globalAlpha = 1;\r\n    } else o.draw_bg(a);\r\n}\r\n;\r\nfunction draw_fg_transition(o, a) {\r\n    if (world.transition) {\r\n        ctx.globalAlpha = 1;\r\n        o.draw_fg(a);\r\n        world.time = world.time ? 0 : 1;\r\n        ctx.globalAlpha = 1 - world.shade.v;\r\n        o.draw_fg(a);\r\n        world.time = world.time ? 0 : 1;\r\n        ctx.globalAlpha = 1;\r\n    } else o.draw_fg(a);\r\n}\r\n;\r\nfunction draw_image_transition_2(id1, id2, img, x, y) {\r\n    if (world.transition) {\r\n        ctx.globalAlpha = 1;\r\n        ctxDrawImage(ctx, sprite[id1][id2][world.time], x, y);\r\n        world.time = world.time ? 0 : 1;\r\n        ctx.globalAlpha = 1 - world.shade.v;\r\n        ctxDrawImage(ctx, sprite[id1][id2][world.time], x, y);\r\n        world.time = world.time ? 0 : 1;\r\n        ctx.globalAlpha = 1;\r\n    } else ctxDrawImage(ctx, img, x, y);\r\n}\r\n;\r\nfunction draw_image_transition(id, img, x, y) {\r\n    if (world.transition) {\r\n        ctx.globalAlpha = 1;\r\n        ctxDrawImage(ctx, sprite[id][world.time], x, y);\r\n        world.time = world.time ? 0 : 1;\r\n        ctx.globalAlpha = 1 - world.shade.v;\r\n        ctxDrawImage(ctx, sprite[id][world.time], x, y);\r\n        world.time = world.time ? 0 : 1;\r\n        ctx.globalAlpha = 1;\r\n    } else ctxDrawImage(ctx, img, x, y);\r\n}\r\n;\r\nfunction draw_image_transition_hd_2(id1, id2, img, x, y) {\r\n    var w = img.width;\r\n    var h = img.height;\r\n    var w2 = Math.floor(w / 2);\r\n    var h2 = Math.floor(h / 2);\r\n    if (world.transition) {\r\n        ctx.globalAlpha = 1;\r\n        ctxDrawImage(ctx, sprite[id1][id2][world.time], 0, 0, w, h, x, y, w2, h2);\r\n        world.time = world.time ? 0 : 1;\r\n        ctx.globalAlpha = 1 - world.shade.v;\r\n        ctxDrawImage(ctx, sprite[id1][id2][world.time], 0, 0, w, h, x, y, w2, h2);\r\n        world.time = world.time ? 0 : 1;\r\n        ctx.globalAlpha = 1;\r\n    } else ctxDrawImage(ctx, sprite[id1][id2][world.time], 0, 0, w, h, x, y, w2, h2);\r\n}\r\n;\r\nfunction draw_image_transition_hd(id, img, x, y) {\r\n    var w = img.width;\r\n    var h = img.height;\r\n    var w2 = Math.floor(w / 2);\r\n    var h2 = Math.floor(h / 2);\r\n    if (world.transition) {\r\n        ctx.globalAlpha = 1;\r\n        ctxDrawImage(ctx, sprite[id][world.time], 0, 0, w, h, x, y, w2, h2);\r\n        world.time = world.time ? 0 : 1;\r\n        ctx.globalAlpha = 1 - world.shade.v;\r\n        ctxDrawImage(ctx, sprite[id][world.time], 0, 0, w, h, x, y, w2, h2);\r\n        world.time = world.time ? 0 : 1;\r\n        ctx.globalAlpha = 1;\r\n    } else ctxDrawImage(ctx, img, 0, 0, w, h, x, y, w2, h2);\r\n}\r\n;\r\nfunction draw_swim(s) {\r\n    ctx.globalAlpha = s.alpha;\r\n    circle(ctx, s.x + user.cam.x, s.y + user.cam.y, s.r);\r\n    fill_path(ctx, SPRITE.SWIM_COLOR[world.time]);\r\n    ctx.globalAlpha = 1;\r\n}\r\n;\r\nfunction draw_foot(f) {\r\n    ctx.save();\r\n    ctx.translate(user.cam.x + f.x, user.cam.y + f.y);\r\n    ctx.rotate(f.angle);\r\n    ctx.globalAlpha = f.alpha;\r\n    var img = sprite[f.id][world.time];\r\n    ctxDrawImage(ctx, img, -img.width / 2, -img.height / 2);\r\n    ctx.globalAlpha = 1;\r\n    ctx.restore();\r\n}\r\n;\r\nfunction draw_imgs_transition(id, i, x, y, alpha) {\r\n    if (world.transition && alpha == 1) {\r\n        ctx.globalAlpha = 1;\r\n        ctxDrawImage(ctx, sprite[id][world.time][i], x, y);\r\n        world.time = world.time ? 0 : 1;\r\n        ctx.globalAlpha = 1 - world.shade.v;\r\n        ctxDrawImage(ctx, sprite[id][world.time][i], x, y);\r\n        world.time = world.time ? 0 : 1;\r\n        ctx.globalAlpha = 1;\r\n    } else {\r\n        ctx.globalAlpha = alpha;\r\n        ctxDrawImage(ctx, sprite[id][world.time][i], x, y);\r\n        ctx.globalAlpha = 1;\r\n    }\r\n}\r\n;\r\nfunction draw_transition(o, a1, a2) {\r\n    if (world.transition) {\r\n        ctx.globalAlpha = 1;\r\n        o.draw(a1, a2);\r\n        world.time = world.time ? 0 : 1;\r\n        ctx.globalAlpha = 1 - world.shade.v;\r\n        o.draw(a1, a2);\r\n        world.time = world.time ? 0 : 1;\r\n        ctx.globalAlpha = 1;\r\n    } else o.draw(a1, a2);\r\n}\r\n;\r\nfunction draw_map_transition(fun, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\r\n    if (world.transition) {\r\n        ctx.globalAlpha = 1;\r\n        fun(a1, a2, a3, a4, a5, a6, a7, a8, a9);\r\n        world.time = world.time ? 0 : 1;\r\n        ctx.globalAlpha = 1 - world.shade.v;\r\n        fun(a1, a2, a3, a4, a5, a6, a7, a8, a9);\r\n        world.time = world.time ? 0 : 1;\r\n        ctx.globalAlpha = 1;\r\n    } else fun(a1, a2, a3, a4, a5, a6, a7, a8, a9);\r\n}\r\n;\r\nfunction get_color_transition(r1, g1, b1, r2, g2, b2, shade) {\r\n    var color = \"#\";\r\n    var c = Math.floor(r2 * shade + (1 - shade) * r1);\r\n    color += c < 16 ? \"0\" + c.toString(16) : c.toString(16);\r\n    var c = Math.floor(g2 * shade + (1 - shade) * g1);\r\n    color += c < 16 ? \"0\" + c.toString(16) : c.toString(16);\r\n    var c = Math.floor(b2 * shade + (1 - shade) * b1);\r\n    color += c < 16 ? \"0\" + c.toString(16) : c.toString(16);\r\n    return color;\r\n}\r\n;\r\nfunction draw_simple_ground() {\r\n    if (world.transition) {\r\n        var shade = world.time ? 1 - world.shade.v : world.shade.v;\r\n        ctx.fillStyle = get_color_transition(4, 43, 48, 19, 58, 43, shade);\r\n    } else ctx.fillStyle = SPRITE.GROUND[world.time];\r\n    ctx.fillRect(0, 0, canw, canh);\r\n}\r\n;\r\n;\r\nfunction draw_ground() {\r\n    for (var i = world.biomes.length - 1; i >= 0; i--) {\r\n        var biome = world.biomes[i];\r\n        if (biome.t === world.BIOME_SEA) {\r\n            var info = world.BIOME[biome.t];\r\n            if (-user.cam.x >= biome.x1 - 230 - canw && -user.cam.x <= biome.x2 + 330 && -user.cam.y >= biome.y1 - canh && -user.cam.y <= biome.y2 + 100) {\r\n                var x2 = biome.x2;\r\n                if (biome.t !== world.BIOME_SEA) x2 -= 610;\r\n                var x1 = biome.x1;\r\n                if (biome.t !== world.BIOME_SEA) x1 += 610;\r\n                var y2 = biome.y2;\r\n                if (biome.t !== world.BIOME_SEA) y2 -= 610;\r\n                var y1 = biome.y1;\r\n                if (biome.t !== world.BIOME_SEA) y1 += 610;\r\n                if (world.transition) {\r\n                    var shade = world.time ? 1 - world.shade.v : world.shade.v;\r\n                    ctx.fillStyle = get_color_transition(info.night[0], info.night[1], info.night[2], info.day[0], info.day[1], info.day[1], shade);\r\n                } else ctx.fillStyle = info._color[world.time];\r\n                var _left = Math.max(user.cam.x + x1 - 2 - 230, 0);\r\n                var _right = Math.max(-user.cam.x + canw - x2 - 330 - 2, 0);\r\n                var _top = Math.max(user.cam.y + y1 - 2, 0);\r\n                var _bottom = Math.max(-user.cam.y + canh - y2 - 100 - 2, 0);\r\n                ctx.beginPath();\r\n                ctx.fillRect(_left, _top, canw - _right - _left, canh - _top - _bottom);\r\n            }\r\n        }\r\n    }\r\n    for (var i = world.biomes.length - 1; i >= 0; i--) {\r\n        var biome = world.biomes[i];\r\n        if (biome.t !== world.BIOME_SEA) {\r\n            var x2 = biome.x2;\r\n            if (biome.t !== world.BIOME_SEA) x2 -= 400;\r\n            var x1 = biome.x1;\r\n            if (biome.t !== world.BIOME_SEA) x1 += 400;\r\n            var y2 = biome.y2;\r\n            if (biome.t !== world.BIOME_SEA) y2 -= 300;\r\n            var y1 = biome.y1;\r\n            if (biome.t !== world.BIOME_SEA) y1 += 300;\r\n            if ((biome.v & WORLD.RIGHT) === 0 && -user.cam.x >= x2 - canw + 120 && -user.cam.x <= x2 + 820 && -user.cam.y >= y1 + 88 - canh && -user.cam.y <= y2 + 50) {\r\n                draw_beach_sand_right(x2, y1 + 88, y2 - 88, user.beach[0], world.BIOME[biome.t], biome.v & WORLD.RIGHT);\r\n                draw_beach_right(x2, y1 + 88, y2 - 88, user.beach[0], world.BIOME[biome.t], biome.v & WORLD.RIGHT);\r\n            }\r\n            if ((biome.v & WORLD.LEFT) === 0 && -user.cam.x >= x1 - canw - 700 && -user.cam.x <= x1 - 20 && -user.cam.y >= y1 + 88 - canh && -user.cam.y <= y2 + 50) {\r\n                draw_beach_sand_left(x1, y1 + 88, y2 - 88, user.beach[1], world.BIOME[biome.t], biome.v & WORLD.LEFT);\r\n                draw_beach_left(x1, y1 + 88, y2 - 88, user.beach[1], world.BIOME[biome.t], biome.v & WORLD.LEFT);\r\n            }\r\n            if ((biome.v & WORLD.BOTTOM) === 0 && -user.cam.x >= x1 - 235 - canw && -user.cam.x <= x2 + 350 && -user.cam.y >= y2 - canh - 275 && -user.cam.y <= y2 + 490) {\r\n                draw_beach_sand_bottom(y2 - 230, x1 - 230, x2 + 230, user.beach[2], world.BIOME[biome.t], biome.v & WORLD.BOTTOM);\r\n                draw_beach_bottom(y2 - 230, x1 - 230, x2 + 230, user.beach[2], world.BIOME[biome.t], biome.v & WORLD.BOTTOM);\r\n            }\r\n            if ((biome.v & WORLD.TOP) === 0 && -user.cam.x >= x1 - 235 - canw && -user.cam.x <= x2 + 350 && -user.cam.y >= y1 - canh - 390 && -user.cam.y <= y1 + 315) {\r\n                draw_beach_sand_top(y1 + 310, x1 - 230, x2 + 230, user.beach[3], world.BIOME[biome.t], biome.v & WORLD.TOP);\r\n                draw_beach_top(y1 + 310, x1 - 230, x2 + 230, user.beach[3], world.BIOME[biome.t], biome.v & WORLD.TOP);\r\n            }\r\n        }\r\n    }\r\n    for (var i = world.biomes.length - 1; i >= 0; i--) {\r\n        var biome = world.biomes[i];\r\n        if (biome.t !== world.BIOME_SEA) {\r\n            var x2 = biome.x2;\r\n            if (biome.t !== world.BIOME_SEA) x2 -= 400;\r\n            var x1 = biome.x1;\r\n            if (biome.t !== world.BIOME_SEA) x1 += 400;\r\n            var y2 = biome.y2;\r\n            if (biome.t !== world.BIOME_SEA) y2 -= 300;\r\n            var y1 = biome.y1;\r\n            if (biome.t !== world.BIOME_SEA) y1 += 300;\r\n            if ((biome.v & WORLD.RIGHT) !== 0 && -user.cam.x >= x2 - canw + 120 && -user.cam.x <= x2 + 820 && -user.cam.y >= y1 + 88 - canh && -user.cam.y <= y2 + 50) {\r\n                draw_beach_sand_right(x2, y1 + 88, y2 - 88, user.beach[0], world.BIOME[biome.t], biome.v & WORLD.RIGHT);\r\n            }\r\n            if ((biome.v & WORLD.LEFT) !== 0 && -user.cam.x >= x1 - canw - 700 && -user.cam.x <= x1 - 20 && -user.cam.y >= y1 + 88 - canh && -user.cam.y <= y2 + 50) {\r\n                draw_beach_sand_left(x1, y1 + 88, y2 - 88, user.beach[1], world.BIOME[biome.t], biome.v & WORLD.LEFT);\r\n            }\r\n            if ((biome.v & WORLD.BOTTOM) !== 0 && -user.cam.x >= x1 - 235 - canw && -user.cam.x <= x2 + 350 && -user.cam.y >= y2 - canh - 275 && -user.cam.y <= y2 + 490) {\r\n                draw_beach_sand_bottom(y2 - 230, x1 - 230, x2 + 230, user.beach[2], world.BIOME[biome.t], biome.v & WORLD.BOTTOM);\r\n            }\r\n            if ((biome.v & WORLD.TOP) !== 0 && -user.cam.x >= x1 - 235 - canw && -user.cam.x <= x2 + 350 && -user.cam.y >= y1 - canh - 390 && -user.cam.y <= y1 + 315) {\r\n                draw_beach_sand_top(y1 + 310, x1 - 230, x2 + 230, user.beach[3], world.BIOME[biome.t], biome.v & WORLD.TOP);\r\n            }\r\n        }\r\n    }\r\n    for (var i = world.biomes.length - 1; i >= 0; i--) {\r\n        var biome = world.biomes[i];\r\n        if (biome.t !== world.BIOME_SEA) {\r\n            var info = world.BIOME[biome.t];\r\n            if (-user.cam.x >= biome.x1 - 230 - canw && -user.cam.x <= biome.x2 + 330 && -user.cam.y >= biome.y1 - canh && -user.cam.y <= biome.y2 + 100) {\r\n                var x2 = biome.x2;\r\n                if (biome.t !== world.BIOME_SEA) {\r\n                    if ((biome.v & WORLD.RIGHT) === 0) x2 -= 414; else x2 -= 610;\r\n                }\r\n                var x1 = biome.x1;\r\n                if (biome.t !== world.BIOME_SEA) {\r\n                    if ((biome.v & WORLD.LEFT) === 0) x1 += 414; else x1 += 610;\r\n                }\r\n                var y2 = biome.y2;\r\n                if (biome.t !== world.BIOME_SEA) {\r\n                    if ((biome.v & WORLD.BOTTOM) === 0) y2 -= 414; else y2 -= 610;\r\n                }\r\n                var y1 = biome.y1;\r\n                if (biome.t !== world.BIOME_SEA) {\r\n                    if ((biome.v & WORLD.TOP) === 0) y1 += 414; else y1 += 610;\r\n                }\r\n                if (world.transition) {\r\n                    var shade = world.time ? 1 - world.shade.v : world.shade.v;\r\n                    ctx.fillStyle = get_color_transition(info.night[0], info.night[1], info.night[2], info.day[0], info.day[1], info.day[2], shade);\r\n                } else ctx.fillStyle = info._color[world.time];\r\n                var _left = Math.max(user.cam.x + x1 - 2 - 230, 0);\r\n                var _right = Math.max(-user.cam.x + canw - x2 - 330 - 2, 0);\r\n                var _top = Math.max(user.cam.y + y1 - 2, 0);\r\n                var _bottom = Math.max(-user.cam.y + canh - y2 - 100 - 2, 0);\r\n                ctx.beginPath();\r\n                ctx.fillRect(_left, _top, canw - _right - _left, canh - _top - _bottom);\r\n            }\r\n        }\r\n    }\r\n    if (ui.quality) {\r\n        draw_map_transition(draw_breath_objects, _is, _ie, _js, _je, SPRITE.WAVE_TWO, \"isl\", 2);\r\n        draw_map_transition(draw_breath_objects, _is, _ie, _js, _je, SPRITE.WAVE_ONE, \"isl\", 2);\r\n    }\r\n    draw_map_transition(draw_map_objects, _is, _ie, _js, _je, SPRITE.ISLAND, \"isl\", 2);\r\n    if (ui.quality) draw_map_transition(draw_map_decorations, _is, _ie, _js, _je, SPRITE.DECORATION, \"de\");\r\n    var players = world.units[ITEMS.PLAYERS];\r\n    for (var i = 0; i < players.length; i++) {\r\n        var p = players[i];\r\n        for (var j = 0; j < p.foot.length; j++) draw_foot(p.foot[j]);\r\n    }\r\n    __wave += delta * 40;\r\n    if (__wave > 60) __wave -= 60;\r\n    draw_map_transition(draw_river_tile, _is, _ie, _js, _je, SPRITE.RIVER, \"r\", 0);\r\n    for (var i = 0; i < world.biomes.length; i++) {\r\n        var biome = world.biomes[i];\r\n        if (biome.t !== world.BIOME_SEA) {\r\n            var x2 = biome.x2;\r\n            if (biome.t !== world.BIOME_SEA) x2 -= 400;\r\n            var x1 = biome.x1;\r\n            if (biome.t !== world.BIOME_SEA) x1 += 400;\r\n            var y2 = biome.y2;\r\n            if (biome.t !== world.BIOME_SEA) y2 -= 300;\r\n            var y1 = biome.y1;\r\n            if (biome.t !== world.BIOME_SEA) y1 += 300;\r\n            if ((biome.v & WORLD.RIGHT) > 0 && -user.cam.x >= x2 - canw + 120 && -user.cam.x <= x2 + 820 && -user.cam.y >= y1 + 88 - canh && -user.cam.y <= y2 + 50) draw_beach_right(x2, y1 + 88, y2 - 88, user.beach[0], world.BIOME[biome.t], biome.v & WORLD.RIGHT);\r\n            if ((biome.v & WORLD.LEFT) > 0 && -user.cam.x >= x1 - canw - 700 && -user.cam.x <= x1 - 20 && -user.cam.y >= y1 + 88 - canh && -user.cam.y <= y2 + 50) draw_beach_left(x1, y1 + 88, y2 - 88, user.beach[1], world.BIOME[biome.t], biome.v & WORLD.LEFT);\r\n            if ((biome.v & WORLD.BOTTOM) > 0 && -user.cam.x >= x1 - 235 - canw && -user.cam.x <= x2 + 350 && -user.cam.y >= y2 - canh - 275 && -user.cam.y <= y2 + 490) draw_beach_bottom(y2 - 230, x1 - 230, x2 + 230, user.beach[2], world.BIOME[biome.t], biome.v & WORLD.BOTTOM);\r\n            if ((biome.v & WORLD.TOP) > 0 && -user.cam.x >= x1 - 235 - canw && -user.cam.x <= x2 + 350 && -user.cam.y >= y1 - canh - 390 && -user.cam.y <= y1 + 315) draw_beach_top(y1 + 310, x1 - 230, x2 + 230, user.beach[3], world.BIOME[biome.t], biome.v & WORLD.TOP);\r\n        }\r\n    }\r\n}\r\n;\r\n;\r\nfunction draw_ash() {\r\n    var ash = user.ash;\r\n    var flakes = ash.flakes;\r\n    for (var i = 0; i < flakes.length; i++) {\r\n        var f = flakes[i];\r\n        ash.update(f);\r\n        draw_imgs_transition(SPRITE.ASHES, f.id, user.cam.x + f.x, user.cam.y + f.y, f.alpha);\r\n    }\r\n    for (var i = 0; i < flakes.length; i++) {\r\n        var f = flakes[i];\r\n        if (f.life <= 0 || f.x > -user.cam.x + canw || f.x < -user.cam.x || f.y > -user.cam.y + canh) flakes.splice(i, 1);\r\n    }\r\n    var pos = -user.cam.y;\r\n    if (world.dist_lava > -1000) ash.add(pos);\r\n}\r\n;\r\nfunction draw_winter() {\r\n    var winter = user.winter;\r\n    if (winter.tempest === 0) winter.tempest_speed = Math.max(0, winter.tempest_speed - delta / 10); else winter.tempest_speed = Math.min(1, winter.tempest_speed + delta / 10);\r\n    var flakes = winter.flakes;\r\n    for (var i = 0; i < flakes.length; i++) {\r\n        var f = flakes[i];\r\n        winter.update(f);\r\n        draw_imgs_transition(SPRITE.FLAKES, f.id, user.cam.x + f.x, user.cam.y + f.y, f.alpha);\r\n    }\r\n    for (var i = 0; i < flakes.length; i++) {\r\n        var f = flakes[i];\r\n        if (f.life <= 0 || f.x > -user.cam.x + canw || f.x < -user.cam.x || f.y > -user.cam.y + canh) flakes.splice(i, 1);\r\n    }\r\n    var pos = -user.cam.y;\r\n    if (world.dist_winter > -1000) winter.add(pos);\r\n}\r\n;\r\nfunction draw_desert() {\r\n    var desert = user.desert;\r\n    if (desert.tempest === 0) desert.tempest_speed = Math.max(0, desert.tempest_speed - delta / 10); else desert.tempest_speed = Math.min(1, desert.tempest_speed + delta / 10);\r\n    var flakes = desert.flakes;\r\n    for (var i = 0; i < flakes.length; i++) {\r\n        var f = flakes[i];\r\n        desert.update(f);\r\n        draw_imgs_transition(SPRITE.DESERT, f.id, user.cam.x + f.x, user.cam.y + f.y, f.alpha);\r\n    }\r\n    for (var i = 0; i < flakes.length; i++) {\r\n        var f = flakes[i];\r\n        if (f.life <= 0 || f.x > -user.cam.x + canw || f.x < -user.cam.x - user.cam.w / 2 || f.y > -user.cam.y + canh) flakes.splice(i, 1);\r\n    }\r\n    var pos = -user.cam.y;\r\n    if (world.dist_desert > -1000) desert.add(pos);\r\n}\r\n;\r\n;\r\nfunction draw_beach_sand_left(xMin, yMin, yMax, beach, biome, hasWave) {\r\n    var w1 = beach.w1;\r\n    var w2 = beach.w2;\r\n    var w3 = beach.w3;\r\n    var diff_x = user.cam.x + xMin - 700;\r\n    var _top = Math.max(user.cam.y + yMin, 0);\r\n    var _bottom = Math.max(-user.cam.y + canh - yMax - 100, 0);\r\n    var diff_y = _top;\r\n    var mycanh = canh - _top - _bottom;\r\n    if (hasWave) var wx = beach.t(w1).x; else var wx = w1.r.x;\r\n    var d = diff_x + WORLD.LW1SX;\r\n    var w1x = d, w1y = diff_y, w1w = wx + WORLD.W1SX, w1h = mycanh;\r\n    d += wx + WORLD.W1SX - 2;\r\n    var od3 = d;\r\n    if (hasWave) var wx = beach.t(w2).x; else var wx = w2.r.x;\r\n    var d2 = diff_x + WORLD.LW2SX - d + wx;\r\n    var w2x = d, w2y = diff_y, w2w = d2, w2h = mycanh;\r\n    d += d2 - 2;\r\n    var od = d - 2;\r\n    if (hasWave) var wx = beach.t(w3).x; else var wx = w3.r.x;\r\n    d2 = diff_x + WORLD.LW3SX - d + wx;\r\n    if (od < d + d2 - 3) {\r\n        var w3ok = true;\r\n        var w3x = d, w3y = diff_y, w3w = d2, w3h = mycanh;\r\n        d += d2 - 2;\r\n        var od2 = d;\r\n    } else {\r\n        var w3ok = false;\r\n        d = od;\r\n        var od2 = -1;\r\n    }\r\n    d2 = diff_x + WORLD.LSANDX - d;\r\n    if (hasWave > 0 && biome.isSand === 1) {\r\n        if (world.transition) {\r\n            var shade = world.time ? 1 - world.shade.v : world.shade.v;\r\n            ctx.fillStyle = get_color_transition(15, 77, 72, 252, 239, 187, shade);\r\n        } else ctx.fillStyle = SPRITE.SAND_COLOR[world.time];\r\n        ctx.fillRect(d, diff_y, d2, mycanh);\r\n    } else {\r\n        if (world.transition) {\r\n            var shade = world.time ? 1 - world.shade.v : world.shade.v;\r\n            ctx.fillStyle = get_color_transition(biome.night[0], biome.night[1], biome.night[2], biome.day[0], biome.day[1], biome.day[2], shade);\r\n        } else ctx.fillStyle = biome._color[world.time];\r\n        ctx.fillRect(d, diff_y, d2, mycanh);\r\n    }\r\n}\r\n;\r\nfunction draw_beach_left(xMin, yMin, yMax, beach, biome, hasWave) {\r\n    var w1 = beach.w1;\r\n    var w2 = beach.w2;\r\n    var w3 = beach.w3;\r\n    var diff_x = user.cam.x + xMin - 700;\r\n    var _top = Math.max(user.cam.y + yMin, 0);\r\n    var _bottom = Math.max(-user.cam.y + canh - yMax - 100, 0);\r\n    var diff_y = _top;\r\n    var mycanh = canh - _top - _bottom;\r\n    if (hasWave) var w = beach.t(w1); else var w = w1.r;\r\n    var d = diff_x + WORLD.LW1SX;\r\n    var w1x = d, w1y = diff_y, w1w = w.x + WORLD.W1SX, w1h = mycanh;\r\n    d += w.x + WORLD.W1SX - 2;\r\n    var od3 = d;\r\n    if (hasWave) var w = beach.t(w2); else var w = w2.r;\r\n    var d2 = diff_x + WORLD.LW2SX - d + w.x;\r\n    var w2x = d, w2y = diff_y, w2w = d2, w2h = mycanh;\r\n    d += d2 - 2;\r\n    var od = d - 2;\r\n    if (hasWave) var w = beach.t(w3); else var w = w3.r;\r\n    d2 = diff_x + WORLD.LW3SX - d + w.x;\r\n    if (od < d + d2 - 3) {\r\n        var w3ok = true;\r\n        var w3x = d, w3y = diff_y, w3w = d2, w3h = mycanh;\r\n        d += d2 - 2;\r\n        var od2 = d;\r\n    } else {\r\n        var w3ok = false;\r\n        d = od;\r\n        var od2 = -1;\r\n    }\r\n    d2 = diff_x + WORLD.LSANDX - d;\r\n    if (world.transition) {\r\n        var shade = world.time ? 1 - world.shade.v : world.shade.v;\r\n        ctx.fillStyle = get_color_transition(9, 55, 63, 11, 106, 132, shade);\r\n    } else ctx.fillStyle = SPRITE.WATER_3_COLOR[world.time];\r\n    ctx.fillRect(w1x, w1y, w1w, w1h);\r\n    if (hasWave) {\r\n        if (world.transition) {\r\n            var shade = world.time ? 1 - world.shade.v : world.shade.v;\r\n            ctx.fillStyle = get_color_transition(15, 70, 76, 42, 139, 155, shade);\r\n        } else ctx.fillStyle = SPRITE.WATER_2_COLOR[world.time];\r\n    } else {\r\n        if (world.transition) {\r\n            var shade = world.time ? 1 - world.shade.v : world.shade.v;\r\n            ctx.fillStyle = get_color_transition(9, 55, 63, 11, 106, 132, shade);\r\n        } else ctx.fillStyle = SPRITE.WATER_3_COLOR[world.time];\r\n    }\r\n    ctx.fillRect(w2x, w2y, w2w, w2h);\r\n    if (w3ok) {\r\n        if (hasWave) {\r\n            if (world.transition) {\r\n                var shade = world.time ? 1 - world.shade.v : world.shade.v;\r\n                ctx.fillStyle = get_color_transition(17, 94, 96, 169, 214, 211, shade);\r\n            } else ctx.fillStyle = SPRITE.WATER_1_COLOR[world.time];\r\n        } else {\r\n            if (world.transition) {\r\n                var shade = world.time ? 1 - world.shade.v : world.shade.v;\r\n                ctx.fillStyle = get_color_transition(9, 55, 63, 11, 106, 132, shade);\r\n            } else ctx.fillStyle = SPRITE.WATER_3_COLOR[world.time];\r\n        }\r\n        ctx.fillRect(w3x, w3y, w3w, w3h);\r\n    }\r\n    if (ui.quality && hasWave) beach.draw_foams_left(od, od2, od3, diff_x, -user.cam.y + w1y, -user.cam.y + w1y + w1h);\r\n}\r\n;\r\n;\r\nfunction draw_beach_sand_top(yMin, xMin, xMax, beach, biome, hasWave) {\r\n    var w1 = beach.w1;\r\n    var w2 = beach.w2;\r\n    var w3 = beach.w3;\r\n    var diff_y = user.cam.y + yMin - 700;\r\n    var _left = Math.max(user.cam.x + xMin, 0);\r\n    var _right = Math.max(-user.cam.x + canw - xMax - 100, 0);\r\n    var diff_x = _left;\r\n    var mycanw = canw - _left - _right;\r\n    if (hasWave) var wx = beach.t(w1).x; else var wx = w1.r.x;\r\n    var d = diff_y + WORLD.LW1SX;\r\n    var w1x = diff_x, w1y = d, w1h = wx + WORLD.W1SX, w1w = mycanw;\r\n    d += wx + WORLD.W1SX - 2;\r\n    var od3 = d;\r\n    if (hasWave) var wx = beach.t(w2).x; else var wx = w2.r.x;\r\n    var d2 = diff_y + WORLD.LW2SX - d + wx;\r\n    var w2y = d, w2x = diff_x, w2h = d2, w2w = mycanw;\r\n    d += d2 - 2;\r\n    var od = d - 2;\r\n    if (hasWave) var wx = beach.t(w3).x; else var wx = w3.r.x;\r\n    d2 = diff_y + WORLD.LW3SX - d + wx;\r\n    if (od < d + d2 - 3) {\r\n        var w3ok = true;\r\n        var w3y = d, w3x = diff_x, w3h = d2, w3w = mycanw;\r\n        d += d2 - 2;\r\n        var od2 = d;\r\n    } else {\r\n        var w3ok = false;\r\n        d = od;\r\n        var od2 = -1;\r\n    }\r\n    d2 = diff_y + WORLD.LSANDX - d;\r\n    if (hasWave > 0 && biome.isSand === 1) {\r\n        if (world.transition) {\r\n            var shade = world.time ? 1 - world.shade.v : world.shade.v;\r\n            ctx.fillStyle = get_color_transition(15, 77, 72, 252, 239, 187, shade);\r\n        } else ctx.fillStyle = SPRITE.SAND_COLOR[world.time];\r\n        ctx.fillRect(diff_x, d, mycanw, d2);\r\n    } else {\r\n        if (world.transition) {\r\n            var shade = world.time ? 1 - world.shade.v : world.shade.v;\r\n            ctx.fillStyle = get_color_transition(biome.night[0], biome.night[1], biome.night[2], biome.day[0], biome.day[1], biome.day[2], shade);\r\n        } else ctx.fillStyle = biome._color[world.time];\r\n        ctx.fillRect(diff_x, d, mycanw, d2);\r\n    }\r\n}\r\n;\r\n;\r\nfunction draw_beach_top(yMin, xMin, xMax, beach, biome, hasWave) {\r\n    var w1 = beach.w1;\r\n    var w2 = beach.w2;\r\n    var w3 = beach.w3;\r\n    var diff_y = user.cam.y + yMin - 700;\r\n    var _left = Math.max(user.cam.x + xMin, 0);\r\n    var _right = Math.max(-user.cam.x + canw - xMax - 100, 0);\r\n    var diff_x = _left;\r\n    var mycanw = canw - _left - _right;\r\n    if (hasWave) var w = beach.t(w1); else var w = w1.r;\r\n    var d = diff_y + WORLD.LW1SX;\r\n    var w1x = diff_x, w1y = d, w1h = w.x + WORLD.W1SX, w1w = mycanw;\r\n    d += w.x + WORLD.W1SX - 2;\r\n    var od3 = d;\r\n    if (hasWave) var w = beach.t(w2); else var w = w2.r;\r\n    var d2 = diff_y + WORLD.LW2SX - d + w.x;\r\n    var w2y = d, w2x = diff_x, w2h = d2, w2w = mycanw;\r\n    d += d2 - 2;\r\n    var od = d - 2;\r\n    if (hasWave) var w = beach.t(w3); else var w = w3.r;\r\n    d2 = diff_y + WORLD.LW3SX - d + w.x;\r\n    if (od < d + d2 - 3) {\r\n        var w3ok = true;\r\n        var w3y = d, w3x = diff_x, w3h = d2, w3w = mycanw;\r\n        d += d2 - 2;\r\n        var od2 = d;\r\n    } else {\r\n        var w3ok = false;\r\n        d = od;\r\n        var od2 = -1;\r\n    }\r\n    d2 = diff_y + WORLD.LSANDX - d;\r\n    if (world.transition) {\r\n        var shade = world.time ? 1 - world.shade.v : world.shade.v;\r\n        ctx.fillStyle = get_color_transition(9, 55, 63, 11, 106, 132, shade);\r\n    } else ctx.fillStyle = SPRITE.WATER_3_COLOR[world.time];\r\n    ctx.fillRect(w1x, w1y, w1w, w1h);\r\n    if (hasWave) {\r\n        if (world.transition) {\r\n            var shade = world.time ? 1 - world.shade.v : world.shade.v;\r\n            ctx.fillStyle = get_color_transition(15, 70, 76, 42, 139, 155, shade);\r\n        } else ctx.fillStyle = SPRITE.WATER_2_COLOR[world.time];\r\n    } else {\r\n        if (world.transition) {\r\n            var shade = world.time ? 1 - world.shade.v : world.shade.v;\r\n            ctx.fillStyle = get_color_transition(9, 55, 63, 11, 106, 132, shade);\r\n        } else ctx.fillStyle = SPRITE.WATER_3_COLOR[world.time];\r\n    }\r\n    ctx.fillRect(w2x, w2y, w2w, w2h);\r\n    if (w3ok) {\r\n        if (hasWave) {\r\n            if (world.transition) {\r\n                var shade = world.time ? 1 - world.shade.v : world.shade.v;\r\n                ctx.fillStyle = get_color_transition(17, 94, 96, 169, 214, 211, shade);\r\n            } else ctx.fillStyle = SPRITE.WATER_1_COLOR[world.time];\r\n        } else {\r\n            if (world.transition) {\r\n                var shade = world.time ? 1 - world.shade.v : world.shade.v;\r\n                ctx.fillStyle = get_color_transition(9, 55, 63, 11, 106, 132, shade);\r\n            } else ctx.fillStyle = SPRITE.WATER_3_COLOR[world.time];\r\n        }\r\n        ctx.fillRect(w3x, w3y, w3w, w3h);\r\n    }\r\n    if (ui.quality && hasWave) beach.draw_foams_top(od, od2, od3, diff_y, -user.cam.x + w1x, -user.cam.x + w1x + w1w);\r\n}\r\n;\r\n;\r\nfunction draw_beach_sand_right(xMin, yMin, yMax, beach, biome, hasWave) {\r\n    var w1 = beach.w1;\r\n    var w2 = beach.w2;\r\n    var w3 = beach.w3;\r\n    var diff_x = user.cam.x + xMin + 820;\r\n    var _top = Math.max(user.cam.y + yMin, 0);\r\n    var _bottom = Math.max(-user.cam.y + canh - yMax - 100, 0);\r\n    var diff_y = _top;\r\n    var mycanh = canh - _top - _bottom;\r\n    if (hasWave) var wx = beach.t(w1).x; else var wx = w1.r.x;\r\n    var d = diff_x + WORLD.LW1SX;\r\n    var w1x = d, w1y = diff_y, w1w = -wx + WORLD.W1SX, w1h = mycanh;\r\n    d += -wx + WORLD.W1SX + 2;\r\n    var od3 = d;\r\n    if (hasWave) var wx = beach.t(w2).x; else var wx = w2.r.x;\r\n    var d2 = diff_x - WORLD.LW2SX - d - wx;\r\n    var w2x = d, w2y = diff_y, w2w = d2, w2h = mycanh;\r\n    d += d2 + 2;\r\n    var od = d - 2;\r\n    if (hasWave) var wx = beach.t(w3).x; else var wx = w3.r.x;\r\n    d2 = diff_x - WORLD.LW3SX - d - wx;\r\n    if (od > d + d2) {\r\n        var w3ok = true;\r\n        var w3x = d, w3y = diff_y, w3w = d2, w3h = mycanh;\r\n        d += d2 + 2;\r\n        var od2 = d;\r\n    } else {\r\n        var w3ok = false;\r\n        d = od;\r\n        var od2 = -1;\r\n    }\r\n    d2 = diff_x - WORLD.LSANDX - d;\r\n    if (hasWave > 0 && biome.isSand === 1) {\r\n        if (world.transition) {\r\n            var shade = world.time ? 1 - world.shade.v : world.shade.v;\r\n            ctx.fillStyle = get_color_transition(15, 77, 72, 252, 239, 187, shade);\r\n        } else ctx.fillStyle = SPRITE.SAND_COLOR[world.time];\r\n        ctx.fillRect(d, diff_y, d2, mycanh);\r\n    } else {\r\n        if (world.transition) {\r\n            var shade = world.time ? 1 - world.shade.v : world.shade.v;\r\n            ctx.fillStyle = get_color_transition(biome.night[0], biome.night[1], biome.night[2], biome.day[0], biome.day[1], biome.day[2], shade);\r\n        } else ctx.fillStyle = biome._color[world.time];\r\n        ctx.fillRect(d, diff_y, d2, mycanh);\r\n    }\r\n}\r\n;\r\n;\r\nfunction draw_beach_right(xMin, yMin, yMax, beach, biome, hasWave) {\r\n    var w1 = beach.w1;\r\n    var w2 = beach.w2;\r\n    var w3 = beach.w3;\r\n    var diff_x = user.cam.x + xMin + 820;\r\n    var _top = Math.max(user.cam.y + yMin, 0);\r\n    var _bottom = Math.max(-user.cam.y + canh - yMax - 100, 0);\r\n    var diff_y = _top;\r\n    var mycanh = canh - _top - _bottom;\r\n    if (hasWave) var w = beach.t(w1); else var w = w1.r;\r\n    var d = diff_x + WORLD.LW1SX;\r\n    var w1x = d, w1y = diff_y, w1w = -w.x + WORLD.W1SX, w1h = mycanh;\r\n    d += -w.x + WORLD.W1SX + 2;\r\n    var od3 = d;\r\n    if (hasWave) var w = beach.t(w2); else var w = w2.r;\r\n    var d2 = diff_x - WORLD.LW2SX - d - w.x;\r\n    var w2x = d, w2y = diff_y, w2w = d2, w2h = mycanh;\r\n    d += d2 + 2;\r\n    var od = d - 2;\r\n    if (hasWave) var w = beach.t(w3); else var w = w3.r;\r\n    d2 = diff_x - WORLD.LW3SX - d - w.x;\r\n    if (od > d + d2) {\r\n        var w3ok = true;\r\n        var w3x = d, w3y = diff_y, w3w = d2, w3h = mycanh;\r\n        d += d2 + 2;\r\n        var od2 = d;\r\n    } else {\r\n        var w3ok = false;\r\n        d = od;\r\n        var od2 = -1;\r\n    }\r\n    d2 = diff_x - WORLD.LSANDX - d;\r\n    if (world.transition) {\r\n        var shade = world.time ? 1 - world.shade.v : world.shade.v;\r\n        ctx.fillStyle = get_color_transition(9, 55, 63, 11, 106, 132, shade);\r\n    } else ctx.fillStyle = SPRITE.WATER_3_COLOR[world.time];\r\n    ctx.fillRect(w1x, w1y, w1w, w1h);\r\n    if (hasWave) {\r\n        if (world.transition) {\r\n            var shade = world.time ? 1 - world.shade.v : world.shade.v;\r\n            ctx.fillStyle = get_color_transition(15, 70, 76, 42, 139, 155, shade);\r\n        } else ctx.fillStyle = SPRITE.WATER_2_COLOR[world.time];\r\n    } else {\r\n        if (world.transition) {\r\n            var shade = world.time ? 1 - world.shade.v : world.shade.v;\r\n            ctx.fillStyle = get_color_transition(9, 55, 63, 11, 106, 132, shade);\r\n        } else ctx.fillStyle = SPRITE.WATER_3_COLOR[world.time];\r\n    }\r\n    ctx.fillRect(w2x, w2y, w2w, w2h);\r\n    if (w3ok) {\r\n        if (hasWave) {\r\n            if (world.transition) {\r\n                var shade = world.time ? 1 - world.shade.v : world.shade.v;\r\n                ctx.fillStyle = get_color_transition(17, 94, 96, 169, 214, 211, shade);\r\n            } else ctx.fillStyle = SPRITE.WATER_1_COLOR[world.time];\r\n        } else {\r\n            if (world.transition) {\r\n                var shade = world.time ? 1 - world.shade.v : world.shade.v;\r\n                ctx.fillStyle = get_color_transition(9, 55, 63, 11, 106, 132, shade);\r\n            } else ctx.fillStyle = SPRITE.WATER_3_COLOR[world.time];\r\n        }\r\n        ctx.fillRect(w3x, w3y, w3w, w3h);\r\n    }\r\n    if (ui.quality && hasWave) beach.draw_foams_right(od, od2, od3, diff_x, -user.cam.y + w1y, -user.cam.y + w1y + w1h);\r\n}\r\n;\r\n;\r\nfunction draw_beach_sand_bottom(yMin, xMin, xMax, beach, biome, hasWave) {\r\n    var w1 = beach.w1;\r\n    var w2 = beach.w2;\r\n    var w3 = beach.w3;\r\n    var diff_y = user.cam.y + yMin + 710;\r\n    var _left = Math.max(user.cam.x + xMin, 0);\r\n    var _right = Math.max(-user.cam.x + canw - xMax - 100, 0);\r\n    var diff_x = _left;\r\n    var mycanw = canw - _left - _right;\r\n    if (hasWave) var wx = beach.t(w1).x; else var wx = w1.r.x;\r\n    var d = diff_y + WORLD.LW1SX;\r\n    var w1y = d, w1x = diff_x, w1h = -wx + WORLD.W1SX, w1w = mycanw;\r\n    d += -wx + WORLD.W1SX + 2;\r\n    var od3 = d;\r\n    if (hasWave) var wx = beach.t(w2).x; else var wx = w2.r.x;\r\n    var d2 = diff_y - WORLD.LW2SX - d - wx;\r\n    var w2y = d, w2x = diff_x, w2h = d2, w2w = mycanw;\r\n    d += d2 + 2;\r\n    var od = d - 2;\r\n    if (hasWave) var wx = beach.t(w3).x; else var wx = w3.r.x;\r\n    d2 = diff_y - WORLD.LW3SX - d - wx;\r\n    if (od > d + d2) {\r\n        var w3ok = true;\r\n        var w3y = d, w3x = diff_x, w3h = d2, w3w = mycanw;\r\n        d += d2 + 2;\r\n        var od2 = d;\r\n    } else {\r\n        var w3ok = false;\r\n        d = od;\r\n        var od2 = -1;\r\n    }\r\n    d2 = diff_y - WORLD.LSANDX - d;\r\n    if (hasWave > 0 && biome.isSand === 1) {\r\n        if (world.transition) {\r\n            var shade = world.time ? 1 - world.shade.v : world.shade.v;\r\n            ctx.fillStyle = get_color_transition(15, 77, 72, 252, 239, 187, shade);\r\n        } else ctx.fillStyle = SPRITE.SAND_COLOR[world.time];\r\n        ctx.fillRect(diff_x, d, mycanw, d2);\r\n    } else {\r\n        if (world.transition) {\r\n            var shade = world.time ? 1 - world.shade.v : world.shade.v;\r\n            ctx.fillStyle = get_color_transition(biome.night[0], biome.night[1], biome.night[2], biome.day[0], biome.day[1], biome.day[2], shade);\r\n        } else ctx.fillStyle = biome._color[world.time];\r\n        ctx.fillRect(diff_x, d, mycanw, d2);\r\n    }\r\n}\r\n;\r\n;\r\nfunction draw_beach_bottom(yMin, xMin, xMax, beach, biome, hasWave) {\r\n    var w1 = beach.w1;\r\n    var w2 = beach.w2;\r\n    var w3 = beach.w3;\r\n    var diff_y = user.cam.y + yMin + 710;\r\n    var _left = Math.max(user.cam.x + xMin, 0);\r\n    var _right = Math.max(-user.cam.x + canw - xMax - 100, 0);\r\n    var diff_x = _left;\r\n    var mycanw = canw - _left - _right;\r\n    if (hasWave) var w = beach.t(w1); else var w = w1.r;\r\n    var d = diff_y + WORLD.LW1SX;\r\n    var w1y = d, w1x = diff_x, w1h = -w.x + WORLD.W1SX, w1w = mycanw;\r\n    d += -w.x + WORLD.W1SX + 2;\r\n    var od3 = d;\r\n    if (hasWave) var w = beach.t(w2); else var w = w2.r;\r\n    var d2 = diff_y - WORLD.LW2SX - d - w.x;\r\n    var w2y = d, w2x = diff_x, w2h = d2, w2w = mycanw;\r\n    d += d2 + 2;\r\n    var od = d - 2;\r\n    if (hasWave) var w = beach.t(w3); else var w = w3.r;\r\n    d2 = diff_y - WORLD.LW3SX - d - w.x;\r\n    if (od > d + d2) {\r\n        var w3ok = true;\r\n        var w3y = d, w3x = diff_x, w3h = d2, w3w = mycanw;\r\n        d += d2 + 2;\r\n        var od2 = d;\r\n    } else {\r\n        var w3ok = false;\r\n        d = od;\r\n        var od2 = -1;\r\n    }\r\n    d2 = diff_y - WORLD.LSANDX - d;\r\n    if (world.transition) {\r\n        var shade = world.time ? 1 - world.shade.v : world.shade.v;\r\n        ctx.fillStyle = get_color_transition(9, 55, 63, 11, 106, 132, shade);\r\n    } else ctx.fillStyle = SPRITE.WATER_3_COLOR[world.time];\r\n    ctx.fillRect(w1x, w1y, w1w, w1h);\r\n    if (hasWave) {\r\n        if (world.transition) {\r\n            var shade = world.time ? 1 - world.shade.v : world.shade.v;\r\n            ctx.fillStyle = get_color_transition(15, 70, 76, 42, 139, 155, shade);\r\n        } else ctx.fillStyle = SPRITE.WATER_2_COLOR[world.time];\r\n    } else {\r\n        if (world.transition) {\r\n            var shade = world.time ? 1 - world.shade.v : world.shade.v;\r\n            ctx.fillStyle = get_color_transition(9, 55, 63, 11, 106, 132, shade);\r\n        } else ctx.fillStyle = SPRITE.WATER_3_COLOR[world.time];\r\n    }\r\n    ctx.fillRect(w2x, w2y, w2w, w2h);\r\n    if (w3ok) {\r\n        if (hasWave) {\r\n            if (world.transition) {\r\n                var shade = world.time ? 1 - world.shade.v : world.shade.v;\r\n                ctx.fillStyle = get_color_transition(17, 94, 96, 169, 214, 211, shade);\r\n            } else ctx.fillStyle = SPRITE.WATER_1_COLOR[world.time];\r\n        } else {\r\n            if (world.transition) {\r\n                var shade = world.time ? 1 - world.shade.v : world.shade.v;\r\n                ctx.fillStyle = get_color_transition(9, 55, 63, 11, 106, 132, shade);\r\n            } else ctx.fillStyle = SPRITE.WATER_3_COLOR[world.time];\r\n        }\r\n        ctx.fillRect(w3x, w3y, w3w, w3h);\r\n    }\r\n    if (ui.quality && hasWave) beach.draw_foams_bottom(od, od2, od3, diff_y, -user.cam.x + w1x, -user.cam.x + w1x + w1w);\r\n}\r\n;\r\n;\r\nfunction draw_world_with_effect() {\r\n    ctx.globalAlpha = 1;\r\n    if (world.transition) var ret = world.shade.update();\r\n    world.update_dist_from_biomes(-user.cam.x, -user.cam.y);\r\n    _js = Math.max(Math.floor(-user.cam.x / world.dw) - 5, 0);\r\n    _je = Math.min(Math.floor((-user.cam.x + user.cam.w) / world.dw) + 4, world.nw - 1);\r\n    _is = Math.max(Math.floor(-user.cam.y / world.dh) - 3, 0);\r\n    _ie = Math.min(Math.floor((-user.cam.y + user.cam.h) / world.dh) + 3, world.nh - 1);\r\n    draw_ground();\r\n    draw_world();\r\n    if (ui.quality && world.mode !== WORLD.MODE_ZOMBIES && world.mode !== WORLD.MODE_LEGACY && world.mode !== WORLD.MODE_BR) {\r\n        draw_desert();\r\n        draw_winter();\r\n        draw_ash();\r\n    }\r\n    if (world.transition) {\r\n        if (ret) {\r\n            world.transition = false;\r\n            world.shade.v = 0;\r\n            world.shade.o = false;\r\n        }\r\n    }\r\n}\r\n;\r\nvar ANIMATION_STOP = 0;\r\nvar ANIMATION_RUN = 1;\r\nvar FOCUS_OUT = 0;\r\nvar FOCUS_IN = 1;\r\nvar ALIGN_CENTER = 0;\r\nvar ALIGN_LEFT = 1;\r\nvar STYLE_RETRO = 0;\r\nvar STYLE_FLAT = 1;\r\nvar KEYDOWN = 0;\r\nvar KEYPRESS = 1;\r\nvar GET_KEY_OUT = 0;\r\nvar GET_KEY_IN = 1;\r\nvar MOUSE_MOVE = 0;\r\nvar MOUSE_DOWN = 1;\r\nvar MOUSE_UP = 2;\r\nvar BUTTON_OUT = 0;\r\nvar BUTTON_IN = 1;\r\nvar BUTTON_CLICK = 2;\r\nfunction gui_disable_antialiasing(ctx) {\r\n    ctx.imageSmoothingEnabled = false;\r\n    ctx.webkitImageSmoothingEnabled = false;\r\n    ctx.mozImageSmoothingEnabled = false;\r\n    ctx.msImageSmoothingEnabled = false;\r\n    ctx.oImageSmoothingEnabled = false;\r\n}\r\n;\r\nfunction get_mouse_pos(can, evt) {\r\n    var rect = can.getBoundingClientRect();\r\n    return {x: evt.clientX - rect.left, y: evt.clientY - rect.top};\r\n}\r\n;\r\nfunction gui_render_text(text, font, color, height, width, background, paddingHorz, paddingVert, border, borderColor, opacity, radius, borderText, borderTextWidth, weight) {\r\n    if (text.length === 0) text = \" \";\r\n    if (paddingHorz === undefined) paddingHorz = 0;\r\n    if (paddingVert === undefined) paddingVert = 0;\r\n    if (border === undefined) border = 0;\r\n    if (borderTextWidth === undefined) borderTextWidth = 0;\r\n    var can = document.createElement(\"canvas\");\r\n    var ctx = can.getContext(\"2d\");\r\n    ctx.textBaseline = \"middle\", ctx.font = (weight !== undefined ? weight + \" \" : \"\") + height + \"px \" + font;\r\n    if (width !== undefined) width = Math.min(ctx.measureText(text).width, width); else width = ctx.measureText(text).width;\r\n    can.width = width + paddingHorz;\r\n    can.height = height + paddingVert;\r\n    if (background !== undefined) {\r\n        if (opacity !== undefined) ctx.globalAlpha = opacity;\r\n        ctx.fillStyle = background;\r\n        if (radius !== undefined) {\r\n            roundRect(ctx, border + 2, border, width + paddingHorz - border * 2 - 4, height + paddingVert - border * 2, radius);\r\n            ctx.fill();\r\n        } else ctx.fillRect(border, border, width + paddingHorz - border * 2, height + paddingVert - border * 2);\r\n        ctx.globalAlpha = 1;\r\n        if (border !== 0) {\r\n            ctx.lineWidth = border;\r\n            ctx.strokeStyle = borderColor;\r\n            ctx.stroke();\r\n        }\r\n    }\r\n    ctx.textBaseline = \"middle\";\r\n    ctx.font = (weight !== undefined ? weight + \" \" : \"\") + height + \"px \" + font;\r\n    if (borderText !== undefined) {\r\n        ctx.strokeStyle = borderText;\r\n        ctx.lineWidth = borderTextWidth;\r\n        ctx.lineJoin = \"miter\";\r\n        ctx.miterLimit = 2;\r\n        ctx.strokeText(text, Math.floor(paddingHorz / 2), Math.floor(paddingVert / 2) + Math.floor(height / 2), width);\r\n    }\r\n    ctx.fillStyle = color;\r\n    ctx.fillText(text, Math.floor(paddingHorz / 2), Math.floor(paddingVert / 2) + Math.floor(height / 2), width);\r\n    can.w2 = can.width / 2;\r\n    can.h2 = can.height / 2;\r\n    return can;\r\n}\r\n;\r\n;\r\nfunction gui_create_button(width, height, text, custom_img, hd, breath, callback, x, y, position, active) {\r\n    if (y === undefined) y = 0;\r\n    if (x === undefined) x = 0;\r\n    if (position === undefined) position = 0;\r\n    if (active === undefined) active = 1;\r\n    hd = hd === 3 ? 3 : hd === 1 ? 2 : 1;\r\n    if (breath !== 1) breath = 0;\r\n    if (custom_img) var img = custom_img;\r\n    var button_data = {width: width, height: height, img: img, state: BUTTON_OUT, translate: {x: x, y: y, _x: x, _y: y}, enable_breath: breath, breath: 0, callback: callback, position: position, active: active};\r\n    var in_button = function (mouse) {\r\n        var translate = button_data.translate;\r\n        if (button_data.width === 0 || button_data.height === 0) {\r\n            button_data.width = button_data.img[0].width;\r\n            button_data.height = button_data.img[0].height;\r\n        }\r\n        return mouse.x > translate.x && mouse.x < translate.x + button_data.width / hd && mouse.y > translate.y && mouse.y < translate.y + button_data.height / hd;\r\n    };\r\n    var trigger = function (can, mouse, state) {\r\n        if (in_button(mouse)) {\r\n            if (state == MOUSE_DOWN) button_data.state = BUTTON_CLICK; else if (state == MOUSE_UP) button_data.state = BUTTON_IN; else if (state == MOUSE_MOVE && button_data.state != BUTTON_CLICK) button_data.state = BUTTON_IN;\r\n            return true;\r\n        }\r\n        button_data.state = BUTTON_OUT;\r\n        return false;\r\n    };\r\n    var breath = function () {\r\n        var s = 0;\r\n        if (button_data.enable_breath === 1) {\r\n            if (button_data.state === BUTTON_IN || button_data.state === BUTTON_CLICK) button_data.breath = (button_data.breath + delta * 1e3) % 1e3; else if (button_data.breath > 0) {\r\n                button_data.breath = button_data.breath > 500 ? button_data.breath + delta * 1e3 : button_data.breath - delta * 1e3;\r\n                if (button_data.breath < 0 || button_data.breath > 1e3) button_data.breath = 0;\r\n            }\r\n            s = 0.2 * Utils.ease_in_out_quad(button_data.breath > 500 ? (1e3 - button_data.breath) / 500 : button_data.breath / 500);\r\n        }\r\n        return s;\r\n    };\r\n    var draw;\r\n    if (hd === 2) {\r\n        draw = function (ctx_target) {\r\n            var s = 1 + breath();\r\n            var img = button_data.img[button_data.state];\r\n            var w = button_data.width * s / 2;\r\n            var h = button_data.height * s / 2;\r\n            var _w = (w - button_data.width / 2) / 2;\r\n            var _h = (h - button_data.height / 2) / 2;\r\n            ctxDrawImage(ctx_target, img, button_data.translate.x - _w, button_data.translate.y - _h, w, h);\r\n        };\r\n    } else if (hd === 3) {\r\n        draw = function (ctx_target) {\r\n            var img = button_data.img[button_data.state];\r\n            var w = button_data.width;\r\n            var h = button_data.height;\r\n            var _w = (w - button_data.width) / 2;\r\n            var _h = (h - button_data.height) / 2;\r\n            ctxDrawImage(ctx_target, img, button_data.translate.x - _w, button_data.translate.y - _h, w, h);\r\n        };\r\n        hd = 1;\r\n    } else {\r\n        draw = function (ctx_target) {\r\n            var img = button_data.img[button_data.state];\r\n            ctxDrawImage(ctx_target, img, button_data.translate.x, button_data.translate.y);\r\n        };\r\n    }\r\n    return {info: button_data, trigger: trigger, draw: draw, in_button: in_button};\r\n}\r\n;\r\nfunction gui_create_image_hd(img, active, x, y, position) {\r\n    var translate = {x: x, y: y, _x: x, _y: y};\r\n    var draw = function (ctx_target) {\r\n        ctxDrawImage(ctx_target, img, translate.x, translate.y, img.width / 2, img.height / 2);\r\n    };\r\n    return {translate: translate, draw: draw, active: active, position: position};\r\n}\r\n;\r\nfunction gui_create_image(img) {\r\n    var translate = {x: 0, y: 0};\r\n    var draw = function (ctx_target) {\r\n        ctxDrawImage(ctx_target, img, translate.x, translate.y);\r\n    };\r\n    return {img: img, translate: translate, draw: draw};\r\n}\r\n;\r\nfunction gui_create_animation(img, time) {\r\n    if (time === undefined) time = 0.033;\r\n    var translate = {x: 0, y: 0};\r\n    var sprite = 0;\r\n    var delay = 0;\r\n    var get_img = function () {\r\n        delay += delta;\r\n        if (delay > time) {\r\n            sprite = (sprite + 1) % img.length;\r\n            delay -= time;\r\n        }\r\n        return img[sprite];\r\n    };\r\n    var draw = function (ctx_target) {\r\n        ctxDrawImage(ctx_target, get_img(), translate.x, translate.y);\r\n    };\r\n    return {img: img, translate: translate, draw: draw};\r\n}\r\n;\r\nfunction gui_add_breath_effect(img, end, start, speed_start, speed_end, width, height) {\r\n    img.end = end;\r\n    img.start = start;\r\n    img.speed_start = speed_start;\r\n    img.speed_end = speed_end;\r\n    img.width = img.img.width;\r\n    img.height = img.img.height;\r\n    img.scale = (end + start) / 2;\r\n    img.breath = false;\r\n    img.draw = function (ctx) {\r\n        img.translate.x = canw2 - img.width / 2;\r\n        ctxDrawImage(ctx, img.img, 0, 0, img.img.width, img.img.height, img.translate.x, img.translate.y, img.width, img.height);\r\n    };\r\n}\r\n;\r\nfunction gui_breath_effect(img) {\r\n    img.scale += img.breath ? delta / img.speed_start : -delta / img.speed_end;\r\n    if (img.scale > img.end) img.breath = false; else if (img.scale < img.start) img.breath = true;\r\n}\r\n;\r\nvar SENDWORD = \"send\";\r\nvar SHOW_ID = Utils.getURLData(\"id\") === \"1\" ? 1 : 0;\r\nvar PASSWORD = Utils.getURLData(\"password\");\r\nvar STATE = {DELETE: 1, HURT: 2, COLD: 4, HUNGER: 8, ATTACK: 16, WALK: 32, IDLE: 64, HEAL: 128, WEB: 256};\r\nvar KIT = [{price: 1e3, items: [[2, INV.FIRE], [1, INV.COOKED_MEAT], [8, INV.PLANT], [1, INV.BREAD]]}, {price: 2e3, items: [[2, INV.BIG_FIRE], [1, INV.PICK_WOOD], [2, INV.COOKED_MEAT], [16, INV.PLANT], [2, INV.BREAD]]}, {price: 4e3, items: [[3, INV.BIG_FIRE], [1, INV.PICK], [4, INV.COOKED_MEAT], [20, INV.PLANT], [4, INV.BREAD], [1, INV.WORKBENCH], [80, INV.STONE], [140, INV.WOOD]]}, {price: 8e3, items: [[1, INV.BAG], [4, INV.BIG_FIRE], [1, INV.PICK_GOLD], [6, INV.COOKED_MEAT], [30, INV.PLANT], [6, INV.BREAD], [1, INV.WORKBENCH], [150, INV.STONE], [200, INV.WOOD], [60, INV.GOLD], [2, INV.BOTTLE_FULL]]}, {price: 16e3, items: [[1, INV.BAG], [1, INV.PICK_DIAMOND], [1, INV.BED], [7, INV.CAKE], [2, INV.BOTTLE_FULL], [2, INV.BIG_FIRE], [1, INV.FURNACE], [15, INV.STONE_WALL], [2, INV.STONE_DOOR], [1, INV.TOTEM], [1, INV.SPANNER], [200, INV.STONE], [300, INV.WOOD]]}, {price: 16e3, items: [[1, INV.BAG], [1, INV.COAT], [1, INV.SHOVEL_GOLD], [1, INV.PICK_GOLD], [10, INV.CAKE], [4, INV.BOTTLE_FULL], [6, INV.BIG_FIRE], [3, INV.BANDAGE], [1, INV.BOOK], [200, INV.STONE], [300, INV.WOOD]]}, {price: 16e3, items: [[1, INV.BAG], [1, INV.HOOD], [1, INV.HAMMER_GOLD], [3, INV.BANDAGE], [1, 0], [1, INV.PICK_GOLD], [7, INV.CAKE], [2, INV.BOTTLE_FULL], [4, INV.BIG_FIRE], [150, INV.STONE], [200, INV.WOOD], [1, INV.LOCKPICK]]}, {price: 16e3, items: [[1, INV.BAG], [1, INV.PEASANT], [1, INV.PICK_GOLD], [7, INV.CAKE], [2, INV.BOTTLE_FULL], [4, INV.BIG_FIRE], [2, INV.WINDMILL], [4, INV.BREAD_OVEN], [10, INV.PLOT], [6, INV.WHEAT_SEED], [4, INV.SEED], [1, INV.WATERING_CAN_FULL], [500, INV.WOOD]]}, {price: 16e3, items: [[1, INV.BAG], [1, INV.PICK_GOLD], [16, INV.FOODFISH_COOKED], [1, INV.BOTTLE_FULL], [6, INV.BIG_FIRE], [3, INV.BANDAGE], [1, INV.DIVING_MASK], [1, INV.SWORD], [16, INV.BRIDGE], [150, INV.STONE], [200, INV.WOOD]]}, {price: 2e4, items: [[1, INV.BAG], [1, INV.PICK_GOLD], [1, INV.CAKE], [1, INV.BOTTLE_FULL], [3, INV.BIG_FIRE], [3, INV.BANDAGE], [1, INV.GOLD_HELMET], [1, INV.SWORD_GOLD], [1, INV.DIAMOND_SPEAR], [2, INV.GOLD_SPIKE], [50, INV.STONE], [100, INV.WOOD]]}];\r\nvar CLIENT = {VERSION_NUMBER: 52, TIMEOUT_TIME: 2e3, TIMEOUT_NUMBER: 3, PING: \"[13]\", PING_DELAY: 6e4, ROTATE: 0.2, ATTACK: 0.2, SLOW_ATTACK: 0.58, CAM_DELAY: 50, MUTE_DELAY: 125e3, TIMEOUT_SERVER: 6e5, WAITING_FOR_SERVER: 8e3, DELAY_CONNECTION_UPDATE: 5, LAG_DISTANCE: 200, LOOSE_FOCUS: 15, TOKEN_LEN: 14, TEAM_MANAGE: 0, TEAM_SHOW: 1, TEAM_LEAVE: 2, TEAM_JOIN: 3, TEAM_FULL: 4, SKIN_MAX: 20, ACCESSORY_MAX: 14, SYMBOL_MAX: 4};\r\nfunction NetworkClient() {\r\n    var _this = this;\r\n    this.socket = null;\r\n    this._current_id = 0;\r\n    this.server_list = [];\r\n    this.mode_list = [[], [], [], [], [], [], [], [], []];\r\n    this.selected_server = [-1, -1, -1, -1, -1, -1, -1, -1, -1];\r\n    this.current_mode = 0;\r\n    this.privateServer = 0;\r\n    this.xhttp = new XMLHttpRequest;\r\n    this.xhttp.onreadystatechange = function () {\r\n        if (this.readyState == 4 && this.status == 200) {\r\n            _this.fun_after(true, 4);\r\n        } else _this.fun_after(false, this.readyState);\r\n    };\r\n    this.xhttp_get = function (fun_after, request) {\r\n        this.fun_after = fun_after;\r\n        this.xhttp.open(\"GET\", request, true);\r\n        this.xhttp.send();\r\n    };\r\n    this.store_server_list = function () {\r\n        this.server_list = JSON.parse(this.xhttp.responseText);\r\n    };\r\n    this.geolocate_server = function (list) {\r\n        var rand = [];\r\n        for (var i = 0; i < list.length; i++) {\r\n            if (list[i].a.indexOf(TZ) !== -1) rand.push(i);\r\n        }\r\n        if (rand.length === 0) return 0;\r\n        return rand[Math.floor(Math.random() * rand.length)];\r\n    };\r\n    this.set_server_list = function (list) {\r\n        var nop = 0;\r\n        for (var i = 0; i < list.length; i++) nop += list[i].nu;\r\n        var select = document.getElementById(\"servselect\");\r\n        if (client.selected_server[client.current_mode] === -1) client.selected_server[client.current_mode] = select.selectedIndex = client.geolocate_server(list); else select.selectedIndex = client.selected_server[client.current_mode];\r\n        var options = '<label for=\"ul-id\"><button type=\"button\" class=\"ng-binding\">' + list[select.selectedIndex].a + (list[select.selectedIndex].nu > 0 ? \" [\" + list[select.selectedIndex].nu + \" \" + LANG[TEXT.PLAYERS] + \"]\" : \"\") + \"</button></label>\" + '<ul role=\"listbox\" id=\"ul-id\" class=\"md-whiteframe-z1\" name=\"ul-id\">' + '<li role=\"option\" id=\"selectDisabled\">' + LANG[TEXT.CHOOSE] + \" (\" + this.total_players + \") \" + LANG[TEXT.TOTAL_PLAYERS] + \"</li>\";\r\n        for (var i = 0; i < list.length; i++) {\r\n            options += '<li role=\"option\">' + list[i].a;\r\n            options += \" [\" + list[i].nu + \" \" + LANG[TEXT.PLAYERS] + \"]\";\r\n            options += \"</li>\\n\";\r\n        }\r\n        options += '<li role=\"option\" id=\"selectDisabled\">(' + nop + \") \" + LANG[TEXT.TOTAL_MODE] + \"</li>\";\r\n        options += \"</div>\";\r\n        select.innerHTML = options;\r\n        $(\".md-select\").on(\"click\", function () {\r\n            $(this).toggleClass(\"active\");\r\n        });\r\n        $(\".md-select ul li\").on(\"click\", function () {\r\n            var v = $(this).text();\r\n            var id = -1;\r\n            var sl = client.mode_list[client.current_mode];\r\n            for (var i = 0; i < sl.length; i++) {\r\n                if (sl[i].a + \" [\" + sl[i].nu + \" \" + LANG[TEXT.PLAYERS] + \"]\" === v) {\r\n                    id = i;\r\n                    break;\r\n                }\r\n            }\r\n            if (id === -1) return;\r\n            document.getElementById(\"servselect\").selectedIndex = id;\r\n            client.selected_server[client.current_mode] = id;\r\n            $(\".md-select ul li\").removeClass(\"active\");\r\n            $(this).addClass(\"active\");\r\n            $(\".md-select label button\").text(v);\r\n        });\r\n    };\r\n    this.total_players = 0;\r\n    this.update_server_list = function () {\r\n        this.total_players = 0;\r\n        for (var i = 0; i < client.server_list.length; i++) {\r\n            if (-1 !== this.server_list[i].a.search(\"COM\")) {\r\n                this.server_list[i].a = this.server_list[i].a.replace(\"COM\", \"\");\r\n                this.mode_list[6].push(this.server_list[i]);\r\n            } else if (-1 !== this.server_list[i].a.search(\"CLOSED\") || -1 !== this.server_list[i].a.search(\"OPEN\")) this.mode_list[1].push(this.server_list[i]); else if (-1 !== this.server_list[i].a.search(\"EXP\")) {\r\n                this.mode_list[7].push(this.server_list[i]);\r\n                this.server_list[i].a = this.server_list[i].a.replace(\"EXP\", \"\");\r\n            } else if (-1 !== this.server_list[i].a.search(\"DAY\")) this.mode_list[2].push(this.server_list[i]); else if (-1 !== this.server_list[i].a.search(\"LEGACY\")) {\r\n                this.server_list[i].a = this.server_list[i].a.replace(\"LEGACY\", \"\");\r\n                this.mode_list[4].push(this.server_list[i]);\r\n            } else if (-1 !== this.server_list[i].a.search(\"BATR\")) {\r\n                this.server_list[i].a = this.server_list[i].a.replace(\"BATR\", \"\");\r\n                this.mode_list[4].push(this.server_list[i]);\r\n            } else if (-1 !== this.server_list[i].a.search(\"VAMP\")) {\r\n                this.server_list[i].a = this.server_list[i].a.replace(\"VAMP\", \"\");\r\n                this.mode_list[3].push(this.server_list[i]);\r\n            } else this.mode_list[0].push(this.server_list[i]);\r\n            this.total_players += this.server_list[i].nu;\r\n        }\r\n        for (i = 0; i < this.mode_list.length; i++) if (this.mode_list[i].length === 0) this.mode_list[i].push({a: LANG[TEXT.COMMING_SOON], nu: 0, i: \"127.0.0.1\", p: 80});\r\n        this.set_server_list(this.mode_list[0]);\r\n        this.select_gamemode = function (v) {\r\n            client.current_mode = v;\r\n            client.set_server_list(client.mode_list[client.current_mode]);\r\n            client.set_server_list(client.mode_list[client.current_mode]);\r\n            document.getElementById(\"servselect\").selectedIndex = client.current_mode;\r\n        };\r\n    };\r\n    this.timeout_server = 0;\r\n    this.timeout_number = 0;\r\n    this.timeout_handler = null;\r\n    this.timeout = function () {\r\n        _this.timeout_number++;\r\n        _this.socket.close();\r\n        if (_this.timeout_number > CLIENT.TIMEOUT_NUMBER) {\r\n            ___adsvid = 1;\r\n            ui.error_level = CLIENT.ERROR_REFUSED;\r\n            _this.new_alert(LANG[TEXT.YOU_CANNOT_JOIN]);\r\n            ui.waiting = false;\r\n            if (user.reconnect.enabled) {\r\n                game.quit(ui.run);\r\n            }\r\n        } else _this.connect_timeout();\r\n    };\r\n    this.kick = function (reason) {\r\n        if (this._current_id != this.socket._current_id) return;\r\n        this._current_id++;\r\n        this.new_alert(LANG[TEXT.KICKED] + reason);\r\n        game.quit(ui.run);\r\n    };\r\n    this.mute = function () {\r\n        this.new_alert(\"You speak too much\");\r\n    };\r\n    this.already_used_key = function () {\r\n        clearTimeout(this.timeout_handler);\r\n        this.new_alert(LANG[TEXT.KEY_ALREADY]);\r\n        ui.waiting = false;\r\n    };\r\n    this.hide_shop_kit = function () {\r\n        user.shop.open = false;\r\n    };\r\n    this.hide_recipe_book = function () {\r\n        game.show_recipe_book = 0;\r\n    };\r\n    this.hide_clock = function () {\r\n        game.show_clock = 0;\r\n    };\r\n    this.sand_tempest = function (tempest) {\r\n        user.desert.tempest = tempest;\r\n        if (world.dist_desert > -300) {\r\n            if (tempest === 0) this.new_alert(LANG[TEXT.TEMPEST_OFF]); else this.new_alert(LANG[TEXT.TEMPEST_ON]);\r\n        }\r\n    };\r\n    this.bandage = function (bandage) {\r\n        user.bandage = bandage;\r\n    };\r\n    this.blizzard_status = function (blizzard) {\r\n        user.blizzard = blizzard;\r\n    };\r\n    this.blizzard = function (tempest) {\r\n        user.winter.tempest = tempest;\r\n        if (world.dist_winter > -300) {\r\n            if (tempest === 0) this.new_alert(LANG[TEXT.BLIZZARD_OFF]); else this.new_alert(LANG[TEXT.BLIZZARD_ON]);\r\n        }\r\n    };\r\n    this.explorer_quest = function (biome) {\r\n        if (biome === 0) document.getElementById(\"exploreForest\").src = \"img/forest-leaf-ok.png\"; else if (biome === 1) document.getElementById(\"exploreWinter\").src = \"img/winter-flake-ok.png\"; else if (biome === 2) document.getElementById(\"exploreLava\").src = \"img/lava-volcano-ok.png\"; else if (biome === 3) document.getElementById(\"exploreDesert\").src = \"img/desert-cactus-ok.png\";\r\n    };\r\n    this.hide_market = function () {\r\n        game.show_market = 0;\r\n    };\r\n    this.hide_quest = function () {\r\n        game.show_quest = 0;\r\n    };\r\n    this.clean_inventory = function () {\r\n        user.inv.can_select = [];\r\n        user.inv.n = [];\r\n        user.inv.id = -1;\r\n        user.inv.drag.stop();\r\n        user.craft.can_craft = [];\r\n        user.craft.crafting = false;\r\n        user.craft.can_build = false;\r\n        user.craft.preview = -1;\r\n        user.craft.id = -1;\r\n        user.craft.workbench = false;\r\n        user.craft.well = false;\r\n        user.craft.fire = false;\r\n        user.craft.water = false;\r\n        user.craft.timeout = new Utils.LinearAnimation(false, 0, 1, 0, 1, 1);\r\n    };\r\n    this.wrong_key = function () {\r\n        clearTimeout(this.timeout_handler);\r\n        this.new_alert();\r\n        ui.waiting = false;\r\n    };\r\n    this.commands = function (msg) {\r\n        for (var i = 0; i < msg.length; i++) {\r\n            if (typeof msg[i] === \"string\") msg[i] = Utils.escape_html(msg[i]);\r\n        }\r\n        user.terminal.write_command(msg[1], msg[2], msg[3], msg[4]);\r\n    };\r\n    this.message = function (msg) {\r\n        this.new_alert(msg);\r\n    };\r\n    this.wrong_password = function () {\r\n        clearTimeout(this.timeout_handler);\r\n        this.new_alert(LANG[TEXT.WRONG_PASSWORD]);\r\n        ui.waiting = false;\r\n    };\r\n    this.new_version = function () {\r\n        clearTimeout(this.timeout_handler);\r\n        this.new_alert(LANG[TEXT.NEW_VERSION]);\r\n        ui.waiting = false;\r\n    };\r\n    this.old_version = function () {\r\n        clearTimeout(this.timeout_handler);\r\n        this.new_alert(LANG[TEXT.OLD_VERSION]);\r\n        ui.waiting = false;\r\n    };\r\n    this.get_bag = function () {\r\n        user.inv.update_bag_size(1, 0);\r\n        game.update_inv_buttons();\r\n    };\r\n    this.verified_account = function (ui8) {\r\n        var id = ui8[1];\r\n        var player = world.players[id];\r\n        player.skin = ui8[2];\r\n        player.accessory = ui8[3];\r\n        player.baglook = ui8[4];\r\n        player.book = ui8[5];\r\n        player.crate = ui8[6];\r\n        player.dead = ui8[7];\r\n        player.level = ui8[8];\r\n        var p = world.fast_units[id * world.max_units];\r\n        if (p) {\r\n            p.skin = ui8[2];\r\n            p.accessory = ui8[3];\r\n            p.baglook = ui8[4];\r\n            p.book = ui8[5];\r\n        }\r\n    };\r\n    this.build_stop = function (id) {\r\n        if (id === INV.BAG) {\r\n            user.inv.update_bag_size(1, 0);\r\n            game.update_inv_buttons();\r\n        } else this.gather([0, id, 1]);\r\n        user.craft.restart();\r\n    };\r\n    this.recycle_ok = function (id) {\r\n        user.auto_feed.delay = 0;\r\n        user.craft.do_recycle(id);\r\n    };\r\n    this.recycle_stop = function (id) {\r\n        var items = RECIPES[id].r;\r\n        for (var i = 0; i < items.length; i++) {\r\n            if (user.inv.max > user.inv.can_select.length || user.inv.n[items[i][0]] > 0) {\r\n                var amount = Math.floor(items[i][1] * 0.8);\r\n                if (!amount) continue;\r\n                this.gather([0, items[i][0], amount]);\r\n            }\r\n        }\r\n        user.craft.restart();\r\n    };\r\n    this.build_ok = function (id) {\r\n        user.auto_feed.delay = 0;\r\n        user.craft.do_craft(id);\r\n    };\r\n    this.new_alert = function (msg) {\r\n        if (!user.alert.text) user.alert.text = msg; else if (msg !== user.alert.text && msg !== user.alert.list[user.alert.list.length - 1]) user.alert.list.push(msg);\r\n    };\r\n    this.no_resources = function () {\r\n        this.new_alert(LANG[TEXT.NO_MORE_RESOURCES]);\r\n    };\r\n    this.survive = function () {\r\n        var msg;\r\n        if (user.day == 0) msg = LANG[TEXT.SURVIVED_1DAY]; else msg = LANG[TEXT.SURVIVED] + (user.day + 1) + LANG[TEXT.DAYS];\r\n        this.new_alert(msg);\r\n        user.day++;\r\n    };\r\n    this.fail_restore = function () {\r\n        clearTimeout(_this.timeout_handler);\r\n        user.reconnect.enabled = false;\r\n        user.alive = false;\r\n        this.new_alert(LANG[TEXT.DEAD_SAD]);\r\n        game.quit(ui.run);\r\n        this.socket.close();\r\n    };\r\n    this.blocked = function () {\r\n        ___adsvid = 1;\r\n        clearTimeout(this.timeout_handler);\r\n        this.new_alert(LANG[TEXT.SPAM_ME]);\r\n        ui.waiting = false;\r\n    };\r\n    this.full = function () {\r\n        ___adsvid = 1;\r\n        clearTimeout(this.timeout_handler);\r\n        this.new_alert(LANG[TEXT.SPAM_ME2]);\r\n        ui.waiting = false;\r\n    };\r\n    this.new_player = function (msg) {\r\n        var id = msg[1];\r\n        var players = world.players;\r\n        players[id].nickname = msg[2];\r\n        players[id].skin = msg[3];\r\n        players[id].accessory = msg[4];\r\n        players[id].baglook = msg[5];\r\n        players[id].book = msg[6];\r\n        players[id].crate = msg[7];\r\n        players[id].dead = msg[8];\r\n        players[id].level = msg[9];\r\n        players[id].score = 0;\r\n        players[id].ldb_label = null;\r\n        players[id].label = null;\r\n        players[id].label_winter = null;\r\n        players[id].alive = true;\r\n        if (SHOW_ID === 1) players[id].nickname += \"|\" + id;\r\n    };\r\n    this.get_focus = function () {\r\n        this.socket[SENDWORD](WINDOW1[JSONWORD1].stringify([11]));\r\n    };\r\n    this.empty_res = function () {\r\n        this.new_alert(LANG[TEXT.EMPTY]);\r\n    };\r\n    this.inv_full = function () {\r\n        this.new_alert(LANG[TEXT.INV_FULL]);\r\n    };\r\n    this.choose_kit = function (id) {\r\n        this.socket[SENDWORD](WINDOW3[JSONWORD7].stringify([21, id]));\r\n        user.shop.open = false;\r\n    };\r\n    this.kit_ok = function (k) {\r\n        var items = KIT[k - 1].items;\r\n        for (var i = 0; i < items.length && user.inv.max > user.inv.can_select.length; i++) {\r\n            var item = items[i][1];\r\n            var amount = items[i][0];\r\n            if (items[i][1] === INV.BAG) user.inv.update_bag_size(1, 0); else this.gather([0, item, amount]);\r\n        }\r\n    };\r\n    this.gather = function (ui16) {\r\n        var len = ui16.length;\r\n        var inv = user.inv;\r\n        for (var i = 1; i < len; i += 2) {\r\n            var o = ui16[i];\r\n            var n = ui16[i + 1];\r\n            for (var j = 0; j < inv.can_select.length; j++) {\r\n                if (inv.can_select[j].id == o) {\r\n                    inv.n[o] += n;\r\n                    break;\r\n                }\r\n            }\r\n            if (j == inv.can_select.length) {\r\n                inv.n[o] = n;\r\n                inv.can_select.push(game.inv_buttons[o]);\r\n                game.update_inv_buttons();\r\n            }\r\n        }\r\n        user.craft.update();\r\n    };\r\n    this.gauges = function (life, food, cold, thirst, oxygen, warm, bandage) {\r\n        if (Math.floor(11 - (Date.now() - healtime) / 1000) < 5 || life / 100 > user.gauges.l) healtime = new Date().getTime();\r\n        user.gauges.l = life / 100;\r\n        user.gauges.h = food / 100;\r\n        user.gauges.c = cold / 100;\r\n        user.gauges.t = thirst / 100;\r\n        user.gauges.o = oxygen / 100;\r\n        user.gauges.wa = warm / 100;\r\n        user.bandage = bandage;\r\n    };\r\n    this.succeed_quest = function (id) {\r\n        game.quests.modify(id, 2);\r\n    };\r\n    this.fail_quest = function (id) {\r\n        game.quests.modify(id, 0);\r\n    };\r\n    this.claimed = function (id) {\r\n        game.quests.modify(id, 3);\r\n    };\r\n    this.gauges_life = function (life, bandage) {\r\n        user.gauges.l = life / 100;\r\n        user.bandage = bandage;\r\n    };\r\n    this.gauges_water = function (water) {\r\n        user.gauges.t = water / 100;\r\n    };\r\n    this.gauges_food = function (food) {\r\n        user.gauges.h = food / 100;\r\n    };\r\n    this.gauges_warm = function (warm) {\r\n        user.gauges.wa = warm / 100;\r\n    };\r\n    this.gauges_cold = function (cold) {\r\n        user.gauges.c = cold / 100;\r\n    };\r\n    this.get_time = function (d) {\r\n        world.time = d;\r\n        world.transition = true;\r\n        audio.transition = 1;\r\n    };\r\n    this.change_ground = function () {\r\n        document.getElementById(\"game_body\").style.backgroundColor = SPRITE.GROUND[world.time];\r\n    };\r\n    this.kill_player = function (id) {\r\n        if (world.mode == WORLD.MODE_HUNGER_GAMES && world.players[id].nickname !== \"spectator\") this.new_alert(world.players[id].nickname + LANG[TEXT.DEAD]);\r\n        world.players[id].alive = false;\r\n    };\r\n    this.set_cam = function (data) {\r\n        var ui16 = new Uint16Array(data);\r\n        player.cam.change(ui16[1], ui16[2]);\r\n    };\r\n    this.recover_focus = function (data) {\r\n        var ui16 = new Uint16Array(data);\r\n        user.cam.change(ui16[1], ui16[2]);\r\n    };\r\n    this.hitten_other = function (ui8, data) {\r\n        var ui16 = new Uint16Array(data);\r\n        var len = (ui8.length - 2) / 4;\r\n        for (var l = 0; l < len; l++) {\r\n            var id = ui16[1 + 2 * l];\r\n            var pid = ui8[4 + 4 * l];\r\n            var angle = (ui8[5 + 4 * l] >> 1) / 127 * Math.PI * 2;\r\n            var u = world.fast_units[pid * world.max_units + id];\r\n            if (u && u.hit) {\r\n                if (audio.loaded && audio.run) audio.hit(ui8[5 + 4 * l] & 1, SOUND_BUILD[u.type], u.x, u.y);\r\n                u.hit.angle = angle;\r\n                u.hit.update = angle;\r\n            }\r\n        }\r\n    };\r\n    this.hitten = function (data) {\r\n        var ui16 = new Uint16Array(data);\r\n        var len = (ui16.length - 1) / 4;\r\n        for (var l = 0; l < len; l++) {\r\n            var k = l * 4;\r\n            var i = ui16[1 + k];\r\n            var j = ui16[2 + k];\r\n            var angle = (ui16[3 + k] >> 1) / 127 * Math.PI * 2;\r\n            var id = ui16[4 + k];\r\n            var tile = MAP.tiles[j][i];\r\n            var o;\r\n            switch (id) {\r\n                case 0:\r\n                    o = tile.p[0][0];\r\n                    o.angle = angle;\r\n                    o.update = true;\r\n                    break;\r\n                case 1:\r\n                    o = tile.s[0][0];\r\n                    o.angle = angle;\r\n                    o.update = true;\r\n                    break;\r\n                case 2:\r\n                    o = tile.s[1][0];\r\n                    o.angle = angle;\r\n                    o.update = true;\r\n                    break;\r\n                case 3:\r\n                    o = tile.s[2][0];\r\n                    o.angle = angle;\r\n                    o.update = true;\r\n                    break;\r\n                case 4:\r\n                    o = tile.t[0][0];\r\n                    o.angle = angle;\r\n                    o.update = true;\r\n                    break;\r\n                case 5:\r\n                    o = tile.t[1][0];\r\n                    o.angle = angle;\r\n                    o.update = true;\r\n                    break;\r\n                case 6:\r\n                    o = tile.t[2][0];\r\n                    o.angle = angle;\r\n                    o.update = true;\r\n                    break;\r\n                case 7:\r\n                    o = tile.t[3][0];\r\n                    o.angle = angle;\r\n                    o.update = true;\r\n                    break;\r\n                case 8:\r\n                    o = tile.t[4][0];\r\n                    o.angle = angle;\r\n                    o.update = true;\r\n                    break;\r\n                case 9:\r\n                    o = tile.t[5][0];\r\n                    o.angle = angle;\r\n                    o.update = true;\r\n                    break;\r\n                case 10:\r\n                    o = tile.g[0][0];\r\n                    o.angle = angle;\r\n                    o.update = true;\r\n                    break;\r\n                case 11:\r\n                    o = tile.g[1][0];\r\n                    o.angle = angle;\r\n                    o.update = true;\r\n                    break;\r\n                case 12:\r\n                    o = tile.g[2][0];\r\n                    o.angle = angle;\r\n                    o.update = true;\r\n                    break;\r\n                case 13:\r\n                    o = tile.d[0][0];\r\n                    o.angle = angle;\r\n                    o.update = true;\r\n                    break;\r\n                case 14:\r\n                    o = tile.d[1][0];\r\n                    o.angle = angle;\r\n                    o.update = true;\r\n                    break;\r\n                case 15:\r\n                    o = tile.d[2][0];\r\n                    o.angle = angle;\r\n                    o.update = true;\r\n                    break;\r\n                case 16:\r\n                    o = tile.b[0][0];\r\n                    o.angle = angle;\r\n                    o.update = true;\r\n                    break;\r\n                case 17:\r\n                    o = tile.b[1][0];\r\n                    o.angle = angle;\r\n                    o.update = true;\r\n                    break;\r\n                case 18:\r\n                    o = tile.b[2][0];\r\n                    o.angle = angle;\r\n                    o.update = true;\r\n                    break;\r\n                case 19:\r\n                    o = tile.b[3][0];\r\n                    o.angle = angle;\r\n                    o.update = true;\r\n                    break;\r\n                case 20:\r\n                    o = tile.f[0][0];\r\n                    o.angle = angle;\r\n                    o.update = true;\r\n                    break;\r\n                case 21:\r\n                    o = tile.f[1][0];\r\n                    o.angle = angle;\r\n                    o.update = true;\r\n                    break;\r\n                case 22:\r\n                    o = tile.f[2][0];\r\n                    o.angle = angle;\r\n                    o.update = true;\r\n                    break;\r\n                case 23:\r\n                    o = tile.sw[0][0];\r\n                    o.angle = angle;\r\n                    o.update = true;\r\n                    break;\r\n                case 24:\r\n                    o = tile.sw[1][0];\r\n                    o.angle = angle;\r\n                    o.update = true;\r\n                    break;\r\n                case 25:\r\n                    o = tile.sw[2][0];\r\n                    o.angle = angle;\r\n                    o.update = true;\r\n                    break;\r\n                case 26:\r\n                    o = tile.gw[0][0];\r\n                    o.angle = angle;\r\n                    o.update = true;\r\n                    break;\r\n                case 27:\r\n                    o = tile.gw[1][0];\r\n                    o.angle = angle;\r\n                    o.update = true;\r\n                    break;\r\n                case 28:\r\n                    o = tile.gw[2][0];\r\n                    o.angle = angle;\r\n                    o.update = true;\r\n                    break;\r\n                case 29:\r\n                    o = tile.dw[0][0];\r\n                    o.angle = angle;\r\n                    o.update = true;\r\n                    break;\r\n                case 30:\r\n                    o = tile.dw[1][0];\r\n                    o.angle = angle;\r\n                    o.update = true;\r\n                    break;\r\n                case 31:\r\n                    o = tile.dw[2][0];\r\n                    o.angle = angle;\r\n                    o.update = true;\r\n                    break;\r\n                case 32:\r\n                    o = tile.a[0][0];\r\n                    o.angle = angle;\r\n                    o.update = true;\r\n                    break;\r\n                case 33:\r\n                    o = tile.a[1][0];\r\n                    o.angle = angle;\r\n                    o.update = true;\r\n                    break;\r\n                case 34:\r\n                    o = tile.a[2][0];\r\n                    o.angle = angle;\r\n                    o.update = true;\r\n                    break;\r\n                case 35:\r\n                    o = tile.cs[0][0];\r\n                    o.angle = angle;\r\n                    o.update = true;\r\n                    break;\r\n                case 36:\r\n                    o = tile.cs[1][0];\r\n                    o.angle = angle;\r\n                    o.update = true;\r\n                    break;\r\n                case 37:\r\n                    o = tile.cs[2][0];\r\n                    o.angle = angle;\r\n                    o.update = true;\r\n                    break;\r\n                case 38:\r\n                    o = tile.cs[3][0];\r\n                    o.angle = angle;\r\n                    o.update = true;\r\n                    break;\r\n                case 40:\r\n                    o = tile.plm[0][0];\r\n                    o.angle = angle;\r\n                    o.update = true;\r\n                    break;\r\n                case 41:\r\n                    o = tile.plm[1][0];\r\n                    o.angle = angle;\r\n                    o.update = true;\r\n                    break;\r\n                case 42:\r\n                    o = tile.plm[2][0];\r\n                    o.angle = angle;\r\n                    o.update = true;\r\n                    break;\r\n                case 50:\r\n                    o = tile.re[0][0];\r\n                    o.angle = angle;\r\n                    o.update = true;\r\n                    break;\r\n                case 51:\r\n                    o = tile.re[1][0];\r\n                    o.angle = angle;\r\n                    o.update = true;\r\n                    break;\r\n                case 52:\r\n                    o = tile.re[2][0];\r\n                    o.angle = angle;\r\n                    o.update = true;\r\n                    break;\r\n                case 55:\r\n                    o = tile.c[0][0];\r\n                    o.angle = angle;\r\n                    o.update = true;\r\n                    break;\r\n                case 56:\r\n                    o = tile.m[0][0];\r\n                    o.angle = angle;\r\n                    o.update = true;\r\n                    break;\r\n                case 57:\r\n                    o = tile.m[1][0];\r\n                    o.angle = angle;\r\n                    o.update = true;\r\n                    break;\r\n                case 58:\r\n                    o = tile.m[2][0];\r\n                    o.angle = angle;\r\n                    o.update = true;\r\n                    break;\r\n            }\r\n            if (audio.loaded && audio.run && o) audio.hit(ui16[3 + k] & 1, SOUND_NATURE[id], o.x, o.y);\r\n        }\r\n    };\r\n    this.resurrection = function () {\r\n        this.socket[SENDWORD](WINDOW2[JSONWORD2].stringify([17, user.resurrection.pid, user.resurrection.iid]));\r\n    };\r\n    this.give_wheat = function (windmill, n) {\r\n        this.socket[SENDWORD](WINDOW2[JSONWORD4].stringify([22, n, windmill.pid, windmill.iid]));\r\n    };\r\n    this.give_bread_oven = function (bread_oven, w, f) {\r\n        if (w) this.socket[SENDWORD](WINDOW2[JSONWORD4].stringify([25, w, bread_oven.pid, bread_oven.iid])); else this.socket[SENDWORD](WINDOW2[JSONWORD3].stringify([24, f, bread_oven.pid, bread_oven.iid]));\r\n    };\r\n    this.take_bread = function (bread_oven) {\r\n        this.socket[SENDWORD](WINDOW5[JSONWORD5].stringify([26, bread_oven.pid, bread_oven.iid]));\r\n    };\r\n    this.claim_quest_reward = function (quest) {\r\n        this.socket[SENDWORD](WINDOW5[JSONWORD8].stringify([27, quest]));\r\n    };\r\n    this.give_well = function (well) {\r\n        this.socket[SENDWORD](WINDOW4[JSONWORD2].stringify([30, well.pid, well.iid]));\r\n    };\r\n    this.give_wood_extractor = function (extractor, n) {\r\n        this.socket[SENDWORD](WINDOW3[JSONWORD5].stringify([38, n, extractor.pid, extractor.iid, extractor.type]));\r\n    };\r\n    this.give_wood = function (furnace, n) {\r\n        this.socket[SENDWORD](WINDOW3[JSONWORD5].stringify([12, n, furnace.pid, furnace.iid]));\r\n    };\r\n    this.give_item = function (chest, id, n) {\r\n        this.socket[SENDWORD](WINDOW4[JSONWORD4].stringify([8, id, n, chest.pid, chest.iid]));\r\n    };\r\n    this.take_extractor = function (extractor) {\r\n        this.socket[SENDWORD](WINDOW5[JSONWORD5].stringify([37, extractor.pid, extractor.iid, extractor.type]));\r\n    };\r\n    this.take_flour = function (windmill) {\r\n        this.socket[SENDWORD](WINDOW5[JSONWORD5].stringify([23, windmill.pid, windmill.iid]));\r\n    };\r\n    this.take_chest = function (chest) {\r\n        this.socket[SENDWORD](WINDOW5[JSONWORD5].stringify([9, chest.pid, chest.iid]));\r\n    };\r\n    this.unlock_chest = function (chest) {\r\n        this.socket[SENDWORD](WINDOW6[JSONWORD6].stringify([15, chest.pid, chest.iid]));\r\n    };\r\n    this.lock_chest = function (chest) {\r\n        this.socket[SENDWORD](WINDOW7[JSONWORD7].stringify([16, chest.iid]));\r\n    };\r\n    this.kick_team = function (kick) {\r\n        _this.socket[SENDWORD](WINDOW8[JSONWORD8].stringify([20, user.totem.id, user.team[kick]]));\r\n    };\r\n    this.join_team = function () {\r\n        _this.socket[SENDWORD](WINDOW9[JSONWORD9].stringify([18, user.totem.pid, user.totem.id]));\r\n    };\r\n    this.leave_team = function () {\r\n        _this.socket[SENDWORD](WINDOW10[JSONWORD10].stringify([19]));\r\n    };\r\n    this.lock_team = function () {\r\n        _this.socket[SENDWORD](WINDOW10[JSONWORD8].stringify([35, user.totem.id]));\r\n        if (document.getElementById(\"lock_team\").innerHTML == \"LOCK\") {\r\n            user.totem.lock = 1;\r\n            document.getElementById(\"lock_team\").innerHTML = \"UNLOCK\";\r\n        } else {\r\n            user.totem.lock = 0;\r\n            document.getElementById(\"lock_team\").innerHTML = \"LOCK\";\r\n        }\r\n    };\r\n    this.units = function (data, ui8, hard_refresh) {\r\n        var ui16 = new Uint16Array(data);\r\n        if (hard_refresh) world.delete_all_units();\r\n        var len = (ui8.length - 2) / 18;\r\n        for (var i = 0; i < len; i++) {\r\n            var k8 = 2 + i * 18;\r\n            var k16 = 1 + i * 9;\r\n            var pid = ui8[k8];\r\n            var action = ui16[k16 + 1];\r\n            var id = ui16[k16 + 5];\r\n            var uid = pid * world.max_units + id;\r\n            if (action & STATE.DELETE) {\r\n                world.delete_units(uid);\r\n                continue;\r\n            }\r\n            var type = ui16[k16 + 2];\r\n            var x = ui16[k16 + 3];\r\n            var y = ui16[k16 + 4];\r\n            var info = ui16[k16 + 6];\r\n            var speed = ui16[k16 + 7];\r\n            var extra = ui16[k16 + 8];\r\n            var angle = ui8[k8 + 1] / 255 * Math.PI * 2;\r\n            if (!world.fast_units[uid]) {\r\n                var o = new Item(type, pid, id, x, y, angle, action, info, speed, extra);\r\n                world.fast_units[uid] = o;\r\n                world.units[type].push(o);\r\n                continue;\r\n            }\r\n            var u = world.fast_units[uid];\r\n            u.r.x = x;\r\n            u.r.y = y;\r\n            if (pid != 0 && Utils.dist(u, u.r) > CLIENT.LAG_DISTANCE) {\r\n                u.x = x;\r\n                u.y = y;\r\n            }\r\n            if (u.id !== user.id || pid === 0) u.nangle = angle;\r\n            u.action |= action;\r\n            u.info = info;\r\n            u.speed = speed;\r\n            u.extra = extra;\r\n            if (u.update) u.update(action);\r\n        }\r\n    };\r\n    this.leaderboard = function (data) {\r\n        this.timeout_server = old_timestamp;\r\n        var u = new Uint16Array(data);\r\n        user.ldb.init(u);\r\n    };\r\n    this.new_recipes = function (recipes) {\r\n        if (OLD_RECIPES !== undefined) RECIPES = OLD_RECIPES;\r\n        if (recipes.length > 0) {\r\n            OLD_RECIPES = JSON.parse(JSON.stringify(RECIPES));\r\n            for (var i = 0; i < recipes.length; i++) {\r\n                var r = recipes[i];\r\n                var recipe = RECIPES[r.item];\r\n                if (recipe === undefined) continue;\r\n                recipe.r = r.recipe;\r\n                recipe.w = r.workbench;\r\n                recipe.f = r.fire;\r\n                recipe.o = r.water;\r\n                recipe.e = r.well;\r\n                recipe.time = 1 / r.time;\r\n            }\r\n        }\r\n    };\r\n    this.welcome = function (msg) {\r\n        if (!msg || msg.length === 0) user.welcome.message = undefined; else user.welcome.message = create_welcome_text(msg);\r\n    };\r\n    this.chat = function (msg) {\r\n        var p = world.fast_units[msg[1] * world.max_units];\r\n        if (p) {\r\n            if (world.mode === WORLD.MODE_ZOMBIES && p.skin === WORLD.ZOMBIE_SKIN) {\r\n                if (!user.zombie) p.text.push(ZOMBIE_GRUMBLES[Math.floor(Math.random() * ZOMBIE_GRUMBLES.length)]); else {\r\n                    if (Math.random() > 0.5) p.text.push(msg[2] + \" ...\" + ZOMBIE_GRUMBLE); else p.text.push(ZOMBIE_GRUMBLE + \"... \" + msg[2]);\r\n                }\r\n            } else p.text.push(msg[2]);\r\n        }\r\n    };\r\n    this.select_craft = function (id) {\r\n        if (user.inv.max === user.inv.can_select.length && RECIPES[id].id2 !== INV.BAG && user.inv.find_item(RECIPES[id].id2) == -1 && !user.inv.free_place(RECIPES[id].r)) {\r\n            this.inv_full();\r\n            return 0;\r\n        }\r\n        this.socket[SENDWORD](WINDOW1[JSONWORD1].stringify([7, id]));\r\n        return 1;\r\n    };\r\n    this.workbench = function (val) {\r\n        user.craft.set_workbench(val);\r\n    };\r\n    this.well = function (val) {\r\n        user.craft.well = val;\r\n        user.craft.update();\r\n    };\r\n    this.fire = function (val) {\r\n        user.craft.fire = val;\r\n        user.craft.update();\r\n    };\r\n    this.water = function (val) {\r\n        user.craft.water = val;\r\n        user.craft.update();\r\n    };\r\n    this.dont_harvest = function (can) {\r\n        this.new_alert(LANG[TEXT.WRONG_TOOL]);\r\n    };\r\n    this.cancel_craft = function () {\r\n        user.craft.restart();\r\n    };\r\n    this.minimap = function (datas) {\r\n        game.minimap.players = [];\r\n        var p = world.fast_units[user.uid];\r\n        var d = 0;\r\n        for (var i = 1; i < datas.length; i += 2) {\r\n            var pos = {x: Math.floor(datas[i] * world.w / 250), y: Math.floor(datas[i + 1] * world.h / 250)};\r\n            if (p && !d && !user.spectator && Utils.dist(pos, p) < 250) {\r\n                d += 1;\r\n                continue;\r\n            }\r\n            game.minimap.players.push(pos);\r\n        }\r\n    };\r\n    this.reborn = function () {\r\n        user.resurrection.open = false;\r\n        user.ghost.enabled = false;\r\n        user.ghost.delay = -1;\r\n        user.ghost.label = null;\r\n        user.ghost.sec = null;\r\n        user.ghost.now = -1;\r\n    };\r\n    this.ghost = function (_delay) {\r\n        WORLD.GHOST_DELAY = _delay;\r\n        user.ghost.enabled = true;\r\n        user.ghost.delay = (new Date).getTime();\r\n        user.ghost.label = null;\r\n        user.ghost.now = -1;\r\n        var list = [INV.SUPER_HAMMER, INV.DRAGON_HEART, INV.SWORD_WOOD, INV.SWORD, INV.SWORD_GOLD, INV.SWORD_DIAMOND, INV.SWORD_AMETHYST, INV.REIDITE_SWORD, INV.DRAGON_SWORD, INV.LAVA_SWORD, INV.PIRATE_SWORD, INV.SPEAR, INV.WOOD_SPEAR, INV.GOLD_SPEAR, INV.DIAMOND_SPEAR, INV.AMETHYST_SPEAR, INV.REIDITE_SPEAR, INV.DRAGON_SPEAR, INV.LAVA_SPEAR, INV.CRAB_SPEAR, INV.WOOD_BOW, INV.STONE_BOW, INV.GOLD_BOW, INV.DIAMOND_BOW, INV.AMETHYST_BOW, INV.REIDITE_BOW, INV.DRAGON_BOW, INV.WOOD_SHIELD, INV.STONE_SHIELD, INV.GOLD_SHIELD, INV.DIAMOND_SHIELD, INV.AMETHYST_SHIELD, INV.REIDITE_SHIELD, INV.WAND1, INV.WAND2, INV.PICK_WOOD, INV.PICK, INV.PICK_GOLD, INV.PICK_DIAMOND, INV.PICK_AMETHYST, INV.PICK_REIDITE, INV.SPANNER, INV.PITCHFORK, INV.PITCHFORK2];\r\n        for (var i = 0; i < list.length; i++) {\r\n            var id = user.inv.find_item(list[i]);\r\n            if (id != -1) user.inv.delete_item(list.length[i], id);\r\n        }\r\n        user.craft.restart();\r\n    };\r\n    this.decrease_item2 = function (id, n1, n2) {\r\n        this.decrease_item(id, n1 * 256 + n2);\r\n    };\r\n    this.decrease_item = function (id, n) {\r\n        user.craft.preview = -1;\r\n        user.inv.decrease(id, n, user.inv.find_item(id));\r\n        user.craft.update();\r\n    };\r\n    this.accept_build = function (id) {\r\n        user.craft.preview = -1;\r\n        user.build.wait = true;\r\n        var item = user.inv.find_item(id);\r\n        user.inv.decrease(id, 1, item);\r\n        if (item >= 0 && !user.inv.n[id]) user.craft.update();\r\n        if (id == INV.TOTEM) user.team = [user.id];\r\n    };\r\n    this.cancel_crafting = function () {\r\n        this.socket[SENDWORD](WINDOW2[JSONWORD2].stringify([31]));\r\n    };\r\n    this.buy_market = function (v) {\r\n        this.socket[SENDWORD](WINDOW3[JSONWORD3].stringify([32, v.val, v.id]));\r\n    };\r\n    this.update_sign = function (id, symbol) {\r\n        this.socket[SENDWORD](WINDOW3[JSONWORD5].stringify([33, id, symbol]));\r\n    };\r\n    this.send_build = function () {\r\n        var p = world.fast_units[user.uid];\r\n        if (p) {\r\n            var pi2 = Math.PI * 2;\r\n            this.socket[SENDWORD](WINDOW3[JSONWORD3].stringify([10, user.craft.preview, Math.floor((p.angle + pi2) % pi2 * 255 / pi2), user.craft.mode]));\r\n        }\r\n    };\r\n    this.select_inv = function (id, i) {\r\n        switch (id) {\r\n            case INV.BANDAGE:\r\n            case INV.PLANT:\r\n            case INV.MEAT:\r\n            case INV.COOKED_MEAT:\r\n            case INV.SANDWICH:\r\n            case INV.BOTTLE_FULL:\r\n            case INV.COOKIE:\r\n            case INV.CAKE:\r\n            case INV.ICE:\r\n            case INV.BREAD:\r\n            case INV.PUMPKIN:\r\n            case INV.TOMATO:\r\n            case INV.CACTUS:\r\n            case INV.CARROT:\r\n            case INV.WATERMELON:\r\n            case INV.ALOE_VERA:\r\n            case INV.GARLIC:\r\n            case INV.FOODFISH:\r\n            case INV.FOODFISH_COOKED:\r\n            case INV.CRAB_STICK:\r\n            case INV.CRAB_LOOT:\r\n            case INV.CANDY:\r\n            case INV.SUGAR_CAN:\r\n                user.craft.preview = -1;\r\n                this.socket[SENDWORD](WINDOW4[JSONWORD4].stringify([5, id]));\r\n                break;\r\n            case INV.WORKBENCH:\r\n            case INV.SPIKE:\r\n            case INV.SEED:\r\n            case INV.WHEAT_SEED:\r\n            case INV.PUMPKIN_SEED:\r\n            case INV.TOMATO_SEED:\r\n            case INV.CARROT_SEED:\r\n            case INV.GARLIC_SEED:\r\n            case INV.THORNBUSH_SEED:\r\n            case INV.WATERMELON_SEED:\r\n            case INV.ALOE_VERA_SEED:\r\n            case INV.FIRE:\r\n            case INV.WALL:\r\n            case INV.STONE_WALL:\r\n            case INV.GOLD_WALL:\r\n            case INV.DIAMOND_WALL:\r\n            case INV.BIG_FIRE:\r\n            case INV.CHEST:\r\n            case INV.RESURRECTION:\r\n            case INV.EMERALD_MACHINE:\r\n            case INV.WOOD_DOOR:\r\n            case INV.STONE_DOOR:\r\n            case INV.GOLD_DOOR:\r\n            case INV.DIAMOND_DOOR:\r\n            case INV.AMETHYST_DOOR:\r\n            case INV.REIDITE_DOOR:\r\n            case INV.WOOD_DOOR_SPIKE:\r\n            case INV.STONE_DOOR_SPIKE:\r\n            case INV.GOLD_DOOR_SPIKE:\r\n            case INV.DIAMOND_DOOR_SPIKE:\r\n            case INV.AMETHYST_DOOR_SPIKE:\r\n            case INV.REIDITE_DOOR_SPIKE:\r\n            case INV.STONE_SPIKE:\r\n            case INV.GOLD_SPIKE:\r\n            case INV.DIAMOND_SPIKE:\r\n            case INV.FURNACE:\r\n            case INV.AMETHYST_WALL:\r\n            case INV.AMETHYST_SPIKE:\r\n            case INV.REIDITE_WALL:\r\n            case INV.REIDITE_SPIKE:\r\n            case INV.BRIDGE:\r\n            case INV.ROOF:\r\n            case INV.PLOT:\r\n            case INV.WINDMILL:\r\n            case INV.EXTRACTOR_MACHINE_STONE:\r\n            case INV.EXTRACTOR_MACHINE_GOLD:\r\n            case INV.EXTRACTOR_MACHINE_DIAMOND:\r\n            case INV.EXTRACTOR_MACHINE_AMETHYST:\r\n            case INV.EXTRACTOR_MACHINE_REIDITE:\r\n            case INV.BED:\r\n            case INV.GARLAND:\r\n            case INV.WELL:\r\n            case INV.SIGN:\r\n            case INV.BREAD_OVEN:\r\n            case INV.TOTEM:\r\n            case INV.WOOD_TOWER:\r\n                if (!user.zombie) {\r\n                    if (user.craft.preview === id) user.craft.preview = -1; else user.craft.preview = id;\r\n                }\r\n                break;\r\n            case INV.SWORD:\r\n            case INV.SWORD_WOOD:\r\n            case INV.SWORD_GOLD:\r\n            case INV.SWORD_DIAMOND:\r\n            case INV.SWORD_AMETHYST:\r\n            case INV.REIDITE_SWORD:\r\n            case INV.PIRATE_SWORD:\r\n            case INV.DRAGON_SWORD:\r\n            case INV.LAVA_SWORD:\r\n            case INV.WOOD_BOW:\r\n            case INV.STONE_BOW:\r\n            case INV.GOLD_BOW:\r\n            case INV.DIAMOND_BOW:\r\n            case INV.AMETHYST_BOW:\r\n            case INV.REIDITE_BOW:\r\n            case INV.DRAGON_BOW:\r\n            case INV.WAND1:\r\n            case INV.WAND2:\r\n            case INV.WOOD_SPEAR:\r\n            case INV.SPEAR:\r\n            case INV.GOLD_SPEAR:\r\n            case INV.DIAMOND_SPEAR:\r\n            case INV.AMETHYST_SPEAR:\r\n            case INV.AMETHYST_REIDITE:\r\n            case INV.DRAGON_SPEAR:\r\n            case INV.LAVA_SPEAR:\r\n            case INV.REIDITE_SPEAR:\r\n            case INV.CRAB_SPEAR:\r\n                if (!user.zombie) {\r\n                    user.craft.preview = -1;\r\n                    var p = world.fast_units[user.uid];\r\n                    if (p && p.right === id) this.socket[SENDWORD](WINDOW5[JSONWORD5].stringify([5, INV.HAND])); else {\r\n                        user.weapon.wait = true;\r\n                        this.socket[SENDWORD](WINDOW6[JSONWORD6].stringify([5, id]));\r\n                    }\r\n                }\r\n                break;\r\n            case INV.PICK:\r\n            case INV.PICK_WOOD:\r\n            case INV.PICK_GOLD:\r\n            case INV.PICK_DIAMOND:\r\n            case INV.HAMMER:\r\n            case INV.HAMMER_GOLD:\r\n            case INV.HAMMER_DIAMOND:\r\n            case INV.BOOK:\r\n            case INV.HAMMER_AMETHYST:\r\n            case INV.HAMMER_REIDITE:\r\n            case INV.PICK_AMETHYST:\r\n            case INV.PICK_REIDITE:\r\n            case INV.SUPER_HAMMER:\r\n            case INV.SHOVEL:\r\n            case INV.SHOVEL_GOLD:\r\n            case INV.SHOVEL_DIAMOND:\r\n            case INV.SHOVEL_AMETHYST:\r\n            case INV.SPANNER:\r\n            case INV.MACHETE:\r\n            case INV.PITCHFORK:\r\n            case INV.PITCHFORK2:\r\n            case INV.SADDLE:\r\n            case INV.WATERING_CAN_FULL:\r\n            case INV.WOOD_SHIELD:\r\n            case INV.STONE_SHIELD:\r\n            case INV.GOLD_SHIELD:\r\n            case INV.DIAMOND_SHIELD:\r\n            case INV.AMETHYST_SHIELD:\r\n            case INV.REIDITE_SHIELD:\r\n                if (!user.zombie) {\r\n                    user.craft.preview = -1;\r\n                    var p = world.fast_units[user.uid];\r\n                    if (p && p.right === id) {\r\n                        this.socket[SENDWORD](WINDOW7[JSONWORD7].stringify([5, INV.HAND]));\r\n                    } else this.socket[SENDWORD](WINDOW8[JSONWORD8].stringify([5, id]));\r\n                }\r\n                break;\r\n            case INV.BOAT:\r\n            case INV.SLED:\r\n            case INV.MOUNT_BOAR:\r\n            case INV.BABY_MAMMOTH:\r\n            case INV.CRAB_BOSS:\r\n            case INV.BABY_DRAGON:\r\n            case INV.BABY_LAVA:\r\n            case INV.HAWK:\r\n            case INV.PLANE:\r\n            case INV.NIMBUS:\r\n                if (!user.zombie) {\r\n                    user.craft.preview = -1;\r\n                    var p = world.fast_units[user.uid];\r\n                    this.socket[SENDWORD](WINDOW8[JSONWORD8].stringify([5, id]));\r\n                }\r\n                break;\r\n            case INV.CROWN_GREEN:\r\n            case INV.CROWN_ORANGE:\r\n            case INV.CROWN_BLUE:\r\n            case INV.WOOD_HELMET:\r\n            case INV.STONE_HELMET:\r\n            case INV.GOLD_HELMET:\r\n            case INV.DIAMOND_HELMET:\r\n            case INV.AMETHYST_HELMET:\r\n            case INV.REIDITE_HELMET:\r\n            case INV.DIAMOND_PROTECTION:\r\n            case INV.AMETHYST_PROTECTION:\r\n            case INV.REIDITE_PROTECTION:\r\n            case INV.DRAGON_HELMET:\r\n            case INV.LAVA_HELMET:\r\n            case INV.WITCH:\r\n            case INV.CROWN_CRAB:\r\n            case INV.SUPER_DIVING_SUIT:\r\n                var p = world.fast_units[user.uid];\r\n                if (p && p.clothe !== id) user.helmet.wait = true;\r\n                this.socket[SENDWORD](WINDOW4[JSONWORD5].stringify([5, id]));\r\n                break;\r\n            case INV.EARMUFFS:\r\n            case INV.HOOD:\r\n            case INV.PEASANT:\r\n            case INV.WINTER_PEASANT:\r\n            case INV.COAT:\r\n            case INV.CAP_SCARF:\r\n            case INV.FUR_HAT:\r\n            case INV.PILOT_HELMET:\r\n            case INV.TURBAN1:\r\n            case INV.TURBAN2:\r\n            case INV.CHRISTMAS_HAT:\r\n            case INV.ELF_HAT:\r\n            case INV.WINTER_HOOD:\r\n            case INV.EXPLORER_HAT:\r\n            case INV.PIRATE_HAT:\r\n            case INV.DIVING_MASK:\r\n                this.socket[SENDWORD](WINDOW9[JSONWORD9].stringify([5, id]));\r\n                break;\r\n        }\r\n    };\r\n    this.delete_inv = function (id) {\r\n        this.socket[SENDWORD](WINDOW3[JSONWORD1].stringify([6, id]));\r\n    };\r\n    this.delete_inv_ok = function (id) {\r\n        user.build.wait = true;\r\n        var i = user.inv.find_item(id);\r\n        user.inv.delete_item(id, i);\r\n        user.craft.update();\r\n    };\r\n    this.recycle_inv = function (id, i) {\r\n        this.socket[SENDWORD](WINDOW1[JSONWORD7].stringify([29, id]));\r\n    };\r\n    this.delete_one_inv = function (id, i) {\r\n        this.socket[SENDWORD](WINDOW2[JSONWORD2].stringify([28, id]));\r\n    };\r\n    this.delete_one_inv_ok = function (id) {\r\n        user.build.wait = true;\r\n        var i = user.inv.find_item(id);\r\n        user.inv.decrease(id, 1, i);\r\n        user.craft.update();\r\n    };\r\n    this.delete_single_inv = function (data) {\r\n        var id = data[1];\r\n        var amount = data[2];\r\n        user.build.wait = true;\r\n        var i = user.inv.find_item(id);\r\n        user.inv.decrease(id, amount, i);\r\n        user.craft.update();\r\n    };\r\n    this.stop_attack = function () {\r\n        this.socket[SENDWORD](WINDOW2[JSONWORD2].stringify([14]));\r\n    };\r\n    this.send_attack = function (angle) {\r\n        var pi2 = Math.PI * 2;\r\n        this.socket[SENDWORD](WINDOW3[JSONWORD3].stringify([4, Math.floor((angle + pi2) % pi2 * 255 / pi2)]));\r\n    };\r\n    this.send_angle = function (angle) {\r\n        var pi2 = Math.PI * 2;\r\n        this.socket[SENDWORD](WINDOW3[JSONWORD3].stringify([3, Math.floor((angle + pi2) % pi2 * 255 / pi2)]));\r\n    };\r\n    this.send_move = function (move) {\r\n        this.socket[SENDWORD](WINDOW12[JSONWORD12].stringify([2, move]));\r\n    };\r\n    this.send_command = function (buffer) {\r\n        this.socket[SENDWORD](WINDOW5[JSONWORD5].stringify([36, buffer]));\r\n    };\r\n    this.send_chat = function (buffer) {\r\n        var p = world.fast_units[user.uid];\r\n        if (user.zombie) {\r\n            if (Math.random() > 0.5) p.text.push(buffer.substring(0, 25) + \" ...\" + ZOMBIE_GRUMBLE); else p.text.push(ZOMBIE_GRUMBLE + \"... \" + buffer.substring(0, 25));\r\n        } else p.text.push(buffer);\r\n        this.socket[SENDWORD](WINDOW5[JSONWORD5].stringify([0, buffer]));\r\n    };\r\n    this.move_units = function (p) {\r\n        var u = player.select.units;\r\n        if (u.length == 0) return;\r\n        var data = [2];\r\n        var ids = [];\r\n        Utils.sub_vector(p, {x: player.cam.rx, y: player.cam.ry});\r\n        data.push(p.x);\r\n        data.push(p.y);\r\n        for (var i = 0; i < u.length; i++) ids.push(u[i].oid);\r\n        data.push(ids);\r\n        this.socket[SENDWORD](WINDOW6[JSONWORD6].stringify(data));\r\n    };\r\n    this.cam_delay = 0;\r\n    this.last_cam = {i: 0, j: 0};\r\n    this.update_cam = function () {\r\n        if (old_timestamp - this.cam_delay > CLIENT.CAM_DELAY) {\r\n            this.cam_delay = old_timestamp;\r\n            var c = user.cam;\r\n            var i = Math.floor(c.x / 100);\r\n            var j = Math.floor(c.y / 100);\r\n            if (this.last_cam.i != i || this.last_cam.j != j) {\r\n                this.socket[SENDWORD](WINDOW8[JSONWORD7].stringify([1, Math.floor(-c.x), Math.floor(-c.y)]));\r\n                this.last_cam.i = i;\r\n                this.last_cam.j = j;\r\n            }\r\n        }\r\n    };\r\n    this.ping_delay = 0;\r\n    this.try_ping = function () {\r\n        if (old_timestamp - this.ping_delay > CLIENT.PING_DELAY) {\r\n            this.ping_delay = old_timestamp;\r\n            this.ping();\r\n        }\r\n    };\r\n    this.lost = function () {\r\n        user.reconnect.enabled = true;\r\n        if (this._current_id != this.socket._current_id) return;\r\n        this._current_id++;\r\n        this.socket.close();\r\n        client.connect();\r\n    };\r\n    this.join_new_team = function (ui8) {\r\n        this.new_alert(LANG[TEXT.JOIN_TEAM]);\r\n        for (var i = 1; i < ui8.length; i++) user.team.push(ui8[i]);\r\n    };\r\n    this.new_member_team = function (id) {\r\n        this.new_alert(world.players[id].nickname + LANG[TEXT.JOINED_TEAM]);\r\n        user.team.push(id);\r\n        var div = document.getElementById(\"team_box\");\r\n        if (game.team_buttons_id != -1 && div.style.display == \"inline-block\") game.team_buttons[game.team_buttons_id].action();\r\n    };\r\n    this.destroy_team = function () {\r\n        this.new_alert(LANG[TEXT.TEAM_DESTROYED]);\r\n        user.totem.wait = true;\r\n        user.team = [];\r\n        document.getElementById(\"team_box\").style.display = \"none\";\r\n    };\r\n    this.exclude_team = function (id) {\r\n        if (id == user.id) {\r\n            this.new_alert(LANG[TEXT.LEFT_TEAM]);\r\n            user.totem.wait = true;\r\n            user.team = [];\r\n            document.getElementById(\"team_box\").style.display = \"none\";\r\n        } else {\r\n            this.new_alert(world.players[id].nickname + LANG[TEXT.LEFT_TEAM2]);\r\n            for (var i = 0; i < user.team.length; i++) {\r\n                if (user.team[i] == id) {\r\n                    user.team.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n            var div = document.getElementById(\"team_box\");\r\n            if (game.team_buttons_id != -1 && div.style.display == \"inline-block\") game.team_buttons[game.team_buttons_id].action();\r\n        }\r\n    };\r\n    this.steal_token = function (pid) {\r\n        user.alive = false;\r\n        this.new_alert(LANG[TEXT.TOKEN]);\r\n        if (this._current_id != this.socket._current_id) return;\r\n        this._current_id++;\r\n        game.quit(ui.run);\r\n        this.socket.close();\r\n    };\r\n    this.killed = function (howdie, data) {\r\n        user.alive = false;\r\n        var ui16 = new Uint16Array(data);\r\n        var ui32 = new Uint32Array(data);\r\n        user.die.howdie = DIE[howdie][Math.floor(Math.random() * DIE[howdie].length)];\r\n        user.die.score = Utils.simplify_number(world.players[user.id].score);\r\n        user.die.bank = Utils.simplify_number(ui32[1]);\r\n        user.die.kill = ui16[1];\r\n        this.new_alert(LANG[TEXT.YOU_DEAD]);\r\n        if (this._current_id != this.socket._current_id) return;\r\n        this._current_id++;\r\n        game.quit(scoreboard.run);\r\n        this.socket.close();\r\n        window.aiptag.cmd.display.push(function () {\r\n            window.aipDisplayTag.display(\"MFN_starve-io_300x250\");\r\n        });\r\n    };\r\n    this.ping = function () {\r\n        this.socket[SENDWORD](CLIENT.PING);\r\n    };\r\n    this.check_state = function () {\r\n        if (this.socket.readyState == 3) {\r\n            this.timeout_server -= CLIENT.TIMEOUT_SERVER;\r\n        }\r\n    };\r\n    this.check_pong = function () {\r\n        if (delta > CLIENT.LOOSE_FOCUS) this.timeout_server = old_timestamp;\r\n        if (old_timestamp - this.timeout_server > CLIENT.TIMEOUT_SERVER) {\r\n            this.timeout_server = old_timestamp;\r\n            this.lost();\r\n        }\r\n    };\r\n    this.handshake = function (msg) {\r\n        ___adsvid++;\r\n        clearTimeout(this.timeout_handler);\r\n        document.getElementById(\"commandMainBoxName\").innerHTML = this.mode_list[this.current_mode][this.selected_server[this.current_mode]].a;\r\n        document.getElementById(\"exploreForest\").src = \"img/forest-leaf.png\";\r\n        document.getElementById(\"exploreWinter\").src = \"img/winter-flake.png\";\r\n        document.getElementById(\"exploreDesert\").src = \"img/desert-cactus.png\";\r\n        document.getElementById(\"exploreLava\").src = \"img/lava-volcano.png\";\r\n        this.timeout_server = old_timestamp;\r\n        user.gauges.cold.ed = user.gauges.cold.em;\r\n        user.gauges.hunger.ed = user.gauges.hunger.em;\r\n        user.gauges.thirst.ed = user.gauges.thirst.em;\r\n        user.gauges.oxygen.ed = user.gauges.oxygen.em;\r\n        user.gauges.warm.ed = user.gauges.warm.em;\r\n        user.gauges.l = 1;\r\n        user.gauges.c = 1;\r\n        user.gauges.h = 1;\r\n        user.gauges.t = 1;\r\n        user.gauges.o = 1;\r\n        user.gauges.wa = 1;\r\n        user.bigmap = false;\r\n        game.info_box.display = 0;\r\n        user.inv.can_select = [];\r\n        user.inv.n = [];\r\n        user.inv.max = WORLD.WITHOUT_BAG;\r\n        user.inv.bonus = 0;\r\n        user.inv.bag = 0;\r\n        user.inv.id = -1;\r\n        game.show_recipe_book = 1;\r\n        game.show_clock = 1;\r\n        game.show_quest = 1;\r\n        game.show_market = 1;\r\n        user.alive = true;\r\n        user.inv.drag.stop();\r\n        user.craft.can_craft = [];\r\n        user.craft.crafting = false;\r\n        user.craft.can_build = false;\r\n        user.craft.preview = -1;\r\n        user.craft.id = -1;\r\n        user.craft.workbench = false;\r\n        user.craft.well = false;\r\n        user.craft.fire = false;\r\n        user.craft.water = false;\r\n        user.craft.timeout = new Utils.LinearAnimation(false, 0, 1, 0, 1, 1);\r\n        user.weapon.timeout = new Utils.LinearAnimation(false, 0, 1, 0, 0.1, 1);\r\n        user.weapon.wait = false;\r\n        user.helmet.timeout = new Utils.LinearAnimation(false, 0, 1, 0, 0.2, 1);\r\n        user.helmet.wait = false;\r\n        user.build.timeout = new Utils.LinearAnimation(false, 0, 1, 0, 1, 1);\r\n        user.build.wait = false;\r\n        user.totem.id = -1;\r\n        user.totem.pid = -1;\r\n        user.totem.wait = false;\r\n        user.totem.timeout = new Utils.LinearAnimation(false, 0, 1, 0, 0.03333333333333333, 1);\r\n        game.minimap.marker.x = -1;\r\n        game.minimap.marker.y = -1;\r\n        game.craft_list.open = false;\r\n        game.minimap.players = [];\r\n        user.show_spectators.enabled = false;\r\n        world.mode = msg[1];\r\n        if (msg[20] !== undefined && msg[21] !== undefined) {\r\n            world.nw = msg[20];\r\n            world.nh = msg[21];\r\n            world.w = world.nw * world.dw;\r\n            world.h = world.nh * world.dh;\r\n        }\r\n        world.islands = msg[22];\r\n        world.custom_map = msg[23];\r\n        _this.welcome(msg[24]);\r\n        _this.new_recipes(msg[25]);\r\n        user.desert.tempest = msg[26];\r\n        user.blizzard = 0;\r\n        user.winter.tempest = msg[27];\r\n        world.generate_world(msg[19]);\r\n        world.time = msg[5];\r\n        world.clock.hour = msg[15];\r\n        world.clock.init = (new Date).getTime();\r\n        game.quests.born = msg[16];\r\n        world.transition = false;\r\n        user.day = msg[2];\r\n        game.quests.reset();\r\n        user.team = msg[8];\r\n        world.units[ITEMS.PLAYERS] = [];\r\n        world.units[ITEMS.FRUIT] = [];\r\n        world.units[ITEMS.WORKBENCH] = [];\r\n        world.units[ITEMS.FIRE] = [];\r\n        world.units[ITEMS.BIG_FIRE] = [];\r\n        world.units[ITEMS.SEED] = [];\r\n        world.units[ITEMS.WHEAT_SEED] = [];\r\n        world.units[ITEMS.PUMPKIN_SEED] = [];\r\n        world.units[ITEMS.TOMATO_SEED] = [];\r\n        world.units[ITEMS.CARROT_SEED] = [];\r\n        world.units[ITEMS.GARLIC_SEED] = [];\r\n        world.units[ITEMS.THORNBUSH_SEED] = [];\r\n        world.units[ITEMS.WATERMELON_SEED] = [];\r\n        world.units[ITEMS.ALOE_VERA_SEED] = [];\r\n        world.units[ITEMS.WALL] = [];\r\n        world.units[ITEMS.STONE_WALL] = [];\r\n        world.units[ITEMS.GOLD_WALL] = [];\r\n        world.units[ITEMS.DIAMOND_WALL] = [];\r\n        world.units[ITEMS.WOOD_DOOR] = [];\r\n        world.units[ITEMS.STONE_DOOR] = [];\r\n        world.units[ITEMS.GOLD_DOOR] = [];\r\n        world.units[ITEMS.DIAMOND_DOOR] = [];\r\n        world.units[ITEMS.WOOD_DOOR_SPIKE] = [];\r\n        world.units[ITEMS.STONE_DOOR_SPIKE] = [];\r\n        world.units[ITEMS.GOLD_DOOR_SPIKE] = [];\r\n        world.units[ITEMS.DIAMOND_DOOR_SPIKE] = [];\r\n        world.units[ITEMS.AMETHYST_DOOR_SPIKE] = [];\r\n        world.units[ITEMS.REIDITE_DOOR_SPIKE] = [];\r\n        world.units[ITEMS.CHEST] = [];\r\n        world.units[ITEMS.RESURRECTION] = [];\r\n        world.units[ITEMS.EMERALD_MACHINE] = [];\r\n        world.units[ITEMS.SPIKE] = [];\r\n        world.units[ITEMS.STONE_SPIKE] = [];\r\n        world.units[ITEMS.GOLD_SPIKE] = [];\r\n        world.units[ITEMS.DIAMOND_SPIKE] = [];\r\n        world.units[ITEMS.WOLF] = [];\r\n        world.units[ITEMS.BOAR] = [];\r\n        world.units[ITEMS.CRAB_BOSS] = [];\r\n        world.units[ITEMS.BABY_DRAGON] = [];\r\n        world.units[ITEMS.BABY_LAVA] = [];\r\n        world.units[ITEMS.HAWK] = [];\r\n        world.units[ITEMS.TREASURE_CHEST] = [];\r\n        world.units[ITEMS.DEAD_BOX] = [];\r\n        world.units[ITEMS.GIFT] = [];\r\n        world.units[ITEMS.CRATE] = [];\r\n        world.units[ITEMS.BREAD_OVEN] = [];\r\n        world.units[ITEMS.PIRANHA] = [];\r\n        world.units[ITEMS.KRAKEN] = [];\r\n        world.units[ITEMS.CRAB] = [];\r\n        world.units[ITEMS.FOX] = [];\r\n        world.units[ITEMS.BEAR] = [];\r\n        world.units[ITEMS.MAMMOTH] = [];\r\n        world.units[ITEMS.BABY_MAMMOTH] = [];\r\n        world.units[ITEMS.VULTURE] = [];\r\n        world.units[ITEMS.SAND_WORM] = [];\r\n        world.units[ITEMS.DRAGON] = [];\r\n        world.units[ITEMS.LAVA_DRAGON] = [];\r\n        world.units[ITEMS.FLAME] = [];\r\n        world.units[ITEMS.WHEAT_MOB] = [];\r\n        world.units[ITEMS.ALOE_VERA_MOB] = [];\r\n        world.units[ITEMS.PUMPKIN_MOB] = [];\r\n        world.units[ITEMS.GARLIC_MOB] = [];\r\n        world.units[ITEMS.THORNBUSH_MOB] = [];\r\n        world.units[ITEMS.RABBIT] = [];\r\n        world.units[ITEMS.PENGUIN] = [];\r\n        world.units[ITEMS.SPELL] = [];\r\n        world.units[ITEMS.FIREFLY] = [];\r\n        world.units[ITEMS.SPIDER] = [];\r\n        world.units[ITEMS.FURNACE] = [];\r\n        world.units[ITEMS.AMETHYST_WALL] = [];\r\n        world.units[ITEMS.AMETHYST_SPIKE] = [];\r\n        world.units[ITEMS.AMETHYST_DOOR] = [];\r\n        world.units[ITEMS.REIDITE_WALL] = [];\r\n        world.units[ITEMS.REIDITE_SPIKE] = [];\r\n        world.units[ITEMS.REIDITE_DOOR] = [];\r\n        world.units[ITEMS.TOTEM] = [];\r\n        world.units[ITEMS.WOOD_TOWER] = [];\r\n        world.units[ITEMS.BRIDGE] = [];\r\n        world.units[ITEMS.ROOF] = [];\r\n        world.units[ITEMS.PLOT] = [];\r\n        world.units[ITEMS.WINDMILL] = [];\r\n        world.units[ITEMS.EXTRACTOR_MACHINE_STONE] = [];\r\n        world.units[ITEMS.EXTRACTOR_MACHINE_GOLD] = [];\r\n        world.units[ITEMS.EXTRACTOR_MACHINE_DIAMOND] = [];\r\n        world.units[ITEMS.EXTRACTOR_MACHINE_AMETHYST] = [];\r\n        world.units[ITEMS.EXTRACTOR_MACHINE_REIDITE] = [];\r\n        world.units[ITEMS.GARLAND] = [];\r\n        world.units[ITEMS.BED] = [];\r\n        world.units[ITEMS.WELL] = [];\r\n        world.units[ITEMS.SIGN] = [];\r\n        world.fast_units = [];\r\n        world.max_units = msg[7];\r\n        user.id = msg[9];\r\n        user.uid = user.id * world.max_units;\r\n        if (audio.loaded) {\r\n            audio.players[0].uid = user.uid;\r\n            audio.players[0].free = 0;\r\n        }\r\n        keyboard.clear_directionnal();\r\n        user.cam.change(msg[3], msg[10]);\r\n        world.players = [];\r\n        var players = world.players;\r\n        for (var i = 0; i < msg[11]; i++) players.push(new Player);\r\n        for (var i = 0, l = msg[4]; i < l.length; i++) {\r\n            var p = players[l[i].i];\r\n            p.nickname = l[i].n;\r\n            p.skin = l[i].s;\r\n            p.accessory = l[i].a;\r\n            p.crate = l[i].c;\r\n            p.book = l[i].b;\r\n            p.dead = l[i].d;\r\n            p.baglook = l[i].g;\r\n            p.level = l[i].l;\r\n            p.score = Utils.restore_number(l[i].p);\r\n            p.alive = true;\r\n            if (SHOW_ID === 1) p.nickname += \"|\" + l[i].i;\r\n        }\r\n        user.ldb.sort();\r\n        if (world.mode === WORLD.MODE_HUNGER_GAMES && world.players[user.id].nickname === \"spectator\") user.spectator = true; else user.spectator = false;\r\n        if (world.mode === WORLD.MODE_ZOMBIES && world.players[user.id].skin === WORLD.ZOMBIE_SKIN) user.zombie = true; else user.zombie = false;\r\n        if (world.mode === WORLD.MODE_VAMPIRES && world.players[user.id].skin === WORLD.VAMPIRE_SKIN) user.vampire = true; else user.vampire = false;\r\n        Cookies.set(\"starve_token\", user.token);\r\n        if (msg[12] === 0) {\r\n            user.shop.delay = 0;\r\n            game.quests.restore(msg[17]);\r\n            var inv = msg[14];\r\n            if (inv[INV.BAG]) user.inv.update_bag_size(1, 0);\r\n            for (var i = 0; i < inv.length; i++) {\r\n                if (inv[i]) {\r\n                    if (i == INV.BAG) continue; else if (i == INV.HAND) continue; else this.gather([0, i, inv[i]]);\r\n                }\r\n            }\r\n            user.shop.open = false;\r\n        } else {\r\n            if (world.mode === WORLD.MODE_LEGACY) this.gather([0, INV.SANDWORM_JUICE, 1]); else if (world.mode === WORLD.MODE_VAMPIRES) {\r\n                if (user.vampire) this.gather([0, INV.ROOF, 4]); else this.gather([0, INV.GARLIC_SEED, 3]);\r\n            }\r\n            if (world.mode === WORLD.MODE_PVP || world.mode === WORLD.MODE_VAMPIRES || world.mode === WORLD.MODE_EXPERIMENTAL || world.mode === WORLD.MODE_LEGACY) {\r\n                user.shop.delay = (new Date).getTime();\r\n                user.shop.open = true;\r\n                user.shop.value = msg[13];\r\n                game.shop.init();\r\n            } else {\r\n                user.shop.delay = 0;\r\n                user.shop.open = false;\r\n                user.shop.value = 0;\r\n            }\r\n            user.token_id = msg[12].toString();\r\n        }\r\n        user.ghost.enabled = msg[6];\r\n        user.ghost.delay = -1;\r\n        user.ghost.label = null;\r\n        user.ghost.now = -1;\r\n        Cookies.set(\"starve_token_id\", user.token_id);\r\n        if (user.reconnect.enabled) {\r\n            user.reconnect.rotate = 0;\r\n            user.reconnect.enabled = false;\r\n        } else {\r\n            ui.quit(game.run);\r\n            if (ga) ga(\"send\", \"event\", \"Game\", \"play\", \"S\" + ui.skin + \"A\" + ui.accessory);\r\n            healtime = new Date().getTime();\r\n        }\r\n    };\r\n    this.connect = function () {\r\n        this.timeout_number = 0;\r\n        this.connect_timeout();\r\n    };\r\n    this.connect_timeout = function () {\r\n        var i = this.selected_server[this.current_mode];\r\n        var dns = this.mode_list[this.current_mode][i].i;\r\n        var port = this.mode_list[this.current_mode][i].p;\r\n        var ssl = this.mode_list[this.current_mode][i].ssl;\r\n        var region = this.mode_list[this.current_mode][i].re || \"frankfurt\";\r\n        var serverName = \"fail\";\r\n        if (ssl === 1) {\r\n            dns = dns.replace(\".starve.io\", \"\");\r\n            if (dns.indexOf(\"server-eu\") !== -1) {\r\n                serverName = \"frankfurt\" + Math.floor(1 + Math.random() * 3);\r\n            } else if (dns.indexOf(\"server-na\") !== -1) {\r\n                serverName = \"toronto\" + Math.floor(1 + Math.random() * 3);\r\n            } else if (dns.indexOf(\"server-wa\") !== -1) {\r\n                serverName = \"fremont\" + Math.floor(1 + Math.random() * 3);\r\n            } else if (dns.indexOf(\"server-au\") !== -1) {\r\n                serverName = \"sydney\" + Math.floor(1 + Math.random() * 3);\r\n            } else if (dns.indexOf(\"server-as2\") !== -1) {\r\n                serverName = \"tokyo\" + Math.floor(1 + Math.random() * 3);\r\n            } else if (dns.indexOf(\"server-as\") !== -1) {\r\n                serverName = \"singapore\" + Math.floor(1 + Math.random() * 3);\r\n            } else {\r\n                serverName = region.toLowerCase() + Math.floor(1 + Math.random() * 3);\r\n            }\r\n            dns = serverName + \".starve.io/\" + dns;\r\n        } else {\r\n            dns = dns + \":\" + port;\r\n        }\r\n        this.socket = new window.WebSocket(\"ws\" + (ssl === 1 ? \"s\" : \"\") + \"://\" + dns);\r\n        this.socket.binaryType = \"arraybuffer\";\r\n        this.socket._current_id = this._current_id;\r\n        this.socket.onmessage = function (evt) {\r\n            if (this._current_id != _this._current_id) return;\r\n            if (typeof evt.data == \"string\") {\r\n                var msg = JSON.parse(evt.data);\r\n                switch (msg[0]) {\r\n                    case 0:\r\n                        _this.chat(msg);\r\n                        break;\r\n                    case 1:\r\n                        _this.kick(msg[1]);\r\n                        break;\r\n                    case 2:\r\n                        _this.new_player(msg);\r\n                        break;\r\n                    case 3:\r\n                        _this.handshake(msg);\r\n                        break;\r\n                    case 4:\r\n                        _this.message(msg[1]);\r\n                        break;\r\n                    case 5:\r\n                        _this.commands(msg);\r\n                        break;\r\n                    case 6:\r\n                        _this.welcome(msg[1]);\r\n                        break;\r\n                }\r\n            } else {\r\n                var ui8 = new Uint8Array(evt.data);\r\n                switch (ui8[0]) {\r\n                    case 0:\r\n                        _this.units(evt.data, ui8, false);\r\n                        break;\r\n                    case 1:\r\n                        _this.units(evt.data, ui8, true);\r\n                        break;\r\n                    case 2:\r\n                        _this.cancel_craft();\r\n                        break;\r\n                    case 3:\r\n                        _this.gather(new Uint16Array(evt.data));\r\n                        break;\r\n                    case 4:\r\n                        _this.old_version();\r\n                        break;\r\n                    case 5:\r\n                        _this.full();\r\n                        break;\r\n                    case 6:\r\n                        _this.dont_harvest();\r\n                        break;\r\n                    case 7:\r\n                        _this.hitten(evt.data);\r\n                        break;\r\n                    case 8:\r\n                        _this.build_stop(ui8[1]);\r\n                        break;\r\n                    case 9:\r\n                        _this.build_ok(ui8[1]);\r\n                        break;\r\n                    case 10:\r\n                        _this.inv_full();\r\n                        break;\r\n                    case 11:\r\n                        _this.decrease_item(ui8[1], ui8[2]);\r\n                        break;\r\n                    case 12:\r\n                        _this.workbench(ui8[1]);\r\n                        break;\r\n                    case 13:\r\n                        _this.hitten_other(ui8, evt.data);\r\n                        break;\r\n                    case 14:\r\n                        _this.mute();\r\n                        break;\r\n                    case 15:\r\n                        _this.kill_player(ui8[1]);\r\n                        break;\r\n                    case 16:\r\n                        _this.gauges(ui8[1], ui8[2], ui8[3], ui8[4], ui8[5], ui8[6], ui8[7]);\r\n                        gaugesTimer = 5;\r\n                        let interval = setInterval(() => {\r\n                            gaugesTimer-=0.1;\r\n                        }, 100);\r\n                        setTimeout(() => {\r\n                            clearInterval(interval);\r\n                        }, 4900);\r\n                        break;\r\n                    case 17:\r\n                        _this.recover_focus(evt.data);\r\n                        break;\r\n                    case 18:\r\n                        _this.empty_res();\r\n                        break;\r\n                    case 19:\r\n                        _this.fire(ui8[1]);\r\n                        break;\r\n                    case 20:\r\n                        _this.survive();\r\n                        break;\r\n                    case 21:\r\n                        _this.leaderboard(evt.data);\r\n                        break;\r\n                    case 22:\r\n                        _this.get_time(ui8[1]);\r\n                        break;\r\n                    case 23:\r\n                        _this.set_cam(evt.data);\r\n                        break;\r\n                    case 24:\r\n                        _this.accept_build(ui8[1]);\r\n                        break;\r\n                    case 25:\r\n                        _this.killed(ui8[1], evt.data);\r\n                        break;\r\n                    case 26:\r\n                        _this.minimap(ui8);\r\n                        break;\r\n                    case 27:\r\n                        _this.fail_restore();\r\n                        break;\r\n                    case 28:\r\n                        _this.ghost(ui8[1]);\r\n                        break;\r\n                    case 29:\r\n                        _this.reborn();\r\n                        break;\r\n                    case 30:\r\n                        _this.steal_token();\r\n                        break;\r\n                    case 31:\r\n                        _this.join_new_team(ui8);\r\n                        break;\r\n                    case 32:\r\n                        _this.exclude_team(ui8[1]);\r\n                        break;\r\n                    case 33:\r\n                        _this.new_member_team(ui8[1]);\r\n                        break;\r\n                    case 34:\r\n                        _this.destroy_team();\r\n                        break;\r\n                    case 35:\r\n                        _this.kit_ok(ui8[1]);\r\n                        break;\r\n                    case 36:\r\n                        _this.water(ui8[1]);\r\n                        break;\r\n                    case 37:\r\n                        _this.gauges_life(ui8[1], ui8[2]);\r\n                        break;\r\n                    case 38:\r\n                        _this.gauges_food(ui8[1]);\r\n                        break;\r\n                    case 39:\r\n                        _this.gauges_water(ui8[1]);\r\n                        break;\r\n                    case 40:\r\n                        _this.get_bag();\r\n                        break;\r\n                    case 41:\r\n                        _this.verified_account(ui8);\r\n                        break;\r\n                    case 42:\r\n                        _this.succeed_quest(ui8[1]);\r\n                        break;\r\n                    case 43:\r\n                        _this.fail_quest(ui8[1]);\r\n                        break;\r\n                    case 44:\r\n                        _this.claimed(ui8[1]);\r\n                        break;\r\n                    case 45:\r\n                        _this.recycle_ok(ui8[1]);\r\n                        break;\r\n                    case 46:\r\n                        _this.recycle_stop(ui8[1]);\r\n                        break;\r\n                    case 47:\r\n                        _this.well(ui8[1]);\r\n                        break;\r\n                    case 48:\r\n                        _this.no_resources();\r\n                        break;\r\n                    case 50:\r\n                        _this.decrease_item2(ui8[1], ui8[2], ui8[3]);\r\n                        break;\r\n                    case 51:\r\n                        _this.blocked();\r\n                        break;\r\n                    case 52:\r\n                        _this.delete_inv_ok(ui8[1]);\r\n                        break;\r\n                    case 53:\r\n                        _this.delete_one_inv_ok(ui8[1]);\r\n                        break;\r\n                    case 54:\r\n                        _this.account_ok();\r\n                        break;\r\n                    case 55:\r\n                        _this.gauges_warm(ui8[1]);\r\n                        break;\r\n                    case 56:\r\n                        _this.gauges_cold(ui8[1]);\r\n                        break;\r\n                    case 57:\r\n                        _this.new_version();\r\n                        break;\r\n                    case 58:\r\n                        _this.wrong_password();\r\n                        break;\r\n                    case 59:\r\n                        _this.clean_inventory();\r\n                        break;\r\n                    case 60:\r\n                        _this.hide_shop_kit();\r\n                        break;\r\n                    case 61:\r\n                        user.cam.forcedDelay = 0.2;\r\n                        user.cam.delay = 3;\r\n                        break;\r\n                    case 62:\r\n                        _this.delete_single_inv(new Uint16Array(evt.data));\r\n                        break;\r\n                    case 63:\r\n                        _this.hide_clock();\r\n                        break;\r\n                    case 64:\r\n                        _this.hide_recipe_book();\r\n                        break;\r\n                    case 65:\r\n                        _this.hide_quest();\r\n                        break;\r\n                    case 66:\r\n                        _this.hide_market();\r\n                        break;\r\n                    case 67:\r\n                        _this.explorer_quest(ui8[1]);\r\n                        break;\r\n                    case 68:\r\n                        _this.sand_tempest(ui8[1]);\r\n                        break;\r\n                    case 69:\r\n                        _this.blizzard(ui8[1]);\r\n                        break;\r\n                    case 70:\r\n                        _this.blizzard_status(ui8[1]);\r\n                        break;\r\n                    case 71:\r\n                        _this.bandage(ui8[1]);\r\n                        break;\r\n                }\r\n            }\r\n        };\r\n        this.socket.onopen = function () {\r\n            clearTimeout(_this.timeout_handler);\r\n            user.newToken = user.newToken || Utils.getURLData(\"token\");\r\n            _this.socket[SENDWORD](WINDOW10[JSONWORD9].stringify([ui.nickname.input.value, screen.width + 200, screen.height + 200, CLIENT.VERSION_NUMBER, user.token, user.token_id, user.reconnect.enabled ? 1 : 0, ui.skin, ui.accessory, ui.bag, ui.book, ui.crate, ui.dead, userId === undefined ? 0 : userId, userToken === undefined ? 0 : userToken.substring(userToken.length - 50), PASSWORD, user.newToken]));\r\n            user.newToken = undefined;\r\n            _this.timeout_handler = setTimeout(_this.timeout, CLIENT.TIMEOUT_TIME);\r\n        };\r\n        this.timeout_handler = setTimeout(_this.timeout, CLIENT.TIMEOUT_TIME);\r\n    };\r\n}\r\n;\r\nvar WORLD = {DAY: 48e4, WITHOUT_BAG: 10, WITH_BAG: 16, BAG_SIZE: 6, GHOST_DELAY: 60, TOP: 1, BOTTOM: 2, LEFT: 4, RIGHT: 8, ROTATE: 10, DIST_CHEST: 100, DIST_FURNACE: 100, DIST_WINDMILL: 100, DIST_WELL: 100, DIST_BREAD_OVEN: 100, DIST_SIGN: 100, DIST_TOTEM: 100, DIST_SIGN: 100, DIST_RESURRECTION: 100, DIST_EXTRACTOR_MACHINE: 100, MODE_PVP: 0, MODE_HUNGER_GAMES: 1, MODE_ZOMBIES: 2, MODE_VAMPIRES: 3, MODE_LEGACY: 4, MODE_BR: 5, MODE_COMMUNITY: 6, MODE_EXPERIMENTAL: 7, ZOMBIE_SKIN: 0, VAMPIRE_SKIN: 0, ROBOT_SKIN: 30, GHOST: 2, GHOST_DELAY: 6e4, WT1SY: 0, LWT1SY: 0, WT1EY: 50, WT2SY: 0, LWT2SY: 40, WT2EY: 39, LWT2: 830, FLOAM_X: 25, FLOAM_Y: 8, W1SX: 0, LW1SX: 0, W1EX: 200, W2SX: 0, LW2SX: 250, W2EX: 150, W3SX: 0, LW3SX: 350, W3EX: 100, LSANDX: 700, SEED: 39879};\r\nvar SLOW_DOWN = [];\r\nfor (var i = 0; i < 500; i++) SLOW_DOWN[i] = 0;\r\nSLOW_DOWN[SPRITE.SUPER_DIVING_SUIT] = 1;\r\nSLOW_DOWN[SPRITE.SWORD_WOOD] = 1;\r\nSLOW_DOWN[SPRITE.SWORD] = 1;\r\nSLOW_DOWN[SPRITE.SWORD_GOLD] = 1;\r\nSLOW_DOWN[SPRITE.SWORD_DIAMOND] = 1;\r\nSLOW_DOWN[SPRITE.SWORD_AMETHYST] = 1;\r\nSLOW_DOWN[SPRITE.REIDITE_SWORD] = 1;\r\nSLOW_DOWN[SPRITE.PIRATE_SWORD] = 1;\r\nSLOW_DOWN[SPRITE.DRAGON_SWORD] = 1;\r\nSLOW_DOWN[SPRITE.LAVA_SWORD] = 1;\r\nSLOW_DOWN[SPRITE.SPEAR] = 1;\r\nSLOW_DOWN[SPRITE.GOLD_SPEAR] = 1;\r\nSLOW_DOWN[SPRITE.DIAMOND_SPEAR] = 1;\r\nSLOW_DOWN[SPRITE.AMETHYST_SPEAR] = 1;\r\nSLOW_DOWN[SPRITE.REIDITE_SPEAR] = 1;\r\nSLOW_DOWN[SPRITE.DRAGON_SPEAR] = 1;\r\nSLOW_DOWN[SPRITE.LAVA_SPEAR] = 1;\r\nSLOW_DOWN[SPRITE.WOOD_SPEAR] = 1;\r\nSLOW_DOWN[SPRITE.CRAB_SPEAR] = 1;\r\nvar QUESTS = [{time: 288e4}, {time: 144e4}, {time: 192e4}, {time: 144e4}, {time: 288e4}, {time: 24e5}, {time: 24e5}, {time: 48e5}, {time: 288e4}, {time: 336e4}, {time: 288e4}, {time: 384e4}, {time: 336e4}];\r\nvar ITEMS = {PLAYERS: 0, FIRE: 1, WORKBENCH: 2, SEED: 3, WALL: 4, SPIKE: 5, BIG_FIRE: 6, STONE_WALL: 7, GOLD_WALL: 8, DIAMOND_WALL: 9, WOOD_DOOR: 10, CHEST: 11, STONE_SPIKE: 12, GOLD_SPIKE: 13, DIAMOND_SPIKE: 14, STONE_DOOR: 15, GOLD_DOOR: 16, DIAMOND_DOOR: 17, FURNACE: 18, AMETHYST_WALL: 19, AMETHYST_SPIKE: 20, AMETHYST_DOOR: 21, RESURRECTION: 22, EMERALD_MACHINE: 23, EXTRACTOR_MACHINE_STONE: 24, EXTRACTOR_MACHINE_GOLD: 25, EXTRACTOR_MACHINE_DIAMOND: 26, EXTRACTOR_MACHINE_AMETHYST: 27, EXTRACTOR_MACHINE_REIDITE: 28, TOTEM: 29, BRIDGE: 30, WHEAT_SEED: 31, WINDMILL: 32, PLOT: 33, BREAD_OVEN: 34, WELL: 35, SIGN: 36, PUMPKIN_SEED: 37, ROOF: 38, GARLIC_SEED: 39, THORNBUSH_SEED: 40, BED: 41, GARLAND: 42, TOMATO_SEED: 43, CARROT_SEED: 44, WOOD_DOOR_SPIKE: 45, STONE_DOOR_SPIKE: 46, GOLD_DOOR_SPIKE: 47, DIAMOND_DOOR_SPIKE: 48, AMETHYST_DOOR_SPIKE: 49, REIDITE_WALL: 50, REIDITE_DOOR: 51, REIDITE_SPIKE: 52, REIDITE_DOOR_SPIKE: 53, WATERMELON_SEED: 54, ALOE_VERA_SEED: 55, WOOD_TOWER: 56, WOLF: 60, SPIDER: 61, FOX: 62, BEAR: 63, DRAGON: 64, PIRANHA: 65, KRAKEN: 66, CRAB: 67, FLAME: 68, LAVA_DRAGON: 69, BOAR: 70, CRAB_BOSS: 71, BABY_DRAGON: 72, BABY_LAVA: 73, HAWK: 74, VULTURE: 75, SAND_WORM: 76, BABY_MAMMOTH: 77, MAMMOTH: 78, WHEAT_MOB: 79, RABBIT: 80, TREASURE_CHEST: 81, DEAD_BOX: 82, PUMPKIN_MOB: 83, GARLIC_MOB: 84, THORNBUSH_MOB: 85, CRATE: 86, GIFT: 87, PENGUIN: 88, ALOE_VERA_MOB: 89, FIREFLY: 90, SPELL: 91, FRUIT: 100};\r\nvar EXTRACTORS = [[ITEMS.EXTRACTOR_MACHINE_STONE, INV.STONE], [ITEMS.EXTRACTOR_MACHINE_GOLD, INV.GOLD], [ITEMS.EXTRACTOR_MACHINE_DIAMOND, INV.DIAMOND], [ITEMS.EXTRACTOR_MACHINE_AMETHYST, INV.AMETHYST], [ITEMS.EXTRACTOR_MACHINE_REIDITE, INV.REIDITE]];\r\nfunction Player() {\r\n    this.nickname = \"\";\r\n    this.skin = 0;\r\n    this.accessory = 0;\r\n    this.bag = 0;\r\n    this.baglook = 0;\r\n    this.book = 0;\r\n    this.crate = 0;\r\n    this.dead = 0;\r\n    this.level = 0;\r\n    this.label = null;\r\n    this.label_winter = null;\r\n    this.ldb_label = null;\r\n    this.alive = false;\r\n    this.score = 0;\r\n}\r\n;\r\nfunction Item(type, pid, id, x, y, angle, action, info, speed, extra) {\r\n    this.type = type;\r\n    this.pid = pid;\r\n    this.id = id;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.angle = angle;\r\n    this.nangle = angle;\r\n    this.action = action;\r\n    this.info = info;\r\n    this.extra = extra;\r\n    this.r = {x: x, y: y};\r\n    this.speed = speed;\r\n    if (world) this.uid = pid * world.max_units + id;\r\n    switch (type) {\r\n        case ITEMS.PLAYERS:\r\n            this.player = world.players[this.pid];\r\n            this.skin = this.player.skin;\r\n            this.baglook = this.player.baglook;\r\n            this.book = this.player.book;\r\n            this.accessory = this.player.accessory;\r\n            this.dist_forest = -1000000;\r\n            this.dist_lava = -1000000;\r\n            this.dist_winter = -1000000;\r\n            this.dist_desert = -1000000;\r\n            this.dist_water = -1000000;\r\n            this.dist_sand = -1000000;\r\n            this.dist_dragon = -1000000;\r\n            this.zombie = world.mode === WORLD.MODE_ZOMBIES && this.skin === WORLD.ZOMBIE_SKIN ? true : false;\r\n            this.vampire = world.mode === WORLD.MODE_VAMPIRES && this.skin === WORLD.VAMPIRE_SKIN ? true : false;\r\n            this.superzombie = this.zombie && this.player.nickname === \"  \" ? true : false;\r\n            this.foot = [];\r\n            this.tower = 0;\r\n            this.move_effect = true;\r\n            this.id_foot = 0;\r\n            this.fly = 0;\r\n            this.swim = [];\r\n            this.r = {x: x, y: y};\r\n            this.draw = draw_player;\r\n            this.draw_vehicle = draw_vehicle;\r\n            this.vehicle_fx1 = 0;\r\n            this.vehicle_fx2 = 0;\r\n            this.vehicle_fx3 = 0;\r\n            this.vehicle_fx4 = new Utils.LinearAnimation(false, 0, 0, -Math.PI / 6, 0.5, 1);\r\n            this.vehicle_fx5 = 0;\r\n            this.tower_fx = 0;\r\n            this.hit = new Utils.LinearAnimation(false, 0.6, 0.6, 0, 5, 3);\r\n            this.heal = new Utils.LinearAnimation(false, 0.6, 0.6, 0, 5, 3);\r\n            this.freeze = new Utils.LinearAnimation(false, 0.6, 0.6, 0, 5, 3);\r\n            this.starve = new Utils.LinearAnimation(false, 0.6, 0.6, 0, 5, 3);\r\n            this.idle = new Utils.LinearAnimation(true, 0, 2.25, -1.5, 3.75, 7.5);\r\n            this.walk = new Utils.LinearAnimation(true, 0, 7.5, -3, 22.5, 33.75);\r\n            this.attack = new Utils.LinearAnimation(false, 0, 0, -Math.PI / 3, 6, 9);\r\n            this.slow_attack = 0;\r\n            this.web = new Utils.LinearAnimation(false, 0.6, 0.6, 0, 1, 3);\r\n            this.move_head = this.superzombie ? new Utils.LinearAnimation(true, 0, 2.25, -1.5, 2.75, 5.5) : 0;\r\n            this.angle_init = 0;\r\n            this.text_ease = 0;\r\n            this.text_effect = [];\r\n            this.text_move = [];\r\n            this.text = [];\r\n            this.label = [];\r\n            this.draw_text = draw_chat;\r\n            this.hand = true;\r\n            this.right = -1;\r\n            this.vehicle = -1;\r\n            this.action = STATE.IDLE;\r\n            this.collide = false;\r\n            this.clothe = 0;\r\n            this.ghost = false;\r\n            this.bubbles = [];\r\n            this.bag = 0;\r\n            this.sid = -1;\r\n            this.update = function (action) {\r\n                if (this.info & 32768) {\r\n                    this.collide = true;\r\n                    this.info = -32769 & this.info;\r\n                } else this.collide = false;\r\n                if (this.info & 16384) {\r\n                    this.info = -16385 & this.info;\r\n                    this.bag = 1;\r\n                } else this.bag = 0;\r\n                this.clothe = Math.floor(this.info / 128);\r\n                this.info -= 128 * this.clothe;\r\n                if (this.info === INV.HAND || this.superzombie) this.right = -1; else this.right = this.info;\r\n                this.tower = world.find_tower(Math.floor(this.r.y / 100), Math.floor(this.r.x / 100));\r\n                this.vehicle = this.extra & 255;\r\n                if (this.right === WORLD.GHOST) this.ghost = true; else this.ghost = false;\r\n                if (SLOW_DOWN[this.right]) this.weapon = true; else this.weapon = false;\r\n                if (action & STATE.WEB) {\r\n                    this.web.o = false;\r\n                    this.web.v = 0.6;\r\n                } else if (action & STATE.COLD) {\r\n                    this.freeze.o = false;\r\n                    this.freeze.v = 0.6;\r\n                } else if (action & STATE.HEAL) {\r\n                    this.heal.o = false;\r\n                    this.heal.v = 0.6;\r\n                }\r\n                if (action & STATE.HUNGER) {\r\n                    this.starve.o = false;\r\n                    this.starve.v = 0.6;\r\n                }\r\n                if (action & STATE.HURT) {\r\n                    this.hit.o = false;\r\n                    this.hit.v = 0.6;\r\n                }\r\n                if (action & STATE.ATTACK) {\r\n                    this.slow_attack = CLIENT.SLOW_ATTACK;\r\n                    if (audio.run && this.sid !== -1) audio.players[this.sid].swing(SOUND[this.right]);\r\n                }\r\n            };\r\n            this.update();\r\n            break;\r\n        case ITEMS.EMERALD_MACHINE:\r\n            this.hit = {anim: new Utils.LinearAnimation(false, 1, 1, 0, 10, 10), update: false, angle: 0};\r\n            this.draw_bg = draw_emerald_machine_halo;\r\n            this.draw_fg = draw_emerald_machine;\r\n            this.halo = new Utils.LinearAnimation(false, 1, 1.23, 1.18, 0.01, 0.01);\r\n            this.rotate1 = 0;\r\n            this.rotate2 = 0;\r\n            this.draw_life = draw_life;\r\n            break;\r\n        case ITEMS.RESURRECTION:\r\n            this.hit = {anim: new Utils.LinearAnimation(false, 1, 1, 0, 10, 10), update: false, angle: 0};\r\n            this.draw_bg = draw_resurrection_halo;\r\n            this.draw_fg = draw_resurrection;\r\n            this.halo = new Utils.LinearAnimation(false, 1, 1.23, 1.18, 0.01, 0.01);\r\n            this.rotate1 = 0;\r\n            this.rotate2 = 0;\r\n            break;\r\n        case ITEMS.FIRE:\r\n        case ITEMS.BIG_FIRE:\r\n            this.draw_bg = draw_fire_ground;\r\n            this.draw_fg = draw_fire_halo;\r\n            this.fire = new Utils.LinearAnimation(false, 1, 1.03, 0.98, 0.3, 0.3);\r\n            this.ground = new Utils.LinearAnimation(false, 1, 1.23, 1.18, 0.01, 0.01);\r\n            this.halo = new Utils.LinearAnimation(false, 1, 1.23, 1.18, 0.01, 0.01);\r\n            this.hit = {anim: new Utils.LinearAnimation(false, 1, 1, 0, 10, 10), update: false, angle: 0};\r\n            break;\r\n        case ITEMS.TOMATO_SEED:\r\n            this.draw_bg = draw_tomato;\r\n            this.draw_fg = draw_tomato_fruit;\r\n            this.ground = new Utils.LinearAnimation(false, 0.9, 1.05, 0.9, 0.2, 0.2);\r\n            this.hit = {anim: new Utils.LinearAnimation(false, 1, 1, 0, 10, 10), update: false, angle: 0};\r\n            this.fruits = [];\r\n            for (var i = 0; i < 3; i++) this.fruits.push({draw: draw_breath_2, breath: new Utils.LinearAnimation(false, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2)});\r\n            this.fruits[0].x = this.x - 16.5;\r\n            this.fruits[0].y = this.y - 15.5;\r\n            this.fruits[0].angle = this.angle;\r\n            this.fruits[1].x = this.x + 36;\r\n            this.fruits[1].y = this.y + 17;\r\n            this.fruits[1].angle = this.angle;\r\n            this.fruits[2].x = this.x - 18.5;\r\n            this.fruits[2].y = this.y + 39;\r\n            this.fruits[2].angle = this.angle;\r\n            break;\r\n        case ITEMS.SEED:\r\n            this.draw_bg = draw_seed;\r\n            this.draw_fg = draw_plant;\r\n            this.ground = new Utils.LinearAnimation(false, 0.9, 1.05, 0.9, 0.2, 0.2);\r\n            this.hit = {anim: new Utils.LinearAnimation(false, 1, 1, 0, 10, 10), update: false, angle: 0};\r\n            this.fruits = [];\r\n            for (var i = 0; i < 3; i++) this.fruits.push({draw: draw_breath, breath: new Utils.LinearAnimation(false, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2)});\r\n            this.fruits[0].x = this.x - 16.5;\r\n            this.fruits[0].y = this.y - 15.5;\r\n            this.fruits[1].x = this.x - 5.5;\r\n            this.fruits[1].y = this.y + 7.5;\r\n            this.fruits[2].x = this.x + 18;\r\n            this.fruits[2].y = this.y - 5;\r\n            break;\r\n        case ITEMS.BABY_MAMMOTH:\r\n            this.draw = draw_baby_mammoth;\r\n            this.breath = new Utils.LinearAnimation(false, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);\r\n            this.hit = new Utils.LinearAnimation(false, 0.6, 0.6, 0, 5, 3);\r\n            break;\r\n        case ITEMS.BOAR:\r\n            this.draw = draw_boar;\r\n            this.breath = new Utils.LinearAnimation(false, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);\r\n            this.hit = new Utils.LinearAnimation(false, 0.6, 0.6, 0, 5, 3);\r\n            break;\r\n        case ITEMS.CRAB_BOSS:\r\n            this.draw = draw_crab_boss;\r\n            this.breath = new Utils.LinearAnimation(false, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);\r\n            this.breathl = new Utils.LinearAnimation(false, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);\r\n            this.breathr = new Utils.LinearAnimation(false, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);\r\n            this.hit = new Utils.LinearAnimation(false, 0.6, 0.6, 0, 5, 3);\r\n            this.heal = new Utils.LinearAnimation(false, 0.6, 0.6, 0, 5, 3);\r\n            break;\r\n        case ITEMS.CRAB:\r\n            this.draw = draw_crab;\r\n            this.breath = new Utils.LinearAnimation(false, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);\r\n            this.breathl = new Utils.LinearAnimation(false, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);\r\n            this.breathr = new Utils.LinearAnimation(false, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);\r\n            this.hit = new Utils.LinearAnimation(false, 0.6, 0.6, 0, 5, 3);\r\n            this.heal = new Utils.LinearAnimation(false, 0.6, 0.6, 0, 5, 3);\r\n            break;\r\n        case ITEMS.FLAME:\r\n            this.draw = draw_simple_mobs_hd;\r\n            this.breath = new Utils.LinearAnimation(false, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);\r\n            this.hit = new Utils.LinearAnimation(false, 0.6, 0.6, 0, 5, 3);\r\n            break;\r\n        case ITEMS.FIREFLY:\r\n            this.draw = draw_simple_mobs;\r\n            this.breath = new Utils.LinearAnimation(false, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.5, 0.5);\r\n            this.hit = new Utils.LinearAnimation(false, 0.6, 0.6, 0, 5, 3);\r\n            break;\r\n        case ITEMS.SPELL:\r\n            this.spell = this.info & 15;\r\n            this.fly = this.extra & 1;\r\n            this.born = 0;\r\n            this.x = this.info;\r\n            this.y = this.extra;\r\n            this.draw = draw_spell;\r\n            this.breath = new Utils.LinearAnimation(false, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.6, 0.6);\r\n            break;\r\n        case ITEMS.RABBIT:\r\n        case ITEMS.WOLF:\r\n        case ITEMS.SPIDER:\r\n        case ITEMS.FOX:\r\n        case ITEMS.BEAR:\r\n        case ITEMS.MAMMOTH:\r\n        case ITEMS.PIRANHA:\r\n        case ITEMS.KRAKEN:\r\n        case ITEMS.PENGUIN:\r\n            this.draw = draw_simple_mobs;\r\n            this.breath = new Utils.LinearAnimation(false, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);\r\n            this.hit = new Utils.LinearAnimation(false, 0.6, 0.6, 0, 5, 3);\r\n            break;\r\n        case ITEMS.SIGN:\r\n            this.draw = draw_sign;\r\n            this.hit = {anim: new Utils.LinearAnimation(false, 1, 1, 0, 10, 10), update: false, angle: 0};\r\n            break;\r\n        case ITEMS.BREAD_OVEN:\r\n            this.draw_fg = draw_bread_oven_smog;\r\n            this.draw = draw_bread_oven;\r\n            this.hit = {anim: new Utils.LinearAnimation(false, 1, 1, 0, 10, 10), update: false, angle: 0};\r\n            this.up = new Utils.LinearAnimation(false, 1, 1.03, 0.98, 0.1, 0.1);\r\n            this.smog = [];\r\n            break;\r\n        case ITEMS.GIFT:\r\n            this.angle = Math.random() * Math.PI / 2;\r\n        case ITEMS.CRATE:\r\n        case ITEMS.DEAD_BOX:\r\n            this.draw = draw_crate;\r\n            this.hit = new Utils.LinearAnimation(false, 0.6, 0.6, 0, 5, 3);\r\n            break;\r\n        case ITEMS.TREASURE_CHEST:\r\n            this.draw = draw_simple_mobs_2;\r\n            this.hit = new Utils.LinearAnimation(false, 0.6, 0.6, 0, 5, 3);\r\n            break;\r\n        case ITEMS.LAVA_DRAGON:\r\n            this.scale = 1;\r\n            this.draw = draw_lava_dragon;\r\n            this.breath = new Utils.LinearAnimation(false, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);\r\n            this.rotate = new Utils.LinearAnimation(false, 0, 0, -Math.PI / 6, 0.5, 1);\r\n            this.hit = new Utils.LinearAnimation(false, 0.6, 0.6, 0, 5, 3);\r\n            break;\r\n        case ITEMS.SAND_WORM:\r\n            this.dig = 0;\r\n            this.ground = [];\r\n            this.groundTimer = 0;\r\n            this.draw_ground = draw_sand_worm_ground;\r\n            this.draw = draw_sand_worm;\r\n            this.breath = new Utils.LinearAnimation(false, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);\r\n            this.rotate = new Utils.LinearAnimation(false, 0, 0, -Math.PI / 6, 0.5, 1);\r\n            this.hit = new Utils.LinearAnimation(false, 0.6, 0.6, 0, 5, 3);\r\n            break;\r\n        case ITEMS.VULTURE:\r\n            this.x = this.info;\r\n            this.y = this.extra;\r\n            this.scale = 1;\r\n            this._alpha = 0;\r\n            this.draw = draw_vulture;\r\n            this.breath = new Utils.LinearAnimation(false, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);\r\n            this.rotate = new Utils.LinearAnimation(false, 0, 0, -Math.PI / 6, 0.5, 1);\r\n            this.hit = new Utils.LinearAnimation(false, 0.6, 0.6, 0, 5, 3);\r\n            break;\r\n        case ITEMS.HAWK:\r\n            this.x = this.info;\r\n            this.y = this.extra;\r\n            this.scale = 1;\r\n            this._alpha = 0;\r\n            this.draw = draw_hawk;\r\n            this.breath = new Utils.LinearAnimation(false, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);\r\n            this.rotate = new Utils.LinearAnimation(false, 0, 0, -Math.PI / 6, 0.5, 1);\r\n            this.hit = new Utils.LinearAnimation(false, 0.6, 0.6, 0, 5, 3);\r\n            break;\r\n        case ITEMS.BABY_LAVA:\r\n            this.scale = 1;\r\n            this.draw = draw_baby_lava;\r\n            this.breath = new Utils.LinearAnimation(false, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);\r\n            this.rotate = new Utils.LinearAnimation(false, 0, 0, -Math.PI / 6, 0.5, 1);\r\n            this.hit = new Utils.LinearAnimation(false, 0.6, 0.6, 0, 5, 3);\r\n            break;\r\n        case ITEMS.BABY_DRAGON:\r\n            this.scale = 1;\r\n            this.draw = draw_baby_dragon;\r\n            this.breath = new Utils.LinearAnimation(false, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);\r\n            this.rotate = new Utils.LinearAnimation(false, 0, 0, -Math.PI / 6, 0.5, 1);\r\n            this.hit = new Utils.LinearAnimation(false, 0.6, 0.6, 0, 5, 3);\r\n            break;\r\n        case ITEMS.DRAGON:\r\n            this.scale = 1;\r\n            this.draw = draw_dragon;\r\n            this.breath = new Utils.LinearAnimation(false, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);\r\n            this.rotate = new Utils.LinearAnimation(false, 0, 0, -Math.PI / 6, 0.5, 1);\r\n            this.hit = new Utils.LinearAnimation(false, 0.6, 0.6, 0, 5, 3);\r\n            break;\r\n        case ITEMS.FRUIT:\r\n            this.fruits = [];\r\n            for (var i = 0; i < 5; i++) this.fruits.push({draw: draw_breath, breath: new Utils.LinearAnimation(false, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2)});\r\n            switch (this.id % 3) {\r\n                case 0:\r\n                    this.fruits[0].x = this.x - 20.5;\r\n                    this.fruits[0].y = this.y - 22.5;\r\n                    this.fruits[1].x = this.x - 35.5;\r\n                    this.fruits[1].y = this.y + 7.5;\r\n                    this.fruits[2].x = this.x + 7.5;\r\n                    this.fruits[2].y = this.y - 30;\r\n                    this.fruits[3].x = this.x + 22.5;\r\n                    this.fruits[3].y = this.y;\r\n                    this.fruits[4].x = this.x - 7.5;\r\n                    this.fruits[4].y = this.y + 14.5;\r\n                    break;\r\n                case 1:\r\n                    this.fruits[0].x = this.x - 30.5;\r\n                    this.fruits[0].y = this.y - 22.5;\r\n                    this.fruits[1].x = this.x - 15.5;\r\n                    this.fruits[1].y = this.y + 7.5;\r\n                    this.fruits[2].x = this.x + 15.5;\r\n                    this.fruits[2].y = this.y - 30;\r\n                    this.fruits[3].x = this.x + 12.5;\r\n                    this.fruits[3].y = this.y + 5;\r\n                    this.fruits[4].x = this.x - 40.5;\r\n                    this.fruits[4].y = this.y + 14.5;\r\n                    break;\r\n                case 2:\r\n                    this.fruits[0].x = this.x - 20.5;\r\n                    this.fruits[0].y = this.y - 20.5;\r\n                    this.fruits[1].x = this.x - 35.5;\r\n                    this.fruits[1].y = this.y + 15.5;\r\n                    this.fruits[2].x = this.x + 7.5;\r\n                    this.fruits[2].y = this.y - 17;\r\n                    this.fruits[3].x = this.x + 22.5;\r\n                    this.fruits[3].y = this.y + 5;\r\n                    this.fruits[4].x = this.x - 7.5;\r\n                    this.fruits[4].y = this.y + 1.5;\r\n                    break;\r\n            }\r\n            break;\r\n        case ITEMS.WHEAT_SEED:\r\n            this.hit = {anim: new Utils.LinearAnimation(false, 1, 1, 0, 10, 10), update: false, angle: 0};\r\n            this.draw = draw_wheat;\r\n            this.ground = new Utils.LinearAnimation(false, 0.9, 1.05, 0.9, 0.2, 0.2);\r\n            this.wind = new Utils.LinearAnimation(false, 0, Math.PI / 30, -Math.PI / 30, 0.06, 0.06);\r\n            break;\r\n        case ITEMS.THORNBUSH_SEED:\r\n            this.hit = {anim: new Utils.LinearAnimation(false, 1, 1, 0, 10, 10), update: false, angle: 0};\r\n            this.draw = draw_thornbush;\r\n            this.ground = new Utils.LinearAnimation(false, 0.9, 1.05, 0.9, 0.2, 0.2);\r\n            break;\r\n        case ITEMS.GARLIC_SEED:\r\n            this.hit = {anim: new Utils.LinearAnimation(false, 1, 1, 0, 10, 10), update: false, angle: 0};\r\n            this.draw = draw_garlic;\r\n            this.ground = new Utils.LinearAnimation(false, 0.9, 1.05, 0.9, 0.2, 0.2);\r\n            break;\r\n        case ITEMS.CARROT_SEED:\r\n            this.hit = {anim: new Utils.LinearAnimation(false, 1, 1, 0, 10, 10), update: false, angle: 0};\r\n            this.draw = draw_carrot;\r\n            this.ground = new Utils.LinearAnimation(false, 0.9, 1.05, 0.9, 0.2, 0.2);\r\n            break;\r\n        case ITEMS.ALOE_VERA_SEED:\r\n            this.hit = {anim: new Utils.LinearAnimation(false, 1, 1, 0, 10, 10), update: false, angle: 0};\r\n            this.draw = draw_aloe_vera;\r\n            this.ground = new Utils.LinearAnimation(false, 0.9, 1.05, 0.9, 0.2, 0.2);\r\n            break;\r\n        case ITEMS.WATERMELON_SEED:\r\n            this.hit = {anim: new Utils.LinearAnimation(false, 1, 1, 0, 10, 10), update: false, angle: 0};\r\n            this.draw = draw_watermelon;\r\n            this.ground = new Utils.LinearAnimation(false, 0.9, 1.05, 0.9, 0.2, 0.2);\r\n            break;\r\n        case ITEMS.PUMPKIN_SEED:\r\n            this.hit = {anim: new Utils.LinearAnimation(false, 1, 1, 0, 10, 10), update: false, angle: 0};\r\n            this.draw = draw_pumpkin;\r\n            this.ground = new Utils.LinearAnimation(false, 0.9, 1.05, 0.9, 0.2, 0.2);\r\n            break;\r\n        case ITEMS.EXTRACTOR_MACHINE_STONE:\r\n            this.draw = draw_extractor_stone;\r\n            this.rotate = 0;\r\n            this.hit = {anim: new Utils.LinearAnimation(false, 1, 1, 0, 10, 10), update: false, angle: 0};\r\n            break;\r\n        case ITEMS.EXTRACTOR_MACHINE_GOLD:\r\n            this.draw = draw_extractor_gold;\r\n            this.rotate = 0;\r\n            this.hit = {anim: new Utils.LinearAnimation(false, 1, 1, 0, 10, 10), update: false, angle: 0};\r\n            break;\r\n        case ITEMS.EXTRACTOR_MACHINE_DIAMOND:\r\n            this.draw = draw_extractor_diamond;\r\n            this.rotate = 0;\r\n            this.hit = {anim: new Utils.LinearAnimation(false, 1, 1, 0, 10, 10), update: false, angle: 0};\r\n            break;\r\n        case ITEMS.EXTRACTOR_MACHINE_AMETHYST:\r\n            this.draw = draw_extractor_amethyst;\r\n            this.rotate = 0;\r\n            this.hit = {anim: new Utils.LinearAnimation(false, 1, 1, 0, 10, 10), update: false, angle: 0};\r\n            break;\r\n        case ITEMS.EXTRACTOR_MACHINE_REIDITE:\r\n            this.draw = draw_extractor_reidite;\r\n            this.rotate = 0;\r\n            this.hit = {anim: new Utils.LinearAnimation(false, 1, 1, 0, 10, 10), update: false, angle: 0};\r\n            break;\r\n        case ITEMS.WINDMILL:\r\n            this.draw_bg = draw_windmill_head;\r\n            this.draw_fg = draw_windmill_wings;\r\n            this.rotate = 0;\r\n            this.hit = {anim: new Utils.LinearAnimation(false, 1, 1, 0, 10, 10), update: false, angle: 0};\r\n            break;\r\n        case ITEMS.ROOF:\r\n            this.draw = draw_roof;\r\n            this.j = Math.floor(this.x / 100);\r\n            this.i = Math.floor(this.y / 100);\r\n            this.hit = {anim: new Utils.LinearAnimation(false, 1, 1, 0, 10, 10), update: false, angle: 0};\r\n            this.opacity = 1;\r\n            this.draw_life = draw_life_small;\r\n            break;\r\n        case ITEMS.GARLAND:\r\n            this.draw = draw_garland;\r\n            this.halo = new Utils.LinearAnimation(false, 1, 1.15, 1, 0.3, 0.3);\r\n            this.color = 0;\r\n            this.hit = {anim: new Utils.LinearAnimation(false, 1, 1, 0, 10, 10), update: false, angle: 0};\r\n            break;\r\n        case ITEMS.PLOT:\r\n        case ITEMS.WORKBENCH:\r\n        case ITEMS.WOOD_TOWER:\r\n        case ITEMS.WELL:\r\n        case ITEMS.TOTEM:\r\n            this.draw = draw_simple_item;\r\n            this.hit = {anim: new Utils.LinearAnimation(false, 1, 1, 0, 10, 10), update: false, angle: 0};\r\n            break;\r\n        case ITEMS.BRIDGE:\r\n            this.draw = draw_simple_item;\r\n            this.hit = {anim: new Utils.LinearAnimation(false, 1, 1, 0, 10, 10), update: false, angle: 0};\r\n            this.draw_life = draw_life_small;\r\n            break;\r\n        case ITEMS.WALL:\r\n        case ITEMS.STONE_WALL:\r\n        case ITEMS.GOLD_WALL:\r\n        case ITEMS.DIAMOND_WALL:\r\n        case ITEMS.AMETHYST_WALL:\r\n        case ITEMS.REIDITE_WALL:\r\n        case ITEMS.SPIKE:\r\n        case ITEMS.STONE_SPIKE:\r\n        case ITEMS.GOLD_SPIKE:\r\n        case ITEMS.DIAMOND_SPIKE:\r\n        case ITEMS.AMETHYST_SPIKE:\r\n        case ITEMS.REIDITE_SPIKE:\r\n            this.draw = draw_simple_item;\r\n            this.hit = {anim: new Utils.LinearAnimation(false, 1, 1, 0, 10, 10), update: false, angle: 0};\r\n            this.draw_life = draw_life;\r\n            break;\r\n        case ITEMS.BED:\r\n            this.draw = draw_bed;\r\n            this.opacity = 1;\r\n            this.hit = {anim: new Utils.LinearAnimation(false, 1, 1, 0, 10, 10), update: false, angle: 0};\r\n            var rest = this.angle % (Math.PI / 2);\r\n            if (rest < Math.PI / 4) this.angle -= rest; else this.angle += Math.PI / 2 - rest;\r\n            break;\r\n        case ITEMS.WHEAT_MOB:\r\n            this.draw = draw_wheat_seed;\r\n            this.angle = Math.random() * Math.PI * 2;\r\n            break;\r\n        case ITEMS.ALOE_VERA_MOB:\r\n            this.draw = draw_aloe_vera_mob;\r\n            this.angle = Math.random() * Math.PI * 2;\r\n            break;\r\n        case ITEMS.PUMPKIN_MOB:\r\n            this.draw = draw_pumpkin_seed;\r\n            this.angle = Math.random() * Math.PI * 2;\r\n            break;\r\n        case ITEMS.GARLIC_MOB:\r\n            this.draw = draw_garlic_seed;\r\n            this.angle = Math.random() * Math.PI * 2;\r\n            break;\r\n        case ITEMS.THORNBUSH_MOB:\r\n            this.draw = draw_thornbush_seed;\r\n            this.angle = Math.random() * Math.PI * 2;\r\n            break;\r\n        case ITEMS.CHEST:\r\n            this.update = function (action) {\r\n                this.lock = this.info & 8192 ? 1 : 0;\r\n                this.info = this.info & 8191;\r\n                this.action = action;\r\n            };\r\n            this.draw = draw_chest;\r\n            this.hit = {anim: new Utils.LinearAnimation(false, 1, 1, 0, 10, 10), update: false, angle: 0};\r\n            this.lock = 0;\r\n            this.update(this.action);\r\n            break;\r\n        case ITEMS.WOOD_DOOR_SPIKE:\r\n        case ITEMS.STONE_DOOR_SPIKE:\r\n        case ITEMS.GOLD_DOOR_SPIKE:\r\n        case ITEMS.DIAMOND_DOOR_SPIKE:\r\n        case ITEMS.AMETHYST_DOOR_SPIKE:\r\n        case ITEMS.REIDITE_DOOR_SPIKE:\r\n        case ITEMS.WOOD_DOOR:\r\n        case ITEMS.STONE_DOOR:\r\n        case ITEMS.GOLD_DOOR:\r\n        case ITEMS.DIAMOND_DOOR:\r\n        case ITEMS.AMETHYST_DOOR:\r\n        case ITEMS.REIDITE_DOOR:\r\n            this.draw = draw_door;\r\n            this.hit = {anim: new Utils.LinearAnimation(false, 1, 1, 0, 10, 10), update: false, angle: 0};\r\n            this.draw_life = draw_life;\r\n            break;\r\n        case ITEMS.FURNACE:\r\n            this.draw_bg = draw_furnace_ground;\r\n            this.draw = draw_furnace;\r\n            this.draw_fg = draw_furnace_halo;\r\n            this.ground = new Utils.LinearAnimation(false, 1, 1.23, 1.18, 0.02, 0.02);\r\n            this.halo = new Utils.LinearAnimation(false, 1, 1.23, 1.18, 0.04, 0.04);\r\n            this.hit = {anim: new Utils.LinearAnimation(false, 1, 1, 0, 10, 10), update: false, angle: 0};\r\n            this.update = function (action) {\r\n                this.action = action;\r\n            };\r\n            break;\r\n    }\r\n}\r\n;\r\nfunction World(max_units) {\r\n    this.mode = WORLD.MODE_PVP;\r\n    this.max_units = max_units;\r\n    this.custom_map = 0;\r\n    this.islands = 6;\r\n    this.players = [];\r\n    this.units = [];\r\n    this.units[ITEMS.PLAYERS] = [];\r\n    this.units[ITEMS.FRUIT] = [];\r\n    this.units[ITEMS.RABBIT] = [];\r\n    this.units[ITEMS.WOLF] = [];\r\n    this.units[ITEMS.CRAB] = [];\r\n    this.units[ITEMS.BOAR] = [];\r\n    this.units[ITEMS.BABY_MAMMOTH] = [];\r\n    this.units[ITEMS.CRAB_BOSS] = [];\r\n    this.units[ITEMS.BABY_DRAGON] = [];\r\n    this.units[ITEMS.BABY_LAVA] = [];\r\n    this.units[ITEMS.HAWK] = [];\r\n    this.units[ITEMS.PIRANHA] = [];\r\n    this.units[ITEMS.KRAKEN] = [];\r\n    this.units[ITEMS.FOX] = [];\r\n    this.units[ITEMS.PENGUIN] = [];\r\n    this.units[ITEMS.SPELL] = [];\r\n    this.units[ITEMS.FIREFLY] = [];\r\n    this.units[ITEMS.BEAR] = [];\r\n    this.units[ITEMS.MAMMOTH] = [];\r\n    this.units[ITEMS.DRAGON] = [];\r\n    this.units[ITEMS.LAVA_DRAGON] = [];\r\n    this.units[ITEMS.FLAME] = [];\r\n    this.units[ITEMS.WHEAT_MOB] = [];\r\n    this.units[ITEMS.ALOE_VERA_MOB] = [];\r\n    this.units[ITEMS.PUMPKIN_MOB] = [];\r\n    this.units[ITEMS.GARLIC_MOB] = [];\r\n    this.units[ITEMS.THORNBUSH_MOB] = [];\r\n    this.units[ITEMS.TREASURE_CHEST] = [];\r\n    this.units[ITEMS.DEAD_BOX] = [];\r\n    this.units[ITEMS.CRATE] = [];\r\n    this.units[ITEMS.BREAD_OVEN] = [];\r\n    this.units[ITEMS.SIGN] = [];\r\n    this.units[ITEMS.SPIDER] = [];\r\n    this.units[ITEMS.WORKBENCH] = [];\r\n    this.units[ITEMS.FIRE] = [];\r\n    this.units[ITEMS.BIG_FIRE] = [];\r\n    this.units[ITEMS.SEED] = [];\r\n    this.units[ITEMS.SPIKE] = [];\r\n    this.units[ITEMS.STONE_SPIKE] = [];\r\n    this.units[ITEMS.GOLD_SPIKE] = [];\r\n    this.units[ITEMS.DIAMOND_SPIKE] = [];\r\n    this.units[ITEMS.AMETHYST_SPIKE] = [];\r\n    this.units[ITEMS.REIDITE_SPIKE] = [];\r\n    this.units[ITEMS.WALL] = [];\r\n    this.units[ITEMS.STONE_WALL] = [];\r\n    this.units[ITEMS.GOLD_WALL] = [];\r\n    this.units[ITEMS.DIAMOND_WALL] = [];\r\n    this.units[ITEMS.AMETHYST_WALL] = [];\r\n    this.units[ITEMS.REIDITE_WALL] = [];\r\n    this.units[ITEMS.BED] = [];\r\n    this.units[ITEMS.WOOD_DOOR] = [];\r\n    this.units[ITEMS.STONE_DOOR] = [];\r\n    this.units[ITEMS.GOLD_DOOR] = [];\r\n    this.units[ITEMS.DIAMOND_DOOR] = [];\r\n    this.units[ITEMS.AMETHYST_DOOR] = [];\r\n    this.units[ITEMS.REIDITE_DOOR] = [];\r\n    this.units[ITEMS.WOOD_DOOR_SPIKE] = [];\r\n    this.units[ITEMS.STONE_DOOR_SPIKE] = [];\r\n    this.units[ITEMS.GOLD_DOOR_SPIKE] = [];\r\n    this.units[ITEMS.DIAMOND_DOOR_SPIKE] = [];\r\n    this.units[ITEMS.AMETHYST_DOOR_SPIKE] = [];\r\n    this.units[ITEMS.REIDITE_DOOR_SPIKE] = [];\r\n    this.units[ITEMS.FURNACE] = [];\r\n    this.units[ITEMS.TOTEM] = [];\r\n    this.units[ITEMS.WOOD_TOWER] = [];\r\n    this.units[ITEMS.CHEST] = [];\r\n    this.units[ITEMS.RESURRECTION] = [];\r\n    this.units[ITEMS.EMERALD_MACHINE] = [];\r\n    this.units[ITEMS.BRIDGE] = [];\r\n    this.units[ITEMS.ROOF] = [];\r\n    this.units[ITEMS.PLOT] = [];\r\n    this.units[ITEMS.WHEAT_SEED] = [];\r\n    this.units[ITEMS.ALOE_VERA_SEED] = [];\r\n    this.units[ITEMS.PUMPKIN_SEED] = [];\r\n    this.units[ITEMS.TOMATO_SEED] = [];\r\n    this.units[ITEMS.CARROT_SEED] = [];\r\n    this.units[ITEMS.WATERMELON_SEED] = [];\r\n    this.units[ITEMS.GARLIC_SEED] = [];\r\n    this.units[ITEMS.THORNBUSH_SEED] = [];\r\n    this.units[ITEMS.WINDMILL] = [];\r\n    this.units[ITEMS.EXTRACTOR_MACHINE_STONE] = [];\r\n    this.units[ITEMS.EXTRACTOR_MACHINE_GOLD] = [];\r\n    this.units[ITEMS.EXTRACTOR_MACHINE_DIAMOND] = [];\r\n    this.units[ITEMS.EXTRACTOR_MACHINE_AMETHYST] = [];\r\n    this.units[ITEMS.EXTRACTOR_MACHINE_REIDITE] = [];\r\n    this.units[ITEMS.WELL] = [];\r\n    this.units[ITEMS.GIFT] = [];\r\n    this.units[ITEMS.GARLAND] = [];\r\n    this.fast_units = [];\r\n    this.nw = 260;\r\n    this.nh = 260;\r\n    this.dw = 100;\r\n    this.dh = 100;\r\n    this.w = this.nw * this.dw;\r\n    this.h = this.nh * this.dh;\r\n    this.RNG = new RNG.Random;\r\n    this.biomes = [];\r\n    this.shade = new Utils.LinearAnimation(false, 0, 1, 0, 1, 1);\r\n    this.transition = false;\r\n    this.BIOME = [];\r\n    this.BIOME_FOREST = 0;\r\n    this.BIOME_WINTER = 1;\r\n    this.BIOME_LAVA = 2;\r\n    this.BIOME_DRAGON = 3;\r\n    this.BIOME_SEA = 4;\r\n    this.BIOME_DESERT = 10;\r\n    this.BIOME[this.BIOME_FOREST] = {isSand: 1, day: [19, 58, 43], night: [4, 43, 48], _color: [\"#133a2b\", \"#042b30\"]};\r\n    this.BIOME[this.BIOME_SEA] = {isSand: 0, day: [11, 106, 132], night: [9, 55, 63], _color: [\"#0B6A84\", \"#09373F\"]};\r\n    this.BIOME[this.BIOME_WINTER] = {isSand: 0, day: [235, 242, 240], night: [19, 97, 103], _color: [\"#EBF2F0\", \"#136167\"]};\r\n    this.BIOME[this.BIOME_LAVA] = {isSand: 0, day: [45, 32, 23], night: [3, 28, 30], _color: [\"#2D2017\", \"#031C1E\"]};\r\n    this.BIOME[this.BIOME_DRAGON] = {isSand: 0, day: [74, 74, 74], night: [24, 61, 60], _color: [\"#4A4A4A\", \"#183D3C\"]};\r\n    this.BIOME[this.BIOME_DESERT] = {isSand: 0, day: [235, 216, 166], night: [9, 61, 56], _color: [\"#EBD8A6\", \"#093D38\"]};\r\n    this.Biome = function (t, x, y, w, h, v) {\r\n        this.x1 = x * 100;\r\n        this.y1 = y * 100;\r\n        this.w = w * 100;\r\n        this.h = h * 100;\r\n        this.x2 = (x + w) * 100;\r\n        this.y2 = (y + h) * 100;\r\n        this.t = t;\r\n        if (v === undefined) this.v = 15; else this.v = v;\r\n    };\r\n    function add_biome(type, wmin, hmin, range, minDist) {\r\n        var w = wmin + Math.floor(world.RNG.get() * range);\r\n        var h = hmin + Math.floor(world.RNG.get() * range);\r\n        var x1 = 10 + Math.floor(world.RNG.get() * (world.nw - w - 20));\r\n        var y1 = 10 + Math.floor(world.RNG.get() * (world.nh - h - 20));\r\n        var x2 = x1 + w;\r\n        var y2 = y1 + h;\r\n        for (var i = 0; i < world.biomes.length; i++) {\r\n            var biome = world.biomes[i];\r\n            if (Utils.intersect_aabb(x1, x2, y1, y2, biome.x1 / 100 - minDist, biome.x2 / 100 + minDist, biome.y1 / 100 - minDist, biome.y2 / 100 + minDist) === 1) return 0;\r\n        }\r\n        world.biomes.push(new world.Biome(type, x1, y1, w, h, 15));\r\n        return 1;\r\n    }\r\n    ;\r\n    ;\r\n    function add_sea_biome(map, sx, sy) {\r\n        var stop = 0;\r\n        var xMax = sx;\r\n        for (var y = sy; y < world.nh; y++) {\r\n            for (var x = sx; x < world.nw; x++) {\r\n                if (y === sy) xMax = Math.max(x, xMax);\r\n                if (x > xMax) break;\r\n                if (map[y][x] === 1) break;\r\n                map[y][x] = 1;\r\n            }\r\n            if (x < xMax) break;\r\n        }\r\n        world.biomes.push(new world.Biome(world.BIOME_SEA, sx, sy, xMax - sx + 1, y - sy, 15));\r\n    }\r\n    ;\r\n    ;\r\n    function try_to_add_biome(type, wmin, hmin, range, attempt) {\r\n        for (var i = 0; i < attempt; i++) {\r\n            if (add_biome(type, wmin, hmin, range, 8) === 1) break;\r\n        }\r\n        if (i === attempt) return 0;\r\n        return 1;\r\n    }\r\n    ;\r\n    ;\r\n    this.MAX_DIST = -1000000;\r\n    this.dist_winter = this.MAX_DIST;\r\n    this.dist_desert = this.MAX_DIST;\r\n    this.dist_lava = this.MAX_DIST;\r\n    this.dist_forest = this.MAX_DIST;\r\n    this.dist_water = this.MAX_DIST;\r\n    this.dist_dragon = this.MAX_DIST;\r\n    this.dist_from_biomes = function (player) {\r\n        var x = player.r.x;\r\n        var y = player.r.y;\r\n        var i = Math.floor(y / 100);\r\n        var j = Math.floor(x / 100);\r\n        player.dist_winter = world.MAX_DIST;\r\n        player.dist_desert = world.MAX_DIST;\r\n        player.dist_lava = world.MAX_DIST;\r\n        player.dist_forest = world.MAX_DIST;\r\n        player.dist_dragon = world.MAX_DIST;\r\n        player.dist_sand = world.MAX_DIST;\r\n        for (var k = 0; world.biomes[k].t !== world.BIOME_SEA; k++) {\r\n            if (world.biomes[k].t === world.BIOME_FOREST) {\r\n                var new_dist = world.dist_from_biome(k, x, y);\r\n                player.dist_forest = Math.max(player.dist_forest, new_dist);\r\n                if (new_dist > 0 && world.dist_from_sand(k, x, y) === 1) player.dist_sand = 1;\r\n            } else if (world.biomes[k].t === world.BIOME_WINTER) {\r\n                player.dist_winter = Math.max(player.dist_winter, world.dist_from_biome(k, x, y));\r\n            } else if (world.biomes[k].t === world.BIOME_DESERT) {\r\n                player.dist_desert = Math.max(player.dist_desert, world.dist_from_biome(k, x, y));\r\n            } else if (world.biomes[k].t === world.BIOME_LAVA) {\r\n                player.dist_lava = Math.max(player.dist_lava, world.dist_from_biome(k, x, y));\r\n            } else if (world.biomes[k].t === world.BIOME_DRAGON) {\r\n                player.dist_dragon = Math.max(player.dist_dragon, world.dist_from_biome(k, x, y));\r\n            }\r\n        }\r\n        if (MAP.tiles[i][j].iblk) player.dist_sand = 1;\r\n        if (world.find_bridge(j, i)) player.dist_water = player.MAX_DIST; else if (MAP.tiles[i][j].wtb || player.dist_winter < 0 && player.dist_lava < 0 && player.dist_forest < 0 && player.dist_sand < 0 && player.dist_dragon < 0 && player.dist_desert < 0) player.dist_water = 1; else player.dist_water = player.MAX_DIST;\r\n    };\r\n    this.update_dist_from_biomes = function (x, y) {\r\n        world.dist_winter = world.MAX_DIST;\r\n        world.dist_desert = world.MAX_DIST;\r\n        world.dist_lava = world.MAX_DIST;\r\n        world.dist_dragon = world.MAX_DIST;\r\n        world.dist_forest = world.MAX_DIST;\r\n        for (var k = 0; world.biomes[k].t !== world.BIOME_SEA; k++) {\r\n            if (world.biomes[k].t === world.BIOME_FOREST) world.dist_forest = Math.max(world.dist_forest, world.dist_from_biome(k, x, y)); else if (world.biomes[k].t === world.BIOME_WINTER) world.dist_winter = Math.max(world.dist_winter, world.dist_from_biome(k, x, y)); else if (world.biomes[k].t === world.BIOME_DESERT) world.dist_desert = Math.max(world.dist_desert, world.dist_from_biome(k, x, y)); else if (world.biomes[k].t === world.BIOME_LAVA) {\r\n                world.dist_lava = Math.max(world.dist_lava, world.dist_from_biome(k, x, y));\r\n            } else if (world.biomes[k].t === world.BIOME_DRAGON) world.dist_dragon = Math.max(world.dist_dragon, world.dist_from_biome(k, x, y));\r\n        }\r\n        if (world.dist_winter < 0 && world.dist_dragon < 0 && world.dist_forest < 0 && world.dist_dragon < 0 && world.dist_desert < 0) world.dist_water = 1; else world.dist_water = world.MAX_DIST;\r\n    };\r\n    this.dist_from_sand = function (bid, x, y) {\r\n        var biome = world.biomes[bid];\r\n        var is_sand = 0;\r\n        x1 = biome.x1 + 30 + ((biome.v & WORLD.LEFT) === 0 ? 150 : 0);\r\n        var d = x - x1;\r\n        if ((biome.v & WORLD.LEFT) > 0 && d > 0 && d < 320) is_sand = 1;\r\n        y1 = biome.y1 + 250 + ((biome.v & WORLD.TOP) === 0 ? 150 : 0);\r\n        d = y - y1;\r\n        if ((biome.v & WORLD.TOP) > 0 && d > 0 && d < 320) is_sand = 1;\r\n        x2 = biome.x2 + 80 + ((biome.v & WORLD.RIGHT) === 0 ? -200 : 0);\r\n        d = x2 - x;\r\n        if ((biome.v & WORLD.RIGHT) > 0 && d > 0 && d < 320) is_sand = 1;\r\n        y2 = biome.y2 - 200 + ((biome.v & WORLD.BOTTOM) === 0 ? -200 : 0);\r\n        d = y2 - y;\r\n        if ((biome.v & WORLD.BOTTOM) > 0 && d > 0 && d < 320) is_sand = 1;\r\n        if (x >= x1 && x <= x2 && y >= y1 && y <= y2) return is_sand;\r\n        return 0;\r\n    };\r\n    this.dist_from_biome = function (bid, x, y) {\r\n        var biome = world.biomes[bid];\r\n        x1 = biome.x1 + 30;\r\n        y1 = biome.y1 + 250;\r\n        x2 = biome.x2 + 80;\r\n        y2 = biome.y2 - 200;\r\n        if (x >= x1 && x <= x2 && y >= y1 && y <= y2) return Math.min(x - x1, x2 - x, y - y1, y2 - y);\r\n        var dist = -1000000;\r\n        if (x - x1 < 0) dist = Math.max(dist, x - x1); else if (x2 - x < 0) dist = Math.max(dist, x2 - x);\r\n        distY = -1000000;\r\n        if (y < y1 || y > y2) {\r\n            if (y - y1 < 0) distY = Math.max(distY, y - y1); else distY = Math.max(distY, y2 - y);\r\n            if (dist !== -1000000 && distY !== -1000000) dist = Math.min(dist, distY); else dist = distY;\r\n        }\r\n        return dist;\r\n    };\r\n    function add_lava(amount, biome_id) {\r\n        var biome = world.biomes[biome_id];\r\n        for (var k = 0, _k = 0; k < amount && _k < 1e4; _k++) {\r\n            var y = biome.y1 + world.RNG.get() * biome.h;\r\n            var x = biome.x1 + world.RNG.get() * biome.w;\r\n            var _i = Math.floor(y / 100);\r\n            var _j = Math.floor(x / 100);\r\n            var dist = world.dist_from_biome(biome_id, _j * 100 + 50, _i * 100 + 50);\r\n            if (dist < 600) continue;\r\n            var ok = 1;\r\n            for (var i = _i - 4; ok === 1 && i <= _i + 4; i++) {\r\n                for (var j = _j - 4; ok === 1 && j <= _j + 4; j++) {\r\n                    if (MAP.tiles[i][j] !== undefined) ok = 0;\r\n                }\r\n            }\r\n            if (ok === 0) continue;\r\n            render_single_resource(_i, _j, \"la\", k % 6, 0);\r\n            k++;\r\n        }\r\n    }\r\n    ;\r\n    function add_river_line(i, j, size, di, dj, mem, w, h) {\r\n        var w1 = Math.floor(w / 2);\r\n        var w2 = Math.max(1, Math.floor(w / 2));\r\n        var h1 = Math.floor(h / 2);\r\n        var h2 = Math.max(1, Math.floor(h / 2));\r\n        for (var k = 0; k < size; k++) {\r\n            for (var _i = i - h1; _i < i + h2; _i++) {\r\n                for (var _j = j - w1; _j < j + w2; _j++) {\r\n                    if (render_single_resource(_i, _j, \"wtb\", 0, 1) === 1) mem.push([_i, _j, 1]);\r\n                }\r\n            }\r\n            i += di;\r\n            j += dj;\r\n        }\r\n    }\r\n    ;\r\n    ;\r\n    function add_oasis(biome_id, mem) {\r\n        var biome = world.biomes[biome_id];\r\n        var i = Math.floor(biome.y1 / 100);\r\n        var j = Math.floor(biome.x1 / 100);\r\n        var h = Math.floor(biome.h / 100);\r\n        var w = Math.floor(biome.w / 100);\r\n        var h2 = i + Math.floor(h / 2);\r\n        var w2 = j + Math.floor(w / 2);\r\n        for (var k = 0; k < 3; k++) {\r\n            var _i = Math.floor(h2 - 3 + world.RNG.get() * 6);\r\n            var _j = Math.floor(w2 - 3 + world.RNG.get() * 6);\r\n            render_single_resource(_i, _j, \"plm\", k, 1);\r\n        }\r\n        for (var k = 0; k < 80; k++) {\r\n            var _i = Math.floor(h2 - 3 + world.RNG.get() * 6);\r\n            var _j = Math.floor(w2 - 3 + world.RNG.get() * 6);\r\n            if (render_single_resource(_i, _j, \"wtb\", 0, 1) === 1) mem.push([_i, _j, 0]);\r\n        }\r\n    }\r\n    ;\r\n    ;\r\n    function add_river(biome_id, mem) {\r\n        var biome = world.biomes[biome_id];\r\n        var i = Math.floor(biome.y1 / 100);\r\n        var j = Math.floor(biome.x1 / 100);\r\n        var h = Math.floor(biome.h / 100);\r\n        var w = Math.floor(biome.w / 100);\r\n        var iMax = i + h;\r\n        var jMax = j + w;\r\n        var turn = 2;\r\n        var _h = h;\r\n        var _i = i;\r\n        var _j = j + 10 + Math.floor((w - 20) * world.RNG.get());\r\n        for (var __j = _j - 4; __j < _j + 4; __j++) render_single_resource(i - 1, __j, \"wtb\", 0, 1);\r\n        while (_h > 0) {\r\n            if (turn === 2) {\r\n                for (var k = 10; k > 1; k--) {\r\n                    add_river_line(_i, _j, 1, 1, 0, mem, k, 1);\r\n                    _h -= 1;\r\n                    _i += 1;\r\n                }\r\n                turn = 0;\r\n                continue;\r\n            }\r\n            if (_h < 10) {\r\n                for (var k = 1; _h > 0; k++) {\r\n                    add_river_line(_i, _j, 1, 1, 0, mem, k, 1);\r\n                    _h -= 1;\r\n                    _i += 1;\r\n                }\r\n                continue;\r\n            }\r\n            if (turn === 1) {\r\n                var __h = Math.min(_h, Math.floor(1 + 4 * world.RNG.get()));\r\n                var w = 1 + Math.floor(world.RNG.get() * 4);\r\n                add_river_line(_i, _j, __h, 1, 0, mem, w, w);\r\n                turn = 0;\r\n                _h -= __h;\r\n                _i += __h;\r\n                continue;\r\n            }\r\n            turn = 1;\r\n            var __w = Math.floor(1 + 2 * world.RNG.get());\r\n            var ___w = 1 + Math.floor(world.RNG.get() * 4);\r\n            if (_j < j + 16) {\r\n                add_river_line(_i, _j, __w, 0, 1, mem, ___w, ___w);\r\n                _j += __w;\r\n            } else if (_j > jMax - 16) {\r\n                add_river_line(_i, _j, __w, 0, -1, mem, ___w, ___w);\r\n                _j -= __w;\r\n            } else if (world.RNG.get() > 0.5) {\r\n                add_river_line(_i, _j, __w, 0, 1, mem, ___w, ___w);\r\n                _j += __w;\r\n            } else {\r\n                add_river_line(_i, _j, __w, 0, -1, mem, ___w, ___w);\r\n                _j -= __w;\r\n            }\r\n        }\r\n        for (var __j = _j - 1; __j < _j + 2; __j++) render_single_resource(_i, __j, \"wtb\", 0, 1);\r\n    }\r\n    ;\r\n    function render_river(biome_id, mem) {\r\n        for (var k = 0; k < mem.length; k++) {\r\n            var _i = mem[k][0];\r\n            var _j = mem[k][1];\r\n            var current = mem[k][2];\r\n            add_single_river(_i, _j, biome_id, current);\r\n        }\r\n    }\r\n    ;\r\n    ;\r\n    this.add_island = function (type, x, y) {\r\n        var _i = y;\r\n        var _j = x;\r\n        render_single_resource(_i, _j, \"isl\", type, 1);\r\n        for (var k = 0; k < 4; k++) {\r\n            for (var l = 0; l < 3; l++) {\r\n                render_single_resource(_i - l, _j - k, \"iblk\", 0);\r\n                render_single_resource(_i + l, _j - k, \"iblk\", 0);\r\n                render_single_resource(_i + l, _j + k, \"iblk\", 0);\r\n                render_single_resource(_i - l, _j + k, \"iblk\", 0);\r\n            }\r\n        }\r\n        if (type === 0) {\r\n            for (var k = 0; k < 2; k++) {\r\n                render_single_resource(_i - k, _j - 4, \"iblk\", 0);\r\n                render_single_resource(_i + k, _j - 4, \"iblk\", 0);\r\n                render_single_resource(_i - k, _j + 4, \"iblk\", 0);\r\n                render_single_resource(_i + k, _j + 4, \"iblk\", 0);\r\n            }\r\n            for (var k = 0; k < 3; k++) {\r\n                render_single_resource(_i - 3, _j + k, \"iblk\", 0);\r\n                render_single_resource(_i + 3, _j + k, \"iblk\", 0);\r\n                render_single_resource(_i - 3, _j - k, \"iblk\", 0);\r\n                render_single_resource(_i + 3, _j - k, \"iblk\", 0);\r\n            }\r\n            render_single_resource(_i - 2, _j - 4, \"iblk\", 0);\r\n            render_single_resource(_i - 3, _j - 3, \"iblk\", 0);\r\n            render_single_resource(_i + 2, _j + 4, \"iblk\", 0);\r\n            render_single_resource(_i + 3, _j + 3, \"iblk\", 0);\r\n        } else if (type === 1) {\r\n            for (var k = 0; k < 3; k++) {\r\n                render_single_resource(_i - k, _j - 4, \"iblk\", 0);\r\n                render_single_resource(_i + k, _j - 4, \"iblk\", 0);\r\n                render_single_resource(_i - k, _j + 4, \"iblk\", 0);\r\n                render_single_resource(_i + k, _j + 4, \"iblk\", 0);\r\n            }\r\n            for (var k = 0; k < 4; k++) {\r\n                render_single_resource(_i - 3, _j + k, \"iblk\", 0);\r\n                render_single_resource(_i + 3, _j + k, \"iblk\", 0);\r\n                render_single_resource(_i - 3, _j - k, \"iblk\", 0);\r\n                render_single_resource(_i + 3, _j - k, \"iblk\", 0);\r\n            }\r\n        } else if (type === 2) {\r\n            for (var k = 0; k < 2; k++) {\r\n                render_single_resource(_i - k, _j - 4, \"iblk\", 0);\r\n                render_single_resource(_i + k, _j - 4, \"iblk\", 0);\r\n                render_single_resource(_i - k, _j + 4, \"iblk\", 0);\r\n                render_single_resource(_i + k, _j + 4, \"iblk\", 0);\r\n            }\r\n            for (var k = 0; k < 3; k++) {\r\n                render_single_resource(_i - 3, _j + k, \"iblk\", 0);\r\n                render_single_resource(_i + 3, _j + k, \"iblk\", 0);\r\n                render_single_resource(_i - 3, _j - k, \"iblk\", 0);\r\n                render_single_resource(_i + 3, _j - k, \"iblk\", 0);\r\n            }\r\n        }\r\n    };\r\n    this.add_islands = function (amount) {\r\n        for (var i = 0; i < world.biomes.length && amount > 0; i++) {\r\n            var biome = world.biomes[i];\r\n            if (biome.t !== world.BIOME_SEA) continue;\r\n            if (biome.w > 1800 && biome.h > 1e3) {\r\n                var _j = Math.floor((biome.x1 + biome.w / 2) / 100);\r\n                var _i = Math.floor((biome.y1 + biome.h / 2) / 100);\r\n                world.add_island(amount % 3, _j, _i);\r\n                for (var k = 0; k < 3; k++) {\r\n                    var __i = _i - 2 + Math.floor(world.RNG.get() * 4);\r\n                    var __j = _j - 3 + Math.floor(world.RNG.get() * 6);\r\n                    if (MAP.tiles[__i][__j].s === undefined) render_single_resource(__i, __j, \"plm\", k);\r\n                    var __i = _i - 2 + Math.floor(world.RNG.get() * 4);\r\n                    var __j = _j - 3 + Math.floor(world.RNG.get() * 6);\r\n                    if (MAP.tiles[__i][__j].plm === undefined) render_single_resource(__i, __j, \"s\", k);\r\n                }\r\n                var __i = _i - 2 + Math.floor(world.RNG.get() * 4);\r\n                var __j = _j - 3 + Math.floor(world.RNG.get() * 6);\r\n                if (MAP.tiles[__i][__j].plm === undefined && MAP.tiles[__i][__j].s === undefined) render_single_resource(__i, __j, \"p\", 0, 1);\r\n                amount--;\r\n            }\r\n        }\r\n    };\r\n    this.generate_world = function (seed) {\r\n        world.RNG.init(seed);\r\n        var attempt = 0;\r\n        while (1) {\r\n            attempt++;\r\n            if (attempt > 1e4) return;\r\n            world.biomes = [];\r\n            if (world.custom_map === 0 && (world.mode === WORLD.MODE_VAMPIRES || world.mode === WORLD.MODE_EXPERIMENTAL || world.mode === WORLD.MODE_PVP)) world.custom_map = ___MAP___;\r\n            if (world.mode === WORLD.MODE_ZOMBIES) {\r\n                world.biomes.push(new world.Biome(world.BIOME_FOREST, 2, 2, 80, 80, 15));\r\n            } else if (world.mode === WORLD.MODE_LEGACY) {\r\n                world.biomes.push(new world.Biome(world.BIOME_FOREST, 2, 2, 150, 150, 15));\r\n            } else {\r\n                if (world.custom_map !== 0 && world.custom_map.length > 0 && world.custom_map[0].length > 3) {\r\n                    for (var b = 0; b < world.custom_map.length; b++) {\r\n                        var elt = world.custom_map[b];\r\n                        if (elt[0] === 0) {\r\n                            var __id = WORLD.BIOME_FOREST;\r\n                            switch (elt[1]) {\r\n                                case \"FOREST\":\r\n                                    __id = world.BIOME_FOREST;\r\n                                    break;\r\n                                case \"WINTER\":\r\n                                    __id = world.BIOME_WINTER;\r\n                                    break;\r\n                                case \"DESERT\":\r\n                                    __id = world.BIOME_DESERT;\r\n                                    break;\r\n                                case \"LAVA\":\r\n                                    __id = world.BIOME_LAVA;\r\n                                    break;\r\n                                case \"DRAGON\":\r\n                                    __id = world.BIOME_DRAGON;\r\n                                    break;\r\n                            }\r\n                            world.biomes.push(new world.Biome(__id, elt[2], elt[3], elt[4], elt[5], elt[6], elt[7]));\r\n                            continue;\r\n                        } else break;\r\n                    }\r\n                } else if (world.custom_map !== 0) {\r\n                    for (var b = 0; b < world.custom_map.length; b++) {\r\n                        var biome = world.custom_map[b];\r\n                        var __id = WORLD.BIOME_FOREST;\r\n                        switch (biome[0]) {\r\n                            case \"FOREST\":\r\n                                __id = world.BIOME_FOREST;\r\n                                break;\r\n                            case \"WINTER\":\r\n                                __id = world.BIOME_WINTER;\r\n                                break;\r\n                            case \"DESERT\":\r\n                                __id = world.BIOME_DESERT;\r\n                                break;\r\n                            case \"LAVA\":\r\n                                __id = world.BIOME_LAVA;\r\n                                break;\r\n                            case \"DRAGON\":\r\n                                __id = world.BIOME_DRAGON;\r\n                                break;\r\n                        }\r\n                        if (try_to_add_biome(__id, biome[1], biome[2], 0, (b + 1) * 10) === 0) break;\r\n                    }\r\n                    if (b !== world.custom_map.length) continue;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n        render_minimap();\r\n        var map = [];\r\n        for (var i = 0; i < world.nh; i++) {\r\n            map[i] = new Array(world.nw);\r\n            for (var j = 0; j < world.nw; j++) map[i][j] = 0;\r\n        }\r\n        for (var i = 0; i < world.biomes.length; i++) {\r\n            var biome = world.biomes[i];\r\n            var x2 = biome.x2 / 100;\r\n            var y2 = biome.y2 / 100;\r\n            for (var x = biome.x1 / 100; x <= x2; x++) {\r\n                for (var y = biome.y1 / 100; y <= y2; y++) map[y][x] = 1;\r\n            }\r\n        }\r\n        for (var y = 0; y < world.nh; y++) {\r\n            for (var x = 0; x < world.nw; x++) {\r\n                if (map[y][x] === 0) add_sea_biome(map, x, y);\r\n            }\r\n        }\r\n        MAP = {w: world.nw, h: world.nh, tiles: []};\r\n        for (var i = 0; i < world.nh; i++) MAP.tiles[i] = [];\r\n        if (world.custom_map !== 0 && world.custom_map.length > 0 && world.custom_map[0].length > 3) {\r\n            for (var b = 0; b < world.custom_map.length; b++) {\r\n                var elt = world.custom_map[b];\r\n                if (elt[1] === \"isl\") world.add_island(elt[2], elt[3], elt[4]);\r\n            }\r\n        } else world.add_islands(world.islands);\r\n        if (world.custom_map !== 0 && world.custom_map.length > 0 && world.custom_map[0].length > 3) {\r\n            var mem = [];\r\n            for (var b = 0; b < world.custom_map.length; b++) {\r\n                var elt = world.custom_map[b];\r\n                if (elt[0] !== 1) continue;\r\n                if (elt[1] === \"r\") {\r\n                    render_single_resource(elt[3], elt[2], \"wtb\", 0, 1);\r\n                    mem.push([elt[3], elt[2], elt[4]]);\r\n                } else render_single_resource(elt[4], elt[3], elt[1], elt[2], elt[5]);\r\n            }\r\n            render_river(0, mem);\r\n            mem = [];\r\n        } else {\r\n            for (var i = 0; i < world.biomes.length; i++) {\r\n                var biome = world.biomes[i];\r\n                if (world.mode === WORLD.MODE_LEGACY) {\r\n                    if (biome.t === world.BIOME_FOREST) add_forest_resources_v2(i, biome.w / 1e4);\r\n                } else {\r\n                    if (biome.t === world.BIOME_FOREST) add_forest_resources(i, biome.w / 1e4);\r\n                    if (biome.t === world.BIOME_LAVA) add_lava_resources(i, biome.w / 1e4);\r\n                    if (biome.t === world.BIOME_WINTER) add_winter_resources(i, biome.w / 1e4);\r\n                    if (biome.t === world.BIOME_DESERT) add_desert_resources(i, biome.w / 1e4);\r\n                    if (biome.t === world.BIOME_DRAGON) add_dragon_resources(i);\r\n                }\r\n            }\r\n        }\r\n        render_all_resources_minimap();\r\n        world.map_wrapper(MAP);\r\n    };\r\n    function add_dragon_resources(biome_id) {\r\n        for (var i = 0; i < 3; i++) add_resources(biome_id, \"s\", i, 15);\r\n        for (var i = 0; i < 3; i++) add_resources(biome_id, \"a\", i, 1);\r\n        for (var i = 0; i < 3; i++) add_resources(biome_id, \"d\", i, 1);\r\n        render_corner(biome_id);\r\n    }\r\n    ;\r\n    ;\r\n    function add_winter_resources(biome_id, size) {\r\n        for (var i = 0; i < 3; i++) add_resources(biome_id, \"s\", i, Math.floor(18 * size));\r\n        for (var i = 0; i < 3; i++) add_resources(biome_id, \"f\", i, Math.floor(24 * size));\r\n        for (var i = 0; i < 3; i++) add_resources(biome_id, \"d\", i, Math.max(1, Math.floor(2 * size)), 0.3);\r\n        for (var i = 0; i < 3; i++) add_resources(biome_id, \"g\", i, Math.floor(6 * size));\r\n        render_corner(biome_id);\r\n    }\r\n    ;\r\n    function add_desert_resources(biome_id, size) {\r\n        for (var i = 0; i < 3; i++) add_resources(biome_id, \"s\", i, Math.floor(12 * size));\r\n        for (var i = 0; i < 3; i++) add_resources(biome_id, \"m\", i, Math.max(1, Math.floor(1 * size)), 0.2);\r\n        add_resources(biome_id, \"c\", 0, Math.floor(36 * size));\r\n        var mem = [];\r\n        add_oasis(biome_id, mem);\r\n        render_river(biome_id, mem);\r\n        mem = [];\r\n    }\r\n    ;\r\n    ;\r\n    function add_lava_resources(biome_id, size) {\r\n        add_lava(80 * size, biome_id);\r\n        for (var i = 0; i < 3; i++) add_resources(biome_id, \"s\", i, Math.floor(12 * size));\r\n        for (var i = 0; i < 3; i++) add_resources(biome_id, \"g\", i, Math.floor(6 * size));\r\n        for (var i = 0; i < 3; i++) add_resources(biome_id, \"re\", i, Math.max(1, Math.floor(1 * size)), 0.2);\r\n        for (var i = 0; i < 3; i++) add_resources(biome_id, \"a\", i, Math.max(1, Math.floor(2 * size)));\r\n        render_corner(biome_id);\r\n    }\r\n    ;\r\n    function add_forest_resources_v2(biome_id, size) {\r\n        for (var i = 0; i < 6; i++) add_resources(biome_id, \"t\", i, Math.floor(80 * size));\r\n        for (var i = 0; i < 4; i++) add_resources(biome_id, \"b\", i, Math.floor(80 * size));\r\n        for (var i = 0; i < 3; i++) add_resources(biome_id, \"s\", i, Math.floor(50 * size));\r\n        var mem = [];\r\n        for (var i = 0; i < 6; i++) add_river(biome_id, mem);\r\n        render_river(biome_id, mem);\r\n        mem = [];\r\n        add_resources(biome_id, \"p\", 0, Math.floor(28 * size));\r\n        for (var i = 0; i < 3; i++) add_resources(biome_id, \"g\", i, Math.floor(7 * size));\r\n        for (var i = 0; i < 3; i++) add_resources(biome_id, \"d\", i, Math.floor(2 * size));\r\n        for (var i = 0; i < 3; i++) add_resources(biome_id, \"a\", i, Math.floor(1 * size));\r\n        for (var i = 0; i < 3; i++) add_resources(biome_id, \"m\", i, Math.floor(1 * size));\r\n        add_resources(biome_id, \"a\", 0, Math.floor(1 * size));\r\n        render_corner(biome_id);\r\n    }\r\n    ;\r\n    function add_forest_resources(biome_id, size) {\r\n        for (var i = 0; i < 6; i++) add_resources(biome_id, \"t\", i, Math.floor(20 * size));\r\n        for (var i = 0; i < 4; i++) add_resources(biome_id, \"b\", i, Math.floor(20 * size));\r\n        for (var i = 0; i < 3; i++) add_resources(biome_id, \"s\", i, Math.floor(20 * size));\r\n        var mem = [];\r\n        add_river(biome_id, mem);\r\n        render_river(biome_id, mem);\r\n        mem = [];\r\n        add_resources(biome_id, \"p\", 0, Math.floor(24 * size));\r\n        for (var i = 0; i < 3; i++) add_resources(biome_id, \"g\", i, Math.floor(5 * size));\r\n        if (world.mode === WORLD.MODE_ZOMBIES) {\r\n            for (var i = 0; i < 3; i++) add_resources(biome_id, \"d\", i, Math.floor(3 * size));\r\n            for (var i = 0; i < 3; i++) add_resources(biome_id, \"a\", i, Math.floor(2 * size));\r\n        }\r\n        render_corner(biome_id);\r\n    }\r\n    ;\r\n    function render_corner(biome_id) {\r\n        var biome = world.biomes[biome_id];\r\n        render_single_resource(-3 + Math.floor(biome.y2 / 100), -1 + Math.floor(biome.x2 / 100), \"s\", 0, 0);\r\n        render_single_resource(3 + Math.floor(biome.y1 / 100), -1 + Math.floor(biome.x2 / 100), \"s\", 0, 0);\r\n        render_single_resource(-3 + Math.floor(biome.y2 / 100), 1 + Math.floor(biome.x1 / 100), \"s\", 0, 0);\r\n        render_single_resource(3 + Math.floor(biome.y1 / 100), 1 + Math.floor(biome.x1 / 100), \"s\", 0, 0);\r\n    }\r\n    ;\r\n    ;\r\n    function add_resources(biome_id, type, subtype, amount, subpart) {\r\n        var biome = world.biomes[biome_id];\r\n        var x = Math.floor(biome.x1 / 100);\r\n        var y = Math.floor(biome.y1 / 100);\r\n        var w = Math.floor(biome.w / 100);\r\n        var h = Math.floor(biome.h / 100);\r\n        if (subpart !== undefined) {\r\n            subpart = 1 - subpart;\r\n            x += Math.floor(w * subpart / 2);\r\n            y += Math.floor(h * subpart / 2);\r\n            w -= Math.floor(w * subpart);\r\n            h -= Math.floor(h * subpart);\r\n        }\r\n        var tiles = MAP.tiles;\r\n        for (var k = 0, l = 0; k < amount; l++) {\r\n            if (l > 5e4) break;\r\n            var i = y + Math.floor(world.RNG.get() * h);\r\n            var j = x + Math.floor(world.RNG.get() * w);\r\n            var dist = world.dist_from_biome(biome_id, j * 100 + 50, i * 100 + 50);\r\n            if (dist < 400) continue;\r\n            var tile = tiles[i][j + 1];\r\n            if (tile !== undefined && tile[type] !== undefined && tile[type][subtype] !== undefined) continue;\r\n            var tile = tiles[i][j - 1];\r\n            if (tile !== undefined && tile[type] !== undefined && tile[type][subtype] !== undefined) continue;\r\n            var tile = tiles[i + 1][j];\r\n            if (tile !== undefined && tile[type] !== undefined && tile[type][subtype] !== undefined) continue;\r\n            var tile = tiles[i - 1][j];\r\n            if (tile !== undefined && tile[type] !== undefined && tile[type][subtype] !== undefined) continue;\r\n            var tile = tiles[i + 1][j - 1];\r\n            if (tile !== undefined && tile[type] !== undefined && tile[type][subtype] !== undefined) continue;\r\n            var tile = tiles[i - 1][j + 1];\r\n            if (tile !== undefined && tile[type] !== undefined && tile[type][subtype] !== undefined) continue;\r\n            var tile = tiles[i + 1][j + 1];\r\n            if (tile !== undefined && tile[type] !== undefined && tile[type][subtype] !== undefined) continue;\r\n            var tile = tiles[i - 1][j - 1];\r\n            if (tile !== undefined && tile[type] !== undefined && tile[type][subtype] !== undefined) continue;\r\n            if (tiles[i][j] === undefined) {\r\n                render_single_resource(i, j, type, subtype, 1);\r\n                k++;\r\n            }\r\n        }\r\n    }\r\n    ;\r\n    ;\r\n    ;\r\n    ;\r\n    function add_single_river(i, j, biome_id, current) {\r\n        if (!(i >= 0 && j >= 0 && i < world.nh && j < world.nw)) return;\r\n        tiles = MAP.tiles;\r\n        if (tiles[i][j] === undefined) tiles[i][j] = {};\r\n        if (tiles[i][j].r !== undefined) return;\r\n        var code = 0;\r\n        if (i - 1 >= 0 && j >= 0 && i - 1 < world.nh && j < world.nw && tiles[i - 1][j] !== undefined && tiles[i - 1][j].wtb !== undefined) code += 2;\r\n        if (i >= 0 && j - 1 >= 0 && i < world.nh && j - 1 < world.nw && tiles[i][j - 1] !== undefined && tiles[i][j - 1].wtb !== undefined) code += 8;\r\n        if (i >= 0 && j + 1 >= 0 && i < world.nh && j + 1 < world.nw && tiles[i][j + 1] !== undefined && tiles[i][j + 1].wtb !== undefined) code += 16;\r\n        if (i + 1 >= 0 && j >= 0 && i + 1 < world.nh && j < world.nw && tiles[i + 1][j] !== undefined && tiles[i + 1][j].wtb !== undefined) code += 64;\r\n        if (i - 1 >= 0 && j - 1 >= 0 && i - 1 < world.nh && j - 1 < world.nw && (code & 10) === 10 && tiles[i - 1][j - 1] !== undefined && tiles[i - 1][j - 1].wtb !== undefined) code += 1;\r\n        if (i - 1 >= 0 && j + 1 >= 0 && i - 1 < world.nh && j + 1 < world.nw && (code & 18) === 18 && tiles[i - 1][j + 1] !== undefined && tiles[i - 1][j + 1].wtb !== undefined) code += 4;\r\n        if (i + 1 >= 0 && j - 1 >= 0 && i + 1 < world.nh && j - 1 < world.nw && (code & 72) === 72 && tiles[i + 1][j - 1] !== undefined && tiles[i + 1][j - 1].wtb !== undefined) code += 32;\r\n        if (i + 1 >= 0 && j + 1 >= 0 && i + 1 < world.nh && j + 1 < world.nw && (code & 80) === 80 && tiles[i + 1][j + 1] !== undefined && tiles[i + 1][j + 1].wtb !== undefined) code += 128;\r\n        tiles[i][j].r = {};\r\n        tiles[i][j].r.river = code;\r\n        tiles[i][j].r.current = current;\r\n        tiles[i][j].r.dist = world.dist_from_biome(biome_id, j * 100 + 50, i * 100 + 50) - 400;\r\n        tiles[i][j].r.x = j * 100 + 50;\r\n        tiles[i][j].r.y = i * 100 + 50;\r\n    }\r\n    ;\r\n    ;\r\n    function render_single_resource(i, j, type, subtype, _show) {\r\n        if (i < 0 || j < 0 || i >= world.nh || j >= world.nw) return;\r\n        tiles = MAP.tiles;\r\n        if (tiles[i][j] === undefined) tiles[i][j] = {};\r\n        if (tiles[i][j][type] !== undefined) return 0;\r\n        tiles[i][j][type] = [];\r\n        tiles[i][j][type][subtype] = [{x: j * 100 + 50, y: i * 100 + 50}];\r\n        if (_show === 1) add_resource_minimap(type, subtype, i, j);\r\n        return 1;\r\n    }\r\n    ;\r\n    ;\r\n    this.render_single_resource = render_single_resource;\r\n    function apply_animation(tile, o, anim) {\r\n        if (tile[o]) {\r\n            for (k = 0; k < tile[o].length; k++) {\r\n                if (!tile[o][k]) continue;\r\n                for (l = 0; l < tile[o][k].length; l++) {\r\n                    tile[o][k][l].hit = anim;\r\n                    tile[o][k][l].update = false;\r\n                    tile[o][k][l].time = 0;\r\n                    tile[o][k][l].angle = 0;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    ;\r\n    this.map_wrapper = function (MAP) {\r\n        for (var i = 0; i < this.nh; i++) {\r\n            for (var j = 0; j < this.nw; j++) {\r\n                if (!MAP.tiles[i]) MAP.tiles[i] = [];\r\n                if (!MAP.tiles[i][j]) {\r\n                    MAP.tiles[i][j] = [];\r\n                    continue;\r\n                }\r\n                var tile = MAP.tiles[i][j];\r\n                if (tile.de && tile.de.length > 0) {\r\n                    for (var k = 0; k < tile.de.length; k++) {\r\n                        if (tile.de[k] && tile.de[k].length > 0) {\r\n                            tile.de = tile.de[k][0];\r\n                            if (k >= 41 && k <= 49) {\r\n                                tile.de.scale = 3;\r\n                                var compo = Math.floor(Math.random() * 3 + 1);\r\n                                tile.de.p = [];\r\n                                for (var l = 0; l < compo; l++) {\r\n                                    tile.de.p.push({x: Math.random() * 120 - 60, y: Math.random() * 120 - 60, angle: Math.random() * Math.PI * 2, _id: 41 + Math.floor(Math.random() * 9)});\r\n                                }\r\n                            } else if (k >= 19 && k <= 26) {\r\n                                tile.de.scale = 3;\r\n                                var compo = Math.floor(Math.random() * 3 + 1);\r\n                                tile.de.p = [];\r\n                                for (var l = 0; l < compo; l++) {\r\n                                    tile.de.p.push({x: Math.random() * 120 - 60, y: Math.random() * 120 - 60, angle: Math.random() * Math.PI * 2, _id: 19 + Math.floor(Math.random() * 8)});\r\n                                }\r\n                            } else if (k <= 15 || k >= 27 && k <= 40) {\r\n                                tile.de.angle = 0;\r\n                                tile.de.scale = 2;\r\n                                tile.de._id = k;\r\n                            } else {\r\n                                tile.de.angle = Math.random() * Math.PI * 2;\r\n                                tile.de.scale = 1;\r\n                                tile.de._id = k;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                apply_animation(tile, \"p\", new Utils.LinearAnimation(false, 1, 1, 0, 10, 10));\r\n                apply_animation(tile, \"t\", new Utils.LinearAnimation(false, 1, 1, 0, 10, 10));\r\n                apply_animation(tile, \"s\", new Utils.LinearAnimation(false, 1, 1, 0, 10, 10));\r\n                apply_animation(tile, \"g\", new Utils.LinearAnimation(false, 1, 1, 0, 10, 10));\r\n                apply_animation(tile, \"d\", new Utils.LinearAnimation(false, 1, 1, 0, 10, 10));\r\n                apply_animation(tile, \"b\", new Utils.LinearAnimation(false, 1, 1, 0, 10, 10));\r\n                apply_animation(tile, \"f\", new Utils.LinearAnimation(false, 1, 1, 0, 10, 10));\r\n                apply_animation(tile, \"sw\", new Utils.LinearAnimation(false, 1, 1, 0, 10, 10));\r\n                apply_animation(tile, \"gw\", new Utils.LinearAnimation(false, 1, 1, 0, 10, 10));\r\n                apply_animation(tile, \"dw\", new Utils.LinearAnimation(false, 1, 1, 0, 10, 10));\r\n                apply_animation(tile, \"a\", new Utils.LinearAnimation(false, 1, 1, 0, 10, 10));\r\n                apply_animation(tile, \"cs\", new Utils.LinearAnimation(false, 1, 1, 0, 10, 10));\r\n                apply_animation(tile, \"plm\", new Utils.LinearAnimation(false, 1, 1, 0, 10, 10));\r\n                apply_animation(tile, \"re\", new Utils.LinearAnimation(false, 1, 1, 0, 10, 10));\r\n                apply_animation(tile, \"c\", new Utils.LinearAnimation(false, 1, 1, 0, 10, 10));\r\n                apply_animation(tile, \"m\", new Utils.LinearAnimation(false, 1, 1, 0, 10, 10));\r\n            }\r\n        }\r\n    };\r\n    this.time = SPRITE.DAY;\r\n    this.clock = {translate: {x: 0, y: 0}, init: 0, hour: 0, now: 0};\r\n    this.delete_all_units = function () {\r\n        this.fast_units = [];\r\n        this.units[ITEMS.PLAYERS] = [];\r\n        this.units[ITEMS.WORKBENCH] = [];\r\n        this.units[ITEMS.FIRE] = [];\r\n        this.units[ITEMS.BIG_FIRE] = [];\r\n        this.units[ITEMS.SEED] = [];\r\n        this.units[ITEMS.SPIKE] = [];\r\n        this.units[ITEMS.STONE_SPIKE] = [];\r\n        this.units[ITEMS.GOLD_SPIKE] = [];\r\n        this.units[ITEMS.DIAMOND_SPIKE] = [];\r\n        this.units[ITEMS.AMETHYST_SPIKE] = [];\r\n        this.units[ITEMS.REIDITE_SPIKE] = [];\r\n        this.units[ITEMS.BRIDGE] = [];\r\n        this.units[ITEMS.WOOD_TOWER] = [];\r\n        this.units[ITEMS.ROOF] = [];\r\n        this.units[ITEMS.PLOT] = [];\r\n        this.units[ITEMS.WHEAT_SEED] = [];\r\n        this.units[ITEMS.ALOE_VERA_SEED] = [];\r\n        this.units[ITEMS.PUMPKIN_SEED] = [];\r\n        this.units[ITEMS.TOMATO_SEED] = [];\r\n        this.units[ITEMS.CARROT_SEED] = [];\r\n        this.units[ITEMS.WATERMELON_SEED] = [];\r\n        this.units[ITEMS.GARLIC_SEED] = [];\r\n        this.units[ITEMS.THORNBUSH_SEED] = [];\r\n        this.units[ITEMS.WINDMILL] = [];\r\n        this.units[ITEMS.EXTRACTOR_MACHINE_STONE] = [];\r\n        this.units[ITEMS.EXTRACTOR_MACHINE_GOLD] = [];\r\n        this.units[ITEMS.EXTRACTOR_MACHINE_DIAMOND] = [];\r\n        this.units[ITEMS.EXTRACTOR_MACHINE_AMETHYST] = [];\r\n        this.units[ITEMS.EXTRACTOR_MACHINE_REIDITE] = [];\r\n        this.units[ITEMS.WELL] = [];\r\n        this.units[ITEMS.WALL] = [];\r\n        this.units[ITEMS.STONE_WALL] = [];\r\n        this.units[ITEMS.GOLD_WALL] = [];\r\n        this.units[ITEMS.DIAMOND_WALL] = [];\r\n        this.units[ITEMS.AMETHYST_WALL] = [];\r\n        this.units[ITEMS.REIDITE_WALL] = [];\r\n        this.units[ITEMS.BED] = [];\r\n        this.units[ITEMS.WOOD_DOOR] = [];\r\n        this.units[ITEMS.STONE_DOOR] = [];\r\n        this.units[ITEMS.GOLD_DOOR] = [];\r\n        this.units[ITEMS.DIAMOND_DOOR] = [];\r\n        this.units[ITEMS.AMETHYST_DOOR] = [];\r\n        this.units[ITEMS.REIDITE_DOOR] = [];\r\n        this.units[ITEMS.WOOD_DOOR_SPIKE] = [];\r\n        this.units[ITEMS.STONE_DOOR_SPIKE] = [];\r\n        this.units[ITEMS.GOLD_DOOR_SPIKE] = [];\r\n        this.units[ITEMS.DIAMOND_DOOR_SPIKE] = [];\r\n        this.units[ITEMS.AMETHYST_DOOR_SPIKE] = [];\r\n        this.units[ITEMS.REIDITE_DOOR_SPIKE] = [];\r\n        this.units[ITEMS.FURNACE] = [];\r\n        this.units[ITEMS.TOTEM] = [];\r\n        this.units[ITEMS.WOOD_TOWER] = [];\r\n        this.units[ITEMS.CHEST] = [];\r\n        this.units[ITEMS.RESURRECTION] = [];\r\n        this.units[ITEMS.EMERALD_MACHINE] = [];\r\n        this.units[ITEMS.FRUIT] = [];\r\n        this.units[ITEMS.RABBIT] = [];\r\n        this.units[ITEMS.WOLF] = [];\r\n        this.units[ITEMS.CRAB] = [];\r\n        this.units[ITEMS.BOAR] = [];\r\n        this.units[ITEMS.BABY_MAMMOTH] = [];\r\n        this.units[ITEMS.CRAB_BOSS] = [];\r\n        this.units[ITEMS.BABY_DRAGON] = [];\r\n        this.units[ITEMS.BABY_LAVA] = [];\r\n        this.units[ITEMS.HAWK] = [];\r\n        this.units[ITEMS.PIRANHA] = [];\r\n        this.units[ITEMS.KRAKEN] = [];\r\n        this.units[ITEMS.FOX] = [];\r\n        this.units[ITEMS.PENGUIN] = [];\r\n        this.units[ITEMS.SPELL] = [];\r\n        this.units[ITEMS.FIREFLY] = [];\r\n        this.units[ITEMS.BEAR] = [];\r\n        this.units[ITEMS.MAMMOTH] = [];\r\n        this.units[ITEMS.VULTURE] = [];\r\n        this.units[ITEMS.SAND_WORM] = [];\r\n        this.units[ITEMS.DRAGON] = [];\r\n        this.units[ITEMS.LAVA_DRAGON] = [];\r\n        this.units[ITEMS.FLAME] = [];\r\n        this.units[ITEMS.WHEAT_MOB] = [];\r\n        this.units[ITEMS.ALOE_VERA_MOB] = [];\r\n        this.units[ITEMS.PUMPKIN_MOB] = [];\r\n        this.units[ITEMS.GARLIC_MOB] = [];\r\n        this.units[ITEMS.THORNBUSH_MOB] = [];\r\n        this.units[ITEMS.TREASURE_CHEST] = [];\r\n        this.units[ITEMS.DEAD_BOX] = [];\r\n        this.units[ITEMS.CRATE] = [];\r\n        this.units[ITEMS.BREAD_OVEN] = [];\r\n        this.units[ITEMS.SIGN] = [];\r\n        this.units[ITEMS.SPIDER] = [];\r\n        this.units[ITEMS.GIFT] = [];\r\n        this.units[ITEMS.GARLAND] = [];\r\n        return;\r\n    };\r\n    this.delete_units = function (uid) {\r\n        if (!this.fast_units[uid]) return;\r\n        type = this.fast_units[uid].type;\r\n        this.fast_units[uid] = null;\r\n        var units = this.units[type];\r\n        for (var j = 0; j < units.length; j++) {\r\n            if (units[j].uid == uid) {\r\n                units.splice(j, 1);\r\n                return;\r\n            }\r\n        }\r\n        return;\r\n    };\r\n    this.find_tower = function (i, j) {\r\n        for (var k = 0; k < this.units[ITEMS.WOOD_TOWER].length; k++) {\r\n            var b = this.units[ITEMS.WOOD_TOWER][k];\r\n            if (Math.floor(b.x / 100) === j && Math.floor(b.y / 100) === i) return 1;\r\n        }\r\n        return 0;\r\n    };\r\n    this.find_bridge = function (i, j) {\r\n        for (var k = 0; k < this.units[ITEMS.BRIDGE].length; k++) {\r\n            var b = this.units[ITEMS.BRIDGE][k];\r\n            if (Math.floor(b.x / 100) == i && Math.floor(b.y / 100) == j) return true;\r\n        }\r\n        return false;\r\n    };\r\n    this.move_units = function (list) {\r\n        for (var i = 0; i < list.length; i++) {\r\n            b = list[i];\r\n            if (b.angle != b.nangle) {\r\n                var pi2 = Math.PI * 2;\r\n                b.angle = (b.angle + pi2) % pi2;\r\n                b.nangle = (b.nangle + pi2) % pi2;\r\n                if (b.angle != b.nangle) {\r\n                    var diff = b.nangle - b.angle;\r\n                    var min = Math.abs(diff);\r\n                    if (min > Math.PI) min = Math.PI * 2 - min;\r\n                    var rotate = 3 * (min / Math.PI) * WORLD.ROTATE * delta;\r\n                    if (diff > Math.PI) b.angle -= rotate; else if (diff < -Math.PI) b.angle += rotate; else if (diff < 0) b.angle -= rotate; else b.angle += rotate;\r\n                    b.angle = (b.angle + pi2) % pi2;\r\n                    if (Math.abs(b.angle - b.nangle) < rotate) b.angle = b.nangle;\r\n                }\r\n            }\r\n            var bi = Math.floor(b.r.y / 100);\r\n            var bj = Math.floor(b.r.x / 100);\r\n            if (b.x != b.r.x || b.y != b.r.y) {\r\n                if (b.action & STATE.IDLE) b.action -= STATE.IDLE;\r\n                b.action |= STATE.WALK;\r\n                var a = Utils.get_std_angle(b, b.r) + Math.PI;\r\n                var d = delta * b.speed;\r\n                var v = Utils.build_vector(d, a);\r\n                if (Utils.norm(v) < Utils.norm(Utils.get_vector(b, b.r))) Utils.add_vector(b, v); else {\r\n                    if (b.action & STATE.WALK) b.action -= STATE.WALK;\r\n                    b.action |= STATE.IDLE;\r\n                    Utils.copy_vector(b.r, b);\r\n                }\r\n            }\r\n            if (b.ghost) {\r\n                var bubbles = b.bubbles;\r\n                var l = bubbles.length;\r\n                if (l === 0 || l < SPRITE.GHOST_BUBBLES && bubbles[l - 1].life < 0.95) bubbles.push({id: Math.floor(Math.random() * sprite[SPRITE.BUBBLES][0].length), x: Math.floor(b.x + Math.random() * 80 - 40), y: Math.floor(b.y + Math.random() * 80 - 40), life: 1});\r\n                for (var j = 0; j < l; j++) bubbles[j].life = Math.max(0, bubbles[j].life - delta);\r\n                for (var j = 0; j < l; j++) {\r\n                    if (bubbles[j].life === 0) {\r\n                        bubbles.splice(j, 1);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            var has_swim = 0;\r\n            if (b.move_effect && ui.quality) {\r\n                var swim = b.swim;\r\n                var l = swim.length;\r\n                if (b.dist_water > 0 && b.vehicle !== INV.BABY_DRAGON && b.vehicle !== INV.BABY_LAVA && b.vehicle !== INV.PLANE && b.vehicle !== INV.HAWK && b.vehicle !== INV.NIMBUS && !b.ghost) {\r\n                    has_swim = 1;\r\n                    if (l === 0 || Utils.dist(swim[l - 1], b) > SPRITE.SWIM_SPACE) {\r\n                        var angle = -b.angle;\r\n                        var x = Math.sin(angle) * 45 * scale;\r\n                        var y = Math.cos(angle) * 45 * scale;\r\n                        swim.push({x: b.x + x, y: b.y + y, r: 8, alpha: 0.8});\r\n                        swim.push({x: b.x - x, y: b.y - y, r: 8, alpha: 0.8});\r\n                        swim.push({x: b.x, y: b.y, r: 24, alpha: 1});\r\n                    }\r\n                }\r\n                for (var j = 0; j < l; j++) {\r\n                    swim[j].alpha = Math.max(0, swim[j].alpha - delta / 2.2);\r\n                    swim[j].r += delta * 20;\r\n                }\r\n                if (swim.length > 0 && swim[0].alpha === 0) swim.splice(0, 1);\r\n                var foot = b.foot;\r\n                var l = foot.length;\r\n                var id = -1;\r\n                var __s = Math.max(0, Math.sign(b.dist_sand));\r\n                var __w = Math.max(0, Math.sign(b.dist_winter));\r\n                var __r = Math.max(0, Math.sign(b.dist_desert));\r\n                var __l = Math.max(0, Math.sign(b.dist_lava));\r\n                var __d = Math.max(0, Math.sign(b.dist_dragon));\r\n                if (b.dist_sand > 0 || b.dist_desert > 0) var id = SPRITE.SAND_STEP; else if (b.dist_dragon > 0) var id = SPRITE.CAVE_STEP; else if (b.dist_winter > 0) var id = SPRITE.SNOW_STEP; else if (b.dist_lava > 0) var id = SPRITE.LAVA_STEP;\r\n                if (b.vehicle === INV.MOUNT_BOAR && (__s | __w | __l | __d) === 1) {\r\n                    id = SPRITE.BOAR_STEP;\r\n                    var footAngle = b.vehicle_fx2 - Math.PI / 2;\r\n                    var footDist = 15;\r\n                    var footDist2 = 11;\r\n                    var step_space = SPRITE.STEP_SPACE;\r\n                } else if (b.vehicle === INV.BABY_MAMMOTH && (__s | __w | __l | __d) === 1) {\r\n                    id = SPRITE.BABY_MAMMOTH_STEP;\r\n                    var footAngle = b.vehicle_fx2 - Math.PI / 2;\r\n                    var footDist = 21;\r\n                    var footDist2 = 16;\r\n                    var step_space = SPRITE.STEP_SPACE;\r\n                } else if (b.vehicle === INV.CRAB_BOSS && (__s | __w | __l | __d) === 1) {\r\n                    id = SPRITE.CRAB_STEP;\r\n                    var footAngle = b.vehicle_fx2 - Math.PI / 2;\r\n                    var footRand = Math.random() * 50;\r\n                    var footDist = 10 + footRand;\r\n                    var footDist2 = 0 + footRand;\r\n                    var step_space = SPRITE.STEP_SPACE * 0.9;\r\n                } else {\r\n                    var footAngle = b.angle;\r\n                    var footDist = 15;\r\n                    var footDist2 = 11;\r\n                    var step_space = SPRITE.STEP_SPACE;\r\n                }\r\n                if (b.vehicle === INV.BABY_DRAGON || b.vehicle === INV.BABY_LAVA || b.vehicle === INV.NIMBUS || b.vehicle === INV.HAWK || b.vehicle === INV.PLANE || b.ghost) ; else if (b.vehicle === INV.SLED) {\r\n                    if (l === 0 || Utils.dist(foot[l - 1], b) > SPRITE.TRAIL_SPACE) foot.push({x: b.x, y: b.y, angle: b.vehicle_fx2, alpha: 1, id: SPRITE.SLED_WAVE});\r\n                } else if (id != -1 && has_swim === 0) {\r\n                    if (l === 0 || Utils.dist(foot[l - 1], b) > step_space) {\r\n                        b.id_foot++;\r\n                        if (Math.abs(b.x - b.r.x) > 1 && Math.abs(b.y - b.r.y) > 1) {\r\n                            if (b.r.x > b.x && b.r.y < b.y || b.r.x < b.x && b.r.y > b.y) {\r\n                                if (b.id_foot % 2) {\r\n                                    var x = -footDist2 * scale;\r\n                                    var y = -footDist2 * scale;\r\n                                } else {\r\n                                    var y = footDist2 * scale;\r\n                                    var x = footDist2 * scale;\r\n                                }\r\n                            } else {\r\n                                if (b.id_foot % 2) {\r\n                                    var x = footDist2 * scale;\r\n                                    var y = -footDist2 * scale;\r\n                                } else {\r\n                                    var y = footDist2 * scale;\r\n                                    var x = -footDist2 * scale;\r\n                                }\r\n                            }\r\n                        } else if (b.id_foot % 2) {\r\n                            var x = Math.sin(footAngle) * footDist * scale;\r\n                            var y = Math.cos(footAngle) * footDist * scale;\r\n                        } else {\r\n                            var x = -Math.sin(footAngle) * footDist * scale;\r\n                            var y = -Math.cos(footAngle) * footDist * scale;\r\n                        }\r\n                        foot.push({x: b.x + x, y: b.y + y, angle: footAngle + Math.PI / 2, alpha: 1, id: id});\r\n                    }\r\n                }\r\n                for (var j = 0; j < l; j++) {\r\n                    if (foot[j].id === SPRITE.SLED_WAVE) foot[j].alpha = Math.max(0, foot[j].alpha - delta * 1.5); else foot[j].alpha = Math.max(0, foot[j].alpha - delta / 2.85);\r\n                }\r\n                if (foot.length > 0 && foot[0].alpha === 0) foot.splice(0, 1);\r\n            }\r\n        }\r\n    };\r\n    this.update = function () {\r\n        this.move_units(this.units[ITEMS.PLAYERS]);\r\n        this.move_units(this.units[ITEMS.RABBIT]);\r\n        this.move_units(this.units[ITEMS.WOLF]);\r\n        this.move_units(this.units[ITEMS.CRAB]);\r\n        this.move_units(this.units[ITEMS.BOAR]);\r\n        this.move_units(this.units[ITEMS.BABY_MAMMOTH]);\r\n        this.move_units(this.units[ITEMS.CRAB_BOSS]);\r\n        this.move_units(this.units[ITEMS.BABY_DRAGON]);\r\n        this.move_units(this.units[ITEMS.BABY_LAVA]);\r\n        this.move_units(this.units[ITEMS.HAWK]);\r\n        this.move_units(this.units[ITEMS.SPIDER]);\r\n        this.move_units(this.units[ITEMS.FOX]);\r\n        this.move_units(this.units[ITEMS.PENGUIN]);\r\n        this.move_units(this.units[ITEMS.SPELL]);\r\n        this.move_units(this.units[ITEMS.FIREFLY]);\r\n        this.move_units(this.units[ITEMS.BEAR]);\r\n        this.move_units(this.units[ITEMS.MAMMOTH]);\r\n        this.move_units(this.units[ITEMS.VULTURE]);\r\n        this.move_units(this.units[ITEMS.SAND_WORM]);\r\n        this.move_units(this.units[ITEMS.DRAGON]);\r\n        this.move_units(this.units[ITEMS.FLAME]);\r\n        this.move_units(this.units[ITEMS.PIRANHA]);\r\n        this.move_units(this.units[ITEMS.KRAKEN]);\r\n        this.move_units(this.units[ITEMS.LAVA_DRAGON]);\r\n    };\r\n    this.breath = [];\r\n    this.breath[SPRITE.LAKE] = new Utils.LinearAnimation(false, 1, 1.05, 1, 0.008, 0.008);\r\n    this.breath[SPRITE.LAKE_DEEP] = new Utils.LinearAnimation(false, 1, 1.08, 1, 0.006, 0.006);\r\n    this.breath[SPRITE.WAVE_ONE] = new Utils.LinearAnimation(false, 1, 1.02, 1, 0.008, 0.008);\r\n    this.breath[SPRITE.WAVE_TWO] = new Utils.LinearAnimation(false, 1, 1.08, 1, 0.006, 0.006);\r\n    this.lava = [];\r\n    this.lava[0] = new Utils.LinearAnimation(false, 0.1, 1, 0, 0.6, 0.6);\r\n    this.lava[1] = new Utils.LinearAnimation(false, 0.4, 1, 0, 0.6, 0.6);\r\n    this.lava[2] = new Utils.LinearAnimation(false, 0.3, 1, 0, 0.6, 0.6);\r\n    this.lava[3] = new Utils.LinearAnimation(false, 0.8, 1, 0, 0.6, 0.6);\r\n    this.lava[4] = new Utils.LinearAnimation(false, 0.3, 1, 0, 0.6, 0.6);\r\n    this.lava[5] = new Utils.LinearAnimation(false, 0.8, 1, 0, 0.6, 0.6);\r\n    this.lava[6] = new Utils.LinearAnimation(false, 0.5, 1, 0, 0.6, 0.6);\r\n    this.lava[7] = new Utils.LinearAnimation(false, 0.9, 1, 0, 0.6, 0.6);\r\n    this.lava[8] = new Utils.LinearAnimation(false, 0.6, 1, 0, 0.6, 0.6);\r\n    this.lava[9] = new Utils.LinearAnimation(false, 0.2, 1, 0, 0.6, 0.6);\r\n    this.lava[10] = new Utils.LinearAnimation(false, 0.6, 1, 0, 0.6, 0.6);\r\n    this.lava[11] = new Utils.LinearAnimation(false, 0.4, 1, 0, 0.6, 0.6);\r\n    this.lava[12] = new Utils.LinearAnimation(false, 0.8, 1, 0, 0.6, 0.6);\r\n    this.lava[13] = new Utils.LinearAnimation(false, 0.2, 1, 0, 0.6, 0.6);\r\n    this.lava[14] = new Utils.LinearAnimation(false, 0.7, 1, 0, 0.6, 0.6);\r\n}\r\n;\r\nfunction Flakes(id, x, y, angle) {\r\n    this.id = id;\r\n    this.speed = (id + 5) * 8;\r\n    this.life = canw / 1366;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.c = Math.cos(angle);\r\n    this.s = Math.sin(angle);\r\n    this.alpha = 0;\r\n}\r\n;\r\n;\r\nmycyph1 = 1;\r\nfunction User() {\r\n    this.init = function () {};\r\n    this.resurrection = {pid: 1, iid: 1, open: false};\r\n    this.well = {pid: 1, iid: -1, open: false};\r\n    this.windmill = {amount_wheat: 0, amount_flour: 0, pid: 1, iid: -1, open: false};\r\n    this.extractor = {amount_wood: 0, amount_mineral: 0, type: 0, mineral: 0, pid: 1, iid: -1, open: false};\r\n    this.bread_oven = {amount_wood: 0, amount_bread: 0, amount_flour: 0, pid: 1, iid: -1, open: false};\r\n    this.sign = {iid: -1, open: false};\r\n    this.furnace = {amount: 0, pid: 1, iid: -1, open: false};\r\n    this.ghost = {enabled: false, delay: -1, label: false, now: -1, draw: draw_alert_ghost};\r\n    this.chest = {id: -1, amount: 0, pid: 1, iid: -1, open: false, lock: false, locked: false, lockpick: false, padlock: false};\r\n    this.alive = true;\r\n    this.reconnect = {enabled: false, rotate: 0};\r\n    this.key = Utils.gup(\"key\", window.location.href);\r\n    var egg = Utils.gup(\"egg\", window.location.href);\r\n    if (egg) ui.skin = parseInt(egg);\r\n    this.beta = 0 === window.location.href.indexOf(\"http://starve.io/beta\") ? 1 : 0;\r\n    if (this.key && this.beta) {\r\n        Cookies.set(\"starve_beta\", this.key);\r\n    } else if (this.beta) this.key = Cookies.get(\"starve_beta\");\r\n    this.token = Cookies.get(\"starve_token\") ? Cookies.get(\"starve_token\") : Utils.generate_token(CLIENT.TOKEN_LEN);\r\n    window.baguette();\r\n    var __token = window.kot2;\r\n    this.token = __token.substring(0, 6) + this.token.substring(6);\r\n    this.token_id = Cookies.get(\"starve_token_id\") ? Cookies.get(\"starve_token_id\") : \"\";\r\n    this.id = 0;\r\n    this.uid = 0;\r\n    this.day = 0;\r\n    this.die = {howdie: \"\", score: 0, bank: 0, kill: 0};\r\n    this.account = {connected: 0, last: (new Date).getTime()};\r\n    this.team = [];\r\n    this.in_team = function (id) {\r\n        for (var i = 0; i < this.team.length; i++) {\r\n            if (this.team[i] == id) return true;\r\n        }\r\n        return false;\r\n    };\r\n    this.shop = {delay: 0, time: 0, value: 0, open: false, draw: function () {\r\n            if (this.open) {\r\n                var now = (new Date).getTime();\r\n                this.time = Math.floor((now - this.delay) / 1e3);\r\n                if (this.time < 60) {\r\n                    game.shop.button.draw(ctx);\r\n                } else {\r\n                    document.getElementById(\"shop_starterkit\").style.display = \"none\";\r\n                    this.open = false;\r\n                }\r\n            }\r\n        }};\r\n    this.totem = {id: -1, pid: -1, lock: 0, timeout: new Utils.LinearAnimation(false, 0, 1, 0, 0.03333333333333333, 1), wait: false};\r\n    this.helmet = {timeout: new Utils.LinearAnimation(false, 0, 1, 0, 0.2, 1), wait: false};\r\n    this.build = {timeout: new Utils.LinearAnimation(false, 0, 1, 0, 1, 1), wait: false};\r\n    this.weapon = {timeout: new Utils.LinearAnimation(false, 0, 1, 0, 0.1, 1), wait: false};\r\n    this.cam = new Utils.Ease2d(Utils.ease_out_quad, 0, 0.4, 0, 0, canw2, canh2, canw2, canh2);\r\n    this.cam.delay = 0;\r\n    this.cam.forcedDelay = 0;\r\n    this.cam.update = function () {\r\n        if (this.forcedDelay > 0) {\r\n            this.forcedDelay -= delta;\r\n            return;\r\n        }\r\n        var p = world.fast_units[user.uid];\r\n        if (p) {\r\n            this.delay = 0;\r\n            var x = Math.max(Math.min(canw2 - p.x, -2), -world.w + 2 + canw);\r\n            var y = Math.max(Math.min(canh2 - p.y, -2), -world.h + 2 + canh);\r\n            this.ease({x: x, y: y});\r\n        } else {\r\n            this.delay += delta;\r\n            if (this.delay > 3) {\r\n                this.delay = 0;\r\n                if (!user.reconnect.enabled) client.get_focus();\r\n            }\r\n        }\r\n    };\r\n    this.cam.w = screen.width;\r\n    this.cam.h = screen.height;\r\n    this.cam.rw = this.cam.w;\r\n    this.cam.rh = this.cam.h;\r\n    this.cam.rx = 0;\r\n    this.cam.ry = 0;\r\n    this.cam.rdw = 0;\r\n    this.cam.rdh = 0;\r\n    this.cam.change = function (x, y) {\r\n        this.x = -Math.min(Math.max(-world.dw * 2, x - world.dw - this.rw / 2), world.w - this.rw);\r\n        this.y = -Math.min(Math.max(-world.dh * 2, y - (world.dh + this.rh) / 2), world.h - this.rh + world.dh);\r\n        this.ex = this.x;\r\n        this.ey = this.y;\r\n    };\r\n    this.control = {angle: 0, timeout: 0, previous: 0, mouse: 0, attack: 0, update: function () {\r\n            var p = world.fast_units[user.uid];\r\n            if (p) var pos = {x: user.cam.x + p.x, y: user.cam.y + p.y}; else var pos = canm;\r\n            var angle = Utils.get_std_angle(mouse.pos, pos);\r\n            var attacked = false;\r\n            this.mouse += delta;\r\n            if (!mouse.state) {\r\n                if (p && !(p.action & STATE.ATTACK) && this.mouse > CLIENT.ATTACK) {\r\n                    this.attack = 1;\r\n                    attacked = true;\r\n                    this.mouse = 0;\r\n                    client.send_attack(angle);\r\n                }\r\n            }\r\n            if (p) {\r\n                p.angle = angle;\r\n                p.nangle = angle;\r\n            }\r\n            if (!attacked) {\r\n                this.timeout += delta;\r\n                if (this.timeout > CLIENT.ROTATE) {\r\n                    this.timeout = 0;\r\n                    if (Math.abs(this.angle - angle) > 0.005) {\r\n                        client.send_angle(angle);\r\n                        this.angle = angle;\r\n                    }\r\n                }\r\n            }\r\n            if (user.chat.open) return;\r\n            if (user.terminal.open) return;\r\n            var update = false;\r\n            var move = 0;\r\n            var left = keyboard.is_left();\r\n            if (left) move |= 1;\r\n            var right = keyboard.is_right();\r\n            if (right) move |= 2;\r\n            var bottom = keyboard.is_bottom();\r\n            if (bottom) move |= 4;\r\n            var top = keyboard.is_top();\r\n            if (top) move |= 8;\r\n            if (this.previous != move) client.send_move(move);\r\n            this.previous = move;\r\n        }};\r\n    this.gauges = {c: 1, l: 1, h: 1, t: 1, o: 1, wa: 1, warn_cold: new Utils.LinearAnimation(true, 0, 1, 0, 3, 3), warn_life: new Utils.LinearAnimation(true, 0, 1, 0, 2, 2), warn_hunger: new Utils.LinearAnimation(true, 0, 1, 0, 3, 3), warn_thirst: new Utils.LinearAnimation(true, 0, 1, 0, 3, 3), warn_oxygen: new Utils.LinearAnimation(true, 0, 1, 0, 3, 3), warn_warm: new Utils.LinearAnimation(true, 0, 1, 0, 3, 3), cold: new Utils.Ease(Utils.ease_out_quad, 0, 1, 0, 0, 1), life: new Utils.Ease(Utils.ease_out_quad, 0, 1, 0, 0, 1), hunger: new Utils.Ease(Utils.ease_out_quad, 0, 1, 0, 0, 1), thirst: new Utils.Ease(Utils.ease_out_quad, 0, 1, 0, 0, 1), oxygen: new Utils.Ease(Utils.ease_out_quad, 0, 1, 0, 0, 1), warm: new Utils.Ease(Utils.ease_out_quad, 0, 1, 0, 0, 1), update: function () {\r\n            this.warn_cold.update();\r\n            this.warn_life.update();\r\n            this.warn_hunger.update();\r\n            this.warn_thirst.update();\r\n            this.warn_oxygen.update();\r\n            this.warn_warm.update();\r\n            this.cold.ease(this.c);\r\n            this.life.ease(this.l);\r\n            this.hunger.ease(this.h);\r\n            this.thirst.ease(this.t);\r\n            this.oxygen.ease(this.o);\r\n            this.warm.ease(this.wa);\r\n        }};\r\n    this.bigmap = false;\r\n    this.spectator = false;\r\n    this.zombie = false;\r\n    this.vampire = false;\r\n    this.inv = {max: WORLD.WITHOUT_BAG, bonus: 0, bag: 0, n: [], can_select: [], update_bag_size: function (_bag, _bonus) {\r\n            if (_bag === 1) this.bag = WORLD.BAG_SIZE;\r\n            this.bonus += _bonus;\r\n            this.max = WORLD.WITHOUT_BAG + this.bonus + this.bag;\r\n        }, drag: {item: -1, img: null, _start: 0, _move: 0, _x: -1, _y: -1, move: function (mouse) {\r\n                if (this._start && (mouse.x !== this._x || mouse.y !== this._y)) this._move = 1;\r\n            }, start: function (item, mouse) {\r\n                this._x = mouse.x;\r\n                this._y = mouse.y;\r\n                this.item = item;\r\n                this.img = user.inv.can_select[item].info.img[2];\r\n                this._start = 1;\r\n            }, stop: function () {\r\n                this._start = 0;\r\n                this._move = 0;\r\n                this._x = -1;\r\n                this._y = -1;\r\n            }, release: function () {\r\n                var item = -1;\r\n                var buttons = user.inv.can_select;\r\n                var ret = 0;\r\n                if (this._start && this._move) {\r\n                    for (var i = 0; i < buttons.length; i++) {\r\n                        if (buttons[i].info.state === BUTTON_IN) {\r\n                            item = i;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (item !== -1 && item !== this.item && buttons[this.item]) {\r\n                        ret = 1;\r\n                        var tmp = buttons[item];\r\n                        buttons[item] = buttons[this.item];\r\n                        buttons[this.item] = tmp;\r\n                        game.update_inv_buttons();\r\n                    }\r\n                }\r\n                this.stop();\r\n                return ret;\r\n            }, draw: function (x, y) {\r\n                if (!this._start || !this._move) return;\r\n                ctxDrawImage(ctx, this.img, Math.floor(x - this.img.width / 2), Math.floor(y - this.img.height / 2));\r\n            }}, free_place: function (r) {\r\n            for (i = 0; i < r.length; i++) {\r\n                if (this.n[r[i][0]] == r[i][1]) return true;\r\n            }\r\n            return false;\r\n        }, find_item: function (id) {\r\n            for (var i = 0; i < this.can_select.length; i++) {\r\n                if (this.can_select[i].id == id) return i;\r\n            }\r\n            return -1;\r\n        }, delete_item: function (id, i) {\r\n            this.n[id] = 0;\r\n            this.can_select.splice(i, 1);\r\n            game.update_inv_buttons();\r\n        }, decrease: function (id, n, i) {\r\n            update = true;\r\n            this.n[id] = Math.max(0, this.n[id] - n);\r\n            if (!this.n[id] && i >= 0) this.delete_item(id, i);\r\n        }};\r\n    this.show_spectators = {enabled: false, translate: {x: 0, y: 0}, invert: function () {\r\n            if (world.mode != WORLD.MODE_HUNGER_GAMES || user.spectator) return;\r\n            user.show_spectators.enabled = !user.show_spectators.enabled;\r\n            if (user.show_spectators.enabled) game.options.spectator_agree.display = \"inline-block\"; else game.options.spectator_agree.display = \"none\";\r\n        }};\r\n    game.options.spectator_agree.display = \"none\";\r\n    this.auto_feed = {enabled: false, translate: {x: 0, y: 0}, delay: 0, invert: function () {\r\n            user.auto_feed.enabled = !user.auto_feed.enabled;\r\n            if (user.auto_feed.enabled) game.options.feed_agree.display = \"inline-block\"; else game.options.feed_agree.display = \"none\";\r\n        }, update: function () {\r\n            if (!this.enabled || user.craft.id >= 0 || game.safe_delete.open) return;\r\n            this.delay += delta;\r\n            if (this.delay > 2) {\r\n                this.delay = 0;\r\n                if (user.gauges.h < 0.35) {\r\n                    if (user.inv.n[INV.PLANT]) client.select_inv(INV.PLANT, user.inv.find_item(INV.PLANT)); else if (user.inv.n[INV.GARLIC]) client.select_inv(INV.GARLIC, user.inv.find_item(INV.GARLIC)); else if (user.inv.n[INV.CRAB_STICK]) client.select_inv(INV.CRAB_STICK, user.inv.find_item(INV.CRAB_STICK)); else if (user.inv.n[INV.PUMPKIN]) client.select_inv(INV.PUMPKIN, user.inv.find_item(INV.PUMPKIN)); else if (user.inv.n[INV.TOMATO]) client.select_inv(INV.TOMATO, user.inv.find_item(INV.TOMATO)); else if (user.inv.n[INV.CARROT]) client.select_inv(INV.CARROT, user.inv.find_item(INV.CARROT)); else if (user.inv.n[INV.WATERMELON]) client.select_inv(INV.WATERMELON, user.inv.find_item(INV.WATERMELON)); else if (user.inv.n[INV.BREAD]) client.select_inv(INV.BREAD, user.inv.find_item(INV.BREAD)); else if (user.inv.n[INV.COOKED_MEAT]) client.select_inv(INV.COOKED_MEAT, user.inv.find_item(INV.COOKED_MEAT)); else if (user.inv.n[INV.FOODFISH_COOKED]) client.select_inv(INV.FOODFISH_COOKED, user.inv.find_item(INV.FOODFISH_COOKED)); else if (user.inv.n[INV.COOKIE]) client.select_inv(INV.COOKIE, user.inv.find_item(INV.COOKIE)); else if (user.inv.n[INV.SANDWICH]) client.select_inv(INV.SANDWICH, user.inv.find_item(INV.SANDWICH)); else if (user.inv.n[INV.CAKE]) client.select_inv(INV.CAKE, user.inv.find_item(INV.CAKE)); else if (user.inv.n[INV.CRAB_LOOT]) client.select_inv(INV.CRAB_LOOT, user.inv.find_item(INV.CRAB_LOOT));\r\n                } else if (user.gauges.t < 0.35) {\r\n                    if (user.inv.n[INV.BOTTLE_FULL]) client.select_inv(INV.BOTTLE_FULL, user.inv.find_item(INV.BOTTLE_FULL));\r\n                }\r\n            }\r\n        }};\r\n    game.options.feed_agree.display = \"none\";\r\n    this.craft = {id: -1, id2: -1, timeout: new Utils.LinearAnimation(false, 0, 1, 0, 1, 1), crafting: false, preview: -1, mode: 0, label: [], can_craft: [], workbench: false, fire: false, water: false, well: false, change_mode: function () {\r\n            this.mode = this.mode === 0 ? 1 : 0;\r\n        }, set_workbench: function (val) {\r\n            this.workbench = val;\r\n            var safe = game.safe_delete;\r\n            if (safe.open) safe.del(safe.button);\r\n            this.update();\r\n        }, do_recycle: function (id) {\r\n            var r = RECIPES[id];\r\n            this.id = id;\r\n            this.crafting = true;\r\n            var p = world.fast_units[user.uid];\r\n            this.timeout.max_speed = r.time * 8;\r\n            this.id2 = r.id2;\r\n        }, do_craft: function (id) {\r\n            var r = RECIPES[id];\r\n            this.id = id;\r\n            this.crafting = true;\r\n            var p = world.fast_units[user.uid];\r\n            if (p && p.right == INV.BOOK) this.timeout.max_speed = r.time * 3; else this.timeout.max_speed = r.time;\r\n            this.id2 = r.id2;\r\n            for (var i = 0; i < r.r.length; i++) {\r\n                var o = r.r[i];\r\n                user.inv.decrease(o[0], o[1], user.inv.find_item(o[0]));\r\n            }\r\n            game.update_inv_buttons();\r\n        }, update: function () {\r\n            this.can_craft = [];\r\n            if (game.info_box.craft === 1) game.info_box.display = 0;\r\n            for (var k in RECIPES) {\r\n                var r = RECIPES[k];\r\n                var can_craft = true;\r\n                if (!r.r) continue;\r\n                for (var i = 0; i < r.r.length; i++) {\r\n                    if (user.inv.max >= WORLD.WITH_BAG && r.id === CRAFT.BAG) {\r\n                        can_craft = false;\r\n                        break;\r\n                    }\r\n                    if (r.w > this.workbench || r.f > this.fire || r.o > this.water || r.e > this.well) {\r\n                        can_craft = false;\r\n                        break;\r\n                    }\r\n                    var o = r.r[i];\r\n                    if (!user.inv.n[o[0]] || user.inv.n[o[0]] < o[1]) {\r\n                        can_craft = false;\r\n                        break;\r\n                    }\r\n                }\r\n                if (can_craft) this.can_craft.push(game.craft_buttons[r.id]);\r\n            }\r\n            game.update_craft_buttons();\r\n            game.update_chest_buttons();\r\n            game.update_furnace_button();\r\n            game.update_windmill_button();\r\n            game.update_extractor_button();\r\n            game.update_bread_oven_button();\r\n            game.sign.update_button();\r\n        }, restart: function () {\r\n            this.id = -1;\r\n            this.crafting = false;\r\n            this.timeout.v = 0;\r\n            this.timeout.o = false;\r\n            this.update();\r\n        }};\r\n    this.welcome = {message: undefined, draw: draw_welcome_message};\r\n    this.alert = {timeout: new Utils.LinearAnimation(false, 1, 1, 0, 4, 0.3), text: \"\", label: null, draw: draw_alert, list: []};\r\n    this.ldb = {can: document.createElement(\"canvas\"), ids: [], update: true, translate: {x: 0, y: 0}, sort: function () {\r\n            var sortable = [];\r\n            var players = world.players;\r\n            for (var i = 0; i < players.length; i++) {\r\n                if (players[i].alive) sortable.push({id: i, s: players[i].score});\r\n            }\r\n            sortable.sort(function (a, b) {\r\n                return b.s - a.s;\r\n            });\r\n            this.ids = [];\r\n            for (var i = 0; i < sortable.length && i < 10; i++) this.ids.push(sortable[i].id);\r\n            this.update = true;\r\n        }, init: function (u) {\r\n            var players = world.players;\r\n            for (var i = 0; i < players.length; i++) players[i].score = 0;\r\n            players[user.id].score = Utils.restore_number(u[1]);\r\n            this.ids = [];\r\n            for (var i = 2; i < u.length; i += 2) {\r\n                this.ids.push(u[i]);\r\n                players[u[i]].score = Utils.restore_number(u[i + 1]);\r\n            }\r\n            this.update = true;\r\n        }};\r\n    this.ldb.can.width = 180 * scale;\r\n    this.ldb.can.height = 300 * scale;\r\n    this.ldb.ctx = this.ldb.can.getContext(\"2d\");\r\n    this.terminal = {open: false, input: document.getElementById(\"commandInput\"), contentBox: document.getElementById(\"commandsBox\"), style: document.getElementById(\"commandMainBox\").style, _print: function (d) {\r\n            this.contentBox.innerHTML += d;\r\n        }, update: function () {\r\n            this.style.left = Math.floor(canw / 2 - 300) + \"px\";\r\n            this.style.top = Math.floor(canh / 2 - 250) + \"px\";\r\n        }, _clean: function () {\r\n            this.contentBox.innerHTML = \"\";\r\n        }, quit: function () {\r\n            this.open = false;\r\n            this.style.display = \"none\";\r\n        }, create_array: function (datas) {\r\n            var content = '<table class=\"tableList\">';\r\n            for (var i = 0; i < datas.length; i++) {\r\n                if (i % 3 === 0) content += \"<tr>\";\r\n                content += '<td class=\"tableList\">' + datas[i] + \"</td>\";\r\n                if ((i + 1) % 3 === 0 || i + 1 === datas.length) content += \"</tr>\";\r\n            }\r\n            content += \"</table>\";\r\n            return content;\r\n        }, write_command: function (cmd, isSucceed, answer, content) {\r\n            cmd = !cmd ? \"\" : cmd;\r\n            isSucceed = !isSucceed ? \"\" : isSucceed;\r\n            answer = !answer ? \"\" : answer;\r\n            content = !content ? \"\" : content;\r\n            var data = \"<div class=commandWritten>\" + cmd;\r\n            if (isSucceed) data += \"<div class=commandValidated>\"; else data += \"<div class=commandUnknown>\";\r\n            data += answer + \"</div>\" + content + \"</div>\";\r\n            this._print(data);\r\n            this.scroll_down();\r\n        }, scroll_down: function () {\r\n            this.contentBox.scrollTop = this.contentBox.scrollHeight;\r\n            return;\r\n        }, commands: function (msg) {\r\n            switch (msg) {\r\n                case \"clean\":\r\n                    this._clean();\r\n                    return true;\r\n                    break;\r\n                case \"list\":\r\n                    var list = \"\";\r\n                    var players = world.players;\r\n                    for (var i = 0; i < players.length; i++) {\r\n                        var player = players[i];\r\n                        if (player.alive) {\r\n                            list += player.nickname + ' <span style=\"color:green\">#' + i + \"</span><br />\";\r\n                        }\r\n                    }\r\n                    this.write_command(\"list\", 1, \"List all connected players\", list);\r\n                    return true;\r\n                    break;\r\n                case \"weapon-list\":\r\n                    this.write_command(\"Weapons\", 1, \"List all weapons in the game\", this.create_array([\"sword_wood\", \"sword\", \"sword_gold\", \"sword_diamond\", \"sword_amethyst\", \"sword_reidite\", \"dragon_sword\", \"lava_sword\", \"sword_pirate\", \"wood_spear\", \"spear\", \"gold_spear\", \"diamond_spear\", \"amethyst_spear\", \"reidite_spear\", \"dragon_spear\", \"lava_spear\", \"crab_spear\", \"wood_bow\", \"wood_arrow\"]));\r\n                    return true;\r\n                    break;\r\n                case \"tool-list\":\r\n                    this.write_command(\"Tools\", 1, \"List all tools in the game\", this.create_array([\"pick_wood\", \"pick\", \"pick_gold\", \"pick_diamond\", \"pick_amethyst\", \"pick_reidite\", \"hammer\", \"hammer_gold\", \"hammer_diamond\", \"hammer_amethyst\", \"hammer_reidite\", \"super_hammer\", \"shovel\", \"shovel_gold\", \"shovel_diamond\", \"shovel_amethyst\", \"pitchfork\", \"pitchfork2\", \"spanner\", \"book\"]));\r\n                    return true;\r\n                    break;\r\n                case \"survival-list\":\r\n                    this.write_command(\"Survival Items\", 1, \"List all survival items in the game\", this.create_array([\"fire\", \"workbench\", \"bandage\", \"big_fire\", \"furnace\", \"paper\", \"blue_cord\", \"lock\", \"lockpick\", \"totem\", \"resurrection\", \"bridge\", \"bottle_full\", \"bottle_empty\", \"watering_can\", \"watering_can_full\", \"windmill\", \"plot\", \"bread_oven\", \"chest\", \"bucket_empty\", \"bucket_full\", \"well\", \"sign\", \"roof\", \"bed\", \"boat\", \"sled\", \"boar\", \"saddle\", \"emerald_machine\", \"extractor_stone\", \"extractor_gold\", \"extractor_diamond\", \"extractor_amethyst\", \"extractor_reidite_button\"]));\r\n                    return true;\r\n                    break;\r\n                case \"resource-list\":\r\n                    this.write_command(\"Resources\", 1, \"List all resources in the game\", this.create_array([\"wood\", \"stone\", \"gold\", \"diamond\", \"amethyst\", \"reidite\", \"fur\", \"fur_wolf\", \"fur_winter\", \"cord\", \"scales\", \"penguin_feather\", \"flame\", \"sand\", \"ground\", \"ice\", \"dragon_heart\", \"lava_heart\", \"kraken_skin\", \"special_fur\", \"special_fur_2\", \"gemme_green\", \"gemme_orange\", \"gemme_blue\", \"dragon_cube\", \"dragon_orb\", \"lava_cube\", \"lava_orb\", \"fur_boar\", \"pitchfork_part\", \"pilot_glasses\", \"fur_mammoth\"]));\r\n                    return true;\r\n                    break;\r\n                case \"food-list\":\r\n                    this.write_command(\"Food\", 1, \"List all food in the game\", this.create_array([\"plant\", \"seed\", \"meat\", \"cooked_meat\", \"flour\", \"wheat_seed\", \"cookies\", \"wild_wheat\", \"cake\", \"fish\", \"cooked_fish\", \"bread\", \"sandwich\", \"pumpkin_seed\", \"pumpkin\", \"garlic_seed\", \"garlic\", \"thornbush_seed\", \"thornbush\", \"crab_stick\", \"claw\", \"carrot_seed\", \"carrot\", \"tomato_seed\", \"tomato\", \"watermelon_seed\", \"watermelon\", \"aloe_vera_seed\", \"aloe_vera\", \"cactus\"]));\r\n                    return true;\r\n                    break;\r\n                case \"hat-list\":\r\n                    this.write_command(\"Hats\", 1, \"List all hats in the game\", this.create_array([\"earmuffs\", \"coat\", \"scarf\", \"fur_hat\", \"warm_protection\", \"warm_protection2\", \"warm_protection3\", \"explorer_hat\", \"pirate_hat\", \"wood_helmet\", \"stone_helmet\", \"gold_helmet\", \"diamond_helmet\", \"amethyst_helmet\", \"reidite_helmet\", \"dragon_helmet\", \"lava_helmet\", \"crab_helmet\", \"diving_mask\", \"super_diving_suit\", \"crown_green\", \"crown_orange\", \"crown_blue\", \"hood\", \"peasant\", \"winter_hood\", \"winter_peasant\", \"bag\", \"turban1\", \"turban2\", \"pilot_hat\"]));\r\n                    return true;\r\n                    break;\r\n                case \"building-list\":\r\n                    this.write_command(\"Buildings\", 1, \"List all buildings in the game\", this.create_array([\"wall\", \"stone_wall\", \"gold_wall\", \"diamond_wall\", \"amethyst_wall\", \"reidite_wall\", \"spike\", \"stone_spike\", \"gold_spike\", \"diamond_spike\", \"amethyst_spike\", \"reidite_spike\", \"wood_door\", \"stone_door\", \"gold_door\", \"diamond_door\", \"amethyst_door\", \"reidite_door\", \"wood_spike_door\", \"stone_spike_door\", \"gold_spike_door\", \"diamond_spike_door\", \"amethyst_spike_door\", \"reidite_spike_door\"]));\r\n                    return true;\r\n                    break;\r\n                case \"biome-list\":\r\n                    this.write_command(\"Biomes list\", 1, \"List all available biomes in the game\", this.create_array([\"forest\", \"winter\", \"lava\", \"sea\", \"beach\", \"island\", \"dragon\"]));\r\n                    return true;\r\n                    break;\r\n                case \"help-config\":\r\n                    this.write_command(\"Help Configuration\", 1, \"Learn how to build your customized map\", '<div class=\"specialCommandBox\">To get the current map configuration, and modify it, copy the result of <span class=\"commandSynthax\">get-config</span> in a text file and change every parameter you want.</div>To modify the settings, change a number to another with <span class=\"commandSynthax\">set-config</span></br>To modify the map, modify \"important\" section (at the end)<div class=\"infoCommand\">The minimum size of the map is 50x50.</div>\"custom_map\" is used to change the biomes and is written like this :<div class=\"commandSynthax\" style=\"font-size:17px;\">\"custom_map\":[[\"biome\",width,height],...,[\"biome\",width,height]]</div>Biomes are <span class=\"commandSynthax\">\"forest\"</span>, <span class=\"commandSynthax\">\"lava\"</span>, <span class=\"commandSynthax\">\"winter\"</span>, and <span class=\"commandSynthax\">\"dragon\"</span>.');\r\n                    return true;\r\n                    break;\r\n                case \"pos\":\r\n                    var players = world.units[ITEMS.PLAYERS];\r\n                    for (var i = 0; i < players.length; i++) {\r\n                        var p = players[i];\r\n                        if (p.pid === user.id) {\r\n                            this.write_command(\"pos\", 1, \"Your position is \" + Math.floor(p.x / 100) + \":\" + Math.floor(p.y / 100));\r\n                            return true;\r\n                        }\r\n                    }\r\n                    break;\r\n                case \"help-admin\":\r\n                    this.write_command(\"help-admin\", 1, \"List all available commands for admin only\", this.create_array([\"restart\", \"m | message\", \"mt | message-to\", \"w | welcome\", \"name\", \"password\", \"k | kick\", \"b | ban\", \"tp | teleport\", \"tpa | teleport-all\", \"tpt | teleport-to\", \"pos\", \"heal\", \"cancel-craft\", \"da | disable-attack\", \"pvp | disable-pvp\", \"dgs | disable-gather-score\", \"drs | disable-resource\", \"dms | disable-mob-safety\", \"ds | disable-shop\", \"dn | disable-nickname\", \"dch | disable-chat\", \"dq | disable-quest\", \"dd | disable-drop\", \"ddc | disable-drop-crate\", \"db | disable-crate\", \"dwg | disable-warm-gauge\", \"dk | disable-kit\", \"dc | disable-craft\", \"dr | disable-recycling\", \"disable-clock\", \"disable-recipes-book\", \"disable-market\", \"sb | spawn-building\", \"fsb | force-spawn-building\", \"sch | spawn-chest\", \"spawn-area\", \"spawn-area-team\", \"cl | clean-position\", \"cba | clean-building-all\", \"ci | clean-inventory\", \"cia | clean-inventory-all\", \"harvest\", \"gs | give-score\", \"gsa | give-score-all\", \"rs | reset-score\", \"rk | reset-kill\", \"gm | godmode\", \"instant-craft\", \"ka | kill-animals\", \"g | give\", \"ga | give-to-all\", \"ri | remove-item\", \"ria | remove-item-all\", \"spawn-location\", \"tm | team-mode\", \"default-nickname\", \"mm | murder-mode\", \"br | battle-royale\", \"help-config\", \"gc | get-config\", \"sc | set-config\", \"reset-config\", \"save-config\", \"reset-event-time\"]));\r\n                    return true;\r\n                    break;\r\n                case \"help\":\r\n                    this.write_command(\"help\", 1, \"List all available commands\", this.create_array([\"clean\", \"list\", \"pos\", \"help-admin\", \"help\", \"weapon-list\", \"tool-list\", \"survival-list\", \"resource-list\", \"food-list\", \"hat-list\", \"building-list\", \"biome-list\"]));\r\n                    return true;\r\n                    break;\r\n            }\r\n            return false;\r\n        }, _open: function () {\r\n            if (!this.open) {\r\n                this.open = true;\r\n                this.style.display = \"inline-block\";\r\n                this.input.focus();\r\n            }\r\n        }, _send: function () {\r\n            var msg = this.input.value;\r\n            if (msg && msg.length > 0) {\r\n                if (!this.commands(msg)) client.send_command(this.input.value);\r\n                this.input.value = \"\";\r\n            }\r\n        }};\r\n    this.chat = {open: false, input: document.getElementById(\"chat_input\"), style: document.getElementById(\"chat_block\").style, update: function () {\r\n            this.style.left = Math.floor(canw / 2 - 150) + \"px\";\r\n            this.style.top = Math.floor(canh / 2 + 80) + \"px\";\r\n        }, quit: function () {\r\n            this.open = false;\r\n            this.style.display = \"none\";\r\n            this.input.value = \"\";\r\n        }, prefix: \"!\", cmd: {hud: function (param) {\r\n                if (param === \"off\") {\r\n                    var msg = 'Enter \"!hud\" without the quotes to restore the HUD';\r\n                    if (!user.alert.text) user.alert.text = msg; else user.alert.list.push(msg);\r\n                    game.show_ui = 0;\r\n                } else game.show_ui = 1;\r\n            }}, commands: function (msg) {\r\n            if (msg.charAt(0) == this.prefix) {\r\n                var cmd = \"\";\r\n                var param = \"\";\r\n                for (var i = 1; i < msg.length && msg.charAt(i) != \" \"; i++) cmd += msg.charAt(i);\r\n                i++;\r\n                for (; i < msg.length; i++) param += msg.charAt(i);\r\n                var fun = this.cmd[cmd];\r\n                if (fun) fun(param);\r\n                return true;\r\n            } else return false;\r\n        }, run: function () {\r\n            if (!this.open) {\r\n                this.open = true;\r\n                this.style.display = \"inline-block\";\r\n                this.input.focus();\r\n            } else {\r\n                this.open = false;\r\n                this.style.display = \"none\";\r\n                var msg = this.input.value;\r\n                if (msg) {\r\n                    if (!this.commands(msg)) client.send_chat(this.input.value);\r\n                    this.input.value = \"\";\r\n                }\r\n            }\r\n        }};\r\n    this.ash = {flakes: [], update: function (f) {\r\n            f.y += delta * 80 * f.s;\r\n            f.x += delta * 80 * f.c;\r\n            f.life -= delta / 6;\r\n            if (f.life > 0.2) f.alpha = Math.min(f.alpha + delta * 3, 1); else f.alpha = Math.max(f.alpha - delta * 1, 0);\r\n        }, add: function (pos) {\r\n            var length = Math.floor(Math.min(SPRITE.ASHES_NUMBER * (canw / 1366), SPRITE.ASHES_NUMBER + 10) * Math.max(Math.min(world.dist_lava + 1e3, 3e3) / 3e3, 0));\r\n            if (this.flakes.length < length) {\r\n                var id = Math.floor(Math.random() * SPRITE.ASHES_SIZES);\r\n                var x = -user.cam.x + Math.floor(Math.random() * user.cam.w);\r\n                var y = -user.cam.y + Math.floor(Math.random() * user.cam.h);\r\n                var angle = Math.random(Math.PI);\r\n                this.flakes.push(new Flakes(id, x, y, angle));\r\n            }\r\n        }};\r\n    this.blizzard = 0;\r\n    this.bandage = 0;\r\n    this.desert = {flakes: [], tempest: 0, tempest_speed: 0, update: function (f) {\r\n            f.y += delta * (200 + 800 * this.tempest_speed) * f.s;\r\n            f.x += delta * (200 + 800 * this.tempest_speed) * f.c;\r\n            f.life -= delta / 6;\r\n            if (f.life > 0.2) f.alpha = Math.min(f.alpha + delta * 3, 1); else f.alpha = Math.max(f.alpha - delta * 1, 0);\r\n        }, add: function (pos) {\r\n            var length = Math.floor(Math.min((this.tempest_speed + 0.1) * SPRITE.SAND_NUMBER * (canw / 1366), (this.tempest_speed + 0.1) * SPRITE.SAND_NUMBER + 10) * Math.max(Math.min(world.dist_desert + 1e3, 3e3) / 3e3, 0));\r\n            if (this.flakes.length < length) {\r\n                var id = Math.floor(Math.random() * SPRITE.ASHES_SIZES);\r\n                var x = -user.cam.x + Math.floor(Math.random() * user.cam.w);\r\n                var y = -user.cam.y + Math.floor(Math.random() * user.cam.h);\r\n                var angle = Math.random(Math.PI);\r\n                if (user.desert.tempest !== 0) x -= user.cam.w / 2;\r\n                this.flakes.push(new Flakes(id, x, y, angle));\r\n            }\r\n        }};\r\n    this.winter = {flakes: [], tempest: 0, tempest_speed: 0, update: function (f) {\r\n            if (keyboard.is_bottom()) f.y += delta * f.speed * (5.5 + 10 * this.tempest_speed); else f.y += delta * f.speed * (5 + 10 * this.tempest_speed);\r\n            f.life -= delta / 2;\r\n            if (keyboard.is_left()) f.x += delta * (100 + 400 * this.tempest_speed); else if (keyboard.is_right()) f.x -= delta * (130 - 400 * this.tempest_speed); else f.x -= delta * (30 - 400 * this.tempest_speed);\r\n            if (f.life > 0.2) f.alpha = Math.min(f.alpha + delta * 3, 1); else f.alpha = Math.max(f.alpha - delta * 5, 0);\r\n        }, add: function (pos) {\r\n            var length = Math.floor(Math.min((this.tempest_speed * 1.5 + 0.5) * SPRITE.FLAKES_NUMBER * (canw / 1366), (this.tempest_speed * 1.5 + 0.5) * SPRITE.FLAKES_NUMBER + 10) * Math.max(Math.min(world.dist_winter + 1e3, 3e3) / 3e3, 0));\r\n            if (this.flakes.length < length) {\r\n                var id = Math.floor(Math.random() * SPRITE.FLAKES_SIZES);\r\n                var x = -user.cam.x + Math.floor(Math.random() * user.cam.w);\r\n                var y = -user.cam.y + Math.floor(Math.random() * 400 * scale - 200 * scale);\r\n                this.flakes.push(new Flakes(id, x, y, 0));\r\n            }\r\n        }};\r\n    function Beach() {\r\n        this.seed = 1;\r\n        this.seed2 = 2;\r\n        this.seed3 = 3;\r\n        this.seedv = 1;\r\n        this.seedv2 = 2;\r\n        this.seedv3 = 3;\r\n        this.new_seed = function (x) {\r\n            this.seed = 2 + Math.floor(Math.random() * WORLD.SEED);\r\n        };\r\n        this.new_seed2 = function (x) {\r\n            this.seed2 = 2 + Math.floor(Math.random() * WORLD.SEED);\r\n        };\r\n        this.new_seed3 = function (x) {\r\n            this.seed3 = 2 + Math.floor(Math.random() * WORLD.SEED);\r\n        };\r\n        this.new_seedv = function (x) {\r\n            this.seedv = 2 + Math.floor(Math.random() * WORLD.SEED);\r\n        };\r\n        this.new_seedv2 = function (x) {\r\n            this.seedv2 = 2 + Math.floor(Math.random() * WORLD.SEED);\r\n        };\r\n        this.new_seedv3 = function (x) {\r\n            this.seedv3 = 2 + Math.floor(Math.random() * WORLD.SEED);\r\n        };\r\n        this.draw_foam_vert = function (y, p, seed, r1, r2, _left, _right) {\r\n            for (var i = 1; i < _right;) {\r\n                var j = i * seed % RAND_SIZE;\r\n                var v = RANDOM[j];\r\n                if (v < 0.1) {\r\n                    r += 50;\r\n                    i += 50;\r\n                    continue;\r\n                }\r\n                var r = Math.floor(v * r1 + r2);\r\n                if (i > _left && i < _right) {\r\n                    var s = Math.random() > 0.5 ? -10 * delta : 10 * delta;\r\n                    var radius = r * p;\r\n                    this.bxv[j] = Math.max(-WORLD.FLOAM_X, Math.min(WORLD.FLOAM_X, this.bxv[j] + s));\r\n                    this.byv[j] = Math.max(-WORLD.FLOAM_Y, Math.min(WORLD.FLOAM_Y, this.byv[j] + s));\r\n                    if (radius > 0) {\r\n                        ctx.beginPath();\r\n                        ctx.arc(i + user.cam.x + this.byv[j], y + this.bxv[j] - WORLD.FLOAM_X * 0.8, radius, 0, Math.PI * 2);\r\n                        if (world.transition) {\r\n                            var shade = world.time ? 1 - world.shade.v : world.shade.v;\r\n                            ctx.fillStyle = get_color_transition(83, 156, 160, 236, 247, 249, shade);\r\n                        } else ctx.fillStyle = SPRITE.FLOAM_COLOR[world.time];\r\n                        ctx.fill();\r\n                    }\r\n                }\r\n                i += 2 * r;\r\n            }\r\n        };\r\n        this.draw_foam = function (x, p, seed, r1, r2, _top, _bottom) {\r\n            for (var i = 1; i < _bottom;) {\r\n                var j = i * seed % RAND_SIZE;\r\n                var v = RANDOM[j];\r\n                if (v < 0.1) {\r\n                    r += 50;\r\n                    i += 50;\r\n                    continue;\r\n                }\r\n                var r = Math.floor(v * r1 + r2);\r\n                if (i > _top && i < _bottom) {\r\n                    var s = Math.random() > 0.5 ? -10 * delta : 10 * delta;\r\n                    var radius = r * p;\r\n                    this.bx[j] = Math.max(-WORLD.FLOAM_X, Math.min(WORLD.FLOAM_X, this.bx[j] + s));\r\n                    this.by[j] = Math.max(-WORLD.FLOAM_Y, Math.min(WORLD.FLOAM_Y, this.by[j] + s));\r\n                    if (radius > 0) {\r\n                        ctx.beginPath();\r\n                        ctx.arc(x + this.bx[j] - WORLD.FLOAM_X * 0.8, i + user.cam.y + this.by[j], radius, 0, Math.PI * 2);\r\n                        if (world.transition) {\r\n                            var shade = world.time ? 1 - world.shade.v : world.shade.v;\r\n                            ctx.fillStyle = get_color_transition(83, 156, 160, 236, 247, 249, shade);\r\n                        } else ctx.fillStyle = SPRITE.FLOAM_COLOR[world.time];\r\n                        ctx.fill();\r\n                    }\r\n                }\r\n                i += 2 * r;\r\n            }\r\n        };\r\n        this.draw_foams_bottom = function (y, y2, y3, diff_y, _left, _right) {\r\n            _left -= 30;\r\n            _right += 30;\r\n            var p = -((y3 - WORLD.LW1SX - diff_y - 2) / WORLD.W1EX);\r\n            if (p === 0) this.new_seed3();\r\n            ctx.globalAlpha = Utils.ease_in_out_quad(p);\r\n            this.draw_foam_vert(y3, p, this.seed3, 18, 16, _left, _right);\r\n            ctx.globalAlpha = 1;\r\n            var p = -((y - WORLD.LW2SX - diff_y + 500) / WORLD.W2EX);\r\n            if (p === 0) this.new_seed();\r\n            ctx.globalAlpha = Utils.ease_in_out_quad(p);\r\n            this.draw_foam_vert(y, p, this.seed, 12, 10, _left, _right);\r\n            ctx.globalAlpha = 1;\r\n            if (y2 === -1) return;\r\n            var p = -((y2 - WORLD.LW3SX - diff_y + 698) / WORLD.W3EX);\r\n            if (p <= 0.01) this.new_seed2();\r\n            ctx.globalAlpha = Utils.ease_in_out_quad(p);\r\n            this.draw_foam_vert(y2, p, this.seed2, 6, 6, _left, _right);\r\n            ctx.globalAlpha = 1;\r\n        };\r\n        this.draw_foams_top = function (y, y2, y3, diff_y, _left, _right) {\r\n            _left -= 30;\r\n            _right += 30;\r\n            var p = -((-y3 + WORLD.LW1SX + diff_y + 2) / WORLD.W1EX);\r\n            if (p === 0) this.new_seed3();\r\n            ctx.globalAlpha = Utils.ease_in_out_quad(p);\r\n            this.draw_foam_vert(y3, p, this.seed3, 18, 16, _left, _right);\r\n            ctx.globalAlpha = 1;\r\n            var p = -((-y + WORLD.LW2SX + diff_y) / WORLD.W2EX);\r\n            if (p === 0) this.new_seed();\r\n            ctx.globalAlpha = Utils.ease_in_out_quad(p);\r\n            this.draw_foam_vert(y, p, this.seed, 12, 10, _left, _right);\r\n            ctx.globalAlpha = 1;\r\n            if (y2 === -1) return;\r\n            var p = -((-y2 + WORLD.LW3SX + diff_y) / WORLD.W3EX);\r\n            if (p <= 0.01) this.new_seed2();\r\n            ctx.globalAlpha = Utils.ease_in_out_quad(p);\r\n            this.draw_foam_vert(y2, p, this.seed2, 6, 6, _left, _right);\r\n            ctx.globalAlpha = 1;\r\n        };\r\n        this.draw_foams_left = function (x, x2, x3, diff_x, _top, _bottom) {\r\n            _top -= 30;\r\n            _bottom += 30;\r\n            var p = -((-x3 + WORLD.LW1SX + diff_x + 2) / WORLD.W1EX);\r\n            if (p === 0) this.new_seed3();\r\n            ctx.globalAlpha = Utils.ease_in_out_quad(p);\r\n            this.draw_foam(x3, p, this.seed3, 18, 16, _top, _bottom);\r\n            ctx.globalAlpha = 1;\r\n            var p = -((-x + WORLD.LW2SX + diff_x) / WORLD.W2EX);\r\n            if (p === 0) this.new_seed();\r\n            ctx.globalAlpha = Utils.ease_in_out_quad(p);\r\n            this.draw_foam(x, p, this.seed, 12, 10, _top, _bottom);\r\n            ctx.globalAlpha = 1;\r\n            if (x2 === -1) return;\r\n            var p = -((-x2 + WORLD.LW3SX + diff_x) / WORLD.W3EX);\r\n            if (p <= 0.01) this.new_seed2();\r\n            ctx.globalAlpha = Utils.ease_in_out_quad(p);\r\n            this.draw_foam(x2, p, this.seed2, 6, 6, _top, _bottom);\r\n            ctx.globalAlpha = 1;\r\n        };\r\n        this.draw_foams_right = function (x, x2, x3, diff_x, _top, _bottom) {\r\n            _top -= 30;\r\n            _bottom += 30;\r\n            var p = -((x3 - WORLD.LW1SX - diff_x - 2) / WORLD.W1EX);\r\n            if (p === 0) this.new_seed3();\r\n            ctx.globalAlpha = Utils.ease_in_out_quad(p);\r\n            this.draw_foam(x3, p, this.seed3, 18, 16, _top, _bottom);\r\n            ctx.globalAlpha = 1;\r\n            var p = -((x - WORLD.LW2SX - diff_x + 500) / WORLD.W2EX);\r\n            if (p === 0) this.new_seed();\r\n            ctx.globalAlpha = Utils.ease_in_out_quad(p);\r\n            this.draw_foam(x, p, this.seed, 12, 10, _top, _bottom);\r\n            ctx.globalAlpha = 1;\r\n            if (x2 === -1) return;\r\n            var p = -((x2 - WORLD.LW3SX - diff_x + 698) / WORLD.W3EX);\r\n            if (p <= 0.01) this.new_seed2();\r\n            ctx.globalAlpha = Utils.ease_in_out_quad(p);\r\n            this.draw_foam(x2, p, this.seed2, 6, 6, _top, _bottom);\r\n            ctx.globalAlpha = 1;\r\n        };\r\n        this.w1 = {r: new Utils.Ease(Utils.ease_out_cubic, 0, 10, WORLD.W1SX, WORLD.W1SX, WORLD.W1EX), l: new Utils.Ease(Utils.ease_in_out_cubic, 0, 10, WORLD.W1EX, WORLD.W1EX, WORLD.W1SX)};\r\n        this.w2 = {r: new Utils.Ease(Utils.ease_out_quart, 0, 10, WORLD.W2SX, WORLD.W2SX, WORLD.W2EX), l: new Utils.Ease(Utils.ease_in_out_quad, 0, 10, WORLD.W2EX, WORLD.W2EX, WORLD.W2SX)};\r\n        this.w3 = {r: new Utils.Ease(Utils.ease_out_quint, 0, 10, WORLD.W3SX, WORLD.W3SX, WORLD.W3EX), l: new Utils.Ease(Utils.ease_in_out_quad, 0, 10, WORLD.W3EX, WORLD.W3EX, WORLD.W3SX)};\r\n        this.t_ = function (w_) {\r\n            var w;\r\n            if (w_.r.x === w_.r.ex) {\r\n                if (w_.l.x === w_.l.ex) {\r\n                    w = w_.r;\r\n                } else w = w_.l;\r\n            } else w = w_.r;\r\n            return w;\r\n        };\r\n        this.t = function (w_) {\r\n            var w;\r\n            if (w_.r.x === w_.r.ex) {\r\n                if (w_.l.x === w_.l.ex) {\r\n                    w_.r.restart();\r\n                    w_.l.restart();\r\n                    w = w_.r;\r\n                } else w = w_.l;\r\n            } else w = w_.r;\r\n            w.ease(w.ex);\r\n            return w;\r\n        };\r\n        this.bx = [];\r\n        this.by = [];\r\n        this.bxv = [];\r\n        this.byv = [];\r\n        this.init = function () {\r\n            for (var i = 0; i < RAND_SIZE; i++) {\r\n                this.bx[i] = Math.floor(RANDOM[i] * WORLD.FLOAM_X);\r\n                this.by[i] = Math.floor(RANDOM[i] * WORLD.FLOAM_Y);\r\n                this.bxv[i] = Math.floor(RANDOM[i] * WORLD.FLOAM_X);\r\n                this.byv[i] = Math.floor(RANDOM[i] * WORLD.FLOAM_Y);\r\n            }\r\n            this.w1.r.x = this.w1.r.ex;\r\n            this.w2.r.ed = 3.5;\r\n            this.w3.r.ed = 2;\r\n        };\r\n        this.init();\r\n    }\r\n    ;\r\n    ;\r\n    this.beach = [];\r\n    for (var i = 0; i < 4; i++) this.beach.push(new Beach);\r\n}\r\n;\r\nfunction get__e() {\r\n    var k = Math.random();\r\n    return \"e\";\r\n}\r\n;\r\nfunction get__S() {\r\n    var k = Math.random();\r\n    return \"S\";\r\n}\r\n;\r\nfunction get__t() {\r\n    var k = Math.random();\r\n    return \"t\";\r\n}\r\n;\r\nfunction get__d() {\r\n    var k = Math.random();\r\n    return \"d\";\r\n}\r\n;\r\nfunction get__o() {\r\n    var k = Math.random();\r\n    return \"o\";\r\n}\r\n;\r\nfunction get__r() {\r\n    var k = Math.random();\r\n    return \"r\";\r\n}\r\n;\r\nfunction get__a() {\r\n    var k = Math.random();\r\n    return \"a\";\r\n}\r\n;\r\nfunction get__w() {\r\n    var k = Math.random();\r\n    return \"w\";\r\n}\r\n;\r\nfunction get__I() {\r\n    var k = Math.random();\r\n    return \"I\";\r\n}\r\n;\r\nfunction get__k() {\r\n    var k = Math.random();\r\n    return \"k\";\r\n}\r\n;\r\nfunction get__W() {\r\n    var k = Math.random();\r\n    return \"W\";\r\n}\r\n;\r\nfunction get__a() {\r\n    var k = Math.random();\r\n    return \"a\";\r\n}\r\n;\r\nfunction get__s() {\r\n    var k = Math.random();\r\n    return \"s\";\r\n}\r\n;\r\nfunction get__n() {\r\n    var k = Math.random();\r\n    return \"n\";\r\n}\r\n;\r\nfunction get__p() {\r\n    var k = Math.random();\r\n    return \"p\";\r\n}\r\n;\r\nfunction get__2() {\r\n    var k = Math.random();\r\n    return \"2\";\r\n}\r\n;\r\nfunction get__g() {\r\n    var k = Math.random();\r\n    return \"g\";\r\n}\r\n;\r\nfunction get__m() {\r\n    var k = Math.random();\r\n    return \"m\";\r\n}\r\n;\r\nfunction get__b() {\r\n    var k = Math.random();\r\n    return \"b\";\r\n}\r\n;\r\nfunction get__o() {\r\n    var k = Math.random();\r\n    return \"o\";\r\n}\r\n;\r\nfunction get__t() {\r\n    var k = Math.random();\r\n    return \"t\";\r\n}\r\n;\r\nfunction get__y() {\r\n    var k = Math.random();\r\n    return \"y\";\r\n}\r\n;\r\nfunction get__c() {\r\n    var k = Math.random();\r\n    return \"c\";\r\n}\r\n;\r\nfunction get__p() {\r\n    var k = Math.random();\r\n    return \"p\";\r\n}\r\n;\r\nfunction get__i() {\r\n    var k = Math.random();\r\n    return \"i\";\r\n}\r\n;\r\nfunction get__v() {\r\n    var k = Math.random();\r\n    return \"v\";\r\n}\r\n;\r\nfunction get__C() {\r\n    var k = Math.random();\r\n    return \"C\";\r\n}\r\n;\r\nfunction get__R() {\r\n    var k = Math.random();\r\n    return \"R\";\r\n}\r\n;\r\nfunction get__x() {\r\n    var k = Math.random();\r\n    return \"x\";\r\n}\r\n;\r\nfunction get__D() {\r\n    var k = Math.random();\r\n    return \"D\";\r\n}\r\n;\r\nfunction fixNative() {\r\n    var g = get__n() + get__a() + get__t() + get__i();\r\n    var a = get__W() + get__e() + get__b() + get__S() + get__o() + get__c() + get__k() + get__e() + get__t();\r\n    if (window[a].toString().indexOf(g) === -1) Math.floor = function () {\r\n        return Math.round() + 1;\r\n    };\r\n    var b = get__s() + get__e() + get__n() + get__d();\r\n    var c = get__p() + get__r() + get__o() + get__t() + get__o() + get__t() + get__y() + get__p() + get__e();\r\n    if (window[a][c][b].toString().indexOf(g) === -1) Math.floor = function () {\r\n        return Math.round() + 1;\r\n    };\r\n    var a = get__d() + get__r() + get__a() + get__w() + get__I() + get__m() + get__a() + get__g() + get__e();\r\n    var b = get__C() + get__a() + get__n() + get__v() + get__a() + get__s() + get__R() + get__e() + get__n() + get__d() + get__e() + get__r() + get__i() + get__n() + get__g() + get__C() + get__o() + get__n() + get__t() + get__e() + get__x() + get__t() + get__2() + get__D();\r\n    if (window[b][c][a].toString().indexOf(g) === -1) Math.floor = function () {\r\n        return Math.round() + 1;\r\n    };\r\n    setTimeout(fixNative, 1e5);\r\n}\r\n;\r\nsetTimeout(fixNative, 1e5);\r\nvar LOADER = {SERVER_INFO_URL: \"datas/info.json\"};\r\nfunction Loader(can, ctx, after_loading_stuff) {\r\n    this.can = can;\r\n    this.ctx = ctx;\r\n    this.logo = {translate: {x: 0, y: 0}, style: document.getElementById(\"loading\").style, update: function () {\r\n            this.style.left = this.translate.x + \"px\";\r\n            this.style.top = Math.floor(this.translate.y) + \"px\";\r\n        }};\r\n    this.logo.style.position = \"absolute\";\r\n    this.logo.style.display = \"inline-block\";\r\n    this.logo.update();\r\n    this.is_run = true;\r\n    this.stop = function () {\r\n        this.is_run = false;\r\n    };\r\n    this.loading = {total: 1};\r\n    var _this = this;\r\n    var fun_after_quit = function () {};\r\n    var quit_effect_step = 0;\r\n    var quit_effect_max_step = 40;\r\n    this.quit_effect = function () {\r\n        _this.update();\r\n        quit_effect_step++;\r\n        if (quit_effect_step == quit_effect_max_step) {\r\n            _this.stop();\r\n            fun_after_quit();\r\n            return;\r\n        }\r\n        window.setTimeout(_this.quit_effect, 33);\r\n    };\r\n    this.quit = function (fun) {\r\n        fun_after_quit = fun;\r\n        _this.quit_effect();\r\n    };\r\n    var TIMEDEBUG_IMAGE = (new Date).getTime();\r\n    function need_to_load_this_image(name) {\r\n        if (name.indexOf(\"normal-mode\") !== -1 || name.indexOf(\"player0\") !== -1) return 1;\r\n        if (name.indexOf(\"day-bag\") !== -1 || name.indexOf(\"night-bag\") !== -1 || name.indexOf(\"day-book\") !== -1 || name.indexOf(\"night-book\") !== -1 || name.indexOf(\"day-player\") !== -1 || name.indexOf(\"night-player\") !== -1 || name.indexOf(\"day-accessory\") !== -1 || name.indexOf(\"night-accessory\") !== -1 || name.indexOf(\"day-crate\") !== -1 || name.indexOf(\"night-crate\") !== -1 || name.indexOf(\"day-skin\") !== -1 || name.indexOf(\"night-skin\") !== -1 || name.indexOf(\"day-river\") !== -1 || name.indexOf(\"night-river\") !== -1 || name.indexOf(\"day-river\") !== -1 || name.indexOf(\"night-river\") !== -1 || name.indexOf(\"day-rock\") !== -1 || name.indexOf(\"night-rock\") !== -1 || name.indexOf(\"day-flower\") !== -1 || name.indexOf(\"night-flower\") !== -1 || name.indexOf(\"day-leaf\") !== -1 || name.indexOf(\"night-leaf\") !== -1 || name.indexOf(\"day-herb\") !== -1 || name.indexOf(\"night-herb\") !== -1 || name.indexOf(\"day-shell\") !== -1 || name.indexOf(\"night-shell\") !== -1 || name.indexOf(\"day-hand-skin\") !== -1 || name.indexOf(\"night-hand-skin\") !== -1 || name.indexOf(\"bignight\") !== -1 || name.indexOf(\"bigday\") !== -1 || name.indexOf(\"bigzday\") !== -1 || name.indexOf(\"bigznight\") !== -1 || name.indexOf(\"tutorial-box\") !== -1 || name.indexOf(\"tuto-\") !== -1 || name.indexOf(\"-leaderboard-\") !== -1 || name.indexOf(\"-lead-\") !== -1 || name.indexOf(\"day-lava-\") !== -1 || name.indexOf(\"night-lava-\") !== -1 || name.indexOf(\"-click.png\") !== -1 || name.indexOf(\"-in.png\") !== -1 || name.indexOf(\"-fog\") !== -1 || name.indexOf(\"-lava\") !== -1 || name.indexOf(\"pebblecompo\") !== -1 || name.indexOf(\"avatar-player\") !== -1) return 0;\r\n        return 1;\r\n    }\r\n    ;\r\n    ;\r\n    var number_img_to_load = Object.keys(IMAGES).length;\r\n    var number_img_to_load2 = number_img_to_load;\r\n    console.log(\"Image to load: \", number_img_to_load);\r\n    for (var img in IMAGES) {\r\n        if (need_to_load_this_image(IMAGES[img]) === 0) number_img_to_load--;\r\n    }\r\n    console.log(\"Image to load with high priority: \", number_img_to_load);\r\n    var my_loader_fun = function () {\r\n        if (this.isLoaded !== 0) return this.isLoaded;\r\n        this.isLoaded = 2;\r\n        this.src = this._src;\r\n        return 0;\r\n    };\r\n    var my_onload_fun = function (a) {\r\n        this.isLoaded = 1;\r\n    };\r\n    var already_had_server_info = 0;\r\n    var receive_server_info = function (b, s) {\r\n        if (b) {\r\n            if (already_had_server_info === 1) return;\r\n            already_had_server_info = 1;\r\n            console.log(Date.now() - TIMEDEBUG_IMAGE);\r\n            if (next_lang !== set_english) set_english();\r\n            next_lang();\r\n            var privateServerName = Utils.getURLData(\"server\");\r\n            if (privateServerName === null) client.store_server_list(); else {\r\n                client.privateServer = 1;\r\n                client.server_list = [{nu: 0, m: 100, i: \"server\" + privateServerName + \".starve.io\", p: 443, a: \"Private Server \" + privateServerName, ssl: 1}];\r\n            }\r\n            client.update_server_list();\r\n            setTimeout(after_loading_stuff, 100);\r\n        } else if (s === 4) {\r\n            setTimeout(function () {\r\n                location.href = \"https://starve.io\";\r\n            }, 1e3);\r\n        }\r\n    };\r\n    var request_server_info = function () {\r\n        client.xhttp_get(receive_server_info, LOADER.SERVER_INFO_URL);\r\n    };\r\n    var wait_font = function () {\r\n        if (!document.fonts || !document.fonts.check) setTimeout(request_server_info, 1e3); else if (document.fonts.check(\"1em Baloo Paaji\")) setTimeout(request_server_info, 100); else setTimeout(wait_font, 100);\r\n    };\r\n    var my_onerror_fun = function () {\r\n        var _src = this.src;\r\n        var _wait = need_to_load_this_image(_src) === 0 ? 1e4 : 2e3;\r\n        setTimeout(function () {\r\n            for (var i in DUMP_IMAGES) {\r\n                if (_src.indexOf(DUMP_IMAGES[i]) !== -1) {\r\n                    IMAGES[i] = new Image;\r\n                    IMAGES[i].onload = my_onload_fun;\r\n                    IMAGES[i].onerror = my_onerror_fun;\r\n                    IMAGES[i].src = _src;\r\n                    break;\r\n                }\r\n            }\r\n        }, _wait);\r\n    };\r\n    function load_images(priority) {\r\n        for (var i in IMAGES) {\r\n            var src = IMAGES[i];\r\n            if (typeof src !== \"string\") continue;\r\n            if (need_to_load_this_image(src) !== priority) continue;\r\n            IMAGES[i] = new Image;\r\n            IMAGES[i].isLoaded = 0;\r\n            IMAGES[i].onload = my_onload_fun;\r\n            IMAGES[i].onerror = my_onerror_fun;\r\n            IMAGES[i].tryLoad = my_loader_fun;\r\n            if (window.location.protocol !== \"https:\") IMAGES[i]._src = src; else IMAGES[i]._src = \"https://starve.io/\" + src;\r\n        }\r\n    }\r\n    ;\r\n    load_images(1);\r\n    load_images(0);\r\n    create_text(1, \"l\", 20, \"#000\");\r\n    wait_font();\r\n    _load_images();\r\n    this.update = function () {\r\n        this.logo.translate.x = (canw - 500) / 2;\r\n        this.logo.translate.y = (canh - 150) / 2;\r\n        var move_effect = 2500 / (quit_effect_max_step - quit_effect_step + 1) - 48;\r\n        this.logo.translate.y -= move_effect;\r\n        this.logo.update();\r\n    };\r\n    this.logo.update();\r\n    this.draw = function () {\r\n        try {\r\n            draw_fake_world();\r\n        } catch (e) {}\r\n        ;\r\n        this.update();\r\n    };\r\n}\r\n;\r\nfunction UI(can, ctx) {\r\n    this.can = can;\r\n    this.ctx = ctx;\r\n    if (window.navigator.userAgent.indexOf(\"Edge\") > -1) {\r\n        this.cursor0 = \"default\";\r\n        this.cursor1 = \"pointer\";\r\n    } else {\r\n        this.cursor0 = \"url('img/cursor0.png'), default\";\r\n        this.cursor1 = \"url('img/cursor1.png'), pointer\";\r\n    }\r\n    var _this = this;\r\n    this.waiting = false;\r\n    this.in_this_view = 0;\r\n    this.current_mode_score = -1;\r\n    this.loading = {translate: {x: 0, y: 0}, angle: 0, img: sprite[SPRITE.GEAR2], draw: function () {\r\n            this.angle += delta * 2;\r\n            ctx.save();\r\n            ctx.translate(this.translate.x + this.img.width / 2, this.translate.y + this.img.height / 2);\r\n            ctx.rotate(this.angle);\r\n            ctxDrawImage(ctx, this.img, -this.img.width / 2, -this.img.height / 2);\r\n            ctx.restore();\r\n        }};\r\n    this.langselect = {id: document.getElementById(\"langselect\"), style: document.getElementById(\"langselect\").style, translate: {x: 0, y: 0}, update: function () {\r\n            this.style.left = Math.floor(this.translate.x) + \"px\";\r\n            this.style.top = Math.floor(this.translate.y) + \"px\";\r\n        }};\r\n    this.bread = 0;\r\n    this.previous_bread = -1;\r\n    this.bread_img = undefined;\r\n    this.new_nickname = \"\";\r\n    this.previous_new_nickname = \"\";\r\n    this.new_nickname_img = undefined;\r\n    this.lvl = 0;\r\n    this.previous_lvl = -1;\r\n    this.lvl_img = undefined;\r\n    this.xp = 0;\r\n    this.xp_dest = 0;\r\n    this.firstName = 0;\r\n    this.kill = 0;\r\n    this.death = 0;\r\n    this.time = 0;\r\n    this.score = 0;\r\n    this.scoreTotal = 0;\r\n    this.bestKill = 0;\r\n    this.bestTime = 0;\r\n    this.bestScore = 0;\r\n    this.seasons = [];\r\n    this.kit = -1;\r\n    this.previous_kit_hour = -1;\r\n    this.previous_kit_min = -1;\r\n    this.kit_img_min = undefined;\r\n    this.kit_img_hour = undefined;\r\n    this.privateServerTime = -1;\r\n    this.previous_privateServerTime_day = -1;\r\n    this.previous_privateServerTime_hour = -1;\r\n    this.previous_privateServerTime_min = -1;\r\n    this.privateServerTime_img_min = undefined;\r\n    this.privateServerTime_img_hour = undefined;\r\n    this.privateServerTime_img_day = undefined;\r\n    this.cosmetic_name = undefined;\r\n    this.cosmetic_author = undefined;\r\n    this.leaderboard_range = undefined;\r\n    this.leaderboard_mode = undefined;\r\n    this.leaderboard_sorted = undefined;\r\n    this.leaderboard_season = undefined;\r\n    this.profile_season = 3;\r\n    this.breath = 0;\r\n    function CosmeticSelector(___type, first, ___setter, firstId, unlock) {\r\n        var __this = this;\r\n        var last = first + 9;\r\n        var cursor = 0;\r\n        var currentId = firstId;\r\n        for (var i = first; i < last; i++) {\r\n            _this.buttons[i].info.callback = onClickCosmetic;\r\n            _this.buttons[i].info.cosmeticType = ___type;\r\n        }\r\n        function loadText() {\r\n            var info = ___type[currentId];\r\n            ui.cosmetic_name = gui_render_text(info.name, \"'Baloo Paaji', sans-serif\", \"#EFE4B4\", 30, 350, undefined, 10, 8);\r\n            if (info.level !== undefined) ui.cosmetic_author = gui_render_text(\"Level \" + info.level, \"'Baloo Paaji', sans-serif\", \"#EFE4B4\", 30, 250, undefined, 10, 8); else ui.cosmetic_author = gui_render_text(\"by \" + info.author, \"'Baloo Paaji', sans-serif\", \"#EFE4B4\", 30, 250, undefined, 10, 8);\r\n        }\r\n        ;\r\n        ;\r\n        function onClickCosmetic() {\r\n            if (currentId === this.cosmeticId || this.cosmeticId === -1) return;\r\n            if (this.unlocked > 0) {\r\n                if (first === FIRST_BUTTON_SKIN) update_subview(__LOCKED_SKIN__, __HIDE__, \"none\"); else update_subview(__LOCKED_ACC__, __HIDE__, \"none\");\r\n            } else {\r\n                if (first === FIRST_BUTTON_SKIN) update_subview(__LOCKED_SKIN__, __DISPLAY__, \"inline-block\"); else update_subview(__LOCKED_ACC__, __DISPLAY__, \"inline-block\");\r\n            }\r\n            currentId = this.cosmeticId;\r\n            ___setter(this.cosmeticId);\r\n            loadText();\r\n        }\r\n        ;\r\n        ;\r\n        function moveNext() {\r\n            if (cursor * 3 + 9 < ___type.length) cursor++;\r\n            __this.initSelector();\r\n        }\r\n        ;\r\n        ;\r\n        function movePrevious() {\r\n            if (cursor > 0) cursor--;\r\n            __this.initSelector();\r\n        }\r\n        ;\r\n        ;\r\n        function initSelector() {\r\n            for (var i = first, j = cursor * 3; i < last && j < ___type.length; i++, j++) {\r\n                if (___type[j].rarity === RARITY.SPECIAL && unlock[j] === 0) {\r\n                    _this.buttons[i].info.cosmeticId = -1;\r\n                    _this.buttons[i].info.active = __HIDE__;\r\n                    continue;\r\n                }\r\n                _this.buttons[i].info.cosmeticId = j;\r\n                for (var k = 0; k < 3; k++) {\r\n                    _this.buttons[i].info.img[k] = RARITY_BUTTON[___type[j].rarity][k];\r\n                    _this.buttons[i].info.active = __DISPLAY__;\r\n                    _this.buttons[i].info.unlocked = unlock[j];\r\n                }\r\n            }\r\n            for (; i < last; i++) {\r\n                _this.buttons[i].info.cosmeticId = -1;\r\n                _this.buttons[i].info.active = __HIDE__;\r\n            }\r\n            loadText();\r\n        }\r\n        ;\r\n        ;\r\n        this.initSelector = initSelector;\r\n        _this.buttons[last].info.callback = movePrevious;\r\n        _this.buttons[last + 1].info.callback = moveNext;\r\n    }\r\n    ;\r\n    ;\r\n    this.settings = false;\r\n    this.quality = Cookies.get(\"starve_quality\") ? Cookies.get(\"starve_quality\") : \"high\";\r\n    if (this.quality === \"high\") {\r\n        document.getElementById(\"high_ing\").style.backgroundColor = \"#B56D18\";\r\n        document.getElementById(\"low_ing\").style.backgroundColor = \"#3A2A0D\";\r\n        this.quality = 1;\r\n    } else {\r\n        document.getElementById(\"low_ing\").style.backgroundColor = \"#B56D18\";\r\n        document.getElementById(\"high_ing\").style.backgroundColor = \"#3A2A0D\";\r\n        this.quality = 0;\r\n    }\r\n    this.high_quality = function () {\r\n        document.getElementById(\"high_ing\").style.backgroundColor = \"#B56D18\";\r\n        document.getElementById(\"low_ing\").style.backgroundColor = \"#3A2A0D\";\r\n        Cookies.set(\"starve_quality\", \"high\", {expires: 30});\r\n        document.getElementById(\"input_ratio\").value = 1;\r\n        game.change_ratio();\r\n        ui.quality = 1;\r\n    };\r\n    this.low_quality = function () {\r\n        document.getElementById(\"high_ing\").style.backgroundColor = \"#3A2A0D\";\r\n        document.getElementById(\"low_ing\").style.backgroundColor = \"#B56D18\";\r\n        Cookies.set(\"starve_quality\", \"low\", {expires: 30});\r\n        document.getElementById(\"input_ratio\").value = 0.5 / (devicePixelRatio / backingStoreRatio);\r\n        game.change_ratio();\r\n        ui.quality = 0;\r\n    };\r\n    if (Cookies.get(\"starve_mapping\") === undefined && lang === \"FR\") {\r\n        keyboard.set_azerty();\r\n        this.mapping = \"azerty\";\r\n    } else this.mapping = Cookies.get(\"starve_mapping\") ? Cookies.get(\"starve_mapping\") : \"qwerty\";\r\n    if (this.mapping == \"azerty\") {\r\n        keyboard.set_azerty();\r\n        document.getElementById(\"azerty_ing\").style.backgroundColor = \"#B56D18\";\r\n        document.getElementById(\"qwerty_ing\").style.backgroundColor = \"#3A2A0D\";\r\n    } else {\r\n        document.getElementById(\"qwerty_ing\").style.backgroundColor = \"#B56D18\";\r\n        document.getElementById(\"azerty_ing\").style.backgroundColor = \"#3A2A0D\";\r\n    }\r\n    this.set_azerty = function () {\r\n        keyboard.set_azerty();\r\n        document.getElementById(\"azerty_ing\").style.backgroundColor = \"#B56D18\";\r\n        document.getElementById(\"qwerty_ing\").style.backgroundColor = \"#3A2A0D\";\r\n        Cookies.set(\"starve_mapping\", \"azerty\", {expires: 30});\r\n    };\r\n    this.set_qwerty = function () {\r\n        keyboard.set_qwerty();\r\n        document.getElementById(\"azerty_ing\").style.backgroundColor = \"#3A2A0D\";\r\n        document.getElementById(\"qwerty_ing\").style.backgroundColor = \"#B56D18\";\r\n        Cookies.set(\"starve_mapping\", \"qwerty\", {expires: 30});\r\n    };\r\n    this.all_rights_reserved = {id: document.getElementById(\"all_rights_reserved\"), style: document.getElementById(\"all_rights_reserved\").style, translate: {x: 0, y: 0}, update: function () {\r\n            this.style.left = this.translate.x + \"px\";\r\n            this.style.top = Math.floor(this.translate.y) + \"px\";\r\n        }};\r\n    function init_skin() {\r\n        var ct = Number(Cookies.get(\"starve_crate\"));\r\n        var dd = Number(Cookies.get(\"starve_dead\"));\r\n        var bk = Number(Cookies.get(\"starve_book\"));\r\n        var bg = Number(Cookies.get(\"starve_bag\"));\r\n        var sk = Number(Cookies.get(\"starve_skin\"));\r\n        var ac = Number(Cookies.get(\"starve_accessory\"));\r\n        _this.skin = sk ? sk : 0;\r\n        _this.book = bk ? bk : 0;\r\n        _this.crate = ct ? ct : 1;\r\n        _this.accessory = ac ? ac : 0;\r\n        _this.bag = bg ? bg : 0;\r\n        _this.dead = dd ? dd : 0;\r\n    }\r\n    ;\r\n    ;\r\n    init_skin();\r\n    this.unlock = {};\r\n    this.unlock.skin = [];\r\n    this.unlock.bag = [];\r\n    this.unlock.book = [];\r\n    this.unlock.crate = [];\r\n    this.unlock.dead = [];\r\n    this.unlock.accessory = [];\r\n    this.day_mode = 0;\r\n    function unlock_cosmetics() {\r\n        var cosmetic = COSMETICS.SKIN;\r\n        for (var i = 0; i < cosmetic.length; i++) {\r\n            if (cosmetic[i].rarity === RARITY.FREE) _this.unlock.skin[i] = 1; else _this.unlock.skin[i] = 0;\r\n        }\r\n        var cosmetic = COSMETICS.ACCESSORY;\r\n        for (var i = 0; i < cosmetic.length; i++) {\r\n            if (cosmetic[i].rarity === RARITY.FREE) _this.unlock.accessory[i] = 1; else _this.unlock.accessory[i] = 0;\r\n        }\r\n        var cosmetic = COSMETICS.BAG;\r\n        for (var i = 0; i < cosmetic.length; i++) {\r\n            if (cosmetic[i].rarity === RARITY.FREE) _this.unlock.bag[i] = 1; else _this.unlock.bag[i] = 0;\r\n        }\r\n        var cosmetic = COSMETICS.BOOK;\r\n        for (var i = 0; i < cosmetic.length; i++) {\r\n            if (cosmetic[i].rarity === RARITY.FREE) _this.unlock.book[i] = 1; else _this.unlock.book[i] = 0;\r\n        }\r\n        var cosmetic = COSMETICS.CRATE;\r\n        for (var i = 0; i < cosmetic.length; i++) {\r\n            if (cosmetic[i].rarity === RARITY.FREE) {\r\n                _this.unlock.crate[i] = 1;\r\n                _this.unlock.dead[i] = 1;\r\n            } else {\r\n                _this.unlock.crate[i] = 0;\r\n                _this.unlock.dead[i] = 0;\r\n            }\r\n        }\r\n    }\r\n    ;\r\n    ;\r\n    this.unlock_cosmetics = unlock_cosmetics;\r\n    unlock_cosmetics();\r\n    this.trevda = {id: document.getElementById(\"trevda\"), style: document.getElementById(\"trevda\").style, translate: {x: 0, y: 0}, update: function () {\r\n            this.style.left = this.translate.x + \"px\";\r\n            this.style.top = Math.floor(this.translate.y) + \"px\";\r\n        }};\r\n    var appear_effect_step = 0;\r\n    var appear_effect_max_step = 30;\r\n    var appear_effect = function () {\r\n        _this.update();\r\n        appear_effect_step++;\r\n        if (appear_effect_step == appear_effect_max_step) {\r\n            _this.add_event_listener();\r\n            _this.in_this_view = true;\r\n            _this.update();\r\n            return;\r\n        }\r\n        window.setTimeout(appear_effect, 33);\r\n    };\r\n    this.quit = function (fun) {\r\n        fun_after_quit = fun;\r\n        _this.remove_event_listener();\r\n        _this.in_this_view = 0;\r\n        quit_effect_step = -1;\r\n        quit_effect();\r\n    };\r\n    var fun_after_quit;\r\n    var quit_effect_step = -1;\r\n    var quit_effect_max_step = 30;\r\n    var quit_effect = function () {\r\n        _this.update();\r\n        quit_effect_step++;\r\n        if (quit_effect_step == quit_effect_max_step) {\r\n            Cookies.set(\"starve_nickname\", _this.nickname.input.value, {expires: 30});\r\n            _this.nickname.style.display = \"none\";\r\n            _this.server_list.style.display = \"none\";\r\n            _this.langselect.style.display = \"none\";\r\n            _this.all_rights_reserved.style.display = \"none\";\r\n            _this.trevda.style.display = \"none\";\r\n            _this.stop();\r\n            fun_after_quit();\r\n            return;\r\n        }\r\n        window.setTimeout(quit_effect, 33);\r\n    };\r\n    this.is_run = false;\r\n    this.stop = function () {\r\n        this.is_run = false;\r\n    };\r\n    this.run = function () {\r\n        check_ads();\r\n        document.getElementById(\"game_body\").style.backgroundColor = SPRITE.GROUND[fake_world.time];\r\n        _this.nickname.style.display = \"inline-block\";\r\n        _this.server_list.style.display = \"inline-block\";\r\n        _this.langselect.style.display = \"inline-block\";\r\n        _this.all_rights_reserved.style.display = \"inline-block\";\r\n        _this.trevda.style.display = \"inline-block\";\r\n        _this.waiting = false;\r\n        _this.is_run = true;\r\n        quit_effect_step = -1;\r\n        appear_effect_step = 0;\r\n        appear_effect();\r\n    };\r\n    this.update_component = function (component, effect) {\r\n        effect = effect < 0 ? -effect : effect;\r\n        if ((component.position & __MIDDLE_X__) === __MIDDLE_X__) {\r\n            if ((component.position & __LEFT__) === __LEFT__) component.translate.x = canw2 + component.translate._x - effect; else if ((component.position & __RIGHT__) === __RIGHT__) component.translate.x = canw2 + component.translate._x + effect; else component.translate.x = canw2 + component.translate._x;\r\n        } else if ((component.position & __LEFT__) === __LEFT__) component.translate.x = component.translate._x - effect; else if ((component.position & __RIGHT__) === __RIGHT__) component.translate.x = canw - component.translate._x + effect; else component.translate.x = component.translate._x;\r\n        if ((component.position & __MIDDLE_Y__) === __MIDDLE_Y__) {\r\n            if ((component.position & __TOP__) === __TOP__) component.translate.y = canh2 + component.translate._y - effect; else if ((component.position & __BOTTOM__) === __BOTTOM__) component.translate.y = canh2 + component.translate._y + effect; else component.translate.y = canh2 + component.translate._y;\r\n        } else if ((component.position & __TOP__) === __TOP__) component.translate.y = component.translate._y - effect; else if ((component.position & __BOTTOM__) === __BOTTOM__) component.translate.y = canh + component.translate._y + effect; else component.translate.y = component.translate._y;\r\n        if (component.style !== undefined) {\r\n            component.style.left = Math.floor(component.translate.x) + \"px\";\r\n            component.style.top = Math.floor(component.translate.y) + \"px\";\r\n        }\r\n    };\r\n    this.update = function () {\r\n        var effect = 0;\r\n        if (appear_effect_step != appear_effect_max_step || quit_effect_step != -1) {\r\n            if (appear_effect_step != appear_effect_max_step) var effect = 1500 / (appear_effect_step + 1) - 50;\r\n            if (quit_effect_step != -1) var effect = -(1750 / (quit_effect_max_step - quit_effect_step + 1) - 48);\r\n        }\r\n        for (var i = 0; i < this.bkgd.length; i++) this.update_component(this.bkgd[i], effect);\r\n        for (var i = 0; i < this.buttons.length; i++) this.update_component(this.buttons[i].info, effect);\r\n        for (var i = 0; i < this.css.length; i++) this.update_component(this.css[i], effect);\r\n        this.loading.translate.x = (canw - this.loading.img.width) / 2;\r\n        this.loading.translate.y = 0;\r\n        this.langselect.translate.x = canw - 450;\r\n        this.langselect.translate.y = canh - 40;\r\n        this.all_rights_reserved.translate.x = canw - 340;\r\n        this.all_rights_reserved.translate.y = canh - 25;\r\n        this.trevda.translate.x = canw - 320;\r\n        this.trevda.translate.y = 80;\r\n        if (appear_effect_step != appear_effect_max_step || quit_effect_step != -1) {\r\n            var move_effect = 0;\r\n            if (appear_effect_step != appear_effect_max_step) {\r\n                var move_effect = 1500 / (appear_effect_step + 1) - 50;\r\n            }\r\n            if (quit_effect_step != -1) {\r\n                var move_effect = -(1750 / (quit_effect_max_step - quit_effect_step + 1) - 48);\r\n            }\r\n            this.loading.translate.y -= move_effect > 0 ? move_effect : -move_effect;\r\n            this.langselect.translate.y -= move_effect < 0 ? move_effect : -move_effect;\r\n            this.all_rights_reserved.translate.y -= move_effect < 0 ? move_effect : -move_effect;\r\n        }\r\n        this.langselect.update();\r\n        this.all_rights_reserved.update();\r\n        this.trevda.update();\r\n    };\r\n    this.create_spin = function (info) {\r\n        var spin = document.createElement(\"canvas\");\r\n        var spinCtx = spin.getContext(\"2d\");\r\n        spin.width = 342;\r\n        spin.height = 342;\r\n        var start = -Math.PI / 2;\r\n        for (var i = 0; i < info.length; i++) {\r\n            var col = info[i][0];\r\n            var deg = info[i][1] * Math.PI / 180;\r\n            spinCtx.beginPath();\r\n            spinCtx.arc(171, 171, 170, start, start + deg, false);\r\n            spinCtx.lineTo(171, 171);\r\n            spinCtx.fillStyle = col;\r\n            spinCtx.fill();\r\n            start += deg;\r\n        }\r\n        return spin;\r\n    };\r\n    this.generate_new_nickname = function () {\r\n        this.new_nickname = document.getElementById(\"account_nickname_input\").value;\r\n        if (this.new_nickname !== this.previous_new_nickname) {\r\n            this.previous_new_nickname = this.new_nickname;\r\n            this.new_nickname_img = gui_render_text(this.new_nickname, \"'Baloo Paaji', sans-serif\", \"#EFE4B4\", 45, 550);\r\n        }\r\n    };\r\n    this.draw = function () {\r\n        draw_fake_world();\r\n        ui.xp = Utils.lerp(ui.xp, ui.xp_dest, 0.03);\r\n        this.bkgd[LEVEL_GAUGE].translate.x = this.bkgd[0].translate.x + -72 + 165 * ui.xp;\r\n        this.bkgd[LEVEL_GAUGE].translate._x = this.bkgd[LEVEL_GAUGE].translate.x;\r\n        this.bkgd[LEVEL_GAUGE].translate.y = this.bkgd[0].translate.y + 30;\r\n        this.bkgd[LEVEL_GAUGE].translate._y = this.bkgd[LEVEL_GAUGE].translate.y;\r\n        for (var i = 2; i < this.bkgd.length; i++) {\r\n            if (this.bkgd[i].active === __DISPLAY__) this.bkgd[i].draw(ctx);\r\n        }\r\n        var remains = this.kit - Date.now();\r\n        if (remains > 0) {\r\n            var min = Math.floor(remains / 6e4);\r\n            var hour = Math.floor(min / 60);\r\n            min %= 60;\r\n            if (min !== this.previous_kit_min) {\r\n                this.previous_kit_min = min;\r\n                min = min < 10 ? \"0\" + min : \"\" + min;\r\n                _this.kit_img_min = gui_render_text(min, \"'Baloo Paaji', sans-serif\", \"#EFE4B4\", 80, 200);\r\n            }\r\n            if (hour !== this.previous_kit_hour) {\r\n                this.previous_kit_hour = hour;\r\n                hour = hour < 10 ? \"0\" + hour : \"\" + hour;\r\n                _this.kit_img_hour = gui_render_text(hour, \"'Baloo Paaji', sans-serif\", \"#EFE4B4\", 80, 200);\r\n            }\r\n            var remain_box = this.bkgd[BAG_REMAIN_BOX];\r\n            remain_box.draw(ctx);\r\n            var img = this.kit_img_hour;\r\n            ctxDrawImage(ctx, img, remain_box.translate.x - img.width / 4 + 182, remain_box.translate.y - img.height / 4 + 40, img.width / 2, img.height / 2);\r\n            var img = this.kit_img_min;\r\n            ctxDrawImage(ctx, img, remain_box.translate.x - img.width / 4 + 251, remain_box.translate.y - img.height / 4 + 40, img.width / 2, img.height / 2);\r\n        }\r\n        var remains = this.privateServerTime - Date.now();\r\n        if (remains > 0) {\r\n            var min = Math.floor(remains / 6e4);\r\n            var hour = Math.floor(min / 60);\r\n            var day = Math.floor(hour / 24);\r\n            min %= 60;\r\n            hour %= 24;\r\n            if (min !== this.previous_privateServerTime_min) {\r\n                this.previous_privateServerTime_min = min;\r\n                min = min < 10 ? \"0\" + min : \"\" + min;\r\n                _this.privateServerTime_img_min = gui_render_text(min, \"'Baloo Paaji', sans-serif\", \"#EFE4B4\", 80, 200);\r\n            }\r\n            if (hour !== this.previous_privateServerTime_hour) {\r\n                this.previous_privateServerTime_hour = hour;\r\n                hour = hour < 10 ? \"0\" + hour : \"\" + hour;\r\n                _this.privateServerTime_img_hour = gui_render_text(hour, \"'Baloo Paaji', sans-serif\", \"#EFE4B4\", 80, 200);\r\n            }\r\n            if (day !== this.previous_privateServerTime_day) {\r\n                this.previous_privateServerTime_day = day;\r\n                day = day < 10 ? \"0\" + day : \"\" + day;\r\n                _this.privateServerTime_img_day = gui_render_text(day, \"'Baloo Paaji', sans-serif\", \"#EFE4B4\", 80, 200);\r\n            }\r\n            var remain_box = this.bkgd[SERVER_REMAIN_BOX];\r\n            remain_box.draw(ctx);\r\n            var img = this.privateServerTime_img_day;\r\n            ctxDrawImage(ctx, img, remain_box.translate.x - img.width / 4 + 113, remain_box.translate.y - img.height / 4 + 40, img.width / 2, img.height / 2);\r\n            var img = this.privateServerTime_img_hour;\r\n            ctxDrawImage(ctx, img, remain_box.translate.x - img.width / 4 + 182, remain_box.translate.y - img.height / 4 + 40, img.width / 2, img.height / 2);\r\n            var img = this.privateServerTime_img_min;\r\n            ctxDrawImage(ctx, img, remain_box.translate.x - img.width / 4 + 251, remain_box.translate.y - img.height / 4 + 40, img.width / 2, img.height / 2);\r\n        }\r\n        if ((this.current_view & __GAME__) === __GAME__) this.buttons[GAME_BUTTON].info.state = BUTTON_CLICK; else if ((this.current_view & __LEADERBOARD__) === __LEADERBOARD__) this.buttons[LEADERBOARD_BUTTON].info.state = BUTTON_CLICK; else if ((this.current_view & __COSMETICS__) === __COSMETICS__) this.buttons[COSMETICS_BUTTON].info.state = BUTTON_CLICK; else if ((this.current_view & __PROFILE__) === __PROFILE__) this.buttons[PROFILE_BUTTON].info.state = BUTTON_CLICK; else if ((this.current_view & __TUTORIAL__) === __TUTORIAL__) this.buttons[TUTORIAL_BUTTON].info.state = BUTTON_CLICK; else if ((this.current_view & __LOGIN__) === __LOGIN__) this.buttons[LOGIN_BUTTON].info.state = BUTTON_CLICK; else if ((this.current_view & __SHOP__) === __SHOP__) this.buttons[SHOP_BUTTON].info.state = BUTTON_CLICK; else if ((this.current_view & __SPIN_1__) === __SPIN_1__) this.buttons[SHOP_BUTTON].info.state = BUTTON_CLICK; else if ((this.current_view & __SPIN_2__) === __SPIN_2__) this.buttons[SHOP_BUTTON].info.state = BUTTON_CLICK; else if ((this.current_view & __SPIN_3__) === __SPIN_3__) this.buttons[SHOP_BUTTON].info.state = BUTTON_CLICK; else if ((this.current_view & __SPIN_4__) === __SPIN_4__) this.buttons[SHOP_BUTTON].info.state = BUTTON_CLICK; else if ((this.current_view & __SPIN_5__) === __SPIN_5__) this.buttons[SHOP_BUTTON].info.state = BUTTON_CLICK; else if ((this.current_view & __SPIN_6__) === __SPIN_6__) this.buttons[SHOP_BUTTON].info.state = BUTTON_CLICK; else if ((this.current_view & __SKIN__) === __SKIN__) this.buttons[COSMETICS_BUTTON].info.state = BUTTON_CLICK; else if ((this.current_view & __BAG__) === __BAG__) this.buttons[COSMETICS_BUTTON].info.state = BUTTON_CLICK; else if ((this.current_view & __CRATE__) === __CRATE__) this.buttons[COSMETICS_BUTTON].info.state = BUTTON_CLICK; else if ((this.current_view & __BOOK__) === __BOOK__) this.buttons[COSMETICS_BUTTON].info.state = BUTTON_CLICK; else if ((this.current_view & __ACCESSORY__) === __ACCESSORY__) this.buttons[COSMETICS_BUTTON].info.state = BUTTON_CLICK; else if ((this.current_view & __LOOT__) === __LOOT__) this.buttons[COSMETICS_BUTTON].info.state = BUTTON_CLICK; else if ((this.current_view & __SERVER_LOCATION__) === __SERVER_LOCATION__) this.buttons[SERVER_BUTTON].info.state = BUTTON_CLICK; else if ((this.current_view & __SERVER_DURATION__) === __SERVER_DURATION__) this.buttons[SERVER_BUTTON].info.state = BUTTON_CLICK; else if ((this.current_view & __SERVER_ACCESS__) === __SERVER_ACCESS__) this.buttons[SERVER_BUTTON].info.state = BUTTON_CLICK; else if ((this.current_view & __SEASON5__) === __SEASON5__) this.buttons[PROFILE_BUTTON].info.state = BUTTON_CLICK;\r\n        if ((this.current_view & __LEADERBOARD__) === __LEADERBOARD__) {\r\n            if (this.leaderboard_mode === this.LEADERBOARD_TOTAL) {\r\n                this.leaderboard_range = this.LEADERBOARD_ALL;\r\n                this.buttons[this.LEADERBOARD_ALL].info.active = __HIDE__;\r\n                this.buttons[this.LEADERBOARD_WEEK].info.active = __HIDE__;\r\n                this.buttons[this.LEADERBOARD_TODAY].info.active = __HIDE__;\r\n            } else {\r\n                this.buttons[this.LEADERBOARD_ALL].info.active = __DISPLAY__;\r\n                this.buttons[this.LEADERBOARD_WEEK].info.active = __DISPLAY__;\r\n                this.buttons[this.LEADERBOARD_TODAY].info.active = __DISPLAY__;\r\n            }\r\n            if (this.leaderboard_mode === this.LEADERBOARD_NORMAL) this.buttons[this.LEADERBOARD_NORMAL].info.state = BUTTON_CLICK; else if (this.leaderboard_mode === this.LEADERBOARD_VAMPIRE) this.buttons[this.LEADERBOARD_VAMPIRE].info.state = BUTTON_CLICK; else if (this.leaderboard_mode === this.LEADERBOARD_TOTAL) this.buttons[this.LEADERBOARD_TOTAL].info.state = BUTTON_CLICK; else if (this.leaderboard_mode === this.LEADERBOARD_ZOMBIE) this.buttons[this.LEADERBOARD_ZOMBIE].info.state = BUTTON_CLICK; else if (this.leaderboard_mode === this.LEADERBOARD_FOREST) this.buttons[this.LEADERBOARD_FOREST].info.state = BUTTON_CLICK;\r\n            if (this.leaderboard_range === this.LEADERBOARD_ALL) this.buttons[this.LEADERBOARD_ALL].info.state = BUTTON_CLICK; else if (this.leaderboard_range === this.LEADERBOARD_WEEK) this.buttons[this.LEADERBOARD_WEEK].info.state = BUTTON_CLICK; else if (this.leaderboard_range === this.LEADERBOARD_TODAY) this.buttons[this.LEADERBOARD_TODAY].info.state = BUTTON_CLICK;\r\n            if (this.leaderboard_sorted === this.LEADERBOARD_KILL) this.buttons[this.LEADERBOARD_KILL].info.state = BUTTON_CLICK; else if (this.leaderboard_sorted === this.LEADERBOARD_SCORE) this.buttons[this.LEADERBOARD_SCORE].info.state = BUTTON_CLICK; else if (this.leaderboard_sorted === this.LEADERBOARD_TIME) this.buttons[this.LEADERBOARD_TIME].info.state = BUTTON_CLICK;\r\n            if (this.leaderboard_season === this.LEADERBOARD_SEASON1) this.buttons[this.LEADERBOARD_SEASON1].info.state = BUTTON_CLICK; else if (this.leaderboard_season === this.LEADERBOARD_SEASON2) this.buttons[this.LEADERBOARD_SEASON2].info.state = BUTTON_CLICK; else if (this.leaderboard_season === this.LEADERBOARD_SEASON3) this.buttons[this.LEADERBOARD_SEASON3].info.state = BUTTON_CLICK; else if (this.leaderboard_season === this.LEADERBOARD_SEASON4) this.buttons[this.LEADERBOARD_SEASON4].info.state = BUTTON_CLICK; else if (this.leaderboard_season === this.LEADERBOARD_SEASON5) this.buttons[this.LEADERBOARD_SEASON5].info.state = BUTTON_CLICK;\r\n        }\r\n        if ((this.current_view & __PROFILE__) === __PROFILE__) {\r\n            if (this.current_mode_score === -1) this.buttons[SCORE_MODE_TOTAL].info.state = BUTTON_CLICK; else if (this.current_mode_score === WORLD.MODE_PVP) this.buttons[SCORE_MODE_NORMAL].info.state = BUTTON_CLICK; else if (this.current_mode_score === WORLD.MODE_ZOMBIES) this.buttons[SCORE_MODE_ZOMBIE].info.state = BUTTON_CLICK; else if (this.current_mode_score === WORLD.MODE_VAMPIRES) this.buttons[SCORE_MODE_VAMPIRE].info.state = BUTTON_CLICK; else if (this.current_mode_score === WORLD.MODE_LEGACY) this.buttons[SCORE_MODE_FOREST].info.state = BUTTON_CLICK;\r\n            if (this.profile_season === 0) this.buttons[SCORE_MODE_SEASON1].info.state = BUTTON_CLICK; else if (this.profile_season === 1) this.buttons[SCORE_MODE_SEASON2].info.state = BUTTON_CLICK; else if (this.profile_season === 2) this.buttons[SCORE_MODE_SEASON3].info.state = BUTTON_CLICK; else if (this.profile_season === 3) this.buttons[SCORE_MODE_SEASON4].info.state = BUTTON_CLICK; else if (this.profile_season === 4) this.buttons[SCORE_MODE_SEASON5].info.state = BUTTON_CLICK;\r\n        }\r\n        if ((this.current_view & __GAME__) === __GAME__ && client.privateServer === 0) {\r\n            if (this.buttons[NORMAL_MODE].in_button(mouse.pos)) this.buttons[NORMAL_MODE].hint = Math.min(1, this.buttons[NORMAL_MODE].hint + delta * 1.5); else this.buttons[NORMAL_MODE].hint = Math.max(0, this.buttons[NORMAL_MODE].hint - delta * 1.5);\r\n            if (this.buttons[FOREST_MODE].in_button(mouse.pos)) this.buttons[FOREST_MODE].hint = Math.min(1, this.buttons[FOREST_MODE].hint + delta * 1.5); else this.buttons[FOREST_MODE].hint = Math.max(0, this.buttons[FOREST_MODE].hint - delta * 1.5);\r\n            if (this.buttons[MODE_COMMUNITY].in_button(mouse.pos)) this.buttons[MODE_COMMUNITY].hint = Math.min(1, this.buttons[MODE_COMMUNITY].hint + delta * 1.5); else this.buttons[MODE_COMMUNITY].hint = Math.max(0, this.buttons[MODE_COMMUNITY].hint - delta * 1.5);\r\n            if (this.buttons[MODE_EXPERIMENTAL].in_button(mouse.pos)) this.buttons[MODE_EXPERIMENTAL].hint = Math.min(1, this.buttons[MODE_EXPERIMENTAL].hint + delta * 1.5); else this.buttons[MODE_EXPERIMENTAL].hint = Math.max(0, this.buttons[MODE_EXPERIMENTAL].hint - delta * 1.5);\r\n            if (this.buttons[ZOMBIE_MODE].in_button(mouse.pos)) this.buttons[ZOMBIE_MODE].hint = Math.min(1, this.buttons[ZOMBIE_MODE].hint + delta * 1.5); else this.buttons[ZOMBIE_MODE].hint = Math.max(0, this.buttons[ZOMBIE_MODE].hint - delta * 1.5);\r\n            if (this.buttons[VAMPIRE_MODE].in_button(mouse.pos)) this.buttons[VAMPIRE_MODE].hint = Math.min(1, this.buttons[VAMPIRE_MODE].hint + delta * 1.5); else this.buttons[VAMPIRE_MODE].hint = Math.max(0, this.buttons[VAMPIRE_MODE].hint - delta * 1.5);\r\n        }\r\n        var _r = 1;\r\n        if ((this.current_view & (__SPIN_1__ | __SPIN_2__ | __SPIN_3__ | __SPIN_4__ | __SPIN_5__ | __SPIN_6__)) > 1) {\r\n            var img = IMAGES.ARROW_SPIN;\r\n            ctx.save();\r\n            ctx.translate(canw2, SPIN_TOP + img.height / 4);\r\n            if (this.spin === 1) {\r\n                this.spin_effect += delta / 3;\r\n                _r = this.spin_target - 100 / Math.pow(1 + this.spin_effect, 1 + this.spin_effect);\r\n                ctx.rotate(_r);\r\n            }\r\n            ctxDrawImage(ctx, img, -img.width / 4, -img.height / 4, img.width / 2, img.height / 2);\r\n            ctx.restore();\r\n        }\r\n        if (client.privateServer === 0) {\r\n            if (client.current_mode === WORLD.MODE_PVP) this.buttons[NORMAL_MODE].info.state = BUTTON_CLICK; else if (client.current_mode === WORLD.MODE_LEGACY) this.buttons[FOREST_MODE].info.state = BUTTON_CLICK; else if (client.current_mode === WORLD.MODE_ZOMBIES) this.buttons[ZOMBIE_MODE].info.state = BUTTON_CLICK; else if (client.current_mode === WORLD.MODE_VAMPIRES) this.buttons[VAMPIRE_MODE].info.state = BUTTON_CLICK; else if (client.current_mode === WORLD.MODE_COMMUNITY) this.buttons[MODE_COMMUNITY].info.state = BUTTON_CLICK; else if (client.current_mode === WORLD.MODE_EXPERIMENTAL) this.buttons[MODE_EXPERIMENTAL].info.state = BUTTON_CLICK;\r\n        }\r\n        for (var i = 1; i < this.buttons.length; i++) {\r\n            if (this.buttons[i].info.active === __DISPLAY__) this.buttons[i].draw(ctx);\r\n        }\r\n        this.bkgd[0].draw(ctx);\r\n        if ((this.current_view & (__CHANGE_NICKNAME0__ | __CHANGE_NICKNAME1__)) > 0) {\r\n            var img = this.new_nickname_img;\r\n            ctxDrawImage(ctx, img, canw2 - img.width / 4, 138, img.width / 2, img.height / 2);\r\n        }\r\n        var lvl = Math.max(1, Math.min(18, Math.floor((ui.lvl + 3) / 2)));\r\n        this.bkgd[lvl].active = __DISPLAY__;\r\n        this.bkgd[lvl].draw(ctx);\r\n        this.bkgd[lvl].active = __HIDE__;\r\n        this.buttons[0].draw(ctx);\r\n        if ((this.current_view & (__COSMETICS__ | __BAG__ | __BOOK__ | __SKIN__ | __ACCESSORY__)) > 1) {\r\n            var _x = (this.current_view & (__BAG__ | __BOOK__ | __SKIN__ | __ACCESSORY__)) > 1 ? -190 : 0;\r\n            var img = sprite[SPRITE.BAG][this.bag][this.day_mode];\r\n            ctxDrawImage(ctx, img, canw2 - img.width / 4 + _x, 183, img.width / 2, img.height / 2);\r\n            this.breath = (this.breath + delta * 1e3) % 2e3;\r\n            var v = 4.5 * (this.breath < 1e3) ? this.breath / 1e3 : (2e3 - this.breath) / 1e3;\r\n            var img = sprite[SPRITE.BOOK][this.book][this.day_mode];\r\n            ctxDrawImage(ctx, img, canw2 - img.width / 4 - 62 + v + _x, 240, img.width / 2, img.height / 2);\r\n            var img = sprite[SPRITE.HAND][this.skin][this.day_mode];\r\n            ctxDrawImage(ctx, img, canw2 - img.width / 4 - 54 + v + _x, 272, img.width / 2, img.height / 2);\r\n            ctxDrawImage(ctx, img, canw2 - img.width / 4 + 54 - v + _x, 272, img.width / 2, img.height / 2);\r\n            var img = sprite[SPRITE.BODY][this.skin][this.day_mode];\r\n            ctxDrawImage(ctx, img, canw2 - img.width / 4 + _x, 222, img.width / 2, img.height / 2);\r\n            var img = sprite[SPRITE.ACCESSORY][this.accessory][this.day_mode];\r\n            ctxDrawImage(ctx, img, canw2 - img.width / 4 + _x, 222, img.width / 2, img.height / 2);\r\n        }\r\n        if ((this.current_view & __COSMETICS__) === __COSMETICS__) {\r\n            var img = sprite[SPRITE.CRATE][this.crate][this.day_mode];\r\n            ctxDrawImage(ctx, img, canw2 - img.width / 4 - 61, 406 - img.height / 4, img.width / 2, img.height / 2);\r\n            var img = sprite[SPRITE.CRATE][this.dead][this.day_mode];\r\n            ctxDrawImage(ctx, img, canw2 - img.width / 4 + 53, 406 - img.height / 4, img.width / 2, img.height / 2);\r\n        }\r\n        if ((this.current_view & __CRATE__) === __CRATE__) {\r\n            var img = sprite[SPRITE.CRATE][this.dead][this.day_mode];\r\n            ctxDrawImage(ctx, img, canw2 - img.width / 4 - 200, 268 - img.height / 4, img.width / 2, img.height / 2);\r\n        }\r\n        if ((this.current_view & __LOOT__) === __LOOT__) {\r\n            var img = sprite[SPRITE.CRATE][this.crate][this.day_mode];\r\n            ctxDrawImage(ctx, img, canw2 - img.width / 4 - 200, 268 - img.height / 4, img.width / 2, img.height / 2);\r\n        }\r\n        if ((this.current_view & (__BAG__ | __BOOK__ | __SKIN__ | __ACCESSORY__ | __CRATE__ | __LOOT__)) > 1) {\r\n            for (var i = 1; i < this.buttons.length; i++) {\r\n                if ((this.buttons[i].view & this.current_view) === 0) continue;\r\n                var button = this.buttons[i].info;\r\n                if (button.cosmeticId >= 0) {\r\n                    var img = button.cosmeticType[button.cosmeticId].day;\r\n                    ctxDrawImage(ctx, img, button.translate.x - img.width / 8 + 44.5, button.translate.y - img.height / 8 + 45.5, img.width / 4, img.height / 4);\r\n                    if (button.unlocked !== 1) {\r\n                        var img = IMAGES.RED_LOCKED;\r\n                        ctxDrawImage(ctx, img, button.translate.x - img.width / 4 + 44.5, button.translate.y - img.height / 4 + 44.5, img.width / 2, img.height / 2);\r\n                    }\r\n                }\r\n            }\r\n            var img = this.cosmetic_name;\r\n            ctxDrawImage(ctx, img, canw2 - 312, 375, img.width / 2, img.height / 2);\r\n            var img = this.cosmetic_author;\r\n            ctxDrawImage(ctx, img, canw2 - 312, 395, img.width / 2, img.height / 2);\r\n        }\r\n        if (this.bread !== this.previous_bread) {\r\n            this.previous_bread = this.bread;\r\n            this.bread_img = gui_render_text(\"\" + this.bread, \"'Baloo Paaji', sans-serif\", \"#EFE4B4\", 60, 250);\r\n        }\r\n        ctxDrawImage(ctx, this.bread_img, this.bkgd[0].translate.x + 350, 15, this.bread_img.w2, this.bread_img.h2);\r\n        if (this.lvl !== this.previous_lvl) {\r\n            this.previous_lvl = this.lvl;\r\n            this.lvl_img = gui_render_text(\"LVL \" + (this.lvl + 1), \"'Baloo Paaji', sans-serif\", \"#EFE4B4\", 50, 250, undefined, 30, 24, undefined, undefined, undefined, undefined, \"#3F3019\", 20);\r\n        }\r\n        ctxDrawImage(ctx, this.lvl_img, this.bkgd[0].translate.x + 94, 0, this.lvl_img.w2, this.lvl_img.h2);\r\n        if (client.privateServer === 0) {\r\n            var hint = this.buttons[NORMAL_MODE].hint;\r\n            if (hint > 0) {\r\n                var img = IMAGES.NORMAL_MODE_HOVER;\r\n                ctxDrawImage(ctx, img, canw2 - img.width / 4, -36 - img.height * Utils.ease_in_out_quad(1 - hint) / 2, img.width / 2, img.height / 2);\r\n            }\r\n            var hint = this.buttons[FOREST_MODE].hint;\r\n            if (hint > 0) {\r\n                var img = IMAGES.FOREST_MODE_HOVER;\r\n                ctxDrawImage(ctx, img, canw2 - img.width / 4, -36 - img.height * Utils.ease_in_out_quad(1 - hint) / 2, img.width / 2, img.height / 2);\r\n            }\r\n            var hint = this.buttons[MODE_COMMUNITY].hint;\r\n            if (hint > 0) {\r\n                var img = IMAGES.MODE_COMMUNITY_HOVER;\r\n                ctxDrawImage(ctx, img, canw2 - img.width / 4, -36 - img.height * Utils.ease_in_out_quad(1 - hint) / 2, img.width / 2, img.height / 2);\r\n            }\r\n            var hint = this.buttons[MODE_EXPERIMENTAL].hint;\r\n            if (hint > 0) {\r\n                var img = IMAGES.MODE_EXPERIMENTAL_HOVER;\r\n                ctxDrawImage(ctx, img, canw2 - img.width / 4, -36 - img.height * Utils.ease_in_out_quad(1 - hint) / 2, img.width / 2, img.height / 2);\r\n            }\r\n            var hint = this.buttons[VAMPIRE_MODE].hint;\r\n            if (hint > 0) {\r\n                var img = IMAGES.VAMPIRE_MODE_HOVER;\r\n                ctxDrawImage(ctx, img, canw2 - img.width / 4, -36 - img.height * Utils.ease_in_out_quad(1 - hint) / 2, img.width / 2, img.height / 2);\r\n            }\r\n            var hint = this.buttons[ZOMBIE_MODE].hint;\r\n            if (hint > 0) {\r\n                var img = IMAGES.ZOMBIE_MODE_HOVER;\r\n                ctxDrawImage(ctx, img, canw2 - img.width / 4, -36 - img.height * Utils.ease_in_out_quad(1 - hint) / 2, img.width / 2, img.height / 2);\r\n            }\r\n        }\r\n        if (this.spin === 1 && Math.abs(_r - this.spin_target) < 0.006) {\r\n            ctx.globalAlpha = Math.min(1, this.spin_win_effect * 3);\r\n            var img = IMAGES.SPIN_LIGHT;\r\n            ctx.save();\r\n            ctx.translate(canw2, 260);\r\n            this.spin_win_effect += delta;\r\n            ctx.rotate(this.spin_win_effect);\r\n            ctxDrawImage(ctx, img, -img.width / 2, -img.height / 2, img.width, img.height);\r\n            ctx.restore();\r\n            var v = 1.05 + 0.05 * Math.sin(this.spin_win_effect * 5);\r\n            if (this.spin_type === 0) {\r\n                img = COSMETICS.SKIN[this.spin_win].day;\r\n                var w = v * img.width;\r\n                var h = v * img.height;\r\n                ctxDrawImage(ctx, img, canw2 - w / 2, 260 - h / 2, w, h);\r\n            } else if (this.spin_type === 1) {\r\n                img = COSMETICS.SKIN[0].day;\r\n                var w = v * img.width;\r\n                var h = v * img.height;\r\n                ctxDrawImage(ctx, img, canw2 - w / 2, 260 - h / 2, w, h);\r\n                img = COSMETICS.ACCESSORY[this.spin_win].day;\r\n                var w = v * img.width;\r\n                var h = v * img.height;\r\n                ctxDrawImage(ctx, img, canw2 - w / 2, 260 - h / 2, w, h);\r\n            } else if (this.spin_type === 2) {\r\n                img = COSMETICS.BAG[this.spin_win].day;\r\n                var w = v * img.width;\r\n                var h = v * img.height;\r\n                ctxDrawImage(ctx, img, canw2 - w / 2, 180 - h / 2, w, h);\r\n                img = COSMETICS.SKIN[0].day;\r\n                var w = v * img.width;\r\n                var h = v * img.height;\r\n                ctxDrawImage(ctx, img, canw2 - w / 2, 260 - h / 2, w, h);\r\n            } else if (this.spin_type === 3) {\r\n                img = COSMETICS.BOOK[this.spin_win].day;\r\n                var w = v * img.width;\r\n                var h = v * img.height;\r\n                ctx.save();\r\n                ctx.translate(canw2, 260);\r\n                ctx.rotate(Math.PI);\r\n                ctxDrawImage(ctx, img, -w / 2, -h / 2, w, h);\r\n                ctx.restore();\r\n            } else if (this.spin_type === 4) {\r\n                img = COSMETICS.CRATE[this.spin_win].day;\r\n                var w = v * img.width;\r\n                var h = v * img.height;\r\n                ctxDrawImage(ctx, img, canw2 - w / 2, 260 - h / 2, w, h);\r\n            }\r\n            var img = this.spin_name;\r\n            ctxDrawImage(ctx, img, canw2 - img.width / 4, 340, img.width / 2, img.height / 2);\r\n            var img = this.spin_author;\r\n            ctxDrawImage(ctx, img, canw2 - img.width / 4, 365, img.width / 2, img.height / 2);\r\n            if (this.spin_win_effect > 6) {\r\n                this.spin = 0;\r\n                select_subview(__SHOP__);\r\n            }\r\n            ctx.globalAlpha = 1;\r\n        }\r\n        user.alert.draw(\"#FFF\", \"#000\");\r\n        if (_this.waiting) this.loading.draw();\r\n    };\r\n    var COUNTER = 0;\r\n    var __GAME__ = Math.pow(2, COUNTER++);\r\n    var __PROFILE__ = Math.pow(2, COUNTER++);\r\n    this.__PROFILE__ = __PROFILE__;\r\n    var __LOGIN__ = Math.pow(2, COUNTER++);\r\n    var __COSMETICS__ = Math.pow(2, COUNTER++);\r\n    var __SHOP__ = Math.pow(2, COUNTER++);\r\n    var __TUTORIAL__ = Math.pow(2, COUNTER++);\r\n    var __LEADERBOARD__ = Math.pow(2, COUNTER++);\r\n    var __BUY__ = Math.pow(2, COUNTER++);\r\n    this.__BUY__ = __BUY__;\r\n    var __LOCKED_SKIN__ = Math.pow(2, COUNTER++);\r\n    var __LOCKED_ACC__ = Math.pow(2, COUNTER++);\r\n    var __SPIN_1__ = Math.pow(2, COUNTER++);\r\n    var __SPIN_2__ = Math.pow(2, COUNTER++);\r\n    var __SPIN_3__ = Math.pow(2, COUNTER++);\r\n    var __SPIN_4__ = Math.pow(2, COUNTER++);\r\n    var __SPIN_5__ = Math.pow(2, COUNTER++);\r\n    var __SPIN_6__ = Math.pow(2, COUNTER++);\r\n    var __SKIN__ = Math.pow(2, COUNTER++);\r\n    var __CRATE__ = Math.pow(2, COUNTER++);\r\n    var __BAG__ = Math.pow(2, COUNTER++);\r\n    var __BOOK__ = Math.pow(2, COUNTER++);\r\n    var __ACCESSORY__ = Math.pow(2, COUNTER++);\r\n    var __LOOT__ = Math.pow(2, COUNTER++);\r\n    var __CHANGE_NICKNAME1__ = Math.pow(2, COUNTER++);\r\n    var __CHANGE_NICKNAME0__ = Math.pow(2, COUNTER++);\r\n    var __SERVER_LOCATION__ = Math.pow(2, COUNTER++);\r\n    this.__SERVER_LOCATION__ = __SERVER_LOCATION__;\r\n    var __SERVER_DURATION__ = Math.pow(2, COUNTER++);\r\n    this.__SERVER_DURATION__ = __SERVER_DURATION__;\r\n    var __SERVER_ACCESS__ = Math.pow(2, COUNTER++);\r\n    this.__SERVER_ACCESS__ = __SERVER_ACCESS__;\r\n    var __SEASON5__ = Math.pow(2, COUNTER++);\r\n    this.current_view = __GAME__;\r\n    function update_subview(view, mode, _css) {\r\n        for (var i = 0; i < _this.bkgd.length; i++) {\r\n            if ((_this.bkgd[i].view & view) !== 0) _this.bkgd[i].active = mode;\r\n        }\r\n        for (var i = 0; i < _this.buttons.length; i++) {\r\n            if ((_this.buttons[i].view & view) !== 0) _this.buttons[i].info.active = mode;\r\n        }\r\n        for (var i = 0; i < _this.css.length; i++) {\r\n            if ((_this.css[i].view & view) !== 0) _this.css[i].style.display = _css;\r\n        }\r\n    }\r\n    ;\r\n    ;\r\n    var assetInfo = [];\r\n    this.hijackedAsset = 0;\r\n    function addAsset(assetName, assetSize) {\r\n        assetName = assetName.replace(\"Xday\", \"day\");\r\n        assetName = assetName.replace(\"Xnight\", \"night\");\r\n        for (var i = 0; i < assetInfo.length; i++) {\r\n            var asset = assetInfo[i];\r\n            if (asset[0] === assetName) {\r\n                if (asset[1] !== assetSize) ui.hijackedAsset = 1;\r\n                return;\r\n            }\r\n        }\r\n        assetInfo.push([assetName, assetSize]);\r\n    }\r\n    ;\r\n    function detectRedirectedAsset(assetURL) {\r\n        assetURL = assetURL.replace(\"http://starve.io\", \"https://starve.io\");\r\n        var xhr = new XMLHttpRequest;\r\n        xhr.open(\"HEAD\", assetURL, true);\r\n        xhr.onreadystatechange = function () {\r\n            if (xhr.readyState === 4) {\r\n                if (xhr.status === 200) {\r\n                    var size = Number(xhr.getResponseHeader(\"Content-Length\"));\r\n                    if (size > 0) addAsset(assetURL, size);\r\n                }\r\n            }\r\n        };\r\n        xhr.send(null);\r\n    }\r\n    ;\r\n    ;\r\n    function detectCheat() {}\r\n    ;\r\n    ;\r\n    function correct_selected_skin() {\r\n        var ct = Number(Cookies.get(\"starve_crate\"));\r\n        var dd = Number(Cookies.get(\"starve_dead\"));\r\n        var bk = Number(Cookies.get(\"starve_book\"));\r\n        var bg = Number(Cookies.get(\"starve_bag\"));\r\n        var sk = Number(Cookies.get(\"starve_skin\"));\r\n        var ac = Number(Cookies.get(\"starve_accessory\"));\r\n        if (!(ui.unlock.skin[ui.skin] > 0)) ui.skin = !(ui.unlock.skin[sk] > 0) ? 0 : sk;\r\n        if (!(ui.unlock.book[ui.book] > 0)) ui.book = !(ui.unlock.book[bk] > 0) ? 0 : bk;\r\n        if (!(ui.unlock.dead[ui.dead] > 0)) ui.dead = !(ui.unlock.dead[dd] > 0) ? 0 : dd;\r\n        if (!(ui.unlock.crate[ui.crate] > 0)) ui.crate = !(ui.unlock.crate[ct] > 0) ? 0 : ct;\r\n        if (!(ui.unlock.accessory[ui.accessory] > 0)) ui.accessory = !(ui.unlock.accessory[ac] > 0) ? 0 : ac;\r\n        if (!(ui.unlock.bag[ui.bag] > 0)) ui.bag = !(ui.unlock.bag[bg] > 0) ? 0 : bg;\r\n    }\r\n    ;\r\n    ;\r\n    function select_subview(view) {\r\n        if (_this.in_this_view === false) return;\r\n        update_subview(__LOCKED_SKIN__, __HIDE__, \"none\");\r\n        update_subview(__LOCKED_ACC__, __HIDE__, \"none\");\r\n        correct_selected_skin();\r\n        if (view === _this.current_view || _this.spin >= 1) return;\r\n        if (view === __GAME__ || view === __SHOP__ || view === __PROFILE__ || view === __LEADERBOARD__ || view === __COSMETICS__ || view === __TUTORIAL__) _this.trevda.style.display = \"inline-block\"; else _this.trevda.style.display = \"none\";\r\n        update_subview(_this.current_view, __HIDE__, \"none\");\r\n        _this.current_view = view;\r\n        update_subview(_this.current_view, __DISPLAY__, \"inline-block\");\r\n    }\r\n    ;\r\n    ;\r\n    this.select_subview = select_subview;\r\n    function play_after() {\r\n        correct_selected_skin();\r\n        if (!(___adsvid % 2) && isYolla === 1) {\r\n            window.YMPB.que.push(function () {\r\n                document.getElementById(\"preroll\").style.display = \"block\";\r\n                window.YMPB.preroll(\"preroll\", yollaCallback);\r\n            });\r\n        } else client.connect();\r\n        detectCheat();\r\n    }\r\n    ;\r\n    ;\r\n    function request(get, callbackSuccess, callbackFailure) {\r\n        const xhr = new XMLHttpRequest;\r\n        xhr.open(\"GET\", get);\r\n        xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n        xhr.onreadystatechange = function () {\r\n            if (this.readyState == 4 && this.status == 200) {\r\n                if (callbackSuccess !== undefined) callbackSuccess(xhr.responseText);\r\n            } else if (this.readyState == 4) {\r\n                if (callbackFailure !== undefined) callbackFailure();\r\n            }\r\n        };\r\n        xhr.send();\r\n    }\r\n    ;\r\n    ;\r\n    this.play_game = function () {\r\n        fetchPageViewCanidate();\r\n        if (_this.waiting === false) {\r\n            user.reconnect.enabled = false;\r\n            _this.waiting = true;\r\n            if (user.newToken) play_after(); else request(`${DB}token`, function (token) {\r\n                console.log(\"::: [iandev] /token token :::\", token);\r\n                try {\r\n                    const tokens = token.split(\"_\");\r\n                    const prefix = tokens[0] + \"_\";\r\n                    const value = Number(tokens[1]);\r\n                    const challenge = Math.abs(fun0_token(value, 8260, 46947, 8004, 37330, 5330));\r\n                    console.log(\"::: [iandev] /challenge token :::\", challenge);\r\n                    console.log(challenge);\r\n                    user.newToken = prefix + challenge;\r\n                } catch (e) {\r\n                    console.error(\"::: [iandev] /token error :::\", e);\r\n                }\r\n                play_after();\r\n            }, function () {\r\n                _this.waiting = false;\r\n            });\r\n        }\r\n    };\r\n    var __LEFT__ = 1;\r\n    var __RIGHT__ = 2;\r\n    var __TOP__ = 4;\r\n    var __BOTTOM__ = 8;\r\n    var __MIDDLE_X__ = 16;\r\n    var __MIDDLE_Y__ = 32;\r\n    var __NO_HD__ = 0;\r\n    var __HD__ = 1;\r\n    var __NO_BREATH__ = 0;\r\n    var __BREATH__ = 1;\r\n    var __HIDE__ = 0;\r\n    var __DISPLAY__ = 1;\r\n    if (window.innerWidth < 1300) {\r\n        this.nickname = {id: document.getElementById(\"nickname_block\"), style: document.getElementById(\"nickname_block\").style, input: document.getElementById(\"nickname_input\"), active: __DISPLAY__, position: __TOP__ | __LEFT__, view: __GAME__, translate: {x: 0, y: 0, _x: 200, _y: 184}};\r\n    } else {\r\n        this.nickname = {id: document.getElementById(\"nickname_block\"), style: document.getElementById(\"nickname_block\").style, input: document.getElementById(\"nickname_input\"), active: __DISPLAY__, position: __TOP__ | __MIDDLE_X__, view: __GAME__, translate: {x: 0, y: 0, _x: -180, _y: 184}};\r\n    }\r\n    this.nickname.id.addEventListener(\"keyup\", function (event) {\r\n        event.preventDefault();\r\n        if (event.keyCode == 13 && !_this.waiting && !_this.settings) _this.play_game();\r\n    });\r\n    this.nickname.input.value = Cookies.get(\"starve_nickname\") ? Cookies.get(\"starve_nickname\") : \"\";\r\n    this.account_nickname = {id: document.getElementById(\"account_nickname_block\"), style: document.getElementById(\"account_nickname_block\").style, input: document.getElementById(\"account_nickname_input\"), active: __HIDE__, position: __TOP__ | __MIDDLE_X__, view: __PROFILE__, translate: {x: 0, y: 0, _x: -122, _y: 110}};\r\n    if (window.innerWidth < 1300) this.server_list = {id: document.getElementById(\"servselect\"), style: document.getElementById(\"servselect\").style, active: __DISPLAY__, position: __TOP__ | __LEFT__, view: __GAME__, translate: {x: 0, y: 0, _x: 208, _y: 225}}; else this.server_list = {id: document.getElementById(\"servselect\"), style: document.getElementById(\"servselect\").style, active: __DISPLAY__, position: __TOP__ | __MIDDLE_X__, view: __GAME__, translate: {x: 0, y: 0, _x: -180, _y: 225}};\r\n    this.leaderboard = {id: document.getElementById(\"leaderboard\"), style: document.getElementById(\"leaderboard\").style, active: __HIDE__, position: __TOP__ | __MIDDLE_X__, view: __LEADERBOARD__, translate: {x: 0, y: 0, _x: -294.5, _y: 190}};\r\n    this.stats_box = {id: document.getElementById(\"stats_box\"), style: document.getElementById(\"stats_box\").style, active: __HIDE__, position: __TOP__ | __MIDDLE_X__, view: __PROFILE__, translate: {x: 0, y: 0, _x: 125, _y: 187}};\r\n    this.serverAddressBlock = {id: document.getElementById(\"serverAddressBlock\"), style: document.getElementById(\"serverAddressBlock\").style, input: document.getElementById(\"serverAddressInput\"), active: __HIDE__, position: __TOP__ | __MIDDLE_X__, view: __SERVER_ACCESS__, translate: {x: 0, y: 0, _x: -220, _y: 350}};\r\n    COUNTER = 0;\r\n    this.css = [];\r\n    this.css[COUNTER++] = this.nickname;\r\n    this.css[COUNTER++] = this.server_list;\r\n    this.css[COUNTER++] = this.leaderboard;\r\n    this.css[COUNTER++] = this.account_nickname;\r\n    this.css[COUNTER++] = this.stats_box;\r\n    this.css[COUNTER++] = this.serverAddressBlock;\r\n    COUNTER = 0;\r\n    this.bkgd = [];\r\n    this.bkgd[COUNTER++] = gui_create_image_hd(IMAGES.AVATAR_RESUME, __DISPLAY__, 0, 0, __LEFT__);\r\n    this.bkgd[COUNTER++] = gui_create_image_hd(IMAGES.AVATAR_LVL1, __HIDE__, 0, 0, __LEFT__);\r\n    this.bkgd[COUNTER++] = gui_create_image_hd(IMAGES.AVATAR_LVL2, __HIDE__, 0, 0, __LEFT__);\r\n    this.bkgd[COUNTER++] = gui_create_image_hd(IMAGES.AVATAR_LVL3, __HIDE__, 0, 0, __LEFT__);\r\n    this.bkgd[COUNTER++] = gui_create_image_hd(IMAGES.AVATAR_LVL4, __HIDE__, 0, 0, __LEFT__);\r\n    this.bkgd[COUNTER++] = gui_create_image_hd(IMAGES.AVATAR_LVL5, __HIDE__, 0, 0, __LEFT__);\r\n    this.bkgd[COUNTER++] = gui_create_image_hd(IMAGES.AVATAR_LVL6, __HIDE__, 0, 0, __LEFT__);\r\n    this.bkgd[COUNTER++] = gui_create_image_hd(IMAGES.AVATAR_LVL7, __HIDE__, 0, 0, __LEFT__);\r\n    this.bkgd[COUNTER++] = gui_create_image_hd(IMAGES.AVATAR_LVL8, __HIDE__, 0, 0, __LEFT__);\r\n    this.bkgd[COUNTER++] = gui_create_image_hd(IMAGES.AVATAR_LVL9, __HIDE__, 0, 0, __LEFT__);\r\n    this.bkgd[COUNTER++] = gui_create_image_hd(IMAGES.AVATAR_LVL10, __HIDE__, 0, 0, __LEFT__);\r\n    this.bkgd[COUNTER++] = gui_create_image_hd(IMAGES.AVATAR_LVL11, __HIDE__, 0, 0, __LEFT__);\r\n    this.bkgd[COUNTER++] = gui_create_image_hd(IMAGES.AVATAR_LVL12, __HIDE__, 0, 0, __LEFT__);\r\n    this.bkgd[COUNTER++] = gui_create_image_hd(IMAGES.AVATAR_LVL13, __HIDE__, 0, 0, __LEFT__);\r\n    this.bkgd[COUNTER++] = gui_create_image_hd(IMAGES.AVATAR_LVL14, __HIDE__, 0, 0, __LEFT__);\r\n    this.bkgd[COUNTER++] = gui_create_image_hd(IMAGES.AVATAR_LVL15, __HIDE__, 0, 0, __LEFT__);\r\n    this.bkgd[COUNTER++] = gui_create_image_hd(IMAGES.AVATAR_LVL16, __HIDE__, 0, 0, __LEFT__);\r\n    this.bkgd[COUNTER++] = gui_create_image_hd(IMAGES.AVATAR_LVL17, __HIDE__, 0, 0, __LEFT__);\r\n    this.bkgd[COUNTER++] = gui_create_image_hd(IMAGES.AVATAR_LVL18, __HIDE__, 0, 0, __LEFT__);\r\n    if (window.innerWidth < 1300) this.bkgd[COUNTER] = gui_create_image_hd(IMAGES.LOGO_INTERFACE, __DISPLAY__, 200, 100, __TOP__ | __LEFT__); else this.bkgd[COUNTER] = gui_create_image_hd(IMAGES.LOGO_INTERFACE, __DISPLAY__, -188.25, 100, __TOP__ | __MIDDLE_X__);\r\n    this.bkgd[COUNTER++].view = __GAME__;\r\n    this.bkgd[COUNTER++] = gui_create_image_hd(IMAGES.LINKS_BG, __DISPLAY__, 353, -10, __RIGHT__);\r\n    if (window.innerWidth > 1300) {\r\n        this.bkgd[COUNTER] = gui_create_image_hd(IMAGES.CHANGELOG_BOX, __DISPLAY__, -221.25, -159.5, __BOTTOM__ | __MIDDLE_X__);\r\n        this.bkgd[COUNTER++].view = __GAME__;\r\n    }\r\n    this.bkgd[COUNTER] = gui_create_image_hd(IMAGES.PROFILE_BOX, __HIDE__, -323.25, 100, __TOP__ | __MIDDLE_X__);\r\n    this.bkgd[COUNTER++].view = __PROFILE__;\r\n    this.bkgd[COUNTER] = gui_create_image_hd(IMAGES.SKINS_BOX, __HIDE__, -356.25, 100, __TOP__ | __MIDDLE_X__);\r\n    this.bkgd[COUNTER++].view = __COSMETICS__;\r\n    this.bkgd[COUNTER] = gui_create_image_hd(IMAGES.ACCOUNT_BOX, __HIDE__, -226.25, 50, __TOP__ | __MIDDLE_X__);\r\n    this.bkgd[COUNTER++].view = __LOGIN__;\r\n    this.bkgd[COUNTER] = gui_create_image_hd(IMAGES.SHOP_BOX, __HIDE__, -402, 130, __TOP__ | __MIDDLE_X__);\r\n    this.bkgd[COUNTER++].view = __SHOP__;\r\n    this.bkgd[COUNTER] = gui_create_image_hd(IMAGES.SERVER_LOCATION_BOX, __HIDE__, -279.25, 130, __TOP__ | __MIDDLE_X__);\r\n    this.bkgd[COUNTER++].view = __SERVER_LOCATION__;\r\n    this.bkgd[COUNTER] = gui_create_image_hd(IMAGES.SERVER_DURATION_BOX, __HIDE__, -305.5, 130, __TOP__ | __MIDDLE_X__);\r\n    this.bkgd[COUNTER++].view = __SERVER_DURATION__;\r\n    this.bkgd[COUNTER] = gui_create_image_hd(IMAGES.SERVER_ACCESS_BOX, __HIDE__, -305.5, 100, __TOP__ | __MIDDLE_X__);\r\n    this.bkgd[COUNTER++].view = __SERVER_ACCESS__;\r\n    this.bkgd[COUNTER] = gui_create_image_hd(IMAGES.SEASON5_BOX, __HIDE__, -IMAGES.SEASON5_BOX.width / 4 - 350, -15, __TOP__ | __MIDDLE_X__);\r\n    this.bkgd[COUNTER++].view = __SEASON5__;\r\n    this.bkgd[COUNTER] = gui_create_image_hd(IMAGES.TUTORIAL_BOX, __HIDE__, -374.25, 110, __TOP__ | __MIDDLE_X__);\r\n    this.bkgd[COUNTER++].view = __TUTORIAL__;\r\n    this.bkgd[COUNTER] = gui_create_image_hd(IMAGES.LEADERBOARD_BOX, __HIDE__, -306.5, 100, __TOP__ | __MIDDLE_X__);\r\n    this.bkgd[COUNTER++].view = __LEADERBOARD__;\r\n    this.bkgd[COUNTER] = gui_create_image_hd(IMAGES.BUY_BREAD_BOX, __HIDE__, -345.25, 80, __TOP__ | __MIDDLE_X__);\r\n    this.bkgd[COUNTER++].view = __BUY__;\r\n    this.bkgd[COUNTER] = gui_create_image_hd(IMAGES.SPIN1, __HIDE__, -385.5, 150, __TOP__ | __MIDDLE_X__);\r\n    this.bkgd[COUNTER++].view = __SPIN_1__;\r\n    var DEG = 3.6;\r\n    var spinImg = this.create_spin([[\"#25c5d6\", DEG * 3], [\"#e2cf27\", DEG * 10], [\"#afac98\", DEG * 30], [\"#d88e23\", DEG * 57]]);\r\n    this.bkgd[COUNTER] = gui_create_image_hd(spinImg, __HIDE__, -spinImg.width / 4, 178, __TOP__ | __MIDDLE_X__);\r\n    this.bkgd[COUNTER++].view = __SPIN_1__;\r\n    this.play_spin = function (_target, type, win) {\r\n        _this.spin = 1;\r\n        _this.spin_effect = 0;\r\n        _this.spin_win_effect = 0;\r\n        _this.spin_target = _target;\r\n        _this.spin_type = type;\r\n        var info;\r\n        var i = 0;\r\n        if (type === 0) {\r\n            for (i = 0; i < COSMETICS.SKIN.length; i++) {\r\n                if (win === COSMETICS.SKIN[i].id) break;\r\n            }\r\n            info = COSMETICS.SKIN[i];\r\n            _this.unlock.skin[i] = 1;\r\n        } else if (type === 1) {\r\n            for (i = 0; i < COSMETICS.ACCESSORY.length; i++) {\r\n                if (win === COSMETICS.ACCESSORY[i].id) break;\r\n            }\r\n            info = COSMETICS.ACCESSORY[i];\r\n            _this.unlock.accessory[i] = 1;\r\n        } else if (type === 2) {\r\n            for (i = 0; i < COSMETICS.BAG.length; i++) {\r\n                if (win === COSMETICS.BAG[i].id) break;\r\n            }\r\n            info = COSMETICS.BAG[i];\r\n            _this.unlock.bag[i] = 1;\r\n        } else if (type === 3) {\r\n            for (i = 0; i < COSMETICS.BOOK.length; i++) {\r\n                if (win === COSMETICS.BOOK[i].id) break;\r\n            }\r\n            info = COSMETICS.BOOK[i];\r\n            _this.unlock.book[i] = 1;\r\n        } else if (type === 4) {\r\n            for (i = 0; i < COSMETICS.CRATE.length; i++) {\r\n                if (win === COSMETICS.CRATE[i].id) break;\r\n            }\r\n            info = COSMETICS.CRATE[i];\r\n            _this.unlock.crate[i] = 1;\r\n            _this.unlock.dead[i] = 1;\r\n        }\r\n        _this.spin_win = i;\r\n        _this.spin_author = gui_render_text(\"by \" + info.author, \"'Baloo Paaji', sans-serif\", \"#EFE4B4\", 40, 500, undefined, 30, 24, undefined, undefined, undefined, undefined, \"#000000\", 24);\r\n        _this.spin_name = gui_render_text(info.name, \"'Baloo Paaji', sans-serif\", \"#EFE4B4\", 60, 600, undefined, 30, 24, undefined, undefined, undefined, undefined, \"#000000\", 20);\r\n    };\r\n    this.spin = 0;\r\n    this.spin_effect = 0;\r\n    this.spin_target = 0;\r\n    this.spin_type = 0;\r\n    this.spin_win_effect = 0;\r\n    this.spin_author = undefined;\r\n    this.spin_name = undefined;\r\n    var SPIN_TOP = 197;\r\n    var SPIN_CENTER = -65;\r\n    this.bkgd[COUNTER] = gui_create_image_hd(IMAGES.SPIN2, __HIDE__, -385.5, 150, __TOP__ | __MIDDLE_X__);\r\n    this.bkgd[COUNTER++].view = __SPIN_5__;\r\n    var spinImg = this.create_spin([[\"#d45ce5\", DEG * 3], [\"#25c5d6\", DEG * 10], [\"#e2cf27\", DEG * 30], [\"#afac98\", DEG * 57]]);\r\n    this.bkgd[COUNTER] = gui_create_image_hd(spinImg, __HIDE__, -spinImg.width / 4, 178, __TOP__ | __MIDDLE_X__);\r\n    this.bkgd[COUNTER++].view = __SPIN_5__;\r\n    this.bkgd[COUNTER] = gui_create_image_hd(IMAGES.SPIN3, __HIDE__, -385.5, 150, __TOP__ | __MIDDLE_X__);\r\n    this.bkgd[COUNTER++].view = __SPIN_3__;\r\n    var spinImg = this.create_spin([[\"#d33a2a\", DEG * 3], [\"#d45ce5\", DEG * 10], [\"#25c5d6\", DEG * 30], [\"#e2cf27\", DEG * 57]]);\r\n    this.bkgd[COUNTER] = gui_create_image_hd(spinImg, __HIDE__, -spinImg.width / 4, 178, __TOP__ | __MIDDLE_X__);\r\n    this.bkgd[COUNTER++].view = __SPIN_3__;\r\n    this.bkgd[COUNTER] = gui_create_image_hd(IMAGES.SPIN4, __HIDE__, -385.5, 150, __TOP__ | __MIDDLE_X__);\r\n    this.bkgd[COUNTER++].view = __SPIN_4__;\r\n    var spinImg = this.create_spin([[\"#25c5d6\", DEG * 3], [\"#e2cf27\", DEG * 10], [\"#afac98\", DEG * 30], [\"#d88e23\", DEG * 57]]);\r\n    this.bkgd[COUNTER] = gui_create_image_hd(spinImg, __HIDE__, -spinImg.width / 4, 178, __TOP__ | __MIDDLE_X__);\r\n    this.bkgd[COUNTER++].view = __SPIN_4__;\r\n    this.bkgd[COUNTER] = gui_create_image_hd(IMAGES.SPIN5, __HIDE__, -385.5, 150, __TOP__ | __MIDDLE_X__);\r\n    this.bkgd[COUNTER++].view = __SPIN_2__;\r\n    var spinImg = this.create_spin([[\"#d45ce5\", DEG * 3], [\"#25c5d6\", DEG * 10], [\"#e2cf27\", DEG * 30], [\"#afac98\", DEG * 57]]);\r\n    this.bkgd[COUNTER] = gui_create_image_hd(spinImg, __HIDE__, -spinImg.width / 4, 178, __TOP__ | __MIDDLE_X__);\r\n    this.bkgd[COUNTER++].view = __SPIN_2__;\r\n    this.bkgd[COUNTER] = gui_create_image_hd(IMAGES.SPIN6, __HIDE__, -385.5, 150, __TOP__ | __MIDDLE_X__);\r\n    this.bkgd[COUNTER++].view = __SPIN_6__;\r\n    var spinImg = this.create_spin([[\"#d33a2a\", DEG * 3], [\"#d45ce5\", DEG * 10], [\"#25c5d6\", DEG * 30], [\"#e2cf27\", DEG * 57]]);\r\n    this.bkgd[COUNTER] = gui_create_image_hd(spinImg, __HIDE__, -spinImg.width / 4, 178, __TOP__ | __MIDDLE_X__);\r\n    this.bkgd[COUNTER++].view = __SPIN_6__;\r\n    this.bkgd[COUNTER] = gui_create_image_hd(IMAGES.CUSTOM_SKIN_BOX, __HIDE__, -341.5, 100, __TOP__ | __MIDDLE_X__);\r\n    this.bkgd[COUNTER++].view = __SKIN__;\r\n    this.bkgd[COUNTER] = gui_create_image_hd(IMAGES.ACCESSORIES_BOX, __HIDE__, -341.5, 100, __TOP__ | __MIDDLE_X__);\r\n    this.bkgd[COUNTER++].view = __ACCESSORY__;\r\n    this.bkgd[COUNTER] = gui_create_image_hd(IMAGES.BAG_BOX, __HIDE__, -341.5, 100, __TOP__ | __MIDDLE_X__);\r\n    this.bkgd[COUNTER++].view = __BAG__;\r\n    this.bkgd[COUNTER] = gui_create_image_hd(IMAGES.BOOK_BOX, __HIDE__, -341.5, 100, __TOP__ | __MIDDLE_X__);\r\n    this.bkgd[COUNTER++].view = __BOOK__;\r\n    this.bkgd[COUNTER] = gui_create_image_hd(IMAGES.CRATE_BOX, __HIDE__, -341.5, 100, __TOP__ | __MIDDLE_X__);\r\n    this.bkgd[COUNTER++].view = __CRATE__;\r\n    this.bkgd[COUNTER] = gui_create_image_hd(IMAGES.LOOT_BOX, __HIDE__, -341.5, 100, __TOP__ | __MIDDLE_X__);\r\n    this.bkgd[COUNTER++].view = __LOOT__;\r\n    BAG_REMAIN_BOX = COUNTER++;\r\n    this.bkgd[BAG_REMAIN_BOX] = gui_create_image_hd(IMAGES.BAG_REMAIN_BOX, __HIDE__, 484, 0, __TOP__);\r\n    SERVER_REMAIN_BOX = COUNTER++;\r\n    this.bkgd[SERVER_REMAIN_BOX] = gui_create_image_hd(IMAGES.SERVER_REMAIN_BOX, __HIDE__, 812.5, 0, __TOP__);\r\n    this.bkgd[COUNTER] = gui_create_image_hd(IMAGES.LOCKED_CUSTOM_ALERT, __HIDE__, -189.5, -5, __TOP__ | __MIDDLE_X__);\r\n    this.bkgd[COUNTER++].view = __LOCKED_ACC__;\r\n    this.bkgd[COUNTER] = gui_create_image_hd(IMAGES.LOCKED_SKIN_ALERT, __HIDE__, -189.5, -5, __TOP__ | __MIDDLE_X__);\r\n    this.bkgd[COUNTER++].view = __LOCKED_SKIN__;\r\n    LEVEL_GAUGE = COUNTER++;\r\n    this.bkgd[LEVEL_GAUGE] = gui_create_image_hd(IMAGES.GAUGE, __DISPLAY__, 93, 30, __TOP__);\r\n    this.bkgd[COUNTER] = gui_create_image_hd(IMAGES.CHANGE_NICKNAME1_BOX, __HIDE__, -173, 110, __TOP__ | __MIDDLE_X__);\r\n    this.bkgd[COUNTER++].view = __CHANGE_NICKNAME1__;\r\n    this.bkgd[COUNTER] = gui_create_image_hd(IMAGES.CHANGE_NICKNAME0_BOX, __HIDE__, -173, 110, __TOP__ | __MIDDLE_X__);\r\n    this.bkgd[COUNTER++].view = __CHANGE_NICKNAME0__;\r\n    COUNTER = 0;\r\n    this.buttons = [];\r\n    this.buttons[COUNTER++] = gui_create_button(50, 57, \"\", [IMAGES.BUY_BREAD_OUT, IMAGES.BUY_BREAD_IN, IMAGES.BUY_BREAD_CLICK], __HD__, __NO_BREATH__, function () {\r\n        if (_this.isUserLogged()) select_subview(__BUY__); else select_subview(__LOGIN__);\r\n    }, 320, 0, __LEFT__, __DISPLAY__);\r\n    if (window.innerWidth < 1300) this.buttons[COUNTER] = gui_create_button(202, 97, \"\", [IMAGES.PLAY_BUTTON_OUT, IMAGES.PLAY_BUTTON_IN, IMAGES.PLAY_BUTTON_CLICK], __HD__, __NO_BREATH__, this.play_game, 462, 235, __TOP__ | __LEFT__, __DISPLAY__); else this.buttons[COUNTER] = gui_create_button(202, 97, \"\", [IMAGES.PLAY_BUTTON_OUT, IMAGES.PLAY_BUTTON_IN, IMAGES.PLAY_BUTTON_CLICK], __HD__, __NO_BREATH__, this.play_game, 74, 235, __TOP__ | __MIDDLE_X__, __DISPLAY__);\r\n    this.buttons[COUNTER++].view = __GAME__;\r\n    if (window.innerWidth > 1300) {\r\n        this.buttons[COUNTER] = gui_create_button(355, 168, \"\", [IMAGES.CHANGELOG_BUTTON_OUT, IMAGES.CHANGELOG_BUTTON_OUT, IMAGES.CHANGELOG_BUTTON_OUT], __HD__, __NO_BREATH__, function () {\r\n            window.open(\"./changelog.html\", \"_blank\");\r\n        }, -195, -115, __BOTTOM__ | __MIDDLE_X__, __DISPLAY__);\r\n        this.buttons[COUNTER++].view = __GAME__;\r\n        this.buttons[COUNTER] = gui_create_button(355, 168, \"\", [IMAGES.DEVASTIO_BUTTON_OUT, IMAGES.DEVASTIO_BUTTON_OUT, IMAGES.DEVASTIO_BUTTON_OUT], __HD__, __NO_BREATH__, function () {\r\n            window.open(\"https://devast.io\", \"_blank\");\r\n        }, 20, -115, __BOTTOM__ | __MIDDLE_X__, __DISPLAY__);\r\n        this.buttons[COUNTER++].view = __GAME__;\r\n    }\r\n    this.buttons[COUNTER++] = gui_create_button(80, 80, \"\", [IMAGES.DISCORD_BUTTON_OUT, IMAGES.DISCORD_BUTTON_IN, IMAGES.DISCORD_BUTTON_CLICK], __HD__, __NO_BREATH__, function () {\r\n        window.open(\"https://discord.gg/starveio\", \"_blank\");\r\n    }, 330, 10, __RIGHT__, __DISPLAY__);\r\n    this.buttons[COUNTER++] = gui_create_button(80, 80, \"\", [IMAGES.REDDIT_BUTTON_OUT, IMAGES.REDDIT_BUTTON_IN, IMAGES.REDDIT_BUTTON_CLICK], __HD__, __NO_BREATH__, function () {\r\n        window.open(\"https://reddit.com/r/starveio\", \"_blank\");\r\n    }, 280, 10, __RIGHT__, __DISPLAY__);\r\n    this.buttons[COUNTER++] = gui_create_button(80, 80, \"\", [IMAGES.WIKI_BUTTON_OUT, IMAGES.WIKI_BUTTON_IN, IMAGES.WIKI_BUTTON_CLICK], __HD__, __NO_BREATH__, function () {\r\n        window.open(\"https://starveiopro.wikia.com/wiki/\", \"_blank\");\r\n    }, 230, 10, __RIGHT__, __DISPLAY__);\r\n    this.buttons[COUNTER++] = gui_create_button(80, 80, \"\", [IMAGES.FACEBOOK_BUTTON_OUT, IMAGES.FACEBOOK_BUTTON_IN, IMAGES.FACEBOOK_BUTTON_CLICK], __HD__, __NO_BREATH__, function () {\r\n        window.open(\"https://www.facebook.com/pages/category/Video-Game/limaxio-571818073000979/\", \"_blank\");\r\n    }, 155, 10, __RIGHT__, __DISPLAY__);\r\n    this.buttons[COUNTER++] = gui_create_button(80, 80, \"\", [IMAGES.TWITTER_BUTTON_OUT, IMAGES.TWITTER_BUTTON_IN, IMAGES.TWITTER_BUTTON_CLICK], __HD__, __NO_BREATH__, function () {\r\n        window.open(\"https://twitter.com/lapamauve\", \"_blank\");\r\n    }, 105, 10, __RIGHT__, __DISPLAY__);\r\n    this.buttons[COUNTER++] = gui_create_button(80, 80, \"\", [IMAGES.YOUTUBE_BUTTON_OUT, IMAGES.YOUTUBE_BUTTON_IN, IMAGES.YOUTUBE_BUTTON_CLICK], __HD__, __NO_BREATH__, function () {\r\n        window.open(\"https://youtube.com/c/lapamauve\", \"_blank\");\r\n    }, 55, 10, __RIGHT__, __DISPLAY__);\r\n    LEADERBOARD_BUTTON = COUNTER++;\r\n    this.buttons[LEADERBOARD_BUTTON] = gui_create_button(232, 142, \"\", [IMAGES.ICONS_BOTTOM_BG_BUTTON_OUT, IMAGES.ICONS_BOTTOM_BG_BUTTON_IN, IMAGES.ICONS_BOTTOM_BG_BUTTON_CLICK], __HD__, __NO_BREATH__, function () {\r\n        select_subview(__LEADERBOARD__);\r\n        getLeaderboard(ui.LEADERBOARD_ALL, ui.LEADERBOARD_TOTAL, ui.LEADERBOARD_SCORE, ui.LEADERBOARD_SEASON5);\r\n    }, -5, 573, __LEFT__, __DISPLAY__);\r\n    this.buttons[COUNTER++] = gui_create_button(236, 165, \"\", [IMAGES.LEADERBOARD_ICON, IMAGES.LEADERBOARD_ICON, IMAGES.LEADERBOARD_ICON], __HD__, __BREATH__, function () {\r\n        select_subview(__LEADERBOARD__);\r\n    }, -5, 566, __LEFT__, __DISPLAY__);\r\n    TUTORIAL_BUTTON = COUNTER++;\r\n    this.buttons[TUTORIAL_BUTTON] = gui_create_button(236, 165, \"\", [IMAGES.ICONS_BG_BUTTON_OUT, IMAGES.ICONS_BG_BUTTON_IN, IMAGES.ICONS_BG_BUTTON_CLICK], __HD__, __NO_BREATH__, function () {\r\n        select_subview(__TUTORIAL__);\r\n    }, -5, 494, __LEFT__, __DISPLAY__);\r\n    this.buttons[COUNTER++] = gui_create_button(236, 165, \"\", [IMAGES.TUTORIAL_ICON, IMAGES.TUTORIAL_ICON, IMAGES.TUTORIAL_ICON], __HD__, __BREATH__, function () {\r\n        select_subview(__TUTORIAL__);\r\n    }, -5, 494, __LEFT__, __DISPLAY__);\r\n    SERVER_BUTTON = COUNTER++;\r\n    this.buttons[SERVER_BUTTON] = gui_create_button(236, 165, \"\", [IMAGES.ICONS_BG_BUTTON_OUT, IMAGES.ICONS_BG_BUTTON_IN, IMAGES.ICONS_BG_BUTTON_CLICK], __HD__, __NO_BREATH__, function () {\r\n        if (_this.isUserLogged()) {\r\n            if (ui.privateServerTime - Date.now() > 0) select_subview(__SERVER_ACCESS__);\r\n        } else select_subview(__LOGIN__);\r\n    }, -5, 415, __LEFT__, __DISPLAY__);\r\n    this.buttons[COUNTER++] = gui_create_button(236, 165, \"\", [IMAGES.SERVER_ACCESS_ICON, IMAGES.SERVER_ACCESS_ICON, IMAGES.SERVER_ACCESS_ICON], __HD__, __BREATH__, function () {\r\n        if (_this.isUserLogged()) {\r\n            if (ui.privateServerTime - Date.now() > 0) select_subview(__SERVER_ACCESS__);\r\n        } else select_subview(__LOGIN__);\r\n    }, -5, 415, __LEFT__, __DISPLAY__);\r\n    SHOP_BUTTON = COUNTER++;\r\n    this.buttons[SHOP_BUTTON] = gui_create_button(236, 165, \"\", [IMAGES.ICONS_BG_BUTTON_OUT, IMAGES.ICONS_BG_BUTTON_IN, IMAGES.ICONS_BG_BUTTON_CLICK], __HD__, __NO_BREATH__, function () {\r\n        select_subview(__SHOP__);\r\n    }, -5, 336, __LEFT__, __DISPLAY__);\r\n    this.buttons[COUNTER++] = gui_create_button(236, 165, \"\", [IMAGES.SHOP_ICON, IMAGES.SHOP_ICON, IMAGES.SHOP_ICON], __HD__, __BREATH__, function () {\r\n        select_subview(__SHOP__);\r\n    }, -5, 336, __LEFT__, __DISPLAY__);\r\n    COSMETICS_BUTTON = COUNTER++;\r\n    this.buttons[COSMETICS_BUTTON] = gui_create_button(236, 165, \"\", [IMAGES.ICONS_BG_BUTTON_OUT, IMAGES.ICONS_BG_BUTTON_IN, IMAGES.ICONS_BG_BUTTON_CLICK], __HD__, __NO_BREATH__, function () {\r\n        select_subview(__COSMETICS__);\r\n    }, -5, 257, __LEFT__, __DISPLAY__);\r\n    this.buttons[COUNTER++] = gui_create_button(236, 165, \"\", [IMAGES.SKINS_ICON, IMAGES.SKINS_ICON, IMAGES.SKINS_ICON], __HD__, __BREATH__, function () {\r\n        select_subview(__COSMETICS__);\r\n    }, -5, 257, __LEFT__, __DISPLAY__);\r\n    GAME_BUTTON = COUNTER++;\r\n    this.buttons[GAME_BUTTON] = gui_create_button(236, 165, \"\", [IMAGES.ICONS_BG_BUTTON_OUT, IMAGES.ICONS_BG_BUTTON_IN, IMAGES.ICONS_BG_BUTTON_CLICK], __HD__, __NO_BREATH__, function () {\r\n        select_subview(__GAME__);\r\n    }, -5, 178, __LEFT__, __DISPLAY__);\r\n    this.buttons[COUNTER++] = gui_create_button(236, 165, \"\", [IMAGES.START_ICON, IMAGES.START_ICON, IMAGES.START_ICON], __HD__, __BREATH__, function () {\r\n        select_subview(__GAME__);\r\n    }, -5, 178, __LEFT__, __DISPLAY__);\r\n    LOGIN_BUTTON = COUNTER++;\r\n    this.LOGIN_BUTTON = LOGIN_BUTTON;\r\n    this.buttons[LOGIN_BUTTON] = gui_create_button(324, 222, \"\", [IMAGES.LOGIN_BUTTON_OUT, IMAGES.LOGIN_BUTTON_IN, IMAGES.LOGIN_BUTTON_CLICK], __HD__, __NO_BREATH__, function () {\r\n        select_subview(__LOGIN__);\r\n    }, 0, 70, __LEFT__, __DISPLAY__);\r\n    PROFILE_BUTTON = COUNTER++;\r\n    PROFILE_BUTTON_2 = COUNTER++;\r\n    this.PROFILE_BUTTON = PROFILE_BUTTON;\r\n    this.PROFILE_BUTTON_2 = PROFILE_BUTTON_2;\r\n    this.buttons[PROFILE_BUTTON] = gui_create_button(324, 222, \"\", [IMAGES.PROFILE_BUTTON_OUT, IMAGES.PROFILE_BUTTON_IN, IMAGES.PROFILE_BUTTON_CLICK], __HD__, __NO_BREATH__, function () {\r\n        select_subview(__PROFILE__);\r\n        init_profile(-1);\r\n    }, 0, 70, __LEFT__, __HIDE__);\r\n    this.buttons[PROFILE_BUTTON_2] = gui_create_button(324, 222, \"\", [IMAGES.PROFILE_ICON, IMAGES.PROFILE_ICON, IMAGES.PROFILE_ICON], __HD__, __BREATH__, function () {\r\n        select_subview(__PROFILE__);\r\n        init_profile(-1);\r\n    }, 0, 70, __LEFT__, __HIDE__);\r\n    if (client.privateServer === 0) {\r\n        var NORMAL_MODE = COUNTER++;\r\n        if (window.innerWidth < 1300) this.buttons[NORMAL_MODE] = gui_create_button(266, 176, \"\", [IMAGES.NORMAL_MODE_OUT, IMAGES.NORMAL_MODE_IN, IMAGES.NORMAL_MODE_CLICK], __HD__, __NO_BREATH__, function () {\r\n            client.select_gamemode(WORLD.MODE_PVP);\r\n        }, 150, 300, __LEFT__ | __TOP__, __DISPLAY__); else this.buttons[NORMAL_MODE] = gui_create_button(266, 176, \"\", [IMAGES.NORMAL_MODE_OUT, IMAGES.NORMAL_MODE_IN, IMAGES.NORMAL_MODE_CLICK], __HD__, __NO_BREATH__, function () {\r\n            client.select_gamemode(WORLD.MODE_PVP);\r\n        }, -340, 100, __MIDDLE_X__ | __TOP__, __DISPLAY__);\r\n        this.buttons[NORMAL_MODE].view = __GAME__;\r\n        this.buttons[NORMAL_MODE].hint = 0;\r\n        var FOREST_MODE = COUNTER++;\r\n        if (window.innerWidth < 1300) this.buttons[FOREST_MODE] = gui_create_button(266, 176, \"\", [IMAGES.FOREST_MODE_OUT, IMAGES.FOREST_MODE_IN, IMAGES.FOREST_MODE_CLICK], __HD__, __NO_BREATH__, function () {\r\n            client.select_gamemode(WORLD.MODE_LEGACY);\r\n        }, 150, 400, __LEFT__ | __TOP__, __DISPLAY__); else this.buttons[FOREST_MODE] = gui_create_button(266, 176, \"\", [IMAGES.FOREST_MODE_OUT, IMAGES.FOREST_MODE_IN, IMAGES.FOREST_MODE_CLICK], __HD__, __NO_BREATH__, function () {\r\n            client.select_gamemode(WORLD.MODE_LEGACY);\r\n        }, -340, 200, __MIDDLE_X__ | __TOP__, __DISPLAY__);\r\n        this.buttons[FOREST_MODE].view = __GAME__;\r\n        this.buttons[FOREST_MODE].hint = 0;\r\n        var MODE_COMMUNITY = COUNTER++;\r\n        if (window.innerWidth < 1300) this.buttons[MODE_COMMUNITY] = gui_create_button(266, 176, \"\", [IMAGES.MODE_COMMUNITY_OUT, IMAGES.MODE_COMMUNITY_IN, IMAGES.MODE_COMMUNITY_CLICK], __HD__, __NO_BREATH__, function () {\r\n            client.select_gamemode(WORLD.MODE_COMMUNITY);\r\n        }, 450, 300, __LEFT__ | __TOP__, __DISPLAY__); else this.buttons[MODE_COMMUNITY] = gui_create_button(266, 176, \"\", [IMAGES.MODE_COMMUNITY_OUT, IMAGES.MODE_COMMUNITY_IN, IMAGES.MODE_COMMUNITY_CLICK], __HD__, __NO_BREATH__, function () {\r\n            client.select_gamemode(WORLD.MODE_COMMUNITY);\r\n        }, -340, 300, __MIDDLE_X__ | __TOP__, __DISPLAY__);\r\n        this.buttons[MODE_COMMUNITY].view = __GAME__;\r\n        this.buttons[MODE_COMMUNITY].hint = 0;\r\n        var ZOMBIE_MODE = COUNTER++;\r\n        if (window.innerWidth < 1300) this.buttons[ZOMBIE_MODE] = gui_create_button(266, 176, \"\", [IMAGES.ZOMBIE_MODE_OUT, IMAGES.ZOMBIE_MODE_IN, IMAGES.ZOMBIE_MODE_CLICK], __HD__, __NO_BREATH__, function () {\r\n            client.select_gamemode(WORLD.MODE_ZOMBIES);\r\n        }, 300, 300, __LEFT__ | __TOP__, __DISPLAY__); else this.buttons[ZOMBIE_MODE] = gui_create_button(266, 176, \"\", [IMAGES.ZOMBIE_MODE_OUT, IMAGES.ZOMBIE_MODE_IN, IMAGES.ZOMBIE_MODE_CLICK], __HD__, __NO_BREATH__, function () {\r\n            client.select_gamemode(WORLD.MODE_ZOMBIES);\r\n        }, 204, 100, __MIDDLE_X__ | __TOP__, __DISPLAY__);\r\n        this.buttons[ZOMBIE_MODE].view = __GAME__;\r\n        this.buttons[ZOMBIE_MODE].hint = 0;\r\n        var VAMPIRE_MODE = COUNTER++;\r\n        if (window.innerWidth < 1300) this.buttons[VAMPIRE_MODE] = gui_create_button(266, 176, \"\", [IMAGES.VAMPIRE_MODE_OUT, IMAGES.VAMPIRE_MODE_IN, IMAGES.VAMPIRE_MODE_CLICK], __HD__, __NO_BREATH__, function () {\r\n            client.select_gamemode(WORLD.MODE_VAMPIRES);\r\n        }, 300, 400, __LEFT__ | __TOP__, __DISPLAY__); else this.buttons[VAMPIRE_MODE] = gui_create_button(266, 176, \"\", [IMAGES.VAMPIRE_MODE_OUT, IMAGES.VAMPIRE_MODE_IN, IMAGES.VAMPIRE_MODE_CLICK], __HD__, __NO_BREATH__, function () {\r\n            client.select_gamemode(WORLD.MODE_VAMPIRES);\r\n        }, 204, 200, __MIDDLE_X__ | __TOP__, __DISPLAY__);\r\n        this.buttons[VAMPIRE_MODE].view = __GAME__;\r\n        this.buttons[VAMPIRE_MODE].hint = 0;\r\n        var MODE_EXPERIMENTAL = COUNTER++;\r\n        this.buttons[MODE_EXPERIMENTAL] = gui_create_button(266, 176, \"\", [IMAGES.MODE_EXPERIMENTAL_OUT, IMAGES.MODE_EXPERIMENTAL_IN, IMAGES.MODE_EXPERIMENTAL_CLICK], __HD__, __NO_BREATH__, function () {\r\n            client.select_gamemode(WORLD.MODE_EXPERIMENTAL);\r\n        }, window.innerWidth < 1300 ? 450 : 204, window.innerWidth < 1300 ? 400 : 300, (window.innerWidth < 1300 ? __LEFT__ : __MIDDLE_X__) | __TOP__, __DISPLAY__);\r\n        this.buttons[MODE_EXPERIMENTAL].view = __GAME__;\r\n        this.buttons[MODE_EXPERIMENTAL].hint = 0;\r\n    }\r\n    this.buttons[COUNTER] = gui_create_button(87, 78, \"\", [IMAGES.MODIFY_NAME_OUT, IMAGES.MODIFY_NAME_IN, IMAGES.MODIFY_NAME_CLICK], __HD__, __NO_BREATH__, function () {\r\n        ui.generate_new_nickname();\r\n        if (ui.firstName === 0) select_subview(__CHANGE_NICKNAME0__); else select_subview(__CHANGE_NICKNAME1__);\r\n    }, 127, 110, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __PROFILE__;\r\n    this.buttons[COUNTER] = gui_create_button(87, 78, \"\", [IMAGES.LOGOUT_OUT, IMAGES.LOGOUT_IN, IMAGES.LOGOUT_CLICK], __HD__, __NO_BREATH__, function () {\r\n        logout();\r\n    }, 255, 110, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __PROFILE__;\r\n    this.buttons[COUNTER] = gui_create_button(58, 64, \"\", [IMAGES.CLOSE_BUTTON_OUT, IMAGES.CLOSE_BUTTON_IN, IMAGES.CLOSE_BUTTON_CLICK], __HD__, __NO_BREATH__, function () {\r\n        select_subview(__GAME__);\r\n    }, 189, 118, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __LOGIN__;\r\n    this.buttons[COUNTER] = gui_create_button(497, 72, \"\", [IMAGES.LOGIN_GOOGLE_OUT, IMAGES.LOGIN_GOOGLE_IN, IMAGES.LOGIN_GOOGLE_CLICK], __HD__, __NO_BREATH__, function () {\r\n        loginWithGoogle();\r\n    }, -130, 390, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __LOGIN__;\r\n    this.buttons[COUNTER] = gui_create_button(497, 72, \"\", [IMAGES.LOGIN_FACEBOOK_OUT, IMAGES.LOGIN_FACEBOOK_IN, IMAGES.LOGIN_FACEBOOK_CLICK], __HD__, __NO_BREATH__, function () {\r\n        logWithFacebook();\r\n    }, -130, 430, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __LOGIN__;\r\n    __LEVEL_FACTOR__ = 2e4;\r\n    function xp_formula(score) {\r\n        var lvl = ui.level_formula(score);\r\n        var previous_exp = lvl * lvl * __LEVEL_FACTOR__;\r\n        var next_exp = (lvl + 1) * (lvl + 1) * __LEVEL_FACTOR__ - previous_exp;\r\n        score -= previous_exp;\r\n        return score / next_exp;\r\n    }\r\n    ;\r\n    ;\r\n    this.xp_formula = xp_formula;\r\n    ;\r\n    ;\r\n    try{this.level_formula = level_formula;}catch{};\r\n    this.update_score = function (score) {\r\n        ui.lvl = ui.level_formula(score);\r\n        ui.xp_dest = ui.xp_formula(score);\r\n        ui.xp = 0;\r\n        ui.score = score;\r\n    };\r\n    function init_profile(id, season) {\r\n        if (season !== undefined) {\r\n            ui.profile_season = season;\r\n            var lastSeason = ui.seasons[season];\r\n            ui.score = lastSeason.score;\r\n            ui.kill = lastSeason.kill;\r\n            ui.death = lastSeason.death;\r\n            ui.time = lastSeason.time;\r\n            ui.bestScore = lastSeason.bestScore;\r\n            ui.bestKill = lastSeason.bestKill;\r\n            ui.bestTime = lastSeason.bestTime;\r\n            ui.scoreTotal = lastSeason.scoreTotal;\r\n        }\r\n        if (id === undefined) id = ui.current_mode_score;\r\n        ui.current_mode_score = id;\r\n        if (id >= 0) {\r\n            document.getElementById(\"stats_box_time\").innerHTML = ui.bestTime[id];\r\n            document.getElementById(\"stats_box_kill\").innerHTML = ui.bestKill[id];\r\n            document.getElementById(\"stats_box_score\").innerHTML = ui.bestScore[id];\r\n        } else {\r\n            var kill = 0;\r\n            for (var i = 0; i < ui.kill.length; i++) kill += ui.kill[i];\r\n            var time = 0;\r\n            for (var i = 0; i < ui.time.length; i++) time += ui.time[i];\r\n            document.getElementById(\"stats_box_time\").innerHTML = time;\r\n            document.getElementById(\"stats_box_kill\").innerHTML = kill;\r\n            document.getElementById(\"stats_box_score\").innerHTML = ui.score;\r\n        }\r\n    }\r\n    ;\r\n    ;\r\n    this.login_restore_data = function (data) {\r\n        ui.buttons[ui.LOGIN_BUTTON].info.active = 0;\r\n        ui.buttons[ui.PROFILE_BUTTON].info.active = 1;\r\n        ui.buttons[ui.PROFILE_BUTTON_2].info.active = 1;\r\n        init_skin();\r\n        if (data.name.indexOf(\"Starver#\") === -1) document.getElementById(\"account_nickname_input\").value = window.decodeURIComponent(window.escape(window.atob(data.name))); else document.getElementById(\"account_nickname_input\").value = data.name;\r\n        ui.bread = data.bread;\r\n        var seasons = data.seasons;\r\n        var lastSeason = seasons[seasons.length - 1];\r\n        ui.seasons = seasons;\r\n        _this.update_score(lastSeason.score);\r\n        ui.score = lastSeason.score;\r\n        ui.kill = lastSeason.kill;\r\n        ui.death = lastSeason.death;\r\n        ui.time = lastSeason.time;\r\n        ui.bestScore = lastSeason.bestScore;\r\n        ui.bestKill = lastSeason.bestKill;\r\n        ui.bestTime = lastSeason.bestTime;\r\n        ui.scoreTotal = lastSeason.scoreTotal;\r\n        ui.firstName = data.firstName;\r\n        document.getElementById(\"serverAddressInput\").value = \"https://starve.io/?server=\" + data.privateServer;\r\n        if (ui.firstName === undefined) ui.firstName = 0;\r\n        ui.privateServerTime = Date.now() + data.privateServerTime;\r\n        if (Number(data.privateServerTime) > 0) ui.privateServerTime = Date.now() + Number(data.privateServerTime);\r\n        ui.kit = Date.now() + data.kit;\r\n        if (Number(data.kit) > 0) ui.kit = Date.now() + Number(data.kit);\r\n        var cosmetic = COSMETICS.SKIN;\r\n        for (var i = 0; i < data.skins.length; i++) {\r\n            var v = data.skins[i];\r\n            if (v > 0) {\r\n                for (var j = 0; j < cosmetic.length; j++) {\r\n                    if (cosmetic[j].id === i) _this.unlock.skin[j] = 1;\r\n                }\r\n            }\r\n        }\r\n        var cosmetic = COSMETICS.ACCESSORY;\r\n        for (var i = 0; i < data.accessories.length; i++) {\r\n            var v = data.accessories[i];\r\n            if (v > 0) {\r\n                for (var j = 0; j < cosmetic.length; j++) {\r\n                    if (cosmetic[j].id === i) _this.unlock.accessory[j] = 1;\r\n                }\r\n            }\r\n        }\r\n        var cosmetic = COSMETICS.BOOK;\r\n        for (var i = 0; i < data.books.length; i++) {\r\n            var v = data.books[i];\r\n            if (v > 0) {\r\n                for (var j = 0; j < cosmetic.length; j++) {\r\n                    if (cosmetic[j].id === i) _this.unlock.book[j] = 1;\r\n                }\r\n            }\r\n        }\r\n        var cosmetic = COSMETICS.BAG;\r\n        for (var i = 0; i < data.bags.length; i++) {\r\n            var v = data.bags[i];\r\n            if (v > 0) {\r\n                for (var j = 0; j < cosmetic.length; j++) {\r\n                    if (cosmetic[j].id === i) _this.unlock.bag[j] = 1;\r\n                }\r\n            }\r\n        }\r\n        var cosmetic = COSMETICS.CRATE;\r\n        for (var i = 0; i < data.crates.length; i++) {\r\n            var v = data.crates[i];\r\n            if (v > 0) {\r\n                for (var j = 0; j < cosmetic.length; j++) {\r\n                    if (cosmetic[j].id === i) {\r\n                        _this.unlock.crate[j] = 1;\r\n                        _this.unlock.dead[j] = 1;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    this.login_after = function () {\r\n        window.onUserLogin = function () {\r\n            select_subview(__GAME__);\r\n            getUserDetails(_this.login_restore_data);\r\n        };\r\n        if (userAlreadyLoggedIn === 1) window.onUserLogin();\r\n    };\r\n    window.onUserLogout = function () {\r\n        ui.buttons[ui.LOGIN_BUTTON].info.active = 1;\r\n        ui.buttons[ui.PROFILE_BUTTON].info.active = 0;\r\n        ui.buttons[ui.PROFILE_BUTTON_2].info.active = 0;\r\n        select_subview(__GAME__);\r\n        window.location = \"https://starve.io\";\r\n    };\r\n    this.isUserLogged = function () {\r\n        return ui.buttons[ui.PROFILE_BUTTON].info.active;\r\n    };\r\n    this.buttons[COUNTER] = gui_create_button(461, 105, \"\", [IMAGES.GET_MORE_BUTTON_OUT, IMAGES.GET_MORE_BUTTON_IN, IMAGES.GET_MORE_BUTTON_CLICK], __HD__, __NO_BREATH__, function () {\r\n        if (_this.isUserLogged()) select_subview(__BUY__); else select_subview(__LOGIN__);\r\n    }, -100, 80, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __SHOP__;\r\n    this.buttons[COUNTER] = gui_create_button(157, 158, \"\", [IMAGES.TUTO_WIKI_OUT, IMAGES.TUTO_WIKI_IN, IMAGES.TUTO_WIKI_CLICK], __HD__, __NO_BREATH__, function () {\r\n        window.open(\"https://starveiopro.wikia.com/wiki/\", \"_blank\");\r\n    }, -35, 125, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __TUTORIAL__;\r\n    this.buttons[COUNTER] = gui_create_button(66, 73, \"\", [IMAGES.TUTO_PREVIOUS_OUT, IMAGES.TUTO_PREVIOUS_IN, IMAGES.TUTO_PREVIOUS_CLICK], __HD__, __NO_BREATH__, undefined, -68, 340, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __TUTORIAL__;\r\n    this.buttons[COUNTER] = gui_create_button(66, 73, \"\", [IMAGES.TUTO_NEXT_OUT, IMAGES.TUTO_NEXT_IN, IMAGES.TUTO_NEXT_CLICK], __HD__, __NO_BREATH__, undefined, -30, 340, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __TUTORIAL__;\r\n    this.buttons[COUNTER] = gui_create_button(97, 66, \"\", [IMAGES.LVL_LEADERBOARD_OUT, IMAGES.LVL_LEADERBOARD_IN, IMAGES.LVL_LEADERBOARD_CLICK], __HD__, __NO_BREATH__, undefined, -14, 151, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __LEADERBOARD__;\r\n    this.LEADERBOARD_KILL = COUNTER;\r\n    this.buttons[COUNTER] = gui_create_button(135, 66, \"\", [IMAGES.KILL_LEADERBOARD_OUT, IMAGES.KILL_LEADERBOARD_IN, IMAGES.KILL_LEADERBOARD_CLICK], __HD__, __NO_BREATH__, function () {\r\n        getLeaderboard(undefined, undefined, ui.LEADERBOARD_KILL);\r\n    }, 37.5, 151, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __LEADERBOARD__;\r\n    this.LEADERBOARD_TIME = COUNTER;\r\n    this.buttons[COUNTER] = gui_create_button(160, 66, \"\", [IMAGES.TIME_LEADERBOARD_OUT, IMAGES.TIME_LEADERBOARD_IN, IMAGES.TIME_LEADERBOARD_CLICK], __HD__, __NO_BREATH__, function () {\r\n        getLeaderboard(undefined, undefined, ui.LEADERBOARD_TIME);\r\n    }, 107.5, 151, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __LEADERBOARD__;\r\n    this.LEADERBOARD_SCORE = COUNTER;\r\n    this.buttons[COUNTER] = gui_create_button(207, 66, \"\", [IMAGES.SCORE_LEADERBOARD_OUT, IMAGES.SCORE_LEADERBOARD_IN, IMAGES.SCORE_LEADERBOARD_CLICK], __HD__, __NO_BREATH__, function () {\r\n        getLeaderboard(undefined, undefined, ui.LEADERBOARD_SCORE);\r\n    }, 190.5, 151, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __LEADERBOARD__;\r\n    this.LEADERBOARD_TODAY = COUNTER;\r\n    this.buttons[COUNTER] = gui_create_button(144, 66, \"\", [IMAGES.TODAY_LEADERBOARD_OUT, IMAGES.TODAY_LEADERBOARD_IN, IMAGES.TODAY_LEADERBOARD_CLICK], __HD__, __NO_BREATH__, function () {\r\n        getLeaderboard(ui.LEADERBOARD_TODAY);\r\n    }, 103.5, 110, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __LEADERBOARD__;\r\n    this.LEADERBOARD_WEEK = COUNTER;\r\n    this.buttons[COUNTER] = gui_create_button(124, 66, \"\", [IMAGES.WEEK_LEADERBOARD_OUT, IMAGES.WEEK_LEADERBOARD_IN, IMAGES.WEEK_LEADERBOARD_CLICK], __HD__, __NO_BREATH__, function () {\r\n        getLeaderboard(ui.LEADERBOARD_WEEK);\r\n    }, 177.5, 110, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __LEADERBOARD__;\r\n    this.LEADERBOARD_ALL = COUNTER;\r\n    this.buttons[COUNTER] = gui_create_button(104, 66, \"\", [IMAGES.ALL_LEADERBOARD_OUT, IMAGES.ALL_LEADERBOARD_IN, IMAGES.ALL_LEADERBOARD_CLICK], __HD__, __NO_BREATH__, function () {\r\n        getLeaderboard(ui.LEADERBOARD_ALL);\r\n    }, 242, 110, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __LEADERBOARD__;\r\n    this.LEADERBOARD_SEASON1 = COUNTER;\r\n    this.buttons[COUNTER] = gui_create_button(183, 66, \"\", [IMAGES.SEASON1_LEADERBOARD_OUT, IMAGES.SEASON1_LEADERBOARD_IN, IMAGES.SEASON1_LEADERBOARD_CLICK], __HD__, __NO_BREATH__, function () {\r\n        getLeaderboard(undefined, undefined, undefined, ui.LEADERBOARD_SEASON1);\r\n    }, -290, 521, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __LEADERBOARD__;\r\n    this.LEADERBOARD_SEASON2 = COUNTER;\r\n    this.buttons[COUNTER] = gui_create_button(183, 66, \"\", [IMAGES.SEASON2_LEADERBOARD_OUT, IMAGES.SEASON2_LEADERBOARD_IN, IMAGES.SEASON2_LEADERBOARD_CLICK], __HD__, __NO_BREATH__, function () {\r\n        getLeaderboard(undefined, undefined, undefined, ui.LEADERBOARD_SEASON2);\r\n    }, -185, 521, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __LEADERBOARD__;\r\n    this.LEADERBOARD_SEASON3 = COUNTER;\r\n    this.buttons[COUNTER] = gui_create_button(183, 66, \"\", [IMAGES.SEASON3_LEADERBOARD_OUT, IMAGES.SEASON3_LEADERBOARD_IN, IMAGES.SEASON3_LEADERBOARD_CLICK], __HD__, __NO_BREATH__, function () {\r\n        getLeaderboard(undefined, undefined, undefined, ui.LEADERBOARD_SEASON3);\r\n    }, -80, 521, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __LEADERBOARD__;\r\n    this.LEADERBOARD_SEASON4 = COUNTER;\r\n    this.buttons[COUNTER] = gui_create_button(183, 66, \"\", [IMAGES.SEASON4_LEADERBOARD_OUT, IMAGES.SEASON4_LEADERBOARD_IN, IMAGES.SEASON4_LEADERBOARD_CLICK], __HD__, __NO_BREATH__, function () {\r\n        getLeaderboard(undefined, undefined, undefined, ui.LEADERBOARD_SEASON4);\r\n    }, 25, 521, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __LEADERBOARD__;\r\n    this.LEADERBOARD_SEASON5 = COUNTER;\r\n    this.buttons[COUNTER] = gui_create_button(183, 66, \"\", [IMAGES.SEASON5_LEADERBOARD_OUT, IMAGES.SEASON5_LEADERBOARD_IN, IMAGES.SEASON5_LEADERBOARD_CLICK], __HD__, __NO_BREATH__, function () {\r\n        getLeaderboard(undefined, undefined, undefined, ui.LEADERBOARD_SEASON5);\r\n    }, 130, 521, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __LEADERBOARD__;\r\n    this.buttons[COUNTER] = gui_create_button(232, 352, \"\", [IMAGES.CURRENCY1_OUT, IMAGES.CURRENCY1_IN, IMAGES.CURRENCY1_CLICK], __HD__, __NO_BREATH__, function () {\r\n        openXsolla(300);\r\n    }, -330, 135, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __BUY__;\r\n    this.buttons[COUNTER] = gui_create_button(232, 352, \"\", [IMAGES.CURRENCY2_OUT, IMAGES.CURRENCY2_IN, IMAGES.CURRENCY2_CLICK], __HD__, __NO_BREATH__, function () {\r\n        openXsolla(600);\r\n    }, -195, 135, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __BUY__;\r\n    this.buttons[COUNTER] = gui_create_button(243, 374, \"\", [IMAGES.CURRENCY3_OUT, IMAGES.CURRENCY3_IN, IMAGES.CURRENCY3_CLICK], __HD__, __NO_BREATH__, function () {\r\n        openXsolla(2600);\r\n    }, -60, 130, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __BUY__;\r\n    this.buttons[COUNTER] = gui_create_button(232, 352, \"\", [IMAGES.CURRENCY4_OUT, IMAGES.CURRENCY4_IN, IMAGES.CURRENCY4_CLICK], __HD__, __NO_BREATH__, function () {\r\n        openXsolla(7e3);\r\n    }, 78, 135, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __BUY__;\r\n    this.buttons[COUNTER] = gui_create_button(243, 374, \"\", [IMAGES.CURRENCY5_OUT, IMAGES.CURRENCY5_IN, IMAGES.CURRENCY5_CLICK], __HD__, __NO_BREATH__, function () {\r\n        openXsolla(2e4);\r\n    }, 213, 130, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __BUY__;\r\n    this.buttons[COUNTER] = gui_create_button(58, 64, \"\", [IMAGES.CLOSE_BUTTON_OUT, IMAGES.CLOSE_BUTTON_IN, IMAGES.CLOSE_BUTTON_CLICK], __HD__, __NO_BREATH__, function () {\r\n        select_subview(__SHOP__);\r\n    }, 300, 88, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __BUY__;\r\n    this.buttons[COUNTER] = gui_create_button(323, 112, \"\", [IMAGES.SKIN_BUTTON_OUT, IMAGES.SKIN_BUTTON_IN, IMAGES.SKIN_BUTTON_CLICK], __HD__, __NO_BREATH__, function () {\r\n        select_subview(__SKIN__);\r\n        skinSelector.initSelector();\r\n    }, -315, 185, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __COSMETICS__;\r\n    this.buttons[COUNTER] = gui_create_button(323, 112, \"\", [IMAGES.ACCESSORY_BUTTON_OUT, IMAGES.ACCESSORY_BUTTON_IN, IMAGES.ACCESSORY_BUTTON_CLICK], __HD__, __NO_BREATH__, function () {\r\n        select_subview(__ACCESSORY__);\r\n        accessorySelector.initSelector();\r\n    }, -315, 321, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __COSMETICS__;\r\n    this.buttons[COUNTER] = gui_create_button(323, 112, \"\", [IMAGES.BAG_BUTTON_OUT, IMAGES.BAG_BUTTON_IN, IMAGES.BAG_BUTTON_CLICK], __HD__, __NO_BREATH__, function () {\r\n        select_subview(__BAG__);\r\n        bagSelector.initSelector();\r\n    }, 153, 185, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __COSMETICS__;\r\n    this.buttons[COUNTER] = gui_create_button(323, 112, \"\", [IMAGES.BOOK_BUTTON_OUT, IMAGES.BOOK_BUTTON_IN, IMAGES.BOOK_BUTTON_CLICK], __HD__, __NO_BREATH__, function () {\r\n        select_subview(__BOOK__);\r\n        bookSelector.initSelector();\r\n    }, 153, 321, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __COSMETICS__;\r\n    this.buttons[COUNTER] = gui_create_button(323, 112, \"\", [IMAGES.CRATE_BUTTON_OUT, IMAGES.CRATE_BUTTON_IN, IMAGES.CRATE_BUTTON_CLICK], __HD__, __NO_BREATH__, function () {\r\n        select_subview(__CRATE__);\r\n        deadSelector.initSelector();\r\n    }, 153, 463, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __COSMETICS__;\r\n    this.buttons[COUNTER] = gui_create_button(323, 112, \"\", [IMAGES.LOOT_BUTTON_OUT, IMAGES.LOOT_BUTTON_IN, IMAGES.LOOT_BUTTON_CLICK], __HD__, __NO_BREATH__, function () {\r\n        select_subview(__LOOT__);\r\n        crateSelector.initSelector();\r\n    }, -315, 463, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __COSMETICS__;\r\n    this.buttons[COUNTER] = gui_create_button(327, 117, \"\", [IMAGES.SEASON_5, IMAGES.SEASON_5_IN, IMAGES.SEASON_5_OUT], __HD__, __NO_BREATH__, function () {\r\n        select_subview(__SEASON5__);\r\n    }, 155, 70, __LEFT__, __DISPLAY__);\r\n    this.buttons[COUNTER++].view = __GAME__;\r\n    this.buttons[COUNTER] = gui_create_button(130, 129, \"\", [IMAGES.SHOP_BUTTON_OUT, IMAGES.SHOP_BUTTON_IN, IMAGES.SHOP_BUTTON_CLICK], __HD__, __NO_BREATH__, function () {\r\n        update_subview(__LOCKED_SKIN__, __HIDE__, \"none\");\r\n        select_subview(__SHOP__);\r\n    }, 10, 40, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __LOCKED_SKIN__;\r\n    this.buttons[COUNTER] = gui_create_button(130, 129, \"\", [IMAGES.SHOP_BUTTON_OUT, IMAGES.SHOP_BUTTON_IN, IMAGES.SHOP_BUTTON_CLICK], __HD__, __NO_BREATH__, function () {\r\n        update_subview(__LOCKED_ACC__, __HIDE__, \"none\");\r\n        select_subview(__SHOP__);\r\n    }, 10, 40, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __LOCKED_ACC__;\r\n    this.buttons[COUNTER] = gui_create_button(115, 73, \"\", [IMAGES.BACK_BUTTON_OUT, IMAGES.BACK_BUTTON_IN, IMAGES.BACK_BUTTON_CLICK], __HD__, __NO_BREATH__, function () {\r\n        select_subview(__SHOP__);\r\n    }, 200, 140, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __SERVER_LOCATION__;\r\n    this.buttons[COUNTER] = gui_create_button(253, 110, \"\", [IMAGES.ATLANTA_OUT, IMAGES.ATLANTA_IN, IMAGES.ATLANTA_CLICK], __HD__, __NO_BREATH__, function () {\r\n        regionPreference(\"Atlanta\");\r\n    }, -265, 300, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __SERVER_LOCATION__;\r\n    this.buttons[COUNTER] = gui_create_button(253, 110, \"\", [IMAGES.DALLAS_OUT, IMAGES.DALLAS_IN, IMAGES.DALLAS_CLICK], __HD__, __NO_BREATH__, function () {\r\n        regionPreference(\"Dallas\");\r\n    }, -130, 300, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __SERVER_LOCATION__;\r\n    this.buttons[COUNTER] = gui_create_button(253, 110, \"\", [IMAGES.FREMONT_OUT, IMAGES.FREMONT_IN, IMAGES.FREMONT_CLICK], __HD__, __NO_BREATH__, function () {\r\n        regionPreference(\"Fremont\");\r\n    }, 5, 300, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __SERVER_LOCATION__;\r\n    this.buttons[COUNTER] = gui_create_button(253, 110, \"\", [IMAGES.NEWARK_OUT, IMAGES.NEWARK_IN, IMAGES.NEWARK_CLICK], __HD__, __NO_BREATH__, function () {\r\n        regionPreference(\"Newark\");\r\n    }, 140, 300, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __SERVER_LOCATION__;\r\n    this.buttons[COUNTER] = gui_create_button(253, 110, \"\", [IMAGES.LONDON_OUT, IMAGES.LONDON_IN, IMAGES.LONDON_CLICK], __HD__, __NO_BREATH__, function () {\r\n        regionPreference(\"London\");\r\n    }, -265, 365, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __SERVER_LOCATION__;\r\n    this.buttons[COUNTER] = gui_create_button(253, 110, \"\", [IMAGES.FRANKFURT_OUT, IMAGES.FRANKFURT_IN, IMAGES.FRANKFURT_CLICK], __HD__, __NO_BREATH__, function () {\r\n        regionPreference(\"Frankfurt\");\r\n    }, -130, 365, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __SERVER_LOCATION__;\r\n    this.buttons[COUNTER] = gui_create_button(253, 110, \"\", [IMAGES.SINGAPORE_OUT, IMAGES.SINGAPORE_IN, IMAGES.SINGAPORE_CLICK], __HD__, __NO_BREATH__, function () {\r\n        regionPreference(\"Singapore\");\r\n    }, 5, 365, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __SERVER_LOCATION__;\r\n    this.buttons[COUNTER] = gui_create_button(253, 110, \"\", [IMAGES.TOKYO_OUT, IMAGES.TOKYO_IN, IMAGES.TOKYO_CLICK], __HD__, __NO_BREATH__, function () {\r\n        regionPreference(\"Tokyo\");\r\n    }, 140, 365, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __SERVER_LOCATION__;\r\n    this.buttons[COUNTER] = gui_create_button(253, 110, \"\", [IMAGES.TORONTO_OUT, IMAGES.TORONTO_IN, IMAGES.TORONTO_CLICK], __HD__, __NO_BREATH__, function () {\r\n        regionPreference(\"Toronto\");\r\n    }, -265, 430, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __SERVER_LOCATION__;\r\n    this.buttons[COUNTER] = gui_create_button(253, 110, \"\", [IMAGES.MUMBAI_OUT, IMAGES.MUMBAI_IN, IMAGES.MUMBAI_CLICK], __HD__, __NO_BREATH__, function () {\r\n        regionPreference(\"Mumbai\");\r\n    }, -130, 430, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __SERVER_LOCATION__;\r\n    this.buttons[COUNTER] = gui_create_button(115, 73, \"\", [IMAGES.BACK_BUTTON_OUT, IMAGES.BACK_BUTTON_IN, IMAGES.BACK_BUTTON_CLICK], __HD__, __NO_BREATH__, function () {\r\n        select_subview(__SERVER_LOCATION__);\r\n    }, 230, 140, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __SERVER_DURATION__;\r\n    this.buttons[COUNTER] = gui_create_button(230, 352, \"\", [IMAGES.DAYS3_OUT, IMAGES.DAYS3_IN, IMAGES.DAYS3_CLICK], __HD__, __NO_BREATH__, function () {\r\n        openXsolla(350);\r\n    }, -280, 240, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __SERVER_DURATION__;\r\n    this.buttons[COUNTER] = gui_create_button(230, 352, \"\", [IMAGES.DAYS7_OUT, IMAGES.DAYS7_IN, IMAGES.DAYS7_CLICK], __HD__, __NO_BREATH__, function () {\r\n        openXsolla(700);\r\n    }, -130, 240, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __SERVER_DURATION__;\r\n    this.buttons[COUNTER] = gui_create_button(230, 352, \"\", [IMAGES.DAYS30_OUT, IMAGES.DAYS30_IN, IMAGES.DAYS30_CLICK], __HD__, __NO_BREATH__, function () {\r\n        openXsolla(1400);\r\n    }, 20, 240, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __SERVER_DURATION__;\r\n    this.buttons[COUNTER] = gui_create_button(230, 352, \"\", [IMAGES.DAYS90_OUT, IMAGES.DAYS90_IN, IMAGES.DAYS90_CLICK], __HD__, __NO_BREATH__, function () {\r\n        openXsolla(3e3);\r\n    }, 170, 240, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __SERVER_DURATION__;\r\n    this.buttons[COUNTER] = gui_create_button(105, 119, \"\", [IMAGES.COPY_PASTE_OUT, IMAGES.COPY_PASTE_IN, IMAGES.COPY_PASTE_CLICK], __HD__, __NO_BREATH__, function () {\r\n        document.getElementById(\"serverAddressInput\").select();\r\n        document.execCommand(\"copy\");\r\n    }, 170, 310, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __SERVER_ACCESS__;\r\n    this.buttons[COUNTER] = gui_create_button(105, 119, \"\", [IMAGES.RESTART_OUT, IMAGES.RESTART_IN, IMAGES.RESTART_CLICK], __HD__, __NO_BREATH__, function () {\r\n        rebootServer();\r\n    }, 235, 310, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __SERVER_ACCESS__;\r\n    this.buttons[COUNTER] = gui_create_button(204, 115, \"\", [IMAGES.GUIDE_OUT, IMAGES.GUIDE_IN, IMAGES.GUIDE_CLICK], __HD__, __NO_BREATH__, function () {\r\n        window.open(\"./commands.html\", \"_blank\");\r\n    }, -265, 490, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __SERVER_ACCESS__;\r\n    this.buttons[COUNTER] = gui_create_button(145, 69, \"\", [IMAGES.PRICE5_OUT, IMAGES.PRICE5_IN, IMAGES.PRICE5_CLICK], __HD__, __NO_BREATH__, function () {\r\n        select_subview(__SPIN_1__);\r\n    }, -210, 170, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __SHOP__;\r\n    this.buttons[COUNTER] = gui_create_button(145, 69, \"\", [IMAGES.PRICE1_OUT, IMAGES.PRICE1_IN, IMAGES.PRICE1_CLICK], __HD__, __NO_BREATH__, function () {\r\n        select_subview(__SPIN_4__);\r\n    }, 70, 170, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __SHOP__;\r\n    this.buttons[COUNTER] = gui_create_button(145, 69, \"\", [IMAGES.PRICE2_OUT, IMAGES.PRICE2_IN, IMAGES.PRICE2_CLICK], __HD__, __NO_BREATH__, function () {\r\n        select_subview(__SPIN_2__);\r\n    }, 70, 204, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __SHOP__;\r\n    this.buttons[COUNTER] = gui_create_button(145, 69, \"\", [IMAGES.PRICE3_OUT, IMAGES.PRICE3_IN, IMAGES.PRICE3_CLICK], __HD__, __NO_BREATH__, function () {\r\n        select_subview(__SPIN_5__);\r\n    }, -210, 204, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __SHOP__;\r\n    this.buttons[COUNTER] = gui_create_button(145, 69, \"\", [IMAGES.PRICE3_OUT, IMAGES.PRICE3_IN, IMAGES.PRICE3_CLICK], __HD__, __NO_BREATH__, function () {\r\n        select_subview(__SPIN_6__);\r\n    }, 70, 238, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __SHOP__;\r\n    this.buttons[COUNTER] = gui_create_button(145, 69, \"\", [IMAGES.PRICE3_OUT, IMAGES.PRICE3_IN, IMAGES.PRICE3_CLICK], __HD__, __NO_BREATH__, function () {\r\n        if (_this.isUserLogged()) buyKit(0, 300); else select_subview(__LOGIN__);\r\n    }, 307, 205, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __SHOP__;\r\n    this.buttons[COUNTER] = gui_create_button(145, 69, \"\", [IMAGES.PRICE4_OUT, IMAGES.PRICE4_IN, IMAGES.PRICE4_CLICK], __HD__, __NO_BREATH__, function () {\r\n        select_subview(__SPIN_3__);\r\n    }, -210, 238, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __SHOP__;\r\n    this.buttons[COUNTER] = gui_create_button(145, 69, \"\", [IMAGES.PRICE4_OUT, IMAGES.PRICE4_IN, IMAGES.PRICE4_CLICK], __HD__, __NO_BREATH__, function () {\r\n        if (_this.isUserLogged()) buyKit(1, 600); else select_subview(__LOGIN__);\r\n    }, 307, 239, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __SHOP__;\r\n    this.buttons[COUNTER] = gui_create_button(192, 101, \"\", [IMAGES.YES_BUTTON_OUT, IMAGES.YES_BUTTON_IN, IMAGES.YES_BUTTON_CLICK], __HD__, __NO_BREATH__, function () {\r\n        buyNameChanger();\r\n    }, -100, 250, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __CHANGE_NICKNAME0__;\r\n    this.buttons[COUNTER] = gui_create_button(192, 104, \"\", [IMAGES.YES_300_BUTTON_OUT, IMAGES.YES_300_BUTTON_IN, IMAGES.YES_300_BUTTON_CLICK], __HD__, __NO_BREATH__, function () {\r\n        buyNameChanger();\r\n    }, -100, 239, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __CHANGE_NICKNAME1__;\r\n    this.buttons[COUNTER] = gui_create_button(192, 101, \"\", [IMAGES.NO_BUTTON_OUT, IMAGES.NO_BUTTON_IN, IMAGES.NO_BUTTON_CLICK], __HD__, __NO_BREATH__, function () {\r\n        select_subview(__PROFILE__);\r\n    }, 10, 250, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __CHANGE_NICKNAME0__;\r\n    this.buttons[COUNTER] = gui_create_button(192, 104, \"\", [IMAGES.NO_THANKS_BUTTON_OUT, IMAGES.NO_THANKS_BUTTON_IN, IMAGES.NO_THANKS_BUTTON_CLICK], __HD__, __NO_BREATH__, function () {\r\n        select_subview(__PROFILE__);\r\n    }, 10, 239, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __CHANGE_NICKNAME1__;\r\n    RARITY_BUTTON = [];\r\n    RARITY_BUTTON[RARITY.FREE] = [IMAGES.FREE_ITEM_OUT, IMAGES.FREE_ITEM_IN, IMAGES.FREE_ITEM_CLICK];\r\n    RARITY_BUTTON[RARITY.WOOD] = [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK];\r\n    RARITY_BUTTON[RARITY.STONE] = [IMAGES.STONE_ITEM_OUT, IMAGES.STONE_ITEM_IN, IMAGES.STONE_ITEM_CLICK];\r\n    RARITY_BUTTON[RARITY.GOLD] = [IMAGES.GOLD_ITEM_OUT, IMAGES.GOLD_ITEM_IN, IMAGES.GOLD_ITEM_CLICK];\r\n    RARITY_BUTTON[RARITY.DIAMOND] = [IMAGES.DIAMOND_ITEM_OUT, IMAGES.DIAMOND_ITEM_IN, IMAGES.DIAMOND_ITEM_CLICK];\r\n    RARITY_BUTTON[RARITY.AMETHYST] = [IMAGES.AMETHYST_ITEM_OUT, IMAGES.AMETHYST_ITEM_IN, IMAGES.AMETHYST_ITEM_CLICK];\r\n    RARITY_BUTTON[RARITY.REIDITE] = [IMAGES.REIDITE_ITEM_OUT, IMAGES.REIDITE_ITEM_IN, IMAGES.REIDITE_ITEM_CLICK];\r\n    RARITY_BUTTON[RARITY.LEVEL] = [IMAGES.LEVEL_ITEM_OUT, IMAGES.LEVEL_ITEM_IN, IMAGES.LEVEL_ITEM_CLICK];\r\n    RARITY_BUTTON[RARITY.SPECIAL] = [IMAGES.SPECIAL_ITEM_OUT, IMAGES.SPECIAL_ITEM_IN, IMAGES.SPECIAL_ITEM_CLICK];\r\n    FIRST_BUTTON_SKIN = COUNTER;\r\n    this.buttons[COUNTER] = gui_create_button(178, 182, \"\", [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], __HD__, __NO_BREATH__, undefined, -29, 205, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __SKIN__;\r\n    this.buttons[COUNTER] = gui_create_button(178, 182, \"\", [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], __HD__, __NO_BREATH__, undefined, -29, 300, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __SKIN__;\r\n    this.buttons[COUNTER] = gui_create_button(178, 182, \"\", [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], __HD__, __NO_BREATH__, undefined, -29, 395, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __SKIN__;\r\n    this.buttons[COUNTER] = gui_create_button(178, 182, \"\", [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], __HD__, __NO_BREATH__, undefined, 65, 205, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __SKIN__;\r\n    this.buttons[COUNTER] = gui_create_button(178, 182, \"\", [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], __HD__, __NO_BREATH__, undefined, 65, 300, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __SKIN__;\r\n    this.buttons[COUNTER] = gui_create_button(178, 182, \"\", [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], __HD__, __NO_BREATH__, undefined, 65, 395, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __SKIN__;\r\n    this.buttons[COUNTER] = gui_create_button(178, 182, \"\", [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], __HD__, __NO_BREATH__, undefined, 159, 205, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __SKIN__;\r\n    this.buttons[COUNTER] = gui_create_button(178, 182, \"\", [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], __HD__, __NO_BREATH__, undefined, 159, 300, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __SKIN__;\r\n    this.buttons[COUNTER] = gui_create_button(178, 182, \"\", [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], __HD__, __NO_BREATH__, undefined, 159, 395, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __SKIN__;\r\n    this.buttons[COUNTER] = gui_create_button(39, 122, \"\", [IMAGES.SKIN_PREVIOUS_OUT, IMAGES.SKIN_PREVIOUS_IN, IMAGES.SKIN_PREVIOUS_CLICK], __HD__, __NO_BREATH__, undefined, -61, 315, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __SKIN__;\r\n    this.buttons[COUNTER] = gui_create_button(39, 122, \"\", [IMAGES.SKIN_NEXT_OUT, IMAGES.SKIN_NEXT_IN, IMAGES.SKIN_NEXT_CLICK], __HD__, __NO_BREATH__, undefined, 260, 315, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __SKIN__;\r\n    this.buttons[COUNTER] = gui_create_button(115, 73, \"\", [IMAGES.BACK_BUTTON_OUT, IMAGES.BACK_BUTTON_IN, IMAGES.BACK_BUTTON_CLICK], __HD__, __NO_BREATH__, function () {\r\n        select_subview(__COSMETICS__);\r\n    }, -320, 470, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __SKIN__;\r\n    FIRST_BUTTON_ACCESSORY = COUNTER;\r\n    this.buttons[COUNTER] = gui_create_button(178, 182, \"\", [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], __HD__, __NO_BREATH__, undefined, -29, 205, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __ACCESSORY__;\r\n    this.buttons[COUNTER] = gui_create_button(178, 182, \"\", [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], __HD__, __NO_BREATH__, undefined, -29, 300, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __ACCESSORY__;\r\n    this.buttons[COUNTER] = gui_create_button(178, 182, \"\", [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], __HD__, __NO_BREATH__, undefined, -29, 395, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __ACCESSORY__;\r\n    this.buttons[COUNTER] = gui_create_button(178, 182, \"\", [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], __HD__, __NO_BREATH__, undefined, 65, 205, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __ACCESSORY__;\r\n    this.buttons[COUNTER] = gui_create_button(178, 182, \"\", [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], __HD__, __NO_BREATH__, undefined, 65, 300, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __ACCESSORY__;\r\n    this.buttons[COUNTER] = gui_create_button(178, 182, \"\", [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], __HD__, __NO_BREATH__, undefined, 65, 395, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __ACCESSORY__;\r\n    this.buttons[COUNTER] = gui_create_button(178, 182, \"\", [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], __HD__, __NO_BREATH__, undefined, 159, 205, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __ACCESSORY__;\r\n    this.buttons[COUNTER] = gui_create_button(178, 182, \"\", [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], __HD__, __NO_BREATH__, undefined, 159, 300, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __ACCESSORY__;\r\n    this.buttons[COUNTER] = gui_create_button(178, 182, \"\", [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], __HD__, __NO_BREATH__, undefined, 159, 395, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __ACCESSORY__;\r\n    this.buttons[COUNTER] = gui_create_button(39, 122, \"\", [IMAGES.SKIN_PREVIOUS_OUT, IMAGES.SKIN_PREVIOUS_IN, IMAGES.SKIN_PREVIOUS_CLICK], __HD__, __NO_BREATH__, undefined, -61, 315, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __ACCESSORY__;\r\n    this.buttons[COUNTER] = gui_create_button(39, 122, \"\", [IMAGES.SKIN_NEXT_OUT, IMAGES.SKIN_NEXT_IN, IMAGES.SKIN_NEXT_CLICK], __HD__, __NO_BREATH__, undefined, 260, 315, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __ACCESSORY__;\r\n    this.buttons[COUNTER] = gui_create_button(115, 73, \"\", [IMAGES.BACK_BUTTON_OUT, IMAGES.BACK_BUTTON_IN, IMAGES.BACK_BUTTON_CLICK], __HD__, __NO_BREATH__, function () {\r\n        select_subview(__COSMETICS__);\r\n    }, -320, 470, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __ACCESSORY__;\r\n    FIRST_BUTTON_LOOT = COUNTER;\r\n    this.buttons[COUNTER] = gui_create_button(178, 182, \"\", [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], __HD__, __NO_BREATH__, undefined, -29, 205, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __LOOT__;\r\n    this.buttons[COUNTER] = gui_create_button(178, 182, \"\", [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], __HD__, __NO_BREATH__, undefined, -29, 300, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __LOOT__;\r\n    this.buttons[COUNTER] = gui_create_button(178, 182, \"\", [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], __HD__, __NO_BREATH__, undefined, -29, 395, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __LOOT__;\r\n    this.buttons[COUNTER] = gui_create_button(178, 182, \"\", [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], __HD__, __NO_BREATH__, undefined, 65, 205, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __LOOT__;\r\n    this.buttons[COUNTER] = gui_create_button(178, 182, \"\", [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], __HD__, __NO_BREATH__, undefined, 65, 300, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __LOOT__;\r\n    this.buttons[COUNTER] = gui_create_button(178, 182, \"\", [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], __HD__, __NO_BREATH__, undefined, 65, 395, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __LOOT__;\r\n    this.buttons[COUNTER] = gui_create_button(178, 182, \"\", [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], __HD__, __NO_BREATH__, undefined, 159, 205, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __LOOT__;\r\n    this.buttons[COUNTER] = gui_create_button(178, 182, \"\", [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], __HD__, __NO_BREATH__, undefined, 159, 300, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __LOOT__;\r\n    this.buttons[COUNTER] = gui_create_button(178, 182, \"\", [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], __HD__, __NO_BREATH__, undefined, 159, 395, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __LOOT__;\r\n    this.buttons[COUNTER] = gui_create_button(39, 122, \"\", [IMAGES.SKIN_PREVIOUS_OUT, IMAGES.SKIN_PREVIOUS_IN, IMAGES.SKIN_PREVIOUS_CLICK], __HD__, __NO_BREATH__, undefined, -61, 315, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __LOOT__;\r\n    this.buttons[COUNTER] = gui_create_button(39, 122, \"\", [IMAGES.SKIN_NEXT_OUT, IMAGES.SKIN_NEXT_IN, IMAGES.SKIN_NEXT_CLICK], __HD__, __NO_BREATH__, undefined, 260, 315, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __LOOT__;\r\n    this.buttons[COUNTER] = gui_create_button(115, 73, \"\", [IMAGES.BACK_BUTTON_OUT, IMAGES.BACK_BUTTON_IN, IMAGES.BACK_BUTTON_CLICK], __HD__, __NO_BREATH__, function () {\r\n        select_subview(__COSMETICS__);\r\n    }, -320, 470, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __LOOT__;\r\n    FIRST_BUTTON_BAG = COUNTER;\r\n    this.buttons[COUNTER] = gui_create_button(178, 182, \"\", [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], __HD__, __NO_BREATH__, undefined, -29, 205, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __BAG__;\r\n    this.buttons[COUNTER] = gui_create_button(178, 182, \"\", [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], __HD__, __NO_BREATH__, undefined, -29, 300, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __BAG__;\r\n    this.buttons[COUNTER] = gui_create_button(178, 182, \"\", [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], __HD__, __NO_BREATH__, undefined, -29, 395, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __BAG__;\r\n    this.buttons[COUNTER] = gui_create_button(178, 182, \"\", [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], __HD__, __NO_BREATH__, undefined, 65, 205, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __BAG__;\r\n    this.buttons[COUNTER] = gui_create_button(178, 182, \"\", [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], __HD__, __NO_BREATH__, undefined, 65, 300, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __BAG__;\r\n    this.buttons[COUNTER] = gui_create_button(178, 182, \"\", [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], __HD__, __NO_BREATH__, undefined, 65, 395, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __BAG__;\r\n    this.buttons[COUNTER] = gui_create_button(178, 182, \"\", [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], __HD__, __NO_BREATH__, undefined, 159, 205, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __BAG__;\r\n    this.buttons[COUNTER] = gui_create_button(178, 182, \"\", [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], __HD__, __NO_BREATH__, undefined, 159, 300, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __BAG__;\r\n    this.buttons[COUNTER] = gui_create_button(178, 182, \"\", [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], __HD__, __NO_BREATH__, undefined, 159, 395, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __BAG__;\r\n    this.buttons[COUNTER] = gui_create_button(39, 122, \"\", [IMAGES.SKIN_PREVIOUS_OUT, IMAGES.SKIN_PREVIOUS_IN, IMAGES.SKIN_PREVIOUS_CLICK], __HD__, __NO_BREATH__, undefined, -61, 315, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __BAG__;\r\n    this.buttons[COUNTER] = gui_create_button(39, 122, \"\", [IMAGES.SKIN_NEXT_OUT, IMAGES.SKIN_NEXT_IN, IMAGES.SKIN_NEXT_CLICK], __HD__, __NO_BREATH__, undefined, 260, 315, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __BAG__;\r\n    this.buttons[COUNTER] = gui_create_button(115, 73, \"\", [IMAGES.BACK_BUTTON_OUT, IMAGES.BACK_BUTTON_IN, IMAGES.BACK_BUTTON_CLICK], __HD__, __NO_BREATH__, function () {\r\n        select_subview(__COSMETICS__);\r\n    }, -320, 470, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __BAG__;\r\n    FIRST_BUTTON_BOOK = COUNTER;\r\n    this.buttons[COUNTER] = gui_create_button(178, 182, \"\", [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], __HD__, __NO_BREATH__, undefined, -29, 205, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __BOOK__;\r\n    this.buttons[COUNTER] = gui_create_button(178, 182, \"\", [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], __HD__, __NO_BREATH__, undefined, -29, 300, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __BOOK__;\r\n    this.buttons[COUNTER] = gui_create_button(178, 182, \"\", [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], __HD__, __NO_BREATH__, undefined, -29, 395, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __BOOK__;\r\n    this.buttons[COUNTER] = gui_create_button(178, 182, \"\", [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], __HD__, __NO_BREATH__, undefined, 65, 205, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __BOOK__;\r\n    this.buttons[COUNTER] = gui_create_button(178, 182, \"\", [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], __HD__, __NO_BREATH__, undefined, 65, 300, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __BOOK__;\r\n    this.buttons[COUNTER] = gui_create_button(178, 182, \"\", [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], __HD__, __NO_BREATH__, undefined, 65, 395, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __BOOK__;\r\n    this.buttons[COUNTER] = gui_create_button(178, 182, \"\", [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], __HD__, __NO_BREATH__, undefined, 159, 205, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __BOOK__;\r\n    this.buttons[COUNTER] = gui_create_button(178, 182, \"\", [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], __HD__, __NO_BREATH__, undefined, 159, 300, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __BOOK__;\r\n    this.buttons[COUNTER] = gui_create_button(178, 182, \"\", [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], __HD__, __NO_BREATH__, undefined, 159, 395, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __BOOK__;\r\n    this.buttons[COUNTER] = gui_create_button(39, 122, \"\", [IMAGES.SKIN_PREVIOUS_OUT, IMAGES.SKIN_PREVIOUS_IN, IMAGES.SKIN_PREVIOUS_CLICK], __HD__, __NO_BREATH__, undefined, -61, 315, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __BOOK__;\r\n    this.buttons[COUNTER] = gui_create_button(39, 122, \"\", [IMAGES.SKIN_NEXT_OUT, IMAGES.SKIN_NEXT_IN, IMAGES.SKIN_NEXT_CLICK], __HD__, __NO_BREATH__, undefined, 260, 315, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __BOOK__;\r\n    this.buttons[COUNTER] = gui_create_button(115, 73, \"\", [IMAGES.BACK_BUTTON_OUT, IMAGES.BACK_BUTTON_IN, IMAGES.BACK_BUTTON_CLICK], __HD__, __NO_BREATH__, function () {\r\n        select_subview(__COSMETICS__);\r\n    }, -320, 470, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __BOOK__;\r\n    FIRST_BUTTON_CRATE = COUNTER;\r\n    this.buttons[COUNTER] = gui_create_button(178, 182, \"\", [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], __HD__, __NO_BREATH__, undefined, -29, 205, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __CRATE__;\r\n    this.buttons[COUNTER] = gui_create_button(178, 182, \"\", [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], __HD__, __NO_BREATH__, undefined, -29, 300, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __CRATE__;\r\n    this.buttons[COUNTER] = gui_create_button(178, 182, \"\", [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], __HD__, __NO_BREATH__, undefined, -29, 395, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __CRATE__;\r\n    this.buttons[COUNTER] = gui_create_button(178, 182, \"\", [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], __HD__, __NO_BREATH__, undefined, 65, 205, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __CRATE__;\r\n    this.buttons[COUNTER] = gui_create_button(178, 182, \"\", [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], __HD__, __NO_BREATH__, undefined, 65, 300, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __CRATE__;\r\n    this.buttons[COUNTER] = gui_create_button(178, 182, \"\", [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], __HD__, __NO_BREATH__, undefined, 65, 395, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __CRATE__;\r\n    this.buttons[COUNTER] = gui_create_button(178, 182, \"\", [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], __HD__, __NO_BREATH__, undefined, 159, 205, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __CRATE__;\r\n    this.buttons[COUNTER] = gui_create_button(178, 182, \"\", [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], __HD__, __NO_BREATH__, undefined, 159, 300, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __CRATE__;\r\n    this.buttons[COUNTER] = gui_create_button(178, 182, \"\", [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], __HD__, __NO_BREATH__, undefined, 159, 395, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __CRATE__;\r\n    this.buttons[COUNTER] = gui_create_button(39, 122, \"\", [IMAGES.SKIN_PREVIOUS_OUT, IMAGES.SKIN_PREVIOUS_IN, IMAGES.SKIN_PREVIOUS_CLICK], __HD__, __NO_BREATH__, undefined, -61, 315, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __CRATE__;\r\n    this.buttons[COUNTER] = gui_create_button(39, 122, \"\", [IMAGES.SKIN_NEXT_OUT, IMAGES.SKIN_NEXT_IN, IMAGES.SKIN_NEXT_CLICK], __HD__, __NO_BREATH__, undefined, 260, 315, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __CRATE__;\r\n    this.buttons[COUNTER] = gui_create_button(115, 73, \"\", [IMAGES.BACK_BUTTON_OUT, IMAGES.BACK_BUTTON_IN, IMAGES.BACK_BUTTON_CLICK], __HD__, __NO_BREATH__, function () {\r\n        select_subview(__COSMETICS__);\r\n    }, -320, 470, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __CRATE__;\r\n    this.buttons[COUNTER] = gui_create_button(260, 260, \"\", [IMAGES.SPIN_BUTTON_1_OUT, IMAGES.SPIN_BUTTON_1_IN, IMAGES.SPIN_BUTTON_1_CLICK], __HD__, __NO_BREATH__, function () {\r\n        if (_this.isUserLogged()) buySpin(3, 50); else select_subview(__LOGIN__);\r\n    }, -65, 197, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __SPIN_4__;\r\n    this.buttons[COUNTER] = gui_create_button(115, 73, \"\", [IMAGES.BACK_BUTTON_OUT, IMAGES.BACK_BUTTON_IN, IMAGES.BACK_BUTTON_CLICK], __HD__, __NO_BREATH__, function () {\r\n        select_subview(__SHOP__);\r\n    }, 309, 180, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __SPIN_4__;\r\n    this.buttons[COUNTER] = gui_create_button(260, 260, \"\", [IMAGES.SPIN_BUTTON_2_OUT, IMAGES.SPIN_BUTTON_2_IN, IMAGES.SPIN_BUTTON_2_CLICK], __HD__, __NO_BREATH__, function () {\r\n        if (_this.isUserLogged()) buySpin(0, 100); else select_subview(__LOGIN__);\r\n    }, -65, 197, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __SPIN_1__;\r\n    this.buttons[COUNTER] = gui_create_button(115, 73, \"\", [IMAGES.BACK_BUTTON_OUT, IMAGES.BACK_BUTTON_IN, IMAGES.BACK_BUTTON_CLICK], __HD__, __NO_BREATH__, function () {\r\n        select_subview(__SHOP__);\r\n    }, 309, 180, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __SPIN_1__;\r\n    this.buttons[COUNTER] = gui_create_button(260, 260, \"\", [IMAGES.SPIN_BUTTON_3_OUT, IMAGES.SPIN_BUTTON_3_IN, IMAGES.SPIN_BUTTON_3_CLICK], __HD__, __NO_BREATH__, function () {\r\n        if (_this.isUserLogged()) buySpin(4, 150); else select_subview(__LOGIN__);\r\n    }, -65, 197, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __SPIN_2__;\r\n    this.buttons[COUNTER] = gui_create_button(115, 73, \"\", [IMAGES.BACK_BUTTON_OUT, IMAGES.BACK_BUTTON_IN, IMAGES.BACK_BUTTON_CLICK], __HD__, __NO_BREATH__, function () {\r\n        select_subview(__SHOP__);\r\n    }, 309, 180, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __SPIN_2__;\r\n    this.buttons[COUNTER] = gui_create_button(260, 260, \"\", [IMAGES.SPIN_BUTTON_4_OUT, IMAGES.SPIN_BUTTON_4_IN, IMAGES.SPIN_BUTTON_4_CLICK], __HD__, __NO_BREATH__, function () {\r\n        if (_this.isUserLogged()) buySpin(1, 300); else select_subview(__LOGIN__);\r\n    }, -65, 197, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __SPIN_5__;\r\n    this.buttons[COUNTER] = gui_create_button(115, 73, \"\", [IMAGES.BACK_BUTTON_OUT, IMAGES.BACK_BUTTON_IN, IMAGES.BACK_BUTTON_CLICK], __HD__, __NO_BREATH__, function () {\r\n        select_subview(__SHOP__);\r\n    }, 309, 180, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __SPIN_5__;\r\n    this.buttons[COUNTER] = gui_create_button(260, 260, \"\", [IMAGES.SPIN_BUTTON_5_OUT, IMAGES.SPIN_BUTTON_5_IN, IMAGES.SPIN_BUTTON_5_CLICK], __HD__, __NO_BREATH__, function () {\r\n        if (_this.isUserLogged()) buySpin(2, 600); else select_subview(__LOGIN__);\r\n    }, -65, 197, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __SPIN_3__;\r\n    this.buttons[COUNTER] = gui_create_button(115, 73, \"\", [IMAGES.BACK_BUTTON_OUT, IMAGES.BACK_BUTTON_IN, IMAGES.BACK_BUTTON_CLICK], __HD__, __NO_BREATH__, function () {\r\n        select_subview(__SHOP__);\r\n    }, 309, 180, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __SPIN_3__;\r\n    this.buttons[COUNTER] = gui_create_button(260, 260, \"\", [IMAGES.SPIN_BUTTON_4_OUT, IMAGES.SPIN_BUTTON_4_IN, IMAGES.SPIN_BUTTON_4_CLICK], __HD__, __NO_BREATH__, function () {\r\n        if (_this.isUserLogged()) buySpin(5, 300); else select_subview(__LOGIN__);\r\n    }, -65, 197, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __SPIN_6__;\r\n    this.buttons[COUNTER] = gui_create_button(115, 73, \"\", [IMAGES.BACK_BUTTON_OUT, IMAGES.BACK_BUTTON_IN, IMAGES.BACK_BUTTON_CLICK], __HD__, __NO_BREATH__, function () {\r\n        select_subview(__SHOP__);\r\n    }, 309, 180, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __SPIN_6__;\r\n    var SCORE_MODE_SEASON1 = COUNTER;\r\n    this.buttons[COUNTER] = gui_create_button(205, 67, \"\", [IMAGES.SEASON1_PROFILE_OUT, IMAGES.SEASON1_PROFILE_IN, IMAGES.SEASON1_PROFILE_CLICK], __HD__, __NO_BREATH__, function () {\r\n        init_profile(undefined, 0);\r\n    }, -305, 125, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __PROFILE__;\r\n    var SCORE_MODE_SEASON2 = COUNTER;\r\n    this.buttons[COUNTER] = gui_create_button(205, 67, \"\", [IMAGES.SEASON2_PROFILE_OUT, IMAGES.SEASON2_PROFILE_IN, IMAGES.SEASON2_PROFILE_CLICK], __HD__, __NO_BREATH__, function () {\r\n        init_profile(undefined, 1);\r\n    }, -305, 170, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __PROFILE__;\r\n    var SCORE_MODE_SEASON3 = COUNTER;\r\n    this.buttons[COUNTER] = gui_create_button(205, 67, \"\", [IMAGES.SEASON3_PROFILE_OUT, IMAGES.SEASON3_PROFILE_IN, IMAGES.SEASON3_PROFILE_CLICK], __HD__, __NO_BREATH__, function () {\r\n        init_profile(undefined, 2);\r\n    }, -305, 215, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __PROFILE__;\r\n    var SCORE_MODE_SEASON4 = COUNTER;\r\n    this.buttons[COUNTER] = gui_create_button(205, 67, \"\", [IMAGES.SEASON4_PROFILE_OUT, IMAGES.SEASON4_PROFILE_IN, IMAGES.SEASON4_PROFILE_CLICK], __HD__, __NO_BREATH__, function () {\r\n        init_profile(undefined, 3);\r\n    }, -305, 260, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __PROFILE__;\r\n    var SCORE_MODE_SEASON5 = COUNTER;\r\n    this.buttons[COUNTER] = gui_create_button(205, 67, \"\", [IMAGES.SEASON5_PROFILE_OUT, IMAGES.SEASON5_PROFILE_IN, IMAGES.SEASON5_PROFILE_CLICK], __HD__, __NO_BREATH__, function () {\r\n        init_profile(undefined, 3);\r\n    }, -305, 305, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __PROFILE__;\r\n    var SCORE_MODE_TOTAL = COUNTER;\r\n    this.buttons[COUNTER] = gui_create_button(460, 73, \"\", [IMAGES.TOTAL_PROFILE_OUT, IMAGES.TOTAL_PROFILE_IN, IMAGES.TOTAL_PROFILE_CLICK], __HD__, __NO_BREATH__, function () {\r\n        init_profile(-1);\r\n    }, -180, 170, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __PROFILE__;\r\n    var SCORE_MODE_NORMAL = COUNTER;\r\n    this.buttons[COUNTER] = gui_create_button(222, 68, \"\", [IMAGES.NORMAL_PROFILE_OUT, IMAGES.NORMAL_PROFILE_IN, IMAGES.NORMAL_PROFILE_CLICK], __HD__, __NO_BREATH__, function () {\r\n        init_profile(WORLD.MODE_PVP);\r\n    }, -180, 215, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __PROFILE__;\r\n    var SCORE_MODE_FOREST = COUNTER;\r\n    this.buttons[COUNTER] = gui_create_button(222, 68, \"\", [IMAGES.FOREST_PROFILE_OUT, IMAGES.FOREST_PROFILE_IN, IMAGES.FOREST_PROFILE_CLICK], __HD__, __NO_BREATH__, function () {\r\n        init_profile(WORLD.MODE_LEGACY);\r\n    }, -180, 260, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __PROFILE__;\r\n    var SCORE_MODE_ZOMBIE = COUNTER;\r\n    this.buttons[COUNTER] = gui_create_button(222, 68, \"\", [IMAGES.ZOMBIE_PROFILE_OUT, IMAGES.ZOMBIE_PROFILE_IN, IMAGES.ZOMBIE_PROFILE_CLICK], __HD__, __NO_BREATH__, function () {\r\n        init_profile(WORLD.MODE_ZOMBIES);\r\n    }, -60, 215, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __PROFILE__;\r\n    var SCORE_MODE_VAMPIRE = COUNTER;\r\n    this.buttons[COUNTER] = gui_create_button(222, 68, \"\", [IMAGES.VAMPIRE_PROFILE_OUT, IMAGES.VAMPIRE_PROFILE_IN, IMAGES.VAMPIRE_PROFILE_CLICK], __HD__, __NO_BREATH__, function () {\r\n        init_profile(WORLD.MODE_VAMPIRES);\r\n    }, -60, 260, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __PROFILE__;\r\n    this.LEADERBOARD_TOTAL = COUNTER;\r\n    this.buttons[COUNTER] = gui_create_button(143, 66, \"\", [IMAGES.TOTAL_LEAD_OUT, IMAGES.TOTAL_LEAD_IN, IMAGES.TOTAL_LEAD_CLICK], __HD__, __NO_BREATH__, function () {\r\n        getLeaderboard(undefined, ui.LEADERBOARD_TOTAL);\r\n    }, -298, 110, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __LEADERBOARD__;\r\n    this.LEADERBOARD_NORMAL = COUNTER;\r\n    this.buttons[COUNTER] = gui_create_button(104, 66, \"\", [IMAGES.NORMAL_LEAD_OUT, IMAGES.NORMAL_LEAD_IN, IMAGES.NORMAL_LEAD_CLICK], __HD__, __NO_BREATH__, function () {\r\n        getLeaderboard(undefined, ui.LEADERBOARD_NORMAL);\r\n    }, -223, 110, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __LEADERBOARD__;\r\n    this.LEADERBOARD_FOREST = COUNTER;\r\n    this.buttons[COUNTER] = gui_create_button(110, 66, \"\", [IMAGES.FOREST_LEAD_OUT, IMAGES.FOREST_LEAD_IN, IMAGES.FOREST_LEAD_CLICK], __HD__, __NO_BREATH__, function () {\r\n        getLeaderboard(undefined, ui.LEADERBOARD_FOREST);\r\n    }, -168, 110, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __LEADERBOARD__;\r\n    this.LEADERBOARD_ZOMBIE = COUNTER;\r\n    this.buttons[COUNTER] = gui_create_button(88, 66, \"\", [IMAGES.ZOMBIE_LEAD_OUT, IMAGES.ZOMBIE_LEAD_IN, IMAGES.ZOMBIE_LEAD_CLICK], __HD__, __NO_BREATH__, function () {\r\n        getLeaderboard(undefined, ui.LEADERBOARD_ZOMBIE);\r\n    }, -110, 110, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __LEADERBOARD__;\r\n    this.LEADERBOARD_VAMPIRE = COUNTER;\r\n    this.buttons[COUNTER] = gui_create_button(88, 66, \"\", [IMAGES.VAMPIRE_LEAD_OUT, IMAGES.VAMPIRE_LEAD_IN, IMAGES.VAMPIRE_LEAD_CLICK], __HD__, __NO_BREATH__, function () {\r\n        getLeaderboard(undefined, ui.LEADERBOARD_VAMPIRE);\r\n    }, -63, 110, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __LEADERBOARD__;\r\n    this.buttons[COUNTER] = gui_create_button(86, 44, \"\", [IMAGES.TERMS_BUTTON_OUT, IMAGES.TERMS_BUTTON_IN, IMAGES.TERMS_BUTTON_CLICK], __HD__, __NO_BREATH__, function () {\r\n        window.open(\"./terms.html\", \"_blank\");\r\n    }, 349, 290, __MIDDLE_X__ | __TOP__, __HIDE__);\r\n    this.buttons[COUNTER++].view = __SHOP__;\r\n    var skinSelector = new CosmeticSelector(COSMETICS.SKIN, FIRST_BUTTON_SKIN, function (v) {\r\n        ui.skin = v;\r\n        if (ui.unlock.skin[v] === 1) Cookies.set(\"starve_skin\", \"\" + v, {expires: 30});\r\n    }, this.skin, this.unlock.skin);\r\n    var bagSelector = new CosmeticSelector(COSMETICS.BAG, FIRST_BUTTON_BAG, function (v) {\r\n        ui.bag = v;\r\n        if (ui.unlock.bag[v] === 1) Cookies.set(\"starve_bag\", \"\" + v, {expires: 30});\r\n    }, this.bag, this.unlock.bag);\r\n    var bookSelector = new CosmeticSelector(COSMETICS.BOOK, FIRST_BUTTON_BOOK, function (v) {\r\n        ui.book = v;\r\n        if (ui.unlock.book[v] === 1) Cookies.set(\"starve_book\", \"\" + v, {expires: 30});\r\n    }, this.book, this.unlock.book);\r\n    var deadSelector = new CosmeticSelector(COSMETICS.CRATE, FIRST_BUTTON_CRATE, function (v) {\r\n        ui.dead = v;\r\n        if (ui.unlock.dead[v] === 1) Cookies.set(\"starve_dead\", \"\" + v, {expires: 30});\r\n    }, this.dead, this.unlock.dead);\r\n    var crateSelector = new CosmeticSelector(COSMETICS.CRATE, FIRST_BUTTON_LOOT, function (v) {\r\n        ui.crate = v;\r\n        if (ui.unlock.crate[v] === 1) Cookies.set(\"starve_crate\", \"\" + v, {expires: 30});\r\n    }, this.crate, this.unlock.crate);\r\n    var accessorySelector = new CosmeticSelector(COSMETICS.ACCESSORY, FIRST_BUTTON_ACCESSORY, function (v) {\r\n        ui.accessory = v;\r\n        if (ui.unlock.accessory[v] === 1) Cookies.set(\"starve_accessory\", \"\" + v, {expires: 30});\r\n    }, this.accessory, this.unlock.accessory);\r\n    this.trigger_mousedown = function (evt) {\r\n        mouse.pos = get_mouse_pos(_this.can, evt);\r\n        for (var i = 0; i < _this.buttons.length; i++) {\r\n            if (_this.buttons[i].info.active === __DISPLAY__) _this.buttons[i].trigger(_this.can, mouse.pos, MOUSE_DOWN);\r\n        }\r\n    };\r\n    this.trigger_mouseup = function (evt) {\r\n        mouse.pos = get_mouse_pos(_this.can, evt);\r\n        for (var i = 0; i < _this.buttons.length; i++) {\r\n            var button = _this.buttons[i];\r\n            if (button.info.active === __DISPLAY__) {\r\n                if (button.trigger(_this.can, mouse.pos, MOUSE_UP)) {\r\n                    button.info.callback();\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    this.current_cursor = false;\r\n    this.trigger_mousemove = function (evt) {\r\n        mouse.pos = get_mouse_pos(_this.can, evt);\r\n        var cursor = false;\r\n        for (var i = 0; i < _this.buttons.length; i++) {\r\n            if (_this.buttons[i].info.active === __DISPLAY__) cursor |= _this.buttons[i].trigger(_this.can, mouse.pos, MOUSE_MOVE);\r\n        }\r\n        if (_this.current_cursor !== cursor) {\r\n            _this.current_cursor = cursor;\r\n            if (cursor) can.style.cursor = _this.cursor1; else can.style.cursor = _this.cursor0;\r\n        }\r\n    };\r\n    this.add_event_listener = function () {\r\n        window.addEventListener(\"mousedown\", this.trigger_mousedown, false);\r\n        window.addEventListener(\"mouseup\", this.trigger_mouseup, false);\r\n        window.addEventListener(\"mousemove\", this.trigger_mousemove, false);\r\n    };\r\n    this.remove_event_listener = function () {\r\n        window.removeEventListener(\"mousedown\", this.trigger_mousedown, false);\r\n        window.removeEventListener(\"mouseup\", this.trigger_mouseup, false);\r\n        window.removeEventListener(\"mousemove\", this.trigger_mousemove, false);\r\n    };\r\n}\r\n;\r\nfunction Game(can, ctx) {\r\n    var _this = this;\r\n    this.can = can;\r\n    this.ctx = ctx;\r\n    if (window.navigator.userAgent.indexOf(\"Edge\") > -1) {\r\n        this.cursor0 = \"default\";\r\n        this.cursor1 = \"pointer\";\r\n    } else {\r\n        this.cursor0 = \"url('img/cursor0.png'), default\";\r\n        this.cursor1 = \"url('img/cursor1.png'), pointer\";\r\n    }\r\n    this.show_ui = 1;\r\n    this.show_clock = 1;\r\n    this.show_recipe_book = 1;\r\n    this.show_quest = 1;\r\n    this.team_box = {id: document.getElementById(\"team_box\"), style: document.getElementById(\"team_box\").style, update: function () {\r\n            this.style.left = Math.floor(canw2 - 125) + \"px\";\r\n            this.style.top = \"110px\";\r\n        }};\r\n    this.audio = {button_on: gui_create_button(60, 60, \"\", sprite[SPRITE.SOUND_BUTTON_ON]), button_off: gui_create_button(60, 60, \"\", sprite[SPRITE.SOUND_BUTTON_OFF])};\r\n    this.sign = {open: false, breads: 0, symbol: document.getElementById(\"sign_object\"), symbol_id: 0, id: document.getElementById(\"sign_window\"), style: document.getElementById(\"sign_window\").style, button: gui_create_button(60, 60, \"\", sprite[SPRITE.SIGN_BUTTON]), update_button: function () {\r\n            var x = Math.floor(Math.floor((3 + user.craft.can_craft.length) / 4) * (10 + sprite[SPRITE.INV_WOOD][0].width) + 35);\r\n            this.button.info.translate.x = x;\r\n            this.button.info.translate.y = 22;\r\n        }, update: function () {\r\n            this.style.left = Math.floor(canw2 - 150) + \"px\";\r\n            this.style.top = Math.floor(canh2 - 115) + \"px\";\r\n        }, quit: function () {\r\n            game.sign.style.display = \"none\";\r\n            game.sign.open = false;\r\n        }, select: function () {\r\n            game.sign.open = !game.sign.open;\r\n            if (game.sign.open) game.sign.style.display = \"inline-block\"; else game.sign.style.display = \"none\";\r\n        }, ok: function () {\r\n            client.update_sign(user.sign.iid, game.sign.symbol_id);\r\n            game.sign.select();\r\n        }, up: function () {\r\n            game.sign.symbol_id = game.sign.symbol_id === 0 ? CLIENT.SYMBOL_MAX - 1 : game.sign.symbol_id - 1;\r\n            game.sign.symbol.src = \"./img/sign\" + game.sign.symbol_id + \".png\";\r\n        }, down: function () {\r\n            game.sign.symbol_id = (game.sign.symbol_id + 1) % CLIENT.SYMBOL_MAX;\r\n            game.sign.symbol.src = \"./img/sign\" + game.sign.symbol_id + \".png\";\r\n        }};\r\n    document.getElementById(\"quit_sign\").addEventListener(\"mouseup\", this.sign.select, false);\r\n    document.getElementById(\"ok_sign\").addEventListener(\"mouseup\", this.sign.ok, false);\r\n    document.getElementById(\"sign_up\").addEventListener(\"mouseup\", this.sign.up, false);\r\n    document.getElementById(\"sign_down\").addEventListener(\"mouseup\", this.sign.down, false);\r\n    this.market = {open: false, id: document.getElementById(\"shop_market\"), style: document.getElementById(\"shop_market\").style, items: [{id: 0, name: \"wood\", val: 1, b: 1, a: 3, img_item: SPRITE.INV_WOOD}, {id: 1, name: \"stone\", val: 1, b: 1, a: 4, img_item: SPRITE.INV_STONE}, {id: 2, name: \"gold\", val: 1, b: 1, a: 6, img_item: SPRITE.INV_GOLD}, {id: 3, name: \"diamond\", val: 4, b: 4, a: 1, img_item: SPRITE.INV_DIAMOND}, {id: 4, name: \"amethyst\", val: 8, b: 8, a: 1, img_item: SPRITE.INV_AMETHYST}, {id: 5, name: \"reidite\", val: 16, b: 16, a: 1, img_item: SPRITE.INV_REIDITE}, {id: 6, name: \"pumpkin_seed\", val: 10, b: 10, a: 1, img_item: SPRITE.INV_PUMPKIN_SEED}, {id: 7, name: \"carrot_seed\", val: 16, b: 16, a: 1, img_item: SPRITE.INV_CARROT_SEED}, {id: 8, name: \"tomato_seed\", val: 20, b: 20, a: 1, img_item: SPRITE.INV_TOMATO_SEED}, {id: 9, name: \"thornbush_seed\", val: 30, b: 30, a: 1, img_item: SPRITE.INV_THORNBUSH_SEED}, {id: 10, name: \"garlic_seed\", val: 40, b: 40, a: 1, img_item: SPRITE.INV_GARLIC_SEED}, {id: 11, name: \"watermelon_seed\", val: 60, b: 60, a: 1, img_item: SPRITE.INV_WATERMELON_SEED}], button: gui_create_button(60, 60, \"\", sprite[SPRITE.MARKET_BUTTON]), update: function () {\r\n            this.style.left = Math.floor(canw2 - 450) + \"px\";\r\n            this.style.top = Math.floor(canh2 - 270) + \"px\";\r\n        }, select: function () {\r\n            game.market.open = !game.market.open;\r\n            if (game.market.open) {\r\n                game.market.style.display = \"inline-block\";\r\n            } else game.market.style.display = \"none\";\r\n        }, quit: function () {\r\n            game.market.style.display = \"none\";\r\n            game.market.open = false;\r\n        }, buy: function () {\r\n            client.buy_market(this.itemMarket);\r\n        }, change: function () {\r\n            var id = this.id;\r\n            if (this.itemMarket.a === 1) {\r\n                var value = Math.floor(Number(this.value) * this.itemMarket.b);\r\n                this.itemMarket.val = value;\r\n                document.getElementById(this.itemMarket.name + \"_trad_number\").innerHTML = value + \"\";\r\n            } else {\r\n                var value = Math.floor(Number(this.value) / this.itemMarket.a);\r\n                this.itemMarket.val = value;\r\n                document.getElementById(this.itemMarket.name + \"_trad_number\").innerHTML = value + \"\";\r\n            }\r\n        }};\r\n    document.getElementById(\"quit_market\").addEventListener(\"mouseup\", this.market.quit, false);\r\n    var binding = [[\"mouseup\", this.market.buy, \"buy_\"], [\"click\", this.market.change, \"\"], [\"change\", this.market.change, \"\"], [\"keypress\", this.market.keypress, \"\"]];\r\n    for (var j = 0; j < this.market.items.length; j++) {\r\n        var item = this.market.items[j];\r\n        document.getElementById(item.name + \"_market\").src = sprite[item.img_item][0]._src === undefined ? sprite[item.img_item][0].src : sprite[item.img_item][0]._src;\r\n        if (item.a === 1) {\r\n            document.getElementById(item.name + \"_trad_number\").innerHTML = item.b;\r\n            document.getElementById(item.name + \"_number\").value = 1;\r\n            document.getElementById(item.name + \"_number\").step = 1;\r\n            document.getElementById(item.name + \"_number\").min = 1;\r\n            document.getElementById(item.name + \"_number\").max = Math.floor(255 / item.b);\r\n        } else {\r\n            document.getElementById(item.name + \"_trad_number\").innerHTML = 1;\r\n            document.getElementById(item.name + \"_number\").value = item.a;\r\n            document.getElementById(item.name + \"_number\").step = item.a;\r\n            document.getElementById(item.name + \"_number\").min = item.a;\r\n        }\r\n        document.getElementById(\"buy_\" + item.name + \"_number\").itemMarket = item;\r\n        document.getElementById(item.name + \"_number\").itemMarket = item;\r\n        for (var i = 0; i < binding.length; i++) document.getElementById(binding[i][2] + item.name + \"_number\").addEventListener(binding[i][0], binding[i][1], false);\r\n    }\r\n    $(\"[type='number']\").keypress(function (evt) {\r\n        evt.preventDefault();\r\n    });\r\n    this.options = {open: false, id: document.getElementById(\"option_in_game\"), style: document.getElementById(\"option_in_game\").style, agree: document.getElementById(\"agree_ing\").style, cancel_agree: document.getElementById(\"cancel_agree_ing\").style, quests_agree: document.getElementById(\"quest_agree_ing\").style, spectator_agree: document.getElementById(\"spectator_agree_ing\").style, feed_agree: document.getElementById(\"auto_feed_agree_ing\").style, info_box_agree: document.getElementById(\"info_agree_ing\").style, aliasing_agree: document.getElementById(\"pixelated_agree_ing\").style, button: gui_create_button(60, 60, \"\", sprite[SPRITE.OPTION_BUTTON]), select_options: function () {\r\n            game.options.open = !game.options.open;\r\n            if (game.options.open) game.options.style.display = \"inline-block\"; else game.options.style.display = \"none\";\r\n        }, azerty: function () {\r\n            ui.set_azerty();\r\n        }, qwerty: function () {\r\n            ui.set_qwerty();\r\n        }, high: function () {\r\n            ui.high_quality();\r\n        }, low: function () {\r\n            ui.low_quality();\r\n        }, checkbox: function () {\r\n            game.safe_delete.checkbox();\r\n        }, cancel_checkbox: function () {\r\n            game.safe_cancel.checkbox();\r\n        }, quest_checkbox: function () {\r\n            game.quests.checkbox();\r\n        }, spectator_checkbox: function () {\r\n            user.show_spectators.invert();\r\n        }, feed_checkbox: function () {\r\n            user.auto_feed.invert();\r\n        }, quit: function () {\r\n            game.options.style.display = \"none\";\r\n            game.options.open = false;\r\n        }, update: function () {\r\n            this.style.left = Math.floor(canw2 - 235) + \"px\";\r\n            this.style.top = Math.floor(canh2 - 170) + \"px\";\r\n        }};\r\n    document.getElementById(\"azerty_ing\").addEventListener(\"mouseup\", this.options.azerty, false);\r\n    document.getElementById(\"qwerty_ing\").addEventListener(\"mouseup\", this.options.qwerty, false);\r\n    document.getElementById(\"low_ing\").addEventListener(\"mouseup\", this.options.low, false);\r\n    document.getElementById(\"high_ing\").addEventListener(\"mouseup\", this.options.high, false);\r\n    document.getElementById(\"quit_opt\").addEventListener(\"mouseup\", this.options.quit, false);\r\n    document.getElementById(\"case_agree_opt\").addEventListener(\"mouseup\", this.options.checkbox, false);\r\n    document.getElementById(\"quest_case_agree_opt\").addEventListener(\"mouseup\", this.options.quest_checkbox, false);\r\n    document.getElementById(\"cancel_case_agree_opt\").addEventListener(\"mouseup\", this.options.cancel_checkbox, false);\r\n    document.getElementById(\"spectator_case_agree_opt\").addEventListener(\"mouseup\", this.options.spectator_checkbox, false);\r\n    document.getElementById(\"auto_feed_case_agree_opt\").addEventListener(\"mouseup\", this.options.feed_checkbox, false);\r\n    this.safe_cancel = {open: false, activated: Cookies.get(\"starve_cancel\") ? Cookies.get(\"starve_cancel\") === \"0\" ? 0 : 1 : 1, id: document.getElementById(\"cancel_sure_delete\"), style: document.getElementById(\"cancel_sure_delete\").style, agree: document.getElementById(\"cancel_agree\").style, button: 0, i: 0, quit: function () {\r\n            game.safe_cancel.style.display = \"none\";\r\n            game.safe_cancel.open = false;\r\n        }, yes: function () {\r\n            if (user.craft.crafting) client.cancel_crafting();\r\n            game.safe_cancel.quit();\r\n        }, checkbox: function () {\r\n            if (!game.safe_cancel.activated) {\r\n                Cookies.set(\"starve_cancel\", \"1\");\r\n                game.safe_cancel.agree.display = \"none\";\r\n                game.options.cancel_agree.display = \"inline-block\";\r\n            } else {\r\n                Cookies.set(\"starve_cancel\", \"0\");\r\n                game.safe_cancel.agree.display = \"inline-block\";\r\n                game.options.cancel_agree.display = \"none\";\r\n            }\r\n            game.safe_cancel.activated = !game.safe_cancel.activated;\r\n        }, del: function () {\r\n            if (!this.activated) this.yes(); else {\r\n                this.style.display = \"inline-block\";\r\n                this.open = true;\r\n            }\r\n        }, update: function () {\r\n            this.style.left = Math.floor(canw2 - 235) + \"px\";\r\n            this.style.top = Math.floor(canh2 - 130) + \"px\";\r\n        }};\r\n    this.safe_cancel.id.oncontextmenu = function () {\r\n        return false;\r\n    };\r\n    this.safe_cancel.agree.display = \"none\";\r\n    if (this.safe_cancel.activated) this.options.cancel_agree.display = \"inline-block\"; else this.options.cancel_agree.display = \"none\";\r\n    document.getElementById(\"cancel_yes_delete\").addEventListener(\"mouseup\", this.safe_cancel.yes, false);\r\n    document.getElementById(\"cancel_no_delete\").addEventListener(\"mouseup\", this.safe_cancel.quit, false);\r\n    document.getElementById(\"cancel_case_agree\").addEventListener(\"mouseup\", this.safe_cancel.checkbox, false);\r\n    document.addEventListener(\"cancel_sure_delete\", function (e) {\r\n        e.preventDefault();\r\n    }, false);\r\n    this.aliasing = {activated: Cookies.get(\"starve_aliasing\") ? Cookies.get(\"starve_aliasing\") === \"0\" ? 0 : 1 : 1, set_aliasing: function (val) {\r\n            if (val) document.getElementById(\"game_canvas\").style.imageRendering = \"pixelated\"; else document.getElementById(\"game_canvas\").style.imageRendering = \"auto\";\r\n        }, checkbox: function () {\r\n            if (game.aliasing.activated === 0) {\r\n                Cookies.set(\"starve_aliasing\", \"1\");\r\n                game.aliasing.set_aliasing(1);\r\n                game.options.aliasing_agree.display = \"inline-block\";\r\n            } else {\r\n                Cookies.set(\"starve_aliasing\", \"0\");\r\n                game.aliasing.set_aliasing(0);\r\n                game.options.aliasing_agree.display = \"none\";\r\n            }\r\n            game.aliasing.activated = (game.aliasing.activated + 1) % 2;\r\n        }};\r\n    if (this.aliasing.activated === 1) this.options.aliasing_agree.display = \"inline-block\"; else {\r\n        this.aliasing.set_aliasing(0);\r\n        this.options.aliasing_agree.display = \"none\";\r\n    }\r\n    document.getElementById(\"pixelated_case_agree_opt\").addEventListener(\"mouseup\", this.aliasing.checkbox, false);\r\n    this.info_box = {activated: Cookies.get(\"starve_info_box\") ? Cookies.get(\"starve_info_box\") === \"0\" ? 0 : 1 : 1, display: 0, x: 0, y: 0, id: 0, craft: 0, checkbox: function () {\r\n            if (game.info_box.activated === 0) {\r\n                Cookies.set(\"starve_info_box\", \"1\");\r\n                game.options.info_box_agree.display = \"inline-block\";\r\n            } else {\r\n                Cookies.set(\"starve_info_box\", \"0\");\r\n                game.options.info_box_agree.display = \"none\";\r\n            }\r\n            game.info_box.activated = (game.info_box.activated + 1) % 2;\r\n        }, trigger: function (on, button, craft) {\r\n            if (on && this.activated) {\r\n                this.display = 1;\r\n                if (craft === 0) this.id = button.id; else this.id = RECIPES[button.id].id2;\r\n                this.x = button.info.translate.x + 80;\r\n                this.y = button.info.translate.y;\r\n                this.craft = craft;\r\n            }\r\n            return on;\r\n        }};\r\n    if (this.info_box.activated === 1) this.options.info_box_agree.display = \"inline-block\"; else this.options.info_box_agree.display = \"none\";\r\n    document.getElementById(\"info_case_agree_opt\").addEventListener(\"mouseup\", this.info_box.checkbox, false);\r\n    if (Cookies.get(\"starve_scale\")) {\r\n        ratio_opt = Number(Cookies.get(\"starve_scale\"));\r\n        document.getElementById(\"input_ratio\").value = ratio_opt;\r\n        ratio_opt *= devicePixelRatio / backingStoreRatio;\r\n        resize_canvas();\r\n    }\r\n    this.change_ratio = function () {\r\n        Cookies.set(\"starve_scale\", \"\" + document.getElementById(\"input_ratio\").value);\r\n        ratio_opt = document.getElementById(\"input_ratio\").value * (devicePixelRatio / backingStoreRatio);\r\n        resize_canvas();\r\n    };\r\n    document.getElementById(\"input_ratio\").addEventListener(\"input\", this.change_ratio, false);\r\n    this.safe_delete = {open: false, activated: Cookies.get(\"starve_safe\") ? Cookies.get(\"starve_safe\") === \"0\" ? 0 : 1 : 1, id: document.getElementById(\"sure_delete\"), style: document.getElementById(\"sure_delete\").style, agree: document.getElementById(\"agree\").style, button: 0, i: 0, quit: function () {\r\n            game.safe_delete.style.display = \"none\";\r\n            game.safe_delete.open = false;\r\n        }, all: function () {\r\n            if (!user.build.wait) {\r\n                if (user.craft.preview < 0 && user.craft.id < 0 && !user.ghost.enabled) client.delete_inv(game.safe_delete.button);\r\n                game.safe_delete.quit();\r\n            }\r\n        }, recycle: function () {\r\n            if (user.craft.workbench && !user.build.wait) {\r\n                if (user.craft.preview < 0 && user.craft.id < 0 && !user.ghost.enabled) client.recycle_inv(game.safe_delete.button);\r\n                game.safe_delete.quit();\r\n            }\r\n        }, one: function () {\r\n            if (!user.build.wait) {\r\n                if (user.craft.preview < 0 && user.craft.id < 0 && !user.ghost.enabled) client.delete_one_inv(game.safe_delete.button);\r\n                game.safe_delete.quit();\r\n            }\r\n        }, checkbox: function () {\r\n            if (!game.safe_delete.activated) {\r\n                Cookies.set(\"starve_safe\", \"1\");\r\n                game.safe_delete.agree.display = \"none\";\r\n                game.options.agree.display = \"inline-block\";\r\n            } else {\r\n                Cookies.set(\"starve_safe\", \"0\");\r\n                game.safe_delete.agree.display = \"inline-block\";\r\n                game.options.agree.display = \"none\";\r\n            }\r\n            game.safe_delete.activated = !game.safe_delete.activated;\r\n        }, del: function (button) {\r\n            this.button = button;\r\n            document.getElementById(\"item_to_del\").src = sprite[INV_INFOS[button].img][0]._src === undefined ? sprite[INV_INFOS[button].img][0].src : sprite[INV_INFOS[button].img][0]._src;\r\n            if (INV_INFOS[button].recycle && !user.zombie && user.craft.workbench) document.getElementById(\"recycle_delete\").style.display = \"inline-block\"; else document.getElementById(\"recycle_delete\").style.display = \"none\";\r\n            if (!this.activated) this.all(); else {\r\n                this.style.display = \"inline-block\";\r\n                this.open = true;\r\n            }\r\n        }, update: function () {\r\n            this.style.left = Math.floor(canw2 - 235) + \"px\";\r\n            this.style.top = Math.floor(canh2 - 175) + \"px\";\r\n        }};\r\n    this.safe_delete.agree.display = \"none\";\r\n    if (this.safe_delete.activated) this.options.agree.display = \"inline-block\"; else this.options.agree.display = \"none\";\r\n    document.getElementById(\"one_delete\").addEventListener(\"mouseup\", this.safe_delete.one, false);\r\n    document.getElementById(\"yes_delete\").addEventListener(\"mouseup\", this.safe_delete.all, false);\r\n    document.getElementById(\"recycle_delete\").addEventListener(\"mouseup\", this.safe_delete.recycle, false);\r\n    document.getElementById(\"no_delete\").addEventListener(\"mouseup\", this.safe_delete.quit, false);\r\n    document.getElementById(\"case_agree\").addEventListener(\"mouseup\", this.safe_delete.checkbox, false);\r\n    this.shop = {open: false, kit: -1, button: gui_create_button(60, 60, \"\", sprite[SPRITE.SHOP]), id: document.getElementById(\"shop_starterkit\"), style: document.getElementById(\"shop_starterkit\").style, update: function () {\r\n            this.style.left = Math.floor(canw2 - 300) + \"px\";\r\n            this.style.top = Math.floor(canh2 - 215) + \"px\";\r\n        }, quit: function () {\r\n            game.shop.open = false;\r\n            game.shop.style.display = \"none\";\r\n        }, select: function () {\r\n            game.shop.open = !game.shop.open;\r\n            if (!game.shop.open) game.shop.style.display = \"none\"; else game.shop.style.display = \"inline-block\";\r\n        }, buy: function () {\r\n            if (game.shop.kit >= 0) {\r\n                client.choose_kit(game.shop.kit);\r\n                game.shop.quit();\r\n                if (ga) ga(\"send\", \"event\", \"Game\", \"kit\", \"\" + game.shop.kit);\r\n            }\r\n        }, init: function () {\r\n            var price = user.shop.value;\r\n            document.getElementById(\"points_bank\").innerHTML = Utils.simplify_number(price) + \" points\";\r\n            for (var i = 0; i < KIT.length; i++) {\r\n                if (KIT[i].price > price) document.getElementById(\"starter\" + (i + 1)).style.opacity = \"0.4\"; else document.getElementById(\"starter\" + (i + 1)).style.opacity = \"1\";\r\n            }\r\n            for (i = 1; i < 13; i++) {\r\n                document.getElementById(\"inv_shop\" + i).src = \"./img/empty-shop.png\";\r\n                document.getElementById(\"amount_shop\" + i).innerHTML = \"\";\r\n            }\r\n            document.getElementById(\"buy_kit\").style.opacity = \"0.2\";\r\n        }, get_starter: function () {\r\n            if (this.id.length > 8) var id = Number(this.id.charAt(7) + this.id.charAt(8)); else var id = Number(this.id.charAt(7));\r\n            var s = KIT[id - 1];\r\n            if (user.shop.value >= s.price) {\r\n                game.shop.kit = id;\r\n                document.getElementById(\"buy_kit\").style.opacity = \"1\";\r\n            } else {\r\n                game.shop.kit = -1;\r\n                document.getElementById(\"buy_kit\").style.opacity = \"0.2\";\r\n            }\r\n            s = s.items;\r\n            for (var i = 1, j = 1; i < s.length + 1; i++) {\r\n                if (s[i - 1][1] === INV.BAG) continue;\r\n                document.getElementById(\"inv_shop\" + j).style.display = \"inline-block\";\r\n                document.getElementById(\"inv_shop\" + j).src = sprite[INV_INFOS[s[i - 1][1]].img][0]._src === undefined ? sprite[INV_INFOS[s[i - 1][1]].img][0].src : sprite[INV_INFOS[s[i - 1][1]].img][0]._src;\r\n                document.getElementById(\"amount_shop\" + j).innerHTML = \"\" + s[i - 1][0];\r\n                j++;\r\n            }\r\n            for (; j < 13; j++) {\r\n                document.getElementById(\"inv_shop\" + j).src = \"./img/empty-shop.png\";\r\n                document.getElementById(\"amount_shop\" + j).innerHTML = \"\";\r\n            }\r\n        }};\r\n    document.getElementById(\"quit3\").addEventListener(\"mouseup\", this.shop.quit, false);\r\n    document.getElementById(\"buy_kit\").addEventListener(\"mouseup\", this.shop.buy, false);\r\n    for (var i = 1; i < 11; i++) document.getElementById(\"starter\" + i).addEventListener(\"mouseup\", this.shop.get_starter, false);\r\n    this.quests = {open: false, activated: Cookies.get(\"starve_quests\") ? Cookies.get(\"starve_quests\") === \"1\" ? 1 : 0 : 0, button: gui_create_button(60, 60, \"\", sprite[SPRITE.QUEST_BUTTON]), id: document.getElementById(\"chronoquest\"), style: document.getElementById(\"chronoquest\").style, update: function () {\r\n            this.style.left = Math.floor(canw2 - 420) + \"px\";\r\n            this.style.top = Math.floor(canh2 - 270) + \"px\";\r\n        }, quit: function () {\r\n            game.quests.style.display = \"none\";\r\n            game.quests.open = false;\r\n        }, select: function () {\r\n            game.quests.open = !game.quests.open;\r\n            if (!game.quests.open) game.quests.style.display = \"none\"; else game.quests.style.display = \"inline-block\";\r\n        }, list: [], reset: function () {\r\n            for (var i = 0; i < QUESTS.length; i++) {\r\n                this.list[i] = 1;\r\n                document.getElementById(\"timeremain_\" + i).style.display = \"inline-block\";\r\n                document.getElementById(\"time_finished_\" + i).style.display = \"none\";\r\n                document.getElementById(\"claim_reward_\" + i).style.display = \"none\";\r\n            }\r\n        }, timer: 0, born: 0, update_chrono: function () {\r\n            if (!game.quests.open) return;\r\n            var now = (new Date).getTime();\r\n            if (now - this.timer < 1e3) return;\r\n            this.timer = now;\r\n            for (var i = 0; i < QUESTS.length; i++) {\r\n                if (!game.quests.list[i]) continue;\r\n                var t = QUESTS[i].time - (now - world.clock.init + game.quests.born);\r\n                if (t > 96e4) {\r\n                    document.getElementById(\"timeremain_\" + i).innerHTML = Math.floor(t / 48e4) + \" days\";\r\n                } else if (t > 48e4) {\r\n                    document.getElementById(\"timeremain_\" + i).innerHTML = Math.floor(t / 48e4) + \" day\";\r\n                } else if (t > 6e4) {\r\n                    document.getElementById(\"timeremain_\" + i).innerHTML = Math.floor(t / 6e4) + \" min\";\r\n                } else document.getElementById(\"timeremain_\" + i).innerHTML = Math.floor(t / 1e3) + \" sec\";\r\n            }\r\n        }, restore: function (l) {\r\n            for (var i = 0; i < l.length; i++) {\r\n                if (l[i] != 1) game.quests.modify_simple(i, l[i]);\r\n            }\r\n        }, modify_simple: function (id, type) {\r\n            if (type === 3 && (id === 11 || id === 12)) {\r\n                user.inv.update_bag_size(0, 1);\r\n                game.update_inv_buttons();\r\n            }\r\n            document.getElementById(\"timeremain_\" + id).innerHTML = \"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\";\r\n            if (type > 1) {\r\n                document.getElementById(\"time_finished_\" + id).innerHTML = \"SUCCEED\";\r\n                document.getElementById(\"timeremain_\" + id).style.display = \"none\";\r\n            } else if (type === 0) {\r\n                document.getElementById(\"time_finished_\" + id).innerHTML = \"FAILED\";\r\n                document.getElementById(\"timeremain_\" + id).style.display = \"none\";\r\n            }\r\n            if (type === 2) document.getElementById(\"claim_reward_\" + id).style.display = \"inline-block\"; else document.getElementById(\"claim_reward_\" + id).style.display = \"none\";\r\n            document.getElementById(\"time_finished_\" + id).style.display = \"inline\";\r\n            game.quests.list[id] = 0;\r\n        }, modify: function (id, type) {\r\n            game.quests.modify_simple(id, type);\r\n            if (game.quests.activated) {\r\n                game.quests.open = true;\r\n                game.quests.style.display = \"inline-block\";\r\n            }\r\n        }, checkbox: function () {\r\n            if (!game.quests.activated) {\r\n                Cookies.set(\"starve_quests\", \"1\");\r\n                game.options.quests_agree.display = \"inline-block\";\r\n            } else {\r\n                Cookies.set(\"starve_quests\", \"0\");\r\n                game.options.quests_agree.display = \"none\";\r\n            }\r\n            game.quests.activated = !game.quests.activated;\r\n        }, claim: function () {\r\n            var n = Number(this.id.charAt(13));\r\n            var m = Number(this.id.charAt(14));\r\n            if (this.id.charAt(14) !== \"\" && m >= 0 && m <= 9) n = n * 10 + m;\r\n            client.claim_quest_reward(n);\r\n        }};\r\n    if (this.quests.activated) this.options.quests_agree.display = \"inline-block\"; else this.options.quests_agree.display = \"none\";\r\n    document.getElementById(\"quit_chronoquest\").addEventListener(\"mouseup\", this.quests.quit, false);\r\n    for (var i = 0; i < QUESTS.length; i++) document.getElementById(\"claim_reward_\" + i).addEventListener(\"mouseup\", this.quests.claim, false);\r\n    this.craft_list = {open: false, button: gui_create_button(60, 60, \"\", sprite[SPRITE.RECIPE_BUTTON]), list: {id: document.getElementById(\"recipe_craft\"), style: document.getElementById(\"recipe_craft\").style, recipes: [], category: 0, update: function () {\r\n                this.style.left = Math.floor(canw2 - 335) + \"px\";\r\n                this.style.top = Math.floor(canh2 - 215) + \"px\";\r\n            }, quit: function () {\r\n                document.getElementById(\"recipe_craft\").style.display = \"none\";\r\n                game.craft_list.open = false;\r\n            }, previous: function () {\r\n                document.getElementById(\"recipe_craft\").style.display = \"none\";\r\n                document.getElementById(\"home_craft\").style.display = \"inline-block\";\r\n            }, get_recipe: function (i) {\r\n                var r = this.recipes[i];\r\n                if (r.o) document.getElementById(\"watercraft\").style.display = \"inline-block\"; else document.getElementById(\"watercraft\").style.display = \"none\";\r\n                if (r.f) document.getElementById(\"firecraft\").style.display = \"inline-block\"; else document.getElementById(\"firecraft\").style.display = \"none\";\r\n                if (r.w) document.getElementById(\"workcraft\").style.display = \"inline-block\"; else document.getElementById(\"workcraft\").style.display = \"none\";\r\n                if (r.e) document.getElementById(\"wellcraft\").style.display = \"inline-block\"; else document.getElementById(\"wellcraft\").style.display = \"none\";\r\n                var r = r.r;\r\n                for (var i = 0, j = 1; i < r.length; i++) {\r\n                    document.getElementById(\"inv\" + j).style.display = \"inline-block\";\r\n                    document.getElementById(\"inv\" + j).src = sprite[INV_INFOS[r[i][0]].img][0]._src === undefined ? sprite[INV_INFOS[r[i][0]].img][0].src : sprite[INV_INFOS[r[i][0]].img][0]._src;\r\n                    document.getElementById(\"numb\" + j).innerHTML = \"\" + r[i][1];\r\n                    j++;\r\n                }\r\n                for (; j < 6; j++) {\r\n                    document.getElementById(\"inv\" + j).style.display = \"none\";\r\n                    document.getElementById(\"numb\" + j).innerHTML = \"\";\r\n                }\r\n            }, select: function (category) {\r\n                this.category = category;\r\n                document.getElementById(\"home_craft\").style.display = \"none\";\r\n                document.getElementById(\"workcraft\").style.display = \"none\";\r\n                document.getElementById(\"firecraft\").style.display = \"none\";\r\n                document.getElementById(\"watercraft\").style.display = \"none\";\r\n                document.getElementById(\"wellcraft\").style.display = \"none\";\r\n                document.getElementById(\"recipe_craft\").style.display = \"inline-block\";\r\n                document.getElementById(\"inv1\").style.display = \"none\";\r\n                document.getElementById(\"inv2\").style.display = \"none\";\r\n                document.getElementById(\"inv3\").style.display = \"none\";\r\n                document.getElementById(\"inv4\").style.display = \"none\";\r\n                document.getElementById(\"inv5\").style.display = \"none\";\r\n                document.getElementById(\"numb1\").innerHTML = \"\";\r\n                document.getElementById(\"numb2\").innerHTML = \"\";\r\n                document.getElementById(\"numb3\").innerHTML = \"\";\r\n                document.getElementById(\"numb4\").innerHTML = \"\";\r\n                document.getElementById(\"numb5\").innerHTML = \"\";\r\n                for (var i = 0, j = 0; i < RECIPES.length; i++) {\r\n                    var r = RECIPES[i];\r\n                    if (category === r.t) {\r\n                        this.recipes[j] = r;\r\n                        j++;\r\n                        document.getElementById(\"img_\" + j).style.display = \"inline-block\";\r\n                        document.getElementById(\"img_\" + j).src = sprite[INV_INFOS[r.id2].img][0]._src === undefined ? sprite[INV_INFOS[r.id2].img][0].src : sprite[INV_INFOS[r.id2].img][0]._src;\r\n                    }\r\n                }\r\n                for (j++; j < 49; j++) document.getElementById(\"img_\" + j).style.display = \"none\";\r\n            }}, home: {id: document.getElementById(\"home_craft\"), style: document.getElementById(\"home_craft\").style, update: function () {\r\n                this.style.left = Math.floor(canw2 - 285) + \"px\";\r\n                this.style.top = Math.floor(canh2 - 170) + \"px\";\r\n            }, quit: function () {\r\n                document.getElementById(\"home_craft\").style.display = \"none\";\r\n                game.craft_list.open = false;\r\n            }}, select_book: function () {\r\n            this.open = !this.open;\r\n            if (!this.open) {\r\n                document.getElementById(\"home_craft\").style.display = \"none\";\r\n                document.getElementById(\"recipe_craft\").style.display = \"none\";\r\n            } else document.getElementById(\"home_craft\").style.display = \"inline-block\";\r\n        }};\r\n    document.getElementById(\"quit\").addEventListener(\"mouseup\", this.craft_list.home.quit, false);\r\n    document.getElementById(\"quitmenu\").addEventListener(\"mouseup\", this.craft_list.list.quit, false);\r\n    document.getElementById(\"backhome\").addEventListener(\"mouseup\", this.craft_list.list.previous, false);\r\n    document.getElementById(\"hatcategory\").addEventListener(\"mouseup\", function () {\r\n        game.craft_list.list.select(CATEGORY.CLOTHES);\r\n    }, false);\r\n    document.getElementById(\"weaponcategory\").addEventListener(\"mouseup\", function () {\r\n        game.craft_list.list.select(CATEGORY.WEAPONS);\r\n    }, false);\r\n    document.getElementById(\"toolcategory\").addEventListener(\"mouseup\", function () {\r\n        game.craft_list.list.select(CATEGORY.TOOLS);\r\n    }, false);\r\n    document.getElementById(\"foodcategory\").addEventListener(\"mouseup\", function () {\r\n        game.craft_list.list.select(CATEGORY.FOODS);\r\n    }, false);\r\n    document.getElementById(\"placeablecategory\").addEventListener(\"mouseup\", function () {\r\n        game.craft_list.list.select(CATEGORY.UTILS);\r\n    }, false);\r\n    document.getElementById(\"constructioncategory\").addEventListener(\"mouseup\", function () {\r\n        game.craft_list.list.select(CATEGORY.BASES);\r\n    }, false);\r\n    document.getElementById(\"img_1\").addEventListener(\"mousedown\", function () {\r\n        game.craft_list.list.get_recipe(0);\r\n    }, false);\r\n    document.getElementById(\"img_2\").addEventListener(\"mousedown\", function () {\r\n        game.craft_list.list.get_recipe(1);\r\n    }, false);\r\n    document.getElementById(\"img_3\").addEventListener(\"mousedown\", function () {\r\n        game.craft_list.list.get_recipe(2);\r\n    }, false);\r\n    document.getElementById(\"img_4\").addEventListener(\"mousedown\", function () {\r\n        game.craft_list.list.get_recipe(3);\r\n    }, false);\r\n    document.getElementById(\"img_5\").addEventListener(\"mousedown\", function () {\r\n        game.craft_list.list.get_recipe(4);\r\n    }, false);\r\n    document.getElementById(\"img_6\").addEventListener(\"mousedown\", function () {\r\n        game.craft_list.list.get_recipe(5);\r\n    }, false);\r\n    document.getElementById(\"img_7\").addEventListener(\"mousedown\", function () {\r\n        game.craft_list.list.get_recipe(6);\r\n    }, false);\r\n    document.getElementById(\"img_8\").addEventListener(\"mousedown\", function () {\r\n        game.craft_list.list.get_recipe(7);\r\n    }, false);\r\n    document.getElementById(\"img_9\").addEventListener(\"mousedown\", function () {\r\n        game.craft_list.list.get_recipe(8);\r\n    }, false);\r\n    document.getElementById(\"img_10\").addEventListener(\"mousedown\", function () {\r\n        game.craft_list.list.get_recipe(9);\r\n    }, false);\r\n    document.getElementById(\"img_11\").addEventListener(\"mousedown\", function () {\r\n        game.craft_list.list.get_recipe(10);\r\n    }, false);\r\n    document.getElementById(\"img_12\").addEventListener(\"mousedown\", function () {\r\n        game.craft_list.list.get_recipe(11);\r\n    }, false);\r\n    document.getElementById(\"img_13\").addEventListener(\"mousedown\", function () {\r\n        game.craft_list.list.get_recipe(12);\r\n    }, false);\r\n    document.getElementById(\"img_14\").addEventListener(\"mousedown\", function () {\r\n        game.craft_list.list.get_recipe(13);\r\n    }, false);\r\n    document.getElementById(\"img_15\").addEventListener(\"mousedown\", function () {\r\n        game.craft_list.list.get_recipe(14);\r\n    }, false);\r\n    document.getElementById(\"img_16\").addEventListener(\"mousedown\", function () {\r\n        game.craft_list.list.get_recipe(15);\r\n    }, false);\r\n    document.getElementById(\"img_17\").addEventListener(\"mousedown\", function () {\r\n        game.craft_list.list.get_recipe(16);\r\n    }, false);\r\n    document.getElementById(\"img_18\").addEventListener(\"mousedown\", function () {\r\n        game.craft_list.list.get_recipe(17);\r\n    }, false);\r\n    document.getElementById(\"img_19\").addEventListener(\"mousedown\", function () {\r\n        game.craft_list.list.get_recipe(18);\r\n    }, false);\r\n    document.getElementById(\"img_20\").addEventListener(\"mousedown\", function () {\r\n        game.craft_list.list.get_recipe(19);\r\n    }, false);\r\n    document.getElementById(\"img_21\").addEventListener(\"mousedown\", function () {\r\n        game.craft_list.list.get_recipe(20);\r\n    }, false);\r\n    document.getElementById(\"img_22\").addEventListener(\"mousedown\", function () {\r\n        game.craft_list.list.get_recipe(21);\r\n    }, false);\r\n    document.getElementById(\"img_23\").addEventListener(\"mousedown\", function () {\r\n        game.craft_list.list.get_recipe(22);\r\n    }, false);\r\n    document.getElementById(\"img_24\").addEventListener(\"mousedown\", function () {\r\n        game.craft_list.list.get_recipe(23);\r\n    }, false);\r\n    document.getElementById(\"img_25\").addEventListener(\"mousedown\", function () {\r\n        game.craft_list.list.get_recipe(24);\r\n    }, false);\r\n    document.getElementById(\"img_26\").addEventListener(\"mousedown\", function () {\r\n        game.craft_list.list.get_recipe(25);\r\n    }, false);\r\n    document.getElementById(\"img_27\").addEventListener(\"mousedown\", function () {\r\n        game.craft_list.list.get_recipe(26);\r\n    }, false);\r\n    document.getElementById(\"img_28\").addEventListener(\"mousedown\", function () {\r\n        game.craft_list.list.get_recipe(27);\r\n    }, false);\r\n    document.getElementById(\"img_29\").addEventListener(\"mousedown\", function () {\r\n        game.craft_list.list.get_recipe(28);\r\n    }, false);\r\n    document.getElementById(\"img_30\").addEventListener(\"mousedown\", function () {\r\n        game.craft_list.list.get_recipe(29);\r\n    }, false);\r\n    document.getElementById(\"img_31\").addEventListener(\"mousedown\", function () {\r\n        game.craft_list.list.get_recipe(30);\r\n    }, false);\r\n    document.getElementById(\"img_32\").addEventListener(\"mousedown\", function () {\r\n        game.craft_list.list.get_recipe(31);\r\n    }, false);\r\n    document.getElementById(\"img_33\").addEventListener(\"mousedown\", function () {\r\n        game.craft_list.list.get_recipe(32);\r\n    }, false);\r\n    document.getElementById(\"img_34\").addEventListener(\"mousedown\", function () {\r\n        game.craft_list.list.get_recipe(33);\r\n    }, false);\r\n    document.getElementById(\"img_35\").addEventListener(\"mousedown\", function () {\r\n        game.craft_list.list.get_recipe(34);\r\n    }, false);\r\n    document.getElementById(\"img_36\").addEventListener(\"mousedown\", function () {\r\n        game.craft_list.list.get_recipe(35);\r\n    }, false);\r\n    document.getElementById(\"img_37\").addEventListener(\"mousedown\", function () {\r\n        game.craft_list.list.get_recipe(36);\r\n    }, false);\r\n    document.getElementById(\"img_38\").addEventListener(\"mousedown\", function () {\r\n        game.craft_list.list.get_recipe(37);\r\n    }, false);\r\n    document.getElementById(\"img_39\").addEventListener(\"mousedown\", function () {\r\n        game.craft_list.list.get_recipe(38);\r\n    }, false);\r\n    document.getElementById(\"img_40\").addEventListener(\"mousedown\", function () {\r\n        game.craft_list.list.get_recipe(39);\r\n    }, false);\r\n    document.getElementById(\"img_41\").addEventListener(\"mousedown\", function () {\r\n        game.craft_list.list.get_recipe(40);\r\n    }, false);\r\n    document.getElementById(\"img_42\").addEventListener(\"mousedown\", function () {\r\n        game.craft_list.list.get_recipe(41);\r\n    }, false);\r\n    document.getElementById(\"img_43\").addEventListener(\"mousedown\", function () {\r\n        game.craft_list.list.get_recipe(42);\r\n    }, false);\r\n    document.getElementById(\"img_44\").addEventListener(\"mousedown\", function () {\r\n        game.craft_list.list.get_recipe(43);\r\n    }, false);\r\n    document.getElementById(\"img_45\").addEventListener(\"mousedown\", function () {\r\n        game.craft_list.list.get_recipe(44);\r\n    }, false);\r\n    document.getElementById(\"img_46\").addEventListener(\"mousedown\", function () {\r\n        game.craft_list.list.get_recipe(45);\r\n    }, false);\r\n    document.getElementById(\"img_47\").addEventListener(\"mousedown\", function () {\r\n        game.craft_list.list.get_recipe(46);\r\n    }, false);\r\n    document.getElementById(\"img_48\").addEventListener(\"mousedown\", function () {\r\n        game.craft_list.list.get_recipe(47);\r\n    }, false);\r\n    this.minimap = {translate: {x: 0, y: 0}, marker: {x: -1, y: -1}, players: [], focus: function (mouse) {\r\n            var y = this.translate.y + (user.inv.can_select.length > 0 ? -120 : -50);\r\n            if (mouse.x > this.translate.x && mouse.x < this.translate.x + 193 && mouse.y > y && mouse.y < y + 193) {\r\n                this.marker.x = mouse.x - this.translate.x;\r\n                this.marker.y = mouse.y - y;\r\n            }\r\n        }};\r\n    this.leaderboard = {translate: {x: 0, y: 0}, img: sprite[SPRITE.LEADERBOARD], can: document.createElement(\"canvas\")};\r\n    this.leaderboard.can.width = this.leaderboard.img.width;\r\n    this.leaderboard.can.height = this.leaderboard.img.height;\r\n    this.leaderboard.ctx = this.leaderboard.can.getContext(\"2d\");\r\n    this.gauges = {translate: {x: 0, y: 0}, img: sprite[SPRITE.GAUGES], draw: draw_gauges, y: 0};\r\n    this.leave_team = function () {\r\n        div = document.getElementById(\"team_box\");\r\n        div.innerHTML = \"\";\r\n        div.innerHTML += '<div id=\"leader\"><img src=\"./img/leaderlogo.png\" style=\"width:25px;margin-right:5px;\" ></img>' + world.players[user.team[0]].nickname + \"</div\";\r\n        for (var i = 1; i < user.team.length; i++) {\r\n            div.innerHTML += '<div class=\"nicknames\"> <div style=\"display:inline-block;padding-top:7px;\">' + world.players[user.team[i]].nickname + \"</div></div>\";\r\n        }\r\n        div.innerHTML += '<div id=\"leave\" style=\"display:inline-block;\">LEAVE</div></div>';\r\n        div.style.display = \"inline-block\";\r\n        document.getElementById(\"leave\").addEventListener(\"click\", client.leave_team, false);\r\n    };\r\n    this.show_team = function () {\r\n        div = document.getElementById(\"team_box\");\r\n        div.innerHTML = \"\";\r\n        div.innerHTML += '<div id=\"leader\"><img src=\"./img/leaderlogo.png\" style=\"width:25px;margin-right:5px;\" ></img>' + world.players[user.team[0]].nickname + \"</div\";\r\n        for (var i = 1; i < user.team.length; i++) {\r\n            div.innerHTML += '<div class=\"nicknames\"> <div style=\"display:inline-block;padding-top:7px;\">' + world.players[user.team[i]].nickname + \"</div></div>\";\r\n        }\r\n        div.innerHTML += \"</div>\";\r\n        div.style.display = \"inline-block\";\r\n    };\r\n    this.manage_team = function () {\r\n        div = document.getElementById(\"team_box\");\r\n        div.innerHTML = \"\";\r\n        div.innerHTML += '<div id=\"leader\"><img src=\"./img/leaderlogo.png\" style=\"width:25px;margin-right:5px;\" ></img>' + world.players[user.team[0]].nickname + \"</div\";\r\n        for (var i = 1; i < user.team.length; i++) div.innerHTML += '<div class=\"nicknames\"> <div style=\"display:inline-block;padding-top:7px;\">' + world.players[user.team[i]].nickname + '</div><div class=\"eject_member\" id=\"eject_member' + i + '\"><img src=\"./img/close-team.png\" style=\"width:20px;padding:5px;\"></img></div>';\r\n        if (user.totem.lock === 0) div.innerHTML += '<div id=\"lock_team\" style=\"display:inline-block;\">LOCK</div></div>'; else div.innerHTML += '<div id=\"lock_team\" style=\"display:inline-block;\">UNLOCK</div></div>';\r\n        document.getElementById(\"lock_team\").addEventListener(\"click\", client.lock_team, false);\r\n        div.style.display = \"inline-block\";\r\n        for (var i = 1; i < user.team.length; i++) {\r\n            switch (i) {\r\n                case 1:\r\n                    document.getElementById(\"eject_member\" + i).addEventListener(\"click\", function () {\r\n                        client.kick_team(1);\r\n                    }, false);\r\n                    break;\r\n                case 2:\r\n                    document.getElementById(\"eject_member\" + i).addEventListener(\"click\", function () {\r\n                        client.kick_team(2);\r\n                    }, false);\r\n                    break;\r\n                case 3:\r\n                    document.getElementById(\"eject_member\" + i).addEventListener(\"click\", function () {\r\n                        client.kick_team(3);\r\n                    }, false);\r\n                    break;\r\n                case 4:\r\n                    document.getElementById(\"eject_member\" + i).addEventListener(\"click\", function () {\r\n                        client.kick_team(4);\r\n                    }, false);\r\n                    break;\r\n                case 5:\r\n                    document.getElementById(\"eject_member\" + i).addEventListener(\"click\", function () {\r\n                        client.kick_team(5);\r\n                    }, false);\r\n                    break;\r\n                case 6:\r\n                    document.getElementById(\"eject_member\" + i).addEventListener(\"click\", function () {\r\n                        client.kick_team(6);\r\n                    }, false);\r\n                    break;\r\n                case 7:\r\n                    document.getElementById(\"eject_member\" + i).addEventListener(\"click\", function () {\r\n                        client.kick_team(7);\r\n                    }, false);\r\n                    break;\r\n                case 8:\r\n                    document.getElementById(\"eject_member\" + i).addEventListener(\"click\", function () {\r\n                        client.kick_team(8);\r\n                    }, false);\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n    this.team_buttons = [];\r\n    this.team_buttons[CLIENT.TEAM_LEAVE] = {button: gui_create_button(60, 60, \"\", sprite[SPRITE.TEAM_BUTTON]), action: this.leave_team};\r\n    this.team_buttons[CLIENT.TEAM_JOIN] = {button: gui_create_button(60, 60, \"\", sprite[SPRITE.TEAM_BUTTON]), action: client.join_team};\r\n    this.team_buttons[CLIENT.TEAM_MANAGE] = {button: gui_create_button(60, 60, \"\", sprite[SPRITE.MANAGE_TEAM_BUTTON]), action: this.manage_team};\r\n    this.team_buttons[CLIENT.TEAM_SHOW] = {button: gui_create_button(60, 60, \"\", sprite[SPRITE.SHOW_TEAM_BUTTON]), action: this.show_team};\r\n    this.team_buttons[CLIENT.TEAM_FULL] = {button: gui_create_button(60, 60, \"\", sprite[SPRITE.FULL_TEAM_BUTTON]), action: function () {}};\r\n    this.team_buttons_id = -1;\r\n    this.bread_oven_wood_button = gui_create_button(60, 60, \"\", sprite[SPRITE.BREAD_OVEN_WOOD]);\r\n    this.bread_oven_bread_button = gui_create_button(60, 60, \"\", sprite[SPRITE.BREAD_OVEN_BREAD]);\r\n    this.bread_oven_flour_button = gui_create_button(60, 60, \"\", sprite[SPRITE.WINDMILL_FLOUR]);\r\n    this.windmill_wheat_button = gui_create_button(60, 60, \"\", sprite[SPRITE.WINDMILL_WHEAT_SEED]);\r\n    this.windmill_flour_button = gui_create_button(60, 60, \"\", sprite[SPRITE.WINDMILL_FLOUR]);\r\n    this.extractor_wood_button = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_WOOD]);\r\n    this.extractor_stone_button = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_STONE]);\r\n    this.extractor_gold_button = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_GOLD]);\r\n    this.extractor_diamond_button = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_DIAMOND]);\r\n    this.extractor_amethyst_button = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_AMETHYST]);\r\n    this.extractor_reidite_button = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_REIDITE]);\r\n    this.furnace_button = gui_create_button(60, 60, \"\", sprite[SPRITE.FURNACE_BUTTON]);\r\n    this.chest_padlock = gui_create_button(60, 60, \"\", sprite[SPRITE.PADLOCK]);\r\n    this.chest_lockpick = gui_create_button(60, 60, \"\", sprite[SPRITE.KEY]);\r\n    this.chest_locked = gui_create_button(60, 60, \"\", sprite[SPRITE.LOCKED]);\r\n    this.resurrection = gui_create_button(120, 120, \"\", sprite[SPRITE.DRAGON_HEART]);\r\n    this.resurrection.info.translate.x = 10;\r\n    this.resurrection.info.translate.y = 10;\r\n    this.chest_buttons = [];\r\n    this.chest_buttons[INV.SWORD] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_SWORD], 3);\r\n    this.chest_buttons[INV.SWORD].id = INV.SWORD;\r\n    this.chest_buttons[INV.PICK] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_PICK], 3);\r\n    this.chest_buttons[INV.PICK].id = INV.PICK;\r\n    this.chest_buttons[INV.STONE] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_STONE], 3);\r\n    this.chest_buttons[INV.STONE].id = INV.STONE;\r\n    this.chest_buttons[INV.WOOD] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_WOOD], 3);\r\n    this.chest_buttons[INV.WOOD].id = INV.WOOD;\r\n    this.chest_buttons[INV.PLANT] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_PLANT], 3);\r\n    this.chest_buttons[INV.PLANT].id = INV.PLANT;\r\n    this.chest_buttons[INV.CACTUS] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_CACTUS], 3);\r\n    this.chest_buttons[INV.CACTUS].id = INV.CACTUS;\r\n    this.chest_buttons[INV.GOLD] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_GOLD], 3);\r\n    this.chest_buttons[INV.GOLD].id = INV.GOLD;\r\n    this.chest_buttons[INV.DIAMOND] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_DIAMOND], 3);\r\n    this.chest_buttons[INV.DIAMOND].id = INV.DIAMOND;\r\n    this.chest_buttons[INV.PICK_GOLD] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_PICK_GOLD], 3);\r\n    this.chest_buttons[INV.PICK_GOLD].id = INV.PICK_GOLD;\r\n    this.chest_buttons[INV.PICK_DIAMOND] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_PICK_DIAMOND], 3);\r\n    this.chest_buttons[INV.PICK_DIAMOND].id = INV.PICK_DIAMOND;\r\n    this.chest_buttons[INV.SWORD_GOLD] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_SWORD_GOLD], 3);\r\n    this.chest_buttons[INV.SWORD_GOLD].id = INV.SWORD_GOLD;\r\n    this.chest_buttons[INV.SWORD_WOOD] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_SWORD_WOOD], 3);\r\n    this.chest_buttons[INV.SWORD_WOOD].id = INV.SWORD_WOOD;\r\n    this.chest_buttons[INV.SWORD_DIAMOND] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_SWORD_DIAMOND], 3);\r\n    this.chest_buttons[INV.SWORD_DIAMOND].id = INV.SWORD_DIAMOND;\r\n    this.chest_buttons[INV.FIRE] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_FIRE], 3);\r\n    this.chest_buttons[INV.FIRE].id = INV.FIRE;\r\n    this.chest_buttons[INV.WORKBENCH] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_WORKBENCH], 3);\r\n    this.chest_buttons[INV.WORKBENCH].id = INV.WORKBENCH;\r\n    this.chest_buttons[INV.SEED] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_SEED], 3);\r\n    this.chest_buttons[INV.SEED].id = INV.SEED;\r\n    this.chest_buttons[INV.WALL] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_WALL], 3);\r\n    this.chest_buttons[INV.WALL].id = INV.WALL;\r\n    this.chest_buttons[INV.SPIKE] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_SPIKE], 3);\r\n    this.chest_buttons[INV.SPIKE].id = INV.SPIKE;\r\n    this.chest_buttons[INV.PICK_WOOD] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_PICK_WOOD], 3);\r\n    this.chest_buttons[INV.PICK_WOOD].id = INV.PICK_WOOD;\r\n    this.chest_buttons[INV.COOKED_MEAT] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_COOKED_MEAT], 3);\r\n    this.chest_buttons[INV.COOKED_MEAT].id = INV.COOKED_MEAT;\r\n    this.chest_buttons[INV.MEAT] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_MEAT], 3);\r\n    this.chest_buttons[INV.MEAT].id = INV.MEAT;\r\n    this.chest_buttons[INV.BIG_FIRE] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_BIG_FIRE], 3);\r\n    this.chest_buttons[INV.BIG_FIRE].id = INV.BIG_FIRE;\r\n    this.chest_buttons[INV.BANDAGE] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_BANDAGE], 3);\r\n    this.chest_buttons[INV.BANDAGE].id = INV.BANDAGE;\r\n    this.chest_buttons[INV.CORD] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_CORD], 3);\r\n    this.chest_buttons[INV.CORD].id = INV.CORD;\r\n    this.chest_buttons[INV.STONE_WALL] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_STONE_WALL], 3);\r\n    this.chest_buttons[INV.STONE_WALL].id = INV.STONE_WALL;\r\n    this.chest_buttons[INV.GOLD_WALL] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_GOLD_WALL], 3);\r\n    this.chest_buttons[INV.GOLD_WALL].id = INV.GOLD_WALL;\r\n    this.chest_buttons[INV.DIAMOND_WALL] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_DIAMOND_WALL], 3);\r\n    this.chest_buttons[INV.DIAMOND_WALL].id = INV.DIAMOND_WALL;\r\n    this.chest_buttons[INV.WOOD_DOOR] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_DOOR_WOOD_CLOSE], 3);\r\n    this.chest_buttons[INV.WOOD_DOOR].id = INV.WOOD_DOOR;\r\n    this.chest_buttons[INV.CHEST] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_CHEST], 3);\r\n    this.chest_buttons[INV.CHEST].id = INV.CHEST;\r\n    this.chest_buttons[INV.STONE_SPIKE] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_STONE_SPIKE], 3);\r\n    this.chest_buttons[INV.STONE_SPIKE].id = INV.STONE_SPIKE;\r\n    this.chest_buttons[INV.GOLD_SPIKE] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_GOLD_SPIKE], 3);\r\n    this.chest_buttons[INV.GOLD_SPIKE].id = INV.GOLD_SPIKE;\r\n    this.chest_buttons[INV.DIAMOND_SPIKE] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_DIAMOND_SPIKE], 3);\r\n    this.chest_buttons[INV.DIAMOND_SPIKE].id = INV.DIAMOND_SPIKE;\r\n    this.chest_buttons[INV.FUR] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_FUR], 3);\r\n    this.chest_buttons[INV.FUR].id = INV.FUR;\r\n    this.chest_buttons[INV.FUR_BOAR] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_FUR_BOAR], 3);\r\n    this.chest_buttons[INV.FUR_BOAR].id = INV.FUR_BOAR;\r\n    this.chest_buttons[INV.FUR_WOLF] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_FUR_WOLF], 3);\r\n    this.chest_buttons[INV.FUR_WOLF].id = INV.FUR_WOLF;\r\n    this.chest_buttons[INV.PENGUIN_FEATHER] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_PENGUIN_FEATHER], 3);\r\n    this.chest_buttons[INV.PENGUIN_FEATHER].id = INV.PENGUIN_FEATHER;\r\n    this.chest_buttons[INV.HAWK_FEATHER] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_HAWK_FEATHER], 3);\r\n    this.chest_buttons[INV.HAWK_FEATHER].id = INV.HAWK_FEATHER;\r\n    this.chest_buttons[INV.VULTURE_FEATHER] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_VULTURE_FEATHER], 3);\r\n    this.chest_buttons[INV.VULTURE_FEATHER].id = INV.VULTURE_FEATHER;\r\n    this.chest_buttons[INV.EMERALD] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_EMERALD], 3);\r\n    this.chest_buttons[INV.EMERALD].id = INV.EMERALD;\r\n    this.chest_buttons[INV.EARMUFFS] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_EARMUFFS], 3);\r\n    this.chest_buttons[INV.EARMUFFS].id = INV.EARMUFFS;\r\n    this.chest_buttons[INV.STONE_DOOR] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_DOOR_STONE_CLOSE], 3);\r\n    this.chest_buttons[INV.STONE_DOOR].id = INV.STONE_DOOR;\r\n    this.chest_buttons[INV.GOLD_DOOR] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_DOOR_GOLD_CLOSE], 3);\r\n    this.chest_buttons[INV.GOLD_DOOR].id = INV.GOLD_DOOR;\r\n    this.chest_buttons[INV.DIAMOND_DOOR] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_DOOR_DIAMOND_CLOSE], 3);\r\n    this.chest_buttons[INV.DIAMOND_DOOR].id = INV.DIAMOND_DOOR;\r\n    this.chest_buttons[INV.COAT] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_COAT], 3);\r\n    this.chest_buttons[INV.COAT].id = INV.COAT;\r\n    this.chest_buttons[INV.WOOD_SPEAR] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_WOOD_SPEAR], 3);\r\n    this.chest_buttons[INV.WOOD_SPEAR].id = INV.WOOD_SPEAR;\r\n    this.chest_buttons[INV.SPEAR] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_SPEAR], 3);\r\n    this.chest_buttons[INV.SPEAR].id = INV.SPEAR;\r\n    this.chest_buttons[INV.GOLD_SPEAR] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_GOLD_SPEAR], 3);\r\n    this.chest_buttons[INV.GOLD_SPEAR].id = INV.GOLD_SPEAR;\r\n    this.chest_buttons[INV.DIAMOND_SPEAR] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_DIAMOND_SPEAR], 3);\r\n    this.chest_buttons[INV.DIAMOND_SPEAR].id = INV.DIAMOND_SPEAR;\r\n    this.chest_buttons[INV.DRAGON_SPEAR] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_DRAGON_SPEAR], 3);\r\n    this.chest_buttons[INV.DRAGON_SPEAR].id = INV.DRAGON_SPEAR;\r\n    this.chest_buttons[INV.FURNACE] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_FURNACE], 3);\r\n    this.chest_buttons[INV.FURNACE].id = INV.FURNACE;\r\n    this.chest_buttons[INV.EXPLORER_HAT] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_EXPLORER_HAT], 3);\r\n    this.chest_buttons[INV.EXPLORER_HAT].id = INV.EXPLORER_HAT;\r\n    this.chest_buttons[INV.PIRATE_HAT] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_PIRATE_HAT], 3);\r\n    this.chest_buttons[INV.PIRATE_HAT].id = INV.PIRATE_HAT;\r\n    this.chest_buttons[INV.FLOWER_HAT] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_FLOWER_HAT], 3);\r\n    this.chest_buttons[INV.FLOWER_HAT].id = INV.FLOWER_HAT;\r\n    this.chest_buttons[INV.FUR_HAT] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_FUR_HAT], 3);\r\n    this.chest_buttons[INV.FUR_HAT].id = INV.FUR_HAT;\r\n    this.chest_buttons[INV.TURBAN1] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_TURBAN1], 3);\r\n    this.chest_buttons[INV.TURBAN1].id = INV.TURBAN1;\r\n    this.chest_buttons[INV.TURBAN2] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_TURBAN2], 3);\r\n    this.chest_buttons[INV.TURBAN2].id = INV.TURBAN2;\r\n    this.chest_buttons[INV.WOOD_ARROW] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_WOOD_ARROW], 3);\r\n    this.chest_buttons[INV.WOOD_ARROW].id = INV.WOOD_ARROW;\r\n    this.chest_buttons[INV.WOOD_BOW] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_WOOD_BOW], 3);\r\n    this.chest_buttons[INV.WOOD_BOW].id = INV.WOOD_BOW;\r\n    this.chest_buttons[INV.WOOD_SHIELD] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_WOOD_SHIELD], 3);\r\n    this.chest_buttons[INV.WOOD_SHIELD].id = INV.WOOD_SHIELD;\r\n    this.chest_buttons[INV.STONE_ARROW] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_STONE_ARROW], 3);\r\n    this.chest_buttons[INV.STONE_ARROW].id = INV.STONE_ARROW;\r\n    this.chest_buttons[INV.STONE_BOW] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_STONE_BOW], 3);\r\n    this.chest_buttons[INV.STONE_BOW].id = INV.STONE_BOW;\r\n    this.chest_buttons[INV.STONE_SHIELD] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_STONE_SHIELD], 3);\r\n    this.chest_buttons[INV.STONE_SHIELD].id = INV.STONE_SHIELD;\r\n    this.chest_buttons[INV.GOLD_ARROW] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_GOLD_ARROW], 3);\r\n    this.chest_buttons[INV.GOLD_ARROW].id = INV.GOLD_ARROW;\r\n    this.chest_buttons[INV.GOLD_BOW] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_GOLD_BOW], 3);\r\n    this.chest_buttons[INV.GOLD_BOW].id = INV.GOLD_BOW;\r\n    this.chest_buttons[INV.GOLD_SHIELD] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_GOLD_SHIELD], 3);\r\n    this.chest_buttons[INV.GOLD_SHIELD].id = INV.GOLD_SHIELD;\r\n    this.chest_buttons[INV.DIAMOND_ARROW] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_DIAMOND_ARROW], 3);\r\n    this.chest_buttons[INV.DIAMOND_ARROW].id = INV.DIAMOND_ARROW;\r\n    this.chest_buttons[INV.DIAMOND_BOW] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_DIAMOND_BOW], 3);\r\n    this.chest_buttons[INV.DIAMOND_BOW].id = INV.DIAMOND_BOW;\r\n    this.chest_buttons[INV.DIAMOND_SHIELD] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_DIAMOND_SHIELD], 3);\r\n    this.chest_buttons[INV.DIAMOND_SHIELD].id = INV.DIAMOND_SHIELD;\r\n    this.chest_buttons[INV.AMETHYST_ARROW] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_AMETHYST_ARROW], 3);\r\n    this.chest_buttons[INV.AMETHYST_ARROW].id = INV.AMETHYST_ARROW;\r\n    this.chest_buttons[INV.AMETHYST_BOW] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_AMETHYST_BOW], 3);\r\n    this.chest_buttons[INV.AMETHYST_BOW].id = INV.AMETHYST_BOW;\r\n    this.chest_buttons[INV.AMETHYST_SHIELD] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_AMETHYST_SHIELD], 3);\r\n    this.chest_buttons[INV.AMETHYST_SHIELD].id = INV.AMETHYST_SHIELD;\r\n    this.chest_buttons[INV.REIDITE_ARROW] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_REIDITE_ARROW], 3);\r\n    this.chest_buttons[INV.REIDITE_ARROW].id = INV.REIDITE_ARROW;\r\n    this.chest_buttons[INV.REIDITE_BOW] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_REIDITE_BOW], 3);\r\n    this.chest_buttons[INV.REIDITE_BOW].id = INV.REIDITE_BOW;\r\n    this.chest_buttons[INV.REIDITE_SHIELD] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_REIDITE_SHIELD], 3);\r\n    this.chest_buttons[INV.REIDITE_SHIELD].id = INV.REIDITE_SHIELD;\r\n    this.chest_buttons[INV.DRAGON_ARROW] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_DRAGON_ARROW], 3);\r\n    this.chest_buttons[INV.DRAGON_ARROW].id = INV.DRAGON_ARROW;\r\n    this.chest_buttons[INV.DRAGON_BOW] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_DRAGON_BOW], 3);\r\n    this.chest_buttons[INV.DRAGON_BOW].id = INV.DRAGON_BOW;\r\n    this.chest_buttons[INV.WOOD_HELMET] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_WOOD_HELMET], 3);\r\n    this.chest_buttons[INV.WOOD_HELMET].id = INV.WOOD_HELMET;\r\n    this.chest_buttons[INV.STONE_HELMET] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_STONE_HELMET], 3);\r\n    this.chest_buttons[INV.STONE_HELMET].id = INV.STONE_HELMET;\r\n    this.chest_buttons[INV.GOLD_HELMET] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_GOLD_HELMET], 3);\r\n    this.chest_buttons[INV.GOLD_HELMET].id = INV.GOLD_HELMET;\r\n    this.chest_buttons[INV.DIAMOND_HELMET] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_DIAMOND_HELMET], 3);\r\n    this.chest_buttons[INV.DIAMOND_HELMET].id = INV.DIAMOND_HELMET;\r\n    this.chest_buttons[INV.BOOK] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_BOOK], 3);\r\n    this.chest_buttons[INV.BOOK].id = INV.BOOK;\r\n    this.chest_buttons[INV.PAPER] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_PAPER], 3);\r\n    this.chest_buttons[INV.PAPER].id = INV.PAPER;\r\n    this.chest_buttons[INV.BAG] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_BAG], 3);\r\n    this.chest_buttons[INV.BAG].id = INV.BAG;\r\n    this.chest_buttons[INV.AMETHYST] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_AMETHYST], 3);\r\n    this.chest_buttons[INV.AMETHYST].id = INV.AMETHYST;\r\n    this.chest_buttons[INV.SWORD_AMETHYST] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_SWORD_AMETHYST], 3);\r\n    this.chest_buttons[INV.SWORD_AMETHYST].id = INV.SWORD_AMETHYST;\r\n    this.chest_buttons[INV.PIRATE_SWORD] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_PIRATE_SWORD], 3);\r\n    this.chest_buttons[INV.PIRATE_SWORD].id = INV.PIRATE_SWORD;\r\n    this.chest_buttons[INV.PICK_AMETHYST] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_PICK_AMETHYST], 3);\r\n    this.chest_buttons[INV.PICK_AMETHYST].id = INV.PICK_AMETHYST;\r\n    this.chest_buttons[INV.PICK_REIDITE] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_PICK_REIDITE], 3);\r\n    this.chest_buttons[INV.PICK_REIDITE].id = INV.PICK_REIDITE;\r\n    this.chest_buttons[INV.AMETHYST_SPEAR] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_AMETHYST_SPEAR], 3);\r\n    this.chest_buttons[INV.AMETHYST_SPEAR].id = INV.AMETHYST_SPEAR;\r\n    this.chest_buttons[INV.HAMMER] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_HAMMER], 3);\r\n    this.chest_buttons[INV.HAMMER].id = INV.HAMMER;\r\n    this.chest_buttons[INV.HAMMER_GOLD] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_HAMMER_GOLD], 3);\r\n    this.chest_buttons[INV.HAMMER_GOLD].id = INV.HAMMER_GOLD;\r\n    this.chest_buttons[INV.HAMMER_DIAMOND] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_HAMMER_DIAMOND], 3);\r\n    this.chest_buttons[INV.HAMMER_DIAMOND].id = INV.HAMMER_DIAMOND;\r\n    this.chest_buttons[INV.HAMMER_AMETHYST] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_HAMMER_AMETHYST], 3);\r\n    this.chest_buttons[INV.HAMMER_AMETHYST].id = INV.HAMMER_AMETHYST;\r\n    this.chest_buttons[INV.HAMMER_REIDITE] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_HAMMER_REIDITE], 3);\r\n    this.chest_buttons[INV.HAMMER_REIDITE].id = INV.HAMMER_REIDITE;\r\n    this.chest_buttons[INV.AMETHYST_WALL] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_AMETHYST_WALL], 3);\r\n    this.chest_buttons[INV.AMETHYST_WALL].id = INV.AMETHYST_WALL;\r\n    this.chest_buttons[INV.AMETHYST_SPIKE] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_AMETHYST_SPIKE], 3);\r\n    this.chest_buttons[INV.AMETHYST_SPIKE].id = INV.AMETHYST_SPIKE;\r\n    this.chest_buttons[INV.AMETHYST_DOOR] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_DOOR_AMETHYST_CLOSE], 3);\r\n    this.chest_buttons[INV.AMETHYST_DOOR].id = INV.AMETHYST_DOOR;\r\n    this.chest_buttons[INV.CAP_SCARF] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_CAP_SCARF], 3);\r\n    this.chest_buttons[INV.CAP_SCARF].id = INV.CAP_SCARF;\r\n    this.chest_buttons[INV.FUR_WINTER] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_FUR_WINTER], 3);\r\n    this.chest_buttons[INV.FUR_WINTER].id = INV.FUR_WINTER;\r\n    this.chest_buttons[INV.FUR_MAMMOTH] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_FUR_MAMMOTH], 3);\r\n    this.chest_buttons[INV.FUR_MAMMOTH].id = INV.FUR_MAMMOTH;\r\n    this.chest_buttons[INV.BLUE_CORD] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_BLUE_CORD], 3);\r\n    this.chest_buttons[INV.BLUE_CORD].id = INV.BLUE_CORD;\r\n    this.chest_buttons[INV.LOCK] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_LOCK], 3);\r\n    this.chest_buttons[INV.LOCK].id = INV.LOCK;\r\n    this.chest_buttons[INV.DRAGON_HEART] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_DRAGON_HEART], 3);\r\n    this.chest_buttons[INV.DRAGON_HEART].id = INV.DRAGON_HEART;\r\n    this.chest_buttons[INV.LAVA_HEART] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_LAVA_HEART], 3);\r\n    this.chest_buttons[INV.LAVA_HEART].id = INV.LAVA_HEART;\r\n    this.chest_buttons[INV.RESURRECTION] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_RESURRECTION], 3);\r\n    this.chest_buttons[INV.RESURRECTION].id = INV.RESURRECTION;\r\n    this.chest_buttons[INV.LOCKPICK] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_LOCKPICK], 3);\r\n    this.chest_buttons[INV.LOCKPICK].id = INV.LOCKPICK;\r\n    this.chest_buttons[INV.TOTEM] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_TOTEM], 3);\r\n    this.chest_buttons[INV.TOTEM].id = INV.TOTEM;\r\n    this.chest_buttons[INV.AMETHYST_HELMET] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_AMETHYST_HELMET], 3);\r\n    this.chest_buttons[INV.AMETHYST_HELMET].id = INV.AMETHYST_HELMET;\r\n    this.chest_buttons[INV.SUPER_HAMMER] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_SUPER_HAMMER], 3);\r\n    this.chest_buttons[INV.SUPER_HAMMER].id = INV.SUPER_HAMMER;\r\n    this.chest_buttons[INV.BRIDGE] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_BRIDGE], 3);\r\n    this.chest_buttons[INV.BRIDGE].id = INV.BRIDGE;\r\n    this.chest_buttons[INV.WOOD_TOWER] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_WOOD_TOWER], 3);\r\n    this.chest_buttons[INV.WOOD_TOWER].id = INV.WOOD_TOWER;\r\n    this.chest_buttons[INV.BOAT] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_BOAT], 3);\r\n    this.chest_buttons[INV.BOAT].id = INV.BOAT;\r\n    this.chest_buttons[INV.SLED] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_SLED], 3);\r\n    this.chest_buttons[INV.SLED].id = INV.SLED;\r\n    this.chest_buttons[INV.PLANE] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_PLANE], 3);\r\n    this.chest_buttons[INV.PLANE].id = INV.PLANE;\r\n    this.chest_buttons[INV.SADDLE] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_SADDLE], 3);\r\n    this.chest_buttons[INV.SADDLE].id = INV.SADDLE;\r\n    this.chest_buttons[INV.MOUNT_BOAR] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_MOUNT_BOAR], 3);\r\n    this.chest_buttons[INV.MOUNT_BOAR].id = INV.MOUNT_BOAR;\r\n    this.chest_buttons[INV.BABY_DRAGON] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_BABY_DRAGON], 3);\r\n    this.chest_buttons[INV.BABY_DRAGON].id = INV.BABY_DRAGON;\r\n    this.chest_buttons[INV.BABY_MAMMOTH] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_BABY_MAMMOTH], 3);\r\n    this.chest_buttons[INV.BABY_MAMMOTH].id = INV.BABY_MAMMOTH;\r\n    this.chest_buttons[INV.BABY_LAVA] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_BABY_LAVA], 3);\r\n    this.chest_buttons[INV.BABY_LAVA].id = INV.BABY_LAVA;\r\n    this.chest_buttons[INV.HAWK] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_HAWK], 3);\r\n    this.chest_buttons[INV.HAWK].id = INV.HAWK;\r\n    this.chest_buttons[INV.CRAB_BOSS] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_CRAB_BOSS], 3);\r\n    this.chest_buttons[INV.CRAB_BOSS].id = INV.CRAB_BOSS;\r\n    this.chest_buttons[INV.SAND] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_SAND], 3);\r\n    this.chest_buttons[INV.SAND].id = INV.SAND;\r\n    this.chest_buttons[INV.BOTTLE_FULL] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_BOTTLE_FULL], 3);\r\n    this.chest_buttons[INV.BOTTLE_FULL].id = INV.BOTTLE_FULL;\r\n    this.chest_buttons[INV.BOTTLE_EMPTY] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_BOTTLE_EMPTY], 3);\r\n    this.chest_buttons[INV.BOTTLE_EMPTY].id = INV.BOTTLE_EMPTY;\r\n    this.chest_buttons[INV.SHOVEL] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_SHOVEL], 3);\r\n    this.chest_buttons[INV.SHOVEL].id = INV.SHOVEL;\r\n    this.chest_buttons[INV.SHOVEL_GOLD] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_SHOVEL_GOLD], 3);\r\n    this.chest_buttons[INV.SHOVEL_GOLD].id = INV.SHOVEL_GOLD;\r\n    this.chest_buttons[INV.SHOVEL_DIAMOND] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_SHOVEL_DIAMOND], 3);\r\n    this.chest_buttons[INV.SHOVEL_DIAMOND].id = INV.SHOVEL_DIAMOND;\r\n    this.chest_buttons[INV.SHOVEL_AMETHYST] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_SHOVEL_AMETHYST], 3);\r\n    this.chest_buttons[INV.SHOVEL_AMETHYST].id = INV.SHOVEL_AMETHYST;\r\n    this.chest_buttons[INV.SPANNER] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_SPANNER], 3);\r\n    this.chest_buttons[INV.SPANNER].id = INV.SPANNER;\r\n    this.chest_buttons[INV.KRAKEN_SKIN] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_KRAKEN_SKIN], 3);\r\n    this.chest_buttons[INV.KRAKEN_SKIN].id = INV.KRAKEN_SKIN;\r\n    this.chest_buttons[INV.WATERING_CAN] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_WATERING_CAN], 3);\r\n    this.chest_buttons[INV.WATERING_CAN].id = INV.WATERING_CAN;\r\n    this.chest_buttons[INV.FLOUR] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_FLOUR], 3);\r\n    this.chest_buttons[INV.FLOUR].id = INV.FLOUR;\r\n    this.chest_buttons[INV.WHEAT_SEED] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_WHEAT_SEED], 3);\r\n    this.chest_buttons[INV.WHEAT_SEED].id = INV.WHEAT_SEED;\r\n    this.chest_buttons[INV.COOKIE] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_COOKIE], 3);\r\n    this.chest_buttons[INV.COOKIE].id = INV.COOKIE;\r\n    this.chest_buttons[INV.WILD_WHEAT] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_WILD_WHEAT], 3);\r\n    this.chest_buttons[INV.WILD_WHEAT].id = INV.WILD_WHEAT;\r\n    this.chest_buttons[INV.WINDMILL] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_WINDMILL], 3);\r\n    this.chest_buttons[INV.WINDMILL].id = INV.WINDMILL;\r\n    this.chest_buttons[INV.SUPER_DIVING_SUIT] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_SUPER_DIVING_SUIT], 3);\r\n    this.chest_buttons[INV.SUPER_DIVING_SUIT].id = INV.SUPER_DIVING_SUIT;\r\n    this.chest_buttons[INV.DIVING_MASK] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_DIVING_MASK], 3);\r\n    this.chest_buttons[INV.DIVING_MASK].id = INV.DIVING_MASK;\r\n    this.chest_buttons[INV.WATERING_CAN_FULL] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_WATERING_CAN_FULL], 3);\r\n    this.chest_buttons[INV.WATERING_CAN_FULL].id = INV.WATERING_CAN_FULL;\r\n    this.chest_buttons[INV.CAKE] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_CAKE], 3);\r\n    this.chest_buttons[INV.CAKE].id = INV.CAKE;\r\n    this.chest_buttons[INV.BREAD] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_BREAD], 3);\r\n    this.chest_buttons[INV.BREAD].id = INV.BREAD;\r\n    this.chest_buttons[INV.FOODFISH] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_FOODFISH], 3);\r\n    this.chest_buttons[INV.FOODFISH].id = INV.FOODFISH;\r\n    this.chest_buttons[INV.FOODFISH_COOKED] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_FOODFISH_COOKED], 3);\r\n    this.chest_buttons[INV.FOODFISH_COOKED].id = INV.FOODFISH_COOKED;\r\n    this.chest_buttons[INV.SCALES] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_SCALES], 3);\r\n    this.chest_buttons[INV.SCALES].id = INV.SCALES;\r\n    this.chest_buttons[INV.GROUND] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_GROUND], 3);\r\n    this.chest_buttons[INV.GROUND].id = INV.GROUND;\r\n    this.chest_buttons[INV.PLOT] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_PLOT], 3);\r\n    this.chest_buttons[INV.PLOT].id = INV.PLOT;\r\n    this.chest_buttons[INV.ICE] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_ICE], 3);\r\n    this.chest_buttons[INV.ICE].id = INV.ICE;\r\n    this.chest_buttons[INV.BREAD_OVEN] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_BREAD_OVEN], 3);\r\n    this.chest_buttons[INV.BREAD_OVEN].id = INV.BREAD_OVEN;\r\n    this.chest_buttons[INV.SANDWICH] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_SANDWICH], 3);\r\n    this.chest_buttons[INV.SANDWICH].id = INV.SANDWICH;\r\n    this.chest_buttons[INV.DRAGON_HELMET] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_DRAGON_HELMET], 3);\r\n    this.chest_buttons[INV.DRAGON_HELMET].id = INV.DRAGON_HELMET;\r\n    this.chest_buttons[INV.DRAGON_SWORD] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_DRAGON_SWORD], 3);\r\n    this.chest_buttons[INV.DRAGON_SWORD].id = INV.DRAGON_SWORD;\r\n    this.chest_buttons[INV.DRAGON_ORB] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_DRAGON_ORB], 3);\r\n    this.chest_buttons[INV.DRAGON_ORB].id = INV.DRAGON_ORB;\r\n    this.chest_buttons[INV.DRAGON_CUBE] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_DRAGON_CUBE], 3);\r\n    this.chest_buttons[INV.DRAGON_CUBE].id = INV.DRAGON_CUBE;\r\n    this.chest_buttons[INV.LAVA_ORB] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_LAVA_ORB], 3);\r\n    this.chest_buttons[INV.LAVA_ORB].id = INV.LAVA_ORB;\r\n    this.chest_buttons[INV.LAVA_CUBE] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_LAVA_CUBE], 3);\r\n    this.chest_buttons[INV.LAVA_CUBE].id = INV.LAVA_CUBE;\r\n    this.chest_buttons[INV.CROWN_GREEN] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_CROWN_GREEN], 3);\r\n    this.chest_buttons[INV.CROWN_GREEN].id = INV.CROWN_GREEN;\r\n    this.chest_buttons[INV.GEMME_GREEN] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_GEMME_GREEN], 3);\r\n    this.chest_buttons[INV.GEMME_GREEN].id = INV.GEMME_GREEN;\r\n    this.chest_buttons[INV.GEMME_ORANGE] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_GEMME_ORANGE], 3);\r\n    this.chest_buttons[INV.GEMME_ORANGE].id = INV.GEMME_ORANGE;\r\n    this.chest_buttons[INV.CROWN_ORANGE] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_CROWN_ORANGE], 3);\r\n    this.chest_buttons[INV.CROWN_ORANGE].id = INV.CROWN_ORANGE;\r\n    this.chest_buttons[INV.GEMME_BLUE] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_GEMME_BLUE], 3);\r\n    this.chest_buttons[INV.GEMME_BLUE].id = INV.GEMME_BLUE;\r\n    this.chest_buttons[INV.CROWN_BLUE] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_CROWN_BLUE], 3);\r\n    this.chest_buttons[INV.CROWN_BLUE].id = INV.CROWN_BLUE;\r\n    this.chest_buttons[INV.HOOD] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_HOOD], 3);\r\n    this.chest_buttons[INV.HOOD].id = INV.HOOD;\r\n    this.chest_buttons[INV.PEASANT] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_PEASANT], 3);\r\n    this.chest_buttons[INV.PEASANT].id = INV.PEASANT;\r\n    this.chest_buttons[INV.SPECIAL_FUR] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_SPECIAL_FUR], 3);\r\n    this.chest_buttons[INV.SPECIAL_FUR].id = INV.SPECIAL_FUR;\r\n    this.chest_buttons[INV.SPECIAL_FUR_2] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_SPECIAL_FUR_2], 3);\r\n    this.chest_buttons[INV.SPECIAL_FUR_2].id = INV.SPECIAL_FUR_2;\r\n    this.chest_buttons[INV.WINTER_PEASANT] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_WINTER_PEASANT], 3);\r\n    this.chest_buttons[INV.WINTER_PEASANT].id = INV.WINTER_PEASANT;\r\n    this.chest_buttons[INV.WINTER_HOOD] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_WINTER_HOOD], 3);\r\n    this.chest_buttons[INV.WINTER_HOOD].id = INV.WINTER_HOOD;\r\n    this.chest_buttons[INV.BUCKET_FULL] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_BUCKET_FULL], 3);\r\n    this.chest_buttons[INV.BUCKET_FULL].id = INV.BUCKET_FULL;\r\n    this.chest_buttons[INV.BUCKET_EMPTY] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_BUCKET_EMPTY], 3);\r\n    this.chest_buttons[INV.BUCKET_EMPTY].id = INV.BUCKET_EMPTY;\r\n    this.chest_buttons[INV.WELL] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_WELL], 3);\r\n    this.chest_buttons[INV.WELL].id = INV.WELL;\r\n    this.chest_buttons[INV.SIGN] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_SIGN], 3);\r\n    this.chest_buttons[INV.SIGN].id = INV.SIGN;\r\n    this.chest_buttons[INV.PUMPKIN_SEED] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_PUMPKIN_SEED], 3);\r\n    this.chest_buttons[INV.PUMPKIN_SEED].id = INV.PUMPKIN_SEED;\r\n    this.chest_buttons[INV.PUMPKIN] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_PUMPKIN], 3);\r\n    this.chest_buttons[INV.PUMPKIN].id = INV.PUMPKIN;\r\n    this.chest_buttons[INV.ROOF] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_ROOF], 3);\r\n    this.chest_buttons[INV.ROOF].id = INV.ROOF;\r\n    this.chest_buttons[INV.GARLIC_SEED] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_GARLIC_SEED], 3);\r\n    this.chest_buttons[INV.GARLIC_SEED].id = INV.GARLIC_SEED;\r\n    this.chest_buttons[INV.GARLIC] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_GARLIC], 3);\r\n    this.chest_buttons[INV.GARLIC].id = INV.GARLIC;\r\n    this.chest_buttons[INV.THORNBUSH_SEED] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_THORNBUSH_SEED], 3);\r\n    this.chest_buttons[INV.THORNBUSH_SEED].id = INV.THORNBUSH_SEED;\r\n    this.chest_buttons[INV.THORNBUSH] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_THORNBUSH], 3);\r\n    this.chest_buttons[INV.THORNBUSH].id = INV.THORNBUSH;\r\n    this.chest_buttons[INV.TOMATO_SEED] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_TOMATO_SEED], 3);\r\n    this.chest_buttons[INV.TOMATO_SEED].id = INV.TOMATO_SEED;\r\n    this.chest_buttons[INV.TOMATO] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_TOMATO], 3);\r\n    this.chest_buttons[INV.TOMATO].id = INV.TOMATO;\r\n    this.chest_buttons[INV.CARROT_SEED] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_CARROT_SEED], 3);\r\n    this.chest_buttons[INV.CARROT_SEED].id = INV.CARROT_SEED;\r\n    this.chest_buttons[INV.CARROT] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_CARROT], 3);\r\n    this.chest_buttons[INV.CARROT].id = INV.CARROT;\r\n    this.chest_buttons[INV.WATERMELON_SEED] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_WATERMELON_SEED], 3);\r\n    this.chest_buttons[INV.WATERMELON_SEED].id = INV.WATERMELON_SEED;\r\n    this.chest_buttons[INV.WATERMELON] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_WATERMELON], 3);\r\n    this.chest_buttons[INV.WATERMELON].id = INV.WATERMELON;\r\n    this.chest_buttons[INV.ALOE_VERA_SEED] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_ALOE_VERA_SEED], 3);\r\n    this.chest_buttons[INV.ALOE_VERA_SEED].id = INV.ALOE_VERA_SEED;\r\n    this.chest_buttons[INV.ALOE_VERA] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_ALOE_VERA], 3);\r\n    this.chest_buttons[INV.ALOE_VERA].id = INV.ALOE_VERA;\r\n    this.chest_buttons[INV.CHRISTMAS_HAT] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_CHRISTMAS_HAT], 3);\r\n    this.chest_buttons[INV.CHRISTMAS_HAT].id = INV.CHRISTMAS_HAT;\r\n    this.chest_buttons[INV.ELF_HAT] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_ELF_HAT], 3);\r\n    this.chest_buttons[INV.ELF_HAT].id = INV.ELF_HAT;\r\n    this.chest_buttons[INV.WOOD_SPEAR] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_WOOD_SPEAR], 3);\r\n    this.chest_buttons[INV.WOOD_SPEAR].id = INV.WOOD_SPEAR;\r\n    this.chest_buttons[INV.DRAGON_SPEAR] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_DRAGON_SPEAR], 3);\r\n    this.chest_buttons[INV.DRAGON_SPEAR].id = INV.DRAGON_SPEAR;\r\n    this.chest_buttons[INV.CRAB_STICK] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_CRAB_STICK], 3);\r\n    this.chest_buttons[INV.CRAB_STICK].id = INV.CRAB_STICK;\r\n    this.chest_buttons[INV.CRAB_SPEAR] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_CRAB_SPEAR], 3);\r\n    this.chest_buttons[INV.CRAB_SPEAR].id = INV.CRAB_SPEAR;\r\n    this.chest_buttons[INV.CRAB_LOOT] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_CRAB_LOOT], 3);\r\n    this.chest_buttons[INV.CRAB_LOOT].id = INV.CRAB_LOOT;\r\n    this.chest_buttons[INV.BED] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_BED], 3);\r\n    this.chest_buttons[INV.BED].id = INV.BED;\r\n    this.chest_buttons[INV.CROWN_CRAB] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_CROWN_CRAB], 3);\r\n    this.chest_buttons[INV.CROWN_CRAB].id = INV.CROWN_CRAB;\r\n    this.chest_buttons[INV.GARLAND] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_GARLAND], 3);\r\n    this.chest_buttons[INV.GARLAND].id = INV.GARLAND;\r\n    this.chest_buttons[INV.SUGAR_CAN] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_SUGAR_CAN], 3);\r\n    this.chest_buttons[INV.SUGAR_CAN].id = INV.SUGAR_CAN;\r\n    this.chest_buttons[INV.CANDY] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_CANDY], 3);\r\n    this.chest_buttons[INV.CANDY].id = INV.CANDY;\r\n    this.plus_buttons = [];\r\n    for (var i = 0; i < 250; i++) this.plus_buttons[i] = gui_create_button(0, 0, \"\", sprite[SPRITE.CHEST_PLUS]);\r\n    this.inv_buttons = [];\r\n    this.inv_buttons[INV.SWORD] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_SWORD], 3);\r\n    this.inv_buttons[INV.SWORD].id = INV.SWORD;\r\n    this.inv_buttons[INV.PICK] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_PICK], 3);\r\n    this.inv_buttons[INV.PICK].id = INV.PICK;\r\n    this.inv_buttons[INV.STONE] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_STONE], 3);\r\n    this.inv_buttons[INV.STONE].id = INV.STONE;\r\n    this.inv_buttons[INV.STONE].info.img[2] = this.inv_buttons[INV.STONE].info.img[0];\r\n    this.inv_buttons[INV.WOOD] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_WOOD], 3);\r\n    this.inv_buttons[INV.WOOD].id = INV.WOOD;\r\n    this.inv_buttons[INV.WOOD].info.img[2] = this.inv_buttons[INV.WOOD].info.img[0];\r\n    this.inv_buttons[INV.PLANT] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_PLANT], 3);\r\n    this.inv_buttons[INV.PLANT].id = INV.PLANT;\r\n    this.inv_buttons[INV.CACTUS] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_CACTUS], 3);\r\n    this.inv_buttons[INV.CACTUS].id = INV.CACTUS;\r\n    this.inv_buttons[INV.GOLD] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_GOLD], 3);\r\n    this.inv_buttons[INV.GOLD].id = INV.GOLD;\r\n    this.inv_buttons[INV.GOLD].info.img[2] = this.inv_buttons[INV.GOLD].info.img[0];\r\n    this.inv_buttons[INV.DIAMOND] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_DIAMOND], 3);\r\n    this.inv_buttons[INV.DIAMOND].id = INV.DIAMOND;\r\n    this.inv_buttons[INV.DIAMOND].info.img[2] = this.inv_buttons[INV.DIAMOND].info.img[0];\r\n    this.inv_buttons[INV.PICK_GOLD] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_PICK_GOLD], 3);\r\n    this.inv_buttons[INV.PICK_GOLD].id = INV.PICK_GOLD;\r\n    this.inv_buttons[INV.PICK_DIAMOND] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_PICK_DIAMOND], 3);\r\n    this.inv_buttons[INV.PICK_DIAMOND].id = INV.PICK_DIAMOND;\r\n    this.inv_buttons[INV.SWORD_GOLD] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_SWORD_GOLD], 3);\r\n    this.inv_buttons[INV.SWORD_GOLD].id = INV.SWORD_GOLD;\r\n    this.inv_buttons[INV.SWORD_WOOD] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_SWORD_WOOD], 3);\r\n    this.inv_buttons[INV.SWORD_WOOD].id = INV.SWORD_WOOD;\r\n    this.inv_buttons[INV.SWORD_DIAMOND] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_SWORD_DIAMOND], 3);\r\n    this.inv_buttons[INV.SWORD_DIAMOND].id = INV.SWORD_DIAMOND;\r\n    this.inv_buttons[INV.FIRE] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_FIRE], 3);\r\n    this.inv_buttons[INV.FIRE].id = INV.FIRE;\r\n    this.inv_buttons[INV.WORKBENCH] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_WORK], 3);\r\n    this.inv_buttons[INV.WORKBENCH].id = INV.WORKBENCH;\r\n    this.inv_buttons[INV.SEED] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_SEED], 3);\r\n    this.inv_buttons[INV.SEED].id = INV.SEED;\r\n    this.inv_buttons[INV.WALL] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_WALL], 3);\r\n    this.inv_buttons[INV.WALL].id = INV.WALL;\r\n    this.inv_buttons[INV.SPIKE] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_SPIKE], 3);\r\n    this.inv_buttons[INV.SPIKE].id = INV.SPIKE;\r\n    this.inv_buttons[INV.PICK_WOOD] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_PICK_WOOD], 3);\r\n    this.inv_buttons[INV.PICK_WOOD].id = INV.PICK_WOOD;\r\n    this.inv_buttons[INV.COOKED_MEAT] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_COOKED_MEAT], 3);\r\n    this.inv_buttons[INV.COOKED_MEAT].id = INV.COOKED_MEAT;\r\n    this.inv_buttons[INV.MEAT] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_MEAT], 3);\r\n    this.inv_buttons[INV.MEAT].id = INV.MEAT;\r\n    this.inv_buttons[INV.BIG_FIRE] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_BIG_FIRE], 3);\r\n    this.inv_buttons[INV.BIG_FIRE].id = INV.BIG_FIRE;\r\n    this.inv_buttons[INV.BANDAGE] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_BANDAGE], 3);\r\n    this.inv_buttons[INV.BANDAGE].id = INV.BANDAGE;\r\n    this.inv_buttons[INV.CORD] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_CORD], 3);\r\n    this.inv_buttons[INV.CORD].id = INV.CORD;\r\n    this.inv_buttons[INV.CORD].info.img[2] = this.inv_buttons[INV.CORD].info.img[0];\r\n    this.inv_buttons[INV.STONE_WALL] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_STONE_WALL], 3);\r\n    this.inv_buttons[INV.STONE_WALL].id = INV.STONE_WALL;\r\n    this.inv_buttons[INV.GOLD_WALL] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_GOLD_WALL], 3);\r\n    this.inv_buttons[INV.GOLD_WALL].id = INV.GOLD_WALL;\r\n    this.inv_buttons[INV.DIAMOND_WALL] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_DIAMOND_WALL], 3);\r\n    this.inv_buttons[INV.DIAMOND_WALL].id = INV.DIAMOND_WALL;\r\n    this.inv_buttons[INV.WOOD_DOOR] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_DOOR_WOOD_CLOSE], 3);\r\n    this.inv_buttons[INV.WOOD_DOOR].id = INV.WOOD_DOOR;\r\n    this.inv_buttons[INV.CHEST] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_CHEST], 3);\r\n    this.inv_buttons[INV.CHEST].id = INV.CHEST;\r\n    this.inv_buttons[INV.STONE_SPIKE] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_STONE_SPIKE], 3);\r\n    this.inv_buttons[INV.STONE_SPIKE].id = INV.STONE_SPIKE;\r\n    this.inv_buttons[INV.GOLD_SPIKE] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_GOLD_SPIKE], 3);\r\n    this.inv_buttons[INV.GOLD_SPIKE].id = INV.GOLD_SPIKE;\r\n    this.inv_buttons[INV.DIAMOND_SPIKE] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_DIAMOND_SPIKE], 3);\r\n    this.inv_buttons[INV.DIAMOND_SPIKE].id = INV.DIAMOND_SPIKE;\r\n    this.inv_buttons[INV.BAG] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_BAG], 3);\r\n    this.inv_buttons[INV.BAG].id = INV.BAG;\r\n    this.inv_buttons[INV.EARMUFFS] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_EARMUFFS], 3);\r\n    this.inv_buttons[INV.EARMUFFS].id = INV.EARMUFFS;\r\n    this.inv_buttons[INV.STONE_DOOR] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_DOOR_STONE_CLOSE], 3);\r\n    this.inv_buttons[INV.STONE_DOOR].id = INV.STONE_DOOR;\r\n    this.inv_buttons[INV.GOLD_DOOR] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_DOOR_GOLD_CLOSE], 3);\r\n    this.inv_buttons[INV.GOLD_DOOR].id = INV.GOLD_DOOR;\r\n    this.inv_buttons[INV.DIAMOND_DOOR] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_DOOR_DIAMOND_CLOSE], 3);\r\n    this.inv_buttons[INV.DIAMOND_DOOR].id = INV.DIAMOND_DOOR;\r\n    this.inv_buttons[INV.FUR] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_FUR], 3);\r\n    this.inv_buttons[INV.FUR].id = INV.FUR;\r\n    this.inv_buttons[INV.FUR].info.img[2] = this.inv_buttons[INV.FUR].info.img[0];\r\n    this.inv_buttons[INV.FUR_BOAR] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_FUR_BOAR], 3);\r\n    this.inv_buttons[INV.FUR_BOAR].id = INV.FUR_BOAR;\r\n    this.inv_buttons[INV.FUR_BOAR].info.img[2] = this.inv_buttons[INV.FUR_BOAR].info.img[0];\r\n    this.inv_buttons[INV.FUR_WOLF] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_FUR_WOLF], 3);\r\n    this.inv_buttons[INV.FUR_WOLF].id = INV.FUR_WOLF;\r\n    this.inv_buttons[INV.FUR_WOLF].info.img[2] = this.inv_buttons[INV.FUR_WOLF].info.img[0];\r\n    this.inv_buttons[INV.PENGUIN_FEATHER] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_PENGUIN_FEATHER], 3);\r\n    this.inv_buttons[INV.PENGUIN_FEATHER].id = INV.PENGUIN_FEATHER;\r\n    this.inv_buttons[INV.HAWK_FEATHER] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_HAWK_FEATHER], 3);\r\n    this.inv_buttons[INV.HAWK_FEATHER].id = INV.HAWK_FEATHER;\r\n    this.inv_buttons[INV.VULTURE_FEATHER] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_VULTURE_FEATHER], 3);\r\n    this.inv_buttons[INV.VULTURE_FEATHER].id = INV.VULTURE_FEATHER;\r\n    this.inv_buttons[INV.EMERALD] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_EMERALD], 3);\r\n    this.inv_buttons[INV.EMERALD].id = INV.EMERALD;\r\n    this.inv_buttons[INV.EARMUFFS] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_EARMUFFS], 3);\r\n    this.inv_buttons[INV.EARMUFFS].id = INV.EARMUFFS;\r\n    this.inv_buttons[INV.COAT] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_COAT], 3);\r\n    this.inv_buttons[INV.COAT].id = INV.COAT;\r\n    this.inv_buttons[INV.WOOD_SPEAR] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_WOOD_SPEAR], 3);\r\n    this.inv_buttons[INV.WOOD_SPEAR].id = INV.WOOD_SPEAR;\r\n    this.inv_buttons[INV.SPEAR] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_SPEAR], 3);\r\n    this.inv_buttons[INV.SPEAR].id = INV.SPEAR;\r\n    this.inv_buttons[INV.GOLD_SPEAR] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_GOLD_SPEAR], 3);\r\n    this.inv_buttons[INV.GOLD_SPEAR].id = INV.GOLD_SPEAR;\r\n    this.inv_buttons[INV.DIAMOND_SPEAR] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_DIAMOND_SPEAR], 3);\r\n    this.inv_buttons[INV.DIAMOND_SPEAR].id = INV.DIAMOND_SPEAR;\r\n    this.inv_buttons[INV.DRAGON_SPEAR] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_DRAGON_SPEAR], 3);\r\n    this.inv_buttons[INV.DRAGON_SPEAR].id = INV.DRAGON_SPEAR;\r\n    this.inv_buttons[INV.FURNACE] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_FURNACE], 3);\r\n    this.inv_buttons[INV.FURNACE].id = INV.FURNACE;\r\n    this.inv_buttons[INV.EXPLORER_HAT] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_EXPLORER_HAT], 3);\r\n    this.inv_buttons[INV.EXPLORER_HAT].id = INV.EXPLORER_HAT;\r\n    this.inv_buttons[INV.PIRATE_HAT] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_PIRATE_HAT], 3);\r\n    this.inv_buttons[INV.PIRATE_HAT].id = INV.PIRATE_HAT;\r\n    this.inv_buttons[INV.FLOWER_HAT] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_FLOWER_HAT], 3);\r\n    this.inv_buttons[INV.FLOWER_HAT].id = INV.FLOWER_HAT;\r\n    this.inv_buttons[INV.FUR_HAT] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_FUR_HAT], 3);\r\n    this.inv_buttons[INV.FUR_HAT].id = INV.FUR_HAT;\r\n    this.inv_buttons[INV.TURBAN1] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_TURBAN1], 3);\r\n    this.inv_buttons[INV.TURBAN1].id = INV.TURBAN1;\r\n    this.inv_buttons[INV.TURBAN2] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_TURBAN2], 3);\r\n    this.inv_buttons[INV.TURBAN2].id = INV.TURBAN2;\r\n    this.inv_buttons[INV.WOOD_BOW] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_WOOD_BOW], 3);\r\n    this.inv_buttons[INV.WOOD_BOW].id = INV.WOOD_BOW;\r\n    this.inv_buttons[INV.WOOD_ARROW] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_WOOD_ARROW], 3);\r\n    this.inv_buttons[INV.WOOD_ARROW].id = INV.WOOD_ARROW;\r\n    this.inv_buttons[INV.WOOD_SHIELD] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_WOOD_SHIELD], 3);\r\n    this.inv_buttons[INV.WOOD_SHIELD].id = INV.WOOD_SHIELD;\r\n    this.inv_buttons[INV.STONE_BOW] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_STONE_BOW], 3);\r\n    this.inv_buttons[INV.STONE_BOW].id = INV.STONE_BOW;\r\n    this.inv_buttons[INV.STONE_ARROW] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_STONE_ARROW], 3);\r\n    this.inv_buttons[INV.STONE_ARROW].id = INV.STONE_ARROW;\r\n    this.inv_buttons[INV.STONE_SHIELD] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_STONE_SHIELD], 3);\r\n    this.inv_buttons[INV.STONE_SHIELD].id = INV.STONE_SHIELD;\r\n    this.inv_buttons[INV.GOLD_BOW] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_GOLD_BOW], 3);\r\n    this.inv_buttons[INV.GOLD_BOW].id = INV.GOLD_BOW;\r\n    this.inv_buttons[INV.GOLD_ARROW] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_GOLD_ARROW], 3);\r\n    this.inv_buttons[INV.GOLD_ARROW].id = INV.GOLD_ARROW;\r\n    this.inv_buttons[INV.GOLD_SHIELD] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_GOLD_SHIELD], 3);\r\n    this.inv_buttons[INV.GOLD_SHIELD].id = INV.GOLD_SHIELD;\r\n    this.inv_buttons[INV.DIAMOND_BOW] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_DIAMOND_BOW], 3);\r\n    this.inv_buttons[INV.DIAMOND_BOW].id = INV.DIAMOND_BOW;\r\n    this.inv_buttons[INV.DIAMOND_ARROW] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_DIAMOND_ARROW], 3);\r\n    this.inv_buttons[INV.DIAMOND_ARROW].id = INV.DIAMOND_ARROW;\r\n    this.inv_buttons[INV.DIAMOND_SHIELD] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_DIAMOND_SHIELD], 3);\r\n    this.inv_buttons[INV.DIAMOND_SHIELD].id = INV.DIAMOND_SHIELD;\r\n    this.inv_buttons[INV.AMETHYST_BOW] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_AMETHYST_BOW], 3);\r\n    this.inv_buttons[INV.AMETHYST_BOW].id = INV.AMETHYST_BOW;\r\n    this.inv_buttons[INV.AMETHYST_ARROW] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_AMETHYST_ARROW], 3);\r\n    this.inv_buttons[INV.AMETHYST_ARROW].id = INV.AMETHYST_ARROW;\r\n    this.inv_buttons[INV.AMETHYST_SHIELD] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_AMETHYST_SHIELD], 3);\r\n    this.inv_buttons[INV.AMETHYST_SHIELD].id = INV.AMETHYST_SHIELD;\r\n    this.inv_buttons[INV.REIDITE_BOW] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_REIDITE_BOW], 3);\r\n    this.inv_buttons[INV.REIDITE_BOW].id = INV.REIDITE_BOW;\r\n    this.inv_buttons[INV.REIDITE_ARROW] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_REIDITE_ARROW], 3);\r\n    this.inv_buttons[INV.REIDITE_ARROW].id = INV.REIDITE_ARROW;\r\n    this.inv_buttons[INV.REIDITE_SHIELD] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_REIDITE_SHIELD], 3);\r\n    this.inv_buttons[INV.REIDITE_SHIELD].id = INV.REIDITE_SHIELD;\r\n    this.inv_buttons[INV.DRAGON_BOW] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_DRAGON_BOW], 3);\r\n    this.inv_buttons[INV.DRAGON_BOW].id = INV.DRAGON_BOW;\r\n    this.inv_buttons[INV.DRAGON_ARROW] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_DRAGON_ARROW], 3);\r\n    this.inv_buttons[INV.DRAGON_ARROW].id = INV.DRAGON_ARROW;\r\n    this.inv_buttons[INV.WOOD_HELMET] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_WOOD_HELMET], 3);\r\n    this.inv_buttons[INV.WOOD_HELMET].id = INV.WOOD_HELMET;\r\n    this.inv_buttons[INV.STONE_HELMET] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_STONE_HELMET], 3);\r\n    this.inv_buttons[INV.STONE_HELMET].id = INV.STONE_HELMET;\r\n    this.inv_buttons[INV.GOLD_HELMET] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_GOLD_HELMET], 3);\r\n    this.inv_buttons[INV.GOLD_HELMET].id = INV.GOLD_HELMET;\r\n    this.inv_buttons[INV.DIAMOND_HELMET] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_DIAMOND_HELMET], 3);\r\n    this.inv_buttons[INV.DIAMOND_HELMET].id = INV.DIAMOND_HELMET;\r\n    this.inv_buttons[INV.BOOK] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_BOOK], 3);\r\n    this.inv_buttons[INV.BOOK].id = INV.BOOK;\r\n    this.inv_buttons[INV.PAPER] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_PAPER], 3);\r\n    this.inv_buttons[INV.PAPER].id = INV.PAPER;\r\n    this.inv_buttons[INV.PAPER].info.img[2] = this.inv_buttons[INV.PAPER].info.img[0];\r\n    this.inv_buttons[INV.BAG] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_BAG], 3);\r\n    this.inv_buttons[INV.BAG].id = INV.BAG;\r\n    this.inv_buttons[INV.AMETHYST] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_AMETHYST], 3);\r\n    this.inv_buttons[INV.AMETHYST].id = INV.AMETHYST;\r\n    this.inv_buttons[INV.AMETHYST].info.img[2] = this.inv_buttons[INV.AMETHYST].info.img[0];\r\n    this.inv_buttons[INV.SWORD_AMETHYST] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_SWORD_AMETHYST], 3);\r\n    this.inv_buttons[INV.SWORD_AMETHYST].id = INV.SWORD_AMETHYST;\r\n    this.inv_buttons[INV.PIRATE_SWORD] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_PIRATE_SWORD], 3);\r\n    this.inv_buttons[INV.PIRATE_SWORD].id = INV.PIRATE_SWORD;\r\n    this.inv_buttons[INV.PICK_AMETHYST] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_PICK_AMETHYST], 3);\r\n    this.inv_buttons[INV.PICK_AMETHYST].id = INV.PICK_AMETHYST;\r\n    this.inv_buttons[INV.PICK_REIDITE] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_PICK_REIDITE], 3);\r\n    this.inv_buttons[INV.PICK_REIDITE].id = INV.PICK_REIDITE;\r\n    this.inv_buttons[INV.AMETHYST_SPEAR] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_AMETHYST_SPEAR], 3);\r\n    this.inv_buttons[INV.AMETHYST_SPEAR].id = INV.AMETHYST_SPEAR;\r\n    this.inv_buttons[INV.HAMMER] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_HAMMER], 3);\r\n    this.inv_buttons[INV.HAMMER].id = INV.HAMMER;\r\n    this.inv_buttons[INV.HAMMER_GOLD] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_HAMMER_GOLD], 3);\r\n    this.inv_buttons[INV.HAMMER_GOLD].id = INV.HAMMER_GOLD;\r\n    this.inv_buttons[INV.HAMMER_DIAMOND] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_HAMMER_DIAMOND], 3);\r\n    this.inv_buttons[INV.HAMMER_DIAMOND].id = INV.HAMMER_DIAMOND;\r\n    this.inv_buttons[INV.HAMMER_AMETHYST] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_HAMMER_AMETHYST], 3);\r\n    this.inv_buttons[INV.HAMMER_AMETHYST].id = INV.HAMMER_AMETHYST;\r\n    this.inv_buttons[INV.HAMMER_REIDITE] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_HAMMER_REIDITE], 3);\r\n    this.inv_buttons[INV.HAMMER_REIDITE].id = INV.HAMMER_REIDITE;\r\n    this.inv_buttons[INV.AMETHYST_WALL] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_AMETHYST_WALL], 3);\r\n    this.inv_buttons[INV.AMETHYST_WALL].id = INV.AMETHYST_WALL;\r\n    this.inv_buttons[INV.AMETHYST_SPIKE] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_AMETHYST_SPIKE], 3);\r\n    this.inv_buttons[INV.AMETHYST_SPIKE].id = INV.AMETHYST_SPIKE;\r\n    this.inv_buttons[INV.AMETHYST_DOOR] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_DOOR_AMETHYST_CLOSE], 3);\r\n    this.inv_buttons[INV.AMETHYST_DOOR].id = INV.AMETHYST_DOOR;\r\n    this.inv_buttons[INV.CAP_SCARF] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_CAP_SCARF], 3);\r\n    this.inv_buttons[INV.CAP_SCARF].id = INV.CAP_SCARF;\r\n    this.inv_buttons[INV.FUR_WINTER] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_FUR_WINTER], 3);\r\n    this.inv_buttons[INV.FUR_WINTER].id = INV.FUR_WINTER;\r\n    this.inv_buttons[INV.FUR_WINTER].info.img[2] = this.inv_buttons[INV.FUR_WINTER].info.img[0];\r\n    this.inv_buttons[INV.FUR_MAMMOTH] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_FUR_MAMMOTH], 3);\r\n    this.inv_buttons[INV.FUR_MAMMOTH].id = INV.FUR_MAMMOTH;\r\n    this.inv_buttons[INV.FUR_MAMMOTH].info.img[2] = this.inv_buttons[INV.FUR_MAMMOTH].info.img[0];\r\n    this.inv_buttons[INV.BLUE_CORD] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_BLUE_CORD], 3);\r\n    this.inv_buttons[INV.BLUE_CORD].id = INV.BLUE_CORD;\r\n    this.inv_buttons[INV.BLUE_CORD].info.img[2] = this.inv_buttons[INV.BLUE_CORD].info.img[0];\r\n    this.inv_buttons[INV.LOCK] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_LOCK], 3);\r\n    this.inv_buttons[INV.LOCK].id = INV.LOCK;\r\n    this.inv_buttons[INV.LOCK].info.img[2] = this.inv_buttons[INV.LOCK].info.img[0];\r\n    this.inv_buttons[INV.DRAGON_HEART] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_DRAGON_HEART], 3);\r\n    this.inv_buttons[INV.DRAGON_HEART].id = INV.DRAGON_HEART;\r\n    this.inv_buttons[INV.LAVA_HEART] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_LAVA_HEART], 3);\r\n    this.inv_buttons[INV.LAVA_HEART].id = INV.LAVA_HEART;\r\n    this.inv_buttons[INV.RESURRECTION] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_RESURRECTION], 3);\r\n    this.inv_buttons[INV.RESURRECTION].id = INV.RESURRECTION;\r\n    this.inv_buttons[INV.LOCKPICK] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_LOCKPICK], 3);\r\n    this.inv_buttons[INV.LOCKPICK].id = INV.LOCKPICK;\r\n    this.inv_buttons[INV.TOTEM] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_TOTEM], 3);\r\n    this.inv_buttons[INV.TOTEM].id = INV.TOTEM;\r\n    this.inv_buttons[INV.AMETHYST_HELMET] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_AMETHYST_HELMET], 3);\r\n    this.inv_buttons[INV.AMETHYST_HELMET].id = INV.AMETHYST_HELMET;\r\n    this.inv_buttons[INV.SUPER_HAMMER] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_SUPER_HAMMER], 3);\r\n    this.inv_buttons[INV.SUPER_HAMMER].id = INV.SUPER_HAMMER;\r\n    this.inv_buttons[INV.BRIDGE] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_BRIDGE], 3);\r\n    this.inv_buttons[INV.BRIDGE].id = INV.BRIDGE;\r\n    this.inv_buttons[INV.WOOD_TOWER] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_WOOD_TOWER], 3);\r\n    this.inv_buttons[INV.WOOD_TOWER].id = INV.WOOD_TOWER;\r\n    this.inv_buttons[INV.BOAT] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_BOAT], 3);\r\n    this.inv_buttons[INV.BOAT].id = INV.BOAT;\r\n    this.inv_buttons[INV.SLED] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_SLED], 3);\r\n    this.inv_buttons[INV.SLED].id = INV.SLED;\r\n    this.inv_buttons[INV.PLANE] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_PLANE], 3);\r\n    this.inv_buttons[INV.PLANE].id = INV.PLANE;\r\n    this.inv_buttons[INV.SADDLE] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_SADDLE], 3);\r\n    this.inv_buttons[INV.SADDLE].id = INV.SADDLE;\r\n    this.inv_buttons[INV.MOUNT_BOAR] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_MOUNT_BOAR], 3);\r\n    this.inv_buttons[INV.MOUNT_BOAR].id = INV.MOUNT_BOAR;\r\n    this.inv_buttons[INV.CRAB_BOSS] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_CRAB_BOSS], 3);\r\n    this.inv_buttons[INV.CRAB_BOSS].id = INV.CRAB_BOSS;\r\n    this.inv_buttons[INV.BABY_DRAGON] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_BABY_DRAGON], 3);\r\n    this.inv_buttons[INV.BABY_DRAGON].id = INV.BABY_DRAGON;\r\n    this.inv_buttons[INV.BABY_MAMMOTH] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_BABY_MAMMOTH], 3);\r\n    this.inv_buttons[INV.BABY_MAMMOTH].id = INV.BABY_MAMMOTH;\r\n    this.inv_buttons[INV.BABY_LAVA] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_BABY_LAVA], 3);\r\n    this.inv_buttons[INV.BABY_LAVA].id = INV.BABY_LAVA;\r\n    this.inv_buttons[INV.HAWK] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_HAWK], 3);\r\n    this.inv_buttons[INV.HAWK].id = INV.HAWK;\r\n    this.inv_buttons[INV.SAND] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_SAND], 3);\r\n    this.inv_buttons[INV.SAND].id = INV.SAND;\r\n    this.inv_buttons[INV.SAND].info.img[2] = this.inv_buttons[INV.SAND].info.img[0];\r\n    this.inv_buttons[INV.BOTTLE_FULL] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_BOTTLE_FULL], 3);\r\n    this.inv_buttons[INV.BOTTLE_FULL].id = INV.BOTTLE_FULL;\r\n    this.inv_buttons[INV.BOTTLE_EMPTY] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_BOTTLE_EMPTY], 3);\r\n    this.inv_buttons[INV.BOTTLE_EMPTY].id = INV.BOTTLE_EMPTY;\r\n    this.inv_buttons[INV.SHOVEL] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_SHOVEL], 3);\r\n    this.inv_buttons[INV.SHOVEL].id = INV.SHOVEL;\r\n    this.inv_buttons[INV.SHOVEL_GOLD] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_SHOVEL_GOLD], 3);\r\n    this.inv_buttons[INV.SHOVEL_GOLD].id = INV.SHOVEL_GOLD;\r\n    this.inv_buttons[INV.SHOVEL_DIAMOND] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_SHOVEL_DIAMOND], 3);\r\n    this.inv_buttons[INV.SHOVEL_DIAMOND].id = INV.SHOVEL_DIAMOND;\r\n    this.inv_buttons[INV.SHOVEL_AMETHYST] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_SHOVEL_AMETHYST], 3);\r\n    this.inv_buttons[INV.SHOVEL_AMETHYST].id = INV.SHOVEL_AMETHYST;\r\n    this.inv_buttons[INV.SPANNER] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_SPANNER], 3);\r\n    this.inv_buttons[INV.SPANNER].id = INV.SPANNER;\r\n    this.inv_buttons[INV.KRAKEN_SKIN] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_KRAKEN_SKIN], 3);\r\n    this.inv_buttons[INV.KRAKEN_SKIN].id = INV.KRAKEN_SKIN;\r\n    this.inv_buttons[INV.KRAKEN_SKIN].info.img[2] = this.inv_buttons[INV.KRAKEN_SKIN].info.img[0];\r\n    this.inv_buttons[INV.WATERING_CAN] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_WATERING_CAN], 3);\r\n    this.inv_buttons[INV.WATERING_CAN].id = INV.WATERING_CAN;\r\n    this.inv_buttons[INV.FLOUR] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_FLOUR], 3);\r\n    this.inv_buttons[INV.FLOUR].id = INV.FLOUR;\r\n    this.inv_buttons[INV.FLOUR].info.img[2] = this.inv_buttons[INV.FLOUR].info.img[0];\r\n    this.inv_buttons[INV.WHEAT_SEED] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_WHEAT_SEED], 3);\r\n    this.inv_buttons[INV.WHEAT_SEED].id = INV.WHEAT_SEED;\r\n    this.inv_buttons[INV.COOKIE] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_COOKIE], 3);\r\n    this.inv_buttons[INV.COOKIE].id = INV.COOKIE;\r\n    this.inv_buttons[INV.WILD_WHEAT] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_WILD_WHEAT], 3);\r\n    this.inv_buttons[INV.WILD_WHEAT].id = INV.WILD_WHEAT;\r\n    this.inv_buttons[INV.WILD_WHEAT].info.img[2] = this.inv_buttons[INV.WILD_WHEAT].info.img[0];\r\n    this.inv_buttons[INV.WINDMILL] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_WINDMILL], 3);\r\n    this.inv_buttons[INV.WINDMILL].id = INV.WINDMILL;\r\n    this.inv_buttons[INV.SUPER_DIVING_SUIT] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_SUPER_DIVING_SUIT], 3);\r\n    this.inv_buttons[INV.SUPER_DIVING_SUIT].id = INV.SUPER_DIVING_SUIT;\r\n    this.inv_buttons[INV.DIVING_MASK] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_DIVING_MASK], 3);\r\n    this.inv_buttons[INV.DIVING_MASK].id = INV.DIVING_MASK;\r\n    this.inv_buttons[INV.WATERING_CAN_FULL] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_WATERING_CAN_FULL], 3);\r\n    this.inv_buttons[INV.WATERING_CAN_FULL].id = INV.WATERING_CAN_FULL;\r\n    this.inv_buttons[INV.CAKE] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_CAKE], 3);\r\n    this.inv_buttons[INV.CAKE].id = INV.CAKE;\r\n    this.inv_buttons[INV.BREAD] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_BREAD], 3);\r\n    this.inv_buttons[INV.BREAD].id = INV.BREAD;\r\n    this.inv_buttons[INV.FOODFISH] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_FOODFISH], 3);\r\n    this.inv_buttons[INV.FOODFISH].id = INV.FOODFISH;\r\n    this.inv_buttons[INV.FOODFISH_COOKED] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_FOODFISH_COOKED], 3);\r\n    this.inv_buttons[INV.FOODFISH_COOKED].id = INV.FOODFISH_COOKED;\r\n    this.inv_buttons[INV.SCALES] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_SCALES], 3);\r\n    this.inv_buttons[INV.SCALES].id = INV.SCALES;\r\n    this.inv_buttons[INV.SCALES].info.img[2] = this.inv_buttons[INV.SCALES].info.img[0];\r\n    this.inv_buttons[INV.GROUND] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_GROUND], 3);\r\n    this.inv_buttons[INV.GROUND].id = INV.GROUND;\r\n    this.inv_buttons[INV.GROUND].info.img[2] = this.inv_buttons[INV.GROUND].info.img[0];\r\n    this.inv_buttons[INV.PLOT] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_PLOT], 3);\r\n    this.inv_buttons[INV.PLOT].id = INV.PLOT;\r\n    this.inv_buttons[INV.ICE] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_ICE], 3);\r\n    this.inv_buttons[INV.ICE].id = INV.ICE;\r\n    this.inv_buttons[INV.ICE].info.img[2] = this.inv_buttons[INV.ICE].info.img[0];\r\n    this.inv_buttons[INV.BREAD_OVEN] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_BREAD_OVEN], 3);\r\n    this.inv_buttons[INV.BREAD_OVEN].id = INV.BREAD_OVEN;\r\n    this.inv_buttons[INV.SANDWICH] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_SANDWICH], 3);\r\n    this.inv_buttons[INV.SANDWICH].id = INV.SANDWICH;\r\n    this.inv_buttons[INV.DRAGON_HELMET] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_DRAGON_HELMET], 3);\r\n    this.inv_buttons[INV.DRAGON_HELMET].id = INV.DRAGON_HELMET;\r\n    this.inv_buttons[INV.DRAGON_SWORD] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_DRAGON_SWORD], 3);\r\n    this.inv_buttons[INV.DRAGON_SWORD].id = INV.DRAGON_SWORD;\r\n    this.inv_buttons[INV.DRAGON_ORB] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_DRAGON_ORB], 3);\r\n    this.inv_buttons[INV.DRAGON_ORB].id = INV.DRAGON_ORB;\r\n    this.inv_buttons[INV.DRAGON_ORB].info.img[2] = this.inv_buttons[INV.DRAGON_ORB].info.img[0];\r\n    this.inv_buttons[INV.DRAGON_CUBE] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_DRAGON_CUBE], 3);\r\n    this.inv_buttons[INV.DRAGON_CUBE].id = INV.DRAGON_CUBE;\r\n    this.inv_buttons[INV.DRAGON_CUBE].info.img[2] = this.inv_buttons[INV.DRAGON_CUBE].info.img[0];\r\n    this.inv_buttons[INV.LAVA_SPEAR] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_LAVA_SPEAR], 3);\r\n    this.inv_buttons[INV.LAVA_SPEAR].id = INV.LAVA_SPEAR;\r\n    this.inv_buttons[INV.LAVA_SWORD] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_LAVA_SWORD], 3);\r\n    this.inv_buttons[INV.LAVA_SWORD].id = INV.LAVA_SWORD;\r\n    this.inv_buttons[INV.LAVA_ORB] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_LAVA_ORB], 3);\r\n    this.inv_buttons[INV.LAVA_ORB].id = INV.LAVA_ORB;\r\n    this.inv_buttons[INV.LAVA_ORB].info.img[2] = this.inv_buttons[INV.LAVA_ORB].info.img[0];\r\n    this.inv_buttons[INV.LAVA_CUBE] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_LAVA_CUBE], 3);\r\n    this.inv_buttons[INV.LAVA_CUBE].id = INV.LAVA_CUBE;\r\n    this.inv_buttons[INV.LAVA_CUBE].info.img[2] = this.inv_buttons[INV.LAVA_CUBE].info.img[0];\r\n    this.inv_buttons[INV.CROWN_GREEN] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_CROWN_GREEN], 3);\r\n    this.inv_buttons[INV.CROWN_GREEN].id = INV.CROWN_GREEN;\r\n    this.inv_buttons[INV.GEMME_GREEN] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_GEMME_GREEN], 3);\r\n    this.inv_buttons[INV.GEMME_GREEN].id = INV.GEMME_GREEN;\r\n    this.inv_buttons[INV.GEMME_GREEN].info.img[2] = this.inv_buttons[INV.GEMME_GREEN].info.img[0];\r\n    this.inv_buttons[INV.GEMME_ORANGE] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_GEMME_ORANGE], 3);\r\n    this.inv_buttons[INV.GEMME_ORANGE].id = INV.GEMME_ORANGE;\r\n    this.inv_buttons[INV.GEMME_ORANGE].info.img[2] = this.inv_buttons[INV.GEMME_ORANGE].info.img[0];\r\n    this.inv_buttons[INV.CROWN_ORANGE] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_CROWN_ORANGE], 3);\r\n    this.inv_buttons[INV.CROWN_ORANGE].id = INV.CROWN_ORANGE;\r\n    this.inv_buttons[INV.GEMME_BLUE] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_GEMME_BLUE], 3);\r\n    this.inv_buttons[INV.GEMME_BLUE].id = INV.GEMME_BLUE;\r\n    this.inv_buttons[INV.GEMME_BLUE].info.img[2] = this.inv_buttons[INV.GEMME_BLUE].info.img[0];\r\n    this.inv_buttons[INV.CROWN_BLUE] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_CROWN_BLUE], 3);\r\n    this.inv_buttons[INV.CROWN_BLUE].id = INV.CROWN_BLUE;\r\n    this.inv_buttons[INV.HOOD] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_HOOD], 3);\r\n    this.inv_buttons[INV.HOOD].id = INV.HOOD;\r\n    this.inv_buttons[INV.PEASANT] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_PEASANT], 3);\r\n    this.inv_buttons[INV.PEASANT].id = INV.PEASANT;\r\n    this.inv_buttons[INV.SPECIAL_FUR] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_SPECIAL_FUR], 3);\r\n    this.inv_buttons[INV.SPECIAL_FUR].id = INV.SPECIAL_FUR;\r\n    this.inv_buttons[INV.SPECIAL_FUR_2] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_SPECIAL_FUR_2], 3);\r\n    this.inv_buttons[INV.SPECIAL_FUR_2].id = INV.SPECIAL_FUR_2;\r\n    this.inv_buttons[INV.WINTER_PEASANT] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_WINTER_PEASANT], 3);\r\n    this.inv_buttons[INV.WINTER_PEASANT].id = INV.WINTER_PEASANT;\r\n    this.inv_buttons[INV.WINTER_HOOD] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_WINTER_HOOD], 3);\r\n    this.inv_buttons[INV.WINTER_HOOD].id = INV.WINTER_HOOD;\r\n    this.inv_buttons[INV.BUCKET_FULL] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_BUCKET_FULL], 3);\r\n    this.inv_buttons[INV.BUCKET_FULL].id = INV.BUCKET_FULL;\r\n    this.inv_buttons[INV.BUCKET_EMPTY] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_BUCKET_EMPTY], 3);\r\n    this.inv_buttons[INV.BUCKET_EMPTY].id = INV.BUCKET_EMPTY;\r\n    this.inv_buttons[INV.WELL] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_WELL], 3);\r\n    this.inv_buttons[INV.WELL].id = INV.WELL;\r\n    this.inv_buttons[INV.SIGN] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_SIGN], 3);\r\n    this.inv_buttons[INV.SIGN].id = INV.SIGN;\r\n    this.inv_buttons[INV.PUMPKIN_SEED] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_PUMPKIN_SEED], 3);\r\n    this.inv_buttons[INV.PUMPKIN_SEED].id = INV.PUMPKIN_SEED;\r\n    this.inv_buttons[INV.PUMPKIN] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_PUMPKIN], 3);\r\n    this.inv_buttons[INV.PUMPKIN].id = INV.PUMPKIN;\r\n    this.inv_buttons[INV.GARLIC_SEED] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_GARLIC_SEED], 3);\r\n    this.inv_buttons[INV.GARLIC_SEED].id = INV.GARLIC_SEED;\r\n    this.inv_buttons[INV.GARLIC] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_GARLIC], 3);\r\n    this.inv_buttons[INV.GARLIC].id = INV.GARLIC;\r\n    this.inv_buttons[INV.ROOF] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_ROOF], 3);\r\n    this.inv_buttons[INV.ROOF].id = INV.ROOF;\r\n    this.inv_buttons[INV.THORNBUSH_SEED] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_THORNBUSH_SEED], 3);\r\n    this.inv_buttons[INV.THORNBUSH_SEED].id = INV.THORNBUSH_SEED;\r\n    this.inv_buttons[INV.THORNBUSH] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_THORNBUSH], 3);\r\n    this.inv_buttons[INV.THORNBUSH].id = INV.THORNBUSH;\r\n    this.inv_buttons[INV.CARROT_SEED] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_CARROT_SEED], 3);\r\n    this.inv_buttons[INV.CARROT_SEED].id = INV.CARROT_SEED;\r\n    this.inv_buttons[INV.CARROT] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_CARROT], 3);\r\n    this.inv_buttons[INV.CARROT].id = INV.CARROT;\r\n    this.inv_buttons[INV.TOMATO_SEED] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_TOMATO_SEED], 3);\r\n    this.inv_buttons[INV.TOMATO_SEED].id = INV.TOMATO_SEED;\r\n    this.inv_buttons[INV.TOMATO] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_TOMATO], 3);\r\n    this.inv_buttons[INV.TOMATO].id = INV.TOMATO;\r\n    this.inv_buttons[INV.WATERMELON_SEED] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_WATERMELON_SEED], 3);\r\n    this.inv_buttons[INV.WATERMELON_SEED].id = INV.WATERMELON_SEED;\r\n    this.inv_buttons[INV.WATERMELON] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_WATERMELON], 3);\r\n    this.inv_buttons[INV.WATERMELON].id = INV.WATERMELON;\r\n    this.inv_buttons[INV.ALOE_VERA_SEED] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_ALOE_VERA_SEED], 3);\r\n    this.inv_buttons[INV.ALOE_VERA_SEED].id = INV.ALOE_VERA_SEED;\r\n    this.inv_buttons[INV.ALOE_VERA] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_ALOE_VERA], 3);\r\n    this.inv_buttons[INV.ALOE_VERA].id = INV.ALOE_VERA;\r\n    this.inv_buttons[INV.CHRISTMAS_HAT] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_CHRISTMAS_HAT], 3);\r\n    this.inv_buttons[INV.CHRISTMAS_HAT].id = INV.CHRISTMAS_HAT;\r\n    this.inv_buttons[INV.ELF_HAT] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_ELF_HAT], 3);\r\n    this.inv_buttons[INV.ELF_HAT].id = INV.ELF_HAT;\r\n    this.inv_buttons[INV.WOOD_SPEAR] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_WOOD_SPEAR], 3);\r\n    this.inv_buttons[INV.WOOD_SPEAR].id = INV.WOOD_SPEAR;\r\n    this.inv_buttons[INV.DRAGON_SPEAR] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_DRAGON_SPEAR], 3);\r\n    this.inv_buttons[INV.DRAGON_SPEAR].id = INV.DRAGON_SPEAR;\r\n    this.inv_buttons[INV.CRAB_STICK] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_CRAB_STICK], 3);\r\n    this.inv_buttons[INV.CRAB_STICK].id = INV.CRAB_STICK;\r\n    this.inv_buttons[INV.CRAB_SPEAR] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_CRAB_SPEAR], 3);\r\n    this.inv_buttons[INV.CRAB_SPEAR].id = INV.CRAB_SPEAR;\r\n    this.inv_buttons[INV.CRAB_LOOT] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_CRAB_LOOT], 3);\r\n    this.inv_buttons[INV.CRAB_LOOT].id = INV.CRAB_LOOT;\r\n    this.inv_buttons[INV.BED] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_BED], 3);\r\n    this.inv_buttons[INV.BED].id = INV.BED;\r\n    this.inv_buttons[INV.CROWN_CRAB] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_CROWN_CRAB], 3);\r\n    this.inv_buttons[INV.CROWN_CRAB].id = INV.CROWN_CRAB;\r\n    this.inv_buttons[INV.GARLAND] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_GARLAND], 3);\r\n    this.inv_buttons[INV.GARLAND].id = INV.GARLAND;\r\n    this.inv_buttons[INV.CANDY] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_CANDY], 3);\r\n    this.inv_buttons[INV.CANDY].id = INV.CANDY;\r\n    this.inv_buttons[INV.SUGAR_CAN] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_SUGAR_CAN], 3);\r\n    this.inv_buttons[INV.SUGAR_CAN].id = INV.SUGAR_CAN;\r\n    this.craft_buttons = [];\r\n    this.craft_buttons[CRAFT.SWORD] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_SWORD], 3);\r\n    this.craft_buttons[CRAFT.SWORD].id = CRAFT.SWORD;\r\n    this.craft_buttons[CRAFT.PICK] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_PICK], 3);\r\n    this.craft_buttons[CRAFT.PICK].id = CRAFT.PICK;\r\n    this.craft_buttons[CRAFT.FIRE] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_FIRE], 3);\r\n    this.craft_buttons[CRAFT.FIRE].id = CRAFT.FIRE;\r\n    this.craft_buttons[CRAFT.WORKBENCH] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_WORK], 3);\r\n    this.craft_buttons[CRAFT.WORKBENCH].id = CRAFT.WORKBENCH;\r\n    this.craft_buttons[CRAFT.WALL] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_WALL], 3);\r\n    this.craft_buttons[CRAFT.WALL].id = CRAFT.WALL;\r\n    this.craft_buttons[CRAFT.SPIKE] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_SPIKE], 3);\r\n    this.craft_buttons[CRAFT.SPIKE].id = CRAFT.SPIKE;\r\n    this.craft_buttons[CRAFT.SEED] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_SEED], 3);\r\n    this.craft_buttons[CRAFT.SEED].id = CRAFT.SEED;\r\n    this.craft_buttons[CRAFT.PICK_GOLD] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_PICK_GOLD], 3);\r\n    this.craft_buttons[CRAFT.PICK_GOLD].id = CRAFT.PICK_GOLD;\r\n    this.craft_buttons[CRAFT.PICK_DIAMOND] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_PICK_DIAMOND], 3);\r\n    this.craft_buttons[CRAFT.PICK_DIAMOND].id = CRAFT.PICK_DIAMOND;\r\n    this.craft_buttons[CRAFT.SWORD_GOLD] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_SWORD_GOLD], 3);\r\n    this.craft_buttons[CRAFT.SWORD_GOLD].id = CRAFT.SWORD_GOLD;\r\n    this.craft_buttons[CRAFT.SWORD_WOOD] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_SWORD_WOOD], 3);\r\n    this.craft_buttons[CRAFT.SWORD_WOOD].id = CRAFT.SWORD_WOOD;\r\n    this.craft_buttons[CRAFT.SWORD_DIAMOND] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_SWORD_DIAMOND], 3);\r\n    this.craft_buttons[CRAFT.SWORD_DIAMOND].id = CRAFT.SWORD_DIAMOND;\r\n    this.craft_buttons[CRAFT.PICK_WOOD] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_PICK_WOOD], 3);\r\n    this.craft_buttons[CRAFT.PICK_WOOD].id = CRAFT.PICK_WOOD;\r\n    this.craft_buttons[CRAFT.COOKED_MEAT] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_COOKED_MEAT], 3);\r\n    this.craft_buttons[CRAFT.COOKED_MEAT].id = CRAFT.COOKED_MEAT;\r\n    this.craft_buttons[CRAFT.BIG_FIRE] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_BIG_FIRE], 3);\r\n    this.craft_buttons[CRAFT.BIG_FIRE].id = CRAFT.BIG_FIRE;\r\n    this.craft_buttons[CRAFT.BANDAGE] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_BANDAGE], 3);\r\n    this.craft_buttons[CRAFT.BANDAGE].id = CRAFT.BANDAGE;\r\n    this.craft_buttons[CRAFT.STONE_WALL] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_STONE_WALL], 3);\r\n    this.craft_buttons[CRAFT.STONE_WALL].id = CRAFT.STONE_WALL;\r\n    this.craft_buttons[CRAFT.GOLD_WALL] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_GOLD_WALL], 3);\r\n    this.craft_buttons[CRAFT.GOLD_WALL].id = CRAFT.GOLD_WALL;\r\n    this.craft_buttons[CRAFT.DIAMOND_WALL] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_DIAMOND_WALL], 3);\r\n    this.craft_buttons[CRAFT.DIAMOND_WALL].id = CRAFT.DIAMOND_WALL;\r\n    this.craft_buttons[CRAFT.WOOD_DOOR] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_DOOR_WOOD_CLOSE], 3);\r\n    this.craft_buttons[CRAFT.WOOD_DOOR].id = CRAFT.WOOD_DOOR;\r\n    this.craft_buttons[CRAFT.CHEST] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_CHEST], 3);\r\n    this.craft_buttons[CRAFT.CHEST].id = CRAFT.CHEST;\r\n    this.craft_buttons[CRAFT.STONE_SPIKE] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_STONE_SPIKE], 3);\r\n    this.craft_buttons[CRAFT.STONE_SPIKE].id = CRAFT.STONE_SPIKE;\r\n    this.craft_buttons[CRAFT.GOLD_SPIKE] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_GOLD_SPIKE], 3);\r\n    this.craft_buttons[CRAFT.GOLD_SPIKE].id = CRAFT.GOLD_SPIKE;\r\n    this.craft_buttons[CRAFT.DIAMOND_SPIKE] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_DIAMOND_SPIKE], 3);\r\n    this.craft_buttons[CRAFT.DIAMOND_SPIKE].id = CRAFT.DIAMOND_SPIKE;\r\n    this.craft_buttons[CRAFT.BAG] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_BAG], 3);\r\n    this.craft_buttons[CRAFT.BAG].id = CRAFT.BAG;\r\n    this.craft_buttons[CRAFT.EARMUFFS] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_EARMUFFS], 3);\r\n    this.craft_buttons[CRAFT.EARMUFFS].id = CRAFT.EARMUFFS;\r\n    this.craft_buttons[CRAFT.STONE_DOOR] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_DOOR_STONE_CLOSE], 3);\r\n    this.craft_buttons[CRAFT.STONE_DOOR].id = CRAFT.STONE_DOOR;\r\n    this.craft_buttons[CRAFT.GOLD_DOOR] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_DOOR_GOLD_CLOSE], 3);\r\n    this.craft_buttons[CRAFT.GOLD_DOOR].id = CRAFT.GOLD_DOOR;\r\n    this.craft_buttons[CRAFT.DIAMOND_DOOR] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_DOOR_DIAMOND_CLOSE], 3);\r\n    this.craft_buttons[CRAFT.DIAMOND_DOOR].id = CRAFT.DIAMOND_DOOR;\r\n    this.craft_buttons[CRAFT.EARMUFFS] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_EARMUFFS], 3);\r\n    this.craft_buttons[CRAFT.EARMUFFS].id = CRAFT.EARMUFFS;\r\n    this.craft_buttons[CRAFT.COAT] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_COAT], 3);\r\n    this.craft_buttons[CRAFT.COAT].id = CRAFT.COAT;\r\n    this.craft_buttons[CRAFT.WOOD_SPEAR] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_WOOD_SPEAR], 3);\r\n    this.craft_buttons[CRAFT.WOOD_SPEAR].id = CRAFT.WOOD_SPEAR;\r\n    this.craft_buttons[CRAFT.SPEAR] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_SPEAR], 3);\r\n    this.craft_buttons[CRAFT.SPEAR].id = CRAFT.SPEAR;\r\n    this.craft_buttons[CRAFT.GOLD_SPEAR] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_GOLD_SPEAR], 3);\r\n    this.craft_buttons[CRAFT.GOLD_SPEAR].id = CRAFT.GOLD_SPEAR;\r\n    this.craft_buttons[CRAFT.DIAMOND_SPEAR] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_DIAMOND_SPEAR], 3);\r\n    this.craft_buttons[CRAFT.DIAMOND_SPEAR].id = CRAFT.DIAMOND_SPEAR;\r\n    this.craft_buttons[CRAFT.DRAGON_SPEAR] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_DRAGON_SPEAR], 3);\r\n    this.craft_buttons[CRAFT.DRAGON_SPEAR].id = CRAFT.DRAGON_SPEAR;\r\n    this.craft_buttons[CRAFT.FURNACE] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_FURNACE], 3);\r\n    this.craft_buttons[CRAFT.FURNACE].id = CRAFT.FURNACE;\r\n    this.craft_buttons[CRAFT.EXPLORER_HAT] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_EXPLORER_HAT], 3);\r\n    this.craft_buttons[CRAFT.EXPLORER_HAT].id = CRAFT.EXPLORER_HAT;\r\n    this.craft_buttons[CRAFT.PIRATE_HAT] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_PIRATE_HAT], 3);\r\n    this.craft_buttons[CRAFT.PIRATE_HAT].id = CRAFT.PIRATE_HAT;\r\n    this.craft_buttons[CRAFT.FLOWER_HAT] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_FLOWER_HAT], 3);\r\n    this.craft_buttons[CRAFT.FLOWER_HAT].id = CRAFT.FLOWER_HAT;\r\n    this.craft_buttons[CRAFT.FUR_HAT] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_FUR_HAT], 3);\r\n    this.craft_buttons[CRAFT.FUR_HAT].id = CRAFT.FUR_HAT;\r\n    this.craft_buttons[CRAFT.TURBAN1] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_TURBAN1], 3);\r\n    this.craft_buttons[CRAFT.TURBAN1].id = CRAFT.TURBAN1;\r\n    this.craft_buttons[CRAFT.TURBAN2] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_TURBAN2], 3);\r\n    this.craft_buttons[CRAFT.TURBAN2].id = CRAFT.TURBAN2;\r\n    this.craft_buttons[CRAFT.WOOD_BOW] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_WOOD_BOW], 3);\r\n    this.craft_buttons[CRAFT.WOOD_BOW].id = CRAFT.WOOD_BOW;\r\n    this.craft_buttons[CRAFT.WOOD_ARROW] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_WOOD_ARROW], 3);\r\n    this.craft_buttons[CRAFT.WOOD_ARROW].id = CRAFT.WOOD_ARROW;\r\n    this.craft_buttons[CRAFT.WOOD_SHIELD] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_WOOD_SHIELD], 3);\r\n    this.craft_buttons[CRAFT.WOOD_SHIELD].id = CRAFT.WOOD_SHIELD;\r\n    this.craft_buttons[CRAFT.STONE_BOW] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_STONE_BOW], 3);\r\n    this.craft_buttons[CRAFT.STONE_BOW].id = CRAFT.STONE_BOW;\r\n    this.craft_buttons[CRAFT.STONE_ARROW] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_STONE_ARROW], 3);\r\n    this.craft_buttons[CRAFT.STONE_ARROW].id = CRAFT.STONE_ARROW;\r\n    this.craft_buttons[CRAFT.STONE_SHIELD] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_STONE_SHIELD], 3);\r\n    this.craft_buttons[CRAFT.STONE_SHIELD].id = CRAFT.STONE_SHIELD;\r\n    this.craft_buttons[CRAFT.GOLD_BOW] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_GOLD_BOW], 3);\r\n    this.craft_buttons[CRAFT.GOLD_BOW].id = CRAFT.GOLD_BOW;\r\n    this.craft_buttons[CRAFT.GOLD_ARROW] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_GOLD_ARROW], 3);\r\n    this.craft_buttons[CRAFT.GOLD_ARROW].id = CRAFT.GOLD_ARROW;\r\n    this.craft_buttons[CRAFT.GOLD_SHIELD] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_GOLD_SHIELD], 3);\r\n    this.craft_buttons[CRAFT.GOLD_SHIELD].id = CRAFT.GOLD_SHIELD;\r\n    this.craft_buttons[CRAFT.DIAMOND_BOW] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_DIAMOND_BOW], 3);\r\n    this.craft_buttons[CRAFT.DIAMOND_BOW].id = CRAFT.DIAMOND_BOW;\r\n    this.craft_buttons[CRAFT.DIAMOND_ARROW] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_DIAMOND_ARROW], 3);\r\n    this.craft_buttons[CRAFT.DIAMOND_ARROW].id = CRAFT.DIAMOND_ARROW;\r\n    this.craft_buttons[CRAFT.DIAMOND_SHIELD] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_DIAMOND_SHIELD], 3);\r\n    this.craft_buttons[CRAFT.DIAMOND_SHIELD].id = CRAFT.DIAMOND_SHIELD;\r\n    this.craft_buttons[CRAFT.AMETHYST_BOW] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_AMETHYST_BOW], 3);\r\n    this.craft_buttons[CRAFT.AMETHYST_BOW].id = CRAFT.AMETHYST_BOW;\r\n    this.craft_buttons[CRAFT.AMETHYST_ARROW] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_AMETHYST_ARROW], 3);\r\n    this.craft_buttons[CRAFT.AMETHYST_ARROW].id = CRAFT.AMETHYST_ARROW;\r\n    this.craft_buttons[CRAFT.AMETHYST_SHIELD] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_AMETHYST_SHIELD], 3);\r\n    this.craft_buttons[CRAFT.AMETHYST_SHIELD].id = CRAFT.AMETHYST_SHIELD;\r\n    this.craft_buttons[CRAFT.REIDITE_BOW] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_REIDITE_BOW], 3);\r\n    this.craft_buttons[CRAFT.REIDITE_BOW].id = CRAFT.REIDITE_BOW;\r\n    this.craft_buttons[CRAFT.REIDITE_ARROW] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_REIDITE_ARROW], 3);\r\n    this.craft_buttons[CRAFT.REIDITE_ARROW].id = CRAFT.REIDITE_ARROW;\r\n    this.craft_buttons[CRAFT.REIDITE_SHIELD] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_REIDITE_SHIELD], 3);\r\n    this.craft_buttons[CRAFT.REIDITE_SHIELD].id = CRAFT.REIDITE_SHIELD;\r\n    this.craft_buttons[CRAFT.DRAGON_BOW] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_DRAGON_BOW], 3);\r\n    this.craft_buttons[CRAFT.DRAGON_BOW].id = CRAFT.DRAGON_BOW;\r\n    this.craft_buttons[CRAFT.DRAGON_ARROW] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_DRAGON_ARROW], 3);\r\n    this.craft_buttons[CRAFT.DRAGON_ARROW].id = CRAFT.DRAGON_ARROW;\r\n    this.craft_buttons[CRAFT.WOOD_HELMET] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_WOOD_HELMET], 3);\r\n    this.craft_buttons[CRAFT.WOOD_HELMET].id = CRAFT.WOOD_HELMET;\r\n    this.craft_buttons[CRAFT.STONE_HELMET] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_STONE_HELMET], 3);\r\n    this.craft_buttons[CRAFT.STONE_HELMET].id = CRAFT.STONE_HELMET;\r\n    this.craft_buttons[CRAFT.GOLD_HELMET] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_GOLD_HELMET], 3);\r\n    this.craft_buttons[CRAFT.GOLD_HELMET].id = CRAFT.GOLD_HELMET;\r\n    this.craft_buttons[CRAFT.DIAMOND_HELMET] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_DIAMOND_HELMET], 3);\r\n    this.craft_buttons[CRAFT.DIAMOND_HELMET].id = CRAFT.DIAMOND_HELMET;\r\n    this.craft_buttons[CRAFT.BOOK] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_BOOK], 3);\r\n    this.craft_buttons[CRAFT.BOOK].id = CRAFT.BOOK;\r\n    this.craft_buttons[CRAFT.PAPER] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_PAPER], 3);\r\n    this.craft_buttons[CRAFT.PAPER].id = CRAFT.PAPER;\r\n    this.craft_buttons[CRAFT.BAG] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_BAG], 3);\r\n    this.craft_buttons[CRAFT.BAG].id = CRAFT.BAG;\r\n    this.craft_buttons[CRAFT.SWORD_AMETHYST] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_SWORD_AMETHYST], 3);\r\n    this.craft_buttons[CRAFT.SWORD_AMETHYST].id = CRAFT.SWORD_AMETHYST;\r\n    this.craft_buttons[CRAFT.PIRATE_SWORD] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_PIRATE_SWORD], 3);\r\n    this.craft_buttons[CRAFT.PIRATE_SWORD].id = CRAFT.PIRATE_SWORD;\r\n    this.craft_buttons[CRAFT.PICK_AMETHYST] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_PICK_AMETHYST], 3);\r\n    this.craft_buttons[CRAFT.PICK_AMETHYST].id = CRAFT.PICK_AMETHYST;\r\n    this.craft_buttons[CRAFT.PICK_REIDITE] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_PICK_REIDITE], 3);\r\n    this.craft_buttons[CRAFT.PICK_REIDITE].id = CRAFT.PICK_REIDITE;\r\n    this.craft_buttons[CRAFT.AMETHYST_SPEAR] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_AMETHYST_SPEAR], 3);\r\n    this.craft_buttons[CRAFT.AMETHYST_SPEAR].id = CRAFT.AMETHYST_SPEAR;\r\n    this.craft_buttons[CRAFT.HAMMER] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_HAMMER], 3);\r\n    this.craft_buttons[CRAFT.HAMMER].id = CRAFT.HAMMER;\r\n    this.craft_buttons[CRAFT.HAMMER_GOLD] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_HAMMER_GOLD], 3);\r\n    this.craft_buttons[CRAFT.HAMMER_GOLD].id = CRAFT.HAMMER_GOLD;\r\n    this.craft_buttons[CRAFT.HAMMER_DIAMOND] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_HAMMER_DIAMOND], 3);\r\n    this.craft_buttons[CRAFT.HAMMER_DIAMOND].id = CRAFT.HAMMER_DIAMOND;\r\n    this.craft_buttons[CRAFT.HAMMER_AMETHYST] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_HAMMER_AMETHYST], 3);\r\n    this.craft_buttons[CRAFT.HAMMER_AMETHYST].id = CRAFT.HAMMER_AMETHYST;\r\n    this.craft_buttons[CRAFT.HAMMER_REIDITE] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_HAMMER_REIDITE], 3);\r\n    this.craft_buttons[CRAFT.HAMMER_REIDITE].id = CRAFT.HAMMER_REIDITE;\r\n    this.craft_buttons[CRAFT.AMETHYST_WALL] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_AMETHYST_WALL], 3);\r\n    this.craft_buttons[CRAFT.AMETHYST_WALL].id = CRAFT.AMETHYST_WALL;\r\n    this.craft_buttons[CRAFT.AMETHYST_SPIKE] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_AMETHYST_SPIKE], 3);\r\n    this.craft_buttons[CRAFT.AMETHYST_SPIKE].id = CRAFT.AMETHYST_SPIKE;\r\n    this.craft_buttons[CRAFT.AMETHYST_DOOR] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_DOOR_AMETHYST_CLOSE], 3);\r\n    this.craft_buttons[CRAFT.AMETHYST_DOOR].id = CRAFT.AMETHYST_DOOR;\r\n    this.craft_buttons[CRAFT.CAP_SCARF] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_CAP_SCARF], 3);\r\n    this.craft_buttons[CRAFT.CAP_SCARF].id = CRAFT.CAP_SCARF;\r\n    this.craft_buttons[CRAFT.BLUE_CORD] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_BLUE_CORD], 3);\r\n    this.craft_buttons[CRAFT.BLUE_CORD].id = CRAFT.BLUE_CORD;\r\n    this.craft_buttons[CRAFT.LOCK] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_LOCK], 3);\r\n    this.craft_buttons[CRAFT.LOCK].id = CRAFT.LOCK;\r\n    this.craft_buttons[CRAFT.RESURRECTION] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_RESURRECTION], 3);\r\n    this.craft_buttons[CRAFT.RESURRECTION].id = CRAFT.RESURRECTION;\r\n    this.craft_buttons[CRAFT.LOCKPICK] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_LOCKPICK], 3);\r\n    this.craft_buttons[CRAFT.LOCKPICK].id = CRAFT.LOCKPICK;\r\n    this.craft_buttons[CRAFT.TOTEM] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_TOTEM], 3);\r\n    this.craft_buttons[CRAFT.TOTEM].id = CRAFT.TOTEM;\r\n    this.craft_buttons[CRAFT.AMETHYST_HELMET] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_AMETHYST_HELMET], 3);\r\n    this.craft_buttons[CRAFT.AMETHYST_HELMET].id = CRAFT.AMETHYST_HELMET;\r\n    this.craft_buttons[CRAFT.SUPER_HAMMER] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_SUPER_HAMMER], 3);\r\n    this.craft_buttons[CRAFT.SUPER_HAMMER].id = CRAFT.SUPER_HAMMER;\r\n    this.craft_buttons[CRAFT.BRIDGE] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_BRIDGE], 3);\r\n    this.craft_buttons[CRAFT.BRIDGE].id = CRAFT.BRIDGE;\r\n    this.craft_buttons[CRAFT.WOOD_TOWER] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_WOOD_TOWER], 3);\r\n    this.craft_buttons[CRAFT.WOOD_TOWER].id = CRAFT.WOOD_TOWER;\r\n    this.craft_buttons[CRAFT.BOAT] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_BOAT], 3);\r\n    this.craft_buttons[CRAFT.BOAT].id = CRAFT.BOAT;\r\n    this.craft_buttons[CRAFT.SLED] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_SLED], 3);\r\n    this.craft_buttons[CRAFT.SLED].id = CRAFT.SLED;\r\n    this.craft_buttons[CRAFT.PLANE] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_PLANE], 3);\r\n    this.craft_buttons[CRAFT.PLANE].id = CRAFT.PLANE;\r\n    this.craft_buttons[CRAFT.SADDLE] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_SADDLE], 3);\r\n    this.craft_buttons[CRAFT.SADDLE].id = CRAFT.SADDLE;\r\n    this.craft_buttons[CRAFT.MOUNT_BOAR] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_MOUNT_BOAR], 3);\r\n    this.craft_buttons[CRAFT.MOUNT_BOAR].id = CRAFT.MOUNT_BOAR;\r\n    this.craft_buttons[CRAFT.BABY_DRAGON] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_BABY_DRAGON], 3);\r\n    this.craft_buttons[CRAFT.BABY_DRAGON].id = CRAFT.BABY_DRAGON;\r\n    this.craft_buttons[CRAFT.BABY_MAMMOTH] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_BABY_MAMMOTH], 3);\r\n    this.craft_buttons[CRAFT.BABY_MAMMOTH].id = CRAFT.BABY_MAMMOTH;\r\n    this.craft_buttons[CRAFT.CRAB_BOSS] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_CRAB_BOSS], 3);\r\n    this.craft_buttons[CRAFT.CRAB_BOSS].id = CRAFT.CRAB_BOSS;\r\n    this.craft_buttons[CRAFT.BOTTLE_EMPTY] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_BOTTLE_EMPTY], 3);\r\n    this.craft_buttons[CRAFT.BOTTLE_EMPTY].id = CRAFT.BOTTLE_EMPTY;\r\n    this.craft_buttons[CRAFT.BOTTLE_FULL] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_BOTTLE_FULL], 3);\r\n    this.craft_buttons[CRAFT.BOTTLE_FULL].id = CRAFT.BOTTLE_FULL;\r\n    this.craft_buttons[CRAFT.BOTTLE_FULL_2] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_BOTTLE_FULL], 3);\r\n    this.craft_buttons[CRAFT.BOTTLE_FULL_2].id = CRAFT.BOTTLE_FULL_2;\r\n    this.craft_buttons[CRAFT.BOTTLE_FULL_3] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_BOTTLE_FULL], 3);\r\n    this.craft_buttons[CRAFT.BOTTLE_FULL_3].id = CRAFT.BOTTLE_FULL_3;\r\n    this.craft_buttons[CRAFT.SHOVEL] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_SHOVEL], 3);\r\n    this.craft_buttons[CRAFT.SHOVEL].id = CRAFT.SHOVEL;\r\n    this.craft_buttons[CRAFT.SHOVEL_GOLD] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_SHOVEL_GOLD], 3);\r\n    this.craft_buttons[CRAFT.SHOVEL_GOLD].id = CRAFT.SHOVEL_GOLD;\r\n    this.craft_buttons[CRAFT.SHOVEL_DIAMOND] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_SHOVEL_DIAMOND], 3);\r\n    this.craft_buttons[CRAFT.SHOVEL_DIAMOND].id = CRAFT.SHOVEL_DIAMOND;\r\n    this.craft_buttons[CRAFT.SHOVEL_AMETHYST] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_SHOVEL_AMETHYST], 3);\r\n    this.craft_buttons[CRAFT.SHOVEL_AMETHYST].id = CRAFT.SHOVEL_AMETHYST;\r\n    this.craft_buttons[CRAFT.SPANNER] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_SPANNER], 3);\r\n    this.craft_buttons[CRAFT.SPANNER].id = CRAFT.SPANNER;\r\n    this.craft_buttons[CRAFT.WATERING_CAN] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_WATERING_CAN], 3);\r\n    this.craft_buttons[CRAFT.WATERING_CAN].id = CRAFT.WATERING_CAN;\r\n    this.craft_buttons[CRAFT.WHEAT_SEED] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_WHEAT_SEED], 3);\r\n    this.craft_buttons[CRAFT.WHEAT_SEED].id = CRAFT.WHEAT_SEED;\r\n    this.craft_buttons[CRAFT.COOKIE] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_COOKIE], 3);\r\n    this.craft_buttons[CRAFT.COOKIE].id = CRAFT.COOKIE;\r\n    this.craft_buttons[CRAFT.WINDMILL] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_WINDMILL], 3);\r\n    this.craft_buttons[CRAFT.WINDMILL].id = CRAFT.WINDMILL;\r\n    this.craft_buttons[CRAFT.SUPER_DIVING_SUIT] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_SUPER_DIVING_SUIT], 3);\r\n    this.craft_buttons[CRAFT.SUPER_DIVING_SUIT].id = CRAFT.SUPER_DIVING_SUIT;\r\n    this.craft_buttons[CRAFT.DIVING_MASK] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_DIVING_MASK], 3);\r\n    this.craft_buttons[CRAFT.DIVING_MASK].id = CRAFT.DIVING_MASK;\r\n    this.craft_buttons[CRAFT.WATERING_CAN_FULL] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_WATERING_CAN_FULL], 3);\r\n    this.craft_buttons[CRAFT.WATERING_CAN_FULL].id = CRAFT.WATERING_CAN_FULL;\r\n    this.craft_buttons[CRAFT.CAKE] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_CAKE], 3);\r\n    this.craft_buttons[CRAFT.CAKE].id = CRAFT.CAKE;\r\n    this.craft_buttons[CRAFT.BREAD] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_BREAD], 3);\r\n    this.craft_buttons[CRAFT.BREAD].id = CRAFT.BREAD;\r\n    this.craft_buttons[CRAFT.FOODFISH_COOKED] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_FOODFISH_COOKED], 3);\r\n    this.craft_buttons[CRAFT.FOODFISH_COOKED].id = CRAFT.FOODFISH_COOKED;\r\n    this.craft_buttons[CRAFT.PLOT] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_PLOT], 3);\r\n    this.craft_buttons[CRAFT.PLOT].id = CRAFT.PLOT;\r\n    this.craft_buttons[CRAFT.BREAD_OVEN] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_BREAD_OVEN], 3);\r\n    this.craft_buttons[CRAFT.BREAD_OVEN].id = CRAFT.BREAD_OVEN;\r\n    this.craft_buttons[CRAFT.SANDWICH] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_SANDWICH], 3);\r\n    this.craft_buttons[CRAFT.SANDWICH].id = CRAFT.SANDWICH;\r\n    this.craft_buttons[CRAFT.DRAGON_HELMET] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_DRAGON_HELMET], 3);\r\n    this.craft_buttons[CRAFT.DRAGON_HELMET].id = CRAFT.DRAGON_HELMET;\r\n    this.craft_buttons[CRAFT.DRAGON_SWORD] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_DRAGON_SWORD], 3);\r\n    this.craft_buttons[CRAFT.DRAGON_SWORD].id = CRAFT.DRAGON_SWORD;\r\n    this.craft_buttons[CRAFT.CROWN_GREEN] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_CROWN_GREEN], 3);\r\n    this.craft_buttons[CRAFT.CROWN_GREEN].id = CRAFT.CROWN_GREEN;\r\n    this.craft_buttons[CRAFT.CROWN_ORANGE] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_CROWN_ORANGE], 3);\r\n    this.craft_buttons[CRAFT.CROWN_ORANGE].id = CRAFT.CROWN_ORANGE;\r\n    this.craft_buttons[CRAFT.CROWN_BLUE] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_CROWN_BLUE], 3);\r\n    this.craft_buttons[CRAFT.CROWN_BLUE].id = CRAFT.CROWN_BLUE;\r\n    this.craft_buttons[CRAFT.HOOD] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_HOOD], 3);\r\n    this.craft_buttons[CRAFT.HOOD].id = CRAFT.HOOD;\r\n    this.craft_buttons[CRAFT.PEASANT] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_PEASANT], 3);\r\n    this.craft_buttons[CRAFT.PEASANT].id = CRAFT.PEASANT;\r\n    this.craft_buttons[CRAFT.WINTER_PEASANT] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_WINTER_PEASANT], 3);\r\n    this.craft_buttons[CRAFT.WINTER_PEASANT].id = CRAFT.WINTER_PEASANT;\r\n    this.craft_buttons[CRAFT.WINTER_HOOD] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_WINTER_HOOD], 3);\r\n    this.craft_buttons[CRAFT.WINTER_HOOD].id = CRAFT.WINTER_HOOD;\r\n    this.craft_buttons[CRAFT.BUCKET_FULL] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_BUCKET_FULL], 3);\r\n    this.craft_buttons[CRAFT.BUCKET_FULL].id = CRAFT.BUCKET_FULL;\r\n    this.craft_buttons[CRAFT.BUCKET_EMPTY] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_BUCKET_EMPTY], 3);\r\n    this.craft_buttons[CRAFT.BUCKET_EMPTY].id = CRAFT.BUCKET_EMPTY;\r\n    this.craft_buttons[CRAFT.WELL] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_WELL], 3);\r\n    this.craft_buttons[CRAFT.WELL].id = CRAFT.WELL;\r\n    this.craft_buttons[CRAFT.SIGN] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_SIGN], 3);\r\n    this.craft_buttons[CRAFT.SIGN].id = CRAFT.SIGN;\r\n    this.craft_buttons[CRAFT.PUMPKIN_SEED] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_PUMPKIN_SEED], 3);\r\n    this.craft_buttons[CRAFT.PUMPKIN_SEED].id = CRAFT.PUMPKIN_SEED;\r\n    this.craft_buttons[CRAFT.GARLIC_SEED] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_GARLIC_SEED], 3);\r\n    this.craft_buttons[CRAFT.GARLIC_SEED].id = CRAFT.GARLIC_SEED;\r\n    this.craft_buttons[CRAFT.ROOF] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_ROOF], 3);\r\n    this.craft_buttons[CRAFT.ROOF].id = CRAFT.ROOF;\r\n    this.craft_buttons[CRAFT.THORNBUSH_SEED] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_THORNBUSH_SEED], 3);\r\n    this.craft_buttons[CRAFT.THORNBUSH_SEED].id = CRAFT.THORNBUSH_SEED;\r\n    this.craft_buttons[CRAFT.TOMATO_SEED] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_TOMATO_SEED], 3);\r\n    this.craft_buttons[CRAFT.TOMATO_SEED].id = CRAFT.TOMATO_SEED;\r\n    this.craft_buttons[CRAFT.CARROT_SEED] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_CARROT_SEED], 3);\r\n    this.craft_buttons[CRAFT.CARROT_SEED].id = CRAFT.CARROT_SEED;\r\n    this.craft_buttons[CRAFT.WATERMELON_SEED] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_WATERMELON_SEED], 3);\r\n    this.craft_buttons[CRAFT.WATERMELON_SEED].id = CRAFT.WATERMELON_SEED;\r\n    this.craft_buttons[CRAFT.ALOE_VERA_SEED] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_ALOE_VERA_SEED], 3);\r\n    this.craft_buttons[CRAFT.ALOE_VERA_SEED].id = CRAFT.ALOE_VERA_SEED;\r\n    this.craft_buttons[CRAFT.WOOD_SPEAR] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_WOOD_SPEAR], 3);\r\n    this.craft_buttons[CRAFT.WOOD_SPEAR].id = CRAFT.WOOD_SPEAR;\r\n    this.craft_buttons[CRAFT.DRAGON_SPEAR] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_DRAGON_SPEAR], 3);\r\n    this.craft_buttons[CRAFT.DRAGON_SPEAR].id = CRAFT.DRAGON_SPEAR;\r\n    this.craft_buttons[CRAFT.CRAB_SPEAR] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_CRAB_SPEAR], 3);\r\n    this.craft_buttons[CRAFT.CRAB_SPEAR].id = CRAFT.CRAB_SPEAR;\r\n    this.craft_buttons[CRAFT.BED] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_BED], 3);\r\n    this.craft_buttons[CRAFT.BED].id = CRAFT.BED;\r\n    this.craft_buttons[CRAFT.CROWN_CRAB] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_CROWN_CRAB], 3);\r\n    this.craft_buttons[CRAFT.CROWN_CRAB].id = CRAFT.CROWN_CRAB;\r\n    this.chest_buttons[INV.PITCHFORK] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_PITCHFORK], 3);\r\n    this.chest_buttons[INV.PITCHFORK].id = INV.PITCHFORK;\r\n    this.inv_buttons[INV.PITCHFORK] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_PITCHFORK], 3);\r\n    this.inv_buttons[INV.PITCHFORK].id = INV.PITCHFORK;\r\n    this.craft_buttons[CRAFT.PITCHFORK] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_PITCHFORK], 3);\r\n    this.craft_buttons[CRAFT.PITCHFORK].id = CRAFT.PITCHFORK;\r\n    this.chest_buttons[INV.PITCHFORK2] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_PITCHFORK2], 3);\r\n    this.chest_buttons[INV.PITCHFORK2].id = INV.PITCHFORK2;\r\n    this.inv_buttons[INV.PITCHFORK2] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_PITCHFORK2], 3);\r\n    this.inv_buttons[INV.PITCHFORK2].id = INV.PITCHFORK2;\r\n    this.craft_buttons[CRAFT.PITCHFORK2] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_PITCHFORK2], 3);\r\n    this.craft_buttons[CRAFT.PITCHFORK2].id = CRAFT.PITCHFORK2;\r\n    this.chest_buttons[INV.MACHETE] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_MACHETE], 3);\r\n    this.chest_buttons[INV.MACHETE].id = INV.MACHETE;\r\n    this.inv_buttons[INV.MACHETE] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_MACHETE], 3);\r\n    this.inv_buttons[INV.MACHETE].id = INV.MACHETE;\r\n    this.craft_buttons[CRAFT.MACHETE] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_MACHETE], 3);\r\n    this.craft_buttons[CRAFT.MACHETE].id = CRAFT.MACHETE;\r\n    this.chest_buttons[INV.PILOT_HELMET] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_PILOT_HELMET], 3);\r\n    this.chest_buttons[INV.PILOT_HELMET].id = INV.PILOT_HELMET;\r\n    this.inv_buttons[INV.PILOT_HELMET] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_PILOT_HELMET], 3);\r\n    this.inv_buttons[INV.PILOT_HELMET].id = INV.PILOT_HELMET;\r\n    this.craft_buttons[CRAFT.PILOT_HELMET] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_PILOT_HELMET], 3);\r\n    this.craft_buttons[CRAFT.PILOT_HELMET].id = CRAFT.PILOT_HELMET;\r\n    this.chest_buttons[INV.PITCHFORK_PART] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_PITCHFORK_PART], 3);\r\n    this.chest_buttons[INV.PITCHFORK_PART].id = INV.PITCHFORK_PART;\r\n    this.inv_buttons[INV.PITCHFORK_PART] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_PITCHFORK_PART], 3);\r\n    this.inv_buttons[INV.PITCHFORK_PART].id = INV.PITCHFORK_PART;\r\n    this.chest_buttons[INV.SANDWORM_JUICE] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_SANDWORM_JUICE], 3);\r\n    this.chest_buttons[INV.SANDWORM_JUICE].id = INV.SANDWORM_JUICE;\r\n    this.inv_buttons[INV.SANDWORM_JUICE] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_SANDWORM_JUICE], 3);\r\n    this.inv_buttons[INV.SANDWORM_JUICE].id = INV.SANDWORM_JUICE;\r\n    this.chest_buttons[INV.PILOT_GLASSES] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_PILOT_GLASSES], 3);\r\n    this.chest_buttons[INV.PILOT_GLASSES].id = INV.PILOT_GLASSES;\r\n    this.inv_buttons[INV.PILOT_GLASSES] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_PILOT_GLASSES], 3);\r\n    this.inv_buttons[INV.PILOT_GLASSES].id = INV.PILOT_GLASSES;\r\n    this.chest_buttons[INV.EMERALD_MACHINE] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_EMERALD_MACHINE], 3);\r\n    this.chest_buttons[INV.EMERALD_MACHINE].id = INV.EMERALD_MACHINE;\r\n    this.inv_buttons[INV.EMERALD_MACHINE] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_EMERALD_MACHINE], 3);\r\n    this.inv_buttons[INV.EMERALD_MACHINE].id = INV.EMERALD_MACHINE;\r\n    this.craft_buttons[CRAFT.EMERALD_MACHINE] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_EMERALD_MACHINE], 3);\r\n    this.craft_buttons[CRAFT.EMERALD_MACHINE].id = CRAFT.EMERALD_MACHINE;\r\n    this.chest_buttons[INV.WOOD_DOOR_SPIKE] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_WOOD_DOOR_SPIKE], 3);\r\n    this.chest_buttons[INV.WOOD_DOOR_SPIKE].id = INV.WOOD_DOOR_SPIKE;\r\n    this.inv_buttons[INV.WOOD_DOOR_SPIKE] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_WOOD_DOOR_SPIKE], 3);\r\n    this.inv_buttons[INV.WOOD_DOOR_SPIKE].id = INV.WOOD_DOOR_SPIKE;\r\n    this.craft_buttons[CRAFT.WOOD_DOOR_SPIKE] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_WOOD_DOOR_SPIKE], 3);\r\n    this.craft_buttons[CRAFT.WOOD_DOOR_SPIKE].id = CRAFT.WOOD_DOOR_SPIKE;\r\n    this.chest_buttons[INV.STONE_DOOR_SPIKE] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_STONE_DOOR_SPIKE], 3);\r\n    this.chest_buttons[INV.STONE_DOOR_SPIKE].id = INV.STONE_DOOR_SPIKE;\r\n    this.inv_buttons[INV.STONE_DOOR_SPIKE] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_STONE_DOOR_SPIKE], 3);\r\n    this.inv_buttons[INV.STONE_DOOR_SPIKE].id = INV.STONE_DOOR_SPIKE;\r\n    this.craft_buttons[CRAFT.STONE_DOOR_SPIKE] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_STONE_DOOR_SPIKE], 3);\r\n    this.craft_buttons[CRAFT.STONE_DOOR_SPIKE].id = CRAFT.STONE_DOOR_SPIKE;\r\n    this.chest_buttons[INV.GOLD_DOOR_SPIKE] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_GOLD_DOOR_SPIKE], 3);\r\n    this.chest_buttons[INV.GOLD_DOOR_SPIKE].id = INV.GOLD_DOOR_SPIKE;\r\n    this.inv_buttons[INV.GOLD_DOOR_SPIKE] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_GOLD_DOOR_SPIKE], 3);\r\n    this.inv_buttons[INV.GOLD_DOOR_SPIKE].id = INV.GOLD_DOOR_SPIKE;\r\n    this.craft_buttons[CRAFT.GOLD_DOOR_SPIKE] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_GOLD_DOOR_SPIKE], 3);\r\n    this.craft_buttons[CRAFT.GOLD_DOOR_SPIKE].id = CRAFT.GOLD_DOOR_SPIKE;\r\n    this.chest_buttons[INV.DIAMOND_DOOR_SPIKE] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_DIAMOND_DOOR_SPIKE], 3);\r\n    this.chest_buttons[INV.DIAMOND_DOOR_SPIKE].id = INV.DIAMOND_DOOR_SPIKE;\r\n    this.inv_buttons[INV.DIAMOND_DOOR_SPIKE] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_DIAMOND_DOOR_SPIKE], 3);\r\n    this.inv_buttons[INV.DIAMOND_DOOR_SPIKE].id = INV.DIAMOND_DOOR_SPIKE;\r\n    this.craft_buttons[CRAFT.DIAMOND_DOOR_SPIKE] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_DIAMOND_DOOR_SPIKE], 3);\r\n    this.craft_buttons[CRAFT.DIAMOND_DOOR_SPIKE].id = CRAFT.DIAMOND_DOOR_SPIKE;\r\n    this.chest_buttons[INV.AMETHYST_DOOR_SPIKE] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_AMETHYST_DOOR_SPIKE], 3);\r\n    this.chest_buttons[INV.AMETHYST_DOOR_SPIKE].id = INV.AMETHYST_DOOR_SPIKE;\r\n    this.inv_buttons[INV.AMETHYST_DOOR_SPIKE] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_AMETHYST_DOOR_SPIKE], 3);\r\n    this.inv_buttons[INV.AMETHYST_DOOR_SPIKE].id = INV.AMETHYST_DOOR_SPIKE;\r\n    this.craft_buttons[CRAFT.AMETHYST_DOOR_SPIKE] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_AMETHYST_DOOR_SPIKE], 3);\r\n    this.craft_buttons[CRAFT.AMETHYST_DOOR_SPIKE].id = CRAFT.AMETHYST_DOOR_SPIKE;\r\n    this.chest_buttons[INV.REIDITE_DOOR_SPIKE] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_REIDITE_DOOR_SPIKE], 3);\r\n    this.chest_buttons[INV.REIDITE_DOOR_SPIKE].id = INV.REIDITE_DOOR_SPIKE;\r\n    this.inv_buttons[INV.REIDITE_DOOR_SPIKE] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_REIDITE_DOOR_SPIKE], 3);\r\n    this.inv_buttons[INV.REIDITE_DOOR_SPIKE].id = INV.REIDITE_DOOR_SPIKE;\r\n    this.craft_buttons[CRAFT.REIDITE_DOOR_SPIKE] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_REIDITE_DOOR_SPIKE], 3);\r\n    this.craft_buttons[CRAFT.REIDITE_DOOR_SPIKE].id = CRAFT.REIDITE_DOOR_SPIKE;\r\n    this.chest_buttons[INV.REIDITE_WALL] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_REIDITE_WALL], 3);\r\n    this.chest_buttons[INV.REIDITE_WALL].id = INV.REIDITE_WALL;\r\n    this.inv_buttons[INV.REIDITE_WALL] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_REIDITE_WALL], 3);\r\n    this.inv_buttons[INV.REIDITE_WALL].id = INV.REIDITE_WALL;\r\n    this.craft_buttons[CRAFT.REIDITE_WALL] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_REIDITE_WALL], 3);\r\n    this.craft_buttons[CRAFT.REIDITE_WALL].id = CRAFT.REIDITE_WALL;\r\n    this.chest_buttons[INV.REIDITE_SPIKE] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_REIDITE_SPIKE], 3);\r\n    this.chest_buttons[INV.REIDITE_SPIKE].id = INV.REIDITE_SPIKE;\r\n    this.inv_buttons[INV.REIDITE_SPIKE] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_REIDITE_SPIKE], 3);\r\n    this.inv_buttons[INV.REIDITE_SPIKE].id = INV.REIDITE_SPIKE;\r\n    this.craft_buttons[CRAFT.REIDITE_SPIKE] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_REIDITE_SPIKE], 3);\r\n    this.craft_buttons[CRAFT.REIDITE_SPIKE].id = CRAFT.REIDITE_SPIKE;\r\n    this.chest_buttons[INV.REIDITE_DOOR] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_REIDITE_DOOR], 3);\r\n    this.chest_buttons[INV.REIDITE_DOOR].id = INV.REIDITE_DOOR;\r\n    this.inv_buttons[INV.REIDITE_DOOR] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_REIDITE_DOOR], 3);\r\n    this.inv_buttons[INV.REIDITE_DOOR].id = INV.REIDITE_DOOR;\r\n    this.craft_buttons[CRAFT.REIDITE_DOOR] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_REIDITE_DOOR], 3);\r\n    this.craft_buttons[CRAFT.REIDITE_DOOR].id = CRAFT.REIDITE_DOOR;\r\n    this.chest_buttons[INV.EXTRACTOR_MACHINE_STONE] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_EXTRACTOR_MACHINE_STONE], 3);\r\n    this.chest_buttons[INV.EXTRACTOR_MACHINE_STONE].id = INV.EXTRACTOR_MACHINE_STONE;\r\n    this.inv_buttons[INV.EXTRACTOR_MACHINE_STONE] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_EXTRACTOR_MACHINE_STONE], 3);\r\n    this.inv_buttons[INV.EXTRACTOR_MACHINE_STONE].id = INV.EXTRACTOR_MACHINE_STONE;\r\n    this.craft_buttons[CRAFT.EXTRACTOR_MACHINE_STONE] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_EXTRACTOR_MACHINE_STONE], 3);\r\n    this.craft_buttons[CRAFT.EXTRACTOR_MACHINE_STONE].id = CRAFT.EXTRACTOR_MACHINE_STONE;\r\n    this.chest_buttons[INV.EXTRACTOR_MACHINE_GOLD] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_EXTRACTOR_MACHINE_GOLD], 3);\r\n    this.chest_buttons[INV.EXTRACTOR_MACHINE_GOLD].id = INV.EXTRACTOR_MACHINE_GOLD;\r\n    this.inv_buttons[INV.EXTRACTOR_MACHINE_GOLD] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_EXTRACTOR_MACHINE_GOLD], 3);\r\n    this.inv_buttons[INV.EXTRACTOR_MACHINE_GOLD].id = INV.EXTRACTOR_MACHINE_GOLD;\r\n    this.craft_buttons[CRAFT.EXTRACTOR_MACHINE_GOLD] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_EXTRACTOR_MACHINE_GOLD], 3);\r\n    this.craft_buttons[CRAFT.EXTRACTOR_MACHINE_GOLD].id = CRAFT.EXTRACTOR_MACHINE_GOLD;\r\n    this.chest_buttons[INV.EXTRACTOR_MACHINE_DIAMOND] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_EXTRACTOR_MACHINE_DIAMOND], 3);\r\n    this.chest_buttons[INV.EXTRACTOR_MACHINE_DIAMOND].id = INV.EXTRACTOR_MACHINE_DIAMOND;\r\n    this.inv_buttons[INV.EXTRACTOR_MACHINE_DIAMOND] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_EXTRACTOR_MACHINE_DIAMOND], 3);\r\n    this.inv_buttons[INV.EXTRACTOR_MACHINE_DIAMOND].id = INV.EXTRACTOR_MACHINE_DIAMOND;\r\n    this.craft_buttons[CRAFT.EXTRACTOR_MACHINE_DIAMOND] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_EXTRACTOR_MACHINE_DIAMOND], 3);\r\n    this.craft_buttons[CRAFT.EXTRACTOR_MACHINE_DIAMOND].id = CRAFT.EXTRACTOR_MACHINE_DIAMOND;\r\n    this.chest_buttons[INV.EXTRACTOR_MACHINE_AMETHYST] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_EXTRACTOR_MACHINE_AMETHYST], 3);\r\n    this.chest_buttons[INV.EXTRACTOR_MACHINE_AMETHYST].id = INV.EXTRACTOR_MACHINE_AMETHYST;\r\n    this.inv_buttons[INV.EXTRACTOR_MACHINE_AMETHYST] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_EXTRACTOR_MACHINE_AMETHYST], 3);\r\n    this.inv_buttons[INV.EXTRACTOR_MACHINE_AMETHYST].id = INV.EXTRACTOR_MACHINE_AMETHYST;\r\n    this.craft_buttons[CRAFT.EXTRACTOR_MACHINE_AMETHYST] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_EXTRACTOR_MACHINE_AMETHYST], 3);\r\n    this.craft_buttons[CRAFT.EXTRACTOR_MACHINE_AMETHYST].id = CRAFT.EXTRACTOR_MACHINE_AMETHYST;\r\n    this.chest_buttons[INV.EXTRACTOR_MACHINE_REIDITE] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_EXTRACTOR_MACHINE_REIDITE], 3);\r\n    this.chest_buttons[INV.EXTRACTOR_MACHINE_REIDITE].id = INV.EXTRACTOR_MACHINE_REIDITE;\r\n    this.inv_buttons[INV.EXTRACTOR_MACHINE_REIDITE] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_EXTRACTOR_MACHINE_REIDITE], 3);\r\n    this.inv_buttons[INV.EXTRACTOR_MACHINE_REIDITE].id = INV.EXTRACTOR_MACHINE_REIDITE;\r\n    this.craft_buttons[CRAFT.EXTRACTOR_MACHINE_REIDITE] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_EXTRACTOR_MACHINE_REIDITE], 3);\r\n    this.craft_buttons[CRAFT.EXTRACTOR_MACHINE_REIDITE].id = CRAFT.EXTRACTOR_MACHINE_REIDITE;\r\n    this.chest_buttons[INV.FLAME] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_FLAME], 3);\r\n    this.chest_buttons[INV.FLAME].id = INV.FLAME;\r\n    this.inv_buttons[INV.FLAME] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_FLAME], 3);\r\n    this.inv_buttons[INV.FLAME].id = INV.FLAME;\r\n    this.inv_buttons[INV.FLAME].info.img[2] = this.inv_buttons[INV.FLAME].info.img[0];\r\n    this.chest_buttons[INV.LAVA_HEART] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_LAVA_HEART], 3);\r\n    this.chest_buttons[INV.LAVA_HEART].id = INV.LAVA_HEART;\r\n    this.inv_buttons[INV.LAVA_HEART] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_LAVA_HEART], 3);\r\n    this.inv_buttons[INV.LAVA_HEART].id = INV.LAVA_HEART;\r\n    this.inv_buttons[INV.LAVA_HEART].info.img[2] = this.inv_buttons[INV.LAVA_HEART].info.img[0];\r\n    this.chest_buttons[INV.REIDITE] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_REIDITE], 3);\r\n    this.chest_buttons[INV.REIDITE].id = INV.REIDITE;\r\n    this.inv_buttons[INV.REIDITE] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_REIDITE], 3);\r\n    this.inv_buttons[INV.REIDITE].id = INV.REIDITE;\r\n    this.inv_buttons[INV.REIDITE].info.img[2] = this.inv_buttons[INV.REIDITE].info.img[0];\r\n    this.chest_buttons[INV.REIDITE_SWORD] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_REIDITE_SWORD], 3);\r\n    this.chest_buttons[INV.REIDITE_SWORD].id = INV.REIDITE_SWORD;\r\n    this.inv_buttons[INV.REIDITE_SWORD] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_REIDITE_SWORD], 3);\r\n    this.inv_buttons[INV.REIDITE_SWORD].id = INV.REIDITE_SWORD;\r\n    this.craft_buttons[CRAFT.REIDITE_SWORD] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_REIDITE_SWORD], 3);\r\n    this.craft_buttons[CRAFT.REIDITE_SWORD].id = CRAFT.REIDITE_SWORD;\r\n    this.chest_buttons[INV.DIAMOND_PROTECTION] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_DIAMOND_PROTECTION], 3);\r\n    this.chest_buttons[INV.DIAMOND_PROTECTION].id = INV.DIAMOND_PROTECTION;\r\n    this.inv_buttons[INV.DIAMOND_PROTECTION] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_DIAMOND_PROTECTION], 3);\r\n    this.inv_buttons[INV.DIAMOND_PROTECTION].id = INV.DIAMOND_PROTECTION;\r\n    this.craft_buttons[CRAFT.DIAMOND_PROTECTION] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_DIAMOND_PROTECTION], 3);\r\n    this.craft_buttons[CRAFT.DIAMOND_PROTECTION].id = CRAFT.DIAMOND_PROTECTION;\r\n    this.chest_buttons[INV.AMETHYST_PROTECTION] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_AMETHYST_PROTECTION], 3);\r\n    this.chest_buttons[INV.AMETHYST_PROTECTION].id = INV.AMETHYST_PROTECTION;\r\n    this.inv_buttons[INV.AMETHYST_PROTECTION] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_AMETHYST_PROTECTION], 3);\r\n    this.inv_buttons[INV.AMETHYST_PROTECTION].id = INV.AMETHYST_PROTECTION;\r\n    this.craft_buttons[CRAFT.AMETHYST_PROTECTION] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_AMETHYST_PROTECTION], 3);\r\n    this.craft_buttons[CRAFT.AMETHYST_PROTECTION].id = CRAFT.AMETHYST_PROTECTION;\r\n    this.chest_buttons[INV.REIDITE_PROTECTION] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_REIDITE_PROTECTION], 3);\r\n    this.chest_buttons[INV.REIDITE_PROTECTION].id = INV.REIDITE_PROTECTION;\r\n    this.inv_buttons[INV.REIDITE_PROTECTION] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_REIDITE_PROTECTION], 3);\r\n    this.inv_buttons[INV.REIDITE_PROTECTION].id = INV.REIDITE_PROTECTION;\r\n    this.craft_buttons[CRAFT.REIDITE_PROTECTION] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_REIDITE_PROTECTION], 3);\r\n    this.craft_buttons[CRAFT.REIDITE_PROTECTION].id = CRAFT.REIDITE_PROTECTION;\r\n    this.chest_buttons[INV.LAVA_HELMET] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_LAVA_HELMET], 3);\r\n    this.chest_buttons[INV.LAVA_HELMET].id = INV.LAVA_HELMET;\r\n    this.inv_buttons[INV.LAVA_HELMET] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_LAVA_HELMET], 3);\r\n    this.inv_buttons[INV.LAVA_HELMET].id = INV.LAVA_HELMET;\r\n    this.craft_buttons[CRAFT.LAVA_HELMET] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_LAVA_HELMET], 3);\r\n    this.craft_buttons[CRAFT.LAVA_HELMET].id = CRAFT.LAVA_HELMET;\r\n    this.chest_buttons[INV.WITCH] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_WITCH], 3);\r\n    this.chest_buttons[INV.WITCH].id = INV.WITCH;\r\n    this.inv_buttons[INV.WITCH] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_WITCH], 3);\r\n    this.inv_buttons[INV.WITCH].id = INV.WITCH;\r\n    this.craft_buttons[CRAFT.WITCH] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_WITCH], 3);\r\n    this.craft_buttons[CRAFT.WITCH].id = CRAFT.WITCH;\r\n    this.chest_buttons[INV.WAND1] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_WAND1], 3);\r\n    this.chest_buttons[INV.WAND1].id = INV.WAND1;\r\n    this.inv_buttons[INV.WAND1] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_WAND1], 3);\r\n    this.inv_buttons[INV.WAND1].id = INV.WAND1;\r\n    this.craft_buttons[CRAFT.WAND1] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_WAND1], 3);\r\n    this.craft_buttons[CRAFT.WAND1].id = CRAFT.WAND1;\r\n    this.chest_buttons[INV.WAND2] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_WAND2], 3);\r\n    this.chest_buttons[INV.WAND2].id = INV.WAND2;\r\n    this.inv_buttons[INV.WAND2] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_WAND2], 3);\r\n    this.inv_buttons[INV.WAND2].id = INV.WAND2;\r\n    this.craft_buttons[CRAFT.WAND2] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_WAND2], 3);\r\n    this.craft_buttons[CRAFT.WAND2].id = CRAFT.WAND2;\r\n    this.chest_buttons[INV.NIMBUS] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_NIMBUS], 3);\r\n    this.chest_buttons[INV.NIMBUS].id = INV.NIMBUS;\r\n    this.inv_buttons[INV.NIMBUS] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_NIMBUS], 3);\r\n    this.inv_buttons[INV.NIMBUS].id = INV.NIMBUS;\r\n    this.craft_buttons[CRAFT.NIMBUS] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_NIMBUS], 3);\r\n    this.craft_buttons[CRAFT.NIMBUS].id = CRAFT.NIMBUS;\r\n    this.chest_buttons[INV.FIREFLY] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_FIREFLY], 3);\r\n    this.chest_buttons[INV.FIREFLY].id = INV.FIREFLY;\r\n    this.inv_buttons[INV.FIREFLY] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_FIREFLY], 3);\r\n    this.inv_buttons[INV.FIREFLY].id = INV.FIREFLY;\r\n    this.craft_buttons[CRAFT.FIREFLY] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_FIREFLY], 3);\r\n    this.craft_buttons[CRAFT.FIREFLY].id = CRAFT.FIREFLY;\r\n    this.chest_buttons[INV.REIDITE_SPEAR] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_REIDITE_SPEAR], 3);\r\n    this.chest_buttons[INV.REIDITE_SPEAR].id = INV.REIDITE_SPEAR;\r\n    this.inv_buttons[INV.REIDITE_SPEAR] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_REIDITE_SPEAR], 3);\r\n    this.inv_buttons[INV.REIDITE_SPEAR].id = INV.REIDITE_SPEAR;\r\n    this.craft_buttons[CRAFT.REIDITE_SPEAR] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_REIDITE_SPEAR], 3);\r\n    this.craft_buttons[CRAFT.REIDITE_SPEAR].id = CRAFT.REIDITE_SPEAR;\r\n    this.chest_buttons[INV.REIDITE_HELMET] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_REIDITE_HELMET], 3);\r\n    this.chest_buttons[INV.REIDITE_HELMET].id = INV.REIDITE_HELMET;\r\n    this.inv_buttons[INV.REIDITE_HELMET] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_REIDITE_HELMET], 3);\r\n    this.inv_buttons[INV.REIDITE_HELMET].id = INV.REIDITE_HELMET;\r\n    this.craft_buttons[CRAFT.REIDITE_HELMET] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_REIDITE_HELMET], 3);\r\n    this.craft_buttons[CRAFT.REIDITE_HELMET].id = CRAFT.REIDITE_HELMET;\r\n    this.chest_buttons[INV.LAVA_SPEAR] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_LAVA_SPEAR], 3);\r\n    this.chest_buttons[INV.LAVA_SPEAR].id = INV.LAVA_SPEAR;\r\n    this.inv_buttons[INV.LAVA_SPEAR] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_LAVA_SPEAR], 3);\r\n    this.inv_buttons[INV.LAVA_SPEAR].id = INV.LAVA_SPEAR;\r\n    this.craft_buttons[CRAFT.LAVA_SPEAR] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_LAVA_SPEAR], 3);\r\n    this.craft_buttons[CRAFT.LAVA_SPEAR].id = CRAFT.LAVA_SPEAR;\r\n    this.chest_buttons[INV.LAVA_SWORD] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_LAVA_SWORD], 3);\r\n    this.chest_buttons[INV.LAVA_SWORD].id = INV.LAVA_SWORD;\r\n    this.inv_buttons[INV.LAVA_SWORD] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_LAVA_SWORD], 3);\r\n    this.inv_buttons[INV.LAVA_SWORD].id = INV.LAVA_SWORD;\r\n    this.craft_buttons[CRAFT.LAVA_SWORD] = gui_create_button(60, 60, \"\", sprite[SPRITE.CRAFT_LAVA_SWORD], 3);\r\n    this.craft_buttons[CRAFT.LAVA_SWORD].id = CRAFT.LAVA_SWORD;\r\n    this.chest_buttons[INV.LAVA_ORB] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_LAVA_ORB], 3);\r\n    this.chest_buttons[INV.LAVA_ORB].id = INV.LAVA_ORB;\r\n    this.inv_buttons[INV.LAVA_ORB] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_LAVA_ORB], 3);\r\n    this.inv_buttons[INV.LAVA_ORB].id = INV.LAVA_ORB;\r\n    this.chest_buttons[INV.EGG0] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_EGG0], 3);\r\n    this.chest_buttons[INV.EGG0].id = INV.EGG0;\r\n    this.inv_buttons[INV.EGG0] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_EGG0], 3);\r\n    this.inv_buttons[INV.EGG0].id = INV.EGG0;\r\n    this.chest_buttons[INV.EGG1] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_EGG1], 3);\r\n    this.chest_buttons[INV.EGG1].id = INV.EGG1;\r\n    this.inv_buttons[INV.EGG1] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_EGG1], 3);\r\n    this.inv_buttons[INV.EGG1].id = INV.EGG1;\r\n    this.chest_buttons[INV.EGG2] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_EGG2], 3);\r\n    this.chest_buttons[INV.EGG2].id = INV.EGG2;\r\n    this.inv_buttons[INV.EGG2] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_EGG2], 3);\r\n    this.inv_buttons[INV.EGG2].id = INV.EGG2;\r\n    this.chest_buttons[INV.EGG3] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_EGG3], 3);\r\n    this.chest_buttons[INV.EGG3].id = INV.EGG3;\r\n    this.inv_buttons[INV.EGG3] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_EGG3], 3);\r\n    this.inv_buttons[INV.EGG3].id = INV.EGG3;\r\n    this.chest_buttons[INV.EGG4] = gui_create_button(68, 68, \"\", sprite[SPRITE.CHEST_EGG4], 3);\r\n    this.chest_buttons[INV.EGG4].id = INV.EGG4;\r\n    this.inv_buttons[INV.EGG4] = gui_create_button(60, 60, \"\", sprite[SPRITE.INV_EGG4], 3);\r\n    this.inv_buttons[INV.EGG4].id = INV.EGG4;\r\n    this.update_craft_buttons = function () {\r\n        var craft = user.craft.can_craft;\r\n        var x = 10;\r\n        var y = 10;\r\n        for (var i = 0; i < craft.length; i++) {\r\n            if (i > 0 && !(i % 4)) {\r\n                x += craft[0].info.width + 10;\r\n                y = 10;\r\n            }\r\n            craft[i].info.translate.x = x;\r\n            craft[i].info.translate.y = y;\r\n            y += 10 + craft[i].info.height;\r\n        }\r\n    };\r\n    this.update_chest_buttons = function () {\r\n        var x = Math.floor(Math.floor((3 + user.craft.can_craft.length) / 4) * (10 + this.chest_buttons[0].info.img[0].width) + 35);\r\n        for (var i = 0; i < this.chest_buttons.length; i++) {\r\n            if (!this.chest_buttons[i]) continue;\r\n            this.chest_buttons[i].info.translate.x = x;\r\n            this.chest_buttons[i].info.translate.y = 22;\r\n        }\r\n        this.chest_lockpick.info.translate.x = x + 17;\r\n        this.chest_lockpick.info.translate.y = 22 + sprite[SPRITE.CHEST_SLOT].height;\r\n        this.chest_locked.info.translate.x = x + 17;\r\n        this.chest_locked.info.translate.y = 30;\r\n        this.chest_padlock.info.translate.x = x + 17;\r\n        this.chest_padlock.info.translate.y = 22 + sprite[SPRITE.CHEST_SLOT].height;\r\n    };\r\n    this.update_team_buttons = function () {\r\n        var x = Math.floor((canw - sprite[SPRITE.TEAM_BUTTON][0].width) / 2);\r\n        for (var i = 0; i < this.team_buttons.length; i++) {\r\n            this.team_buttons[i].button.info.translate.x = x;\r\n            this.team_buttons[i].button.info.translate.y = -13;\r\n        }\r\n    };\r\n    this.update_bread_oven_button = function () {\r\n        var x = 12 + Math.floor(Math.floor((3 + user.craft.can_craft.length) / 4) * (10 + this.bread_oven_wood_button.info.img[0].width) + 35);\r\n        this.bread_oven_wood_button.info.translate.x = x;\r\n        this.bread_oven_wood_button.info.translate.y = 33;\r\n        this.bread_oven_flour_button.info.translate.x = this.bread_oven_wood_button.info.translate.x;\r\n        this.bread_oven_flour_button.info.translate.y = 137;\r\n        this.bread_oven_bread_button.info.translate.x = this.bread_oven_wood_button.info.translate.x;\r\n        this.bread_oven_bread_button.info.translate.y = 240;\r\n    };\r\n    this.update_extractor_button = function () {\r\n        var x = 12 + Math.floor(Math.floor((3 + user.craft.can_craft.length) / 4) * (10 + this.extractor_wood_button.info.img[0].width) + 35);\r\n        this.extractor_wood_button.info.translate.x = x;\r\n        this.extractor_wood_button.info.translate.y = 36;\r\n        x += 83;\r\n        this.extractor_stone_button.info.translate.x = x;\r\n        this.extractor_stone_button.info.translate.y = 36;\r\n        this.extractor_gold_button.info.translate.x = x;\r\n        this.extractor_gold_button.info.translate.y = 36;\r\n        this.extractor_diamond_button.info.translate.x = x;\r\n        this.extractor_diamond_button.info.translate.y = 36;\r\n        this.extractor_amethyst_button.info.translate.x = x;\r\n        this.extractor_amethyst_button.info.translate.y = 36;\r\n        this.extractor_reidite_button.info.translate.x = x;\r\n        this.extractor_reidite_button.info.translate.y = 36;\r\n    };\r\n    this.update_windmill_button = function () {\r\n        var x = 12 + Math.floor(Math.floor((3 + user.craft.can_craft.length) / 4) * (10 + this.windmill_wheat_button.info.img[0].width) + 35);\r\n        this.windmill_wheat_button.info.translate.x = x;\r\n        this.windmill_wheat_button.info.translate.y = 36;\r\n        x += 83;\r\n        this.windmill_flour_button.info.translate.x = x;\r\n        this.windmill_flour_button.info.translate.y = 36;\r\n    };\r\n    this.update_furnace_button = function () {\r\n        var x = Math.floor(Math.floor((3 + user.craft.can_craft.length) / 4) * (10 + this.furnace_button.info.img[0].width) + 35);\r\n        this.furnace_button.info.translate.x = x;\r\n        this.furnace_button.info.translate.y = 22;\r\n    };\r\n    this.update_inv_buttons = function () {\r\n        var inv = user.inv.can_select;\r\n        if (inv.length > 0) var center = Math.floor((canw - (inv[0].info.width + 5) * user.inv.max) / 2);\r\n        for (var i = 0; i < inv.length; i++) {\r\n            inv[i].info.translate.x = center + (inv[i].info.width + 5) * i;\r\n            inv[i].info.translate.y = canh - inv[i].info.width - 10;\r\n            this.plus_buttons[inv[i].id].info.translate.x = inv[i].info.translate.x + 13;\r\n            this.plus_buttons[inv[i].id].info.translate.y = inv[i].info.translate.y - this.plus_buttons[inv[i].id].info.img[0].height - 6;\r\n        }\r\n    };\r\n    var appear_effect_step = 0;\r\n    var appear_effect_max_step = 30;\r\n    var appear_effect = function () {\r\n        _this.update();\r\n        appear_effect_step++;\r\n        if (appear_effect_step == appear_effect_max_step) {\r\n            _this.add_event_listener();\r\n            _this.update();\r\n            return;\r\n        }\r\n        window.setTimeout(appear_effect, 33);\r\n    };\r\n    this.quit = function (fun) {\r\n        if (user.chat.open) user.chat.quit();\r\n        if (user.terminal.open) user.terminal.quit();\r\n        document.getElementById(\"team_box\").style.display = \"none\";\r\n        _this.market.style.display = \"none\";\r\n        _this.market.open = false;\r\n        _this.sign.style.display = \"none\";\r\n        _this.sign.open = false;\r\n        document.getElementById(\"shop_starterkit\").style.display = \"none\";\r\n        document.getElementById(\"home_craft\").style.display = \"none\";\r\n        document.getElementById(\"recipe_craft\").style.display = \"none\";\r\n        _this.craft_list.open = false;\r\n        document.getElementById(\"option_in_game\").style.display = \"none\";\r\n        _this.options.open = false;\r\n        document.getElementById(\"sure_delete\").style.display = \"none\";\r\n        _this.safe_delete.open = false;\r\n        document.getElementById(\"cancel_sure_delete\").style.display = \"none\";\r\n        _this.safe_cancel.open = false;\r\n        document.getElementById(\"chronoquest\").style.display = \"none\";\r\n        _this.quests.open = false;\r\n        fun_after_quit = fun;\r\n        _this.remove_event_listener();\r\n        _this.can.style.cursor = _this.cursor0;\r\n        audio.quit();\r\n        quit_effect_step = -1;\r\n        quit_effect();\r\n        refreshAds();\r\n    };\r\n    var fun_after_quit;\r\n    var quit_effect_step = -1;\r\n    var quit_effect_max_step = 30;\r\n    var quit_effect = function () {\r\n        _this.update();\r\n        quit_effect_step++;\r\n        if (quit_effect_step == quit_effect_max_step) {\r\n            _this.stop();\r\n            fun_after_quit();\r\n            return;\r\n        }\r\n        window.setTimeout(quit_effect, 33);\r\n    };\r\n    this.is_run = false;\r\n    this.stop = function () {\r\n        this.is_run = false;\r\n    };\r\n    this.run = function () {\r\n        client.change_ground();\r\n        _this.is_run = true;\r\n        quit_effect_step = -1;\r\n        appear_effect_step = 0;\r\n        appear_effect();\r\n    };\r\n    this.update = function () {\r\n        this.leaderboard.translate.x = canw - this.leaderboard.img.width - 10;\r\n        this.leaderboard.translate.y = 5;\r\n        world.clock.translate.x = this.leaderboard.translate.x - sprite[SPRITE.CLOCK][0].width - 85;\r\n        world.clock.translate.y = 10;\r\n        this.craft_list.button.info.translate.x = this.leaderboard.translate.x - sprite[SPRITE.RECIPE_BUTTON][0].width - 10;\r\n        this.craft_list.button.info.translate.y = 10;\r\n        this.quests.button.info.translate.x = this.leaderboard.translate.x - sprite[SPRITE.QUEST_BUTTON][0].width - 20;\r\n        this.quests.button.info.translate.y = this.craft_list.button.info.translate.y + sprite[SPRITE.RECIPE_BUTTON][0].height + 5;\r\n        this.options.button.info.translate.x = this.leaderboard.translate.x - sprite[SPRITE.OPTION_BUTTON][0].width - 20;\r\n        this.options.button.info.translate.y = this.quests.button.info.translate.y + sprite[SPRITE.OPTION_BUTTON][0].height + 18;\r\n        this.audio.button_on.info.translate.x = this.leaderboard.translate.x - sprite[SPRITE.OPTION_BUTTON][0].width - 20;\r\n        this.audio.button_on.info.translate.y = this.options.button.info.translate.y + sprite[SPRITE.SOUND_BUTTON_OFF][0].height;\r\n        this.audio.button_off.info.translate.x = this.leaderboard.translate.x - sprite[SPRITE.OPTION_BUTTON][0].width - 20;\r\n        this.audio.button_off.info.translate.y = this.options.button.info.translate.y + sprite[SPRITE.SOUND_BUTTON_OFF][0].height;\r\n        this.market.button.info.translate.x = this.leaderboard.translate.x - sprite[SPRITE.MARKET_BUTTON][0].width - 20;\r\n        this.market.button.info.translate.y = this.audio.button_on.info.translate.y + sprite[SPRITE.MARKET_BUTTON][0].height;\r\n        user.auto_feed.translate.x = this.leaderboard.translate.x - 63 - 85;\r\n        user.auto_feed.translate.y = 100;\r\n        user.show_spectators.translate.x = this.leaderboard.translate.x - sprite[SPRITE.SHOW_SPECTATORS].width - 85;\r\n        user.show_spectators.translate.y = user.auto_feed.translate.y + 10 + sprite[SPRITE.AUTO_FEED].height;\r\n        this.minimap.translate.y = canh - 3 - 193;\r\n        this.minimap.translate.x = canw - 3 - 193;\r\n        this.gauges.translate.x = 5;\r\n        this.gauges.translate.y = canh - this.gauges.img.height - 5;\r\n        this.shop.button.info.translate.x = canw2 - 45.5;\r\n        this.shop.button.info.translate.y = 50;\r\n        this.update_craft_buttons();\r\n        this.update_inv_buttons();\r\n        this.update_chest_buttons();\r\n        this.update_furnace_button();\r\n        this.update_windmill_button();\r\n        this.update_extractor_button();\r\n        this.update_bread_oven_button();\r\n        this.update_team_buttons();\r\n        this.sign.update_button();\r\n        draw_team_buttons();\r\n        user.chat.update();\r\n        user.terminal.update();\r\n        this.team_box.update();\r\n        this.craft_list.home.update();\r\n        this.craft_list.list.update();\r\n        this.safe_delete.update();\r\n        this.safe_cancel.update();\r\n        this.quests.update();\r\n        this.shop.update();\r\n        this.options.update();\r\n        this.market.update();\r\n        this.sign.update();\r\n        var move_effect = 0;\r\n        if (appear_effect_step != appear_effect_max_step) {\r\n            var move_effect = 1500 / (appear_effect_step + 1) - 50;\r\n        }\r\n        if (quit_effect_step != -1) {\r\n            var move_effect = -(1500 / (quit_effect_max_step - quit_effect_step + 1) - 48);\r\n        }\r\n        this.shop.button.info.translate.y -= move_effect > 0 ? move_effect : -move_effect;\r\n        this.leaderboard.translate.y -= move_effect > 0 ? move_effect : -move_effect;\r\n        user.auto_feed.translate.y -= move_effect > 0 ? move_effect : -move_effect;\r\n        user.show_spectators.translate.y -= move_effect > 0 ? move_effect : -move_effect;\r\n        this.craft_list.button.info.translate.y -= move_effect > 0 ? move_effect : -move_effect;\r\n        this.quests.button.info.translate.y -= move_effect > 0 ? move_effect : -move_effect;\r\n        this.options.button.info.translate.y -= move_effect > 0 ? move_effect : -move_effect;\r\n        this.market.button.info.translate.y -= move_effect > 0 ? move_effect : -move_effect;\r\n        this.audio.button_on.info.translate.y -= move_effect > 0 ? move_effect : -move_effect;\r\n        this.audio.button_off.info.translate.y -= move_effect > 0 ? move_effect : -move_effect;\r\n        world.clock.translate.y -= move_effect > 0 ? move_effect : -move_effect;\r\n        this.gauges.translate.y -= move_effect < 0 ? move_effect : -move_effect;\r\n        this.minimap.translate.y -= move_effect < 0 ? move_effect : -move_effect;\r\n    };\r\n    this.draw_UI = function () {\r\n        if (!user.ghost.enabled && this.show_ui && !user.zombie) draw_ui_crafting();\r\n        draw_ui_gear();\r\n        draw_ui_chat();\r\n        if (this.show_ui) {\r\n            draw_minimap();\r\n            if (this.show_recipe_book === 1) this.craft_list.button.draw(ctx);\r\n            if (world.mode !== WORLD.MODE_ZOMBIES && world.mode !== WORLD.MODE_LEGACY && world.mode !== WORLD.MODE_BR && this.show_quest === 1) this.quests.button.draw(ctx);\r\n            this.options.button.draw(ctx);\r\n            if (this.show_market === 1) this.market.button.draw(ctx);\r\n            if (audio.run) this.audio.button_on.draw(ctx); else this.audio.button_off.draw(ctx);\r\n            draw_leaderboard();\r\n            draw_status();\r\n            this.gauges.draw();\r\n            draw_weapon_switch_delay();\r\n            draw_helmet_switch_delay();\r\n            draw_build_delay();\r\n            draw_totem_delay();\r\n            draw_ui_inventory();\r\n            draw_chest_inventory();\r\n            draw_furnace_inventory();\r\n            draw_well_inventory();\r\n            draw_windmill_inventory();\r\n            draw_extractor_inventory();\r\n            draw_bread_oven_inventory();\r\n            draw_sign_button();\r\n            draw_team_buttons();\r\n            draw_info_box();\r\n        }\r\n        if (user.ghost.enabled) draw_resurrection_inventory();\r\n        draw_bigmap();\r\n        if (this.show_ui && this.show_clock === 1) draw_clock();\r\n        user.welcome.draw();\r\n        user.alert.draw(\"#FFF\", \"#000\");\r\n        if (this.show_ui) {\r\n            user.ghost.draw();\r\n            user.shop.draw();\r\n            user.inv.drag.draw(mouse.pos.x, mouse.pos.y);\r\n        }\r\n        draw_reconnect();\r\n    };\r\n    this.update_scene = function () {\r\n        user.cam.update();\r\n        user.gauges.update();\r\n        if (!user.reconnect.enabled && user.alive) {\r\n            user.control.update();\r\n            user.auto_feed.update();\r\n        }\r\n        world.update();\r\n        this.quests.update_chrono();\r\n    };\r\n    this.draw_scene = function () {\r\n        draw_world_with_effect();\r\n    };\r\n    this.update_connection = function () {\r\n        client.check_state();\r\n        client.check_pong();\r\n        client.try_ping();\r\n        client.update_cam();\r\n    };\r\n    this.draw = function () {\r\n        if (!user.reconnect.enabled && user.alive) this.update_connection();\r\n        audio.scheduler();\r\n        this.update_scene();\r\n        if (ui.hijackedAsset === 1) {\r\n            var img = IMAGES.CHEATING_BOX;\r\n            ctxDrawImage(ctx, img, canw2 - img.width / 4, canh2 - img.height / 4, img.width / 2, img.height / 2);\r\n            return;\r\n        }\r\n        this.draw_scene();\r\n        this.draw_UI();\r\n    };\r\n    this.trigger_keyup = function (evt) {\r\n        if (user.chat.open && evt.keyCode === 27) user.chat.quit(); else if (user.terminal.open && evt.keyCode === 27) user.terminal.quit(); else if (!user.chat.open && !user.terminal.open && evt.keyCode == 79 && quit_effect_step == -1) user.terminal._open(); else if (evt.keyCode == 13 && quit_effect_step == -1) {\r\n            if (user.terminal.open) user.terminal._send(); else user.chat.run();\r\n        } else if (!user.chat.open && !user.terminal.open) {\r\n            if (evt.keyCode === 82) user.auto_feed.invert(); else if (evt.keyCode === 80 && world.mode === WORLD.MODE_HUNGER_GAMES && !user.spectator) user.show_spectators.invert(); else if (evt.keyCode >= 49 && evt.keyCode <= 57) {\r\n                if (user.craft.id < 0) {\r\n                    var i = evt.keyCode - 49;\r\n                    var button = user.inv.can_select[i];\r\n                    if (button) client.select_inv(button.id, i);\r\n                }\r\n            } else if (evt.keyCode == 89) user.bigmap = !user.bigmap; else if (evt.keyCode == 71) user.craft.change_mode();\r\n        }\r\n        keyboard.up(evt);\r\n    };\r\n    this.trigger_keydown = function (evt) {\r\n        keyboard.down(evt);\r\n        if (evt.keyCode == 8 && !user.chat.open && !user.terminal.open) evt.preventDefault();\r\n    };\r\n    this.trigger_mousedown = function (evt) {\r\n        mouse.pos = get_mouse_pos(_this.can, evt);\r\n        var click = false;\r\n        if (user.craft.preview < 0) _this.minimap.focus(mouse.pos);\r\n        var chest = user.chest;\r\n        if (user.craft.id < 0 && chest.id >= 0) {\r\n            if (!user.chest.lock || user.chest.pid === user.id) click |= _this.chest_buttons[user.chest.id].trigger(_this.can, mouse.pos, MOUSE_DOWN);\r\n        }\r\n        var windmill = user.windmill;\r\n        if (windmill.open && windmill.amount_flour > 0) {\r\n            click |= _this.windmill_flour_button.trigger(_this.can, mouse.pos, MOUSE_DOWN);\r\n        }\r\n        var extractor = user.extractor;\r\n        if (extractor.open && extractor.amount_mineral > 0) {\r\n            click |= _this.extractor_stone_button.trigger(_this.can, mouse.pos, MOUSE_DOWN);\r\n            click |= _this.extractor_gold_button.trigger(_this.can, mouse.pos, MOUSE_DOWN);\r\n            click |= _this.extractor_diamond_button.trigger(_this.can, mouse.pos, MOUSE_DOWN);\r\n            click |= _this.extractor_amethyst_button.trigger(_this.can, mouse.pos, MOUSE_DOWN);\r\n            click |= _this.extractor_reidite_button.trigger(_this.can, mouse.pos, MOUSE_DOWN);\r\n        }\r\n        var bread_oven = user.bread_oven;\r\n        if (bread_oven.open && bread_oven.amount_bread > 0) {\r\n            click |= _this.bread_oven_bread_button.trigger(_this.can, mouse.pos, MOUSE_DOWN);\r\n        }\r\n        if (user.sign.open) click |= _this.sign.button.trigger(_this.can, mouse.pos, MOUSE_DOWN);\r\n        if (!user.chest.lock) {\r\n            if (user.chest.padlock) click |= _this.chest_padlock.trigger(_this.can, mouse.pos, MOUSE_DOWN);\r\n        }\r\n        if (user.chest.lockpick) click |= _this.chest_lockpick.trigger(_this.can, mouse.pos, MOUSE_DOWN);\r\n        if (user.craft.id < 0 && !_this.craft_list.open && !_this.safe_delete.open && !_this.safe_cancel.open && !_this.quests.open && !_this.options.open && !_this.market.open) {\r\n            var buttons = user.inv.can_select;\r\n            for (var i = 0; i < buttons.length; i++) {\r\n                var ret = buttons[i].trigger(_this.can, mouse.pos, MOUSE_DOWN);\r\n                click |= ret;\r\n                if (ret) user.inv.drag.start(i, mouse.pos);\r\n                if (chest.open && (chest.id < 0 || chest.id == buttons[i].id) || user.furnace.open && buttons[i].id === INV.WOOD || user.well.open && buttons[i].id === INV.BUCKET_FULL || user.bread_oven.open && (buttons[i].id === INV.WOOD || buttons[i].id === INV.FLOUR) || user.windmill.open && buttons[i].id === INV.WILD_WHEAT || user.extractor.open && buttons[i].id === INV.WOOD) {\r\n                    click |= _this.plus_buttons[buttons[i].id].trigger(_this.can, mouse.pos, MOUSE_DOWN);\r\n                }\r\n            }\r\n        }\r\n        if (user.resurrection.open) click |= _this.resurrection.trigger(_this.can, mouse.pos, MOUSE_DOWN);\r\n        if (_this.team_buttons_id != -1) {\r\n            click |= _this.team_buttons[_this.team_buttons_id].button.trigger(_this.can, mouse.pos, MOUSE_DOWN);\r\n            if (click) var team_button = true;\r\n        } else var team_button = false;\r\n        if (user.craft.id < 0 && user.craft.preview < 0 && !team_button && !_this.craft_list.open && !_this.safe_delete.open && !_this.options.open && !_this.safe_cancel.open && !_this.market.open && !user.zombie) {\r\n            var buttons = user.craft.can_craft;\r\n            for (var i = 0; i < buttons.length; i++) {\r\n                click |= buttons[i].trigger(_this.can, mouse.pos, MOUSE_DOWN);\r\n            }\r\n        }\r\n        if (user.craft.id < 0 && user.craft.preview < 0 && user.shop.open && !_this.craft_list.open && !_this.safe_delete.open && !_this.options.open && !_this.safe_cancel.open && !_this.quests.open && !_this.market.open) click |= _this.shop.button.trigger(_this.can, mouse.pos, MOUSE_DOWN);\r\n        if (user.craft.preview < 0 && !_this.safe_delete.open && !_this.options.open && !_this.safe_cancel.open && !_this.quests.open && !_this.market.open) click |= _this.craft_list.button.trigger(_this.can, mouse.pos, MOUSE_DOWN);\r\n        if (user.craft.preview < 0 && !_this.craft_list.open && !_this.safe_delete.open && !_this.safe_cancel.open && !_this.quests.open && !_this.market.open) click |= _this.options.button.trigger(_this.can, mouse.pos, MOUSE_DOWN);\r\n        if (user.craft.preview < 0 && !_this.craft_list.open && !_this.safe_delete.open && !_this.safe_cancel.open && !_this.quests.open && !_this.options.open) click |= _this.market.button.trigger(_this.can, mouse.pos, MOUSE_DOWN);\r\n        if (user.craft.preview < 0 && !_this.craft_list.open && !_this.safe_delete.open && !_this.safe_cancel.open && !_this.quests.open && !_this.options.open && !_this.market.open) {\r\n            if (audio.run) click |= _this.audio.button_on.trigger(_this.can, mouse.pos, MOUSE_DOWN); else click |= _this.audio.button_off.trigger(_this.can, mouse.pos, MOUSE_DOWN);\r\n        }\r\n        if (user.craft.preview < 0 && !_this.craft_list.open && !_this.market.open && !_this.safe_delete.open && !_this.options.open && !_this.safe_cancel.open && world.mode !== WORLD.MODE_ZOMBIES && world.mode !== WORLD.MODE_LEGACY && world.mode !== WORLD.MODE_BR) click |= _this.quests.button.trigger(_this.can, mouse.pos, MOUSE_DOWN);\r\n        if (!click && !_this.craft_list.open && !_this.safe_delete.open && !_this.options.open && !_this.safe_cancel.open && !_this.quests.open && !_this.market.open && !_this.sign.open) {\r\n            if (user.craft.preview >= 0) client.send_build(); else if (!team_button) mouse.down();\r\n        }\r\n    };\r\n    this.trigger_mouseup = function (evt) {\r\n        mouse.pos = get_mouse_pos(_this.can, evt);\r\n        mouse.up();\r\n        if (user.inv.drag.release()) return;\r\n        var chest = user.chest;\r\n        var furnace = user.furnace;\r\n        var well = user.well;\r\n        var windmill = user.windmill;\r\n        var extractor = user.extractor;\r\n        var bread_oven = user.bread_oven;\r\n        if (user.control.attack) {\r\n            user.control.attack = 0;\r\n            client.stop_attack();\r\n        }\r\n        if (_this.team_buttons_id != -1) {\r\n            var sel = _this.team_buttons[_this.team_buttons_id].button.trigger(_this.can, mouse.pos, MOUSE_UP);\r\n            var style = document.getElementById(\"team_box\").style;\r\n            if (sel && style.display == \"inline-block\") {\r\n                style.display = \"none\";\r\n                return;\r\n            } else if (sel) _this.team_buttons[_this.team_buttons_id].action();\r\n        }\r\n        if (user.craft.id < 0 && chest.id >= 0 && !_this.safe_delete.open) {\r\n            if (!user.chest.lock || user.chest.pid === user.id) {\r\n                var sel = _this.chest_buttons[user.chest.id].trigger(_this.can, mouse.pos, MOUSE_UP);\r\n                if (sel) client.take_chest(chest);\r\n            }\r\n        }\r\n        var windmill = user.windmill;\r\n        if (windmill.open && windmill.amount_flour > 0 && !_this.safe_delete.open) {\r\n            var sel = _this.windmill_flour_button.trigger(_this.can, mouse.pos, MOUSE_UP);\r\n            if (sel) client.take_flour(windmill);\r\n        }\r\n        var extractor = user.extractor;\r\n        if (extractor.open && extractor.amount_mineral > 0 && !_this.safe_delete.open) {\r\n            switch (extractor.type) {\r\n                case ITEMS.EXTRACTOR_MACHINE_STONE:\r\n                    var sel = _this.extractor_stone_button.trigger(_this.can, mouse.pos, MOUSE_UP);\r\n                    if (sel) client.take_extractor(extractor);\r\n                    break;\r\n                case ITEMS.EXTRACTOR_MACHINE_GOLD:\r\n                    var sel = _this.extractor_gold_button.trigger(_this.can, mouse.pos, MOUSE_UP);\r\n                    if (sel) client.take_extractor(extractor);\r\n                    break;\r\n                case ITEMS.EXTRACTOR_MACHINE_DIAMOND:\r\n                    var sel = _this.extractor_diamond_button.trigger(_this.can, mouse.pos, MOUSE_UP);\r\n                    if (sel) client.take_extractor(extractor);\r\n                    break;\r\n                case ITEMS.EXTRACTOR_MACHINE_AMETHYST:\r\n                    var sel = _this.extractor_amethyst_button.trigger(_this.can, mouse.pos, MOUSE_UP);\r\n                    if (sel) client.take_extractor(extractor);\r\n                    break;\r\n                case ITEMS.EXTRACTOR_MACHINE_REIDITE:\r\n                    var sel = _this.extractor_reidite_button.trigger(_this.can, mouse.pos, MOUSE_UP);\r\n                    if (sel) client.take_extractor(extractor);\r\n                    break;\r\n            }\r\n        }\r\n        var bread_oven = user.bread_oven;\r\n        if (bread_oven.open && bread_oven.amount_bread > 0 && !_this.safe_delete.open) {\r\n            var sel = _this.bread_oven_bread_button.trigger(_this.can, mouse.pos, MOUSE_UP);\r\n            if (sel) client.take_bread(bread_oven);\r\n        }\r\n        if (user.sign.open && !_this.safe_delete.open) {\r\n            var sel = _this.sign.button.trigger(_this.can, mouse.pos, MOUSE_UP);\r\n            if (sel) _this.sign.select();\r\n        }\r\n        if (!user.chest.lock && !_this.safe_delete.open) {\r\n            if (user.chest.padlock) {\r\n                sel = _this.chest_padlock.trigger(_this.can, mouse.pos, MOUSE_UP);\r\n                if (sel) client.lock_chest(chest);\r\n            }\r\n        }\r\n        if (user.chest.lockpick && !_this.safe_delete.open) {\r\n            sel = _this.chest_lockpick.trigger(_this.can, mouse.pos, MOUSE_UP);\r\n            if (sel) {\r\n                client.unlock_chest(chest);\r\n                if (ga) ga(\"send\", \"event\", \"Game\", \"lockpick\");\r\n            }\r\n        }\r\n        if (user.resurrection.open) {\r\n            var sel = _this.resurrection.trigger(_this.can, mouse.pos, MOUSE_UP);\r\n            if (sel) {\r\n                client.resurrection();\r\n                if (ga) ga(\"send\", \"event\", \"Game\", \"resurrection\");\r\n            }\r\n        }\r\n        if (user.craft.id < 0 && !user.ghost.enabled && !_this.safe_delete.open) {\r\n            var buttons = user.inv.can_select;\r\n            for (var i = 0; i < buttons.length; i++) {\r\n                var sel = buttons[i].trigger(_this.can, mouse.pos, MOUSE_UP);\r\n                if (!sel) {\r\n                    if (chest.open && (chest.id < 0 || chest.id === buttons[i].id)) {\r\n                        var sel = _this.plus_buttons[buttons[i].id].trigger(_this.can, mouse.pos, MOUSE_UP);\r\n                        if (sel && user.craft.preview < 0) client.give_item(chest, buttons[i].id, evt.shiftKey ? 10 : 1);\r\n                    } else if (well.open && buttons[i].id === INV.BUCKET_FULL) {\r\n                        var sel = _this.plus_buttons[buttons[i].id].trigger(_this.can, mouse.pos, MOUSE_UP);\r\n                        if (sel && user.craft.preview < 0) client.give_well(well);\r\n                    } else if (furnace.open && buttons[i].id === INV.WOOD) {\r\n                        var sel = _this.plus_buttons[buttons[i].id].trigger(_this.can, mouse.pos, MOUSE_UP);\r\n                        if (sel && user.craft.preview < 0) client.give_wood(furnace, evt.shiftKey ? 10 : 1);\r\n                    } else if (windmill.open && buttons[i].id === INV.WILD_WHEAT) {\r\n                        var sel = _this.plus_buttons[buttons[i].id].trigger(_this.can, mouse.pos, MOUSE_UP);\r\n                        if (sel && user.craft.preview < 0) client.give_wheat(windmill, evt.shiftKey ? 10 : 1);\r\n                    } else if (extractor.open && buttons[i].id === INV.WOOD) {\r\n                        var sel = _this.plus_buttons[buttons[i].id].trigger(_this.can, mouse.pos, MOUSE_UP);\r\n                        if (sel && user.craft.preview < 0) client.give_wood_extractor(extractor, evt.shiftKey ? 10 : 1);\r\n                    } else if (bread_oven.open && (buttons[i].id === INV.WOOD || buttons[i].id === INV.FLOUR)) {\r\n                        var sel = _this.plus_buttons[buttons[i].id].trigger(_this.can, mouse.pos, MOUSE_UP);\r\n                        if (sel && user.craft.preview < 0) {\r\n                            if (buttons[i].id === INV.WOOD) client.give_bread_oven(bread_oven, evt.shiftKey ? 10 : 1, 0); else client.give_bread_oven(bread_oven, 0, evt.shiftKey ? 10 : 1);\r\n                        }\r\n                    }\r\n                    continue;\r\n                } else {\r\n                    if (evt.which == 1 && !evt.shiftKey) client.select_inv(buttons[i].id, i); else if ((evt.which == 1 && evt.shiftKey || evt.which == 3) && user.craft.preview < 0) _this.safe_delete.del(buttons[i].id);\r\n                }\r\n            }\r\n        }\r\n        if (user.craft.id < 0 && user.craft.preview < 0 && !user.ghost.enabled && !_this.safe_delete.open && !user.zombie) {\r\n            var buttons = user.craft.can_craft;\r\n            for (var i = 0; i < buttons.length; i++) {\r\n                var sel = buttons[i].trigger(_this.can, mouse.pos, MOUSE_UP);\r\n                if (!sel) continue;\r\n                ret = client.select_craft(buttons[i].id);\r\n                if (ret && ga) ga(\"send\", \"event\", \"Game\", \"craft\", INV_INFOS[RECIPES[buttons[i].id].id2].name);\r\n            }\r\n        }\r\n        if (user.craft.id < 0 && user.craft.preview < 0 && user.shop.open && !_this.market.open && !_this.craft_list.open && !_this.safe_delete.open && !_this.options.open && !_this.safe_cancel.open && !_this.quests.open) {\r\n            var sel = _this.shop.button.trigger(_this.can, mouse.pos, MOUSE_MOVE);\r\n            if (sel) game.shop.select();\r\n        }\r\n        if (user.craft.preview < 0 && !_this.craft_list.open && !_this.safe_delete.open && !_this.market.open && !_this.safe_cancel.open && !_this.quests.open && !_this.options.open) {\r\n            if (audio.run) {\r\n                var sel = _this.audio.button_on.trigger(_this.can, mouse.pos, MOUSE_UP);\r\n                if (sel) {\r\n                    audio.select();\r\n                    if (ga) ga(\"send\", \"event\", \"Game\", \"sound on\");\r\n                }\r\n            } else {\r\n                var sel = _this.audio.button_off.trigger(_this.can, mouse.pos, MOUSE_UP);\r\n                if (sel) {\r\n                    audio.select();\r\n                    if (ga) ga(\"send\", \"event\", \"Game\", \"sound off\");\r\n                }\r\n            }\r\n        }\r\n        if (user.craft.preview < 0 && !_this.craft_list.open && !_this.safe_delete.open && !_this.safe_cancel.open && !_this.quests.open && !_this.market.open) {\r\n            var sel = _this.options.button.trigger(_this.can, mouse.pos, MOUSE_UP);\r\n            if (sel) {\r\n                _this.options.select_options();\r\n                if (ga) ga(\"send\", \"event\", \"Game\", \"options\");\r\n            }\r\n        }\r\n        if (user.craft.preview < 0 && !_this.craft_list.open && !_this.safe_delete.open && !_this.safe_cancel.open && !_this.quests.open && !_this.options.open && _this.show_market === 1) {\r\n            var sel = _this.market.button.trigger(_this.can, mouse.pos, MOUSE_UP);\r\n            if (sel) {\r\n                _this.market.select();\r\n                if (ga) ga(\"send\", \"event\", \"Game\", \"market\");\r\n            }\r\n        }\r\n        if (user.craft.preview < 0 && !_this.safe_delete.open && !_this.market.open && !_this.options.open && !_this.safe_cancel.open && !_this.quests.open && _this.show_recipe_book === 1) {\r\n            var sel = _this.craft_list.button.trigger(_this.can, mouse.pos, MOUSE_UP);\r\n            if (sel) {\r\n                _this.craft_list.select_book();\r\n                if (ga) ga(\"send\", \"event\", \"Game\", \"recipe\");\r\n            }\r\n        }\r\n        if (user.craft.preview < 0 && !_this.craft_list.open && !_this.safe_delete.open && !_this.options.open && !_this.safe_cancel.open && !_this.market.open && world.mode !== WORLD.MODE_ZOMBIES && world.mode !== WORLD.MODE_LEGACY && world.mode !== WORLD.MODE_BR && _this.show_quest === 1) {\r\n            var sel = _this.quests.button.trigger(_this.can, mouse.pos, MOUSE_UP);\r\n            if (sel) {\r\n                _this.quests.select();\r\n                if (ga) ga(\"send\", \"event\", \"Game\", \"quests\");\r\n            }\r\n        }\r\n        if (user.craft.crafting && evt.which == 3) _this.safe_cancel.del();\r\n    };\r\n    this.current_cursor = false;\r\n    this.trigger_mousemove = function (evt) {\r\n        mouse.pos = get_mouse_pos(_this.can, evt);\r\n        var cursor = false;\r\n        game.info_box.display = 0;\r\n        user.inv.drag.move(mouse.pos);\r\n        if (_this.team_buttons_id != -1) cursor |= _this.team_buttons[_this.team_buttons_id].button.trigger(_this.can, mouse.pos, MOUSE_MOVE);\r\n        var windmill = user.windmill;\r\n        if (windmill.open && windmill.amount_flour > 0) cursor |= _this.windmill_flour_button.trigger(_this.can, mouse.pos, MOUSE_MOVE);\r\n        var extractor = user.extractor;\r\n        if (extractor.open && extractor.amount_mineral > 0) {\r\n            cursor |= _this.extractor_stone_button.trigger(_this.can, mouse.pos, MOUSE_MOVE);\r\n            cursor |= _this.extractor_gold_button.trigger(_this.can, mouse.pos, MOUSE_MOVE);\r\n            cursor |= _this.extractor_diamond_button.trigger(_this.can, mouse.pos, MOUSE_MOVE);\r\n            cursor |= _this.extractor_amethyst_button.trigger(_this.can, mouse.pos, MOUSE_MOVE);\r\n            cursor |= _this.extractor_reidite_button.trigger(_this.can, mouse.pos, MOUSE_MOVE);\r\n        }\r\n        var bread_oven = user.bread_oven;\r\n        if (bread_oven.open && bread_oven.amount_bread > 0) cursor |= _this.bread_oven_bread_button.trigger(_this.can, mouse.pos, MOUSE_MOVE);\r\n        if (user.sign.open) cursor |= _this.sign.button.trigger(_this.can, mouse.pos, MOUSE_MOVE);\r\n        var chest = user.chest;\r\n        if (user.craft.id < 0 && chest.id >= 0 && !user.ghost.enabled) {\r\n            if (!user.chest.lock || user.chest.pid === user.id) cursor |= _this.chest_buttons[chest.id].trigger(_this.can, mouse.pos, MOUSE_MOVE);\r\n        }\r\n        if (user.resurrection.open) cursor |= _this.resurrection.trigger(_this.can, mouse.pos, MOUSE_MOVE);\r\n        if (!user.chest.lock && !user.ghost.enabled) {\r\n            if (user.chest.padlock) cursor |= _this.chest_padlock.trigger(_this.can, mouse.pos, MOUSE_MOVE);\r\n        }\r\n        if (user.chest.lockpick && !user.ghost.enabled) cursor |= _this.chest_lockpick.trigger(_this.can, mouse.pos, MOUSE_MOVE);\r\n        if (user.craft.id < 0 && !user.ghost.enabled) {\r\n            var buttons = user.inv.can_select;\r\n            for (var i = 0; i < buttons.length; i++) {\r\n                var _on = buttons[i].trigger(_this.can, mouse.pos, MOUSE_MOVE);\r\n                cursor |= game.info_box.trigger(_on, buttons[i], 0);\r\n                if (chest.open && (chest.id < 0 || chest.id == buttons[i].id) || user.furnace.open && buttons[i].id == INV.WOOD || user.well.open && buttons[i].id === INV.BUCKET_FULL || user.bread_oven.open && (buttons[i].id == INV.WOOD || buttons[i].id == INV.FLOUR) || user.windmill.open && buttons[i].id == INV.WILD_WHEAT || user.extractor.open && buttons[i].id == INV.WOOD) {\r\n                    cursor |= _this.plus_buttons[buttons[i].id].trigger(_this.can, mouse.pos, MOUSE_MOVE);\r\n                }\r\n            }\r\n        }\r\n        if (user.craft.id < 0 && user.craft.preview < 0 && !user.ghost.enabled && !user.zombie) {\r\n            var buttons = user.craft.can_craft;\r\n            for (var i = 0; i < buttons.length; i++) {\r\n                var _on = false;\r\n                _on = buttons[i].trigger(_this.can, mouse.pos, MOUSE_MOVE);\r\n                cursor |= game.info_box.trigger(_on, buttons[i], 1);\r\n            }\r\n        }\r\n        if (user.craft.id < 0 && user.craft.preview < 0 && user.shop.open && !_this.craft_list.open && !_this.safe_delete.open && !_this.options.open && !_this.safe_cancel.open && !_this.quests.open && !_this.market.open) cursor |= _this.shop.button.trigger(_this.can, mouse.pos, MOUSE_MOVE);\r\n        if (user.craft.preview < 0 && !_this.safe_delete.open && !_this.options.open && !_this.safe_cancel.open && !_this.quests.open && !_this.market.open && _this.show_recipe_book === 1) cursor |= _this.craft_list.button.trigger(_this.can, mouse.pos, MOUSE_MOVE);\r\n        if (user.craft.preview < 0 && !_this.craft_list.open && !_this.safe_delete.open && !_this.safe_cancel.open && !_this.quests.open && !_this.market.open) cursor |= _this.options.button.trigger(_this.can, mouse.pos, MOUSE_MOVE);\r\n        if (user.craft.preview < 0 && !_this.craft_list.open && !_this.safe_delete.open && !_this.safe_cancel.open && !_this.quests.open && !_this.options.open && _this.show_market === 1) cursor |= _this.market.button.trigger(_this.can, mouse.pos, MOUSE_MOVE);\r\n        if (user.craft.preview < 0 && !_this.craft_list.open && !_this.safe_delete.open && !_this.safe_cancel.open && !_this.quests.open && !_this.options.open && !_this.market.open) {\r\n            if (audio.run) cursor |= _this.audio.button_on.trigger(_this.can, mouse.pos, MOUSE_MOVE); else cursor |= _this.audio.button_off.trigger(_this.can, mouse.pos, MOUSE_MOVE);\r\n        }\r\n        if (user.craft.preview < 0 && !_this.craft_list.open && !_this.safe_delete.open && !_this.options.open && !_this.safe_cancel.open && !_this.market.open && world.mode !== WORLD.MODE_ZOMBIES && world.mode !== WORLD.MODE_LEGACY && world.mode !== WORLD.MODE_B && _this.show_quest === 1) cursor |= _this.quests.button.trigger(_this.can, mouse.pos, MOUSE_MOVE);\r\n        if (_this.current_cursor !== cursor) {\r\n            _this.current_cursor = cursor;\r\n            if (cursor) can.style.cursor = _this.cursor1; else can.style.cursor = _this.cursor0;\r\n        }\r\n    };\r\n    this.add_event_listener = function () {\r\n        window.addEventListener(\"mousedown\", this.trigger_mousedown, false);\r\n        window.addEventListener(\"mouseup\", this.trigger_mouseup, false);\r\n        window.addEventListener(\"mousemove\", this.trigger_mousemove, false);\r\n        window.addEventListener(\"keyup\", this.trigger_keyup, false);\r\n        window.addEventListener(\"keydown\", this.trigger_keydown, false);\r\n    };\r\n    this.remove_event_listener = function () {\r\n        window.removeEventListener(\"mousedown\", this.trigger_mousedown, false);\r\n        window.removeEventListener(\"mouseup\", this.trigger_mouseup, false);\r\n        window.removeEventListener(\"mousemove\", this.trigger_mousemove, false);\r\n        window.removeEventListener(\"keyup\", this.trigger_keyup, false);\r\n        window.removeEventListener(\"keydown\", this.trigger_keydown, false);\r\n    };\r\n}\r\n;\r\nfunction open_twitter() {\r\n    Utils.open_in_new_box(\"https://twitter.com/intent/tweet?text=I%20survived%20\" + user.day + \"%20days%20with%20\" + user.die.score + \"%20points%20in%20http%3A%2F%2Fstarve.io%2F%20%23starve.io\");\r\n}\r\n;\r\nfunction open_facebook() {\r\n    Utils.open_in_new_box(\"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fwww.starve.io%2F&display=popup&ref=plugin&src=like&kid_directed_site=0\");\r\n}\r\n;\r\nfunction Scoreboard(can, ctx) {\r\n    this.can = can;\r\n    this.ctx = ctx;\r\n    var _this = this;\r\n    this.enable_interface = false;\r\n    this.sb = {id: document.getElementById(\"scoreboard\"), style: document.getElementById(\"scoreboard\").style, height: 0, translate: {x: 0, y: 0}, update: function () {\r\n            this.style.left = this.translate.x + \"px\";\r\n            this.style.top = this.translate.y + \"px\";\r\n        }, init: function () {\r\n            this.id.innerHTML = '<div style=\"position:absolute;\"> <img src=\"./img/scoreboard.png\"style=\"width:250px;transform:translate(125px, -80px);\"> </img> </div><div><div id=\"whokilled\">' + user.die.howdie + '</div></div><div class=\"deco\" style=\"margin-top:35px;\"></div><div class=\"deco\"></div><div><div class=\"stats\"> ' + LANG[TEXT.DAYS_SURVIVED] + \" : \" + user.day + '</div><div class=\"stats\"> ' + LANG[TEXT.KILL] + \" : \" + user.die.kill + \"</div></div>\" + '<div id=\"flexDisplay\"><div id=\"score\"> ' + LANG[TEXT.SCORE] + \" : \" + user.die.score + '</div><div id=\"breadWon\"><span id=\"breadWonInner\">0</span><img src=\"./img/golden-bread.png\" style=\"width:50px;margin-left:-25px;transform: translate(37px, 8px);\"></img></div></div><div><div id=\"points\"> ' + user.die.bank + \" \" + LANG[TEXT.POINTS] + '</div></div><div id=\"shop_points\">' + LANG[TEXT.KIT_NEXT] + '</div><div style=\"display:inline-block;\"><div class=\"social\" id=\"tttwitter\">' + LANG[TEXT.TWITTER] + '</div><div class=\"social\" id=\"fffacebook\">' + LANG[TEXT.FACEBOOK] + '</div></div><div id=\"bbback\">' + LANG[TEXT.BACK_TO_THE_GAME] + \"</div>\";\r\n            this.style.display = \"inline-block\";\r\n            document.getElementById(\"tttwitter\").addEventListener(\"mouseup\", open_twitter, false);\r\n            document.getElementById(\"bbback\").addEventListener(\"mouseup\", function () {\r\n                scoreboard.quit(ui.run);\r\n            }, false);\r\n            document.getElementById(\"fffacebook\").addEventListener(\"mouseup\", open_facebook, false);\r\n            this.height = Math.floor(this.id.clientHeight / 2);\r\n            getBreadAndScore();\r\n            fetchPageViewCanidate();\r\n        }};\r\n    var appear_effect_step = 0;\r\n    var appear_effect_max_step = 30;\r\n    var appear_effect = function () {\r\n        _this.update();\r\n        appear_effect_step++;\r\n        if (appear_effect_step == appear_effect_max_step) {\r\n            _this.update();\r\n            return;\r\n        }\r\n        window.setTimeout(appear_effect, 33);\r\n    };\r\n    this.quit = function (fun) {\r\n        if (_this.enable_interface === true) {\r\n            _this.enable_interface = false;\r\n            fun_after_quit = fun;\r\n            quit_effect_step = -1;\r\n            quit_effect();\r\n            refreshAds();\r\n            fetchPageViewCanidate();\r\n        }\r\n    };\r\n    var fun_after_quit;\r\n    var quit_effect_step = -1;\r\n    var quit_effect_max_step = 30;\r\n    var quit_effect = function () {\r\n        _this.update();\r\n        quit_effect_step++;\r\n        if (quit_effect_step == quit_effect_max_step) {\r\n            _this.stop();\r\n            _this.sb.style.display = \"none\";\r\n            fun_after_quit();\r\n            return;\r\n        }\r\n        window.setTimeout(quit_effect, 33);\r\n    };\r\n    this.is_run = false;\r\n    this.stop = function () {\r\n        this.is_run = false;\r\n    };\r\n    this.run = function () {\r\n        check_ads();\r\n        document.getElementById(\"game_body\").style.backgroundColor = SPRITE.GROUND[fake_world.time];\r\n        _this.sb.init();\r\n        ui.trevda.style.display = \"inline-block\";\r\n        _this.is_run = true;\r\n        _this.enable_interface = true;\r\n        quit_effect_step = -1;\r\n        appear_effect_step = 0;\r\n        appear_effect();\r\n    };\r\n    this.update = function () {\r\n        this.sb.translate.x = Math.floor(canw2 - 275);\r\n        this.sb.translate.y = Math.floor(canh2 - this.sb.height - 28);\r\n        ui.trevda.translate.x = this.sb.translate.x - 350;\r\n        ui.trevda.translate.y = this.sb.translate.y + 0;\r\n        ui.trevda.update();\r\n        if (appear_effect_step != appear_effect_max_step || quit_effect_step != -1) {\r\n            var move_effect = 0;\r\n            if (appear_effect_step != appear_effect_max_step) {\r\n                var move_effect = 1500 / (appear_effect_step + 1) - 50;\r\n            }\r\n            if (quit_effect_step != -1) {\r\n                var move_effect = -(1750 / (quit_effect_max_step - quit_effect_step + 1) - 48);\r\n            }\r\n            this.sb.translate.y -= move_effect;\r\n        }\r\n        this.sb.update();\r\n    };\r\n    this.draw = function () {\r\n        draw_fake_world();\r\n        user.alert.draw(\"#FFF\", \"#000\");\r\n    };\r\n}\r\n;\r\nvar VOLUME = {AMB: 1, FX: 1};\r\nvar CONST_AUDIO = {SEA_DELAY: 12, SEA_FADE: 5e3, FOREST_DELAY: 12, FOREST_FADE: 5e3, SNOW_DELAY: 12, SNOW_FADE: 5e3, TRANSITION: 3e3, DISABLE_EFFECT: 46e4, PLAYERS: 8, ITEMS: 6, HAND: 1, MISC: 2, SHOVEL: 3};\r\nvar SOUND = [];\r\nSOUND[-1] = CONST_AUDIO.HAND;\r\nSOUND[INV.BOOK] = CONST_AUDIO.HAND;\r\nSOUND[INV.WATERING_CAN_FULL] = CONST_AUDIO.HAND;\r\nSOUND[INV.WRENCH] = CONST_AUDIO.MISC;\r\nSOUND[INV.PICK_WOOD] = CONST_AUDIO.MISC;\r\nSOUND[INV.PICK] = CONST_AUDIO.MISC;\r\nSOUND[INV.PICK_GOLD] = CONST_AUDIO.MISC;\r\nSOUND[INV.PICK_DIAMOND] = CONST_AUDIO.MISC;\r\nSOUND[INV.PICK_AMETHYST] = CONST_AUDIO.MISC;\r\nSOUND[INV.PICK_REIDITE] = CONST_AUDIO.MISC;\r\nSOUND[INV.PIRATE_SWORD] = CONST_AUDIO.MISC;\r\nSOUND[INV.SWORD_WOOD] = CONST_AUDIO.MISC;\r\nSOUND[INV.SWORD] = CONST_AUDIO.MISC;\r\nSOUND[INV.LAVA_SWORD] = CONST_AUDIO.MISC;\r\nSOUND[INV.LAVA_SPEAR] = CONST_AUDIO.MISC;\r\nSOUND[INV.SWORD_GOLD] = CONST_AUDIO.MISC;\r\nSOUND[INV.SWORD_DIAMOND] = CONST_AUDIO.MISC;\r\nSOUND[INV.SWORD_AMETHYST] = CONST_AUDIO.MISC;\r\nSOUND[INV.SWORD_REIDITE] = CONST_AUDIO.MISC;\r\nSOUND[INV.CRAB_SPEAR] = CONST_AUDIO.MISC;\r\nSOUND[INV.WOOD_SPEAR] = CONST_AUDIO.MISC;\r\nSOUND[INV.SPEAR] = CONST_AUDIO.MISC;\r\nSOUND[INV.GOLD_SPEAR] = CONST_AUDIO.MISC;\r\nSOUND[INV.DIAMOND_SPEAR] = CONST_AUDIO.MISC;\r\nSOUND[INV.DRAGON_SPEAR] = CONST_AUDIO.MISC;\r\nSOUND[INV.AMETHYST_SPEAR] = CONST_AUDIO.MISC;\r\nSOUND[INV.AMETHYST_REIDITE] = CONST_AUDIO.MISC;\r\nSOUND[INV.HAMMER] = CONST_AUDIO.MISC;\r\nSOUND[INV.HAMMER_GOLD] = CONST_AUDIO.MISC;\r\nSOUND[INV.HAMMER_DIAMOND] = CONST_AUDIO.MISC;\r\nSOUND[INV.HAMMER_AMETHYST] = CONST_AUDIO.MISC;\r\nSOUND[INV.HAMMER_REIDITE] = CONST_AUDIO.MISC;\r\nSOUND[INV.SUPER_HAMMER] = CONST_AUDIO.MISC;\r\nSOUND[INV.DRAGON_SWORD] = CONST_AUDIO.MISC;\r\nSOUND[INV.PITCHFORK2] = CONST_AUDIO.MISC;\r\nSOUND[INV.PITCHFORK] = CONST_AUDIO.MISC;\r\nSOUND[INV.SHOVEL] = CONST_AUDIO.SHOVEL;\r\nSOUND[INV.SHOVEL_GOLD] = CONST_AUDIO.SHOVEL;\r\nSOUND[INV.SHOVEL_DIAMOND] = CONST_AUDIO.SHOVEL;\r\nSOUND[INV.SHOVEL_AMETHYST] = CONST_AUDIO.SHOVEL;\r\nSOUND_NATURE = [];\r\nSOUND_NATURE[0] = 0;\r\nSOUND_NATURE[1] = 1;\r\nSOUND_NATURE[2] = 1;\r\nSOUND_NATURE[3] = 1;\r\nSOUND_NATURE[4] = 0;\r\nSOUND_NATURE[5] = 0;\r\nSOUND_NATURE[6] = 0;\r\nSOUND_NATURE[7] = 0;\r\nSOUND_NATURE[8] = 0;\r\nSOUND_NATURE[9] = 0;\r\nSOUND_NATURE[10] = 1;\r\nSOUND_NATURE[11] = 1;\r\nSOUND_NATURE[12] = 1;\r\nSOUND_NATURE[13] = 1;\r\nSOUND_NATURE[14] = 1;\r\nSOUND_NATURE[15] = 1;\r\nSOUND_NATURE[16] = 0;\r\nSOUND_NATURE[17] = 0;\r\nSOUND_NATURE[18] = 0;\r\nSOUND_NATURE[19] = 0;\r\nSOUND_NATURE[20] = 0;\r\nSOUND_NATURE[21] = 0;\r\nSOUND_NATURE[22] = 0;\r\nSOUND_NATURE[23] = 1;\r\nSOUND_NATURE[24] = 1;\r\nSOUND_NATURE[25] = 1;\r\nSOUND_NATURE[26] = 1;\r\nSOUND_NATURE[27] = 1;\r\nSOUND_NATURE[28] = 1;\r\nSOUND_NATURE[29] = 1;\r\nSOUND_NATURE[30] = 1;\r\nSOUND_NATURE[31] = 1;\r\nSOUND_NATURE[32] = 1;\r\nSOUND_NATURE[33] = 1;\r\nSOUND_NATURE[34] = 1;\r\nSOUND_NATURE[35] = 1;\r\nSOUND_NATURE[36] = 1;\r\nSOUND_NATURE[37] = 1;\r\nSOUND_NATURE[38] = 1;\r\nSOUND_NATURE[40] = 0;\r\nSOUND_NATURE[41] = 0;\r\nSOUND_NATURE[42] = 0;\r\nSOUND_NATURE[50] = 1;\r\nSOUND_NATURE[51] = 1;\r\nSOUND_NATURE[52] = 1;\r\nSOUND_NATURE[55] = 0;\r\nSOUND_NATURE[56] = 0;\r\nSOUND_NATURE[57] = 0;\r\nSOUND_NATURE[58] = 0;\r\nSOUND_BUILD = [];\r\nSOUND_BUILD[ITEMS.PLANT] = 0;\r\nSOUND_BUILD[ITEMS.FIRE] = 0;\r\nSOUND_BUILD[ITEMS.TOTEM] = 0;\r\nSOUND_BUILD[ITEMS.BIG_FIRE] = 0;\r\nSOUND_BUILD[ITEMS.SEED] = -1;\r\nSOUND_BUILD[ITEMS.WHEAT_SEED] = -1;\r\nSOUND_BUILD[ITEMS.WORKBENCH] = 0;\r\nSOUND_BUILD[ITEMS.WALL] = 0;\r\nSOUND_BUILD[ITEMS.BRIDGE] = 0;\r\nSOUND_BUILD[ITEMS.PLOT] = 0;\r\nSOUND_BUILD[ITEMS.WINDMILL] = 1;\r\nSOUND_BUILD[ITEMS.WELL] = 1;\r\nSOUND_BUILD[ITEMS.STONE_WALL] = 1;\r\nSOUND_BUILD[ITEMS.GOLD_WALL] = 1;\r\nSOUND_BUILD[ITEMS.DIAMOND_WALL] = 1;\r\nSOUND_BUILD[ITEMS.AMETHYST_WALL] = 1;\r\nSOUND_BUILD[ITEMS.REIDITE_WALL] = 1;\r\nSOUND_BUILD[ITEMS.SPIKE] = 0;\r\nSOUND_BUILD[ITEMS.STONE_SPIKE] = 1;\r\nSOUND_BUILD[ITEMS.GOLD_SPIKE] = 1;\r\nSOUND_BUILD[ITEMS.DIAMOND_SPIKE] = 1;\r\nSOUND_BUILD[ITEMS.AMETHYST_SPIKE] = 1;\r\nSOUND_BUILD[ITEMS.REIDITE_SPIKE] = 1;\r\nSOUND_BUILD[ITEMS.WOOD_DOOR] = 0;\r\nSOUND_BUILD[ITEMS.STONE_DOOR] = 1;\r\nSOUND_BUILD[ITEMS.GOLD_DOOR] = 1;\r\nSOUND_BUILD[ITEMS.DIAMOND_DOOR] = 1;\r\nSOUND_BUILD[ITEMS.AMETHYST_DOOR] = 1;\r\nSOUND_BUILD[ITEMS.REIDITE_DOOR] = 1;\r\nSOUND_BUILD[ITEMS.WOOD_DOOR_SPIKE] = 0;\r\nSOUND_BUILD[ITEMS.STONE_DOOR_SPIKE] = 1;\r\nSOUND_BUILD[ITEMS.GOLD_DOOR_SPIKE] = 1;\r\nSOUND_BUILD[ITEMS.DIAMOND_DOOR_SPIKE] = 1;\r\nSOUND_BUILD[ITEMS.AMETHYST_DOOR_SPIKE] = 1;\r\nSOUND_BUILD[ITEMS.REIDITE_DOOR_SPIKE] = 1;\r\nSOUND_BUILD[ITEMS.FURNACE] = 1;\r\nSOUND_BUILD[ITEMS.RESURRECTION] = 1;\r\nSOUND_BUILD[ITEMS.EMERALD_MACHINE] = 1;\r\nSOUND_BUILD[ITEMS.CHEST] = 0;\r\nSOUND_BUILD[ITEMS.BREAD_OVEN] = 1;\r\nvar AUDIO = {DIG: {sound: null, path: [\"audio/ambience.mp3\"], sprite: {d0: [90086, 300, false], d1: [90391, 300, false], d2: [90684, 300, false]}, sample: {d0: CONST_AUDIO.PLAYERS, d1: CONST_AUDIO.PLAYERS, d2: CONST_AUDIO.PLAYERS}}, PUNCH: {sound: null, path: [\"audio/ambience.mp3\"], sprite: {p0: [89303, 300, false], p1: [89549, 300, false], p2: [89815, 300, false]}, sample: {p0: CONST_AUDIO.PLAYERS, p1: CONST_AUDIO.PLAYERS, p2: CONST_AUDIO.PLAYERS}}, WEAPON: {sound: null, path: [\"audio/ambience.mp3\"], sprite: {w0: [88195, 300, false], w1: [88473, 300, false], w2: [88751, 300, false], w3: [89025, 300, false]}, sample: {w0: CONST_AUDIO.PLAYERS, w1: CONST_AUDIO.PLAYERS, w2: CONST_AUDIO.PLAYERS, w3: CONST_AUDIO.PLAYERS}}, AMBIENCE: {sound: null, path: [\"audio/ambience.mp3\"], sprite: {cook: [100, 2800, true], seaday: [3100, 8800, true], seanight: [19882, 8301, true], forestday: [32604, 21890, true], forestnight: [54524, 11393, true], snowday: [66961, 21223, true], snownight: [66961, 21223, true], fire: [12356, 6965, true], swim: [28380, 1797, true], sand: [30562, 655, true], walk: [31658, 813, true], snow: [66014, 925, true], hwood: [91022, 400, false], hand: [91431, 400, false], hstone: [92249, 500, false]}, sample: {cook: 1, seaday: 1, seanight: 1, forestday: 1, forestnight: 1, snowday: 1, snownight: 1, fire: CONST_AUDIO.PLAYERS, swim: CONST_AUDIO.PLAYERS, sand: CONST_AUDIO.PLAYERS, walk: CONST_AUDIO.PLAYERS, snow: CONST_AUDIO.PLAYERS, hwood: CONST_AUDIO.ITEMS, hand: CONST_AUDIO.ITEMS, hstone: CONST_AUDIO.ITEMS}}};\r\nvar SoundArea = function (delay, night, day, fade, r_base, r_seed, player, transition_delay, source, outside, inside) {\r\n    this.r = 1;\r\n    this.delay = delay;\r\n    this.max_delay = delay;\r\n    this.night = night;\r\n    this.day = day;\r\n    this.fade = fade;\r\n    this.r_base = r_base;\r\n    this.r_seed = r_seed;\r\n    this.player = player;\r\n    this.transition_delay = transition_delay;\r\n    this.source = source;\r\n    this.source.lx = source.x + source.w;\r\n    this.source.by = source.y + source.h;\r\n    this.outside_box = outside;\r\n    this.inside_box = inside;\r\n    this.inside = 0;\r\n    this.hackish = {d: 5, m: 5};\r\n    this.effect = function () {\r\n        this.delay -= delta;\r\n        if (this.delay < 0) {\r\n            this.delay = this.max_delay;\r\n            var n = AUDIO.AMBIENCE.sound.playing(this.night);\r\n            var d = AUDIO.AMBIENCE.sound.playing(this.day);\r\n            if (n && !d) {\r\n                var v = this.player.volume(this.night) * VOLUME.AMB;\r\n                var r = (Math.random() * this.r_seed + this.r_base) * VOLUME.AMB;\r\n                this.player.fade(v, r, this.fade, this.night);\r\n            } else if (!n && d) {\r\n                var v = this.player.volume(this.day) * VOLUME.AMB;\r\n                var r = (Math.random() * this.r_seed + this.r_base) * VOLUME.AMB;\r\n                this.player.fade(v, r, this.fade, this.day);\r\n            }\r\n        }\r\n    };\r\n    this.transition = function () {\r\n        this.delay = this.max_delay;\r\n        this.hackish.d = this.hackish.m;\r\n        if (world.time) {\r\n            this.player.fade(0, this.r_base * VOLUME.AMB, this.transition_delay, this.night);\r\n            this.player.play(this.night);\r\n            if (this.player.playing(this.day)) {\r\n                var v = this.player.volume(this.day) * VOLUME.AMB;\r\n                this.player.fade(v, 0, this.transition_delay, this.day);\r\n            }\r\n        } else {\r\n            this.player.fade(0, this.r_base * VOLUME.AMB, this.transition_delay, this.day);\r\n            this.player.play(this.day);\r\n            if (this.player.playing(this.night)) {\r\n                var v = this.player.volume(this.night) * VOLUME.AMB;\r\n                this.player.fade(v, 0, this.transition_delay, this.night);\r\n            }\r\n        }\r\n    };\r\n    this.check = function (p) {\r\n        if (this.inside) {\r\n            if (!Utils.inside_box(p, this.outside_box)) {\r\n                this.inside = 0;\r\n                if (this.player.playing(this.night)) {\r\n                    var v = this.player.volume(this.night) * VOLUME.AMB;\r\n                    this.player.fade(v, 0, this.transition_delay, this.night);\r\n                }\r\n                if (this.player.playing(this.day)) {\r\n                    var v = this.player.volume(this.day) * VOLUME.AMB;\r\n                    this.player.fade(v, 0, this.transition_delay, this.day);\r\n                }\r\n            } else if (!audio.transition && world.clock.now < CONST_AUDIO.DISABLE_EFFECT) {\r\n                if (world.time) {\r\n                    if (!this.player.playing(this.night)) {\r\n                        this.hackish.d -= delta;\r\n                        if (this.hackish.d < 0) this.transition();\r\n                    }\r\n                } else {\r\n                    if (!this.player.playing(this.day)) {\r\n                        this.hackish.d -= delta;\r\n                        if (this.hackish.d < 0) this.transition();\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (Utils.inside_box(p, this.inside_box)) {\r\n                this.inside = 1;\r\n                if (!audio.transition && world.clock.now < CONST_AUDIO.DISABLE_EFFECT) this.transition();\r\n            }\r\n        }\r\n    };\r\n    this.update = function (p, ltr) {\r\n        var x, y;\r\n        if (p.x < this.source.x) x = audio.get_x(this.source.x); else if (p.x > this.source.lx) x = audio.get_x(this.source.lx); else x = ltr.x;\r\n        if (p.y < this.source.y) y = audio.get_y(this.source.y); else if (p.y > this.source.by) y = audio.get_y(this.source.by); else y = ltr.y;\r\n        this.player.pos(x, y, -0.5, this.night);\r\n        this.player.pos(x, y, -0.5, this.day);\r\n    };\r\n};\r\nSOUND_PLAYER = {DELAY_SWIM: 0.4, DELAY_SAND: 0.2, DELAY_WALK: 0.2, DELAY_SNOW: 0.2, FADE_SWIM: 300, FADE_SAND: 100, FADE_WALK: 100, FADE_SNOW: 100, WALK: 0, SWIM: 1, SAND: 2, SNOW: 3, FACTOR: 4, FACTOR2: 2};\r\nvar SoundPlayerEffect = function (mom, player, ids) {\r\n    this.mom = mom;\r\n    this.c = 0;\r\n    this.player = player;\r\n    this.ids = ids;\r\n    this.max = ids.length;\r\n    this.play = function () {\r\n        this.c = (this.c + 1) % this.max;\r\n        var id = this.ids[this.c];\r\n        this.mom.update_pos(this.player, id);\r\n        this.player.play(id);\r\n    };\r\n};\r\nvar SoundPlayer = function (sid) {\r\n    this.free = 1;\r\n    this.uid = 0;\r\n    this.mode = -1;\r\n    this.swim = audio.sample.swim[sid];\r\n    this.sand = audio.sample.sand[sid];\r\n    this.walk = audio.sample.walk[sid];\r\n    this.snow = audio.sample.snow[sid];\r\n    this.punch = new SoundPlayerEffect(this, AUDIO.PUNCH.sound, audio.samples.punch[sid]);\r\n    this.weapon = new SoundPlayerEffect(this, AUDIO.WEAPON.sound, audio.samples.weapon[sid]);\r\n    this.dig = new SoundPlayerEffect(this, AUDIO.DIG.sound, audio.samples.dig[sid]);\r\n    this.sid = sid;\r\n    this.x = 0;\r\n    this.y = 0;\r\n    this.move = 0;\r\n    this.delay = SOUND_PLAYER.DELAY;\r\n    this.pos = {x: 0, y: 0};\r\n    this.ambience = AUDIO.AMBIENCE.sound;\r\n    this.swing = function (noise) {\r\n        if (noise === CONST_AUDIO.HAND) this.punch.play(); else if (noise === CONST_AUDIO.MISC) this.weapon.play(); else if (noise === CONST_AUDIO.SHOVEL) this.dig.play();\r\n    };\r\n    this.detect_position = function (p) {\r\n        if (p.dist_sand > 0) return SOUND_PLAYER.SAND; else if (p.dist_water > 0) return SOUND_PLAYER.SWIM; else if (p.dist_winter > 0 || p.dist_lava > 0) return SOUND_PLAYER.SNOW; else return SOUND_PLAYER.WALK;\r\n    };\r\n    this.init = function (uid) {\r\n        this.free = 0;\r\n        this.uid = uid;\r\n        var p = world.fast_units[uid];\r\n        p.sid = this.sid;\r\n        this.mode = this.detect_position(p);\r\n        this.pos.x = p.x;\r\n        this.pos.y = p.y;\r\n    };\r\n    this.clean = function () {\r\n        this.free = 1;\r\n        this.mode = -1;\r\n        this.ambience.stop(this.swim);\r\n        this.ambience.stop(this.sand);\r\n        this.ambience.stop(this.walk);\r\n        this.ambience.stop(this.snow);\r\n    };\r\n    this.fade = function (id, f) {\r\n        var v = this.ambience.volume(id) * VOLUME.FX;\r\n        this.ambience.fade(v, 0, f, id);\r\n    };\r\n    this.update_pos = function (player, id) {\r\n        if (this.move && this.sid) {\r\n            player.pos(this.x, this.y, -0.5, id);\r\n        }\r\n    };\r\n    this.effect = function (id, base, rand, change, mode, delay, f) {\r\n        this.delay = delay;\r\n        if (change && this.mode === mode) {\r\n            var v = this.ambience.volume(id) * VOLUME.FX;\r\n            if (this.move) {\r\n                var r = (Math.random() * rand + base) * VOLUME.FX;\r\n                this.ambience.fade(v, r, f, id);\r\n            } else this.ambience.fade(v, 0, f, id);\r\n        } else if (this.mode != mode && this.move) {\r\n            this.ambience.fade(0, (base + rand) * VOLUME.FX, f, id);\r\n        } else if (this.move) {\r\n            var v = this.ambience.volume(id) * VOLUME.FX;\r\n            var r = (Math.random() * rand + base) * VOLUME.FX;\r\n            this.ambience.fade(v, r, f, id);\r\n        }\r\n        this.update_pos(this.ambience, id);\r\n        this.ambience.play(id);\r\n    };\r\n    this.update = function () {\r\n        var p = world.fast_units[this.uid];\r\n        this.delay -= delta;\r\n        if (this.delay > 0) return;\r\n        var change = 0;\r\n        if (p.x != this.pos.x || p.y != this.pos.y) {\r\n            if (!this.move) {\r\n                change = 1;\r\n                this.move = 1;\r\n            }\r\n            this.x = audio.get_x_ext(p.x, SOUND_PLAYER.FACTOR2);\r\n            this.y = audio.get_y_ext(p.y, SOUND_PLAYER.FACTOR2);\r\n        } else {\r\n            if (this.move) {\r\n                change = 1;\r\n                this.move = 0;\r\n            }\r\n        }\r\n        this.pos.x = p.x;\r\n        this.pos.y = p.y;\r\n        mode = this.detect_position(p);\r\n        if (mode != this.mode) {\r\n            if (this.mode === SOUND_PLAYER.SWIM) this.fade(this.swim, SOUND_PLAYER.FADE_SWIM); else if (this.mode === SOUND_PLAYER.SAND) this.fade(this.sand, SOUND_PLAYER.FADE_SAND); else if (this.mode === SOUND_PLAYER.WALK) this.fade(this.walk, SOUND_PLAYER.FADE_WALK); else if (this.mode === SOUND_PLAYER.SNOW) this.fade(this.snow, SOUND_PLAYER.FADE_SNOW);\r\n        }\r\n        if (mode === SOUND_PLAYER.SWIM) this.effect(this.swim, 0.08, 0.3, change, mode, SOUND_PLAYER.DELAY_SWIM, SOUND_PLAYER.FADE_SWIM); else if (mode === SOUND_PLAYER.SAND) this.effect(this.sand, 0.2, 0.3, change, mode, SOUND_PLAYER.DELAY_SAND, SOUND_PLAYER.FADE_SAND); else if (mode === SOUND_PLAYER.WALK) this.effect(this.walk, 0.3, 0.6, change, mode, SOUND_PLAYER.DELAY_WALK, SOUND_PLAYER.FADE_WALK); else if (mode === SOUND_PLAYER.SNOW) this.effect(this.snow, 0.1, 0.25, change, mode, SOUND_PLAYER.DELAY_SNOW, SOUND_PLAYER.FADE_SNOW);\r\n        this.mode = mode;\r\n    };\r\n    this.check = function () {\r\n        var p = world.fast_units[this.uid];\r\n        if (!p) {\r\n            this.clean(p);\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n};\r\nvar MyAudio = function () {\r\n    this.run = 0;\r\n    this.loaded = 0;\r\n    this.transition = 0;\r\n    this.get_x = function (x) {\r\n        return 100 * (x / world.w);\r\n    };\r\n    this.get_y = function (y) {\r\n        return 100 * (y / world.h);\r\n    };\r\n    this.get_x_ext = function (x, f) {\r\n        x = this.get_x(x) - this.ltr.x;\r\n        return this.ltr.x + f * x;\r\n    };\r\n    this.get_y_ext = function (y, f) {\r\n        y = Math.abs(this.get_y(y) - this.ltr.y);\r\n        return this.ltr.y + f * y;\r\n    };\r\n    this.sample = {};\r\n    this.samples = {};\r\n    this.player = {};\r\n    this.play_sample = function (p, s, x, y) {\r\n        for (var i = 0; i < s.length; i++) {\r\n            var id = s[i];\r\n            if (p.playing(id)) continue;\r\n            p.pos(x, y, -0.5, id);\r\n            p.play(id);\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    this.hit = function (id, sound, x, y) {\r\n        x = this.get_x_ext(x, SOUND_PLAYER.FACTOR);\r\n        y = this.get_y_ext(y, SOUND_PLAYER.FACTOR);\r\n        console.log(\"HIT\", id, sound, x, y, SOUND_PLAYER.FACTOR);\r\n        if (!id) this.play_sample(this.player.hand, this.sample.hand, x, y); else {\r\n            if (sound === 1) this.play_sample(this.player.hstone, this.sample.hstone, x, y); else if (sound === 0) this.play_sample(this.player.hwood, this.sample.hwood, x, y);\r\n        }\r\n    };\r\n    this.ltr = {x: 0, y: 0};\r\n    this.oldp = {x: 0, y: 0};\r\n    this.area = {};\r\n    this.players = [];\r\n    this.ambience = function (p, update) {\r\n        for (var a in this.area) {\r\n            var area = this.area[a];\r\n            area.check(p);\r\n            if (area.inside) {\r\n                if (world.clock.now < CONST_AUDIO.DISABLE_EFFECT) area.effect();\r\n                if (update) area.update(p, this.ltr);\r\n                if (this.transition) area.transition();\r\n            }\r\n        }\r\n        if (this.transition) this.transition = 0;\r\n    };\r\n    this.hook_players = function () {\r\n        var l = [];\r\n        for (var i = 0; i < this.players.length; i++) {\r\n            var p = this.players[i];\r\n            if (p.free) l.push(i); else if (!p.free && !world.fast_units[p.uid]) {\r\n                p.clean();\r\n                l.push(i);\r\n            }\r\n        }\r\n        var players = world.units[ITEMS.PLAYERS];\r\n        for (var i = 0, j = 0; i < players.length && j < l.length; i++) {\r\n            var p = players[i];\r\n            if (world.mode == WORLD.MODE_HUNGER_GAMES && world.players[p.id].nickname === \"spectator\" || p.sid !== -1 || p.uid === user.uid) continue;\r\n            this.players[l[j]].init(p.uid);\r\n            j++;\r\n        }\r\n    };\r\n    this.players_effect = function () {\r\n        this.hook_players();\r\n        for (var i = 0; i < this.players.length; i++) {\r\n            var p = this.players[i];\r\n            if (p.free || !p.check()) continue;\r\n            p.update();\r\n        }\r\n    };\r\n    this.update_listener = function (p) {\r\n        if (this.oldp.x === p.x && this.oldp.y === p.y) return 0;\r\n        this.oldp.x = p.x;\r\n        this.oldp.y = p.y;\r\n        this.ltr.x = this.get_x(p.x);\r\n        this.ltr.y = this.get_y(p.y);\r\n        Howler.pos(this.ltr.x, this.ltr.y, 0);\r\n        return 1;\r\n    };\r\n    this.scheduler = function () {\r\n        if (!this.run || !this.loaded) return;\r\n        var p = world.fast_units[user.uid];\r\n        if (!p) return;\r\n        p.sid = 0;\r\n        var update = this.update_listener(p);\r\n        if (world.mode !== WORLD.MODE_ZOMBIES && world.mode !== WORLD.MODE_LEGACY && world.mode !== WORLD.MODE_BR) this.ambience(p, update);\r\n        this.players_effect();\r\n    };\r\n    this.load_sound = function () {\r\n        var ret = null;\r\n        for (var sound in AUDIO) {\r\n            var s = AUDIO[sound];\r\n            if (typeof s === \"object\" && s.path) {\r\n                s.sound = new Howl({src: s.path, volume: 0, sprite: s.sprite});\r\n            }\r\n            for (var a in s.sample) {\r\n                var n = s.sample[a];\r\n                var l = [];\r\n                console.log(a);\r\n                for (var i = 0; i < n; i++) {\r\n                    var id = s.sound.play(a);\r\n                    s.sound.stop(id);\r\n                    s.sound.on(\"fade\", function (id) {\r\n                        if (!this.volume(id)) {\r\n                            console.log(id, \"OUT\");\r\n                            this.stop(id);\r\n                        }\r\n                    }, id);\r\n                    l.push(id);\r\n                }\r\n                if (l.length > 1) audio.sample[a] = l; else audio.sample[a] = l[0];\r\n                audio.player[a] = s.sound;\r\n            }\r\n        }\r\n    };\r\n    this.volume_sample = function (s, p, v) {\r\n        for (var i = 0; i < s.length; i++) p.volume(v, s[i]);\r\n    };\r\n    this.organize_samples = function (samples, player, l1, l2, prefix, volume) {\r\n        var s = samples;\r\n        for (var i = 0; i < l1; i++) {\r\n            var sl = s[i] = [];\r\n            for (j = 0; j < l2; j++) {\r\n                sl[j] = audio.sample[prefix + j][i];\r\n                player.sound.volume(volume, sl[j]);\r\n            }\r\n        }\r\n    };\r\n    this.init = function () {\r\n        audio.load_sound();\r\n        audio.samples.punch = [];\r\n        audio.samples.weapon = [];\r\n        audio.samples.dig = [];\r\n        audio.organize_samples(audio.samples.punch, AUDIO.PUNCH, CONST_AUDIO.PLAYERS, 3, \"p\", 0.15);\r\n        audio.organize_samples(audio.samples.weapon, AUDIO.WEAPON, CONST_AUDIO.PLAYERS, 4, \"w\", 0.15);\r\n        audio.organize_samples(audio.samples.dig, AUDIO.DIG, CONST_AUDIO.PLAYERS, 3, \"d\", 0.09);\r\n        audio.volume_sample(audio.sample.hand, audio.player.hand, 0.15);\r\n        audio.volume_sample(audio.sample.hwood, audio.player.hwood, 0.2);\r\n        audio.volume_sample(audio.sample.hstone, audio.player.hstone, 1);\r\n        audio.area.sea = new SoundArea(CONST_AUDIO.SEA_DELAY, this.sample.seanight, this.sample.seaday, CONST_AUDIO.SEA_FADE, 0.05, 0.4, AUDIO.AMBIENCE.sound, CONST_AUDIO.TRANSITION, {x: SPRITE.SEE_BIOME_X, y: SPRITE.WINTER_BIOME_Y, w: world.w, h: world.h}, {x: SPRITE.SEE_BIOME_X - 2300, y: SPRITE.WINTER_BIOME_Y - 4e3, w: world.w, h: world.h}, {x: SPRITE.SEE_BIOME_X - 1500, y: SPRITE.WINTER_BIOME_Y - 2e3, w: world.w, h: world.h});\r\n        audio.area.forest = new SoundArea(CONST_AUDIO.FOREST_DELAY, this.sample.forestnight, this.sample.forestday, CONST_AUDIO.FOREST_FADE, 0.03, 0.25, AUDIO.AMBIENCE.sound, CONST_AUDIO.TRANSITION, {x: 0, y: SPRITE.WINTER_BIOME_Y + 800, w: SPRITE.SEE_BIOME_X - 2300, h: world.h}, {x: -100, y: SPRITE.WINTER_BIOME_Y - 300, w: SPRITE.SEE_BIOME_X - 100, h: world.h}, {x: -100, y: SPRITE.WINTER_BIOME_Y + 400, w: SPRITE.SEE_BIOME_X - 1400, h: world.h});\r\n        audio.area.snow = new SoundArea(CONST_AUDIO.FOREST_DELAY, this.sample.snownight, this.sample.snowday, CONST_AUDIO.SNOW_FADE, 0.01, 0.22, AUDIO.AMBIENCE.sound, CONST_AUDIO.TRANSITION, {x: -100, y: -100, w: world.w + 200, h: SPRITE.WINTER_BIOME_Y - 1e3}, {x: -100, y: -100, w: world.w + 200, h: SPRITE.WINTER_BIOME_Y + 600}, {x: -100, y: -100, w: world.w + 200, h: SPRITE.WINTER_BIOME_Y + 100});\r\n        for (var i = 0; i < CONST_AUDIO.PLAYERS; i++) audio.players[i] = new SoundPlayer(i);\r\n        audio.players[0].init(user.uid);\r\n        audio.loaded = 1;\r\n    };\r\n    this.launch = function () {\r\n        if (!this.transition && world.clock.now < CONST_AUDIO.DISABLE_EFFECT) this.transition = 1;\r\n    };\r\n    this.quit = function () {\r\n        if (!this.run || !this.loaded) return;\r\n        for (var s in audio.sample) {\r\n            var sound = audio.sample[s];\r\n            if (typeof sound === \"object\") {\r\n                for (var i = 0; i < sound.length; i++) audio.player[s].stop(sound[i]);\r\n            } else audio.player[s].stop(sound);\r\n        }\r\n        for (var i = 0; i < audio.players.length; i++) audio.players[i].clean();\r\n    };\r\n    this.select = function () {\r\n        if (!audio.run) {\r\n            if (!audio.loaded) audio.init();\r\n            audio.players[0].uid = user.uid;\r\n            audio.players[0].free = 0;\r\n            audio.launch();\r\n        } else audio.quit();\r\n        audio.run = !audio.run;\r\n    };\r\n};\r\nif (!window.YMPB) {\r\n    window.YMPB = window.YMPB || {};\r\n    isYolla = 0;\r\n} else isYolla = 1;\r\nwindow.YMPB.que = window.YMPB.que || [];\r\nwindow.aiptag = window.aiptag || {};\r\nwindow.aiptag.consented = true;\r\nwindow.aiptag.cmd = window.aiptag.cmd || [];\r\nwindow.aiptag.cmd.display = window.aiptag.cmd.display || [];\r\nwindow.aiptag.cmd.player = window.aiptag.cmd.player || [];\r\nfunction refreshAds() {\r\n    window.YMPB.refresh();\r\n}\r\n;\r\nfunction yollaCallback() {\r\n    document.getElementById(\"preroll\").style.display = \"none\";\r\n    client.connect();\r\n}\r\n;\r\nvar fun = function () {\r\n    adplayer = new aipPlayer({AD_WIDTH: 960, AD_HEIGHT: 540, AD_FULLSCREEN: true, AD_CENTERPLAYER: true, LOADING_TEXT: \"loading advertisement\", PREROLL_ELEM: function () {\r\n            return document.getElementById(\"preroll\");\r\n        }, AIP_COMPLETE: function () {\r\n            client.connect();\r\n        }, AIP_REMOVE: function () {}});\r\n};\r\nwindow.aiptag.cmd.player.push(fun);\r\nvar ___adsvid = 0;\r\nfunction check_ads() {\r\n    xhttp.open(\"GET\", \"https://cdn.jsdelivr.net/gh/prebid/currency-file@1/latest.json?date=20190929\", true);\r\n    xhttp.send();\r\n}\r\n;\r\n;\r\nvar xhttp = new XMLHttpRequest;\r\nxhttp.onreadystatechange = function () {\r\n    if (this.readyState === 4 && this.status === 0) {}\r\n};\r\nvar DB = \"https://token.starve.io/\";\r\nvar __GOOGLE_LOGIN__ = 0;\r\nvar __FACEBOOK_LOGIN__ = 1;\r\nvar userLoginType = undefined;\r\nvar userToken = undefined;\r\nvar userId = undefined;\r\nvar userData = undefined;\r\nvar userAlreadyLoggedIn = 0;\r\nwindow.onUserLogin = function () {\r\n    userAlreadyLoggedIn = 1;\r\n};\r\nfunction loginWithGoogle() {\r\n    window.gapi.auth2.getAuthInstance().signIn();\r\n}\r\n;\r\nvar ip = undefined;\r\nvar xsolla_options = {access_token: \"ACCESS_TOKEN\"};\r\nvar s = document.createElement(\"script\");\r\ns.type = \"text/javascript\";\r\ns.async = true;\r\ns.src = \"https://static.xsolla.com/embed/paystation/1.0.7/widget.min.js\";\r\ns.addEventListener(\"load\", function (e) {\r\n    window.XPayStationWidget.init(xsolla_options);\r\n    window.XPayStationWidget.on(\"status-done\", claimBread);\r\n}, false);\r\nvar head = document.getElementsByTagName(\"head\")[0];\r\nhead.appendChild(s);\r\nwindow.fbAsyncInit = function () {\r\n    window.FB.init({appId: \"642017356260407\", cookie: true, xfbml: true, version: \"v3.3\"});\r\n    window.FB.AppEvents.logPageView();\r\n    login();\r\n};\r\n(function (d, s, id) {\r\n    var js, fjs = d.getElementsByTagName(s)[0];\r\n    if (d.getElementById(id)) {\r\n        return;\r\n    }\r\n    js = d.createElement(s);\r\n    js.id = id;\r\n    js.src = \"https://connect.facebook.net/en_US/sdk.js\";\r\n    fjs.parentNode.insertBefore(js, fjs);\r\n}(document, \"script\", \"facebook-jssdk\"));\r\nfunction logWithFacebook() {\r\n    window.FB.login(function (response) {\r\n        if (response.authResponse) {\r\n            window.FB.api(\"/me\", function (response) {\r\n                userLoginType = __FACEBOOK_LOGIN__;\r\n                userToken = window.FB.getAuthResponse().accessToken;\r\n                login();\r\n                window.onUserLogin(userId);\r\n            });\r\n        } else {}\r\n    });\r\n}\r\n;\r\nvar auth2 = undefined;\r\nvar googleUser = undefined;\r\nvar appStart = function () {\r\n    window.gapi.load(\"auth2\", initSigninV2);\r\n};\r\nvar initSigninV2 = function () {\r\n    window.gapi.auth2.init({client_id: \"604822901057-k3dp7j5qpl6pnfr86rvi4r2qp20nk1oh.apps.googleusercontent.com\", scope: \"profile\"}).then(gAuth2 => {\r\n        auth2 = gAuth2;\r\n        auth2.isSignedIn.listen(signinChanged);\r\n        auth2.currentUser.listen(userChanged);\r\n        const isSignedIn = auth2.isSignedIn.get();\r\n        if (isSignedIn) auth2.signIn();\r\n        refreshValues();\r\n    });\r\n};\r\nvar signinChanged = function (val) {};\r\nvar userChanged = function (user) {\r\n    login();\r\n    if (userToken === undefined && googleUser !== undefined) {\r\n        userToken = googleUser.getAuthResponse().id_token;\r\n        if (userToken !== undefined) {\r\n            userLoginType = __GOOGLE_LOGIN__;\r\n            window.onUserLogin(userId);\r\n        }\r\n    }\r\n    if (user !== undefined && user.isSignedIn() === true) {\r\n        googleUser = user;\r\n        window.onUserLogin(user.id);\r\n    }\r\n};\r\nvar refreshValues = function () {\r\n    if (auth2) googleUser = auth2.currentUser.get();\r\n};\r\nwindow.onload = function () {\r\n    appStart();\r\n};\r\nfunction logout() {\r\n    if (userLoginType === __FACEBOOK_LOGIN__ && window.FB.getUserID()) window.FB.logout();\r\n    if (userLoginType === __GOOGLE_LOGIN__ && googleUser !== undefined) {\r\n        window.gapi.auth2.getAuthInstance().signOut();\r\n        googleUser = undefined;\r\n    }\r\n    userId = undefined;\r\n    userToken = undefined;\r\n    userLoginType = undefined;\r\n    ui.kit = 0;\r\n    ui.bread = 0;\r\n    ui.score = 0;\r\n    ui.unlock_cosmetics();\r\n    onUserLogout();\r\n}\r\n;\r\nfunction login() {\r\n    if (userId !== undefined) return;\r\n    getUserId();\r\n    if (!userId) return;\r\n}\r\n;\r\nfunction getUserId() {\r\n    try {\r\n        if (window.FB) {\r\n            if (window.FB.getUserID()) {\r\n                userId = window.FB.getUserID();\r\n                if (userToken === undefined) {\r\n                    window.FB.getLoginStatus(function () {\r\n                        userLoginType = __FACEBOOK_LOGIN__;\r\n                        userToken = window.FB.getAuthResponse().accessToken;\r\n                        window.onUserLogin(userId);\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    } catch (e) {}\r\n    try {\r\n        userId = googleUser.getBasicProfile().getId();\r\n    } catch (e) {}\r\n}\r\n;\r\nfunction openXsolla(amount) {\r\n    if (!userId) return;\r\n    var xhr = new XMLHttpRequest;\r\n    xhr.open(\"GET\", DB + \"xsolla?userid=\" + userId + \"&item=\" + amount);\r\n    xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n    xhr.onreadystatechange = function () {\r\n        if (this.readyState == 4 && this.status == 200) {\r\n            if (xhr.responseText !== \"0\") {\r\n                xsolla_options.access_token = xhr.responseText;\r\n                window.XPayStationWidget.init(xsolla_options);\r\n                window.XPayStationWidget.open();\r\n            }\r\n        }\r\n    };\r\n    xhr.send();\r\n}\r\n;\r\nfunction getUserDetails(_callback) {\r\n    var xhr = new XMLHttpRequest;\r\n    xhr.open(\"GET\", DB + \"login?token=\" + userToken + \"&type=\" + userLoginType);\r\n    xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n    xhr.onreadystatechange = function () {\r\n        if (this.readyState === 4 && this.status === 200) {\r\n            if (xhr.responseText !== \"0\") _callback(JSON.parse(xhr.responseText));\r\n        }\r\n    };\r\n    xhr.send();\r\n}\r\n;\r\nfunction rebootServer() {\r\n    var xhr = new XMLHttpRequest;\r\n    xhr.open(\"GET\", DB + \"rebootServer?token=\" + userToken + \"&userid=\" + userId);\r\n    xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n    xhr.onreadystatechange = function () {\r\n        if (this.readyState === 4 && this.status === 200) {\r\n            if (xhr.responseText !== \"0\") location.href = document.getElementById(\"serverAddressInput\").value;\r\n        }\r\n    };\r\n    xhr.send();\r\n}\r\n;\r\nfunction regionPreference(region) {\r\n    var xhr = new XMLHttpRequest;\r\n    xhr.open(\"GET\", DB + \"setRegion?token=\" + userToken + \"&userid=\" + userId + \"&region=\" + region);\r\n    xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n    xhr.onreadystatechange = function () {\r\n        if (this.readyState === 4 && this.status === 200) {\r\n            if (xhr.responseText !== \"0\") ui.select_subview(ui.__SERVER_DURATION__); else ui.select_subview(ui.__GAME__);\r\n        }\r\n    };\r\n    xhr.send();\r\n}\r\n;\r\nfunction buySpin(spinId, bread) {\r\n    if (ui.spin > 0) return;\r\n    if (ui.bread < bread) {\r\n        ui.select_subview(ui.__BUY__);\r\n        return;\r\n    }\r\n    ui.spin = 2;\r\n    ui.spin_effect = 0;\r\n    ui.spin_target = 100;\r\n    var xhr = new XMLHttpRequest;\r\n    xhr.open(\"GET\", DB + \"buySpin?token=\" + userToken + \"&userid=\" + userId + \"&spin=\" + spinId);\r\n    xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n    xhr.onreadystatechange = function () {\r\n        if (this.readyState == 4 && this.status == 200) {\r\n            if (xhr.responseText !== \"0\") {\r\n                var data = JSON.parse(xhr.responseText);\r\n                ui.play_spin(data.rand * Math.PI * 2, data.type, data.id);\r\n                ui.bread -= bread;\r\n            } else ui.spin = 0;\r\n        }\r\n    };\r\n    xhr.send();\r\n}\r\n;\r\nfunction buyNameChanger() {\r\n    if (ui.bread < 300 && ui.firstName > 0) return;\r\n    var nickname = document.getElementById(\"account_nickname_input\").value.trim();\r\n    document.getElementById(\"account_nickname_input\").value = nickname;\r\n    if (nickname.length < 1 || nickname.length > 20) return;\r\n    var xhr = new XMLHttpRequest;\r\n    xhr.open(\"GET\", DB + \"changeNickname?token=\" + userToken + \"&userid=\" + userId + \"&nickname=\" + encodeURIComponent(nickname));\r\n    xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n    xhr.onreadystatechange = function () {\r\n        if (this.readyState == 4 && this.status == 200) {\r\n            if (xhr.responseText !== \"0\") {\r\n                var bread = Number(xhr.responseText);\r\n                if (bread > 0) ui.bread -= bread;\r\n                ui.firstName = 1;\r\n                ui.select_subview(ui.__PROFILE__);\r\n            }\r\n        }\r\n    };\r\n    xhr.send();\r\n}\r\n;\r\nfunction buyKit(kitId, bread) {\r\n    if (ui.bread < bread) {\r\n        ui.select_subview(ui.__BUY__);\r\n        return;\r\n    }\r\n    var xhr = new XMLHttpRequest;\r\n    xhr.open(\"GET\", DB + \"buyKit?token=\" + userToken + \"&userid=\" + userId + \"&kit=\" + kitId);\r\n    xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n    xhr.onreadystatechange = function () {\r\n        if (this.readyState == 4 && this.status == 200) {\r\n            if (xhr.responseText !== \"0\") {\r\n                var data = JSON.parse(xhr.responseText);\r\n                ui.bread -= bread;\r\n                ui.kit = Date.now() + Number(data);\r\n            }\r\n        }\r\n    };\r\n    xhr.send();\r\n}\r\n;\r\nfunction claimBread() {\r\n    var xhr = new XMLHttpRequest;\r\n    xhr.open(\"GET\", DB + \"claimBread?userid=\" + userId);\r\n    xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n    xhr.onreadystatechange = function () {\r\n        if (this.readyState == 4 && this.status == 200) {\r\n            if (xhr.responseText !== \"0\") {\r\n                var bread = Number(xhr.responseText);\r\n                if (!isNaN(bread)) ui.bread = bread;\r\n            }\r\n        }\r\n    };\r\n    xhr.send();\r\n}\r\n;\r\nfunction getBreadAndScore() {\r\n    var xhr = new XMLHttpRequest;\r\n    xhr.open(\"GET\", DB + \"getBreadAndScore?userid=\" + userId);\r\n    xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n    xhr.onreadystatechange = function () {\r\n        if (this.readyState == 4 && this.status == 200) {\r\n            if (xhr.responseText !== \"0\") {\r\n                var data = JSON.parse(xhr.responseText);\r\n                var d = data.b - ui.bread;\r\n                ui.bread = data.b;\r\n                ui.score = data.s;\r\n                ui.lvl = ui.level_formula(ui.score);\r\n                ui.xp_dest = ui.xp_formula(ui.score);\r\n                ui.xp = 0;\r\n                document.getElementById(\"breadWonInner\").innerHTML = \"\" + d;\r\n            }\r\n        }\r\n    };\r\n    xhr.send();\r\n}\r\n;\r\nfunction sendCheat() {\r\n    xhr.open(\"GET\", DB + \"getScore?userid=\" + userId);\r\n    xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n    xhr.onreadystatechange = function () {\r\n        if (this.readyState == 4 && this.status == 200) {\r\n            if (xhr.responseText !== \"0\") var data = JSON.parse(xhr.responseText);\r\n        }\r\n    };\r\n    xhr.send();\r\n}\r\n;\r\nfunction getLeaderboard(range, mode, sorted, season) {\r\n    range = range === undefined ? ui.leaderboard_range : range;\r\n    mode = mode === undefined ? ui.leaderboard_mode : mode;\r\n    sorted = sorted === undefined ? ui.leaderboard_sorted : sorted;\r\n    season = season === undefined ? ui.leaderboard_season : season;\r\n    if (range === ui.leaderboard_range && mode === ui.leaderboard_mode && sorted === ui.leaderboard_sorted && season === ui.leaderboard_season) return;\r\n    ui.leaderboard_range = range;\r\n    ui.leaderboard_mode = mode;\r\n    ui.leaderboard_sorted = sorted;\r\n    ui.leaderboard_season = season;\r\n    if (ui.LEADERBOARD_SEASON1 === season) season = \"0\"; else if (ui.LEADERBOARD_SEASON2 === season) season = \"1\"; else if (ui.LEADERBOARD_SEASON3 === season) season = \"2\"; else if (ui.LEADERBOARD_SEASON4 === season) season = \"3\";\r\n    if (ui.LEADERBOARD_TOTAL === mode) mode = \"total\"; else if (ui.LEADERBOARD_NORMAL === mode) mode = \"normal\"; else if (ui.LEADERBOARD_ZOMBIE === mode) mode = \"zombie\"; else if (ui.LEADERBOARD_VAMPIRE === mode) mode = \"vampire\"; else if (ui.LEADERBOARD_FOREST === mode) mode = \"forest\";\r\n    if (ui.LEADERBOARD_ALL === range) range = \"all\";\r\n    if (ui.LEADERBOARD_WEEK === range) range = \"week\";\r\n    if (ui.LEADERBOARD_TODAY === range) range = \"today\";\r\n    if (ui.LEADERBOARD_KILL === sorted) sorted = \"kill\"; else if (ui.LEADERBOARD_SCORE === sorted) sorted = \"score\"; else if (ui.LEADERBOARD_TIME === sorted) sorted = \"time\";\r\n    var xhr = new XMLHttpRequest;\r\n    xhr.open(\"GET\", DB + \"leaderboard?range=\" + range + \"&mode=\" + mode + \"&sort=\" + sorted + \"&season=\" + season);\r\n    xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n    xhr.onreadystatechange = function () {\r\n        if (this.readyState == 4 && this.status == 200) {\r\n            if (xhr.responseText !== \"0\") {\r\n                var data = JSON.parse(xhr.responseText);\r\n                var leaderboard = \"\";\r\n                for (var i = 0; i < data.length; i++) {\r\n                    line = data[i];\r\n                    var nickname = line[1];\r\n                    if (nickname.indexOf(\"Starver#\") === -1) nickname = window.decodeURIComponent(window.escape(window.atob(nickname)));\r\n                    leaderboard += '<div class=\"lineLeaderboard\">';\r\n                    leaderboard += '<div class=\"rank\">';\r\n                    leaderboard += i + 1 + \"\";\r\n                    leaderboard += \"</div>\";\r\n                    leaderboard += '<div class=\"name\">';\r\n                    leaderboard += nickname;\r\n                    leaderboard += \"</div>\";\r\n                    leaderboard += '<div class=\"lvl\">';\r\n                    leaderboard += ui.level_formula(line[6]) + 1 + \"\";\r\n                    leaderboard += \"</div>\";\r\n                    leaderboard += '<div class=\"kills\">';\r\n                    leaderboard += line[5] + \"\";\r\n                    leaderboard += \"</div>\";\r\n                    leaderboard += '<div class=\"time\">';\r\n                    leaderboard += line[4] + \"\";\r\n                    leaderboard += \"</div>\";\r\n                    leaderboard += '<div class=\"score\">';\r\n                    leaderboard += line[3] + \"\";\r\n                    leaderboard += \"</div>\";\r\n                    leaderboard += \"</div>\";\r\n                }\r\n                document.getElementById(\"leaderboard\").innerHTML = leaderboard;\r\n            }\r\n        }\r\n    };\r\n    xhr.send();\r\n}\r\n;\r\nmobile = 0;\r\nfetchPageViewCanidate();\r\ndocument.getElementById(\"version\").innerHTML = \"\" + CLIENT.VERSION_NUMBER + \".3\";\r\nvar MAP = [];\r\nvar fake_world = {time: Math.floor(Math.random() * 2), items: []};\r\ninit_fake_world();\r\nclient = new NetworkClient;\r\nvar ui;\r\nvar game = {is_run: false};\r\nvar world;\r\nvar user;\r\nvar scoreboard;\r\nvar audio = new MyAudio;\r\nvar keyboard = new Keyboard;\r\nvar mouse = new Mouse;\r\nvar delta = 0, old_timestamp = 0;\r\nvar fps = {img: false, counter: 0, delay: 0, cycle: 60, display: true};\r\nvar loader = new Loader(can, ctx, function () {\r\n    create_images();\r\n    game = new Game(can, ctx);\r\n    ui = new UI(can, ctx);\r\n    ui.login_after();\r\n    scoreboard = new Scoreboard(can, ctx);\r\n    world = new World;\r\n    user = new User;\r\n    loader.quit(function () {\r\n        loader.logo.style.display = \"none\";\r\n        ui.run();\r\n    });\r\n});\r\nfunction draw(timestamp) {\r\n    window.requestAnimationFrame(draw);\r\n    delta = (timestamp - old_timestamp) / 1e3;\r\n    old_timestamp = timestamp;\r\n    delta = delta > 1 ? 1 : delta;\r\n    if (game.is_run) {\r\n        game.draw();\r\n    } else {\r\n        ctx.clearRect(0, 0, canw, canh);\r\n        if (loader.is_run) loader.draw(); else if (ui.is_run) ui.draw(); else if (scoreboard.is_run) scoreboard.draw();\r\n    }\r\n}\r\n;\r\nwindow.onbeforeunload = function () {\r\n    if (game.is_run) return \"Are you sure you want quit starve.io ;-; ?\";\r\n};\r\nresize_canvas();\r\ndraw(0);\n\n//# sourceURL=webpack://dark_script/./public/src/main.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./public/src/main.js");
/******/ 	
/******/ })()
;
